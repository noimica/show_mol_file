{"map":"{\"version\":3,\"sources\":[\"webpack/bootstrap\",\"D:\\\\htdocs\\\\show_mol_file\\\\node_modules\\\\ts-loader\\\\index.js??ref--4!D:\\\\htdocs\\\\show_mol_file\\\\app.ts\",\"D:\\\\htdocs\\\\show_mol_file\\\\node_modules\\\\jquery\\\\dist\\\\jquery.js\",\"D:\\\\htdocs\\\\show_mol_file\\\\node_modules\\\\three-js\\\\index.js\",\"D:\\\\htdocs\\\\show_mol_file\\\\node_modules\\\\three-js\\\\three.js\",\"D:\\\\htdocs\\\\show_mol_file\\\\node_modules\\\\webpack\\\\buildin\\\\amd-define.js\",\"D:\\\\htdocs\\\\show_mol_file\\\\node_modules\\\\webpack\\\\buildin\\\\amd-options.js\",\"D:\\\\htdocs\\\\show_mol_file\\\\node_modules\\\\three-js\\\\addons sync /^\\\\.\\\\/.*\\\\.js$/\",\"D:\\\\htdocs\\\\show_mol_file\\\\node_modules\\\\three-js\\\\addons\\\\AdaptiveToneMappingPass.js\",\"D:\\\\htdocs\\\\show_mol_file\\\\node_modules\\\\three-js\\\\addons\\\\BasicShader.js\",\"D:\\\\htdocs\\\\show_mol_file\\\\node_modules\\\\three-js\\\\addons\\\\BleachBypassShader.js\",\"D:\\\\htdocs\\\\show_mol_file\\\\node_modules\\\\three-js\\\\addons\\\\BlendShader.js\",\"D:\\\\htdocs\\\\show_mol_file\\\\node_modules\\\\three-js\\\\addons\\\\BloomPass.js\",\"D:\\\\htdocs\\\\show_mol_file\\\\node_modules\\\\three-js\\\\addons\\\\BokehPass.js\",\"D:\\\\htdocs\\\\show_mol_file\\\\node_modules\\\\three-js\\\\addons\\\\BokehShader.js\",\"D:\\\\htdocs\\\\show_mol_file\\\\node_modules\\\\three-js\\\\addons\\\\BokehShader2.js\",\"D:\\\\htdocs\\\\show_mol_file\\\\node_modules\\\\three-js\\\\addons\\\\BrightnessContrastShader.js\",\"D:\\\\htdocs\\\\show_mol_file\\\\node_modules\\\\three-js\\\\addons\\\\CanvasRenderer.js\",\"D:\\\\htdocs\\\\show_mol_file\\\\node_modules\\\\three-js\\\\addons\\\\ColorCorrectionShader.js\",\"D:\\\\htdocs\\\\show_mol_file\\\\node_modules\\\\three-js\\\\addons\\\\ColorifyShader.js\",\"D:\\\\htdocs\\\\show_mol_file\\\\node_modules\\\\three-js\\\\addons\\\\ConvolutionShader.js\",\"D:\\\\htdocs\\\\show_mol_file\\\\node_modules\\\\three-js\\\\addons\\\\CopyShader.js\",\"D:\\\\htdocs\\\\show_mol_file\\\\node_modules\\\\three-js\\\\addons\\\\DDSLoader.js\",\"D:\\\\htdocs\\\\show_mol_file\\\\node_modules\\\\three-js\\\\addons\\\\DOFMipMapShader.js\",\"D:\\\\htdocs\\\\show_mol_file\\\\node_modules\\\\three-js\\\\addons\\\\DigitalGlitch.js\",\"D:\\\\htdocs\\\\show_mol_file\\\\node_modules\\\\three-js\\\\addons\\\\DotScreenPass.js\",\"D:\\\\htdocs\\\\show_mol_file\\\\node_modules\\\\three-js\\\\addons\\\\DotScreenShader.js\",\"D:\\\\htdocs\\\\show_mol_file\\\\node_modules\\\\three-js\\\\addons\\\\EdgeShader.js\",\"D:\\\\htdocs\\\\show_mol_file\\\\node_modules\\\\three-js\\\\addons\\\\EdgeShader2.js\",\"D:\\\\htdocs\\\\show_mol_file\\\\node_modules\\\\three-js\\\\addons\\\\EffectComposer.js\",\"D:\\\\htdocs\\\\show_mol_file\\\\node_modules\\\\three-js\\\\addons\\\\FXAAShader.js\",\"D:\\\\htdocs\\\\show_mol_file\\\\node_modules\\\\three-js\\\\addons\\\\FilmPass.js\",\"D:\\\\htdocs\\\\show_mol_file\\\\node_modules\\\\three-js\\\\addons\\\\FilmShader.js\",\"D:\\\\htdocs\\\\show_mol_file\\\\node_modules\\\\three-js\\\\addons\\\\FocusShader.js\",\"D:\\\\htdocs\\\\show_mol_file\\\\node_modules\\\\three-js\\\\addons\\\\FresnelShader.js\",\"D:\\\\htdocs\\\\show_mol_file\\\\node_modules\\\\three-js\\\\addons\\\\GammaCorrectionShader.js\",\"D:\\\\htdocs\\\\show_mol_file\\\\node_modules\\\\three-js\\\\addons\\\\GlitchPass.js\",\"D:\\\\htdocs\\\\show_mol_file\\\\node_modules\\\\three-js\\\\addons\\\\HorizontalBlurShader.js\",\"D:\\\\htdocs\\\\show_mol_file\\\\node_modules\\\\three-js\\\\addons\\\\HorizontalTiltShiftShader.js\",\"D:\\\\htdocs\\\\show_mol_file\\\\node_modules\\\\three-js\\\\addons\\\\HueSaturationShader.js\",\"D:\\\\htdocs\\\\show_mol_file\\\\node_modules\\\\three-js\\\\addons\\\\JSONLoader.js\",\"D:\\\\htdocs\\\\show_mol_file\\\\node_modules\\\\three-js\\\\addons\\\\KaleidoShader.js\",\"D:\\\\htdocs\\\\show_mol_file\\\\node_modules\\\\three-js\\\\addons\\\\LuminosityShader.js\",\"D:\\\\htdocs\\\\show_mol_file\\\\node_modules\\\\three-js\\\\addons\\\\MTLLoader.js\",\"D:\\\\htdocs\\\\show_mol_file\\\\node_modules\\\\three-js\\\\addons\\\\MarchingCubes.js\",\"D:\\\\htdocs\\\\show_mol_file\\\\node_modules\\\\three-js\\\\addons\\\\MaskPass.js\",\"D:\\\\htdocs\\\\show_mol_file\\\\node_modules\\\\three-js\\\\addons\\\\MirrorShader.js\",\"D:\\\\htdocs\\\\show_mol_file\\\\node_modules\\\\three-js\\\\addons\\\\NormalMapShader.js\",\"D:\\\\htdocs\\\\show_mol_file\\\\node_modules\\\\three-js\\\\addons\\\\OBJLoader.js\",\"D:\\\\htdocs\\\\show_mol_file\\\\node_modules\\\\three-js\\\\addons\\\\OceanShaders.js\",\"D:\\\\htdocs\\\\show_mol_file\\\\node_modules\\\\three-js\\\\addons\\\\OrbitControls.js\",\"D:\\\\htdocs\\\\show_mol_file\\\\node_modules\\\\three-js\\\\addons\\\\ParallaxShader.js\",\"D:\\\\htdocs\\\\show_mol_file\\\\node_modules\\\\three-js\\\\addons\\\\Projector.js\",\"D:\\\\htdocs\\\\show_mol_file\\\\node_modules\\\\three-js\\\\addons\\\\RGBShiftShader.js\",\"D:\\\\htdocs\\\\show_mol_file\\\\node_modules\\\\three-js\\\\addons\\\\RenderPass.js\",\"D:\\\\htdocs\\\\show_mol_file\\\\node_modules\\\\three-js\\\\addons\\\\SSAOShader.js\",\"D:\\\\htdocs\\\\show_mol_file\\\\node_modules\\\\three-js\\\\addons\\\\SVGLoader.js\",\"D:\\\\htdocs\\\\show_mol_file\\\\node_modules\\\\three-js\\\\addons\\\\SavePass.js\",\"D:\\\\htdocs\\\\show_mol_file\\\\node_modules\\\\three-js\\\\addons\\\\SepiaShader.js\",\"D:\\\\htdocs\\\\show_mol_file\\\\node_modules\\\\three-js\\\\addons\\\\ShaderPass.js\",\"D:\\\\htdocs\\\\show_mol_file\\\\node_modules\\\\three-js\\\\addons\\\\TechnicolorShader.js\",\"D:\\\\htdocs\\\\show_mol_file\\\\node_modules\\\\three-js\\\\addons\\\\TexturePass.js\",\"D:\\\\htdocs\\\\show_mol_file\\\\node_modules\\\\three-js\\\\addons\\\\ToneMapShader.js\",\"D:\\\\htdocs\\\\show_mol_file\\\\node_modules\\\\three-js\\\\addons\\\\TriangleBlurShader.js\",\"D:\\\\htdocs\\\\show_mol_file\\\\node_modules\\\\three-js\\\\addons\\\\UnpackDepthRGBAShader.js\",\"D:\\\\htdocs\\\\show_mol_file\\\\node_modules\\\\three-js\\\\addons\\\\VerticalBlurShader.js\",\"D:\\\\htdocs\\\\show_mol_file\\\\node_modules\\\\three-js\\\\addons\\\\VerticalTiltShiftShader.js\",\"D:\\\\htdocs\\\\show_mol_file\\\\node_modules\\\\three-js\\\\addons\\\\VignetteShader.js\"],\"names\":[\"installedModules\",\"__webpack_require__\",\"moduleId\",\"exports\",\"module\",\"i\",\"l\",\"modules\",\"call\",\"m\",\"c\",\"d\",\"name\",\"getter\",\"o\",\"Object\",\"defineProperty\",\"enumerable\",\"get\",\"r\",\"Symbol\",\"toStringTag\",\"value\",\"t\",\"mode\",\"__esModule\",\"ns\",\"create\",\"key\",\"bind\",\"n\",\"object\",\"property\",\"prototype\",\"hasOwnProperty\",\"p\",\"s\",\"$\",\"THREE\",\"TEXT\",\"parent\",\"this\",\"_parent\",\"_div\",\"document\",\"createElement\",\"className\",\"style\",\"position\",\"width\",\"height\",\"color\",\"innerHTML\",\"top\",\"left\",\"Vector3\",\"set\",\"x\",\"y\",\"z\",\"html\",\"configurable\",\"update\",\"camera\",\"coords2d\",\"get2DCoords\",\"vector\",\"project\",\"window\",\"innerWidth\",\"innerHeight\",\"MOL_BALL\",\"atom\",\"id\",\"_atom\",\"toUpperCase\",\"_x\",\"_y\",\"_z\",\"show_id\",\"show_name\",\"geometry\",\"SphereGeometry\",\"_material\",\"MeshStandardMaterial\",\"roughness\",\"_ball\",\"Mesh\",\"material\",\"ball\",\"_text\",\"text\",\"showID\",\"toString\",\"hideID\",\"showName\",\"hideName\",\"setbond\",\"mol\",\"bond_n\",\"pointY\",\"pointX\",\"materialX\",\"materialY\",\"direction\",\"subVectors\",\"direction_clone\",\"clone\",\"normalize\",\"arrow\",\"ArrowHelper\",\"offset\",\"edge\",\"Group\",\"edgeGeometry\",\"CylinderGeometry\",\"length\",\"_edge\",\"add\",\"rotation\",\"pos\",\"addVectors\",\"multiplyScalar\",\"cylinderMesh\",\"MOL_FILE\",\"_this\",\"_mols\",\"_bonds\",\"_atoms\",\"str\",\"getUrlVars\",\"lines\",\"split\",\"head_data\",\"trim\",\"mols_length\",\"parseInt\",\"bonds_length\",\"console\",\"log\",\"counter\",\"slice\",\"forEach\",\"line\",\"mols_s\",\"parseFloat\",\"bonds_s\",\"normize\",\"max\",\"hash\",\"vars\",\"location\",\"search\",\"array_1\",\"push\",\"decodeURIComponent\",\"norm\",\"APP\",\"$mainFrame\",\"scene\",\"Scene\",\"_camera\",\"PerspectiveCamera\",\"renderer\",\"WebGLRenderer\",\"setSize\",\"append\",\"domElement\",\"init\",\"controls\",\"OrbitControls\",\"axisHelper\",\"AxisHelper\",\"gridHelper\",\"GridHelper\",\"light1\",\"AmbientLight\",\"light2\",\"DirectionalLight\",\"molfile\",\"_balls\",\"Array\",\"mols\",\"atoms\",\"div\",\"bonds\",\"render\",\"app\",\"requestAnimationFrame\",\"keypress\",\"eventObject\",\"click\",\"prop\",\"balls\",\"__WEBPACK_AMD_DEFINE_RESULT__\",\"global\",\"factory\",\"w\",\"Error\",\"noGlobal\",\"arr\",\"getProto\",\"getPrototypeOf\",\"concat\",\"indexOf\",\"class2type\",\"hasOwn\",\"fnToString\",\"ObjectFunctionString\",\"support\",\"isFunction\",\"obj\",\"nodeType\",\"isWindow\",\"preservedScriptAttributes\",\"type\",\"src\",\"nonce\",\"noModule\",\"DOMEval\",\"code\",\"node\",\"doc\",\"val\",\"script\",\"getAttribute\",\"setAttribute\",\"head\",\"appendChild\",\"parentNode\",\"removeChild\",\"toType\",\"jQuery\",\"selector\",\"context\",\"fn\",\"rtrim\",\"isArrayLike\",\"jquery\",\"constructor\",\"toArray\",\"num\",\"pushStack\",\"elems\",\"ret\",\"merge\",\"prevObject\",\"each\",\"callback\",\"map\",\"elem\",\"apply\",\"arguments\",\"first\",\"eq\",\"last\",\"len\",\"j\",\"end\",\"sort\",\"splice\",\"extend\",\"options\",\"copy\",\"copyIsArray\",\"target\",\"deep\",\"isPlainObject\",\"isArray\",\"undefined\",\"expando\",\"Math\",\"random\",\"replace\",\"isReady\",\"error\",\"msg\",\"noop\",\"proto\",\"Ctor\",\"isEmptyObject\",\"globalEval\",\"makeArray\",\"results\",\"inArray\",\"second\",\"grep\",\"invert\",\"matches\",\"callbackExpect\",\"arg\",\"guid\",\"iterator\",\"toLowerCase\",\"Sizzle\",\"Expr\",\"getText\",\"isXML\",\"tokenize\",\"compile\",\"select\",\"outermostContext\",\"sortInput\",\"hasDuplicate\",\"setDocument\",\"docElem\",\"documentIsHTML\",\"rbuggyQSA\",\"rbuggyMatches\",\"contains\",\"Date\",\"preferredDoc\",\"dirruns\",\"done\",\"classCache\",\"createCache\",\"tokenCache\",\"compilerCache\",\"nonnativeSelectorCache\",\"sortOrder\",\"a\",\"b\",\"pop\",\"push_native\",\"list\",\"booleans\",\"whitespace\",\"identifier\",\"attributes\",\"pseudos\",\"rwhitespace\",\"RegExp\",\"rcomma\",\"rcombinators\",\"rdescend\",\"rpseudo\",\"ridentifier\",\"matchExpr\",\"ID\",\"CLASS\",\"TAG\",\"ATTR\",\"PSEUDO\",\"CHILD\",\"bool\",\"needsContext\",\"rhtml\",\"rinputs\",\"rheader\",\"rnative\",\"rquickExpr\",\"rsibling\",\"runescape\",\"funescape\",\"_\",\"escaped\",\"escapedWhitespace\",\"high\",\"String\",\"fromCharCode\",\"rcssescape\",\"fcssescape\",\"ch\",\"asCodePoint\",\"charCodeAt\",\"unloadHandler\",\"inDisabledFieldset\",\"addCombinator\",\"disabled\",\"nodeName\",\"dir\",\"next\",\"childNodes\",\"e\",\"els\",\"seed\",\"nid\",\"match\",\"groups\",\"newSelector\",\"newContext\",\"ownerDocument\",\"exec\",\"getElementById\",\"getElementsByTagName\",\"getElementsByClassName\",\"qsa\",\"test\",\"toSelector\",\"join\",\"testContext\",\"querySelectorAll\",\"qsaError\",\"removeAttribute\",\"keys\",\"cache\",\"cacheLength\",\"shift\",\"markFunction\",\"assert\",\"el\",\"addHandle\",\"attrs\",\"handler\",\"attrHandle\",\"siblingCheck\",\"cur\",\"diff\",\"sourceIndex\",\"nextSibling\",\"createInputPseudo\",\"createButtonPseudo\",\"createDisabledPseudo\",\"isDisabled\",\"createPositionalPseudo\",\"argument\",\"matchIndexes\",\"namespace\",\"namespaceURI\",\"documentElement\",\"hasCompare\",\"subWindow\",\"defaultView\",\"addEventListener\",\"attachEvent\",\"createComment\",\"getById\",\"getElementsByName\",\"filter\",\"attrId\",\"find\",\"getAttributeNode\",\"tag\",\"tmp\",\"input\",\"matchesSelector\",\"webkitMatchesSelector\",\"mozMatchesSelector\",\"oMatchesSelector\",\"msMatchesSelector\",\"disconnectedMatch\",\"compareDocumentPosition\",\"adown\",\"bup\",\"compare\",\"sortDetached\",\"aup\",\"ap\",\"bp\",\"unshift\",\"expr\",\"elements\",\"attr\",\"specified\",\"escape\",\"sel\",\"uniqueSort\",\"duplicates\",\"detectDuplicates\",\"sortStable\",\"textContent\",\"firstChild\",\"nodeValue\",\"selectors\",\"createPseudo\",\"relative\",\">\",\" \",\"+\",\"~\",\"preFilter\",\"excess\",\"unquoted\",\"nodeNameSelector\",\"pattern\",\"operator\",\"check\",\"result\",\"what\",\"simple\",\"forward\",\"ofType\",\"xml\",\"uniqueCache\",\"outerCache\",\"nodeIndex\",\"start\",\"useCache\",\"lastChild\",\"uniqueID\",\"pseudo\",\"args\",\"setFilters\",\"idx\",\"matched\",\"not\",\"matcher\",\"unmatched\",\"has\",\"lang\",\"elemLang\",\"root\",\"focus\",\"activeElement\",\"hasFocus\",\"href\",\"tabIndex\",\"enabled\",\"checked\",\"selected\",\"selectedIndex\",\"empty\",\"header\",\"button\",\"even\",\"odd\",\"lt\",\"gt\",\"radio\",\"checkbox\",\"file\",\"password\",\"image\",\"submit\",\"reset\",\"tokens\",\"combinator\",\"base\",\"skip\",\"checkNonElements\",\"doneName\",\"oldCache\",\"newCache\",\"elementMatcher\",\"matchers\",\"condense\",\"newUnmatched\",\"mapped\",\"setMatcher\",\"postFilter\",\"postFinder\",\"postSelector\",\"temp\",\"preMap\",\"postMap\",\"preexisting\",\"contexts\",\"multipleContexts\",\"matcherIn\",\"matcherOut\",\"matcherFromTokens\",\"checkContext\",\"leadingRelative\",\"implicitRelative\",\"matchContext\",\"matchAnyContext\",\"filters\",\"parseOnly\",\"soFar\",\"preFilters\",\"cached\",\"setMatchers\",\"elementMatchers\",\"bySet\",\"byElement\",\"superMatcher\",\"outermost\",\"matchedCount\",\"setMatched\",\"contextBackup\",\"dirrunsUnique\",\"matcherFromGroupMatchers\",\"token\",\"compiled\",\"defaultValue\",\"unique\",\"isXMLDoc\",\"escapeSelector\",\"until\",\"truncate\",\"is\",\"siblings\",\"rneedsContext\",\"rsingleTag\",\"winnow\",\"qualifier\",\"self\",\"rootjQuery\",\"parseHTML\",\"ready\",\"rparentsprev\",\"guaranteedUnique\",\"children\",\"contents\",\"prev\",\"sibling\",\"targets\",\"closest\",\"index\",\"prevAll\",\"addBack\",\"parents\",\"parentsUntil\",\"nextAll\",\"nextUntil\",\"prevUntil\",\"contentDocument\",\"content\",\"reverse\",\"rnothtmlwhite\",\"Identity\",\"v\",\"Thrower\",\"ex\",\"adoptValue\",\"resolve\",\"reject\",\"noValue\",\"method\",\"promise\",\"fail\",\"then\",\"Callbacks\",\"flag\",\"createOptions\",\"firing\",\"memory\",\"fired\",\"locked\",\"queue\",\"firingIndex\",\"fire\",\"once\",\"stopOnFalse\",\"remove\",\"disable\",\"lock\",\"fireWith\",\"Deferred\",\"func\",\"tuples\",\"state\",\"always\",\"deferred\",\"catch\",\"pipe\",\"fns\",\"newDefer\",\"tuple\",\"returned\",\"progress\",\"notify\",\"onFulfilled\",\"onRejected\",\"onProgress\",\"maxDepth\",\"depth\",\"special\",\"that\",\"mightThrow\",\"TypeError\",\"notifyWith\",\"resolveWith\",\"process\",\"exceptionHook\",\"stackTrace\",\"rejectWith\",\"getStackHook\",\"setTimeout\",\"stateString\",\"when\",\"singleValue\",\"remaining\",\"resolveContexts\",\"resolveValues\",\"master\",\"updateFunc\",\"rerrorNames\",\"stack\",\"warn\",\"message\",\"readyException\",\"readyList\",\"completed\",\"removeEventListener\",\"readyWait\",\"wait\",\"readyState\",\"doScroll\",\"access\",\"chainable\",\"emptyGet\",\"raw\",\"bulk\",\"rmsPrefix\",\"rdashAlpha\",\"fcamelCase\",\"all\",\"letter\",\"camelCase\",\"string\",\"acceptData\",\"owner\",\"Data\",\"uid\",\"data\",\"hasData\",\"dataPriv\",\"dataUser\",\"rbrace\",\"rmultiDash\",\"dataAttr\",\"JSON\",\"parse\",\"getData\",\"removeData\",\"_data\",\"_removeData\",\"dequeue\",\"startLength\",\"hooks\",\"_queueHooks\",\"stop\",\"setter\",\"clearQueue\",\"count\",\"defer\",\"pnum\",\"source\",\"rcssNum\",\"cssExpand\",\"isAttached\",\"composed\",\"getRootNode\",\"isHiddenWithinTree\",\"display\",\"css\",\"swap\",\"old\",\"adjustCSS\",\"valueParts\",\"tween\",\"adjusted\",\"scale\",\"maxIterations\",\"currentValue\",\"initial\",\"unit\",\"cssNumber\",\"initialInUnit\",\"defaultDisplayMap\",\"getDefaultDisplay\",\"body\",\"showHide\",\"show\",\"values\",\"hide\",\"toggle\",\"rcheckableType\",\"rtagName\",\"rscriptType\",\"wrapMap\",\"option\",\"thead\",\"col\",\"tr\",\"td\",\"_default\",\"getAll\",\"setGlobalEval\",\"refElements\",\"optgroup\",\"tbody\",\"tfoot\",\"colgroup\",\"caption\",\"th\",\"buildFragment\",\"scripts\",\"selection\",\"ignored\",\"wrap\",\"attached\",\"fragment\",\"createDocumentFragment\",\"nodes\",\"htmlPrefilter\",\"createTextNode\",\"checkClone\",\"cloneNode\",\"noCloneChecked\",\"rkeyEvent\",\"rmouseEvent\",\"rtypenamespace\",\"returnTrue\",\"returnFalse\",\"expectSync\",\"err\",\"safeActiveElement\",\"on\",\"types\",\"one\",\"origFn\",\"event\",\"off\",\"leverageNative\",\"notAsync\",\"saved\",\"isTrigger\",\"delegateType\",\"stopPropagation\",\"stopImmediatePropagation\",\"preventDefault\",\"trigger\",\"Event\",\"handleObjIn\",\"eventHandle\",\"events\",\"handleObj\",\"handlers\",\"namespaces\",\"origType\",\"elemData\",\"handle\",\"triggered\",\"dispatch\",\"bindType\",\"delegateCount\",\"setup\",\"mappedTypes\",\"origCount\",\"teardown\",\"removeEvent\",\"nativeEvent\",\"handlerQueue\",\"fix\",\"delegateTarget\",\"preDispatch\",\"isPropagationStopped\",\"currentTarget\",\"isImmediatePropagationStopped\",\"rnamespace\",\"postDispatch\",\"matchedHandlers\",\"matchedSelectors\",\"addProp\",\"hook\",\"originalEvent\",\"writable\",\"load\",\"noBubble\",\"beforeunload\",\"returnValue\",\"props\",\"isDefaultPrevented\",\"defaultPrevented\",\"relatedTarget\",\"timeStamp\",\"now\",\"isSimulated\",\"altKey\",\"bubbles\",\"cancelable\",\"changedTouches\",\"ctrlKey\",\"detail\",\"eventPhase\",\"metaKey\",\"pageX\",\"pageY\",\"shiftKey\",\"view\",\"char\",\"charCode\",\"keyCode\",\"buttons\",\"clientX\",\"clientY\",\"offsetX\",\"offsetY\",\"pointerId\",\"pointerType\",\"screenX\",\"screenY\",\"targetTouches\",\"toElement\",\"touches\",\"which\",\"blur\",\"mouseenter\",\"mouseleave\",\"pointerenter\",\"pointerleave\",\"orig\",\"related\",\"rxhtmlTag\",\"rnoInnerhtml\",\"rchecked\",\"rcleanScript\",\"manipulationTarget\",\"disableScript\",\"restoreScript\",\"cloneCopyEvent\",\"dest\",\"pdataOld\",\"pdataCur\",\"udataOld\",\"udataCur\",\"fixInput\",\"domManip\",\"collection\",\"hasScripts\",\"iNoClone\",\"valueIsFunction\",\"_evalUrl\",\"keepData\",\"cleanData\",\"dataAndEvents\",\"deepDataAndEvents\",\"srcElements\",\"destElements\",\"inPage\",\"detach\",\"prepend\",\"insertBefore\",\"before\",\"after\",\"replaceWith\",\"replaceChild\",\"appendTo\",\"prependTo\",\"insertAfter\",\"replaceAll\",\"original\",\"insert\",\"rnumnonpx\",\"getStyles\",\"opener\",\"getComputedStyle\",\"rboxStyle\",\"curCSS\",\"computed\",\"minWidth\",\"maxWidth\",\"getPropertyValue\",\"pixelBoxStyles\",\"addGetHookIf\",\"conditionFn\",\"hookFn\",\"computeStyleTests\",\"container\",\"cssText\",\"divStyle\",\"pixelPositionVal\",\"reliableMarginLeftVal\",\"roundPixelMeasures\",\"marginLeft\",\"right\",\"pixelBoxStylesVal\",\"boxSizingReliableVal\",\"scrollboxSizeVal\",\"offsetWidth\",\"measure\",\"round\",\"backgroundClip\",\"clearCloneStyle\",\"boxSizingReliable\",\"pixelPosition\",\"reliableMarginLeft\",\"scrollboxSize\",\"cssPrefixes\",\"emptyStyle\",\"vendorProps\",\"finalPropName\",\"final\",\"cssProps\",\"capName\",\"vendorPropName\",\"rdisplayswap\",\"rcustomProp\",\"cssShow\",\"visibility\",\"cssNormalTransform\",\"letterSpacing\",\"fontWeight\",\"setPositiveNumber\",\"subtract\",\"boxModelAdjustment\",\"dimension\",\"box\",\"isBorderBox\",\"styles\",\"computedVal\",\"extra\",\"delta\",\"ceil\",\"getWidthOrHeight\",\"valueIsBorderBox\",\"offsetProp\",\"getClientRects\",\"Tween\",\"easing\",\"cssHooks\",\"opacity\",\"animationIterationCount\",\"columnCount\",\"fillOpacity\",\"flexGrow\",\"flexShrink\",\"gridArea\",\"gridColumn\",\"gridColumnEnd\",\"gridColumnStart\",\"gridRow\",\"gridRowEnd\",\"gridRowStart\",\"lineHeight\",\"order\",\"orphans\",\"widows\",\"zIndex\",\"zoom\",\"origName\",\"isCustomProp\",\"setProperty\",\"isFinite\",\"getBoundingClientRect\",\"scrollboxSizeBuggy\",\"margin\",\"padding\",\"border\",\"prefix\",\"suffix\",\"expand\",\"expanded\",\"parts\",\"propHooks\",\"run\",\"percent\",\"eased\",\"duration\",\"step\",\"fx\",\"scrollTop\",\"scrollLeft\",\"linear\",\"swing\",\"cos\",\"PI\",\"fxNow\",\"inProgress\",\"rfxtypes\",\"rrun\",\"schedule\",\"hidden\",\"interval\",\"tick\",\"createFxNow\",\"genFx\",\"includeWidth\",\"createTween\",\"animation\",\"Animation\",\"tweeners\",\"properties\",\"stopped\",\"prefilters\",\"currentTime\",\"startTime\",\"tweens\",\"opts\",\"specialEasing\",\"originalProperties\",\"originalOptions\",\"gotoEnd\",\"propFilter\",\"complete\",\"timer\",\"anim\",\"*\",\"tweener\",\"oldfire\",\"propTween\",\"restoreDisplay\",\"isBox\",\"dataShow\",\"unqueued\",\"overflow\",\"overflowX\",\"overflowY\",\"prefilter\",\"speed\",\"opt\",\"speeds\",\"fadeTo\",\"to\",\"animate\",\"optall\",\"doAnimation\",\"finish\",\"stopQueue\",\"timers\",\"cssFn\",\"slideDown\",\"slideUp\",\"slideToggle\",\"fadeIn\",\"fadeOut\",\"fadeToggle\",\"slow\",\"fast\",\"delay\",\"time\",\"timeout\",\"clearTimeout\",\"checkOn\",\"optSelected\",\"radioValue\",\"boolHook\",\"removeAttr\",\"nType\",\"attrHooks\",\"attrNames\",\"lowercaseName\",\"rfocusable\",\"rclickable\",\"stripAndCollapse\",\"getClass\",\"classesToArray\",\"removeProp\",\"propFix\",\"tabindex\",\"for\",\"class\",\"addClass\",\"classes\",\"curValue\",\"clazz\",\"finalValue\",\"removeClass\",\"toggleClass\",\"stateVal\",\"isValidValue\",\"classNames\",\"hasClass\",\"rreturn\",\"valHooks\",\"optionSet\",\"focusin\",\"rfocusMorph\",\"stopPropagationCallback\",\"onlyHandlers\",\"bubbleType\",\"ontype\",\"lastElement\",\"eventPath\",\"parentWindow\",\"simulate\",\"triggerHandler\",\"attaches\",\"rquery\",\"parseXML\",\"DOMParser\",\"parseFromString\",\"rbracket\",\"rCRLF\",\"rsubmitterTypes\",\"rsubmittable\",\"buildParams\",\"traditional\",\"param\",\"valueOrFunction\",\"encodeURIComponent\",\"serialize\",\"serializeArray\",\"r20\",\"rhash\",\"rantiCache\",\"rheaders\",\"rnoContent\",\"rprotocol\",\"transports\",\"allTypes\",\"originAnchor\",\"addToPrefiltersOrTransports\",\"structure\",\"dataTypeExpression\",\"dataType\",\"dataTypes\",\"inspectPrefiltersOrTransports\",\"jqXHR\",\"inspected\",\"seekingTransport\",\"inspect\",\"prefilterOrFactory\",\"dataTypeOrTransport\",\"ajaxExtend\",\"flatOptions\",\"ajaxSettings\",\"active\",\"lastModified\",\"etag\",\"url\",\"isLocal\",\"protocol\",\"processData\",\"async\",\"contentType\",\"accepts\",\"json\",\"responseFields\",\"converters\",\"* text\",\"text html\",\"text json\",\"text xml\",\"ajaxSetup\",\"settings\",\"ajaxPrefilter\",\"ajaxTransport\",\"ajax\",\"transport\",\"cacheURL\",\"responseHeadersString\",\"responseHeaders\",\"timeoutTimer\",\"urlAnchor\",\"fireGlobals\",\"uncached\",\"callbackContext\",\"globalEventContext\",\"completeDeferred\",\"statusCode\",\"requestHeaders\",\"requestHeadersNames\",\"strAbort\",\"getResponseHeader\",\"getAllResponseHeaders\",\"setRequestHeader\",\"overrideMimeType\",\"mimeType\",\"status\",\"abort\",\"statusText\",\"finalText\",\"crossDomain\",\"host\",\"hasContent\",\"ifModified\",\"headers\",\"beforeSend\",\"success\",\"send\",\"nativeStatusText\",\"responses\",\"isSuccess\",\"response\",\"modified\",\"ct\",\"finalDataType\",\"firstDataType\",\"ajaxHandleResponses\",\"conv2\",\"current\",\"conv\",\"dataFilter\",\"throws\",\"ajaxConvert\",\"getJSON\",\"getScript\",\"text script\",\"wrapAll\",\"firstElementChild\",\"wrapInner\",\"htmlIsFunction\",\"unwrap\",\"visible\",\"offsetHeight\",\"xhr\",\"XMLHttpRequest\",\"xhrSuccessStatus\",\"0\",\"1223\",\"xhrSupported\",\"cors\",\"errorCallback\",\"open\",\"username\",\"xhrFields\",\"onload\",\"onerror\",\"onabort\",\"ontimeout\",\"onreadystatechange\",\"responseType\",\"responseText\",\"binary\",\"scriptAttrs\",\"charset\",\"scriptCharset\",\"evt\",\"oldCallbacks\",\"rjsonp\",\"jsonp\",\"jsonpCallback\",\"originalSettings\",\"callbackName\",\"overwritten\",\"responseContainer\",\"jsonProp\",\"createHTMLDocument\",\"implementation\",\"keepScripts\",\"parsed\",\"params\",\"animated\",\"setOffset\",\"curPosition\",\"curLeft\",\"curCSSTop\",\"curTop\",\"curOffset\",\"curCSSLeft\",\"curElem\",\"using\",\"rect\",\"win\",\"pageYOffset\",\"pageXOffset\",\"offsetParent\",\"parentOffset\",\"scrollTo\",\"Height\",\"Width\",\"\",\"defaultExtra\",\"funcName\",\"hover\",\"fnOver\",\"fnOut\",\"unbind\",\"delegate\",\"undelegate\",\"proxy\",\"holdReady\",\"hold\",\"parseJSON\",\"isNumeric\",\"isNaN\",\"_jQuery\",\"_$\",\"noConflict\",\"addons\",\"addonIndex\",\"addon\",\"Function\",\"v1\",\"min\",\"matrix\",\"quaternion\",\"q\",\"startP\",\"startEnd\",\"points\",\"closestPoint\",\"segCenter\",\"segDir\",\"p1\",\"p2\",\"sphere\",\"v0\",\"m1\",\"q1\",\"fov\",\"aspect\",\"near\",\"far\",\"eyeRight\",\"eyeLeft\",\"textureLoader\",\"materialLoader\",\"offsetMatrix\",\"matrixPosition\",\"radians\",\"axis\",\"REVISION\",\"Number\",\"EPSILON\",\"pow\",\"sign\",\"assign\",\"output\",\"nextKey\",\"MOUSE\",\"LEFT\",\"MIDDLE\",\"RIGHT\",\"CullFaceNone\",\"CullFaceBack\",\"CullFaceFront\",\"CullFaceFrontBack\",\"FrontFaceDirectionCW\",\"FrontFaceDirectionCCW\",\"BasicShadowMap\",\"PCFShadowMap\",\"PCFSoftShadowMap\",\"FrontSide\",\"BackSide\",\"DoubleSide\",\"FlatShading\",\"SmoothShading\",\"NoColors\",\"FaceColors\",\"VertexColors\",\"NoBlending\",\"NormalBlending\",\"AdditiveBlending\",\"SubtractiveBlending\",\"MultiplyBlending\",\"CustomBlending\",\"AddEquation\",\"SubtractEquation\",\"ReverseSubtractEquation\",\"MinEquation\",\"MaxEquation\",\"ZeroFactor\",\"OneFactor\",\"SrcColorFactor\",\"OneMinusSrcColorFactor\",\"SrcAlphaFactor\",\"OneMinusSrcAlphaFactor\",\"DstAlphaFactor\",\"OneMinusDstAlphaFactor\",\"DstColorFactor\",\"OneMinusDstColorFactor\",\"SrcAlphaSaturateFactor\",\"NeverDepth\",\"AlwaysDepth\",\"LessDepth\",\"LessEqualDepth\",\"EqualDepth\",\"GreaterEqualDepth\",\"GreaterDepth\",\"NotEqualDepth\",\"MultiplyOperation\",\"MixOperation\",\"AddOperation\",\"NoToneMapping\",\"LinearToneMapping\",\"ReinhardToneMapping\",\"Uncharted2ToneMapping\",\"CineonToneMapping\",\"UVMapping\",\"CubeReflectionMapping\",\"CubeRefractionMapping\",\"EquirectangularReflectionMapping\",\"EquirectangularRefractionMapping\",\"SphericalReflectionMapping\",\"CubeUVReflectionMapping\",\"CubeUVRefractionMapping\",\"RepeatWrapping\",\"ClampToEdgeWrapping\",\"MirroredRepeatWrapping\",\"NearestFilter\",\"NearestMipMapNearestFilter\",\"NearestMipMapLinearFilter\",\"LinearFilter\",\"LinearMipMapNearestFilter\",\"LinearMipMapLinearFilter\",\"UnsignedByteType\",\"ByteType\",\"ShortType\",\"UnsignedShortType\",\"IntType\",\"UnsignedIntType\",\"FloatType\",\"HalfFloatType\",\"UnsignedShort4444Type\",\"UnsignedShort5551Type\",\"UnsignedShort565Type\",\"AlphaFormat\",\"RGBFormat\",\"RGBAFormat\",\"LuminanceFormat\",\"LuminanceAlphaFormat\",\"RGBEFormat\",\"DepthFormat\",\"RGB_S3TC_DXT1_Format\",\"RGBA_S3TC_DXT1_Format\",\"RGBA_S3TC_DXT3_Format\",\"RGBA_S3TC_DXT5_Format\",\"RGB_PVRTC_4BPPV1_Format\",\"RGB_PVRTC_2BPPV1_Format\",\"RGBA_PVRTC_4BPPV1_Format\",\"RGBA_PVRTC_2BPPV1_Format\",\"RGB_ETC1_Format\",\"LoopOnce\",\"LoopRepeat\",\"LoopPingPong\",\"InterpolateDiscrete\",\"InterpolateLinear\",\"InterpolateSmooth\",\"ZeroCurvatureEnding\",\"ZeroSlopeEnding\",\"WrapAroundEnding\",\"TrianglesDrawMode\",\"TriangleStripDrawMode\",\"TriangleFanDrawMode\",\"LinearEncoding\",\"sRGBEncoding\",\"GammaEncoding\",\"RGBEEncoding\",\"LogLuvEncoding\",\"RGBM7Encoding\",\"RGBM16Encoding\",\"RGBDEncoding\",\"BasicDepthPacking\",\"RGBADepthPacking\",\"Color\",\"g\",\"setRGB\",\"setHex\",\"setStyle\",\"setScalar\",\"scalar\",\"hex\",\"floor\",\"setHSL\",\"hue2rgb\",\"h\",\"euclideanModulo\",\"clamp\",\"handleAlpha\",\"components\",\"size\",\"charAt\",\"ColorKeywords\",\"copyGammaToLinear\",\"gammaFactor\",\"copyLinearToGamma\",\"safeInverse\",\"convertGammaToLinear\",\"convertLinearToGamma\",\"sqrt\",\"getHex\",\"getHexString\",\"getHSL\",\"optionalTarget\",\"hue\",\"saturation\",\"hsl\",\"lightness\",\"getStyle\",\"offsetHSL\",\"addColors\",\"color1\",\"color2\",\"addScalar\",\"sub\",\"multiply\",\"lerp\",\"alpha\",\"equals\",\"fromArray\",\"array\",\"aliceblue\",\"antiquewhite\",\"aqua\",\"aquamarine\",\"azure\",\"beige\",\"bisque\",\"black\",\"blanchedalmond\",\"blue\",\"blueviolet\",\"brown\",\"burlywood\",\"cadetblue\",\"chartreuse\",\"chocolate\",\"coral\",\"cornflowerblue\",\"cornsilk\",\"crimson\",\"cyan\",\"darkblue\",\"darkcyan\",\"darkgoldenrod\",\"darkgray\",\"darkgreen\",\"darkgrey\",\"darkkhaki\",\"darkmagenta\",\"darkolivegreen\",\"darkorange\",\"darkorchid\",\"darkred\",\"darksalmon\",\"darkseagreen\",\"darkslateblue\",\"darkslategray\",\"darkslategrey\",\"darkturquoise\",\"darkviolet\",\"deeppink\",\"deepskyblue\",\"dimgray\",\"dimgrey\",\"dodgerblue\",\"firebrick\",\"floralwhite\",\"forestgreen\",\"fuchsia\",\"gainsboro\",\"ghostwhite\",\"gold\",\"goldenrod\",\"gray\",\"green\",\"greenyellow\",\"grey\",\"honeydew\",\"hotpink\",\"indianred\",\"indigo\",\"ivory\",\"khaki\",\"lavender\",\"lavenderblush\",\"lawngreen\",\"lemonchiffon\",\"lightblue\",\"lightcoral\",\"lightcyan\",\"lightgoldenrodyellow\",\"lightgray\",\"lightgreen\",\"lightgrey\",\"lightpink\",\"lightsalmon\",\"lightseagreen\",\"lightskyblue\",\"lightslategray\",\"lightslategrey\",\"lightsteelblue\",\"lightyellow\",\"lime\",\"limegreen\",\"linen\",\"magenta\",\"maroon\",\"mediumaquamarine\",\"mediumblue\",\"mediumorchid\",\"mediumpurple\",\"mediumseagreen\",\"mediumslateblue\",\"mediumspringgreen\",\"mediumturquoise\",\"mediumvioletred\",\"midnightblue\",\"mintcream\",\"mistyrose\",\"moccasin\",\"navajowhite\",\"navy\",\"oldlace\",\"olive\",\"olivedrab\",\"orange\",\"orangered\",\"orchid\",\"palegoldenrod\",\"palegreen\",\"paleturquoise\",\"palevioletred\",\"papayawhip\",\"peachpuff\",\"peru\",\"pink\",\"plum\",\"powderblue\",\"purple\",\"red\",\"rosybrown\",\"royalblue\",\"saddlebrown\",\"salmon\",\"sandybrown\",\"seagreen\",\"seashell\",\"sienna\",\"silver\",\"skyblue\",\"slateblue\",\"slategray\",\"slategrey\",\"snow\",\"springgreen\",\"steelblue\",\"tan\",\"teal\",\"thistle\",\"tomato\",\"turquoise\",\"violet\",\"wheat\",\"white\",\"whitesmoke\",\"yellow\",\"yellowgreen\",\"Quaternion\",\"_w\",\"onChangeCallback\",\"setFromEuler\",\"euler\",\"Euler\",\"c1\",\"c2\",\"c3\",\"s1\",\"sin\",\"s2\",\"s3\",\"setFromAxisAngle\",\"angle\",\"halfAngle\",\"setFromRotationMatrix\",\"te\",\"m11\",\"m12\",\"m13\",\"m21\",\"m22\",\"m23\",\"m31\",\"m32\",\"m33\",\"trace\",\"setFromUnitVectors\",\"vFrom\",\"vTo\",\"dot\",\"abs\",\"crossVectors\",\"inverse\",\"conjugate\",\"lengthSq\",\"multiplyQuaternions\",\"premultiply\",\"qax\",\"qay\",\"qaz\",\"qaw\",\"qbx\",\"qby\",\"qbz\",\"qbw\",\"slerp\",\"qb\",\"cosHalfTheta\",\"sinHalfTheta\",\"halfTheta\",\"atan2\",\"ratioA\",\"ratioB\",\"onChange\",\"qa\",\"qm\",\"slerpFlat\",\"dst\",\"dstOffset\",\"src0\",\"srcOffset0\",\"src1\",\"srcOffset1\",\"x0\",\"y0\",\"z0\",\"w0\",\"x1\",\"y1\",\"z1\",\"w1\",\"sqrSin\",\"tDir\",\"f\",\"Vector2\",\"setX\",\"setY\",\"setComponent\",\"getComponent\",\"addScaledVector\",\"subScalar\",\"divide\",\"divideScalar\",\"clampScalar\",\"minVal\",\"maxVal\",\"clampLength\",\"roundToZero\",\"negate\",\"lengthManhattan\",\"distanceTo\",\"distanceToSquared\",\"dx\",\"dy\",\"distanceToManhattan\",\"setLength\",\"lerpVectors\",\"v2\",\"fromAttribute\",\"attribute\",\"itemSize\",\"rotateAround\",\"center\",\"setZ\",\"multiplyVectors\",\"applyEuler\",\"applyQuaternion\",\"applyAxisAngle\",\"applyMatrix3\",\"applyMatrix4\",\"applyProjection\",\"qx\",\"qy\",\"qz\",\"qw\",\"ix\",\"iy\",\"iz\",\"iw\",\"Matrix4\",\"multiplyMatrices\",\"projectionMatrix\",\"getInverse\",\"matrixWorld\",\"unproject\",\"transformDirection\",\"cross\",\"ax\",\"ay\",\"az\",\"bx\",\"by\",\"bz\",\"projectOnVector\",\"projectOnPlane\",\"planeNormal\",\"reflect\",\"normal\",\"angleTo\",\"theta\",\"acos\",\"dz\",\"setFromSpherical\",\"sinPhiRadius\",\"phi\",\"radius\",\"setFromMatrixPosition\",\"setFromMatrixColumn\",\"setFromMatrixScale\",\"sx\",\"sy\",\"sz\",\"Vector4\",\"setW\",\"setAxisAngleFromQuaternion\",\"setAxisAngleFromRotationMatrix\",\"xx\",\"yy\",\"zz\",\"xy\",\"xz\",\"yz\",\"_order\",\"DefaultOrder\",\"RotationOrders\",\"asin\",\"setFromQuaternion\",\"makeRotationFromQuaternion\",\"setFromVector3\",\"reorder\",\"newOrder\",\"toVector3\",\"optionalResult\",\"Line3\",\"distanceSq\",\"distance\",\"at\",\"closestPointToPointParameter\",\"point\",\"clampToLine\",\"startEnd2\",\"closestPointToPoint\",\"Box2\",\"Infinity\",\"setFromPoints\",\"makeEmpty\",\"il\",\"expandByPoint\",\"setFromCenterAndSize\",\"halfSize\",\"isEmpty\",\"expandByVector\",\"expandByScalar\",\"containsPoint\",\"containsBox\",\"getParameter\",\"intersectsBox\",\"clampPoint\",\"distanceToPoint\",\"intersect\",\"union\",\"translate\",\"Box3\",\"setFromArray\",\"minX\",\"minY\",\"minZ\",\"maxX\",\"maxY\",\"maxZ\",\"setFromObject\",\"scope\",\"updateMatrixWorld\",\"traverse\",\"Geometry\",\"vertices\",\"BufferGeometry\",\"stride\",\"InterleavedBufferAttribute\",\"intersectsSphere\",\"intersectsPlane\",\"plane\",\"constant\",\"getBoundingSphere\",\"Sphere\",\"Matrix3\",\"Float32Array\",\"n11\",\"n12\",\"n13\",\"n21\",\"n22\",\"n23\",\"n31\",\"n32\",\"n33\",\"identity\",\"me\",\"setFromMatrix4\",\"applyToVector3Array\",\"applyToBuffer\",\"buffer\",\"getX\",\"getY\",\"getZ\",\"setXYZ\",\"determinant\",\"throwOnDegenerate\",\"t11\",\"t12\",\"t13\",\"det\",\"detInv\",\"transpose\",\"flattenToArrayOffset\",\"getNormalMatrix\",\"matrix4\",\"transposeIntoArray\",\"n14\",\"n24\",\"n34\",\"n41\",\"n42\",\"n43\",\"n44\",\"copyPosition\",\"extractBasis\",\"xAxis\",\"yAxis\",\"zAxis\",\"makeBasis\",\"extractRotation\",\"scaleX\",\"scaleY\",\"scaleZ\",\"makeRotationFromEuler\",\"ae\",\"af\",\"be\",\"bf\",\"ce\",\"cf\",\"de\",\"df\",\"ac\",\"ad\",\"bc\",\"bd\",\"x2\",\"y2\",\"z2\",\"wx\",\"wy\",\"wz\",\"lookAt\",\"eye\",\"up\",\"a11\",\"a12\",\"a13\",\"a14\",\"a21\",\"a22\",\"a23\",\"a24\",\"a31\",\"a32\",\"a33\",\"a34\",\"a41\",\"a42\",\"a43\",\"a44\",\"b11\",\"b12\",\"b13\",\"b14\",\"b21\",\"b22\",\"b23\",\"b24\",\"b31\",\"b32\",\"b33\",\"b34\",\"b41\",\"b42\",\"b43\",\"b44\",\"multiplyToArray\",\"getPosition\",\"setPosition\",\"t14\",\"getMaxScaleOnAxis\",\"scaleXSq\",\"scaleYSq\",\"scaleZSq\",\"makeTranslation\",\"makeRotationX\",\"makeRotationY\",\"makeRotationZ\",\"makeRotationAxis\",\"tx\",\"ty\",\"makeScale\",\"compose\",\"decompose\",\"invSX\",\"invSY\",\"invSZ\",\"makeFrustum\",\"bottom\",\"makePerspective\",\"ymax\",\"DEG2RAD\",\"ymin\",\"xmin\",\"xmax\",\"makeOrthographic\",\"Ray\",\"origin\",\"ray\",\"recast\",\"directionDistance\",\"distanceSqToPoint\",\"distanceSqToSegment\",\"optionalPointOnRay\",\"optionalPointOnSegment\",\"s0\",\"sqrDist\",\"extDet\",\"segExtent\",\"a01\",\"b0\",\"b1\",\"invDet\",\"intersectSphere\",\"tca\",\"d2\",\"radius2\",\"thc\",\"t0\",\"t1\",\"distanceToPlane\",\"denominator\",\"intersectPlane\",\"distToPoint\",\"intersectBox\",\"tmin\",\"tmax\",\"tymin\",\"tymax\",\"tzmin\",\"tzmax\",\"invdirx\",\"invdiry\",\"invdirz\",\"intersectTriangle\",\"edge1\",\"edge2\",\"backfaceCulling\",\"DdN\",\"DdQxE2\",\"DdE1xQ\",\"QdN\",\"optionalCenter\",\"maxRadiusSq\",\"radiusSum\",\"deltaLengthSq\",\"getBoundingBox\",\"Frustum\",\"p0\",\"p3\",\"p4\",\"p5\",\"planes\",\"Plane\",\"frustum\",\"setFromMatrix\",\"me0\",\"me1\",\"me2\",\"me3\",\"me4\",\"me5\",\"me6\",\"me7\",\"me8\",\"me9\",\"me10\",\"me11\",\"me12\",\"me13\",\"me14\",\"me15\",\"setComponents\",\"intersectsObject\",\"boundingSphere\",\"computeBoundingSphere\",\"intersectsSprite\",\"sprite\",\"negRadius\",\"d1\",\"setFromNormalAndCoplanarPoint\",\"setFromCoplanarPoints\",\"inverseNormalLength\",\"distanceToSphere\",\"projectPoint\",\"orthoPoint\",\"perpendicularMagnitude\",\"intersectLine\",\"intersectsLine\",\"startSign\",\"endSign\",\"coplanarPoint\",\"optionalNormalMatrix\",\"referencePoint\",\"normalMatrix\",\"Spherical\",\"other\",\"makeSafe\",\"vec3\",\"RAD2DEG\",\"generateUUID\",\"chars\",\"uuid\",\"rnd\",\"mapLinear\",\"a1\",\"a2\",\"b2\",\"smoothstep\",\"smootherstep\",\"random16\",\"randInt\",\"low\",\"randFloat\",\"randFloatSpread\",\"range\",\"degToRad\",\"degrees\",\"radToDeg\",\"isPowerOfTwo\",\"nearestPowerOfTwo\",\"LN2\",\"nextPowerOfTwo\",\"Spline\",\"intPoint\",\"weight\",\"w2\",\"w3\",\"pa\",\"pb\",\"pc\",\"pd\",\"v3\",\"interpolate\",\"t2\",\"t3\",\"initFromArray\",\"getPoint\",\"k\",\"getControlPointsArray\",\"coords\",\"getLength\",\"nSubDivisions\",\"nSamples\",\"oldIntPoint\",\"oldPosition\",\"tmpVec\",\"chunkLengths\",\"totalLength\",\"chunks\",\"total\",\"reparametrizeByArcLength\",\"samplingCoef\",\"indexCurrent\",\"indexNext\",\"realDistance\",\"sampling\",\"newpoints\",\"sl\",\"Triangle\",\"resultLengthSq\",\"barycoordFromPoint\",\"dot00\",\"dot01\",\"dot02\",\"dot11\",\"dot12\",\"denom\",\"invDenom\",\"u\",\"setFromPointsAndIndices\",\"i0\",\"i1\",\"i2\",\"triangle\",\"area\",\"midpoint\",\"edgeList\",\"projectedPoint\",\"minDistance\",\"Interpolant\",\"parameterPositions\",\"sampleValues\",\"sampleSize\",\"resultBuffer\",\"_cachedIndex\",\"valueSize\",\"evaluate\",\"pp\",\"validate_interval\",\"seek\",\"linear_scan\",\"forward_scan\",\"giveUpAt\",\"afterEnd_\",\"t1global\",\"beforeStart_\",\"mid\",\"intervalChanged_\",\"interpolate_\",\"DefaultSettings_\",\"getSettings_\",\"copySampleValue_\",\"CubicInterpolant\",\"_weightPrev\",\"_offsetPrev\",\"_weightNext\",\"_offsetNext\",\"endingStart\",\"endingEnd\",\"iPrev\",\"iNext\",\"tPrev\",\"tNext\",\"halfDt\",\"o1\",\"o0\",\"oP\",\"oN\",\"wP\",\"wN\",\"ppp\",\"sP\",\"sN\",\"DiscreteInterpolant\",\"LinearInterpolant\",\"offset1\",\"offset0\",\"weight1\",\"weight0\",\"QuaternionLinearInterpolant\",\"Clock\",\"autoStart\",\"oldTime\",\"elapsedTime\",\"running\",\"performance\",\"getElapsedTime\",\"getDelta\",\"newTime\",\"EventDispatcher\",\"listener\",\"_listeners\",\"listeners\",\"hasEventListener\",\"listenerArray\",\"dispatchEvent\",\"Layers\",\"mask\",\"channel\",\"enable\",\"layers\",\"ascSort\",\"intersectObject\",\"raycaster\",\"intersects\",\"recursive\",\"raycast\",\"Raycaster\",\"Line\",\"LOD\",\"Points\",\"threshold\",\"Sprite\",\"defineProperties\",\"PointCloud\",\"linePrecision\",\"setFromCamera\",\"OrthographicCamera\",\"intersectObjects\",\"objects\",\"Object3D\",\"Object3DIdCount\",\"DefaultUp\",\"modelViewMatrix\",\"matrixAutoUpdate\",\"DefaultMatrixAutoUpdate\",\"matrixWorldNeedsUpdate\",\"castShadow\",\"receiveShadow\",\"frustumCulled\",\"renderOrder\",\"userData\",\"applyMatrix\",\"setRotationFromAxisAngle\",\"setRotationFromEuler\",\"setRotationFromMatrix\",\"setRotationFromQuaternion\",\"rotateOnAxis\",\"rotateX\",\"rotateY\",\"rotateZ\",\"translateOnAxis\",\"translateX\",\"translateY\",\"translateZ\",\"localToWorld\",\"worldToLocal\",\"getObjectById\",\"getObjectByProperty\",\"getObjectByName\",\"getWorldPosition\",\"getWorldQuaternion\",\"getWorldRotation\",\"getWorldScale\",\"getWorldDirection\",\"traverseVisible\",\"traverseAncestors\",\"updateMatrix\",\"force\",\"toJSON\",\"meta\",\"isRootObject\",\"geometries\",\"materials\",\"textures\",\"images\",\"metadata\",\"version\",\"generator\",\"stringify\",\"extractFromCache\",\"child\",\"Face3\",\"materialIndex\",\"vertexNormals\",\"vertexColors\",\"BufferAttribute\",\"normalized\",\"dynamic\",\"updateRange\",\"needsUpdate\",\"setDynamic\",\"copyAt\",\"index1\",\"index2\",\"copyArray\",\"copyColorsArray\",\"colors\",\"copyIndicesArray\",\"indices\",\"copyVector2sArray\",\"vectors\",\"copyVector3sArray\",\"copyVector4sArray\",\"getW\",\"setXY\",\"setXYZW\",\"Int8Attribute\",\"Int8Array\",\"Uint8Attribute\",\"Uint8Array\",\"Uint8ClampedAttribute\",\"Uint8ClampedArray\",\"Int16Attribute\",\"Int16Array\",\"Uint16Attribute\",\"Uint16Array\",\"Int32Attribute\",\"Int32Array\",\"Uint32Attribute\",\"Uint32Array\",\"Float32Attribute\",\"Float64Attribute\",\"Float64Array\",\"DynamicBufferAttribute\",\"InstancedBufferAttribute\",\"meshPerAttribute\",\"InterleavedBuffer\",\"InstancedInterleavedBuffer\",\"interleavedBuffer\",\"GeometryIdCount\",\"faces\",\"faceVertexUvs\",\"morphTargets\",\"morphNormals\",\"skinWeights\",\"skinIndices\",\"lineDistances\",\"boundingBox\",\"elementsNeedUpdate\",\"verticesNeedUpdate\",\"uvsNeedUpdate\",\"normalsNeedUpdate\",\"colorsNeedUpdate\",\"lineDistancesNeedUpdate\",\"groupsNeedUpdate\",\"face\",\"jl\",\"computeBoundingBox\",\"fromBufferGeometry\",\"positions\",\"normals\",\"uvs\",\"uv\",\"uvs2\",\"uv2\",\"tempNormals\",\"tempUVs\",\"tempUVs2\",\"addFace\",\"group\",\"computeFaceNormals\",\"cb\",\"ab\",\"fl\",\"vA\",\"vB\",\"vC\",\"computeVertexNormals\",\"areaWeighted\",\"vl\",\"computeMorphNormals\",\"__originalFaceNormal\",\"__originalVertexNormals\",\"tmpGeo\",\"faceNormals\",\"dstNormalsFace\",\"dstNormalsVertex\",\"faceNormal\",\"computeTangents\",\"computeLineDistances\",\"materialIndexOffset\",\"vertexOffset\",\"vertices1\",\"vertices2\",\"faces1\",\"faces2\",\"uvs1\",\"vertexCopy\",\"faceCopy\",\"faceVertexNormals\",\"faceVertexColors\",\"uvCopy\",\"mergeMesh\",\"mesh\",\"mergeVertices\",\"verticesMap\",\"changes\",\"precision\",\"faceIndicesToRemove\",\"sortFacesByMaterialIndex\",\"_id\",\"newUvs1\",\"newUvs2\",\"parameters\",\"vertex\",\"normalsHash\",\"colorsHash\",\"uvsHash\",\"hasFaceVertexUv\",\"hasFaceNormal\",\"hasFaceVertexNormal\",\"hasFaceColor\",\"hasFaceVertexColor\",\"faceType\",\"setBit\",\"getUvIndex\",\"getNormalIndex\",\"getColorIndex\",\"uvsCopy\",\"kl\",\"dispose\",\"DirectGeometry\",\"computeGroups\",\"fromGeometry\",\"morphTargetsPosition\",\"hasFaceVertexUv2\",\"morphTargetsLength\",\"morphTargetsNormal\",\"morphNormalsLength\",\"hasSkinIndices\",\"hasSkinWeights\",\"vertexUvs\",\"morphTarget\",\"morphNormal\",\"morphAttributes\",\"drawRange\",\"getIndex\",\"setIndex\",\"addAttribute\",\"addGroup\",\"clearGroups\",\"setDrawRange\",\"updateFromObject\",\"direct\",\"__directGeometry\",\"lineDistance\",\"fromDirectGeometry\",\"pA\",\"pB\",\"pC\",\"normalizeNormals\",\"attributeArray1\",\"attribute2\",\"attributeArray2\",\"toNonIndexed\",\"geometry2\",\"array2\",\"MaxIndex\",\"InstancedBufferGeometry\",\"maxInstancedCount\",\"instances\",\"Uniform\",\"onUpdate\",\"onUpdateCallback\",\"AnimationAction\",\"_new\",\"mixer\",\"clip\",\"localRoot\",\"_mixer\",\"_clip\",\"_localRoot\",\"tracks\",\"nTracks\",\"interpolants\",\"interpolantSettings\",\"interpolant\",\"createInterpolant\",\"_interpolantSettings\",\"_interpolants\",\"_propertyBindings\",\"_cacheIndex\",\"_byClipCacheIndex\",\"_timeScaleInterpolant\",\"_weightInterpolant\",\"loop\",\"_loopCount\",\"_startTime\",\"timeScale\",\"_effectiveTimeScale\",\"_effectiveWeight\",\"repetitions\",\"paused\",\"clampWhenFinished\",\"zeroSlopeAtStart\",\"zeroSlopeAtEnd\",\"play\",\"_activateAction\",\"_deactivateAction\",\"stopFading\",\"stopWarping\",\"isRunning\",\"_isActiveAction\",\"isScheduled\",\"startAt\",\"setLoop\",\"setEffectiveWeight\",\"getEffectiveWeight\",\"_scheduleFading\",\"crossFadeFrom\",\"fadeOutAction\",\"warp\",\"fadeInDuration\",\"fadeOutDuration\",\"startEndRatio\",\"endStartRatio\",\"crossFadeTo\",\"fadeInAction\",\"weightInterpolant\",\"_takeBackControlInterpolant\",\"setEffectiveTimeScale\",\"getEffectiveTimeScale\",\"setDuration\",\"syncWith\",\"action\",\"halt\",\"startTimeScale\",\"endTimeScale\",\"_lendControlInterpolant\",\"times\",\"timeScaleInterpolant\",\"getMixer\",\"getClip\",\"getRoot\",\"_root\",\"_update\",\"deltaTime\",\"timeDirection\",\"accuIndex\",\"timeRunning\",\"_updateTimeScale\",\"clipTime\",\"_updateTime\",\"_updateWeight\",\"propertyMixers\",\"accumulate\",\"interpolantValue\",\"loopCount\",\"_setEndings\",\"handle_stop\",\"pingPong\",\"loopDelta\",\"pending\",\"atStart\",\"atEnd\",\"weightNow\",\"weightThen\",\"AnimationClip\",\"resetDuration\",\"optimize\",\"track\",\"jsonTracks\",\"frameTime\",\"fps\",\"KeyframeTrack\",\"clipTracks\",\"CreateFromMorphTargetSequence\",\"morphTargetSequence\",\"noLoop\",\"numMorphTargets\",\"AnimationUtils\",\"getKeyframeOrder\",\"sortedArray\",\"NumberKeyframeTrack\",\"findByName\",\"objectOrClipArray\",\"clipArray\",\"animations\",\"CreateClipsFromMorphTargetSequences\",\"animationToMorphTargets\",\"animationMorphTargets\",\"clips\",\"parseAnimation\",\"bones\",\"addNonemptyTrack\",\"trackType\",\"trackName\",\"animationKeys\",\"propertyName\",\"destTracks\",\"flattenJSON\",\"clipName\",\"hierarchyTracks\",\"hierarchy\",\"morphTargetNames\",\"morphTargetName\",\"animationKey\",\"boneName\",\"VectorKeyframeTrack\",\"QuaternionKeyframeTrack\",\"AnimationMixer\",\"_initMemoryManager\",\"_accuIndex\",\"clipAction\",\"optionalRoot\",\"rootUuid\",\"clipObject\",\"clipUuid\",\"actionsForClip\",\"_actionsByClip\",\"prototypeAction\",\"existingAction\",\"actionByRoot\",\"knownActions\",\"newAction\",\"_Action\",\"_bindAction\",\"_addInactiveAction\",\"stopAllAction\",\"actions\",\"_actions\",\"nActions\",\"_nActiveActions\",\"bindings\",\"_bindings\",\"nBindings\",\"_nActiveBindings\",\"useCount\",\"uncacheClip\",\"actionsByClip\",\"actionsToRemove\",\"cacheIndex\",\"lastInactiveAction\",\"_removeInactiveBindingsForAction\",\"uncacheRoot\",\"_removeInactiveAction\",\"bindingByName\",\"_bindingsByRootAndName\",\"binding\",\"restoreOriginalState\",\"_removeInactiveBinding\",\"uncacheAction\",\"bindingsByRoot\",\"bindingsByName\",\"referenceCount\",\"_addInactiveBinding\",\"path\",\"parsedPath\",\"PropertyMixer\",\"PropertyBinding\",\"ValueTypeName\",\"getValueSize\",\"_lendBinding\",\"saveOriginalState\",\"_lendAction\",\"_takeBackBinding\",\"_takeBackAction\",\"_controlInterpolants\",\"_nActiveControlInterpolants\",\"stats\",\"inUse\",\"controlInterpolants\",\"knownActionsForClip\",\"lastKnownAction\",\"byClipCacheIndex\",\"prevIndex\",\"lastActiveIndex\",\"firstInactiveAction\",\"firstInactiveIndex\",\"lastActiveAction\",\"propBinding\",\"rootNode\",\"lastInactiveBinding\",\"remove_empty_map\",\"firstInactiveBinding\",\"lastActiveBinding\",\"_controlInterpolantsResultBuffer\",\"__cacheIndex\",\"lastActiveInterpolant\",\"AnimationObjectGroup\",\"var_args\",\"_objects\",\"nCachedObjects_\",\"_indicesByUUID\",\"_paths\",\"_parsedPaths\",\"_bindingsIndicesByPath\",\"bindingsPerObject\",\"nObjects\",\"nCachedObjects\",\"indicesByUUID\",\"paths\",\"parsedPaths\",\"knownObject\",\"firstActiveIndex\",\"lastCachedObject\",\"bindingsForPath\",\"lastCached\",\"lastCachedIndex\",\"firstActiveObject\",\"firstActive\",\"uncache\",\"lastObject\",\"lastIndex\",\"subscribe_\",\"indicesByPath\",\"unsubscribe_\",\"lastBindingsIndex\",\"lastBindings\",\"arraySlice\",\"from\",\"isTypedArray\",\"subarray\",\"convertArray\",\"forceClone\",\"BYTES_PER_ELEMENT\",\"ArrayBuffer\",\"isView\",\"DataView\",\"nValues\",\"srcOffset\",\"jsonKeys\",\"valuePropertyName\",\"interpolation\",\"TimeBufferType\",\"ValueBufferType\",\"setInterpolation\",\"DefaultInterpolation\",\"validate\",\"InterpolantFactoryMethodDiscrete\",\"InterpolantFactoryMethodLinear\",\"InterpolantFactoryMethodSmooth\",\"factoryMethod\",\"getInterpolation\",\"timeOffset\",\"endTime\",\"nKeys\",\"valid\",\"prevTime\",\"currTime\",\"writeIndex\",\"keep\",\"offsetP\",\"offsetN\",\"readOffset\",\"writeOffset\",\"_getTrackTypeForValueTypeName\",\"typeName\",\"ColorKeyframeTrack\",\"BooleanKeyframeTrack\",\"StringKeyframeTrack\",\"parseTrackName\",\"findNode\",\"getValue\",\"targetArray\",\"setValue\",\"sourceArray\",\"targetObject\",\"objectName\",\"propertyIndex\",\"_getValue_unavailable\",\"_setValue_unavailable\",\"objectIndex\",\"skeleton\",\"nodeProperty\",\"versioning\",\"Versioning\",\"None\",\"NeedsUpdate\",\"MatrixWorldNeedsUpdate\",\"bindingType\",\"BindingType\",\"Direct\",\"ArrayElement\",\"resolvedProperty\",\"HasFromToArray\",\"EntireArray\",\"GetterByBindingType\",\"SetterByBindingTypeAndVersioning\",\"_getValue_unbound\",\"_setValue_unbound\",\"Composite\",\"targetGroup\",\"optionalParsedPath\",\"_targetGroup\",\"firstValidIndex\",\"re\",\"bone\",\"searchSkeleton\",\"searchNodeSubtree\",\"childNode\",\"subTreeNode\",\"mixFunction\",\"bufferType\",\"_slerp\",\"_select\",\"_lerp\",\"_mixBufferRegion\",\"cumulativeWeight\",\"currentWeight\",\"mix\",\"originalValueOffset\",\"Audio\",\"createBufferSource\",\"onended\",\"onEnded\",\"gain\",\"createGain\",\"connect\",\"getInput\",\"autoplay\",\"playbackRate\",\"isPlaying\",\"hasPlaybackControl\",\"sourceType\",\"getOutput\",\"setNodeSource\",\"audioNode\",\"setBuffer\",\"audioBuffer\",\"pause\",\"disconnect\",\"getFilters\",\"getFilter\",\"setFilter\",\"setPlaybackRate\",\"getPlaybackRate\",\"getLoop\",\"getVolume\",\"setVolume\",\"AudioAnalyser\",\"audio\",\"fftSize\",\"analyser\",\"createAnalyser\",\"frequencyBinCount\",\"getFrequencyData\",\"getByteFrequencyData\",\"getAverageFrequency\",\"AudioContext\",\"webkitAudioContext\",\"PositionalAudio\",\"panner\",\"createPanner\",\"getRefDistance\",\"refDistance\",\"setRefDistance\",\"getRolloffFactor\",\"rolloffFactor\",\"setRolloffFactor\",\"getDistanceModel\",\"distanceModel\",\"setDistanceModel\",\"getMaxDistance\",\"maxDistance\",\"setMaxDistance\",\"AudioListener\",\"destination\",\"removeFilter\",\"getMasterVolume\",\"setMasterVolume\",\"orientation\",\"setOrientation\",\"Camera\",\"matrixWorldInverse\",\"CubeCamera\",\"cubeResolution\",\"cameraPX\",\"cameraNX\",\"cameraPY\",\"cameraNY\",\"cameraPZ\",\"cameraNZ\",\"format\",\"magFilter\",\"minFilter\",\"renderTarget\",\"WebGLRenderTargetCube\",\"updateCubeMap\",\"generateMipmaps\",\"texture\",\"activeCubeFace\",\"setRenderTarget\",\"updateProjectionMatrix\",\"setViewOffset\",\"fullWidth\",\"fullHeight\",\"clearViewOffset\",\"cx\",\"cy\",\"zoomW\",\"zoomH\",\"scaleW\",\"scaleH\",\"filmGauge\",\"filmOffset\",\"setFocalLength\",\"focalLength\",\"vExtentSlope\",\"getFilmHeight\",\"atan\",\"getFocalLength\",\"getEffectiveFOV\",\"getFilmWidth\",\"skew\",\"StereoCamera\",\"cameraL\",\"cameraR\",\"eyeSepOnProjection\",\"Light\",\"intensity\",\"groundColor\",\"decay\",\"penumbra\",\"LightShadow\",\"bias\",\"mapSize\",\"shadow\",\"DirectionalLightShadow\",\"light\",\"HemisphereLight\",\"skyColor\",\"PointLight\",\"power\",\"SpotLight\",\"SpotLightShadow\",\"AudioLoader\",\"manager\",\"DefaultLoadingManager\",\"onLoad\",\"onError\",\"loader\",\"XHRLoader\",\"setResponseType\",\"decodeAudioData\",\"Cache\",\"files\",\"clear\",\"Loader\",\"onLoadStart\",\"onLoadProgress\",\"onLoadComplete\",\"crossOrigin\",\"extractUrlBase\",\"initMaterials\",\"texturePath\",\"createMaterial\",\"TextureLoader\",\"MaterialLoader\",\"loadTexture\",\"repeat\",\"anisotropy\",\"fullPath\",\"Handlers\",\"setCrossOrigin\",\"wrapS\",\"wrapT\",\"blending\",\"specular\",\"emissive\",\"shininess\",\"mapDiffuseRepeat\",\"mapDiffuseOffset\",\"mapDiffuseWrap\",\"mapDiffuseAnisotropy\",\"emissiveMap\",\"mapEmissiveRepeat\",\"mapEmissiveOffset\",\"mapEmissiveWrap\",\"mapEmissiveAnisotropy\",\"lightMap\",\"mapLightRepeat\",\"mapLightOffset\",\"mapLightWrap\",\"mapLightAnisotropy\",\"aoMap\",\"mapAORepeat\",\"mapAOOffset\",\"mapAOWrap\",\"mapAOAnisotropy\",\"bumpMap\",\"mapBumpRepeat\",\"mapBumpOffset\",\"mapBumpWrap\",\"mapBumpAnisotropy\",\"bumpScale\",\"normalMap\",\"mapNormalRepeat\",\"mapNormalOffset\",\"mapNormalWrap\",\"mapNormalAnisotropy\",\"normalScale\",\"specularMap\",\"mapSpecularRepeat\",\"mapSpecularOffset\",\"mapSpecularWrap\",\"mapSpecularAnisotropy\",\"metalnessMap\",\"mapMetalnessRepeat\",\"mapMetalnessOffset\",\"mapMetalnessWrap\",\"mapMetalnessAnisotropy\",\"roughnessMap\",\"mapRoughnessRepeat\",\"mapRoughnessOffset\",\"mapRoughnessWrap\",\"mapRoughnessAnisotropy\",\"alphaMap\",\"mapAlphaRepeat\",\"mapAlphaOffset\",\"mapAlphaWrap\",\"mapAlphaAnisotropy\",\"side\",\"transparent\",\"setTextures\",\"regex\",\"itemStart\",\"itemEnd\",\"request\",\"itemError\",\"withCredentials\",\"setPath\",\"setWithCredentials\",\"FontLoader\",\"substring\",\"font\",\"Font\",\"ImageLoader\",\"createElementNS\",\"URL\",\"revokeObjectURL\",\"blob\",\"createObjectURL\",\"JSONLoader\",\"setTexturePath\",\"isBitSet\",\"fi\",\"zLength\",\"colorIndex\",\"normalIndex\",\"uvIndex\",\"isQuad\",\"hasMaterial\",\"faceA\",\"faceB\",\"uvLayer\",\"nUvLayers\",\"parseModel\",\"influencesPerVertex\",\"parseSkin\",\"dstVertices\",\"srcVertices\",\"morphColors\",\"parseMorphing\",\"outputAnimations\",\"morphAnimationClips\",\"parseAnimations\",\"LoadingManager\",\"isLoading\",\"itemsLoaded\",\"itemsTotal\",\"onStart\",\"BufferGeometryLoader\",\"TYPED_ARRAYS\",\"typedArray\",\"drawcalls\",\"offsets\",\"getTexture\",\"metalness\",\"uniforms\",\"vertexShader\",\"fragmentShader\",\"shading\",\"alphaTest\",\"depthTest\",\"depthWrite\",\"colorWrite\",\"wireframe\",\"wireframeLinewidth\",\"sizeAttenuation\",\"displacementMap\",\"displacementScale\",\"displacementBias\",\"emissiveIntensity\",\"envMap\",\"combine\",\"reflectivity\",\"lightMapIntensity\",\"aoMapIntensity\",\"ObjectLoader\",\"lastIndexOf\",\"parseGeometries\",\"parseImages\",\"parseTextures\",\"parseMaterials\",\"parseObject\",\"geometryLoader\",\"bufferGeometryLoader\",\"widthSegments\",\"heightSegments\",\"depthSegments\",\"segments\",\"thetaStart\",\"thetaLength\",\"radiusTop\",\"radiusBottom\",\"radialSegments\",\"openEnded\",\"phiStart\",\"phiLength\",\"innerRadius\",\"outerRadius\",\"thetaSegments\",\"phiSegments\",\"tube\",\"tubularSegments\",\"arc\",\"loadImage\",\"parseConstant\",\"Texture\",\"mapping\",\"flipY\",\"getGeometry\",\"getMaterial\",\"SkinnedMesh\",\"levels\",\"level\",\"addLevel\",\"isJPEG\",\"CubeTextureLoader\",\"urls\",\"CubeTexture\",\"loaded\",\"DataTextureLoader\",\"BinaryTextureLoader\",\"_parser\",\"DataTexture\",\"texData\",\"mipmaps\",\"mipmapCount\",\"CompressedTextureLoader\",\"CompressedTexture\",\"texDatas\",\"isCubemap\",\"Material\",\"MaterialIdCount\",\"fog\",\"lights\",\"blendSrc\",\"blendDst\",\"blendEquation\",\"blendSrcAlpha\",\"blendDstAlpha\",\"blendEquationAlpha\",\"depthFunc\",\"clippingPlanes\",\"clipShadows\",\"polygonOffset\",\"polygonOffsetFactor\",\"polygonOffsetUnits\",\"premultipliedAlpha\",\"overdraw\",\"_needsUpdate\",\"setValues\",\"newValue\",\"isRoot\",\"srcPlanes\",\"dstPlanes\",\"LineBasicMaterial\",\"linewidth\",\"linecap\",\"linejoin\",\"LineDashedMaterial\",\"dashSize\",\"gapSize\",\"MeshBasicMaterial\",\"refractionRatio\",\"wireframeLinecap\",\"wireframeLinejoin\",\"skinning\",\"MeshDepthMaterial\",\"depthPacking\",\"MeshLambertMaterial\",\"MeshNormalMaterial\",\"MeshPhongMaterial\",\"defines\",\"STANDARD\",\"envMapIntensity\",\"MeshPhysicalMaterial\",\"PHYSICAL\",\"clearCoat\",\"clearCoatRoughness\",\"MultiMaterial\",\"PointsMaterial\",\"ShaderMaterial\",\"clipping\",\"extensions\",\"derivatives\",\"fragDepth\",\"drawBuffers\",\"shaderTextureLOD\",\"defaultAttributeValues\",\"index0AttributeName\",\"UniformsUtils\",\"RawShaderMaterial\",\"SpriteMaterial\",\"ShadowMaterial\",\"UniformsLib\",\"ShaderChunk\",\"encoding\",\"TextureIdCount\",\"sourceFile\",\"DEFAULT_IMAGE\",\"DEFAULT_MAPPING\",\"premultiplyAlpha\",\"unpackAlignment\",\"canvas\",\"toDataURL\",\"getContext\",\"drawImage\",\"getDataURL\",\"transformUv\",\"DepthTexture\",\"CanvasTexture\",\"VideoTexture\",\"video\",\"HAVE_CURRENT_DATA\",\"inverseMatrix\",\"localThreshold\",\"localThresholdSq\",\"testPoint\",\"rayPointDistanceSq\",\"intersectPoint\",\"distanceToRay\",\"LineSegments\",\"precisionSq\",\"vStart\",\"vEnd\",\"interSegment\",\"interRay\",\"faceIndex\",\"nbVertices\",\"drawMode\",\"updateMorphTargets\",\"setDrawMode\",\"morphTargetBase\",\"morphTargetInfluences\",\"morphTargetDictionary\",\"ml\",\"getMorphTargetIndexByName\",\"tempA\",\"tempB\",\"tempC\",\"uvA\",\"uvB\",\"uvC\",\"barycoord\",\"intersectionPoint\",\"intersectionPointWorld\",\"uvIntersection\",\"uv1\",\"uv3\",\"checkIntersection\",\"checkBufferGeometryIntersection\",\"intersection\",\"fvA\",\"fvB\",\"fvC\",\"isFaceMaterial\",\"faceMaterial\",\"morphInfluences\",\"tl\",\"influence\",\"uvs_f\",\"Bone\",\"skin\",\"Skeleton\",\"boneInverses\",\"useVertexTexture\",\"identityMatrix\",\"boneTextureWidth\",\"boneTextureHeight\",\"boneMatrices\",\"boneTexture\",\"calculateInverses\",\"bl\",\"pose\",\"bindMode\",\"bindMatrix\",\"bindMatrixInverse\",\"gbone\",\"rotq\",\"scl\",\"normalizeSkinWeights\",\"sw\",\"vec\",\"skinWeight\",\"getObjectForDistance\",\"LensFlare\",\"lensFlares\",\"positionScreen\",\"customUpdateCallback\",\"updateLensFlares\",\"flare\",\"vecX\",\"vecY\",\"wantedRotation\",\"background\",\"overrideMaterial\",\"autoUpdate\",\"Fog\",\"FogExp2\",\"density\",\"merged\",\"uniforms_src\",\"uniforms_dst\",\"parameter_src\",\"common\",\"diffuse\",\"offsetRepeat\",\"flipEnvMap\",\"aomap\",\"lightmap\",\"emissivemap\",\"bumpmap\",\"normalmap\",\"displacementmap\",\"roughnessmap\",\"metalnessmap\",\"fogDensity\",\"fogNear\",\"fogFar\",\"fogColor\",\"ambientLightColor\",\"directionalLights\",\"shadowBias\",\"shadowRadius\",\"shadowMapSize\",\"directionalShadowMap\",\"directionalShadowMatrix\",\"spotLights\",\"coneCos\",\"penumbraCos\",\"spotShadowMap\",\"spotShadowMatrix\",\"pointLights\",\"pointShadowMap\",\"pointShadowMatrix\",\"hemisphereLights\",\"ShaderLib\",\"basic\",\"lambert\",\"phong\",\"standard\",\"dashed\",\"totalSize\",\"cube\",\"tCube\",\"tFlip\",\"equirect\",\"tEquirect\",\"distanceRGBA\",\"lightPos\",\"_canvas\",\"_context\",\"_alpha\",\"_depth\",\"_stencil\",\"stencil\",\"_antialias\",\"antialias\",\"_premultipliedAlpha\",\"_preserveDrawingBuffer\",\"preserveDrawingBuffer\",\"opaqueObjects\",\"opaqueObjectsLastIndex\",\"transparentObjects\",\"transparentObjectsLastIndex\",\"sprites\",\"autoClear\",\"autoClearColor\",\"autoClearDepth\",\"autoClearStencil\",\"sortObjects\",\"localClippingEnabled\",\"gammaInput\",\"gammaOutput\",\"physicallyCorrectLights\",\"toneMapping\",\"toneMappingExposure\",\"toneMappingWhitePoint\",\"maxMorphTargets\",\"maxMorphNormals\",\"_gl\",\"_currentProgram\",\"_currentRenderTarget\",\"_currentFramebuffer\",\"_currentMaterialId\",\"_currentGeometryProgram\",\"_currentCamera\",\"_currentScissor\",\"_currentScissorTest\",\"_currentViewport\",\"_usedTextureUnits\",\"_clearColor\",\"_clearAlpha\",\"_width\",\"_height\",\"_pixelRatio\",\"_scissor\",\"_scissorTest\",\"_viewport\",\"_frustum\",\"_clipping\",\"WebGLClipping\",\"_clippingEnabled\",\"_localClippingEnabled\",\"_sphere\",\"_projScreenMatrix\",\"_vector3\",\"_lights\",\"ambient\",\"directional\",\"spot\",\"hemi\",\"shadows\",\"_infoRender\",\"calls\",\"info\",\"programs\",\"getShaderPrecisionFormat\",\"rangeMin\",\"rangeMax\",\"onContextLost\",\"WebGLExtensions\",\"capabilities\",\"WebGLCapabilities\",\"WebGLState\",\"paramThreeToGL\",\"WebGLProperties\",\"WebGLTextures\",\"WebGLObjects\",\"programCache\",\"WebGLPrograms\",\"lightCache\",\"WebGLLights\",\"bufferRenderer\",\"WebGLBufferRenderer\",\"indexedBufferRenderer\",\"WebGLIndexedBufferRenderer\",\"backgroundCamera\",\"backgroundCamera2\",\"backgroundPlaneMesh\",\"PlaneBufferGeometry\",\"backgroundBoxShader\",\"backgroundBoxMesh\",\"BoxBufferGeometry\",\"getTargetPixelRatio\",\"glClearColor\",\"clearColor\",\"setDefaultGLState\",\"scissor\",\"viewport\",\"resetGLState\",\"shadowMap\",\"WebGLShadowMap\",\"warned\",\"spritePlugin\",\"SpritePlugin\",\"lensFlarePlugin\",\"LensFlarePlugin\",\"onMaterialDispose\",\"releaseMaterialProgramReference\",\"delete\",\"deallocateMaterial\",\"programInfo\",\"program\",\"releaseProgram\",\"absNumericalSort\",\"painterSortStable\",\"reversePainterSortStable\",\"pushRenderItem\",\"renderItem\",\"isSphereViewable\",\"numPlanes\",\"negRad\",\"renderObjects\",\"renderList\",\"ImmediateRenderObject\",\"setMaterial\",\"setProgram\",\"renderBufferImmediate\",\"renderBufferDirect\",\"CULL_FACE\",\"setFlipSided\",\"setBlending\",\"setDepthFunc\",\"setDepthTest\",\"setDepthWrite\",\"setColorWrite\",\"setPolygonOffset\",\"materialProperties\",\"setState\",\"numClippingPlanes\",\"lightsHash\",\"getParameters\",\"getProgramCode\",\"programChange\",\"shaderID\",\"shader\",\"__webglShader\",\"acquireProgram\",\"getAttributes\",\"numSupportedMorphTargets\",\"numSupportedMorphNormals\",\"uniform\",\"progUniforms\",\"getUniforms\",\"uniformsList\",\"WebGLUniforms\",\"seqWithValue\",\"seq\",\"dynamicUniforms\",\"splitDynamic\",\"initMaterial\",\"refreshProgram\",\"refreshMaterial\",\"refreshLights\",\"p_uniforms\",\"m_uniforms\",\"useProgram\",\"logarithmicDepthBuffer\",\"uCamPos\",\"cameraPosition\",\"setOptional\",\"floatVertexTextures\",\"refreshUniformsFog\",\"uvScaleMap\",\"WebGLRenderTarget\",\"refreshUniformsCommon\",\"refreshUniformsLine\",\"refreshUniformsDash\",\"clientHeight\",\"refreshUniformsPoints\",\"refreshUniformsLambert\",\"refreshUniformsPhong\",\"refreshUniformsStandard\",\"refreshUniformsPhysical\",\"upload\",\"dynUniforms\",\"evalDynamic\",\"extension\",\"REPEAT\",\"CLAMP_TO_EDGE\",\"MIRRORED_REPEAT\",\"NEAREST\",\"NEAREST_MIPMAP_NEAREST\",\"NEAREST_MIPMAP_LINEAR\",\"LINEAR\",\"LINEAR_MIPMAP_NEAREST\",\"LINEAR_MIPMAP_LINEAR\",\"UNSIGNED_BYTE\",\"UNSIGNED_SHORT_4_4_4_4\",\"UNSIGNED_SHORT_5_5_5_1\",\"UNSIGNED_SHORT_5_6_5\",\"BYTE\",\"SHORT\",\"UNSIGNED_SHORT\",\"INT\",\"UNSIGNED_INT\",\"FLOAT\",\"HALF_FLOAT_OES\",\"ALPHA\",\"RGB\",\"RGBA\",\"LUMINANCE\",\"LUMINANCE_ALPHA\",\"DEPTH_COMPONENT\",\"FUNC_ADD\",\"FUNC_SUBTRACT\",\"FUNC_REVERSE_SUBTRACT\",\"ZERO\",\"ONE\",\"SRC_COLOR\",\"ONE_MINUS_SRC_COLOR\",\"SRC_ALPHA\",\"ONE_MINUS_SRC_ALPHA\",\"DST_ALPHA\",\"ONE_MINUS_DST_ALPHA\",\"DST_COLOR\",\"ONE_MINUS_DST_COLOR\",\"SRC_ALPHA_SATURATE\",\"COMPRESSED_RGB_S3TC_DXT1_EXT\",\"COMPRESSED_RGBA_S3TC_DXT1_EXT\",\"COMPRESSED_RGBA_S3TC_DXT3_EXT\",\"COMPRESSED_RGBA_S3TC_DXT5_EXT\",\"COMPRESSED_RGB_PVRTC_4BPPV1_IMG\",\"COMPRESSED_RGB_PVRTC_2BPPV1_IMG\",\"COMPRESSED_RGBA_PVRTC_4BPPV1_IMG\",\"COMPRESSED_RGBA_PVRTC_2BPPV1_IMG\",\"COMPRESSED_RGB_ETC1_WEBGL\",\"MIN_EXT\",\"MAX_EXT\",\"getContextAttributes\",\"forceContextLoss\",\"loseContext\",\"getMaxAnisotropy\",\"getPrecision\",\"getPixelRatio\",\"setPixelRatio\",\"getSize\",\"updateStyle\",\"setViewport\",\"setScissor\",\"setScissorTest\",\"boolean\",\"getClearColor\",\"setClearColor\",\"getClearAlpha\",\"setClearAlpha\",\"bits\",\"COLOR_BUFFER_BIT\",\"DEPTH_BUFFER_BIT\",\"STENCIL_BUFFER_BIT\",\"clearDepth\",\"clearStencil\",\"clearTarget\",\"initAttributes\",\"buffers\",\"hasPositions\",\"createBuffer\",\"hasNormals\",\"hasUvs\",\"hasColors\",\"bindBuffer\",\"ARRAY_BUFFER\",\"bufferData\",\"positionArray\",\"DYNAMIC_DRAW\",\"enableAttribute\",\"vertexAttribPointer\",\"normalArray\",\"nx\",\"ny\",\"nz\",\"uvArray\",\"colorArray\",\"disableUnusedAttributes\",\"drawArrays\",\"TRIANGLES\",\"updateBuffers\",\"geometryProgram\",\"activeInfluences\",\"getWireframeAttribute\",\"startIndex\",\"geometryAttributes\",\"programAttributes\",\"materialDefaultAttributeValues\",\"programAttribute\",\"geometryAttribute\",\"getAttributeBuffer\",\"enableAttributeAndDivisor\",\"vertexAttrib2fv\",\"vertexAttrib3fv\",\"vertexAttrib4fv\",\"vertexAttrib1fv\",\"setupVertexAttributes\",\"ELEMENT_ARRAY_BUFFER\",\"dataCount\",\"rangeStart\",\"rangeCount\",\"groupStart\",\"groupCount\",\"drawStart\",\"drawEnd\",\"drawCount\",\"setLineWidth\",\"setMode\",\"LINES\",\"TRIANGLE_STRIP\",\"TRIANGLE_FAN\",\"lineWidth\",\"LINE_STRIP\",\"POINTS\",\"renderInstances\",\"forceClear\",\"projectObject\",\"isObjectViewable\",\"groupMaterial\",\"beginShadows\",\"lightShadowsLength\",\"setupShadows\",\"ll\",\"viewMatrix\",\"directionalLength\",\"pointLength\",\"spotLength\",\"hemiLength\",\"setupLights\",\"endShadows\",\"updateRenderTargetMipmap\",\"setFaceCulling\",\"cullFace\",\"frontFaceDirection\",\"setCullFace\",\"allocTextureUnit\",\"textureUnit\",\"maxTextures\",\"setTexture2D\",\"slot\",\"setTexture\",\"setTextureCube\",\"setTextureCubeDynamic\",\"getCurrentRenderTarget\",\"__webglFramebuffer\",\"setupRenderTarget\",\"framebuffer\",\"isCube\",\"renderTargetProperties\",\"scissorTest\",\"bindFramebuffer\",\"FRAMEBUFFER\",\"textureProperties\",\"framebufferTexture2D\",\"COLOR_ATTACHMENT0\",\"TEXTURE_CUBE_MAP_POSITIVE_X\",\"__webglTexture\",\"activeMipMapLevel\",\"readRenderTargetPixels\",\"restore\",\"IMPLEMENTATION_COLOR_READ_FORMAT\",\"IMPLEMENTATION_COLOR_READ_TYPE\",\"checkFramebufferStatus\",\"FRAMEBUFFER_COMPLETE\",\"readPixels\",\"depthBuffer\",\"stencilBuffer\",\"depthTexture\",\"drawArraysInstancedANGLE\",\"globalState\",\"numGlobalPlanes\",\"renderingShadows\",\"viewNormalMatrix\",\"resetGlobalState\",\"projectPlanes\",\"skipTransform\",\"nPlanes\",\"dstArray\",\"flatSize\",\"i4\",\"enableLocalClipping\",\"fromCache\",\"nGlobal\",\"lGlobal\",\"clippingState\",\"drawElements\",\"drawElementsInstancedANGLE\",\"gl\",\"getExtension\",\"maxAnisotropy\",\"getMaxPrecision\",\"VERTEX_SHADER\",\"HIGH_FLOAT\",\"FRAGMENT_SHADER\",\"MEDIUM_FLOAT\",\"MAX_TEXTURE_MAX_ANISOTROPY_EXT\",\"MAX_TEXTURE_IMAGE_UNITS\",\"maxVertexTextures\",\"MAX_VERTEX_TEXTURE_IMAGE_UNITS\",\"maxTextureSize\",\"MAX_TEXTURE_SIZE\",\"maxCubemapSize\",\"MAX_CUBE_MAP_TEXTURE_SIZE\",\"maxAttributes\",\"MAX_VERTEX_ATTRIBS\",\"maxVertexUniforms\",\"MAX_VERTEX_UNIFORM_VECTORS\",\"maxVaryings\",\"MAX_VARYING_VECTORS\",\"maxFragmentUniforms\",\"MAX_FRAGMENT_UNIFORM_VECTORS\",\"vertexTextures\",\"floatFragmentTextures\",\"_maxPrecision\",\"WebGLGeometries\",\"onGeometryDispose\",\"buffergeometry\",\"deleteAttribute\",\"deleteAttributes\",\"bufferproperty\",\"__webglBuffer\",\"deleteBuffer\",\"removeAttributeBuffer\",\"_bufferGeometry\",\"updateAttribute\",\"attributeProperties\",\"usage\",\"STATIC_DRAW\",\"bufferSubData\",\"updateBuffer\",\"checkEdge\",\"edges\",\"TypeArray\",\"WebGLProgram\",\"programIdCount\",\"getEncodingComponents\",\"getTexelDecodingFunction\",\"functionName\",\"getToneMappingFunction\",\"toneMappingName\",\"filterEmptyLine\",\"replaceLightNums\",\"numDirLights\",\"numSpotLights\",\"numPointLights\",\"numHemiLights\",\"parseIncludes\",\"include\",\"unrollLoops\",\"snippet\",\"unroll\",\"shadowMapTypeDefine\",\"shadowMapType\",\"envMapTypeDefine\",\"envMapModeDefine\",\"envMapBlendingDefine\",\"prefixVertex\",\"prefixFragment\",\"gammaFactorDefine\",\"customExtensions\",\"rendererExtensions\",\"envMapCubeUV\",\"flatShading\",\"generateExtensions\",\"customDefines\",\"generateDefines\",\"createProgram\",\"supportsVertexTextures\",\"maxBones\",\"doubleSided\",\"flipSided\",\"shadowMapEnabled\",\"useFog\",\"fogExp\",\"outputEncoding\",\"mapEncoding\",\"envMapEncoding\",\"emissiveMapEncoding\",\"vertexGlsl\",\"fragmentGlsl\",\"glVertexShader\",\"WebGLShader\",\"glFragmentShader\",\"attachShader\",\"bindAttribLocation\",\"linkProgram\",\"cachedUniforms\",\"cachedAttributes\",\"programLog\",\"getProgramInfoLog\",\"vertexLog\",\"getShaderInfoLog\",\"fragmentLog\",\"runnable\",\"haveDiagnostics\",\"getProgramParameter\",\"LINK_STATUS\",\"getError\",\"VALIDATE_STATUS\",\"diagnostics\",\"deleteShader\",\"identifiers\",\"ACTIVE_ATTRIBUTES\",\"getActiveAttrib\",\"getAttribLocation\",\"fetchAttributeLocations\",\"destroy\",\"deleteProgram\",\"usedTimes\",\"shaderIDs\",\"parameterNames\",\"getTextureEncodingFromMap\",\"gammaOverrideLinear\",\"nClipPlanes\",\"nVertexUniforms\",\"allocateBones\",\"currentRenderTarget\",\"envMapMode\",\"pl\",\"createShader\",\"shaderSource\",\"compileShader\",\"getShaderParameter\",\"COMPILE_STATUS\",\"addLineNumbers\",\"_renderer\",\"_state\",\"_lightShadows\",\"_shadowMapSize\",\"_maxShadowMapSize\",\"_lookTarget\",\"_lightPositionWorld\",\"_renderList\",\"_MorphingFlag\",\"_SkinningFlag\",\"_NumberOfMaterialVariants\",\"_depthMaterials\",\"_distanceMaterials\",\"_materialCache\",\"cubeDirections\",\"cubeUps\",\"cube2DViewPorts\",\"depthMaterialTemplate\",\"distanceShader\",\"distanceUniforms\",\"useMorphing\",\"useSkinning\",\"depthMaterial\",\"distanceMaterial\",\"USE_SHADOWMAP\",\"getDepthMaterial\",\"isPointLight\",\"lightPositionWorld\",\"materialVariants\",\"customMaterial\",\"customDepthMaterial\",\"customDistanceMaterial\",\"variantIndex\",\"keyA\",\"keyB\",\"materialsForVariant\",\"cachedMaterial\",\"renderSingleSided\",\"renderReverseSided\",\"shadowCamera\",\"faceCount\",\"BLEND\",\"vpWidth\",\"vpHeight\",\"pars\",\"shadowMatrix\",\"vpDimensions\",\"clearAlpha\",\"WebGLColorBuffer\",\"WebGLDepthBuffer\",\"WebGLStencilBuffer\",\"maxVertexAttributes\",\"newAttributes\",\"enabledAttributes\",\"attributeDivisors\",\"compressedTextureFormats\",\"currentBlending\",\"currentBlendEquation\",\"currentBlendSrc\",\"currentBlendDst\",\"currentBlendEquationAlpha\",\"currentBlendSrcAlpha\",\"currentBlendDstAlpha\",\"currentPremultipledAlpha\",\"currentFlipSided\",\"currentCullFace\",\"currentLineWidth\",\"currentPolygonOffsetFactor\",\"currentPolygonOffsetUnits\",\"currentScissorTest\",\"currentTextureSlot\",\"currentBoundTextures\",\"currentScissor\",\"currentViewport\",\"createTexture\",\"bindTexture\",\"texParameteri\",\"TEXTURE_MIN_FILTER\",\"TEXTURE_MAG_FILTER\",\"texImage2D\",\"emptyTextures\",\"TEXTURE_2D\",\"TEXTURE_CUBE_MAP\",\"DEPTH_TEST\",\"enableVertexAttribArray\",\"vertexAttribDivisorANGLE\",\"disableVertexAttribArray\",\"getCompressedTextureFormats\",\"formats\",\"COMPRESSED_TEXTURE_FORMATS\",\"blendEquationSeparate\",\"blendFuncSeparate\",\"blendFunc\",\"setMask\",\"setTest\",\"setFunc\",\"setStencilTest\",\"stencilTest\",\"setStencilWrite\",\"stencilWrite\",\"setStencilFunc\",\"stencilFunc\",\"stencilRef\",\"stencilMask\",\"setStencilOp\",\"stencilFail\",\"stencilZFail\",\"stencilZPass\",\"setOp\",\"frontFace\",\"CW\",\"CCW\",\"BACK\",\"FRONT\",\"FRONT_AND_BACK\",\"factor\",\"units\",\"POLYGON_OFFSET_FILL\",\"getScissorTest\",\"SCISSOR_TEST\",\"activeTexture\",\"webglSlot\",\"TEXTURE0\",\"webglType\",\"webglTexture\",\"boundTexture\",\"compressedTexImage2D\",\"setClear\",\"currentColorMask\",\"currentColorClear\",\"colorMask\",\"setLocked\",\"currentDepthMask\",\"currentDepthFunc\",\"currentDepthClear\",\"depthMask\",\"NEVER\",\"ALWAYS\",\"LESS\",\"LEQUAL\",\"EQUAL\",\"GEQUAL\",\"GREATER\",\"NOTEQUAL\",\"currentStencilMask\",\"currentStencilFunc\",\"currentStencilRef\",\"currentStencilFuncMask\",\"currentStencilFail\",\"currentStencilZFail\",\"currentStencilZPass\",\"currentStencilClear\",\"STENCIL_TEST\",\"stencilOp\",\"_infoMemory\",\"_isWebGL2\",\"WebGL2RenderingContext\",\"clampToMaxSize\",\"maxSize\",\"filterFallback\",\"onTextureDispose\",\"__image__webglTextureCube\",\"deleteTexture\",\"__webglInit\",\"deallocateTexture\",\"onRenderTargetDispose\",\"deleteFramebuffer\",\"__webglDepthbuffer\",\"deleteRenderbuffer\",\"deallocateRenderTarget\",\"__version\",\"pixelStorei\",\"UNPACK_FLIP_Y_WEBGL\",\"UNPACK_PREMULTIPLY_ALPHA_WEBGL\",\"UNPACK_ALIGNMENT\",\"textureNeedsPowerOfTwo\",\"HTMLImageElement\",\"HTMLCanvasElement\",\"makePowerOfTwo\",\"isPowerOfTwoImage\",\"glFormat\",\"glType\",\"setTextureParameters\",\"mipmap\",\"internalFormat\",\"DEPTH_COMPONENT32F\",\"DEPTH_COMPONENT16\",\"generateMipmap\",\"uploadTexture\",\"textureType\",\"TEXTURE_WRAP_S\",\"TEXTURE_WRAP_T\",\"__currentAnisotropy\",\"texParameterf\",\"TEXTURE_MAX_ANISOTROPY_EXT\",\"setupFrameBufferTexture\",\"attachment\",\"textureTarget\",\"setupRenderBufferStorage\",\"renderbuffer\",\"bindRenderbuffer\",\"RENDERBUFFER\",\"renderbufferStorage\",\"framebufferRenderbuffer\",\"DEPTH_ATTACHMENT\",\"DEPTH_STENCIL\",\"DEPTH_STENCIL_ATTACHMENT\",\"RGBA4\",\"setupDepthRenderbuffer\",\"webglDepthTexture\",\"setupDepthTexture\",\"createRenderbuffer\",\"isCompressed\",\"isDataTexture\",\"cubeImage\",\"isTargetPowerOfTwo\",\"createFramebuffer\",\"emptyTexture\",\"emptyCubeTexture\",\"UniformContainer\",\"arrayCacheF32\",\"arrayCacheI32\",\"flatten\",\"nBlocks\",\"blockSize\",\"firstElem\",\"allocTexUnits\",\"setValue1f\",\"uniform1f\",\"addr\",\"setValue1i\",\"uniform1i\",\"setValue2fv\",\"uniform2fv\",\"uniform2f\",\"setValue3fv\",\"uniform3f\",\"uniform3fv\",\"setValue4fv\",\"uniform4fv\",\"uniform4f\",\"setValue2fm\",\"uniformMatrix2fv\",\"setValue3fm\",\"uniformMatrix3fv\",\"setValue4fm\",\"uniformMatrix4fv\",\"setValueT1\",\"setValueT6\",\"setValue2iv\",\"uniform2iv\",\"setValue3iv\",\"uniform3iv\",\"setValue4iv\",\"uniform4iv\",\"setValue1fv\",\"uniform1fv\",\"setValue1iv\",\"uniform1iv\",\"setValueV2a\",\"setValueV3a\",\"setValueV4a\",\"setValueM2a\",\"setValueM3a\",\"setValueM4a\",\"setValueT1a\",\"setValueT6a\",\"SingleUniform\",\"activeInfo\",\"getSingularSetter\",\"PureArrayUniform\",\"getPureArraySetter\",\"StructuredUniform\",\"RePathPart\",\"addUniform\",\"uniformObject\",\"parseUniform\",\"pathLength\",\"matchEnd\",\"idIsIndex\",\"subscript\",\"ACTIVE_UNIFORMS\",\"getActiveUniform\",\"getUniformLocation\",\"flares\",\"vertexBuffer\",\"elementBuffer\",\"tempTexture\",\"occlusionTexture\",\"renderType\",\"occlusionMap\",\"screenPosition\",\"tempPosition\",\"invAspect\",\"halfViewportWidth\",\"halfViewportHeight\",\"screenPositionPixels\",\"validArea\",\"TEXTURE1\",\"copyTexImage2D\",\"spritePosition\",\"spriteRotation\",\"spriteScale\",\"uvOffset\",\"uvScale\",\"fogType\",\"fillStyle\",\"fillRect\",\"oldFogType\",\"sceneFogType\",\"Face4\",\"LineStrip\",\"LinePieces\",\"MeshFaceMaterial\",\"Particle\",\"ParticleSystem\",\"PointCloudMaterial\",\"ParticleBasicMaterial\",\"ParticleSystemMaterial\",\"Vertex\",\"isIntersectionBox\",\"isIntersectionSphere\",\"multiplyVector3\",\"multiplyVector3Array\",\"extractPosition\",\"multiplyVector4\",\"rotateAxis\",\"crossVector\",\"rotateByAxis\",\"isIntersectionLine\",\"isIntersectionPlane\",\"setEulerFromRotationMatrix\",\"setEulerFromQuaternion\",\"getPositionFromMatrix\",\"getScaleFromMatrix\",\"getColumnFromMatrix\",\"getChildByName\",\"renderDepth\",\"eulerOrder\",\"useQuaternion\",\"setLens\",\"onlyShadow\",\"shadowCameraFov\",\"shadowCameraLeft\",\"shadowCameraRight\",\"shadowCameraTop\",\"shadowCameraBottom\",\"shadowCameraNear\",\"shadowCameraFar\",\"shadowCameraVisible\",\"shadowDarkness\",\"shadowMapWidth\",\"shadowMapHeight\",\"addIndex\",\"addDrawCall\",\"indexOffset\",\"clearDrawCalls\",\"computeOffsets\",\"wrapAround\",\"wrapRGB\",\"metal\",\"supportsFloatTextures\",\"supportsHalfFloatTextures\",\"supportsStandardDerivatives\",\"supportsCompressedTextureS3TC\",\"supportsCompressedTexturePVRTC\",\"supportsBlendMinMax\",\"supportsInstancedArrays\",\"enableScissorTest\",\"addPrePlugin\",\"addPostPlugin\",\"updateShadowMap\",\"shadowMapCullFace\",\"GeometryUtils\",\"geometry1\",\"ImageUtils\",\"loadTextureCube\",\"loadCompressedTexture\",\"loadCompressedTextureCube\",\"Projector\",\"projectVector\",\"unprojectVector\",\"pickingRay\",\"CanvasRenderer\",\"CurveUtils\",\"tangentQuadraticBezier\",\"tangentCubicBezier\",\"tangentSpline\",\"SceneUtils\",\"createMultiMaterialObject\",\"attach\",\"ShapeUtils\",\"contour\",\"triangulate\",\"snip\",\"verts\",\"px\",\"py\",\"aX\",\"aY\",\"bX\",\"bY\",\"cX\",\"cY\",\"cCROSSap\",\"bCROSScp\",\"vertIndices\",\"nv\",\"triangulateShape\",\"holes\",\"removeDupEndPts\",\"point_in_segment_2D_colin\",\"inSegPt1\",\"inSegPt2\",\"inOtherPt\",\"intersect_segments_2D\",\"inSeg1Pt1\",\"inSeg1Pt2\",\"inSeg2Pt1\",\"inSeg2Pt2\",\"inExcludeAdjacentSegs\",\"seg1dx\",\"seg1dy\",\"seg2dx\",\"seg2dy\",\"seg1seg2dx\",\"seg1seg2dy\",\"limit\",\"perpSeg1\",\"perpSeg2\",\"factorSeg1\",\"seg1min\",\"seg1max\",\"seg1minVal\",\"seg1maxVal\",\"seg2min\",\"seg2max\",\"seg2minVal\",\"seg2maxVal\",\"seg1Pt\",\"seg2Pt\",\"isPointInsideAngle\",\"inVertex\",\"inLegFromPt\",\"inLegToPt\",\"legFromPtX\",\"legFromPtY\",\"legToPtX\",\"legToPtY\",\"otherPtX\",\"otherPtY\",\"from2toAngle\",\"from2otherAngle\",\"other2toAngle\",\"allPointsMap\",\"allpoints\",\"hl\",\"shapeWithoutHoles\",\"hole\",\"shape\",\"isCutLineInsideAngles\",\"inShapeIdx\",\"inHoleIdx\",\"lastShapeIdx\",\"prevShapeIdx\",\"nextShapeIdx\",\"insideAngle\",\"lastHoleIdx\",\"prevHoleIdx\",\"nextHoleIdx\",\"intersectsShapeEdge\",\"inShapePt\",\"inHolePt\",\"sIdx\",\"nextIdx\",\"indepHoles\",\"intersectsHoleEdge\",\"ihIdx\",\"chkHole\",\"hIdx\",\"holeIndex\",\"shapeIndex\",\"shapePt\",\"holePt\",\"holeIdx\",\"cutKey\",\"tmpShape1\",\"tmpShape2\",\"tmpHole1\",\"tmpHole2\",\"failedCuts\",\"minShapeIndex\",\"h2\",\"removeHoles\",\"triangles\",\"isClockWise\",\"pts\",\"b2p0\",\"b2p1\",\"b2p2\",\"b3\",\"b3p0\",\"b3p1\",\"b3p2\",\"b3p3\",\"Curve\",\"getPointAt\",\"getUtoTmapping\",\"getPoints\",\"divisions\",\"getSpacedPoints\",\"lengths\",\"getLengths\",\"cacheArcLengths\",\"sum\",\"updateArcLengths\",\"targetArcLength\",\"arcLengths\",\"comparison\",\"lengthBefore\",\"getTangent\",\"pt1\",\"getTangentAt\",\"getPointFunc\",\"CurvePath\",\"curves\",\"autoClose\",\"curve\",\"closePath\",\"startPoint\",\"endPoint\",\"LineCurve\",\"curveLengths\",\"getCurveLengths\",\"segmentLength\",\"lens\",\"cacheLengths\",\"sums\",\"resolution\",\"EllipseCurve\",\"SplineCurve\",\"createPointsGeometry\",\"createGeometry\",\"createSpacedPointsGeometry\",\"generateShapes\",\"createPath\",\"glyph\",\"glyphs\",\"cpx\",\"cpy\",\"cpx0\",\"cpy0\",\"cpx1\",\"cpy1\",\"cpx2\",\"cpy2\",\"laste\",\"ShapePath\",\"outline\",\"_cachedOutline\",\"moveTo\",\"lineTo\",\"quadraticCurveTo\",\"bezierCurveTo\",\"ha\",\"createPaths\",\"shapes\",\"toShapes\",\"Path\",\"currentPoint\",\"fromPoints\",\"aCPx\",\"aCPy\",\"QuadraticBezierCurve\",\"aCP1x\",\"aCP1y\",\"aCP2x\",\"aCP2y\",\"CubicBezierCurve\",\"splineThru\",\"npts\",\"aRadius\",\"aStartAngle\",\"aEndAngle\",\"aClockwise\",\"absarc\",\"absellipse\",\"ellipse\",\"xRadius\",\"yRadius\",\"aRotation\",\"firstPoint\",\"lastPoint\",\"subPaths\",\"currentPath\",\"isCCW\",\"noHoles\",\"toShapesNoHoles\",\"inSubpaths\",\"tmpPath\",\"tmpShape\",\"Shape\",\"isPointInsidePolygon\",\"inPt\",\"inPolygon\",\"polyLen\",\"inside\",\"edgeLowPt\",\"edgeHighPt\",\"edgeDx\",\"edgeDy\",\"perpEdge\",\"solid\",\"holesFirst\",\"tmpPoints\",\"tmpHoles\",\"betterShapeHoles\",\"newShapes\",\"newShapeHoles\",\"mainIdx\",\"ambiguous\",\"toChange\",\"sLen\",\"sho\",\"ho\",\"hole_unassigned\",\"s2Idx\",\"froms\",\"tos\",\"extrude\",\"ExtrudeGeometry\",\"makeGeometry\",\"ShapeGeometry\",\"getPointsHoles\",\"holesPts\",\"extractAllPoints\",\"extractPoints\",\"point0\",\"point1\",\"point2\",\"point3\",\"twoPi\",\"deltaAngle\",\"samePoints\",\"ArcCurve\",\"LineCurve3\",\"QuadraticBezierCurve3\",\"CubicBezierCurve3\",\"SplineCurve3\",\"CatmullRomCurve3\",\"CubicPoly\",\"pz\",\"c0\",\"initNonuniformCatmullRom\",\"x3\",\"dt0\",\"dt1\",\"dt2\",\"initCatmullRom\",\"tension\",\"calc\",\"closed\",\"ClosedSplineCurve3\",\"BoxGeometry\",\"CubeGeometry\",\"vertexCount\",\"calculateVertexCount\",\"indexCount\",\"vertexBufferOffset\",\"uvBufferOffset\",\"indexBufferOffset\",\"numberOfVertices\",\"buildPlane\",\"udir\",\"vdir\",\"gridX\",\"gridY\",\"segmentWidth\",\"segmentHeight\",\"widthHalf\",\"heightHalf\",\"depthHalf\",\"gridX1\",\"gridY1\",\"vertexCounter\",\"CircleGeometry\",\"CircleBufferGeometry\",\"ii\",\"segment\",\"CylinderBufferGeometry\",\"nbCap\",\"calculateIndexCount\",\"indexArray\",\"halfHeight\",\"generateCap\",\"centerIndexStart\",\"centerIndexEnd\",\"cosTheta\",\"sinTheta\",\"tanTheta\",\"indexRow\",\"i3\",\"generateTorso\",\"ConeBufferGeometry\",\"ConeGeometry\",\"EdgesGeometry\",\"thresholdAngle\",\"thresholdDot\",\"sortFunction\",\"vert1\",\"vert2\",\"face1\",\"face2\",\"addShapeList\",\"addShape\",\"extrudePts\",\"splineTube\",\"binormal\",\"position2\",\"ahole\",\"amount\",\"bevelThickness\",\"bevelSize\",\"bevelSegments\",\"bevelEnabled\",\"curveSegments\",\"steps\",\"extrudePath\",\"extrudeByPath\",\"uvgen\",\"UVGenerator\",\"WorldUVGenerator\",\"frames\",\"TubeGeometry\",\"FrenetFrames\",\"shapesOffset\",\"shapePoints\",\"scalePt2\",\"pt\",\"bs\",\"vert\",\"vlen\",\"flen\",\"getBevelVec\",\"inPrev\",\"inNext\",\"v_trans_x\",\"v_trans_y\",\"shrink_by\",\"v_prev_x\",\"v_prev_y\",\"v_next_x\",\"v_next_y\",\"v_prev_lensq\",\"collinear0\",\"v_prev_len\",\"v_next_len\",\"ptPrevShift_x\",\"ptPrevShift_y\",\"sf\",\"v_trans_lensq\",\"direction_eq\",\"contourMovements\",\"oneHoleMovements\",\"holesMovements\",\"verticesMovements\",\"binormals\",\"sidewalls\",\"layeroffset\",\"slen1\",\"slen2\",\"f4\",\"f3\",\"generateTopUV\",\"wallContour\",\"stepIndex\",\"stepsLength\",\"contourIndex1\",\"contourIndex2\",\"generateSideWallUV\",\"layer\",\"buildLidFaces\",\"buildSideFaces\",\"indexA\",\"indexB\",\"indexC\",\"indexD\",\"LatheBufferGeometry\",\"inverseSegments\",\"n1\",\"n2\",\"LatheGeometry\",\"PlaneGeometry\",\"width_half\",\"height_half\",\"segment_width\",\"segment_height\",\"offset2\",\"RingBufferGeometry\",\"radiusStep\",\"thetaSegmentLevel\",\"RingGeometry\",\"SphereBufferGeometry\",\"thetaEnd\",\"verticesRow\",\"v4\",\"TextGeometry\",\"TorusBufferGeometry\",\"TorusGeometry\",\"TorusKnotBufferGeometry\",\"P1\",\"P2\",\"B\",\"T\",\"N\",\"calculatePositionOnCurve\",\"cu\",\"su\",\"quOverP\",\"cs\",\"TorusKnotGeometry\",\"heightScale\",\"taper\",\"NoTaper\",\"ip\",\"jp\",\"uva\",\"uvb\",\"uvc\",\"uvd\",\"grid\",\"numpoints\",\"pos2\",\"tangents\",\"SinusoidalTaper\",\"smallest\",\"tz\",\"mat\",\"MAX_VALUE\",\"initialNormal3\",\"PolyhedronGeometry\",\"prepare\",\"centroid\",\"subdivide\",\"azimuth\",\"inclination\",\"make\",\"azi\",\"correctUV\",\"cols\",\"aj\",\"bj\",\"rows\",\"DodecahedronGeometry\",\"IcosahedronGeometry\",\"OctahedronGeometry\",\"TetrahedronGeometry\",\"ParametricGeometry\",\"slices\",\"stacks\",\"sliceCount\",\"WireframeGeometry\",\"numEdges\",\"ol\",\"numTris\",\"lineGeometry\",\"coneGeometry\",\"headLength\",\"headWidth\",\"cone\",\"setDirection\",\"setColor\",\"BoxHelper\",\"BoundingBoxHelper\",\"CameraHelper\",\"pointMap\",\"addLine\",\"addPoint\",\"setPoint\",\"DirectionalLightHelper\",\"lightPlane\",\"targetLine\",\"EdgesHelper\",\"FaceNormalsHelper\",\"nNormals\",\"objGeometry\",\"setColors\",\"HemisphereLightHelper\",\"sphereSize\",\"lightSphere\",\"PointLightHelper\",\"SkeletonHelper\",\"getBoneList\",\"boneList\",\"matrixWorldInv\",\"boneMatrix\",\"SpotLightHelper\",\"vector2\",\"coneLength\",\"coneWidth\",\"VertexNormalsHelper\",\"objPos\",\"objNorm\",\"WireframeHelper\",\"renderCallback\",\"MorphBlendMesh\",\"animationsMap\",\"animationsList\",\"numFrames\",\"endFrame\",\"createAnimation\",\"setAnimationWeight\",\"lastFrame\",\"currentFrame\",\"directionBackwards\",\"mirroredLoop\",\"autoCreateAnimations\",\"firstAnimation\",\"frameRanges\",\"setAnimationDirectionForward\",\"setAnimationDirectionBackward\",\"setAnimationFPS\",\"setAnimationDuration\",\"setAnimationTime\",\"getAnimationTime\",\"getAnimationDuration\",\"playAnimation\",\"stopAnimation\",\"keyframe\",\"__webpack_amd_options__\",\"./AdaptiveToneMappingPass.js\",\"./BasicShader.js\",\"./BleachBypassShader.js\",\"./BlendShader.js\",\"./BloomPass.js\",\"./BokehPass.js\",\"./BokehShader.js\",\"./BokehShader2.js\",\"./BrightnessContrastShader.js\",\"./CanvasRenderer.js\",\"./ColorCorrectionShader.js\",\"./ColorifyShader.js\",\"./ConvolutionShader.js\",\"./CopyShader.js\",\"./DDSLoader.js\",\"./DOFMipMapShader.js\",\"./DigitalGlitch.js\",\"./DotScreenPass.js\",\"./DotScreenShader.js\",\"./EdgeShader.js\",\"./EdgeShader2.js\",\"./EffectComposer.js\",\"./FXAAShader.js\",\"./FilmPass.js\",\"./FilmShader.js\",\"./FocusShader.js\",\"./FresnelShader.js\",\"./GammaCorrectionShader.js\",\"./GlitchPass.js\",\"./HorizontalBlurShader.js\",\"./HorizontalTiltShiftShader.js\",\"./HueSaturationShader.js\",\"./JSONLoader.js\",\"./KaleidoShader.js\",\"./LuminosityShader.js\",\"./MTLLoader.js\",\"./MarchingCubes.js\",\"./MaskPass.js\",\"./MirrorShader.js\",\"./NormalMapShader.js\",\"./OBJLoader.js\",\"./OceanShaders.js\",\"./OrbitControls.js\",\"./ParallaxShader.js\",\"./Projector.js\",\"./RGBShiftShader.js\",\"./RenderPass.js\",\"./SSAOShader.js\",\"./SVGLoader.js\",\"./SavePass.js\",\"./SepiaShader.js\",\"./ShaderPass.js\",\"./TechnicolorShader.js\",\"./TexturePass.js\",\"./ToneMapShader.js\",\"./TriangleBlurShader.js\",\"./UnpackDepthRGBAShader.js\",\"./VerticalBlurShader.js\",\"./VerticalTiltShiftShader.js\",\"./VignetteShader.js\",\"webpackContext\",\"req\",\"webpackContextResolve\",\"AdaptiveToneMappingPass\",\"adaptive\",\"needsInit\",\"luminanceRT\",\"previousLuminanceRT\",\"currentLuminanceRT\",\"CopyShader\",\"copyShader\",\"copyUniforms\",\"materialCopy\",\"LuminosityShader\",\"materialLuminance\",\"adaptLuminanceShader\",\"MIP_LEVEL_1X1\",\"toFixed\",\"lastLum\",\"currentLum\",\"tau\",\"materialAdaptiveLum\",\"ToneMapShader\",\"materialToneMap\",\"needsSwap\",\"quad\",\"writeBuffer\",\"readBuffer\",\"maskActive\",\"tDiffuse\",\"luminanceMap\",\"setAdaptive\",\"setAdaptionRate\",\"rate\",\"setMaxLuminance\",\"maxLum\",\"maxLuminance\",\"setAverageLuminance\",\"avgLum\",\"averageLuminance\",\"setMiddleGrey\",\"middleGrey\",\"BasicShader\",\"BleachBypassShader\",\"BlendShader\",\"tDiffuse1\",\"tDiffuse2\",\"mixRatio\",\"BloomPass\",\"strength\",\"kernelSize\",\"sigma\",\"renderTargetX\",\"renderTargetY\",\"ConvolutionShader\",\"convolutionShader\",\"convolutionUniforms\",\"blurX\",\"buildKernel\",\"materialConvolution\",\"KERNEL_SIZE_FLOAT\",\"KERNEL_SIZE_INT\",\"blurY\",\"BokehPass\",\"aperture\",\"maxblur\",\"renderTargetColor\",\"renderTargetDepth\",\"materialDepth\",\"BokehShader\",\"bokehShader\",\"bokehUniforms\",\"materialBokeh\",\"renderToScreen\",\"camera2\",\"scene2\",\"quad2\",\"tColor\",\"tDepth\",\"textureWidth\",\"textureHeight\",\"focalDepth\",\"fstop\",\"showFocus\",\"manualdof\",\"vignetting\",\"depthblur\",\"fringe\",\"znear\",\"zfar\",\"noise\",\"dithering\",\"pentagon\",\"shaderFocus\",\"focusCoords\",\"BrightnessContrastShader\",\"brightness\",\"contrast\",\"SpriteCanvasMaterial\",\"_renderData\",\"_elements\",\"_v1\",\"_v2\",\"_v3\",\"_v1x\",\"_v1y\",\"_v2x\",\"_v2y\",\"_v3x\",\"_v3y\",\"_uvs\",\"_uv1x\",\"_uv1y\",\"_uv2x\",\"_uv2y\",\"_uv3x\",\"_uv3y\",\"_projector\",\"_canvasWidth\",\"_canvasHeight\",\"_canvasWidthHalf\",\"_canvasHeightHalf\",\"_viewportX\",\"_viewportY\",\"_viewportWidth\",\"_viewportHeight\",\"_contextGlobalAlpha\",\"_contextGlobalCompositeOperation\",\"_contextStrokeStyle\",\"_contextFillStyle\",\"_contextLineWidth\",\"_contextLineCap\",\"_contextLineJoin\",\"_contextLineDash\",\"_color\",\"RenderableVertex\",\"_diffuseColor\",\"_emissiveColor\",\"_lightColor\",\"_patterns\",\"_clipBox\",\"_clearBox\",\"_elemBox\",\"_ambientLight\",\"_directionalLights\",\"_pointLights\",\"_centroid\",\"_normal\",\"_normalViewMatrix\",\"renderSprite\",\"element\",\"setOpacity\",\"dist\",\"textureToPattern\",\"setFillStyle\",\"bitmap\",\"ox\",\"oy\",\"save\",\"rotate\",\"setStrokeStyle\",\"renderLine\",\"beginPath\",\"setLineCap\",\"setLineJoin\",\"colorStyle1\",\"colorStyle2\",\"grad\",\"createLinearGradient\",\"addColorStop\",\"exception\",\"stroke\",\"setLineDash\",\"renderFace3\",\"positionWorld\",\"lightPosition\",\"calculateLight\",\"normalModel\",\"strokePath\",\"fillPath\",\"patternPath\",\"vertexNormalsModel\",\"fill\",\"setTransform\",\"repeatX\",\"repeatY\",\"createPattern\",\"u0\",\"u1\",\"u2\",\"idet\",\"transform\",\"pixels\",\"globalAlpha\",\"globalCompositeOperation\",\"lineCap\",\"lineJoin\",\"strokeStyle\",\"sortElements\",\"setClearColorHex\",\"clearRect\",\"projectScene\",\"lightColor\",\"calculateLights\",\"RenderableSprite\",\"RenderableLine\",\"RenderableFace\",\"ColorCorrectionShader\",\"powRGB\",\"mulRGB\",\"addRGB\",\"ColorifyShader\",\"uImageIncrement\",\"cKernel\",\"gauss\",\"exp\",\"halfWidth\",\"DDSLoader\",\"loadMipmaps\",\"dds\",\"fourCCToInt32\",\"loadARGBMip\",\"dataOffset\",\"dataLength\",\"srcBuffer\",\"byteArray\",\"blockBytes\",\"FOURCC_DXT1\",\"FOURCC_DXT3\",\"FOURCC_DXT5\",\"FOURCC_ETC1\",\"fourCC\",\"isRGBAUncompressed\",\"caps2\",\"DOFMipMapShader\",\"DigitalGlitch\",\"tDisp\",\"byp\",\"seed_x\",\"seed_y\",\"distortion_x\",\"distortion_y\",\"col_s\",\"DotScreenPass\",\"DotScreenShader\",\"tSize\",\"EdgeShader\",\"EdgeShader2\",\"EffectComposer\",\"pixelRatio\",\"renderTarget1\",\"renderTarget2\",\"passes\",\"copyPass\",\"ShaderPass\",\"swapBuffers\",\"addPass\",\"pass\",\"insertPass\",\"MaskPass\",\"ClearMaskPass\",\"FXAAShader\",\"FilmPass\",\"noiseIntensity\",\"scanlinesIntensity\",\"scanlinesCount\",\"grayscale\",\"FilmShader\",\"nIntensity\",\"sIntensity\",\"sCount\",\"FocusShader\",\"screenWidth\",\"screenHeight\",\"sampleDistance\",\"waveFactor\",\"FresnelShader\",\"mRefractionRatio\",\"mFresnelBias\",\"mFresnelPower\",\"mFresnelScale\",\"GammaCorrectionShader\",\"GlitchPass\",\"dt_size\",\"generateHeightmap\",\"goWild\",\"curF\",\"generateTrigger\",\"randX\",\"data_arr\",\"HorizontalBlurShader\",\"HorizontalTiltShiftShader\",\"HueSaturationShader\",\"statusDomElement\",\"_statusDomElement\",\"KaleidoShader\",\"sides\",\"MTLLoader\",\"setBaseUrl\",\"baseUrl\",\"setMaterialOptions\",\"materialOptions\",\"delimiter_pattern\",\"materialsInfo\",\"ss\",\"materialCreator\",\"MaterialCreator\",\"setManager\",\"setMaterials\",\"materialsArray\",\"nameLookup\",\"convert\",\"converted\",\"mn\",\"covmat\",\"lprop\",\"normalizeRGB\",\"ignoreZeroRGBs\",\"preload\",\"materialName\",\"getAsArray\",\"createMaterial_\",\"MarchingCubes\",\"enableUvs\",\"enableColors\",\"isolation\",\"size2\",\"size3\",\"halfsize\",\"yd\",\"zd\",\"field\",\"normal_cache\",\"vlist\",\"nlist\",\"maxCount\",\"VIntX\",\"pout\",\"nout\",\"isol\",\"valp1\",\"valp2\",\"mu\",\"nc\",\"VIntY\",\"q2\",\"VIntZ\",\"compNorm\",\"q3\",\"polygonize\",\"fy\",\"fz\",\"q1y\",\"q1z\",\"qyz\",\"q1yz\",\"cubeindex\",\"field0\",\"field1\",\"field2\",\"field3\",\"field4\",\"field5\",\"field6\",\"field7\",\"edgeTable\",\"fx2\",\"fy2\",\"fz2\",\"o2\",\"o3\",\"numtris\",\"triTable\",\"posnormtriv\",\"begin\",\"addBall\",\"ballx\",\"bally\",\"ballz\",\"zs\",\"ys\",\"xs\",\"min_z\",\"max_z\",\"min_y\",\"max_y\",\"min_x\",\"y_offset\",\"z_offset\",\"max_x\",\"addPlaneX\",\"xdiv\",\"cxy\",\"addPlaneY\",\"ydiv\",\"addPlaneZ\",\"zdiv\",\"cz\",\"cyz\",\"smin2\",\"generateGeometry\",\"geo\",\"na\",\"nb\",\"nfaces\",\"writeValue\",\"clearValue\",\"REPLACE\",\"KEEP\",\"MirrorShader\",\"NormalMapShader\",\"heightMap\",\"OBJLoader\",\"foundObjects\",\"addObject\",\"smooth\",\"parseVertexIndex\",\"parseNormalIndex\",\"parseUVIndex\",\"addVertex\",\"addNormal\",\"addUV\",\"ua\",\"ub\",\"uc\",\"ud\",\"nd\",\"ia\",\"ib\",\"ic\",\"vertex_pattern\",\"normal_pattern\",\"uv_pattern\",\"face_pattern1\",\"face_pattern2\",\"face_pattern3\",\"face_pattern4\",\"object_pattern\",\"smoothing_pattern\",\"timeEnd\",\"varying\",\"vUV\",\"u_input\",\"u_transformSize\",\"u_subtransformSize\",\"u_wind\",\"u_resolution\",\"u_size\",\"u_phases\",\"u_deltaTime\",\"u_choppiness\",\"u_initialSpectrum\",\"u_displacementMap\",\"u_normalMap\",\"u_geometrySize\",\"u_projectionMatrix\",\"u_viewMatrix\",\"u_cameraPosition\",\"u_skyColor\",\"u_oceanColor\",\"u_sunDirection\",\"u_exposure\",\"vPos\",\"quat\",\"quatInverse\",\"lastPosition\",\"lastQuaternion\",\"minZoom\",\"maxZoom\",\"minPolarAngle\",\"maxPolarAngle\",\"minAzimuthAngle\",\"maxAzimuthAngle\",\"enableDamping\",\"dampingFactor\",\"enableZoom\",\"zoomSpeed\",\"enableRotate\",\"rotateSpeed\",\"enablePan\",\"keyPanSpeed\",\"autoRotate\",\"autoRotateSpeed\",\"enableKeys\",\"UP\",\"BOTTOM\",\"mouseButtons\",\"ORBIT\",\"ZOOM\",\"PAN\",\"target0\",\"position0\",\"zoom0\",\"getPolarAngle\",\"spherical\",\"getAzimuthalAngle\",\"changeEvent\",\"STATE\",\"NONE\",\"rotateLeft\",\"sphericalDelta\",\"panOffset\",\"zoomChanged\",\"EPS\",\"onContextMenu\",\"onMouseDown\",\"onMouseWheel\",\"onTouchStart\",\"onTouchEnd\",\"onTouchMove\",\"onMouseMove\",\"onMouseUp\",\"onKeyDown\",\"startEvent\",\"endEvent\",\"ROTATE\",\"DOLLY\",\"TOUCH_ROTATE\",\"TOUCH_DOLLY\",\"TOUCH_PAN\",\"rotateStart\",\"rotateEnd\",\"rotateDelta\",\"panStart\",\"panEnd\",\"panDelta\",\"dollyStart\",\"dollyEnd\",\"dollyDelta\",\"getZoomScale\",\"rotateUp\",\"panLeft\",\"objectMatrix\",\"panUp\",\"pan\",\"deltaX\",\"deltaY\",\"targetDistance\",\"clientWidth\",\"dollyIn\",\"dollyScale\",\"dollyOut\",\"handleMouseDownRotate\",\"handleMouseDownDolly\",\"handleMouseDownPan\",\"handleMouseMoveRotate\",\"handleMouseMoveDolly\",\"handleMouseMovePan\",\"wheelDelta\",\"handleMouseWheel\",\"handleKeyDown\",\"handleTouchStartRotate\",\"handleTouchStartDolly\",\"handleTouchStartPan\",\"handleTouchMoveRotate\",\"handleTouchMoveDolly\",\"handleTouchMovePan\",\"noZoom\",\"noRotate\",\"noPan\",\"noKeys\",\"staticMoving\",\"dynamicDampingFactor\",\"ParallaxShader\",\"modes\",\"none\",\"steep\",\"occlusion\",\"relief\",\"parallaxScale\",\"parallaxMinLayers\",\"parallaxMaxLayers\",\"RenderableObject\",\"vertexNormalsLength\",\"_object\",\"_objectCount\",\"_vertex\",\"_vertexCount\",\"_face\",\"_faceCount\",\"_line\",\"_lineCount\",\"_sprite\",\"_spriteCount\",\"_modelMatrix\",\"_objectPool\",\"_objectPoolLength\",\"_vertexPool\",\"_vertexPoolLength\",\"_facePool\",\"_facePoolLength\",\"_linePool\",\"_linePoolLength\",\"_spritePool\",\"_spritePoolLength\",\"_vector4\",\"_boundingBox\",\"_points3\",\"_viewMatrix\",\"_viewProjectionMatrix\",\"_modelViewProjectionMatrix\",\"_normalMatrix\",\"_clippedVertex1PositionScreen\",\"_clippedVertex2PositionScreen\",\"projectVertex\",\"invW\",\"checkTriangleVisibility\",\"checkBackfaceCulling\",\"setObject\",\"pushVertex\",\"getNextVertexInPool\",\"pushNormal\",\"pushUv\",\"pushLine\",\"getNextLineInPool\",\"pushTriangle\",\"getNextFaceInPool\",\"getNextSpriteInPool\",\"painterSort\",\"clipLine\",\"alpha1\",\"alpha2\",\"bc1near\",\"bc2near\",\"bc1far\",\"bc2far\",\"getNextObjectInPool\",\"objectMaterials\",\"targetVertex\",\"nl\",\"RGBShiftShader\",\"RenderPass\",\"oldClearColor\",\"oldClearAlpha\",\"SSAOShader\",\"cameraNear\",\"cameraFar\",\"onlyAO\",\"aoClamp\",\"lumInfluence\",\"SVGLoader\",\"parser\",\"svgString\",\"SavePass\",\"textureID\",\"renderTargetParameters\",\"SepiaShader\",\"TechnicolorShader\",\"TexturePass\",\"TriangleBlurShader\",\"UnpackDepthRGBAShader\",\"VerticalBlurShader\",\"VerticalTiltShiftShader\",\"VignetteShader\",\"darkness\"],\"mappings\":\"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\",\"sourcesContent\":[\" \\t// The module cache\\n \\tvar installedModules = {};\\n\\n \\t// The require function\\n \\tfunction __webpack_require__(moduleId) {\\n\\n \\t\\t// Check if module is in cache\\n \\t\\tif(installedModules[moduleId]) {\\n \\t\\t\\treturn installedModules[moduleId].exports;\\n \\t\\t}\\n \\t\\t// Create a new module (and put it into the cache)\\n \\t\\tvar module = installedModules[moduleId] = {\\n \\t\\t\\ti: moduleId,\\n \\t\\t\\tl: false,\\n \\t\\t\\texports: {}\\n \\t\\t};\\n\\n \\t\\t// Execute the module function\\n \\t\\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\\n\\n \\t\\t// Flag the module as loaded\\n \\t\\tmodule.l = true;\\n\\n \\t\\t// Return the exports of the module\\n \\t\\treturn module.exports;\\n \\t}\\n\\n\\n \\t// expose the modules object (__webpack_modules__)\\n \\t__webpack_require__.m = modules;\\n\\n \\t// expose the module cache\\n \\t__webpack_require__.c = installedModules;\\n\\n \\t// define getter function for harmony exports\\n \\t__webpack_require__.d = function(exports, name, getter) {\\n \\t\\tif(!__webpack_require__.o(exports, name)) {\\n \\t\\t\\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\\n \\t\\t}\\n \\t};\\n\\n \\t// define __esModule on exports\\n \\t__webpack_require__.r = function(exports) {\\n \\t\\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\\n \\t\\t\\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\\n \\t\\t}\\n \\t\\tObject.defineProperty(exports, '__esModule', { value: true });\\n \\t};\\n\\n \\t// create a fake namespace object\\n \\t// mode & 1: value is a module id, require it\\n \\t// mode & 2: merge all properties of value into the ns\\n \\t// mode & 4: return value when already ns object\\n \\t// mode & 8|1: behave like require\\n \\t__webpack_require__.t = function(value, mode) {\\n \\t\\tif(mode & 1) value = __webpack_require__(value);\\n \\t\\tif(mode & 8) return value;\\n \\t\\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\\n \\t\\tvar ns = Object.create(null);\\n \\t\\t__webpack_require__.r(ns);\\n \\t\\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\\n \\t\\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\\n \\t\\treturn ns;\\n \\t};\\n\\n \\t// getDefaultExport function for compatibility with non-harmony modules\\n \\t__webpack_require__.n = function(module) {\\n \\t\\tvar getter = module && module.__esModule ?\\n \\t\\t\\tfunction getDefault() { return module['default']; } :\\n \\t\\t\\tfunction getModuleExports() { return module; };\\n \\t\\t__webpack_require__.d(getter, 'a', getter);\\n \\t\\treturn getter;\\n \\t};\\n\\n \\t// Object.prototype.hasOwnProperty.call\\n \\t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\\n\\n \\t// __webpack_public_path__\\n \\t__webpack_require__.p = \\\"\\\";\\n\\n\\n \\t// Load entry module and return exports\\n \\treturn __webpack_require__(__webpack_require__.s = 0);\\n\",\"\\\"use strict\\\";\\r\\nexports.__esModule = true;\\r\\nvar $ = require(\\\"jquery\\\");\\r\\nvar THREE = require('three-js')([\\r\\n    'EffectComposer',\\r\\n    'OrbitControls'\\r\\n]);\\r\\nfunction cylinderMesh(pointX, pointY, materialX, materialY, n) {\\r\\n    // edge from X to Y\\r\\n    var direction = new THREE.Vector3().subVectors(pointY, pointX);\\r\\n    var direction_clone = direction.clone();\\r\\n    direction.normalize();\\r\\n    var arrow = new THREE.ArrowHelper(direction, pointX);\\r\\n    // cylinder: radiusAtTop, radiusAtBottom, \\r\\n    //     height, radiusSegments, heightSegments\\r\\n    var scale = 0.09;\\r\\n    var radius = 0.07;\\r\\n    var offset = [\\r\\n        [[0.0, 0.0]],\\r\\n        [[1.0, 0.0], [-1.0, 0.0]],\\r\\n        [[0.8660254037844386467637, 0.5], [-0.8660254037844386467637, 0.5], [0, -1]],\\r\\n        [[0.7071067811865475244008, 0.7071067811865475244008], [-0.7071067811865475244008, 0.7071067811865475244008], [0.7071067811865475244008, -0.7071067811865475244008], [-0.7071067811865475244008, -0.7071067811865475244008]],\\r\\n        [[0.9510565162951535721164, 0.3090169943749474241023], [0, 1], [-0.9510565162951535721164, 0.3090169943749474241023], [-0.5877852522924731291687, -0.8090169943749474241023], [0.5877852522924731291687, -0.8090169943749474241023]],\\r\\n        [[1.0, 0.0], [0.5, 0.8660254037844386467637], [-0.5, 0.8660254037844386467637], [-1.0, 0.0], [-0.5, -0.8660254037844386467637], [0.5, -0.8660254037844386467637]]\\r\\n    ];\\r\\n    var edge = new THREE.Group();\\r\\n    for (var i = 0; i < n; i++) {\\r\\n        var edgeGeometry = new THREE.CylinderGeometry(radius, radius, direction_clone.length() / 2, 6, 4);\\r\\n        var _edge = new THREE.Mesh(edgeGeometry, materialX);\\r\\n        //_edge.position.set(offset[n-1][i][0],offset[n-1][i][1],0);\\r\\n        _edge.position.set(offset[n - 1][i][0] * scale, -direction_clone.length() / 4, offset[n - 1][i][1] * scale);\\r\\n        edge.add(_edge); // 任意のObject3Dを追加 \\r\\n    }\\r\\n    for (var i = 0; i < n; i++) {\\r\\n        var edgeGeometry = new THREE.CylinderGeometry(radius, radius, direction_clone.length() / 2, 6, 4);\\r\\n        var _edge = new THREE.Mesh(edgeGeometry, materialY);\\r\\n        //_edge.position.set(offset[n-1][i][0],offset[n-1][i][1],0);\\r\\n        _edge.position.set(offset[n - 1][i][0] * scale, direction_clone.length() / 4, offset[n - 1][i][1] * scale);\\r\\n        edge.add(_edge); // 任意のObject3Dを追加 \\r\\n    }\\r\\n    //edge.rotation = arrow.rotation.clone();\\r\\n    edge.rotation.set(arrow.rotation.x, arrow.rotation.y, arrow.rotation.z);\\r\\n    // edge.rotation.x = arrow.rotation.x;\\r\\n    // edge.rotation.y = arrow.rotation.y;\\r\\n    // edge.rotation.z = arrow.rotation.z;\\r\\n    var pos = new THREE.Vector3().addVectors(pointX, direction_clone.multiplyScalar(0.5));\\r\\n    edge.position.set(pos.x, pos.y, pos.z);\\r\\n    return edge;\\r\\n}\\r\\nvar TEXT = /** @class */ (function () {\\r\\n    function TEXT(parent) {\\r\\n        this._parent = null;\\r\\n        this._div = document.createElement('div');\\r\\n        this._div.className = 'text-label';\\r\\n        this._div.style.position = 'absolute';\\r\\n        this._div.style.width = 100;\\r\\n        this._div.style.height = 100;\\r\\n        this._div.style.color = 'white';\\r\\n        this._div.innerHTML = \\\"hi there!\\\";\\r\\n        this._div.style.top = -1000;\\r\\n        this._div.style.left = -1000;\\r\\n        this._parent = parent;\\r\\n        this.position = new THREE.Vector3();\\r\\n        this.position.set(this._parent.position.x, this._parent.position.y, this._parent.position.z);\\r\\n    }\\r\\n    Object.defineProperty(TEXT.prototype, \\\"html\\\", {\\r\\n        set: function (html) {\\r\\n            this._div.innerHTML = html;\\r\\n        },\\r\\n        enumerable: true,\\r\\n        configurable: true\\r\\n    });\\r\\n    Object.defineProperty(TEXT.prototype, \\\"div\\\", {\\r\\n        get: function () {\\r\\n            return this._div;\\r\\n        },\\r\\n        enumerable: true,\\r\\n        configurable: true\\r\\n    });\\r\\n    TEXT.prototype.update = function (camera) {\\r\\n        if (this._parent != null) {\\r\\n            this.position.set(this._parent.position.x, this._parent.position.y, this._parent.position.z);\\r\\n        }\\r\\n        var coords2d = this.get2DCoords(this.position, camera);\\r\\n        this._div.style.left = coords2d.x + 'px';\\r\\n        this._div.style.top = coords2d.y + 'px';\\r\\n    };\\r\\n    TEXT.prototype.get2DCoords = function (position, camera) {\\r\\n        var vector = position.project(camera);\\r\\n        vector.x = (vector.x + 1) / 2 * window.innerWidth;\\r\\n        vector.y = -(vector.y - 1) / 2 * window.innerHeight;\\r\\n        return vector;\\r\\n    };\\r\\n    return TEXT;\\r\\n}());\\r\\nvar MOL_BALL = /** @class */ (function () {\\r\\n    function MOL_BALL(atom, id, x, y, z) {\\r\\n        this._atom = atom;\\r\\n        switch (atom.toUpperCase()) {\\r\\n            case 'H':\\r\\n                this.color = 0xffffff;\\r\\n                break;\\r\\n            case 'C':\\r\\n                this.color = 0x808080;\\r\\n                break;\\r\\n            case 'N':\\r\\n                this.color = 0x0000ff;\\r\\n                break;\\r\\n            case 'O':\\r\\n                this.color = 0xff0000;\\r\\n                break;\\r\\n            case 'F':\\r\\n                this.color = 0xADFF2F;\\r\\n                break;\\r\\n            case 'CL':\\r\\n                this.color = 0x32CD32;\\r\\n                break;\\r\\n            case 'S':\\r\\n                this.color = 0xFFFF00;\\r\\n                break;\\r\\n            case 'I':\\r\\n                this.color = 0x800080;\\r\\n                break;\\r\\n            case 'P':\\r\\n                this.color = 0xFFA500;\\r\\n                break;\\r\\n            case 'BR':\\r\\n                this.color = 0x800000;\\r\\n                break;\\r\\n            default:\\r\\n                this.color = 0xFF1493;\\r\\n                break;\\r\\n        }\\r\\n        this._x = x;\\r\\n        this._y = y;\\r\\n        this._z = z;\\r\\n        this.id = id;\\r\\n        this.show_id = false;\\r\\n        this.show_name = false;\\r\\n        var geometry = new THREE.SphereGeometry(0.3);\\r\\n        // let material = new THREE.MeshBasicMaterial({color: 0x00ff00});\\r\\n        this._material = new THREE.MeshStandardMaterial({ color: this.color, roughness: 0.5 });\\r\\n        this._ball = new THREE.Mesh(geometry, this.material);\\r\\n        this.ball.position.set(this.x, this.y, this.z);\\r\\n        this._text = new TEXT(this.ball);\\r\\n        this._text.html = \\\"\\\";\\r\\n    }\\r\\n    Object.defineProperty(MOL_BALL.prototype, \\\"ball\\\", {\\r\\n        get: function () {\\r\\n            return this._ball;\\r\\n        },\\r\\n        enumerable: true,\\r\\n        configurable: true\\r\\n    });\\r\\n    MOL_BALL.prototype.update = function (camera) {\\r\\n        this.text.update(camera);\\r\\n    };\\r\\n    MOL_BALL.prototype.showID = function () {\\r\\n        this.show_id = true;\\r\\n        this._text.html = (this.show_name ? this._atom : \\\"\\\") + this.id.toString();\\r\\n    };\\r\\n    MOL_BALL.prototype.hideID = function () {\\r\\n        this.show_id = false;\\r\\n        this._text.html = this.show_name ? this._atom : \\\"\\\";\\r\\n    };\\r\\n    MOL_BALL.prototype.showName = function () {\\r\\n        this.show_name = true;\\r\\n        this._text.html = this._atom + (this.show_id ? this.id.toString() : \\\"\\\");\\r\\n    };\\r\\n    MOL_BALL.prototype.hideName = function () {\\r\\n        this.show_name = false;\\r\\n        this._text.html = (this.show_id ? this.id.toString() : \\\"\\\");\\r\\n    };\\r\\n    Object.defineProperty(MOL_BALL.prototype, \\\"x\\\", {\\r\\n        get: function () { return this._x; },\\r\\n        enumerable: true,\\r\\n        configurable: true\\r\\n    });\\r\\n    Object.defineProperty(MOL_BALL.prototype, \\\"y\\\", {\\r\\n        get: function () { return this._y; },\\r\\n        enumerable: true,\\r\\n        configurable: true\\r\\n    });\\r\\n    Object.defineProperty(MOL_BALL.prototype, \\\"z\\\", {\\r\\n        get: function () { return this._z; },\\r\\n        enumerable: true,\\r\\n        configurable: true\\r\\n    });\\r\\n    Object.defineProperty(MOL_BALL.prototype, \\\"text\\\", {\\r\\n        get: function () { return this._text; },\\r\\n        enumerable: true,\\r\\n        configurable: true\\r\\n    });\\r\\n    Object.defineProperty(MOL_BALL.prototype, \\\"material\\\", {\\r\\n        get: function () { return this._material; },\\r\\n        enumerable: true,\\r\\n        configurable: true\\r\\n    });\\r\\n    MOL_BALL.prototype.setbond = function (mol, bond_n) {\\r\\n        //this._bond.push(mol);\\r\\n        var pointX = new THREE.Vector3(this.x, this.y, this.z);\\r\\n        var pointY = new THREE.Vector3((mol.x), (mol.y), (mol.z));\\r\\n        var geometry = cylinderMesh(new THREE.Vector3(this.x, this.y, this.z), pointY, this.material, mol.material, bond_n);\\r\\n        /*\\r\\n         let direction = new THREE.Vector3().subVectors( pointY, pointX );\\r\\n         let direction_norm = direction.normalize();\\r\\n         console.dir(direction);\\r\\n         let arrow = new THREE.ArrowHelper( direction_norm, pointX , direction.length());\\r\\n         */\\r\\n        return geometry;\\r\\n    };\\r\\n    return MOL_BALL;\\r\\n}());\\r\\nvar MOL_FILE = /** @class */ (function () {\\r\\n    function MOL_FILE() {\\r\\n        var _this = this;\\r\\n        this._mols = [];\\r\\n        this._bonds = [];\\r\\n        this._atoms = [];\\r\\n        var str = this.getUrlVars();\\r\\n        //初期化\\r\\n        this._mols = [];\\r\\n        this._bonds = [];\\r\\n        this._atoms = [];\\r\\n        var lines = str.split('\\\\n');\\r\\n        if (lines.length < 4)\\r\\n            return;\\r\\n        var head_data = lines[3].trim().split(/\\\\s+/);\\r\\n        var mols_length = parseInt(head_data[0]);\\r\\n        var bonds_length = parseInt(head_data[1]);\\r\\n        console.log(lines[3].trim());\\r\\n        //console.log(\\\"length : \\\"+mols_length.toString()+\\\", \\\"+bonds_length.toString());\\r\\n        console.log(\\\"length : \\\" + head_data[0] + \\\", \\\" + head_data[1]);\\r\\n        var counter = 0;\\r\\n        lines.slice(4, 4 + mols_length).forEach(function (line) {\\r\\n            var mols_s = line.trim().split(/\\\\s+/);\\r\\n            _this._mols[counter] = [parseFloat(mols_s[0]), parseFloat(mols_s[1]), parseFloat(mols_s[2])];\\r\\n            _this._atoms[counter] = mols_s[3].trim();\\r\\n            console.log(\\\"mols : \\\" + _this._mols[counter] + \\\", \\\" + _this._atoms[counter]);\\r\\n            counter++;\\r\\n        });\\r\\n        counter = 0;\\r\\n        lines.slice(4 + mols_length, 4 + mols_length + bonds_length).forEach(function (line) {\\r\\n            var bonds_s = line.trim().split(/\\\\s+/);\\r\\n            _this._bonds[counter] = [parseInt(bonds_s[0]), parseInt(bonds_s[1]), parseInt(bonds_s[2])];\\r\\n            console.log(\\\"bonds : \\\" + _this._bonds[counter]);\\r\\n            counter++;\\r\\n        });\\r\\n        this.normize();\\r\\n    }\\r\\n    /**\\r\\n     * URL解析して、クエリ文字列を返す\\r\\n     * @returns {Array} クエリ文字列\\r\\n     */\\r\\n    MOL_FILE.prototype.getUrlVars = function () {\\r\\n        var vars = [], max = 0, hash, array = \\\"\\\";\\r\\n        var url = window.location.search;\\r\\n        //?を取り除くため、1から始める。複数のクエリ文字列に対応するため、&で区切る\\r\\n        hash = url.slice(1).split('&');\\r\\n        max = hash.length;\\r\\n        for (var i = 0; i < max; i++) {\\r\\n            var array_1 = hash[i].split('='); //keyと値に分割。\\r\\n            vars.push(array_1[0]); //末尾にクエリ文字列のkeyを挿入。\\r\\n            vars[array_1[0]] = array_1[1]; //先ほど確保したkeyに、値を代入。\\r\\n        }\\r\\n        return decodeURIComponent(vars['mol']);\\r\\n    };\\r\\n    MOL_FILE.prototype.normize = function () {\\r\\n        //平均を取る\\r\\n        var norm = [0, 0, 0];\\r\\n        this._mols.forEach(function (mol) {\\r\\n            norm[0] += mol[0];\\r\\n            norm[1] += mol[1];\\r\\n            norm[2] += mol[2];\\r\\n        });\\r\\n        norm[0] /= this._mols.length;\\r\\n        norm[1] /= this._mols.length;\\r\\n        norm[2] /= this._mols.length;\\r\\n        this._mols.forEach(function (mol) {\\r\\n            mol[0] -= norm[0];\\r\\n            mol[1] -= norm[1];\\r\\n            mol[2] -= norm[2];\\r\\n        });\\r\\n    };\\r\\n    Object.defineProperty(MOL_FILE.prototype, \\\"mols\\\", {\\r\\n        get: function () {\\r\\n            return this._mols;\\r\\n        },\\r\\n        enumerable: true,\\r\\n        configurable: true\\r\\n    });\\r\\n    Object.defineProperty(MOL_FILE.prototype, \\\"bonds\\\", {\\r\\n        get: function () {\\r\\n            return this._bonds;\\r\\n        },\\r\\n        enumerable: true,\\r\\n        configurable: true\\r\\n    });\\r\\n    Object.defineProperty(MOL_FILE.prototype, \\\"atoms\\\", {\\r\\n        get: function () {\\r\\n            return this._atoms;\\r\\n        },\\r\\n        enumerable: true,\\r\\n        configurable: true\\r\\n    });\\r\\n    return MOL_FILE;\\r\\n}());\\r\\nvar APP = /** @class */ (function () {\\r\\n    function APP($mainFrame) {\\r\\n        this.scene = new THREE.Scene();\\r\\n        this._camera = new THREE.PerspectiveCamera(75, $mainFrame.width() / $mainFrame.height(), 0.1, 1000);\\r\\n        this.renderer = new THREE.WebGLRenderer();\\r\\n        this.renderer.setSize($mainFrame.width(), $mainFrame.height());\\r\\n        this._camera.position.z = 8;\\r\\n        this._camera.position.y = 1;\\r\\n        // 自動生成されたcanvas要素をdivへ追加する。\\r\\n        $mainFrame.append(this.renderer.domElement);\\r\\n        this.init();\\r\\n        // コールバック関数 render をrequestAnimationFrameに渡して、\\r\\n        // 繰り返し呼び出してもらう。\\r\\n        this.controls = new THREE.OrbitControls(this._camera, this.renderer.domElement);\\r\\n    }\\r\\n    APP.prototype.init = function () {\\r\\n        // Asixヘルパー\\r\\n        var axisHelper = new THREE.AxisHelper(10);\\r\\n        this.scene.add(axisHelper);\\r\\n        // Gridヘルパー\\r\\n        var gridHelper = new THREE.GridHelper(20, 5);\\r\\n        this.scene.add(gridHelper);\\r\\n        var light1 = new THREE.AmbientLight(0xFFFFFF, 1.0);\\r\\n        this.scene.add(light1);\\r\\n        var light2 = new THREE.DirectionalLight(0xFFFFFF, 1);\\r\\n        this.scene.add(light2);\\r\\n        var molfile = new MOL_FILE();\\r\\n        this._balls = new Array(molfile.mols.length);\\r\\n        for (var i = 0; i < this._balls.length; i++) {\\r\\n            this._balls[i] = new MOL_BALL(molfile.atoms[i], i + 1, molfile.mols[i][0], molfile.mols[i][1], molfile.mols[i][2]);\\r\\n            this.scene.add(this._balls[i].ball);\\r\\n            $(\\\"body\\\").append(this._balls[i].text.div);\\r\\n        }\\r\\n        for (var i = 0; i < molfile.bonds.length; i++) {\\r\\n            this.scene.add(this._balls[molfile.bonds[i][0] - 1].setbond(this._balls[molfile.bonds[i][1] - 1], molfile.bonds[i][2]));\\r\\n            //scene.add(balls[bond[i][1]-1].setbond(balls[bond[i][0]-1], bond[i][2]));\\r\\n        }\\r\\n    };\\r\\n    APP.prototype.update = function () {\\r\\n        var _this = this;\\r\\n        this._balls.forEach(function (ball) {\\r\\n            ball.update(_this._camera);\\r\\n        });\\r\\n        this.renderer.render(this.scene, this._camera);\\r\\n        this.controls.update();\\r\\n    };\\r\\n    Object.defineProperty(APP.prototype, \\\"balls\\\", {\\r\\n        get: function () {\\r\\n            return this._balls;\\r\\n        },\\r\\n        enumerable: true,\\r\\n        configurable: true\\r\\n    });\\r\\n    return APP;\\r\\n}());\\r\\n$(function () {\\r\\n    var $mainFrame = $(\\\"body\\\");\\r\\n    var app = new APP($mainFrame);\\r\\n    // シーン、カメラ、レンダラを生成\\r\\n    var render = function () {\\r\\n        window.requestAnimationFrame(render);\\r\\n        app.update();\\r\\n    };\\r\\n    render();\\r\\n    $(window).keypress(function (eventObject) {\\r\\n    });\\r\\n    $(\\\"#chk1\\\").click(function () {\\r\\n        var a = $(\\\"#chk1\\\").prop(\\\"checked\\\");\\r\\n        if (a) {\\r\\n            app.balls.forEach(function (ball) {\\r\\n                ball.showName();\\r\\n            });\\r\\n        }\\r\\n        else {\\r\\n            app.balls.forEach(function (ball) {\\r\\n                ball.hideName();\\r\\n            });\\r\\n        }\\r\\n    });\\r\\n    $(\\\"#chk2\\\").click(function () {\\r\\n        var a = $(\\\"#chk2\\\").prop(\\\"checked\\\");\\r\\n        if (a) {\\r\\n            app.balls.forEach(function (ball) {\\r\\n                ball.showID();\\r\\n            });\\r\\n        }\\r\\n        else {\\r\\n            app.balls.forEach(function (ball) {\\r\\n                ball.hideID();\\r\\n            });\\r\\n        }\\r\\n    });\\r\\n});\\r\\n\",\"/*!\\n * jQuery JavaScript Library v3.4.1\\n * https://jquery.com/\\n *\\n * Includes Sizzle.js\\n * https://sizzlejs.com/\\n *\\n * Copyright JS Foundation and other contributors\\n * Released under the MIT license\\n * https://jquery.org/license\\n *\\n * Date: 2019-05-01T21:04Z\\n */\\n( function( global, factory ) {\\n\\n\\t\\\"use strict\\\";\\n\\n\\tif ( typeof module === \\\"object\\\" && typeof module.exports === \\\"object\\\" ) {\\n\\n\\t\\t// For CommonJS and CommonJS-like environments where a proper `window`\\n\\t\\t// is present, execute the factory and get jQuery.\\n\\t\\t// For environments that do not have a `window` with a `document`\\n\\t\\t// (such as Node.js), expose a factory as module.exports.\\n\\t\\t// This accentuates the need for the creation of a real `window`.\\n\\t\\t// e.g. var jQuery = require(\\\"jquery\\\")(window);\\n\\t\\t// See ticket #14549 for more info.\\n\\t\\tmodule.exports = global.document ?\\n\\t\\t\\tfactory( global, true ) :\\n\\t\\t\\tfunction( w ) {\\n\\t\\t\\t\\tif ( !w.document ) {\\n\\t\\t\\t\\t\\tthrow new Error( \\\"jQuery requires a window with a document\\\" );\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\treturn factory( w );\\n\\t\\t\\t};\\n\\t} else {\\n\\t\\tfactory( global );\\n\\t}\\n\\n// Pass this if window is not defined yet\\n} )( typeof window !== \\\"undefined\\\" ? window : this, function( window, noGlobal ) {\\n\\n// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1\\n// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode\\n// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common\\n// enough that all such attempts are guarded in a try block.\\n\\\"use strict\\\";\\n\\nvar arr = [];\\n\\nvar document = window.document;\\n\\nvar getProto = Object.getPrototypeOf;\\n\\nvar slice = arr.slice;\\n\\nvar concat = arr.concat;\\n\\nvar push = arr.push;\\n\\nvar indexOf = arr.indexOf;\\n\\nvar class2type = {};\\n\\nvar toString = class2type.toString;\\n\\nvar hasOwn = class2type.hasOwnProperty;\\n\\nvar fnToString = hasOwn.toString;\\n\\nvar ObjectFunctionString = fnToString.call( Object );\\n\\nvar support = {};\\n\\nvar isFunction = function isFunction( obj ) {\\n\\n      // Support: Chrome <=57, Firefox <=52\\n      // In some browsers, typeof returns \\\"function\\\" for HTML <object> elements\\n      // (i.e., `typeof document.createElement( \\\"object\\\" ) === \\\"function\\\"`).\\n      // We don't want to classify *any* DOM node as a function.\\n      return typeof obj === \\\"function\\\" && typeof obj.nodeType !== \\\"number\\\";\\n  };\\n\\n\\nvar isWindow = function isWindow( obj ) {\\n\\t\\treturn obj != null && obj === obj.window;\\n\\t};\\n\\n\\n\\n\\n\\tvar preservedScriptAttributes = {\\n\\t\\ttype: true,\\n\\t\\tsrc: true,\\n\\t\\tnonce: true,\\n\\t\\tnoModule: true\\n\\t};\\n\\n\\tfunction DOMEval( code, node, doc ) {\\n\\t\\tdoc = doc || document;\\n\\n\\t\\tvar i, val,\\n\\t\\t\\tscript = doc.createElement( \\\"script\\\" );\\n\\n\\t\\tscript.text = code;\\n\\t\\tif ( node ) {\\n\\t\\t\\tfor ( i in preservedScriptAttributes ) {\\n\\n\\t\\t\\t\\t// Support: Firefox 64+, Edge 18+\\n\\t\\t\\t\\t// Some browsers don't support the \\\"nonce\\\" property on scripts.\\n\\t\\t\\t\\t// On the other hand, just using `getAttribute` is not enough as\\n\\t\\t\\t\\t// the `nonce` attribute is reset to an empty string whenever it\\n\\t\\t\\t\\t// becomes browsing-context connected.\\n\\t\\t\\t\\t// See https://github.com/whatwg/html/issues/2369\\n\\t\\t\\t\\t// See https://html.spec.whatwg.org/#nonce-attributes\\n\\t\\t\\t\\t// The `node.getAttribute` check was added for the sake of\\n\\t\\t\\t\\t// `jQuery.globalEval` so that it can fake a nonce-containing node\\n\\t\\t\\t\\t// via an object.\\n\\t\\t\\t\\tval = node[ i ] || node.getAttribute && node.getAttribute( i );\\n\\t\\t\\t\\tif ( val ) {\\n\\t\\t\\t\\t\\tscript.setAttribute( i, val );\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\tdoc.head.appendChild( script ).parentNode.removeChild( script );\\n\\t}\\n\\n\\nfunction toType( obj ) {\\n\\tif ( obj == null ) {\\n\\t\\treturn obj + \\\"\\\";\\n\\t}\\n\\n\\t// Support: Android <=2.3 only (functionish RegExp)\\n\\treturn typeof obj === \\\"object\\\" || typeof obj === \\\"function\\\" ?\\n\\t\\tclass2type[ toString.call( obj ) ] || \\\"object\\\" :\\n\\t\\ttypeof obj;\\n}\\n/* global Symbol */\\n// Defining this global in .eslintrc.json would create a danger of using the global\\n// unguarded in another place, it seems safer to define global only for this module\\n\\n\\n\\nvar\\n\\tversion = \\\"3.4.1\\\",\\n\\n\\t// Define a local copy of jQuery\\n\\tjQuery = function( selector, context ) {\\n\\n\\t\\t// The jQuery object is actually just the init constructor 'enhanced'\\n\\t\\t// Need init if jQuery is called (just allow error to be thrown if not included)\\n\\t\\treturn new jQuery.fn.init( selector, context );\\n\\t},\\n\\n\\t// Support: Android <=4.0 only\\n\\t// Make sure we trim BOM and NBSP\\n\\trtrim = /^[\\\\s\\\\uFEFF\\\\xA0]+|[\\\\s\\\\uFEFF\\\\xA0]+$/g;\\n\\njQuery.fn = jQuery.prototype = {\\n\\n\\t// The current version of jQuery being used\\n\\tjquery: version,\\n\\n\\tconstructor: jQuery,\\n\\n\\t// The default length of a jQuery object is 0\\n\\tlength: 0,\\n\\n\\ttoArray: function() {\\n\\t\\treturn slice.call( this );\\n\\t},\\n\\n\\t// Get the Nth element in the matched element set OR\\n\\t// Get the whole matched element set as a clean array\\n\\tget: function( num ) {\\n\\n\\t\\t// Return all the elements in a clean array\\n\\t\\tif ( num == null ) {\\n\\t\\t\\treturn slice.call( this );\\n\\t\\t}\\n\\n\\t\\t// Return just the one element from the set\\n\\t\\treturn num < 0 ? this[ num + this.length ] : this[ num ];\\n\\t},\\n\\n\\t// Take an array of elements and push it onto the stack\\n\\t// (returning the new matched element set)\\n\\tpushStack: function( elems ) {\\n\\n\\t\\t// Build a new jQuery matched element set\\n\\t\\tvar ret = jQuery.merge( this.constructor(), elems );\\n\\n\\t\\t// Add the old object onto the stack (as a reference)\\n\\t\\tret.prevObject = this;\\n\\n\\t\\t// Return the newly-formed element set\\n\\t\\treturn ret;\\n\\t},\\n\\n\\t// Execute a callback for every element in the matched set.\\n\\teach: function( callback ) {\\n\\t\\treturn jQuery.each( this, callback );\\n\\t},\\n\\n\\tmap: function( callback ) {\\n\\t\\treturn this.pushStack( jQuery.map( this, function( elem, i ) {\\n\\t\\t\\treturn callback.call( elem, i, elem );\\n\\t\\t} ) );\\n\\t},\\n\\n\\tslice: function() {\\n\\t\\treturn this.pushStack( slice.apply( this, arguments ) );\\n\\t},\\n\\n\\tfirst: function() {\\n\\t\\treturn this.eq( 0 );\\n\\t},\\n\\n\\tlast: function() {\\n\\t\\treturn this.eq( -1 );\\n\\t},\\n\\n\\teq: function( i ) {\\n\\t\\tvar len = this.length,\\n\\t\\t\\tj = +i + ( i < 0 ? len : 0 );\\n\\t\\treturn this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );\\n\\t},\\n\\n\\tend: function() {\\n\\t\\treturn this.prevObject || this.constructor();\\n\\t},\\n\\n\\t// For internal use only.\\n\\t// Behaves like an Array's method, not like a jQuery method.\\n\\tpush: push,\\n\\tsort: arr.sort,\\n\\tsplice: arr.splice\\n};\\n\\njQuery.extend = jQuery.fn.extend = function() {\\n\\tvar options, name, src, copy, copyIsArray, clone,\\n\\t\\ttarget = arguments[ 0 ] || {},\\n\\t\\ti = 1,\\n\\t\\tlength = arguments.length,\\n\\t\\tdeep = false;\\n\\n\\t// Handle a deep copy situation\\n\\tif ( typeof target === \\\"boolean\\\" ) {\\n\\t\\tdeep = target;\\n\\n\\t\\t// Skip the boolean and the target\\n\\t\\ttarget = arguments[ i ] || {};\\n\\t\\ti++;\\n\\t}\\n\\n\\t// Handle case when target is a string or something (possible in deep copy)\\n\\tif ( typeof target !== \\\"object\\\" && !isFunction( target ) ) {\\n\\t\\ttarget = {};\\n\\t}\\n\\n\\t// Extend jQuery itself if only one argument is passed\\n\\tif ( i === length ) {\\n\\t\\ttarget = this;\\n\\t\\ti--;\\n\\t}\\n\\n\\tfor ( ; i < length; i++ ) {\\n\\n\\t\\t// Only deal with non-null/undefined values\\n\\t\\tif ( ( options = arguments[ i ] ) != null ) {\\n\\n\\t\\t\\t// Extend the base object\\n\\t\\t\\tfor ( name in options ) {\\n\\t\\t\\t\\tcopy = options[ name ];\\n\\n\\t\\t\\t\\t// Prevent Object.prototype pollution\\n\\t\\t\\t\\t// Prevent never-ending loop\\n\\t\\t\\t\\tif ( name === \\\"__proto__\\\" || target === copy ) {\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Recurse if we're merging plain objects or arrays\\n\\t\\t\\t\\tif ( deep && copy && ( jQuery.isPlainObject( copy ) ||\\n\\t\\t\\t\\t\\t( copyIsArray = Array.isArray( copy ) ) ) ) {\\n\\t\\t\\t\\t\\tsrc = target[ name ];\\n\\n\\t\\t\\t\\t\\t// Ensure proper type for the source value\\n\\t\\t\\t\\t\\tif ( copyIsArray && !Array.isArray( src ) ) {\\n\\t\\t\\t\\t\\t\\tclone = [];\\n\\t\\t\\t\\t\\t} else if ( !copyIsArray && !jQuery.isPlainObject( src ) ) {\\n\\t\\t\\t\\t\\t\\tclone = {};\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\tclone = src;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tcopyIsArray = false;\\n\\n\\t\\t\\t\\t\\t// Never move original objects, clone them\\n\\t\\t\\t\\t\\ttarget[ name ] = jQuery.extend( deep, clone, copy );\\n\\n\\t\\t\\t\\t// Don't bring in undefined values\\n\\t\\t\\t\\t} else if ( copy !== undefined ) {\\n\\t\\t\\t\\t\\ttarget[ name ] = copy;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\t// Return the modified object\\n\\treturn target;\\n};\\n\\njQuery.extend( {\\n\\n\\t// Unique for each copy of jQuery on the page\\n\\texpando: \\\"jQuery\\\" + ( version + Math.random() ).replace( /\\\\D/g, \\\"\\\" ),\\n\\n\\t// Assume jQuery is ready without the ready module\\n\\tisReady: true,\\n\\n\\terror: function( msg ) {\\n\\t\\tthrow new Error( msg );\\n\\t},\\n\\n\\tnoop: function() {},\\n\\n\\tisPlainObject: function( obj ) {\\n\\t\\tvar proto, Ctor;\\n\\n\\t\\t// Detect obvious negatives\\n\\t\\t// Use toString instead of jQuery.type to catch host objects\\n\\t\\tif ( !obj || toString.call( obj ) !== \\\"[object Object]\\\" ) {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\tproto = getProto( obj );\\n\\n\\t\\t// Objects with no prototype (e.g., `Object.create( null )`) are plain\\n\\t\\tif ( !proto ) {\\n\\t\\t\\treturn true;\\n\\t\\t}\\n\\n\\t\\t// Objects with prototype are plain iff they were constructed by a global Object function\\n\\t\\tCtor = hasOwn.call( proto, \\\"constructor\\\" ) && proto.constructor;\\n\\t\\treturn typeof Ctor === \\\"function\\\" && fnToString.call( Ctor ) === ObjectFunctionString;\\n\\t},\\n\\n\\tisEmptyObject: function( obj ) {\\n\\t\\tvar name;\\n\\n\\t\\tfor ( name in obj ) {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\t\\treturn true;\\n\\t},\\n\\n\\t// Evaluates a script in a global context\\n\\tglobalEval: function( code, options ) {\\n\\t\\tDOMEval( code, { nonce: options && options.nonce } );\\n\\t},\\n\\n\\teach: function( obj, callback ) {\\n\\t\\tvar length, i = 0;\\n\\n\\t\\tif ( isArrayLike( obj ) ) {\\n\\t\\t\\tlength = obj.length;\\n\\t\\t\\tfor ( ; i < length; i++ ) {\\n\\t\\t\\t\\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\\n\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t} else {\\n\\t\\t\\tfor ( i in obj ) {\\n\\t\\t\\t\\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\\n\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn obj;\\n\\t},\\n\\n\\t// Support: Android <=4.0 only\\n\\ttrim: function( text ) {\\n\\t\\treturn text == null ?\\n\\t\\t\\t\\\"\\\" :\\n\\t\\t\\t( text + \\\"\\\" ).replace( rtrim, \\\"\\\" );\\n\\t},\\n\\n\\t// results is for internal usage only\\n\\tmakeArray: function( arr, results ) {\\n\\t\\tvar ret = results || [];\\n\\n\\t\\tif ( arr != null ) {\\n\\t\\t\\tif ( isArrayLike( Object( arr ) ) ) {\\n\\t\\t\\t\\tjQuery.merge( ret,\\n\\t\\t\\t\\t\\ttypeof arr === \\\"string\\\" ?\\n\\t\\t\\t\\t\\t[ arr ] : arr\\n\\t\\t\\t\\t);\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tpush.call( ret, arr );\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn ret;\\n\\t},\\n\\n\\tinArray: function( elem, arr, i ) {\\n\\t\\treturn arr == null ? -1 : indexOf.call( arr, elem, i );\\n\\t},\\n\\n\\t// Support: Android <=4.0 only, PhantomJS 1 only\\n\\t// push.apply(_, arraylike) throws on ancient WebKit\\n\\tmerge: function( first, second ) {\\n\\t\\tvar len = +second.length,\\n\\t\\t\\tj = 0,\\n\\t\\t\\ti = first.length;\\n\\n\\t\\tfor ( ; j < len; j++ ) {\\n\\t\\t\\tfirst[ i++ ] = second[ j ];\\n\\t\\t}\\n\\n\\t\\tfirst.length = i;\\n\\n\\t\\treturn first;\\n\\t},\\n\\n\\tgrep: function( elems, callback, invert ) {\\n\\t\\tvar callbackInverse,\\n\\t\\t\\tmatches = [],\\n\\t\\t\\ti = 0,\\n\\t\\t\\tlength = elems.length,\\n\\t\\t\\tcallbackExpect = !invert;\\n\\n\\t\\t// Go through the array, only saving the items\\n\\t\\t// that pass the validator function\\n\\t\\tfor ( ; i < length; i++ ) {\\n\\t\\t\\tcallbackInverse = !callback( elems[ i ], i );\\n\\t\\t\\tif ( callbackInverse !== callbackExpect ) {\\n\\t\\t\\t\\tmatches.push( elems[ i ] );\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn matches;\\n\\t},\\n\\n\\t// arg is for internal usage only\\n\\tmap: function( elems, callback, arg ) {\\n\\t\\tvar length, value,\\n\\t\\t\\ti = 0,\\n\\t\\t\\tret = [];\\n\\n\\t\\t// Go through the array, translating each of the items to their new values\\n\\t\\tif ( isArrayLike( elems ) ) {\\n\\t\\t\\tlength = elems.length;\\n\\t\\t\\tfor ( ; i < length; i++ ) {\\n\\t\\t\\t\\tvalue = callback( elems[ i ], i, arg );\\n\\n\\t\\t\\t\\tif ( value != null ) {\\n\\t\\t\\t\\t\\tret.push( value );\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t// Go through every key on the object,\\n\\t\\t} else {\\n\\t\\t\\tfor ( i in elems ) {\\n\\t\\t\\t\\tvalue = callback( elems[ i ], i, arg );\\n\\n\\t\\t\\t\\tif ( value != null ) {\\n\\t\\t\\t\\t\\tret.push( value );\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// Flatten any nested arrays\\n\\t\\treturn concat.apply( [], ret );\\n\\t},\\n\\n\\t// A global GUID counter for objects\\n\\tguid: 1,\\n\\n\\t// jQuery.support is not used in Core but other projects attach their\\n\\t// properties to it so it needs to exist.\\n\\tsupport: support\\n} );\\n\\nif ( typeof Symbol === \\\"function\\\" ) {\\n\\tjQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];\\n}\\n\\n// Populate the class2type map\\njQuery.each( \\\"Boolean Number String Function Array Date RegExp Object Error Symbol\\\".split( \\\" \\\" ),\\nfunction( i, name ) {\\n\\tclass2type[ \\\"[object \\\" + name + \\\"]\\\" ] = name.toLowerCase();\\n} );\\n\\nfunction isArrayLike( obj ) {\\n\\n\\t// Support: real iOS 8.2 only (not reproducible in simulator)\\n\\t// `in` check used to prevent JIT error (gh-2145)\\n\\t// hasOwn isn't used here due to false negatives\\n\\t// regarding Nodelist length in IE\\n\\tvar length = !!obj && \\\"length\\\" in obj && obj.length,\\n\\t\\ttype = toType( obj );\\n\\n\\tif ( isFunction( obj ) || isWindow( obj ) ) {\\n\\t\\treturn false;\\n\\t}\\n\\n\\treturn type === \\\"array\\\" || length === 0 ||\\n\\t\\ttypeof length === \\\"number\\\" && length > 0 && ( length - 1 ) in obj;\\n}\\nvar Sizzle =\\n/*!\\n * Sizzle CSS Selector Engine v2.3.4\\n * https://sizzlejs.com/\\n *\\n * Copyright JS Foundation and other contributors\\n * Released under the MIT license\\n * https://js.foundation/\\n *\\n * Date: 2019-04-08\\n */\\n(function( window ) {\\n\\nvar i,\\n\\tsupport,\\n\\tExpr,\\n\\tgetText,\\n\\tisXML,\\n\\ttokenize,\\n\\tcompile,\\n\\tselect,\\n\\toutermostContext,\\n\\tsortInput,\\n\\thasDuplicate,\\n\\n\\t// Local document vars\\n\\tsetDocument,\\n\\tdocument,\\n\\tdocElem,\\n\\tdocumentIsHTML,\\n\\trbuggyQSA,\\n\\trbuggyMatches,\\n\\tmatches,\\n\\tcontains,\\n\\n\\t// Instance-specific data\\n\\texpando = \\\"sizzle\\\" + 1 * new Date(),\\n\\tpreferredDoc = window.document,\\n\\tdirruns = 0,\\n\\tdone = 0,\\n\\tclassCache = createCache(),\\n\\ttokenCache = createCache(),\\n\\tcompilerCache = createCache(),\\n\\tnonnativeSelectorCache = createCache(),\\n\\tsortOrder = function( a, b ) {\\n\\t\\tif ( a === b ) {\\n\\t\\t\\thasDuplicate = true;\\n\\t\\t}\\n\\t\\treturn 0;\\n\\t},\\n\\n\\t// Instance methods\\n\\thasOwn = ({}).hasOwnProperty,\\n\\tarr = [],\\n\\tpop = arr.pop,\\n\\tpush_native = arr.push,\\n\\tpush = arr.push,\\n\\tslice = arr.slice,\\n\\t// Use a stripped-down indexOf as it's faster than native\\n\\t// https://jsperf.com/thor-indexof-vs-for/5\\n\\tindexOf = function( list, elem ) {\\n\\t\\tvar i = 0,\\n\\t\\t\\tlen = list.length;\\n\\t\\tfor ( ; i < len; i++ ) {\\n\\t\\t\\tif ( list[i] === elem ) {\\n\\t\\t\\t\\treturn i;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\treturn -1;\\n\\t},\\n\\n\\tbooleans = \\\"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\\\",\\n\\n\\t// Regular expressions\\n\\n\\t// http://www.w3.org/TR/css3-selectors/#whitespace\\n\\twhitespace = \\\"[\\\\\\\\x20\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\f]\\\",\\n\\n\\t// http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier\\n\\tidentifier = \\\"(?:\\\\\\\\\\\\\\\\.|[\\\\\\\\w-]|[^\\\\0-\\\\\\\\xa0])+\\\",\\n\\n\\t// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\\n\\tattributes = \\\"\\\\\\\\[\\\" + whitespace + \\\"*(\\\" + identifier + \\\")(?:\\\" + whitespace +\\n\\t\\t// Operator (capture 2)\\n\\t\\t\\\"*([*^$|!~]?=)\\\" + whitespace +\\n\\t\\t// \\\"Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]\\\"\\n\\t\\t\\\"*(?:'((?:\\\\\\\\\\\\\\\\.|[^\\\\\\\\\\\\\\\\'])*)'|\\\\\\\"((?:\\\\\\\\\\\\\\\\.|[^\\\\\\\\\\\\\\\\\\\\\\\"])*)\\\\\\\"|(\\\" + identifier + \\\"))|)\\\" + whitespace +\\n\\t\\t\\\"*\\\\\\\\]\\\",\\n\\n\\tpseudos = \\\":(\\\" + identifier + \\\")(?:\\\\\\\\((\\\" +\\n\\t\\t// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\\n\\t\\t// 1. quoted (capture 3; capture 4 or capture 5)\\n\\t\\t\\\"('((?:\\\\\\\\\\\\\\\\.|[^\\\\\\\\\\\\\\\\'])*)'|\\\\\\\"((?:\\\\\\\\\\\\\\\\.|[^\\\\\\\\\\\\\\\\\\\\\\\"])*)\\\\\\\")|\\\" +\\n\\t\\t// 2. simple (capture 6)\\n\\t\\t\\\"((?:\\\\\\\\\\\\\\\\.|[^\\\\\\\\\\\\\\\\()[\\\\\\\\]]|\\\" + attributes + \\\")*)|\\\" +\\n\\t\\t// 3. anything else (capture 2)\\n\\t\\t\\\".*\\\" +\\n\\t\\t\\\")\\\\\\\\)|)\\\",\\n\\n\\t// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\\n\\trwhitespace = new RegExp( whitespace + \\\"+\\\", \\\"g\\\" ),\\n\\trtrim = new RegExp( \\\"^\\\" + whitespace + \\\"+|((?:^|[^\\\\\\\\\\\\\\\\])(?:\\\\\\\\\\\\\\\\.)*)\\\" + whitespace + \\\"+$\\\", \\\"g\\\" ),\\n\\n\\trcomma = new RegExp( \\\"^\\\" + whitespace + \\\"*,\\\" + whitespace + \\\"*\\\" ),\\n\\trcombinators = new RegExp( \\\"^\\\" + whitespace + \\\"*([>+~]|\\\" + whitespace + \\\")\\\" + whitespace + \\\"*\\\" ),\\n\\trdescend = new RegExp( whitespace + \\\"|>\\\" ),\\n\\n\\trpseudo = new RegExp( pseudos ),\\n\\tridentifier = new RegExp( \\\"^\\\" + identifier + \\\"$\\\" ),\\n\\n\\tmatchExpr = {\\n\\t\\t\\\"ID\\\": new RegExp( \\\"^#(\\\" + identifier + \\\")\\\" ),\\n\\t\\t\\\"CLASS\\\": new RegExp( \\\"^\\\\\\\\.(\\\" + identifier + \\\")\\\" ),\\n\\t\\t\\\"TAG\\\": new RegExp( \\\"^(\\\" + identifier + \\\"|[*])\\\" ),\\n\\t\\t\\\"ATTR\\\": new RegExp( \\\"^\\\" + attributes ),\\n\\t\\t\\\"PSEUDO\\\": new RegExp( \\\"^\\\" + pseudos ),\\n\\t\\t\\\"CHILD\\\": new RegExp( \\\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\\\\\(\\\" + whitespace +\\n\\t\\t\\t\\\"*(even|odd|(([+-]|)(\\\\\\\\d*)n|)\\\" + whitespace + \\\"*(?:([+-]|)\\\" + whitespace +\\n\\t\\t\\t\\\"*(\\\\\\\\d+)|))\\\" + whitespace + \\\"*\\\\\\\\)|)\\\", \\\"i\\\" ),\\n\\t\\t\\\"bool\\\": new RegExp( \\\"^(?:\\\" + booleans + \\\")$\\\", \\\"i\\\" ),\\n\\t\\t// For use in libraries implementing .is()\\n\\t\\t// We use this for POS matching in `select`\\n\\t\\t\\\"needsContext\\\": new RegExp( \\\"^\\\" + whitespace + \\\"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\\\\\(\\\" +\\n\\t\\t\\twhitespace + \\\"*((?:-\\\\\\\\d)?\\\\\\\\d*)\\\" + whitespace + \\\"*\\\\\\\\)|)(?=[^-]|$)\\\", \\\"i\\\" )\\n\\t},\\n\\n\\trhtml = /HTML$/i,\\n\\trinputs = /^(?:input|select|textarea|button)$/i,\\n\\trheader = /^h\\\\d$/i,\\n\\n\\trnative = /^[^{]+\\\\{\\\\s*\\\\[native \\\\w/,\\n\\n\\t// Easily-parseable/retrievable ID or TAG or CLASS selectors\\n\\trquickExpr = /^(?:#([\\\\w-]+)|(\\\\w+)|\\\\.([\\\\w-]+))$/,\\n\\n\\trsibling = /[+~]/,\\n\\n\\t// CSS escapes\\n\\t// http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\\n\\trunescape = new RegExp( \\\"\\\\\\\\\\\\\\\\([\\\\\\\\da-f]{1,6}\\\" + whitespace + \\\"?|(\\\" + whitespace + \\\")|.)\\\", \\\"ig\\\" ),\\n\\tfunescape = function( _, escaped, escapedWhitespace ) {\\n\\t\\tvar high = \\\"0x\\\" + escaped - 0x10000;\\n\\t\\t// NaN means non-codepoint\\n\\t\\t// Support: Firefox<24\\n\\t\\t// Workaround erroneous numeric interpretation of +\\\"0x\\\"\\n\\t\\treturn high !== high || escapedWhitespace ?\\n\\t\\t\\tescaped :\\n\\t\\t\\thigh < 0 ?\\n\\t\\t\\t\\t// BMP codepoint\\n\\t\\t\\t\\tString.fromCharCode( high + 0x10000 ) :\\n\\t\\t\\t\\t// Supplemental Plane codepoint (surrogate pair)\\n\\t\\t\\t\\tString.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );\\n\\t},\\n\\n\\t// CSS string/identifier serialization\\n\\t// https://drafts.csswg.org/cssom/#common-serializing-idioms\\n\\trcssescape = /([\\\\0-\\\\x1f\\\\x7f]|^-?\\\\d)|^-$|[^\\\\0-\\\\x1f\\\\x7f-\\\\uFFFF\\\\w-]/g,\\n\\tfcssescape = function( ch, asCodePoint ) {\\n\\t\\tif ( asCodePoint ) {\\n\\n\\t\\t\\t// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER\\n\\t\\t\\tif ( ch === \\\"\\\\0\\\" ) {\\n\\t\\t\\t\\treturn \\\"\\\\uFFFD\\\";\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Control characters and (dependent upon position) numbers get escaped as code points\\n\\t\\t\\treturn ch.slice( 0, -1 ) + \\\"\\\\\\\\\\\" + ch.charCodeAt( ch.length - 1 ).toString( 16 ) + \\\" \\\";\\n\\t\\t}\\n\\n\\t\\t// Other potentially-special ASCII characters get backslash-escaped\\n\\t\\treturn \\\"\\\\\\\\\\\" + ch;\\n\\t},\\n\\n\\t// Used for iframes\\n\\t// See setDocument()\\n\\t// Removing the function wrapper causes a \\\"Permission Denied\\\"\\n\\t// error in IE\\n\\tunloadHandler = function() {\\n\\t\\tsetDocument();\\n\\t},\\n\\n\\tinDisabledFieldset = addCombinator(\\n\\t\\tfunction( elem ) {\\n\\t\\t\\treturn elem.disabled === true && elem.nodeName.toLowerCase() === \\\"fieldset\\\";\\n\\t\\t},\\n\\t\\t{ dir: \\\"parentNode\\\", next: \\\"legend\\\" }\\n\\t);\\n\\n// Optimize for push.apply( _, NodeList )\\ntry {\\n\\tpush.apply(\\n\\t\\t(arr = slice.call( preferredDoc.childNodes )),\\n\\t\\tpreferredDoc.childNodes\\n\\t);\\n\\t// Support: Android<4.0\\n\\t// Detect silently failing push.apply\\n\\tarr[ preferredDoc.childNodes.length ].nodeType;\\n} catch ( e ) {\\n\\tpush = { apply: arr.length ?\\n\\n\\t\\t// Leverage slice if possible\\n\\t\\tfunction( target, els ) {\\n\\t\\t\\tpush_native.apply( target, slice.call(els) );\\n\\t\\t} :\\n\\n\\t\\t// Support: IE<9\\n\\t\\t// Otherwise append directly\\n\\t\\tfunction( target, els ) {\\n\\t\\t\\tvar j = target.length,\\n\\t\\t\\t\\ti = 0;\\n\\t\\t\\t// Can't trust NodeList.length\\n\\t\\t\\twhile ( (target[j++] = els[i++]) ) {}\\n\\t\\t\\ttarget.length = j - 1;\\n\\t\\t}\\n\\t};\\n}\\n\\nfunction Sizzle( selector, context, results, seed ) {\\n\\tvar m, i, elem, nid, match, groups, newSelector,\\n\\t\\tnewContext = context && context.ownerDocument,\\n\\n\\t\\t// nodeType defaults to 9, since context defaults to document\\n\\t\\tnodeType = context ? context.nodeType : 9;\\n\\n\\tresults = results || [];\\n\\n\\t// Return early from calls with invalid selector or context\\n\\tif ( typeof selector !== \\\"string\\\" || !selector ||\\n\\t\\tnodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {\\n\\n\\t\\treturn results;\\n\\t}\\n\\n\\t// Try to shortcut find operations (as opposed to filters) in HTML documents\\n\\tif ( !seed ) {\\n\\n\\t\\tif ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {\\n\\t\\t\\tsetDocument( context );\\n\\t\\t}\\n\\t\\tcontext = context || document;\\n\\n\\t\\tif ( documentIsHTML ) {\\n\\n\\t\\t\\t// If the selector is sufficiently simple, try using a \\\"get*By*\\\" DOM method\\n\\t\\t\\t// (excepting DocumentFragment context, where the methods don't exist)\\n\\t\\t\\tif ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {\\n\\n\\t\\t\\t\\t// ID selector\\n\\t\\t\\t\\tif ( (m = match[1]) ) {\\n\\n\\t\\t\\t\\t\\t// Document context\\n\\t\\t\\t\\t\\tif ( nodeType === 9 ) {\\n\\t\\t\\t\\t\\t\\tif ( (elem = context.getElementById( m )) ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t// Support: IE, Opera, Webkit\\n\\t\\t\\t\\t\\t\\t\\t// TODO: identify versions\\n\\t\\t\\t\\t\\t\\t\\t// getElementById can match elements by name instead of ID\\n\\t\\t\\t\\t\\t\\t\\tif ( elem.id === m ) {\\n\\t\\t\\t\\t\\t\\t\\t\\tresults.push( elem );\\n\\t\\t\\t\\t\\t\\t\\t\\treturn results;\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\treturn results;\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t// Element context\\n\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\t// Support: IE, Opera, Webkit\\n\\t\\t\\t\\t\\t\\t// TODO: identify versions\\n\\t\\t\\t\\t\\t\\t// getElementById can match elements by name instead of ID\\n\\t\\t\\t\\t\\t\\tif ( newContext && (elem = newContext.getElementById( m )) &&\\n\\t\\t\\t\\t\\t\\t\\tcontains( context, elem ) &&\\n\\t\\t\\t\\t\\t\\t\\telem.id === m ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tresults.push( elem );\\n\\t\\t\\t\\t\\t\\t\\treturn results;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Type selector\\n\\t\\t\\t\\t} else if ( match[2] ) {\\n\\t\\t\\t\\t\\tpush.apply( results, context.getElementsByTagName( selector ) );\\n\\t\\t\\t\\t\\treturn results;\\n\\n\\t\\t\\t\\t// Class selector\\n\\t\\t\\t\\t} else if ( (m = match[3]) && support.getElementsByClassName &&\\n\\t\\t\\t\\t\\tcontext.getElementsByClassName ) {\\n\\n\\t\\t\\t\\t\\tpush.apply( results, context.getElementsByClassName( m ) );\\n\\t\\t\\t\\t\\treturn results;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Take advantage of querySelectorAll\\n\\t\\t\\tif ( support.qsa &&\\n\\t\\t\\t\\t!nonnativeSelectorCache[ selector + \\\" \\\" ] &&\\n\\t\\t\\t\\t(!rbuggyQSA || !rbuggyQSA.test( selector )) &&\\n\\n\\t\\t\\t\\t// Support: IE 8 only\\n\\t\\t\\t\\t// Exclude object elements\\n\\t\\t\\t\\t(nodeType !== 1 || context.nodeName.toLowerCase() !== \\\"object\\\") ) {\\n\\n\\t\\t\\t\\tnewSelector = selector;\\n\\t\\t\\t\\tnewContext = context;\\n\\n\\t\\t\\t\\t// qSA considers elements outside a scoping root when evaluating child or\\n\\t\\t\\t\\t// descendant combinators, which is not what we want.\\n\\t\\t\\t\\t// In such cases, we work around the behavior by prefixing every selector in the\\n\\t\\t\\t\\t// list with an ID selector referencing the scope context.\\n\\t\\t\\t\\t// Thanks to Andrew Dupont for this technique.\\n\\t\\t\\t\\tif ( nodeType === 1 && rdescend.test( selector ) ) {\\n\\n\\t\\t\\t\\t\\t// Capture the context ID, setting it first if necessary\\n\\t\\t\\t\\t\\tif ( (nid = context.getAttribute( \\\"id\\\" )) ) {\\n\\t\\t\\t\\t\\t\\tnid = nid.replace( rcssescape, fcssescape );\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\tcontext.setAttribute( \\\"id\\\", (nid = expando) );\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t// Prefix every selector in the list\\n\\t\\t\\t\\t\\tgroups = tokenize( selector );\\n\\t\\t\\t\\t\\ti = groups.length;\\n\\t\\t\\t\\t\\twhile ( i-- ) {\\n\\t\\t\\t\\t\\t\\tgroups[i] = \\\"#\\\" + nid + \\\" \\\" + toSelector( groups[i] );\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tnewSelector = groups.join( \\\",\\\" );\\n\\n\\t\\t\\t\\t\\t// Expand context for sibling selectors\\n\\t\\t\\t\\t\\tnewContext = rsibling.test( selector ) && testContext( context.parentNode ) ||\\n\\t\\t\\t\\t\\t\\tcontext;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\ttry {\\n\\t\\t\\t\\t\\tpush.apply( results,\\n\\t\\t\\t\\t\\t\\tnewContext.querySelectorAll( newSelector )\\n\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\treturn results;\\n\\t\\t\\t\\t} catch ( qsaError ) {\\n\\t\\t\\t\\t\\tnonnativeSelectorCache( selector, true );\\n\\t\\t\\t\\t} finally {\\n\\t\\t\\t\\t\\tif ( nid === expando ) {\\n\\t\\t\\t\\t\\t\\tcontext.removeAttribute( \\\"id\\\" );\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\t// All others\\n\\treturn select( selector.replace( rtrim, \\\"$1\\\" ), context, results, seed );\\n}\\n\\n/**\\n * Create key-value caches of limited size\\n * @returns {function(string, object)} Returns the Object data after storing it on itself with\\n *\\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\\n *\\tdeleting the oldest entry\\n */\\nfunction createCache() {\\n\\tvar keys = [];\\n\\n\\tfunction cache( key, value ) {\\n\\t\\t// Use (key + \\\" \\\") to avoid collision with native prototype properties (see Issue #157)\\n\\t\\tif ( keys.push( key + \\\" \\\" ) > Expr.cacheLength ) {\\n\\t\\t\\t// Only keep the most recent entries\\n\\t\\t\\tdelete cache[ keys.shift() ];\\n\\t\\t}\\n\\t\\treturn (cache[ key + \\\" \\\" ] = value);\\n\\t}\\n\\treturn cache;\\n}\\n\\n/**\\n * Mark a function for special use by Sizzle\\n * @param {Function} fn The function to mark\\n */\\nfunction markFunction( fn ) {\\n\\tfn[ expando ] = true;\\n\\treturn fn;\\n}\\n\\n/**\\n * Support testing using an element\\n * @param {Function} fn Passed the created element and returns a boolean result\\n */\\nfunction assert( fn ) {\\n\\tvar el = document.createElement(\\\"fieldset\\\");\\n\\n\\ttry {\\n\\t\\treturn !!fn( el );\\n\\t} catch (e) {\\n\\t\\treturn false;\\n\\t} finally {\\n\\t\\t// Remove from its parent by default\\n\\t\\tif ( el.parentNode ) {\\n\\t\\t\\tel.parentNode.removeChild( el );\\n\\t\\t}\\n\\t\\t// release memory in IE\\n\\t\\tel = null;\\n\\t}\\n}\\n\\n/**\\n * Adds the same handler for all of the specified attrs\\n * @param {String} attrs Pipe-separated list of attributes\\n * @param {Function} handler The method that will be applied\\n */\\nfunction addHandle( attrs, handler ) {\\n\\tvar arr = attrs.split(\\\"|\\\"),\\n\\t\\ti = arr.length;\\n\\n\\twhile ( i-- ) {\\n\\t\\tExpr.attrHandle[ arr[i] ] = handler;\\n\\t}\\n}\\n\\n/**\\n * Checks document order of two siblings\\n * @param {Element} a\\n * @param {Element} b\\n * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\\n */\\nfunction siblingCheck( a, b ) {\\n\\tvar cur = b && a,\\n\\t\\tdiff = cur && a.nodeType === 1 && b.nodeType === 1 &&\\n\\t\\t\\ta.sourceIndex - b.sourceIndex;\\n\\n\\t// Use IE sourceIndex if available on both nodes\\n\\tif ( diff ) {\\n\\t\\treturn diff;\\n\\t}\\n\\n\\t// Check if b follows a\\n\\tif ( cur ) {\\n\\t\\twhile ( (cur = cur.nextSibling) ) {\\n\\t\\t\\tif ( cur === b ) {\\n\\t\\t\\t\\treturn -1;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\treturn a ? 1 : -1;\\n}\\n\\n/**\\n * Returns a function to use in pseudos for input types\\n * @param {String} type\\n */\\nfunction createInputPseudo( type ) {\\n\\treturn function( elem ) {\\n\\t\\tvar name = elem.nodeName.toLowerCase();\\n\\t\\treturn name === \\\"input\\\" && elem.type === type;\\n\\t};\\n}\\n\\n/**\\n * Returns a function to use in pseudos for buttons\\n * @param {String} type\\n */\\nfunction createButtonPseudo( type ) {\\n\\treturn function( elem ) {\\n\\t\\tvar name = elem.nodeName.toLowerCase();\\n\\t\\treturn (name === \\\"input\\\" || name === \\\"button\\\") && elem.type === type;\\n\\t};\\n}\\n\\n/**\\n * Returns a function to use in pseudos for :enabled/:disabled\\n * @param {Boolean} disabled true for :disabled; false for :enabled\\n */\\nfunction createDisabledPseudo( disabled ) {\\n\\n\\t// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable\\n\\treturn function( elem ) {\\n\\n\\t\\t// Only certain elements can match :enabled or :disabled\\n\\t\\t// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled\\n\\t\\t// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled\\n\\t\\tif ( \\\"form\\\" in elem ) {\\n\\n\\t\\t\\t// Check for inherited disabledness on relevant non-disabled elements:\\n\\t\\t\\t// * listed form-associated elements in a disabled fieldset\\n\\t\\t\\t//   https://html.spec.whatwg.org/multipage/forms.html#category-listed\\n\\t\\t\\t//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled\\n\\t\\t\\t// * option elements in a disabled optgroup\\n\\t\\t\\t//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled\\n\\t\\t\\t// All such elements have a \\\"form\\\" property.\\n\\t\\t\\tif ( elem.parentNode && elem.disabled === false ) {\\n\\n\\t\\t\\t\\t// Option elements defer to a parent optgroup if present\\n\\t\\t\\t\\tif ( \\\"label\\\" in elem ) {\\n\\t\\t\\t\\t\\tif ( \\\"label\\\" in elem.parentNode ) {\\n\\t\\t\\t\\t\\t\\treturn elem.parentNode.disabled === disabled;\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\treturn elem.disabled === disabled;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Support: IE 6 - 11\\n\\t\\t\\t\\t// Use the isDisabled shortcut property to check for disabled fieldset ancestors\\n\\t\\t\\t\\treturn elem.isDisabled === disabled ||\\n\\n\\t\\t\\t\\t\\t// Where there is no isDisabled, check manually\\n\\t\\t\\t\\t\\t/* jshint -W018 */\\n\\t\\t\\t\\t\\telem.isDisabled !== !disabled &&\\n\\t\\t\\t\\t\\t\\tinDisabledFieldset( elem ) === disabled;\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn elem.disabled === disabled;\\n\\n\\t\\t// Try to winnow out elements that can't be disabled before trusting the disabled property.\\n\\t\\t// Some victims get caught in our net (label, legend, menu, track), but it shouldn't\\n\\t\\t// even exist on them, let alone have a boolean value.\\n\\t\\t} else if ( \\\"label\\\" in elem ) {\\n\\t\\t\\treturn elem.disabled === disabled;\\n\\t\\t}\\n\\n\\t\\t// Remaining elements are neither :enabled nor :disabled\\n\\t\\treturn false;\\n\\t};\\n}\\n\\n/**\\n * Returns a function to use in pseudos for positionals\\n * @param {Function} fn\\n */\\nfunction createPositionalPseudo( fn ) {\\n\\treturn markFunction(function( argument ) {\\n\\t\\targument = +argument;\\n\\t\\treturn markFunction(function( seed, matches ) {\\n\\t\\t\\tvar j,\\n\\t\\t\\t\\tmatchIndexes = fn( [], seed.length, argument ),\\n\\t\\t\\t\\ti = matchIndexes.length;\\n\\n\\t\\t\\t// Match elements found at the specified indexes\\n\\t\\t\\twhile ( i-- ) {\\n\\t\\t\\t\\tif ( seed[ (j = matchIndexes[i]) ] ) {\\n\\t\\t\\t\\t\\tseed[j] = !(matches[j] = seed[j]);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t});\\n\\t});\\n}\\n\\n/**\\n * Checks a node for validity as a Sizzle context\\n * @param {Element|Object=} context\\n * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\\n */\\nfunction testContext( context ) {\\n\\treturn context && typeof context.getElementsByTagName !== \\\"undefined\\\" && context;\\n}\\n\\n// Expose support vars for convenience\\nsupport = Sizzle.support = {};\\n\\n/**\\n * Detects XML nodes\\n * @param {Element|Object} elem An element or a document\\n * @returns {Boolean} True iff elem is a non-HTML XML node\\n */\\nisXML = Sizzle.isXML = function( elem ) {\\n\\tvar namespace = elem.namespaceURI,\\n\\t\\tdocElem = (elem.ownerDocument || elem).documentElement;\\n\\n\\t// Support: IE <=8\\n\\t// Assume HTML when documentElement doesn't yet exist, such as inside loading iframes\\n\\t// https://bugs.jquery.com/ticket/4833\\n\\treturn !rhtml.test( namespace || docElem && docElem.nodeName || \\\"HTML\\\" );\\n};\\n\\n/**\\n * Sets document-related variables once based on the current document\\n * @param {Element|Object} [doc] An element or document object to use to set the document\\n * @returns {Object} Returns the current document\\n */\\nsetDocument = Sizzle.setDocument = function( node ) {\\n\\tvar hasCompare, subWindow,\\n\\t\\tdoc = node ? node.ownerDocument || node : preferredDoc;\\n\\n\\t// Return early if doc is invalid or already selected\\n\\tif ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {\\n\\t\\treturn document;\\n\\t}\\n\\n\\t// Update global variables\\n\\tdocument = doc;\\n\\tdocElem = document.documentElement;\\n\\tdocumentIsHTML = !isXML( document );\\n\\n\\t// Support: IE 9-11, Edge\\n\\t// Accessing iframe documents after unload throws \\\"permission denied\\\" errors (jQuery #13936)\\n\\tif ( preferredDoc !== document &&\\n\\t\\t(subWindow = document.defaultView) && subWindow.top !== subWindow ) {\\n\\n\\t\\t// Support: IE 11, Edge\\n\\t\\tif ( subWindow.addEventListener ) {\\n\\t\\t\\tsubWindow.addEventListener( \\\"unload\\\", unloadHandler, false );\\n\\n\\t\\t// Support: IE 9 - 10 only\\n\\t\\t} else if ( subWindow.attachEvent ) {\\n\\t\\t\\tsubWindow.attachEvent( \\\"onunload\\\", unloadHandler );\\n\\t\\t}\\n\\t}\\n\\n\\t/* Attributes\\n\\t---------------------------------------------------------------------- */\\n\\n\\t// Support: IE<8\\n\\t// Verify that getAttribute really returns attributes and not properties\\n\\t// (excepting IE8 booleans)\\n\\tsupport.attributes = assert(function( el ) {\\n\\t\\tel.className = \\\"i\\\";\\n\\t\\treturn !el.getAttribute(\\\"className\\\");\\n\\t});\\n\\n\\t/* getElement(s)By*\\n\\t---------------------------------------------------------------------- */\\n\\n\\t// Check if getElementsByTagName(\\\"*\\\") returns only elements\\n\\tsupport.getElementsByTagName = assert(function( el ) {\\n\\t\\tel.appendChild( document.createComment(\\\"\\\") );\\n\\t\\treturn !el.getElementsByTagName(\\\"*\\\").length;\\n\\t});\\n\\n\\t// Support: IE<9\\n\\tsupport.getElementsByClassName = rnative.test( document.getElementsByClassName );\\n\\n\\t// Support: IE<10\\n\\t// Check if getElementById returns elements by name\\n\\t// The broken getElementById methods don't pick up programmatically-set names,\\n\\t// so use a roundabout getElementsByName test\\n\\tsupport.getById = assert(function( el ) {\\n\\t\\tdocElem.appendChild( el ).id = expando;\\n\\t\\treturn !document.getElementsByName || !document.getElementsByName( expando ).length;\\n\\t});\\n\\n\\t// ID filter and find\\n\\tif ( support.getById ) {\\n\\t\\tExpr.filter[\\\"ID\\\"] = function( id ) {\\n\\t\\t\\tvar attrId = id.replace( runescape, funescape );\\n\\t\\t\\treturn function( elem ) {\\n\\t\\t\\t\\treturn elem.getAttribute(\\\"id\\\") === attrId;\\n\\t\\t\\t};\\n\\t\\t};\\n\\t\\tExpr.find[\\\"ID\\\"] = function( id, context ) {\\n\\t\\t\\tif ( typeof context.getElementById !== \\\"undefined\\\" && documentIsHTML ) {\\n\\t\\t\\t\\tvar elem = context.getElementById( id );\\n\\t\\t\\t\\treturn elem ? [ elem ] : [];\\n\\t\\t\\t}\\n\\t\\t};\\n\\t} else {\\n\\t\\tExpr.filter[\\\"ID\\\"] =  function( id ) {\\n\\t\\t\\tvar attrId = id.replace( runescape, funescape );\\n\\t\\t\\treturn function( elem ) {\\n\\t\\t\\t\\tvar node = typeof elem.getAttributeNode !== \\\"undefined\\\" &&\\n\\t\\t\\t\\t\\telem.getAttributeNode(\\\"id\\\");\\n\\t\\t\\t\\treturn node && node.value === attrId;\\n\\t\\t\\t};\\n\\t\\t};\\n\\n\\t\\t// Support: IE 6 - 7 only\\n\\t\\t// getElementById is not reliable as a find shortcut\\n\\t\\tExpr.find[\\\"ID\\\"] = function( id, context ) {\\n\\t\\t\\tif ( typeof context.getElementById !== \\\"undefined\\\" && documentIsHTML ) {\\n\\t\\t\\t\\tvar node, i, elems,\\n\\t\\t\\t\\t\\telem = context.getElementById( id );\\n\\n\\t\\t\\t\\tif ( elem ) {\\n\\n\\t\\t\\t\\t\\t// Verify the id attribute\\n\\t\\t\\t\\t\\tnode = elem.getAttributeNode(\\\"id\\\");\\n\\t\\t\\t\\t\\tif ( node && node.value === id ) {\\n\\t\\t\\t\\t\\t\\treturn [ elem ];\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t// Fall back on getElementsByName\\n\\t\\t\\t\\t\\telems = context.getElementsByName( id );\\n\\t\\t\\t\\t\\ti = 0;\\n\\t\\t\\t\\t\\twhile ( (elem = elems[i++]) ) {\\n\\t\\t\\t\\t\\t\\tnode = elem.getAttributeNode(\\\"id\\\");\\n\\t\\t\\t\\t\\t\\tif ( node && node.value === id ) {\\n\\t\\t\\t\\t\\t\\t\\treturn [ elem ];\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn [];\\n\\t\\t\\t}\\n\\t\\t};\\n\\t}\\n\\n\\t// Tag\\n\\tExpr.find[\\\"TAG\\\"] = support.getElementsByTagName ?\\n\\t\\tfunction( tag, context ) {\\n\\t\\t\\tif ( typeof context.getElementsByTagName !== \\\"undefined\\\" ) {\\n\\t\\t\\t\\treturn context.getElementsByTagName( tag );\\n\\n\\t\\t\\t// DocumentFragment nodes don't have gEBTN\\n\\t\\t\\t} else if ( support.qsa ) {\\n\\t\\t\\t\\treturn context.querySelectorAll( tag );\\n\\t\\t\\t}\\n\\t\\t} :\\n\\n\\t\\tfunction( tag, context ) {\\n\\t\\t\\tvar elem,\\n\\t\\t\\t\\ttmp = [],\\n\\t\\t\\t\\ti = 0,\\n\\t\\t\\t\\t// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\\n\\t\\t\\t\\tresults = context.getElementsByTagName( tag );\\n\\n\\t\\t\\t// Filter out possible comments\\n\\t\\t\\tif ( tag === \\\"*\\\" ) {\\n\\t\\t\\t\\twhile ( (elem = results[i++]) ) {\\n\\t\\t\\t\\t\\tif ( elem.nodeType === 1 ) {\\n\\t\\t\\t\\t\\t\\ttmp.push( elem );\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn tmp;\\n\\t\\t\\t}\\n\\t\\t\\treturn results;\\n\\t\\t};\\n\\n\\t// Class\\n\\tExpr.find[\\\"CLASS\\\"] = support.getElementsByClassName && function( className, context ) {\\n\\t\\tif ( typeof context.getElementsByClassName !== \\\"undefined\\\" && documentIsHTML ) {\\n\\t\\t\\treturn context.getElementsByClassName( className );\\n\\t\\t}\\n\\t};\\n\\n\\t/* QSA/matchesSelector\\n\\t---------------------------------------------------------------------- */\\n\\n\\t// QSA and matchesSelector support\\n\\n\\t// matchesSelector(:active) reports false when true (IE9/Opera 11.5)\\n\\trbuggyMatches = [];\\n\\n\\t// qSa(:focus) reports false when true (Chrome 21)\\n\\t// We allow this because of a bug in IE8/9 that throws an error\\n\\t// whenever `document.activeElement` is accessed on an iframe\\n\\t// So, we allow :focus to pass through QSA all the time to avoid the IE error\\n\\t// See https://bugs.jquery.com/ticket/13378\\n\\trbuggyQSA = [];\\n\\n\\tif ( (support.qsa = rnative.test( document.querySelectorAll )) ) {\\n\\t\\t// Build QSA regex\\n\\t\\t// Regex strategy adopted from Diego Perini\\n\\t\\tassert(function( el ) {\\n\\t\\t\\t// Select is set to empty string on purpose\\n\\t\\t\\t// This is to test IE's treatment of not explicitly\\n\\t\\t\\t// setting a boolean content attribute,\\n\\t\\t\\t// since its presence should be enough\\n\\t\\t\\t// https://bugs.jquery.com/ticket/12359\\n\\t\\t\\tdocElem.appendChild( el ).innerHTML = \\\"<a id='\\\" + expando + \\\"'></a>\\\" +\\n\\t\\t\\t\\t\\\"<select id='\\\" + expando + \\\"-\\\\r\\\\\\\\' msallowcapture=''>\\\" +\\n\\t\\t\\t\\t\\\"<option selected=''></option></select>\\\";\\n\\n\\t\\t\\t// Support: IE8, Opera 11-12.16\\n\\t\\t\\t// Nothing should be selected when empty strings follow ^= or $= or *=\\n\\t\\t\\t// The test attribute must be unknown in Opera but \\\"safe\\\" for WinRT\\n\\t\\t\\t// https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\\n\\t\\t\\tif ( el.querySelectorAll(\\\"[msallowcapture^='']\\\").length ) {\\n\\t\\t\\t\\trbuggyQSA.push( \\\"[*^$]=\\\" + whitespace + \\\"*(?:''|\\\\\\\"\\\\\\\")\\\" );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Support: IE8\\n\\t\\t\\t// Boolean attributes and \\\"value\\\" are not treated correctly\\n\\t\\t\\tif ( !el.querySelectorAll(\\\"[selected]\\\").length ) {\\n\\t\\t\\t\\trbuggyQSA.push( \\\"\\\\\\\\[\\\" + whitespace + \\\"*(?:value|\\\" + booleans + \\\")\\\" );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+\\n\\t\\t\\tif ( !el.querySelectorAll( \\\"[id~=\\\" + expando + \\\"-]\\\" ).length ) {\\n\\t\\t\\t\\trbuggyQSA.push(\\\"~=\\\");\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Webkit/Opera - :checked should return selected option elements\\n\\t\\t\\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\\n\\t\\t\\t// IE8 throws error here and will not see later tests\\n\\t\\t\\tif ( !el.querySelectorAll(\\\":checked\\\").length ) {\\n\\t\\t\\t\\trbuggyQSA.push(\\\":checked\\\");\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Support: Safari 8+, iOS 8+\\n\\t\\t\\t// https://bugs.webkit.org/show_bug.cgi?id=136851\\n\\t\\t\\t// In-page `selector#id sibling-combinator selector` fails\\n\\t\\t\\tif ( !el.querySelectorAll( \\\"a#\\\" + expando + \\\"+*\\\" ).length ) {\\n\\t\\t\\t\\trbuggyQSA.push(\\\".#.+[+~]\\\");\\n\\t\\t\\t}\\n\\t\\t});\\n\\n\\t\\tassert(function( el ) {\\n\\t\\t\\tel.innerHTML = \\\"<a href='' disabled='disabled'></a>\\\" +\\n\\t\\t\\t\\t\\\"<select disabled='disabled'><option/></select>\\\";\\n\\n\\t\\t\\t// Support: Windows 8 Native Apps\\n\\t\\t\\t// The type and name attributes are restricted during .innerHTML assignment\\n\\t\\t\\tvar input = document.createElement(\\\"input\\\");\\n\\t\\t\\tinput.setAttribute( \\\"type\\\", \\\"hidden\\\" );\\n\\t\\t\\tel.appendChild( input ).setAttribute( \\\"name\\\", \\\"D\\\" );\\n\\n\\t\\t\\t// Support: IE8\\n\\t\\t\\t// Enforce case-sensitivity of name attribute\\n\\t\\t\\tif ( el.querySelectorAll(\\\"[name=d]\\\").length ) {\\n\\t\\t\\t\\trbuggyQSA.push( \\\"name\\\" + whitespace + \\\"*[*^$|!~]?=\\\" );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\\n\\t\\t\\t// IE8 throws error here and will not see later tests\\n\\t\\t\\tif ( el.querySelectorAll(\\\":enabled\\\").length !== 2 ) {\\n\\t\\t\\t\\trbuggyQSA.push( \\\":enabled\\\", \\\":disabled\\\" );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Support: IE9-11+\\n\\t\\t\\t// IE's :disabled selector does not pick up the children of disabled fieldsets\\n\\t\\t\\tdocElem.appendChild( el ).disabled = true;\\n\\t\\t\\tif ( el.querySelectorAll(\\\":disabled\\\").length !== 2 ) {\\n\\t\\t\\t\\trbuggyQSA.push( \\\":enabled\\\", \\\":disabled\\\" );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Opera 10-11 does not throw on post-comma invalid pseudos\\n\\t\\t\\tel.querySelectorAll(\\\"*,:x\\\");\\n\\t\\t\\trbuggyQSA.push(\\\",.*:\\\");\\n\\t\\t});\\n\\t}\\n\\n\\tif ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||\\n\\t\\tdocElem.webkitMatchesSelector ||\\n\\t\\tdocElem.mozMatchesSelector ||\\n\\t\\tdocElem.oMatchesSelector ||\\n\\t\\tdocElem.msMatchesSelector) )) ) {\\n\\n\\t\\tassert(function( el ) {\\n\\t\\t\\t// Check to see if it's possible to do matchesSelector\\n\\t\\t\\t// on a disconnected node (IE 9)\\n\\t\\t\\tsupport.disconnectedMatch = matches.call( el, \\\"*\\\" );\\n\\n\\t\\t\\t// This should fail with an exception\\n\\t\\t\\t// Gecko does not error, returns false instead\\n\\t\\t\\tmatches.call( el, \\\"[s!='']:x\\\" );\\n\\t\\t\\trbuggyMatches.push( \\\"!=\\\", pseudos );\\n\\t\\t});\\n\\t}\\n\\n\\trbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join(\\\"|\\\") );\\n\\trbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join(\\\"|\\\") );\\n\\n\\t/* Contains\\n\\t---------------------------------------------------------------------- */\\n\\thasCompare = rnative.test( docElem.compareDocumentPosition );\\n\\n\\t// Element contains another\\n\\t// Purposefully self-exclusive\\n\\t// As in, an element does not contain itself\\n\\tcontains = hasCompare || rnative.test( docElem.contains ) ?\\n\\t\\tfunction( a, b ) {\\n\\t\\t\\tvar adown = a.nodeType === 9 ? a.documentElement : a,\\n\\t\\t\\t\\tbup = b && b.parentNode;\\n\\t\\t\\treturn a === bup || !!( bup && bup.nodeType === 1 && (\\n\\t\\t\\t\\tadown.contains ?\\n\\t\\t\\t\\t\\tadown.contains( bup ) :\\n\\t\\t\\t\\t\\ta.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16\\n\\t\\t\\t));\\n\\t\\t} :\\n\\t\\tfunction( a, b ) {\\n\\t\\t\\tif ( b ) {\\n\\t\\t\\t\\twhile ( (b = b.parentNode) ) {\\n\\t\\t\\t\\t\\tif ( b === a ) {\\n\\t\\t\\t\\t\\t\\treturn true;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\treturn false;\\n\\t\\t};\\n\\n\\t/* Sorting\\n\\t---------------------------------------------------------------------- */\\n\\n\\t// Document order sorting\\n\\tsortOrder = hasCompare ?\\n\\tfunction( a, b ) {\\n\\n\\t\\t// Flag for duplicate removal\\n\\t\\tif ( a === b ) {\\n\\t\\t\\thasDuplicate = true;\\n\\t\\t\\treturn 0;\\n\\t\\t}\\n\\n\\t\\t// Sort on method existence if only one input has compareDocumentPosition\\n\\t\\tvar compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\\n\\t\\tif ( compare ) {\\n\\t\\t\\treturn compare;\\n\\t\\t}\\n\\n\\t\\t// Calculate position if both inputs belong to the same document\\n\\t\\tcompare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?\\n\\t\\t\\ta.compareDocumentPosition( b ) :\\n\\n\\t\\t\\t// Otherwise we know they are disconnected\\n\\t\\t\\t1;\\n\\n\\t\\t// Disconnected nodes\\n\\t\\tif ( compare & 1 ||\\n\\t\\t\\t(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {\\n\\n\\t\\t\\t// Choose the first element that is related to our preferred document\\n\\t\\t\\tif ( a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {\\n\\t\\t\\t\\treturn -1;\\n\\t\\t\\t}\\n\\t\\t\\tif ( b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {\\n\\t\\t\\t\\treturn 1;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Maintain original order\\n\\t\\t\\treturn sortInput ?\\n\\t\\t\\t\\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\\n\\t\\t\\t\\t0;\\n\\t\\t}\\n\\n\\t\\treturn compare & 4 ? -1 : 1;\\n\\t} :\\n\\tfunction( a, b ) {\\n\\t\\t// Exit early if the nodes are identical\\n\\t\\tif ( a === b ) {\\n\\t\\t\\thasDuplicate = true;\\n\\t\\t\\treturn 0;\\n\\t\\t}\\n\\n\\t\\tvar cur,\\n\\t\\t\\ti = 0,\\n\\t\\t\\taup = a.parentNode,\\n\\t\\t\\tbup = b.parentNode,\\n\\t\\t\\tap = [ a ],\\n\\t\\t\\tbp = [ b ];\\n\\n\\t\\t// Parentless nodes are either documents or disconnected\\n\\t\\tif ( !aup || !bup ) {\\n\\t\\t\\treturn a === document ? -1 :\\n\\t\\t\\t\\tb === document ? 1 :\\n\\t\\t\\t\\taup ? -1 :\\n\\t\\t\\t\\tbup ? 1 :\\n\\t\\t\\t\\tsortInput ?\\n\\t\\t\\t\\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\\n\\t\\t\\t\\t0;\\n\\n\\t\\t// If the nodes are siblings, we can do a quick check\\n\\t\\t} else if ( aup === bup ) {\\n\\t\\t\\treturn siblingCheck( a, b );\\n\\t\\t}\\n\\n\\t\\t// Otherwise we need full lists of their ancestors for comparison\\n\\t\\tcur = a;\\n\\t\\twhile ( (cur = cur.parentNode) ) {\\n\\t\\t\\tap.unshift( cur );\\n\\t\\t}\\n\\t\\tcur = b;\\n\\t\\twhile ( (cur = cur.parentNode) ) {\\n\\t\\t\\tbp.unshift( cur );\\n\\t\\t}\\n\\n\\t\\t// Walk down the tree looking for a discrepancy\\n\\t\\twhile ( ap[i] === bp[i] ) {\\n\\t\\t\\ti++;\\n\\t\\t}\\n\\n\\t\\treturn i ?\\n\\t\\t\\t// Do a sibling check if the nodes have a common ancestor\\n\\t\\t\\tsiblingCheck( ap[i], bp[i] ) :\\n\\n\\t\\t\\t// Otherwise nodes in our document sort first\\n\\t\\t\\tap[i] === preferredDoc ? -1 :\\n\\t\\t\\tbp[i] === preferredDoc ? 1 :\\n\\t\\t\\t0;\\n\\t};\\n\\n\\treturn document;\\n};\\n\\nSizzle.matches = function( expr, elements ) {\\n\\treturn Sizzle( expr, null, null, elements );\\n};\\n\\nSizzle.matchesSelector = function( elem, expr ) {\\n\\t// Set document vars if needed\\n\\tif ( ( elem.ownerDocument || elem ) !== document ) {\\n\\t\\tsetDocument( elem );\\n\\t}\\n\\n\\tif ( support.matchesSelector && documentIsHTML &&\\n\\t\\t!nonnativeSelectorCache[ expr + \\\" \\\" ] &&\\n\\t\\t( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&\\n\\t\\t( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {\\n\\n\\t\\ttry {\\n\\t\\t\\tvar ret = matches.call( elem, expr );\\n\\n\\t\\t\\t// IE 9's matchesSelector returns false on disconnected nodes\\n\\t\\t\\tif ( ret || support.disconnectedMatch ||\\n\\t\\t\\t\\t\\t// As well, disconnected nodes are said to be in a document\\n\\t\\t\\t\\t\\t// fragment in IE 9\\n\\t\\t\\t\\t\\telem.document && elem.document.nodeType !== 11 ) {\\n\\t\\t\\t\\treturn ret;\\n\\t\\t\\t}\\n\\t\\t} catch (e) {\\n\\t\\t\\tnonnativeSelectorCache( expr, true );\\n\\t\\t}\\n\\t}\\n\\n\\treturn Sizzle( expr, document, null, [ elem ] ).length > 0;\\n};\\n\\nSizzle.contains = function( context, elem ) {\\n\\t// Set document vars if needed\\n\\tif ( ( context.ownerDocument || context ) !== document ) {\\n\\t\\tsetDocument( context );\\n\\t}\\n\\treturn contains( context, elem );\\n};\\n\\nSizzle.attr = function( elem, name ) {\\n\\t// Set document vars if needed\\n\\tif ( ( elem.ownerDocument || elem ) !== document ) {\\n\\t\\tsetDocument( elem );\\n\\t}\\n\\n\\tvar fn = Expr.attrHandle[ name.toLowerCase() ],\\n\\t\\t// Don't get fooled by Object.prototype properties (jQuery #13807)\\n\\t\\tval = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?\\n\\t\\t\\tfn( elem, name, !documentIsHTML ) :\\n\\t\\t\\tundefined;\\n\\n\\treturn val !== undefined ?\\n\\t\\tval :\\n\\t\\tsupport.attributes || !documentIsHTML ?\\n\\t\\t\\telem.getAttribute( name ) :\\n\\t\\t\\t(val = elem.getAttributeNode(name)) && val.specified ?\\n\\t\\t\\t\\tval.value :\\n\\t\\t\\t\\tnull;\\n};\\n\\nSizzle.escape = function( sel ) {\\n\\treturn (sel + \\\"\\\").replace( rcssescape, fcssescape );\\n};\\n\\nSizzle.error = function( msg ) {\\n\\tthrow new Error( \\\"Syntax error, unrecognized expression: \\\" + msg );\\n};\\n\\n/**\\n * Document sorting and removing duplicates\\n * @param {ArrayLike} results\\n */\\nSizzle.uniqueSort = function( results ) {\\n\\tvar elem,\\n\\t\\tduplicates = [],\\n\\t\\tj = 0,\\n\\t\\ti = 0;\\n\\n\\t// Unless we *know* we can detect duplicates, assume their presence\\n\\thasDuplicate = !support.detectDuplicates;\\n\\tsortInput = !support.sortStable && results.slice( 0 );\\n\\tresults.sort( sortOrder );\\n\\n\\tif ( hasDuplicate ) {\\n\\t\\twhile ( (elem = results[i++]) ) {\\n\\t\\t\\tif ( elem === results[ i ] ) {\\n\\t\\t\\t\\tj = duplicates.push( i );\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\twhile ( j-- ) {\\n\\t\\t\\tresults.splice( duplicates[ j ], 1 );\\n\\t\\t}\\n\\t}\\n\\n\\t// Clear input after sorting to release objects\\n\\t// See https://github.com/jquery/sizzle/pull/225\\n\\tsortInput = null;\\n\\n\\treturn results;\\n};\\n\\n/**\\n * Utility function for retrieving the text value of an array of DOM nodes\\n * @param {Array|Element} elem\\n */\\ngetText = Sizzle.getText = function( elem ) {\\n\\tvar node,\\n\\t\\tret = \\\"\\\",\\n\\t\\ti = 0,\\n\\t\\tnodeType = elem.nodeType;\\n\\n\\tif ( !nodeType ) {\\n\\t\\t// If no nodeType, this is expected to be an array\\n\\t\\twhile ( (node = elem[i++]) ) {\\n\\t\\t\\t// Do not traverse comment nodes\\n\\t\\t\\tret += getText( node );\\n\\t\\t}\\n\\t} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {\\n\\t\\t// Use textContent for elements\\n\\t\\t// innerText usage removed for consistency of new lines (jQuery #11153)\\n\\t\\tif ( typeof elem.textContent === \\\"string\\\" ) {\\n\\t\\t\\treturn elem.textContent;\\n\\t\\t} else {\\n\\t\\t\\t// Traverse its children\\n\\t\\t\\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\\n\\t\\t\\t\\tret += getText( elem );\\n\\t\\t\\t}\\n\\t\\t}\\n\\t} else if ( nodeType === 3 || nodeType === 4 ) {\\n\\t\\treturn elem.nodeValue;\\n\\t}\\n\\t// Do not include comment or processing instruction nodes\\n\\n\\treturn ret;\\n};\\n\\nExpr = Sizzle.selectors = {\\n\\n\\t// Can be adjusted by the user\\n\\tcacheLength: 50,\\n\\n\\tcreatePseudo: markFunction,\\n\\n\\tmatch: matchExpr,\\n\\n\\tattrHandle: {},\\n\\n\\tfind: {},\\n\\n\\trelative: {\\n\\t\\t\\\">\\\": { dir: \\\"parentNode\\\", first: true },\\n\\t\\t\\\" \\\": { dir: \\\"parentNode\\\" },\\n\\t\\t\\\"+\\\": { dir: \\\"previousSibling\\\", first: true },\\n\\t\\t\\\"~\\\": { dir: \\\"previousSibling\\\" }\\n\\t},\\n\\n\\tpreFilter: {\\n\\t\\t\\\"ATTR\\\": function( match ) {\\n\\t\\t\\tmatch[1] = match[1].replace( runescape, funescape );\\n\\n\\t\\t\\t// Move the given value to match[3] whether quoted or unquoted\\n\\t\\t\\tmatch[3] = ( match[3] || match[4] || match[5] || \\\"\\\" ).replace( runescape, funescape );\\n\\n\\t\\t\\tif ( match[2] === \\\"~=\\\" ) {\\n\\t\\t\\t\\tmatch[3] = \\\" \\\" + match[3] + \\\" \\\";\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn match.slice( 0, 4 );\\n\\t\\t},\\n\\n\\t\\t\\\"CHILD\\\": function( match ) {\\n\\t\\t\\t/* matches from matchExpr[\\\"CHILD\\\"]\\n\\t\\t\\t\\t1 type (only|nth|...)\\n\\t\\t\\t\\t2 what (child|of-type)\\n\\t\\t\\t\\t3 argument (even|odd|\\\\d*|\\\\d*n([+-]\\\\d+)?|...)\\n\\t\\t\\t\\t4 xn-component of xn+y argument ([+-]?\\\\d*n|)\\n\\t\\t\\t\\t5 sign of xn-component\\n\\t\\t\\t\\t6 x of xn-component\\n\\t\\t\\t\\t7 sign of y-component\\n\\t\\t\\t\\t8 y of y-component\\n\\t\\t\\t*/\\n\\t\\t\\tmatch[1] = match[1].toLowerCase();\\n\\n\\t\\t\\tif ( match[1].slice( 0, 3 ) === \\\"nth\\\" ) {\\n\\t\\t\\t\\t// nth-* requires argument\\n\\t\\t\\t\\tif ( !match[3] ) {\\n\\t\\t\\t\\t\\tSizzle.error( match[0] );\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// numeric x and y parameters for Expr.filter.CHILD\\n\\t\\t\\t\\t// remember that false/true cast respectively to 0/1\\n\\t\\t\\t\\tmatch[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === \\\"even\\\" || match[3] === \\\"odd\\\" ) );\\n\\t\\t\\t\\tmatch[5] = +( ( match[7] + match[8] ) || match[3] === \\\"odd\\\" );\\n\\n\\t\\t\\t// other types prohibit arguments\\n\\t\\t\\t} else if ( match[3] ) {\\n\\t\\t\\t\\tSizzle.error( match[0] );\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn match;\\n\\t\\t},\\n\\n\\t\\t\\\"PSEUDO\\\": function( match ) {\\n\\t\\t\\tvar excess,\\n\\t\\t\\t\\tunquoted = !match[6] && match[2];\\n\\n\\t\\t\\tif ( matchExpr[\\\"CHILD\\\"].test( match[0] ) ) {\\n\\t\\t\\t\\treturn null;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Accept quoted arguments as-is\\n\\t\\t\\tif ( match[3] ) {\\n\\t\\t\\t\\tmatch[2] = match[4] || match[5] || \\\"\\\";\\n\\n\\t\\t\\t// Strip excess characters from unquoted arguments\\n\\t\\t\\t} else if ( unquoted && rpseudo.test( unquoted ) &&\\n\\t\\t\\t\\t// Get excess from tokenize (recursively)\\n\\t\\t\\t\\t(excess = tokenize( unquoted, true )) &&\\n\\t\\t\\t\\t// advance to the next closing parenthesis\\n\\t\\t\\t\\t(excess = unquoted.indexOf( \\\")\\\", unquoted.length - excess ) - unquoted.length) ) {\\n\\n\\t\\t\\t\\t// excess is a negative index\\n\\t\\t\\t\\tmatch[0] = match[0].slice( 0, excess );\\n\\t\\t\\t\\tmatch[2] = unquoted.slice( 0, excess );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Return only captures needed by the pseudo filter method (type and argument)\\n\\t\\t\\treturn match.slice( 0, 3 );\\n\\t\\t}\\n\\t},\\n\\n\\tfilter: {\\n\\n\\t\\t\\\"TAG\\\": function( nodeNameSelector ) {\\n\\t\\t\\tvar nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();\\n\\t\\t\\treturn nodeNameSelector === \\\"*\\\" ?\\n\\t\\t\\t\\tfunction() { return true; } :\\n\\t\\t\\t\\tfunction( elem ) {\\n\\t\\t\\t\\t\\treturn elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\\n\\t\\t\\t\\t};\\n\\t\\t},\\n\\n\\t\\t\\\"CLASS\\\": function( className ) {\\n\\t\\t\\tvar pattern = classCache[ className + \\\" \\\" ];\\n\\n\\t\\t\\treturn pattern ||\\n\\t\\t\\t\\t(pattern = new RegExp( \\\"(^|\\\" + whitespace + \\\")\\\" + className + \\\"(\\\" + whitespace + \\\"|$)\\\" )) &&\\n\\t\\t\\t\\tclassCache( className, function( elem ) {\\n\\t\\t\\t\\t\\treturn pattern.test( typeof elem.className === \\\"string\\\" && elem.className || typeof elem.getAttribute !== \\\"undefined\\\" && elem.getAttribute(\\\"class\\\") || \\\"\\\" );\\n\\t\\t\\t\\t});\\n\\t\\t},\\n\\n\\t\\t\\\"ATTR\\\": function( name, operator, check ) {\\n\\t\\t\\treturn function( elem ) {\\n\\t\\t\\t\\tvar result = Sizzle.attr( elem, name );\\n\\n\\t\\t\\t\\tif ( result == null ) {\\n\\t\\t\\t\\t\\treturn operator === \\\"!=\\\";\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tif ( !operator ) {\\n\\t\\t\\t\\t\\treturn true;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tresult += \\\"\\\";\\n\\n\\t\\t\\t\\treturn operator === \\\"=\\\" ? result === check :\\n\\t\\t\\t\\t\\toperator === \\\"!=\\\" ? result !== check :\\n\\t\\t\\t\\t\\toperator === \\\"^=\\\" ? check && result.indexOf( check ) === 0 :\\n\\t\\t\\t\\t\\toperator === \\\"*=\\\" ? check && result.indexOf( check ) > -1 :\\n\\t\\t\\t\\t\\toperator === \\\"$=\\\" ? check && result.slice( -check.length ) === check :\\n\\t\\t\\t\\t\\toperator === \\\"~=\\\" ? ( \\\" \\\" + result.replace( rwhitespace, \\\" \\\" ) + \\\" \\\" ).indexOf( check ) > -1 :\\n\\t\\t\\t\\t\\toperator === \\\"|=\\\" ? result === check || result.slice( 0, check.length + 1 ) === check + \\\"-\\\" :\\n\\t\\t\\t\\t\\tfalse;\\n\\t\\t\\t};\\n\\t\\t},\\n\\n\\t\\t\\\"CHILD\\\": function( type, what, argument, first, last ) {\\n\\t\\t\\tvar simple = type.slice( 0, 3 ) !== \\\"nth\\\",\\n\\t\\t\\t\\tforward = type.slice( -4 ) !== \\\"last\\\",\\n\\t\\t\\t\\tofType = what === \\\"of-type\\\";\\n\\n\\t\\t\\treturn first === 1 && last === 0 ?\\n\\n\\t\\t\\t\\t// Shortcut for :nth-*(n)\\n\\t\\t\\t\\tfunction( elem ) {\\n\\t\\t\\t\\t\\treturn !!elem.parentNode;\\n\\t\\t\\t\\t} :\\n\\n\\t\\t\\t\\tfunction( elem, context, xml ) {\\n\\t\\t\\t\\t\\tvar cache, uniqueCache, outerCache, node, nodeIndex, start,\\n\\t\\t\\t\\t\\t\\tdir = simple !== forward ? \\\"nextSibling\\\" : \\\"previousSibling\\\",\\n\\t\\t\\t\\t\\t\\tparent = elem.parentNode,\\n\\t\\t\\t\\t\\t\\tname = ofType && elem.nodeName.toLowerCase(),\\n\\t\\t\\t\\t\\t\\tuseCache = !xml && !ofType,\\n\\t\\t\\t\\t\\t\\tdiff = false;\\n\\n\\t\\t\\t\\t\\tif ( parent ) {\\n\\n\\t\\t\\t\\t\\t\\t// :(first|last|only)-(child|of-type)\\n\\t\\t\\t\\t\\t\\tif ( simple ) {\\n\\t\\t\\t\\t\\t\\t\\twhile ( dir ) {\\n\\t\\t\\t\\t\\t\\t\\t\\tnode = elem;\\n\\t\\t\\t\\t\\t\\t\\t\\twhile ( (node = node[ dir ]) ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif ( ofType ?\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tnode.nodeName.toLowerCase() === name :\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tnode.nodeType === 1 ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\treturn false;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t// Reverse direction for :only-* (if we haven't yet done so)\\n\\t\\t\\t\\t\\t\\t\\t\\tstart = dir = type === \\\"only\\\" && !start && \\\"nextSibling\\\";\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\treturn true;\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\tstart = [ forward ? parent.firstChild : parent.lastChild ];\\n\\n\\t\\t\\t\\t\\t\\t// non-xml :nth-child(...) stores cache data on `parent`\\n\\t\\t\\t\\t\\t\\tif ( forward && useCache ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t// Seek `elem` from a previously-cached index\\n\\n\\t\\t\\t\\t\\t\\t\\t// ...in a gzip-friendly way\\n\\t\\t\\t\\t\\t\\t\\tnode = parent;\\n\\t\\t\\t\\t\\t\\t\\touterCache = node[ expando ] || (node[ expando ] = {});\\n\\n\\t\\t\\t\\t\\t\\t\\t// Support: IE <9 only\\n\\t\\t\\t\\t\\t\\t\\t// Defend against cloned attroperties (jQuery gh-1709)\\n\\t\\t\\t\\t\\t\\t\\tuniqueCache = outerCache[ node.uniqueID ] ||\\n\\t\\t\\t\\t\\t\\t\\t\\t(outerCache[ node.uniqueID ] = {});\\n\\n\\t\\t\\t\\t\\t\\t\\tcache = uniqueCache[ type ] || [];\\n\\t\\t\\t\\t\\t\\t\\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\\n\\t\\t\\t\\t\\t\\t\\tdiff = nodeIndex && cache[ 2 ];\\n\\t\\t\\t\\t\\t\\t\\tnode = nodeIndex && parent.childNodes[ nodeIndex ];\\n\\n\\t\\t\\t\\t\\t\\t\\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t// Fallback to seeking `elem` from the start\\n\\t\\t\\t\\t\\t\\t\\t\\t(diff = nodeIndex = 0) || start.pop()) ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t// When found, cache indexes on `parent` and break\\n\\t\\t\\t\\t\\t\\t\\t\\tif ( node.nodeType === 1 && ++diff && node === elem ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tuniqueCache[ type ] = [ dirruns, nodeIndex, diff ];\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t// Use previously-cached element index if available\\n\\t\\t\\t\\t\\t\\t\\tif ( useCache ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t// ...in a gzip-friendly way\\n\\t\\t\\t\\t\\t\\t\\t\\tnode = elem;\\n\\t\\t\\t\\t\\t\\t\\t\\touterCache = node[ expando ] || (node[ expando ] = {});\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t// Support: IE <9 only\\n\\t\\t\\t\\t\\t\\t\\t\\t// Defend against cloned attroperties (jQuery gh-1709)\\n\\t\\t\\t\\t\\t\\t\\t\\tuniqueCache = outerCache[ node.uniqueID ] ||\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t(outerCache[ node.uniqueID ] = {});\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tcache = uniqueCache[ type ] || [];\\n\\t\\t\\t\\t\\t\\t\\t\\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\\n\\t\\t\\t\\t\\t\\t\\t\\tdiff = nodeIndex;\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t// xml :nth-child(...)\\n\\t\\t\\t\\t\\t\\t\\t// or :nth-last-child(...) or :nth(-last)?-of-type(...)\\n\\t\\t\\t\\t\\t\\t\\tif ( diff === false ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t// Use the same loop as above to seek `elem` from the start\\n\\t\\t\\t\\t\\t\\t\\t\\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t(diff = nodeIndex = 0) || start.pop()) ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif ( ( ofType ?\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tnode.nodeName.toLowerCase() === name :\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tnode.nodeType === 1 ) &&\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t++diff ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Cache the index of each encountered element\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tif ( useCache ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\touterCache = node[ expando ] || (node[ expando ] = {});\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Support: IE <9 only\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Defend against cloned attroperties (jQuery gh-1709)\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tuniqueCache = outerCache[ node.uniqueID ] ||\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(outerCache[ node.uniqueID ] = {});\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tuniqueCache[ type ] = [ dirruns, diff ];\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tif ( node === elem ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t// Incorporate the offset, then check against cycle size\\n\\t\\t\\t\\t\\t\\tdiff -= last;\\n\\t\\t\\t\\t\\t\\treturn diff === first || ( diff % first === 0 && diff / first >= 0 );\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t};\\n\\t\\t},\\n\\n\\t\\t\\\"PSEUDO\\\": function( pseudo, argument ) {\\n\\t\\t\\t// pseudo-class names are case-insensitive\\n\\t\\t\\t// http://www.w3.org/TR/selectors/#pseudo-classes\\n\\t\\t\\t// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\\n\\t\\t\\t// Remember that setFilters inherits from pseudos\\n\\t\\t\\tvar args,\\n\\t\\t\\t\\tfn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||\\n\\t\\t\\t\\t\\tSizzle.error( \\\"unsupported pseudo: \\\" + pseudo );\\n\\n\\t\\t\\t// The user may use createPseudo to indicate that\\n\\t\\t\\t// arguments are needed to create the filter function\\n\\t\\t\\t// just as Sizzle does\\n\\t\\t\\tif ( fn[ expando ] ) {\\n\\t\\t\\t\\treturn fn( argument );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// But maintain support for old signatures\\n\\t\\t\\tif ( fn.length > 1 ) {\\n\\t\\t\\t\\targs = [ pseudo, pseudo, \\\"\\\", argument ];\\n\\t\\t\\t\\treturn Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?\\n\\t\\t\\t\\t\\tmarkFunction(function( seed, matches ) {\\n\\t\\t\\t\\t\\t\\tvar idx,\\n\\t\\t\\t\\t\\t\\t\\tmatched = fn( seed, argument ),\\n\\t\\t\\t\\t\\t\\t\\ti = matched.length;\\n\\t\\t\\t\\t\\t\\twhile ( i-- ) {\\n\\t\\t\\t\\t\\t\\t\\tidx = indexOf( seed, matched[i] );\\n\\t\\t\\t\\t\\t\\t\\tseed[ idx ] = !( matches[ idx ] = matched[i] );\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}) :\\n\\t\\t\\t\\t\\tfunction( elem ) {\\n\\t\\t\\t\\t\\t\\treturn fn( elem, 0, args );\\n\\t\\t\\t\\t\\t};\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn fn;\\n\\t\\t}\\n\\t},\\n\\n\\tpseudos: {\\n\\t\\t// Potentially complex pseudos\\n\\t\\t\\\"not\\\": markFunction(function( selector ) {\\n\\t\\t\\t// Trim the selector passed to compile\\n\\t\\t\\t// to avoid treating leading and trailing\\n\\t\\t\\t// spaces as combinators\\n\\t\\t\\tvar input = [],\\n\\t\\t\\t\\tresults = [],\\n\\t\\t\\t\\tmatcher = compile( selector.replace( rtrim, \\\"$1\\\" ) );\\n\\n\\t\\t\\treturn matcher[ expando ] ?\\n\\t\\t\\t\\tmarkFunction(function( seed, matches, context, xml ) {\\n\\t\\t\\t\\t\\tvar elem,\\n\\t\\t\\t\\t\\t\\tunmatched = matcher( seed, null, xml, [] ),\\n\\t\\t\\t\\t\\t\\ti = seed.length;\\n\\n\\t\\t\\t\\t\\t// Match elements unmatched by `matcher`\\n\\t\\t\\t\\t\\twhile ( i-- ) {\\n\\t\\t\\t\\t\\t\\tif ( (elem = unmatched[i]) ) {\\n\\t\\t\\t\\t\\t\\t\\tseed[i] = !(matches[i] = elem);\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}) :\\n\\t\\t\\t\\tfunction( elem, context, xml ) {\\n\\t\\t\\t\\t\\tinput[0] = elem;\\n\\t\\t\\t\\t\\tmatcher( input, null, xml, results );\\n\\t\\t\\t\\t\\t// Don't keep the element (issue #299)\\n\\t\\t\\t\\t\\tinput[0] = null;\\n\\t\\t\\t\\t\\treturn !results.pop();\\n\\t\\t\\t\\t};\\n\\t\\t}),\\n\\n\\t\\t\\\"has\\\": markFunction(function( selector ) {\\n\\t\\t\\treturn function( elem ) {\\n\\t\\t\\t\\treturn Sizzle( selector, elem ).length > 0;\\n\\t\\t\\t};\\n\\t\\t}),\\n\\n\\t\\t\\\"contains\\\": markFunction(function( text ) {\\n\\t\\t\\ttext = text.replace( runescape, funescape );\\n\\t\\t\\treturn function( elem ) {\\n\\t\\t\\t\\treturn ( elem.textContent || getText( elem ) ).indexOf( text ) > -1;\\n\\t\\t\\t};\\n\\t\\t}),\\n\\n\\t\\t// \\\"Whether an element is represented by a :lang() selector\\n\\t\\t// is based solely on the element's language value\\n\\t\\t// being equal to the identifier C,\\n\\t\\t// or beginning with the identifier C immediately followed by \\\"-\\\".\\n\\t\\t// The matching of C against the element's language value is performed case-insensitively.\\n\\t\\t// The identifier C does not have to be a valid language name.\\\"\\n\\t\\t// http://www.w3.org/TR/selectors/#lang-pseudo\\n\\t\\t\\\"lang\\\": markFunction( function( lang ) {\\n\\t\\t\\t// lang value must be a valid identifier\\n\\t\\t\\tif ( !ridentifier.test(lang || \\\"\\\") ) {\\n\\t\\t\\t\\tSizzle.error( \\\"unsupported lang: \\\" + lang );\\n\\t\\t\\t}\\n\\t\\t\\tlang = lang.replace( runescape, funescape ).toLowerCase();\\n\\t\\t\\treturn function( elem ) {\\n\\t\\t\\t\\tvar elemLang;\\n\\t\\t\\t\\tdo {\\n\\t\\t\\t\\t\\tif ( (elemLang = documentIsHTML ?\\n\\t\\t\\t\\t\\t\\telem.lang :\\n\\t\\t\\t\\t\\t\\telem.getAttribute(\\\"xml:lang\\\") || elem.getAttribute(\\\"lang\\\")) ) {\\n\\n\\t\\t\\t\\t\\t\\telemLang = elemLang.toLowerCase();\\n\\t\\t\\t\\t\\t\\treturn elemLang === lang || elemLang.indexOf( lang + \\\"-\\\" ) === 0;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t} while ( (elem = elem.parentNode) && elem.nodeType === 1 );\\n\\t\\t\\t\\treturn false;\\n\\t\\t\\t};\\n\\t\\t}),\\n\\n\\t\\t// Miscellaneous\\n\\t\\t\\\"target\\\": function( elem ) {\\n\\t\\t\\tvar hash = window.location && window.location.hash;\\n\\t\\t\\treturn hash && hash.slice( 1 ) === elem.id;\\n\\t\\t},\\n\\n\\t\\t\\\"root\\\": function( elem ) {\\n\\t\\t\\treturn elem === docElem;\\n\\t\\t},\\n\\n\\t\\t\\\"focus\\\": function( elem ) {\\n\\t\\t\\treturn elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);\\n\\t\\t},\\n\\n\\t\\t// Boolean properties\\n\\t\\t\\\"enabled\\\": createDisabledPseudo( false ),\\n\\t\\t\\\"disabled\\\": createDisabledPseudo( true ),\\n\\n\\t\\t\\\"checked\\\": function( elem ) {\\n\\t\\t\\t// In CSS3, :checked should return both checked and selected elements\\n\\t\\t\\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\\n\\t\\t\\tvar nodeName = elem.nodeName.toLowerCase();\\n\\t\\t\\treturn (nodeName === \\\"input\\\" && !!elem.checked) || (nodeName === \\\"option\\\" && !!elem.selected);\\n\\t\\t},\\n\\n\\t\\t\\\"selected\\\": function( elem ) {\\n\\t\\t\\t// Accessing this property makes selected-by-default\\n\\t\\t\\t// options in Safari work properly\\n\\t\\t\\tif ( elem.parentNode ) {\\n\\t\\t\\t\\telem.parentNode.selectedIndex;\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn elem.selected === true;\\n\\t\\t},\\n\\n\\t\\t// Contents\\n\\t\\t\\\"empty\\\": function( elem ) {\\n\\t\\t\\t// http://www.w3.org/TR/selectors/#empty-pseudo\\n\\t\\t\\t// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\\n\\t\\t\\t//   but not by others (comment: 8; processing instruction: 7; etc.)\\n\\t\\t\\t// nodeType < 6 works because attributes (2) do not appear as children\\n\\t\\t\\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\\n\\t\\t\\t\\tif ( elem.nodeType < 6 ) {\\n\\t\\t\\t\\t\\treturn false;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\treturn true;\\n\\t\\t},\\n\\n\\t\\t\\\"parent\\\": function( elem ) {\\n\\t\\t\\treturn !Expr.pseudos[\\\"empty\\\"]( elem );\\n\\t\\t},\\n\\n\\t\\t// Element/input types\\n\\t\\t\\\"header\\\": function( elem ) {\\n\\t\\t\\treturn rheader.test( elem.nodeName );\\n\\t\\t},\\n\\n\\t\\t\\\"input\\\": function( elem ) {\\n\\t\\t\\treturn rinputs.test( elem.nodeName );\\n\\t\\t},\\n\\n\\t\\t\\\"button\\\": function( elem ) {\\n\\t\\t\\tvar name = elem.nodeName.toLowerCase();\\n\\t\\t\\treturn name === \\\"input\\\" && elem.type === \\\"button\\\" || name === \\\"button\\\";\\n\\t\\t},\\n\\n\\t\\t\\\"text\\\": function( elem ) {\\n\\t\\t\\tvar attr;\\n\\t\\t\\treturn elem.nodeName.toLowerCase() === \\\"input\\\" &&\\n\\t\\t\\t\\telem.type === \\\"text\\\" &&\\n\\n\\t\\t\\t\\t// Support: IE<8\\n\\t\\t\\t\\t// New HTML5 attribute values (e.g., \\\"search\\\") appear with elem.type === \\\"text\\\"\\n\\t\\t\\t\\t( (attr = elem.getAttribute(\\\"type\\\")) == null || attr.toLowerCase() === \\\"text\\\" );\\n\\t\\t},\\n\\n\\t\\t// Position-in-collection\\n\\t\\t\\\"first\\\": createPositionalPseudo(function() {\\n\\t\\t\\treturn [ 0 ];\\n\\t\\t}),\\n\\n\\t\\t\\\"last\\\": createPositionalPseudo(function( matchIndexes, length ) {\\n\\t\\t\\treturn [ length - 1 ];\\n\\t\\t}),\\n\\n\\t\\t\\\"eq\\\": createPositionalPseudo(function( matchIndexes, length, argument ) {\\n\\t\\t\\treturn [ argument < 0 ? argument + length : argument ];\\n\\t\\t}),\\n\\n\\t\\t\\\"even\\\": createPositionalPseudo(function( matchIndexes, length ) {\\n\\t\\t\\tvar i = 0;\\n\\t\\t\\tfor ( ; i < length; i += 2 ) {\\n\\t\\t\\t\\tmatchIndexes.push( i );\\n\\t\\t\\t}\\n\\t\\t\\treturn matchIndexes;\\n\\t\\t}),\\n\\n\\t\\t\\\"odd\\\": createPositionalPseudo(function( matchIndexes, length ) {\\n\\t\\t\\tvar i = 1;\\n\\t\\t\\tfor ( ; i < length; i += 2 ) {\\n\\t\\t\\t\\tmatchIndexes.push( i );\\n\\t\\t\\t}\\n\\t\\t\\treturn matchIndexes;\\n\\t\\t}),\\n\\n\\t\\t\\\"lt\\\": createPositionalPseudo(function( matchIndexes, length, argument ) {\\n\\t\\t\\tvar i = argument < 0 ?\\n\\t\\t\\t\\targument + length :\\n\\t\\t\\t\\targument > length ?\\n\\t\\t\\t\\t\\tlength :\\n\\t\\t\\t\\t\\targument;\\n\\t\\t\\tfor ( ; --i >= 0; ) {\\n\\t\\t\\t\\tmatchIndexes.push( i );\\n\\t\\t\\t}\\n\\t\\t\\treturn matchIndexes;\\n\\t\\t}),\\n\\n\\t\\t\\\"gt\\\": createPositionalPseudo(function( matchIndexes, length, argument ) {\\n\\t\\t\\tvar i = argument < 0 ? argument + length : argument;\\n\\t\\t\\tfor ( ; ++i < length; ) {\\n\\t\\t\\t\\tmatchIndexes.push( i );\\n\\t\\t\\t}\\n\\t\\t\\treturn matchIndexes;\\n\\t\\t})\\n\\t}\\n};\\n\\nExpr.pseudos[\\\"nth\\\"] = Expr.pseudos[\\\"eq\\\"];\\n\\n// Add button/input type pseudos\\nfor ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\\n\\tExpr.pseudos[ i ] = createInputPseudo( i );\\n}\\nfor ( i in { submit: true, reset: true } ) {\\n\\tExpr.pseudos[ i ] = createButtonPseudo( i );\\n}\\n\\n// Easy API for creating new setFilters\\nfunction setFilters() {}\\nsetFilters.prototype = Expr.filters = Expr.pseudos;\\nExpr.setFilters = new setFilters();\\n\\ntokenize = Sizzle.tokenize = function( selector, parseOnly ) {\\n\\tvar matched, match, tokens, type,\\n\\t\\tsoFar, groups, preFilters,\\n\\t\\tcached = tokenCache[ selector + \\\" \\\" ];\\n\\n\\tif ( cached ) {\\n\\t\\treturn parseOnly ? 0 : cached.slice( 0 );\\n\\t}\\n\\n\\tsoFar = selector;\\n\\tgroups = [];\\n\\tpreFilters = Expr.preFilter;\\n\\n\\twhile ( soFar ) {\\n\\n\\t\\t// Comma and first run\\n\\t\\tif ( !matched || (match = rcomma.exec( soFar )) ) {\\n\\t\\t\\tif ( match ) {\\n\\t\\t\\t\\t// Don't consume trailing commas as valid\\n\\t\\t\\t\\tsoFar = soFar.slice( match[0].length ) || soFar;\\n\\t\\t\\t}\\n\\t\\t\\tgroups.push( (tokens = []) );\\n\\t\\t}\\n\\n\\t\\tmatched = false;\\n\\n\\t\\t// Combinators\\n\\t\\tif ( (match = rcombinators.exec( soFar )) ) {\\n\\t\\t\\tmatched = match.shift();\\n\\t\\t\\ttokens.push({\\n\\t\\t\\t\\tvalue: matched,\\n\\t\\t\\t\\t// Cast descendant combinators to space\\n\\t\\t\\t\\ttype: match[0].replace( rtrim, \\\" \\\" )\\n\\t\\t\\t});\\n\\t\\t\\tsoFar = soFar.slice( matched.length );\\n\\t\\t}\\n\\n\\t\\t// Filters\\n\\t\\tfor ( type in Expr.filter ) {\\n\\t\\t\\tif ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||\\n\\t\\t\\t\\t(match = preFilters[ type ]( match ))) ) {\\n\\t\\t\\t\\tmatched = match.shift();\\n\\t\\t\\t\\ttokens.push({\\n\\t\\t\\t\\t\\tvalue: matched,\\n\\t\\t\\t\\t\\ttype: type,\\n\\t\\t\\t\\t\\tmatches: match\\n\\t\\t\\t\\t});\\n\\t\\t\\t\\tsoFar = soFar.slice( matched.length );\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tif ( !matched ) {\\n\\t\\t\\tbreak;\\n\\t\\t}\\n\\t}\\n\\n\\t// Return the length of the invalid excess\\n\\t// if we're just parsing\\n\\t// Otherwise, throw an error or return tokens\\n\\treturn parseOnly ?\\n\\t\\tsoFar.length :\\n\\t\\tsoFar ?\\n\\t\\t\\tSizzle.error( selector ) :\\n\\t\\t\\t// Cache the tokens\\n\\t\\t\\ttokenCache( selector, groups ).slice( 0 );\\n};\\n\\nfunction toSelector( tokens ) {\\n\\tvar i = 0,\\n\\t\\tlen = tokens.length,\\n\\t\\tselector = \\\"\\\";\\n\\tfor ( ; i < len; i++ ) {\\n\\t\\tselector += tokens[i].value;\\n\\t}\\n\\treturn selector;\\n}\\n\\nfunction addCombinator( matcher, combinator, base ) {\\n\\tvar dir = combinator.dir,\\n\\t\\tskip = combinator.next,\\n\\t\\tkey = skip || dir,\\n\\t\\tcheckNonElements = base && key === \\\"parentNode\\\",\\n\\t\\tdoneName = done++;\\n\\n\\treturn combinator.first ?\\n\\t\\t// Check against closest ancestor/preceding element\\n\\t\\tfunction( elem, context, xml ) {\\n\\t\\t\\twhile ( (elem = elem[ dir ]) ) {\\n\\t\\t\\t\\tif ( elem.nodeType === 1 || checkNonElements ) {\\n\\t\\t\\t\\t\\treturn matcher( elem, context, xml );\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\treturn false;\\n\\t\\t} :\\n\\n\\t\\t// Check against all ancestor/preceding elements\\n\\t\\tfunction( elem, context, xml ) {\\n\\t\\t\\tvar oldCache, uniqueCache, outerCache,\\n\\t\\t\\t\\tnewCache = [ dirruns, doneName ];\\n\\n\\t\\t\\t// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching\\n\\t\\t\\tif ( xml ) {\\n\\t\\t\\t\\twhile ( (elem = elem[ dir ]) ) {\\n\\t\\t\\t\\t\\tif ( elem.nodeType === 1 || checkNonElements ) {\\n\\t\\t\\t\\t\\t\\tif ( matcher( elem, context, xml ) ) {\\n\\t\\t\\t\\t\\t\\t\\treturn true;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else {\\n\\t\\t\\t\\twhile ( (elem = elem[ dir ]) ) {\\n\\t\\t\\t\\t\\tif ( elem.nodeType === 1 || checkNonElements ) {\\n\\t\\t\\t\\t\\t\\touterCache = elem[ expando ] || (elem[ expando ] = {});\\n\\n\\t\\t\\t\\t\\t\\t// Support: IE <9 only\\n\\t\\t\\t\\t\\t\\t// Defend against cloned attroperties (jQuery gh-1709)\\n\\t\\t\\t\\t\\t\\tuniqueCache = outerCache[ elem.uniqueID ] || (outerCache[ elem.uniqueID ] = {});\\n\\n\\t\\t\\t\\t\\t\\tif ( skip && skip === elem.nodeName.toLowerCase() ) {\\n\\t\\t\\t\\t\\t\\t\\telem = elem[ dir ] || elem;\\n\\t\\t\\t\\t\\t\\t} else if ( (oldCache = uniqueCache[ key ]) &&\\n\\t\\t\\t\\t\\t\\t\\toldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t// Assign to newCache so results back-propagate to previous elements\\n\\t\\t\\t\\t\\t\\t\\treturn (newCache[ 2 ] = oldCache[ 2 ]);\\n\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t// Reuse newcache so results back-propagate to previous elements\\n\\t\\t\\t\\t\\t\\t\\tuniqueCache[ key ] = newCache;\\n\\n\\t\\t\\t\\t\\t\\t\\t// A match means we're done; a fail means we have to keep checking\\n\\t\\t\\t\\t\\t\\t\\tif ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {\\n\\t\\t\\t\\t\\t\\t\\t\\treturn true;\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\treturn false;\\n\\t\\t};\\n}\\n\\nfunction elementMatcher( matchers ) {\\n\\treturn matchers.length > 1 ?\\n\\t\\tfunction( elem, context, xml ) {\\n\\t\\t\\tvar i = matchers.length;\\n\\t\\t\\twhile ( i-- ) {\\n\\t\\t\\t\\tif ( !matchers[i]( elem, context, xml ) ) {\\n\\t\\t\\t\\t\\treturn false;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\treturn true;\\n\\t\\t} :\\n\\t\\tmatchers[0];\\n}\\n\\nfunction multipleContexts( selector, contexts, results ) {\\n\\tvar i = 0,\\n\\t\\tlen = contexts.length;\\n\\tfor ( ; i < len; i++ ) {\\n\\t\\tSizzle( selector, contexts[i], results );\\n\\t}\\n\\treturn results;\\n}\\n\\nfunction condense( unmatched, map, filter, context, xml ) {\\n\\tvar elem,\\n\\t\\tnewUnmatched = [],\\n\\t\\ti = 0,\\n\\t\\tlen = unmatched.length,\\n\\t\\tmapped = map != null;\\n\\n\\tfor ( ; i < len; i++ ) {\\n\\t\\tif ( (elem = unmatched[i]) ) {\\n\\t\\t\\tif ( !filter || filter( elem, context, xml ) ) {\\n\\t\\t\\t\\tnewUnmatched.push( elem );\\n\\t\\t\\t\\tif ( mapped ) {\\n\\t\\t\\t\\t\\tmap.push( i );\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\treturn newUnmatched;\\n}\\n\\nfunction setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {\\n\\tif ( postFilter && !postFilter[ expando ] ) {\\n\\t\\tpostFilter = setMatcher( postFilter );\\n\\t}\\n\\tif ( postFinder && !postFinder[ expando ] ) {\\n\\t\\tpostFinder = setMatcher( postFinder, postSelector );\\n\\t}\\n\\treturn markFunction(function( seed, results, context, xml ) {\\n\\t\\tvar temp, i, elem,\\n\\t\\t\\tpreMap = [],\\n\\t\\t\\tpostMap = [],\\n\\t\\t\\tpreexisting = results.length,\\n\\n\\t\\t\\t// Get initial elements from seed or context\\n\\t\\t\\telems = seed || multipleContexts( selector || \\\"*\\\", context.nodeType ? [ context ] : context, [] ),\\n\\n\\t\\t\\t// Prefilter to get matcher input, preserving a map for seed-results synchronization\\n\\t\\t\\tmatcherIn = preFilter && ( seed || !selector ) ?\\n\\t\\t\\t\\tcondense( elems, preMap, preFilter, context, xml ) :\\n\\t\\t\\t\\telems,\\n\\n\\t\\t\\tmatcherOut = matcher ?\\n\\t\\t\\t\\t// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\\n\\t\\t\\t\\tpostFinder || ( seed ? preFilter : preexisting || postFilter ) ?\\n\\n\\t\\t\\t\\t\\t// ...intermediate processing is necessary\\n\\t\\t\\t\\t\\t[] :\\n\\n\\t\\t\\t\\t\\t// ...otherwise use results directly\\n\\t\\t\\t\\t\\tresults :\\n\\t\\t\\t\\tmatcherIn;\\n\\n\\t\\t// Find primary matches\\n\\t\\tif ( matcher ) {\\n\\t\\t\\tmatcher( matcherIn, matcherOut, context, xml );\\n\\t\\t}\\n\\n\\t\\t// Apply postFilter\\n\\t\\tif ( postFilter ) {\\n\\t\\t\\ttemp = condense( matcherOut, postMap );\\n\\t\\t\\tpostFilter( temp, [], context, xml );\\n\\n\\t\\t\\t// Un-match failing elements by moving them back to matcherIn\\n\\t\\t\\ti = temp.length;\\n\\t\\t\\twhile ( i-- ) {\\n\\t\\t\\t\\tif ( (elem = temp[i]) ) {\\n\\t\\t\\t\\t\\tmatcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tif ( seed ) {\\n\\t\\t\\tif ( postFinder || preFilter ) {\\n\\t\\t\\t\\tif ( postFinder ) {\\n\\t\\t\\t\\t\\t// Get the final matcherOut by condensing this intermediate into postFinder contexts\\n\\t\\t\\t\\t\\ttemp = [];\\n\\t\\t\\t\\t\\ti = matcherOut.length;\\n\\t\\t\\t\\t\\twhile ( i-- ) {\\n\\t\\t\\t\\t\\t\\tif ( (elem = matcherOut[i]) ) {\\n\\t\\t\\t\\t\\t\\t\\t// Restore matcherIn since elem is not yet a final match\\n\\t\\t\\t\\t\\t\\t\\ttemp.push( (matcherIn[i] = elem) );\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tpostFinder( null, (matcherOut = []), temp, xml );\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Move matched elements from seed to results to keep them synchronized\\n\\t\\t\\t\\ti = matcherOut.length;\\n\\t\\t\\t\\twhile ( i-- ) {\\n\\t\\t\\t\\t\\tif ( (elem = matcherOut[i]) &&\\n\\t\\t\\t\\t\\t\\t(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {\\n\\n\\t\\t\\t\\t\\t\\tseed[temp] = !(results[temp] = elem);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t// Add elements to results, through postFinder if defined\\n\\t\\t} else {\\n\\t\\t\\tmatcherOut = condense(\\n\\t\\t\\t\\tmatcherOut === results ?\\n\\t\\t\\t\\t\\tmatcherOut.splice( preexisting, matcherOut.length ) :\\n\\t\\t\\t\\t\\tmatcherOut\\n\\t\\t\\t);\\n\\t\\t\\tif ( postFinder ) {\\n\\t\\t\\t\\tpostFinder( null, results, matcherOut, xml );\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tpush.apply( results, matcherOut );\\n\\t\\t\\t}\\n\\t\\t}\\n\\t});\\n}\\n\\nfunction matcherFromTokens( tokens ) {\\n\\tvar checkContext, matcher, j,\\n\\t\\tlen = tokens.length,\\n\\t\\tleadingRelative = Expr.relative[ tokens[0].type ],\\n\\t\\timplicitRelative = leadingRelative || Expr.relative[\\\" \\\"],\\n\\t\\ti = leadingRelative ? 1 : 0,\\n\\n\\t\\t// The foundational matcher ensures that elements are reachable from top-level context(s)\\n\\t\\tmatchContext = addCombinator( function( elem ) {\\n\\t\\t\\treturn elem === checkContext;\\n\\t\\t}, implicitRelative, true ),\\n\\t\\tmatchAnyContext = addCombinator( function( elem ) {\\n\\t\\t\\treturn indexOf( checkContext, elem ) > -1;\\n\\t\\t}, implicitRelative, true ),\\n\\t\\tmatchers = [ function( elem, context, xml ) {\\n\\t\\t\\tvar ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (\\n\\t\\t\\t\\t(checkContext = context).nodeType ?\\n\\t\\t\\t\\t\\tmatchContext( elem, context, xml ) :\\n\\t\\t\\t\\t\\tmatchAnyContext( elem, context, xml ) );\\n\\t\\t\\t// Avoid hanging onto element (issue #299)\\n\\t\\t\\tcheckContext = null;\\n\\t\\t\\treturn ret;\\n\\t\\t} ];\\n\\n\\tfor ( ; i < len; i++ ) {\\n\\t\\tif ( (matcher = Expr.relative[ tokens[i].type ]) ) {\\n\\t\\t\\tmatchers = [ addCombinator(elementMatcher( matchers ), matcher) ];\\n\\t\\t} else {\\n\\t\\t\\tmatcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );\\n\\n\\t\\t\\t// Return special upon seeing a positional matcher\\n\\t\\t\\tif ( matcher[ expando ] ) {\\n\\t\\t\\t\\t// Find the next relative operator (if any) for proper handling\\n\\t\\t\\t\\tj = ++i;\\n\\t\\t\\t\\tfor ( ; j < len; j++ ) {\\n\\t\\t\\t\\t\\tif ( Expr.relative[ tokens[j].type ] ) {\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\treturn setMatcher(\\n\\t\\t\\t\\t\\ti > 1 && elementMatcher( matchers ),\\n\\t\\t\\t\\t\\ti > 1 && toSelector(\\n\\t\\t\\t\\t\\t\\t// If the preceding token was a descendant combinator, insert an implicit any-element `*`\\n\\t\\t\\t\\t\\t\\ttokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === \\\" \\\" ? \\\"*\\\" : \\\"\\\" })\\n\\t\\t\\t\\t\\t).replace( rtrim, \\\"$1\\\" ),\\n\\t\\t\\t\\t\\tmatcher,\\n\\t\\t\\t\\t\\ti < j && matcherFromTokens( tokens.slice( i, j ) ),\\n\\t\\t\\t\\t\\tj < len && matcherFromTokens( (tokens = tokens.slice( j )) ),\\n\\t\\t\\t\\t\\tj < len && toSelector( tokens )\\n\\t\\t\\t\\t);\\n\\t\\t\\t}\\n\\t\\t\\tmatchers.push( matcher );\\n\\t\\t}\\n\\t}\\n\\n\\treturn elementMatcher( matchers );\\n}\\n\\nfunction matcherFromGroupMatchers( elementMatchers, setMatchers ) {\\n\\tvar bySet = setMatchers.length > 0,\\n\\t\\tbyElement = elementMatchers.length > 0,\\n\\t\\tsuperMatcher = function( seed, context, xml, results, outermost ) {\\n\\t\\t\\tvar elem, j, matcher,\\n\\t\\t\\t\\tmatchedCount = 0,\\n\\t\\t\\t\\ti = \\\"0\\\",\\n\\t\\t\\t\\tunmatched = seed && [],\\n\\t\\t\\t\\tsetMatched = [],\\n\\t\\t\\t\\tcontextBackup = outermostContext,\\n\\t\\t\\t\\t// We must always have either seed elements or outermost context\\n\\t\\t\\t\\telems = seed || byElement && Expr.find[\\\"TAG\\\"]( \\\"*\\\", outermost ),\\n\\t\\t\\t\\t// Use integer dirruns iff this is the outermost matcher\\n\\t\\t\\t\\tdirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),\\n\\t\\t\\t\\tlen = elems.length;\\n\\n\\t\\t\\tif ( outermost ) {\\n\\t\\t\\t\\toutermostContext = context === document || context || outermost;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Add elements passing elementMatchers directly to results\\n\\t\\t\\t// Support: IE<9, Safari\\n\\t\\t\\t// Tolerate NodeList properties (IE: \\\"length\\\"; Safari: <number>) matching elements by id\\n\\t\\t\\tfor ( ; i !== len && (elem = elems[i]) != null; i++ ) {\\n\\t\\t\\t\\tif ( byElement && elem ) {\\n\\t\\t\\t\\t\\tj = 0;\\n\\t\\t\\t\\t\\tif ( !context && elem.ownerDocument !== document ) {\\n\\t\\t\\t\\t\\t\\tsetDocument( elem );\\n\\t\\t\\t\\t\\t\\txml = !documentIsHTML;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\twhile ( (matcher = elementMatchers[j++]) ) {\\n\\t\\t\\t\\t\\t\\tif ( matcher( elem, context || document, xml) ) {\\n\\t\\t\\t\\t\\t\\t\\tresults.push( elem );\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tif ( outermost ) {\\n\\t\\t\\t\\t\\t\\tdirruns = dirrunsUnique;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Track unmatched elements for set filters\\n\\t\\t\\t\\tif ( bySet ) {\\n\\t\\t\\t\\t\\t// They will have gone through all possible matchers\\n\\t\\t\\t\\t\\tif ( (elem = !matcher && elem) ) {\\n\\t\\t\\t\\t\\t\\tmatchedCount--;\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t// Lengthen the array for every element, matched or not\\n\\t\\t\\t\\t\\tif ( seed ) {\\n\\t\\t\\t\\t\\t\\tunmatched.push( elem );\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t// `i` is now the count of elements visited above, and adding it to `matchedCount`\\n\\t\\t\\t// makes the latter nonnegative.\\n\\t\\t\\tmatchedCount += i;\\n\\n\\t\\t\\t// Apply set filters to unmatched elements\\n\\t\\t\\t// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`\\n\\t\\t\\t// equals `i`), unless we didn't visit _any_ elements in the above loop because we have\\n\\t\\t\\t// no element matchers and no seed.\\n\\t\\t\\t// Incrementing an initially-string \\\"0\\\" `i` allows `i` to remain a string only in that\\n\\t\\t\\t// case, which will result in a \\\"00\\\" `matchedCount` that differs from `i` but is also\\n\\t\\t\\t// numerically zero.\\n\\t\\t\\tif ( bySet && i !== matchedCount ) {\\n\\t\\t\\t\\tj = 0;\\n\\t\\t\\t\\twhile ( (matcher = setMatchers[j++]) ) {\\n\\t\\t\\t\\t\\tmatcher( unmatched, setMatched, context, xml );\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( seed ) {\\n\\t\\t\\t\\t\\t// Reintegrate element matches to eliminate the need for sorting\\n\\t\\t\\t\\t\\tif ( matchedCount > 0 ) {\\n\\t\\t\\t\\t\\t\\twhile ( i-- ) {\\n\\t\\t\\t\\t\\t\\t\\tif ( !(unmatched[i] || setMatched[i]) ) {\\n\\t\\t\\t\\t\\t\\t\\t\\tsetMatched[i] = pop.call( results );\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t// Discard index placeholder values to get only actual matches\\n\\t\\t\\t\\t\\tsetMatched = condense( setMatched );\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Add matches to results\\n\\t\\t\\t\\tpush.apply( results, setMatched );\\n\\n\\t\\t\\t\\t// Seedless set matches succeeding multiple successful matchers stipulate sorting\\n\\t\\t\\t\\tif ( outermost && !seed && setMatched.length > 0 &&\\n\\t\\t\\t\\t\\t( matchedCount + setMatchers.length ) > 1 ) {\\n\\n\\t\\t\\t\\t\\tSizzle.uniqueSort( results );\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Override manipulation of globals by nested matchers\\n\\t\\t\\tif ( outermost ) {\\n\\t\\t\\t\\tdirruns = dirrunsUnique;\\n\\t\\t\\t\\toutermostContext = contextBackup;\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn unmatched;\\n\\t\\t};\\n\\n\\treturn bySet ?\\n\\t\\tmarkFunction( superMatcher ) :\\n\\t\\tsuperMatcher;\\n}\\n\\ncompile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {\\n\\tvar i,\\n\\t\\tsetMatchers = [],\\n\\t\\telementMatchers = [],\\n\\t\\tcached = compilerCache[ selector + \\\" \\\" ];\\n\\n\\tif ( !cached ) {\\n\\t\\t// Generate a function of recursive functions that can be used to check each element\\n\\t\\tif ( !match ) {\\n\\t\\t\\tmatch = tokenize( selector );\\n\\t\\t}\\n\\t\\ti = match.length;\\n\\t\\twhile ( i-- ) {\\n\\t\\t\\tcached = matcherFromTokens( match[i] );\\n\\t\\t\\tif ( cached[ expando ] ) {\\n\\t\\t\\t\\tsetMatchers.push( cached );\\n\\t\\t\\t} else {\\n\\t\\t\\t\\telementMatchers.push( cached );\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// Cache the compiled function\\n\\t\\tcached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );\\n\\n\\t\\t// Save selector and tokenization\\n\\t\\tcached.selector = selector;\\n\\t}\\n\\treturn cached;\\n};\\n\\n/**\\n * A low-level selection function that works with Sizzle's compiled\\n *  selector functions\\n * @param {String|Function} selector A selector or a pre-compiled\\n *  selector function built with Sizzle.compile\\n * @param {Element} context\\n * @param {Array} [results]\\n * @param {Array} [seed] A set of elements to match against\\n */\\nselect = Sizzle.select = function( selector, context, results, seed ) {\\n\\tvar i, tokens, token, type, find,\\n\\t\\tcompiled = typeof selector === \\\"function\\\" && selector,\\n\\t\\tmatch = !seed && tokenize( (selector = compiled.selector || selector) );\\n\\n\\tresults = results || [];\\n\\n\\t// Try to minimize operations if there is only one selector in the list and no seed\\n\\t// (the latter of which guarantees us context)\\n\\tif ( match.length === 1 ) {\\n\\n\\t\\t// Reduce context if the leading compound selector is an ID\\n\\t\\ttokens = match[0] = match[0].slice( 0 );\\n\\t\\tif ( tokens.length > 2 && (token = tokens[0]).type === \\\"ID\\\" &&\\n\\t\\t\\t\\tcontext.nodeType === 9 && documentIsHTML && Expr.relative[ tokens[1].type ] ) {\\n\\n\\t\\t\\tcontext = ( Expr.find[\\\"ID\\\"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];\\n\\t\\t\\tif ( !context ) {\\n\\t\\t\\t\\treturn results;\\n\\n\\t\\t\\t// Precompiled matchers will still verify ancestry, so step up a level\\n\\t\\t\\t} else if ( compiled ) {\\n\\t\\t\\t\\tcontext = context.parentNode;\\n\\t\\t\\t}\\n\\n\\t\\t\\tselector = selector.slice( tokens.shift().value.length );\\n\\t\\t}\\n\\n\\t\\t// Fetch a seed set for right-to-left matching\\n\\t\\ti = matchExpr[\\\"needsContext\\\"].test( selector ) ? 0 : tokens.length;\\n\\t\\twhile ( i-- ) {\\n\\t\\t\\ttoken = tokens[i];\\n\\n\\t\\t\\t// Abort if we hit a combinator\\n\\t\\t\\tif ( Expr.relative[ (type = token.type) ] ) {\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\t}\\n\\t\\t\\tif ( (find = Expr.find[ type ]) ) {\\n\\t\\t\\t\\t// Search, expanding context for leading sibling combinators\\n\\t\\t\\t\\tif ( (seed = find(\\n\\t\\t\\t\\t\\ttoken.matches[0].replace( runescape, funescape ),\\n\\t\\t\\t\\t\\trsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context\\n\\t\\t\\t\\t)) ) {\\n\\n\\t\\t\\t\\t\\t// If seed is empty or no tokens remain, we can return early\\n\\t\\t\\t\\t\\ttokens.splice( i, 1 );\\n\\t\\t\\t\\t\\tselector = seed.length && toSelector( tokens );\\n\\t\\t\\t\\t\\tif ( !selector ) {\\n\\t\\t\\t\\t\\t\\tpush.apply( results, seed );\\n\\t\\t\\t\\t\\t\\treturn results;\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\t// Compile and execute a filtering function if one is not provided\\n\\t// Provide `match` to avoid retokenization if we modified the selector above\\n\\t( compiled || compile( selector, match ) )(\\n\\t\\tseed,\\n\\t\\tcontext,\\n\\t\\t!documentIsHTML,\\n\\t\\tresults,\\n\\t\\t!context || rsibling.test( selector ) && testContext( context.parentNode ) || context\\n\\t);\\n\\treturn results;\\n};\\n\\n// One-time assignments\\n\\n// Sort stability\\nsupport.sortStable = expando.split(\\\"\\\").sort( sortOrder ).join(\\\"\\\") === expando;\\n\\n// Support: Chrome 14-35+\\n// Always assume duplicates if they aren't passed to the comparison function\\nsupport.detectDuplicates = !!hasDuplicate;\\n\\n// Initialize against the default document\\nsetDocument();\\n\\n// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\\n// Detached nodes confoundingly follow *each other*\\nsupport.sortDetached = assert(function( el ) {\\n\\t// Should return 1, but returns 4 (following)\\n\\treturn el.compareDocumentPosition( document.createElement(\\\"fieldset\\\") ) & 1;\\n});\\n\\n// Support: IE<8\\n// Prevent attribute/property \\\"interpolation\\\"\\n// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\\nif ( !assert(function( el ) {\\n\\tel.innerHTML = \\\"<a href='#'></a>\\\";\\n\\treturn el.firstChild.getAttribute(\\\"href\\\") === \\\"#\\\" ;\\n}) ) {\\n\\taddHandle( \\\"type|href|height|width\\\", function( elem, name, isXML ) {\\n\\t\\tif ( !isXML ) {\\n\\t\\t\\treturn elem.getAttribute( name, name.toLowerCase() === \\\"type\\\" ? 1 : 2 );\\n\\t\\t}\\n\\t});\\n}\\n\\n// Support: IE<9\\n// Use defaultValue in place of getAttribute(\\\"value\\\")\\nif ( !support.attributes || !assert(function( el ) {\\n\\tel.innerHTML = \\\"<input/>\\\";\\n\\tel.firstChild.setAttribute( \\\"value\\\", \\\"\\\" );\\n\\treturn el.firstChild.getAttribute( \\\"value\\\" ) === \\\"\\\";\\n}) ) {\\n\\taddHandle( \\\"value\\\", function( elem, name, isXML ) {\\n\\t\\tif ( !isXML && elem.nodeName.toLowerCase() === \\\"input\\\" ) {\\n\\t\\t\\treturn elem.defaultValue;\\n\\t\\t}\\n\\t});\\n}\\n\\n// Support: IE<9\\n// Use getAttributeNode to fetch booleans when getAttribute lies\\nif ( !assert(function( el ) {\\n\\treturn el.getAttribute(\\\"disabled\\\") == null;\\n}) ) {\\n\\taddHandle( booleans, function( elem, name, isXML ) {\\n\\t\\tvar val;\\n\\t\\tif ( !isXML ) {\\n\\t\\t\\treturn elem[ name ] === true ? name.toLowerCase() :\\n\\t\\t\\t\\t\\t(val = elem.getAttributeNode( name )) && val.specified ?\\n\\t\\t\\t\\t\\tval.value :\\n\\t\\t\\t\\tnull;\\n\\t\\t}\\n\\t});\\n}\\n\\nreturn Sizzle;\\n\\n})( window );\\n\\n\\n\\njQuery.find = Sizzle;\\njQuery.expr = Sizzle.selectors;\\n\\n// Deprecated\\njQuery.expr[ \\\":\\\" ] = jQuery.expr.pseudos;\\njQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;\\njQuery.text = Sizzle.getText;\\njQuery.isXMLDoc = Sizzle.isXML;\\njQuery.contains = Sizzle.contains;\\njQuery.escapeSelector = Sizzle.escape;\\n\\n\\n\\n\\nvar dir = function( elem, dir, until ) {\\n\\tvar matched = [],\\n\\t\\ttruncate = until !== undefined;\\n\\n\\twhile ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {\\n\\t\\tif ( elem.nodeType === 1 ) {\\n\\t\\t\\tif ( truncate && jQuery( elem ).is( until ) ) {\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\t}\\n\\t\\t\\tmatched.push( elem );\\n\\t\\t}\\n\\t}\\n\\treturn matched;\\n};\\n\\n\\nvar siblings = function( n, elem ) {\\n\\tvar matched = [];\\n\\n\\tfor ( ; n; n = n.nextSibling ) {\\n\\t\\tif ( n.nodeType === 1 && n !== elem ) {\\n\\t\\t\\tmatched.push( n );\\n\\t\\t}\\n\\t}\\n\\n\\treturn matched;\\n};\\n\\n\\nvar rneedsContext = jQuery.expr.match.needsContext;\\n\\n\\n\\nfunction nodeName( elem, name ) {\\n\\n  return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\\n\\n};\\nvar rsingleTag = ( /^<([a-z][^\\\\/\\\\0>:\\\\x20\\\\t\\\\r\\\\n\\\\f]*)[\\\\x20\\\\t\\\\r\\\\n\\\\f]*\\\\/?>(?:<\\\\/\\\\1>|)$/i );\\n\\n\\n\\n// Implement the identical functionality for filter and not\\nfunction winnow( elements, qualifier, not ) {\\n\\tif ( isFunction( qualifier ) ) {\\n\\t\\treturn jQuery.grep( elements, function( elem, i ) {\\n\\t\\t\\treturn !!qualifier.call( elem, i, elem ) !== not;\\n\\t\\t} );\\n\\t}\\n\\n\\t// Single element\\n\\tif ( qualifier.nodeType ) {\\n\\t\\treturn jQuery.grep( elements, function( elem ) {\\n\\t\\t\\treturn ( elem === qualifier ) !== not;\\n\\t\\t} );\\n\\t}\\n\\n\\t// Arraylike of elements (jQuery, arguments, Array)\\n\\tif ( typeof qualifier !== \\\"string\\\" ) {\\n\\t\\treturn jQuery.grep( elements, function( elem ) {\\n\\t\\t\\treturn ( indexOf.call( qualifier, elem ) > -1 ) !== not;\\n\\t\\t} );\\n\\t}\\n\\n\\t// Filtered directly for both simple and complex selectors\\n\\treturn jQuery.filter( qualifier, elements, not );\\n}\\n\\njQuery.filter = function( expr, elems, not ) {\\n\\tvar elem = elems[ 0 ];\\n\\n\\tif ( not ) {\\n\\t\\texpr = \\\":not(\\\" + expr + \\\")\\\";\\n\\t}\\n\\n\\tif ( elems.length === 1 && elem.nodeType === 1 ) {\\n\\t\\treturn jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [];\\n\\t}\\n\\n\\treturn jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {\\n\\t\\treturn elem.nodeType === 1;\\n\\t} ) );\\n};\\n\\njQuery.fn.extend( {\\n\\tfind: function( selector ) {\\n\\t\\tvar i, ret,\\n\\t\\t\\tlen = this.length,\\n\\t\\t\\tself = this;\\n\\n\\t\\tif ( typeof selector !== \\\"string\\\" ) {\\n\\t\\t\\treturn this.pushStack( jQuery( selector ).filter( function() {\\n\\t\\t\\t\\tfor ( i = 0; i < len; i++ ) {\\n\\t\\t\\t\\t\\tif ( jQuery.contains( self[ i ], this ) ) {\\n\\t\\t\\t\\t\\t\\treturn true;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t} ) );\\n\\t\\t}\\n\\n\\t\\tret = this.pushStack( [] );\\n\\n\\t\\tfor ( i = 0; i < len; i++ ) {\\n\\t\\t\\tjQuery.find( selector, self[ i ], ret );\\n\\t\\t}\\n\\n\\t\\treturn len > 1 ? jQuery.uniqueSort( ret ) : ret;\\n\\t},\\n\\tfilter: function( selector ) {\\n\\t\\treturn this.pushStack( winnow( this, selector || [], false ) );\\n\\t},\\n\\tnot: function( selector ) {\\n\\t\\treturn this.pushStack( winnow( this, selector || [], true ) );\\n\\t},\\n\\tis: function( selector ) {\\n\\t\\treturn !!winnow(\\n\\t\\t\\tthis,\\n\\n\\t\\t\\t// If this is a positional/relative selector, check membership in the returned set\\n\\t\\t\\t// so $(\\\"p:first\\\").is(\\\"p:last\\\") won't return true for a doc with two \\\"p\\\".\\n\\t\\t\\ttypeof selector === \\\"string\\\" && rneedsContext.test( selector ) ?\\n\\t\\t\\t\\tjQuery( selector ) :\\n\\t\\t\\t\\tselector || [],\\n\\t\\t\\tfalse\\n\\t\\t).length;\\n\\t}\\n} );\\n\\n\\n// Initialize a jQuery object\\n\\n\\n// A central reference to the root jQuery(document)\\nvar rootjQuery,\\n\\n\\t// A simple way to check for HTML strings\\n\\t// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\\n\\t// Strict HTML recognition (#11290: must start with <)\\n\\t// Shortcut simple #id case for speed\\n\\trquickExpr = /^(?:\\\\s*(<[\\\\w\\\\W]+>)[^>]*|#([\\\\w-]+))$/,\\n\\n\\tinit = jQuery.fn.init = function( selector, context, root ) {\\n\\t\\tvar match, elem;\\n\\n\\t\\t// HANDLE: $(\\\"\\\"), $(null), $(undefined), $(false)\\n\\t\\tif ( !selector ) {\\n\\t\\t\\treturn this;\\n\\t\\t}\\n\\n\\t\\t// Method init() accepts an alternate rootjQuery\\n\\t\\t// so migrate can support jQuery.sub (gh-2101)\\n\\t\\troot = root || rootjQuery;\\n\\n\\t\\t// Handle HTML strings\\n\\t\\tif ( typeof selector === \\\"string\\\" ) {\\n\\t\\t\\tif ( selector[ 0 ] === \\\"<\\\" &&\\n\\t\\t\\t\\tselector[ selector.length - 1 ] === \\\">\\\" &&\\n\\t\\t\\t\\tselector.length >= 3 ) {\\n\\n\\t\\t\\t\\t// Assume that strings that start and end with <> are HTML and skip the regex check\\n\\t\\t\\t\\tmatch = [ null, selector, null ];\\n\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tmatch = rquickExpr.exec( selector );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Match html or make sure no context is specified for #id\\n\\t\\t\\tif ( match && ( match[ 1 ] || !context ) ) {\\n\\n\\t\\t\\t\\t// HANDLE: $(html) -> $(array)\\n\\t\\t\\t\\tif ( match[ 1 ] ) {\\n\\t\\t\\t\\t\\tcontext = context instanceof jQuery ? context[ 0 ] : context;\\n\\n\\t\\t\\t\\t\\t// Option to run scripts is true for back-compat\\n\\t\\t\\t\\t\\t// Intentionally let the error be thrown if parseHTML is not present\\n\\t\\t\\t\\t\\tjQuery.merge( this, jQuery.parseHTML(\\n\\t\\t\\t\\t\\t\\tmatch[ 1 ],\\n\\t\\t\\t\\t\\t\\tcontext && context.nodeType ? context.ownerDocument || context : document,\\n\\t\\t\\t\\t\\t\\ttrue\\n\\t\\t\\t\\t\\t) );\\n\\n\\t\\t\\t\\t\\t// HANDLE: $(html, props)\\n\\t\\t\\t\\t\\tif ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {\\n\\t\\t\\t\\t\\t\\tfor ( match in context ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t// Properties of context are called as methods if possible\\n\\t\\t\\t\\t\\t\\t\\tif ( isFunction( this[ match ] ) ) {\\n\\t\\t\\t\\t\\t\\t\\t\\tthis[ match ]( context[ match ] );\\n\\n\\t\\t\\t\\t\\t\\t\\t// ...and otherwise set as attributes\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tthis.attr( match, context[ match ] );\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\treturn this;\\n\\n\\t\\t\\t\\t// HANDLE: $(#id)\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\telem = document.getElementById( match[ 2 ] );\\n\\n\\t\\t\\t\\t\\tif ( elem ) {\\n\\n\\t\\t\\t\\t\\t\\t// Inject the element directly into the jQuery object\\n\\t\\t\\t\\t\\t\\tthis[ 0 ] = elem;\\n\\t\\t\\t\\t\\t\\tthis.length = 1;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\treturn this;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t// HANDLE: $(expr, $(...))\\n\\t\\t\\t} else if ( !context || context.jquery ) {\\n\\t\\t\\t\\treturn ( context || root ).find( selector );\\n\\n\\t\\t\\t// HANDLE: $(expr, context)\\n\\t\\t\\t// (which is just equivalent to: $(context).find(expr)\\n\\t\\t\\t} else {\\n\\t\\t\\t\\treturn this.constructor( context ).find( selector );\\n\\t\\t\\t}\\n\\n\\t\\t// HANDLE: $(DOMElement)\\n\\t\\t} else if ( selector.nodeType ) {\\n\\t\\t\\tthis[ 0 ] = selector;\\n\\t\\t\\tthis.length = 1;\\n\\t\\t\\treturn this;\\n\\n\\t\\t// HANDLE: $(function)\\n\\t\\t// Shortcut for document ready\\n\\t\\t} else if ( isFunction( selector ) ) {\\n\\t\\t\\treturn root.ready !== undefined ?\\n\\t\\t\\t\\troot.ready( selector ) :\\n\\n\\t\\t\\t\\t// Execute immediately if ready is not present\\n\\t\\t\\t\\tselector( jQuery );\\n\\t\\t}\\n\\n\\t\\treturn jQuery.makeArray( selector, this );\\n\\t};\\n\\n// Give the init function the jQuery prototype for later instantiation\\ninit.prototype = jQuery.fn;\\n\\n// Initialize central reference\\nrootjQuery = jQuery( document );\\n\\n\\nvar rparentsprev = /^(?:parents|prev(?:Until|All))/,\\n\\n\\t// Methods guaranteed to produce a unique set when starting from a unique set\\n\\tguaranteedUnique = {\\n\\t\\tchildren: true,\\n\\t\\tcontents: true,\\n\\t\\tnext: true,\\n\\t\\tprev: true\\n\\t};\\n\\njQuery.fn.extend( {\\n\\thas: function( target ) {\\n\\t\\tvar targets = jQuery( target, this ),\\n\\t\\t\\tl = targets.length;\\n\\n\\t\\treturn this.filter( function() {\\n\\t\\t\\tvar i = 0;\\n\\t\\t\\tfor ( ; i < l; i++ ) {\\n\\t\\t\\t\\tif ( jQuery.contains( this, targets[ i ] ) ) {\\n\\t\\t\\t\\t\\treturn true;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t} );\\n\\t},\\n\\n\\tclosest: function( selectors, context ) {\\n\\t\\tvar cur,\\n\\t\\t\\ti = 0,\\n\\t\\t\\tl = this.length,\\n\\t\\t\\tmatched = [],\\n\\t\\t\\ttargets = typeof selectors !== \\\"string\\\" && jQuery( selectors );\\n\\n\\t\\t// Positional selectors never match, since there's no _selection_ context\\n\\t\\tif ( !rneedsContext.test( selectors ) ) {\\n\\t\\t\\tfor ( ; i < l; i++ ) {\\n\\t\\t\\t\\tfor ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {\\n\\n\\t\\t\\t\\t\\t// Always skip document fragments\\n\\t\\t\\t\\t\\tif ( cur.nodeType < 11 && ( targets ?\\n\\t\\t\\t\\t\\t\\ttargets.index( cur ) > -1 :\\n\\n\\t\\t\\t\\t\\t\\t// Don't pass non-elements to Sizzle\\n\\t\\t\\t\\t\\t\\tcur.nodeType === 1 &&\\n\\t\\t\\t\\t\\t\\t\\tjQuery.find.matchesSelector( cur, selectors ) ) ) {\\n\\n\\t\\t\\t\\t\\t\\tmatched.push( cur );\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );\\n\\t},\\n\\n\\t// Determine the position of an element within the set\\n\\tindex: function( elem ) {\\n\\n\\t\\t// No argument, return index in parent\\n\\t\\tif ( !elem ) {\\n\\t\\t\\treturn ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;\\n\\t\\t}\\n\\n\\t\\t// Index in selector\\n\\t\\tif ( typeof elem === \\\"string\\\" ) {\\n\\t\\t\\treturn indexOf.call( jQuery( elem ), this[ 0 ] );\\n\\t\\t}\\n\\n\\t\\t// Locate the position of the desired element\\n\\t\\treturn indexOf.call( this,\\n\\n\\t\\t\\t// If it receives a jQuery object, the first element is used\\n\\t\\t\\telem.jquery ? elem[ 0 ] : elem\\n\\t\\t);\\n\\t},\\n\\n\\tadd: function( selector, context ) {\\n\\t\\treturn this.pushStack(\\n\\t\\t\\tjQuery.uniqueSort(\\n\\t\\t\\t\\tjQuery.merge( this.get(), jQuery( selector, context ) )\\n\\t\\t\\t)\\n\\t\\t);\\n\\t},\\n\\n\\taddBack: function( selector ) {\\n\\t\\treturn this.add( selector == null ?\\n\\t\\t\\tthis.prevObject : this.prevObject.filter( selector )\\n\\t\\t);\\n\\t}\\n} );\\n\\nfunction sibling( cur, dir ) {\\n\\twhile ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}\\n\\treturn cur;\\n}\\n\\njQuery.each( {\\n\\tparent: function( elem ) {\\n\\t\\tvar parent = elem.parentNode;\\n\\t\\treturn parent && parent.nodeType !== 11 ? parent : null;\\n\\t},\\n\\tparents: function( elem ) {\\n\\t\\treturn dir( elem, \\\"parentNode\\\" );\\n\\t},\\n\\tparentsUntil: function( elem, i, until ) {\\n\\t\\treturn dir( elem, \\\"parentNode\\\", until );\\n\\t},\\n\\tnext: function( elem ) {\\n\\t\\treturn sibling( elem, \\\"nextSibling\\\" );\\n\\t},\\n\\tprev: function( elem ) {\\n\\t\\treturn sibling( elem, \\\"previousSibling\\\" );\\n\\t},\\n\\tnextAll: function( elem ) {\\n\\t\\treturn dir( elem, \\\"nextSibling\\\" );\\n\\t},\\n\\tprevAll: function( elem ) {\\n\\t\\treturn dir( elem, \\\"previousSibling\\\" );\\n\\t},\\n\\tnextUntil: function( elem, i, until ) {\\n\\t\\treturn dir( elem, \\\"nextSibling\\\", until );\\n\\t},\\n\\tprevUntil: function( elem, i, until ) {\\n\\t\\treturn dir( elem, \\\"previousSibling\\\", until );\\n\\t},\\n\\tsiblings: function( elem ) {\\n\\t\\treturn siblings( ( elem.parentNode || {} ).firstChild, elem );\\n\\t},\\n\\tchildren: function( elem ) {\\n\\t\\treturn siblings( elem.firstChild );\\n\\t},\\n\\tcontents: function( elem ) {\\n\\t\\tif ( typeof elem.contentDocument !== \\\"undefined\\\" ) {\\n\\t\\t\\treturn elem.contentDocument;\\n\\t\\t}\\n\\n\\t\\t// Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only\\n\\t\\t// Treat the template element as a regular one in browsers that\\n\\t\\t// don't support it.\\n\\t\\tif ( nodeName( elem, \\\"template\\\" ) ) {\\n\\t\\t\\telem = elem.content || elem;\\n\\t\\t}\\n\\n\\t\\treturn jQuery.merge( [], elem.childNodes );\\n\\t}\\n}, function( name, fn ) {\\n\\tjQuery.fn[ name ] = function( until, selector ) {\\n\\t\\tvar matched = jQuery.map( this, fn, until );\\n\\n\\t\\tif ( name.slice( -5 ) !== \\\"Until\\\" ) {\\n\\t\\t\\tselector = until;\\n\\t\\t}\\n\\n\\t\\tif ( selector && typeof selector === \\\"string\\\" ) {\\n\\t\\t\\tmatched = jQuery.filter( selector, matched );\\n\\t\\t}\\n\\n\\t\\tif ( this.length > 1 ) {\\n\\n\\t\\t\\t// Remove duplicates\\n\\t\\t\\tif ( !guaranteedUnique[ name ] ) {\\n\\t\\t\\t\\tjQuery.uniqueSort( matched );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Reverse order for parents* and prev-derivatives\\n\\t\\t\\tif ( rparentsprev.test( name ) ) {\\n\\t\\t\\t\\tmatched.reverse();\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn this.pushStack( matched );\\n\\t};\\n} );\\nvar rnothtmlwhite = ( /[^\\\\x20\\\\t\\\\r\\\\n\\\\f]+/g );\\n\\n\\n\\n// Convert String-formatted options into Object-formatted ones\\nfunction createOptions( options ) {\\n\\tvar object = {};\\n\\tjQuery.each( options.match( rnothtmlwhite ) || [], function( _, flag ) {\\n\\t\\tobject[ flag ] = true;\\n\\t} );\\n\\treturn object;\\n}\\n\\n/*\\n * Create a callback list using the following parameters:\\n *\\n *\\toptions: an optional list of space-separated options that will change how\\n *\\t\\t\\tthe callback list behaves or a more traditional option object\\n *\\n * By default a callback list will act like an event callback list and can be\\n * \\\"fired\\\" multiple times.\\n *\\n * Possible options:\\n *\\n *\\tonce:\\t\\t\\twill ensure the callback list can only be fired once (like a Deferred)\\n *\\n *\\tmemory:\\t\\t\\twill keep track of previous values and will call any callback added\\n *\\t\\t\\t\\t\\tafter the list has been fired right away with the latest \\\"memorized\\\"\\n *\\t\\t\\t\\t\\tvalues (like a Deferred)\\n *\\n *\\tunique:\\t\\t\\twill ensure a callback can only be added once (no duplicate in the list)\\n *\\n *\\tstopOnFalse:\\tinterrupt callings when a callback returns false\\n *\\n */\\njQuery.Callbacks = function( options ) {\\n\\n\\t// Convert options from String-formatted to Object-formatted if needed\\n\\t// (we check in cache first)\\n\\toptions = typeof options === \\\"string\\\" ?\\n\\t\\tcreateOptions( options ) :\\n\\t\\tjQuery.extend( {}, options );\\n\\n\\tvar // Flag to know if list is currently firing\\n\\t\\tfiring,\\n\\n\\t\\t// Last fire value for non-forgettable lists\\n\\t\\tmemory,\\n\\n\\t\\t// Flag to know if list was already fired\\n\\t\\tfired,\\n\\n\\t\\t// Flag to prevent firing\\n\\t\\tlocked,\\n\\n\\t\\t// Actual callback list\\n\\t\\tlist = [],\\n\\n\\t\\t// Queue of execution data for repeatable lists\\n\\t\\tqueue = [],\\n\\n\\t\\t// Index of currently firing callback (modified by add/remove as needed)\\n\\t\\tfiringIndex = -1,\\n\\n\\t\\t// Fire callbacks\\n\\t\\tfire = function() {\\n\\n\\t\\t\\t// Enforce single-firing\\n\\t\\t\\tlocked = locked || options.once;\\n\\n\\t\\t\\t// Execute callbacks for all pending executions,\\n\\t\\t\\t// respecting firingIndex overrides and runtime changes\\n\\t\\t\\tfired = firing = true;\\n\\t\\t\\tfor ( ; queue.length; firingIndex = -1 ) {\\n\\t\\t\\t\\tmemory = queue.shift();\\n\\t\\t\\t\\twhile ( ++firingIndex < list.length ) {\\n\\n\\t\\t\\t\\t\\t// Run callback and check for early termination\\n\\t\\t\\t\\t\\tif ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&\\n\\t\\t\\t\\t\\t\\toptions.stopOnFalse ) {\\n\\n\\t\\t\\t\\t\\t\\t// Jump to end and forget the data so .add doesn't re-fire\\n\\t\\t\\t\\t\\t\\tfiringIndex = list.length;\\n\\t\\t\\t\\t\\t\\tmemory = false;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Forget the data if we're done with it\\n\\t\\t\\tif ( !options.memory ) {\\n\\t\\t\\t\\tmemory = false;\\n\\t\\t\\t}\\n\\n\\t\\t\\tfiring = false;\\n\\n\\t\\t\\t// Clean up if we're done firing for good\\n\\t\\t\\tif ( locked ) {\\n\\n\\t\\t\\t\\t// Keep an empty list if we have data for future add calls\\n\\t\\t\\t\\tif ( memory ) {\\n\\t\\t\\t\\t\\tlist = [];\\n\\n\\t\\t\\t\\t// Otherwise, this object is spent\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tlist = \\\"\\\";\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t},\\n\\n\\t\\t// Actual Callbacks object\\n\\t\\tself = {\\n\\n\\t\\t\\t// Add a callback or a collection of callbacks to the list\\n\\t\\t\\tadd: function() {\\n\\t\\t\\t\\tif ( list ) {\\n\\n\\t\\t\\t\\t\\t// If we have memory from a past run, we should fire after adding\\n\\t\\t\\t\\t\\tif ( memory && !firing ) {\\n\\t\\t\\t\\t\\t\\tfiringIndex = list.length - 1;\\n\\t\\t\\t\\t\\t\\tqueue.push( memory );\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t( function add( args ) {\\n\\t\\t\\t\\t\\t\\tjQuery.each( args, function( _, arg ) {\\n\\t\\t\\t\\t\\t\\t\\tif ( isFunction( arg ) ) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif ( !options.unique || !self.has( arg ) ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tlist.push( arg );\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else if ( arg && arg.length && toType( arg ) !== \\\"string\\\" ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t// Inspect recursively\\n\\t\\t\\t\\t\\t\\t\\t\\tadd( arg );\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t} );\\n\\t\\t\\t\\t\\t} )( arguments );\\n\\n\\t\\t\\t\\t\\tif ( memory && !firing ) {\\n\\t\\t\\t\\t\\t\\tfire();\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\treturn this;\\n\\t\\t\\t},\\n\\n\\t\\t\\t// Remove a callback from the list\\n\\t\\t\\tremove: function() {\\n\\t\\t\\t\\tjQuery.each( arguments, function( _, arg ) {\\n\\t\\t\\t\\t\\tvar index;\\n\\t\\t\\t\\t\\twhile ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {\\n\\t\\t\\t\\t\\t\\tlist.splice( index, 1 );\\n\\n\\t\\t\\t\\t\\t\\t// Handle firing indexes\\n\\t\\t\\t\\t\\t\\tif ( index <= firingIndex ) {\\n\\t\\t\\t\\t\\t\\t\\tfiringIndex--;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t} );\\n\\t\\t\\t\\treturn this;\\n\\t\\t\\t},\\n\\n\\t\\t\\t// Check if a given callback is in the list.\\n\\t\\t\\t// If no argument is given, return whether or not list has callbacks attached.\\n\\t\\t\\thas: function( fn ) {\\n\\t\\t\\t\\treturn fn ?\\n\\t\\t\\t\\t\\tjQuery.inArray( fn, list ) > -1 :\\n\\t\\t\\t\\t\\tlist.length > 0;\\n\\t\\t\\t},\\n\\n\\t\\t\\t// Remove all callbacks from the list\\n\\t\\t\\tempty: function() {\\n\\t\\t\\t\\tif ( list ) {\\n\\t\\t\\t\\t\\tlist = [];\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\treturn this;\\n\\t\\t\\t},\\n\\n\\t\\t\\t// Disable .fire and .add\\n\\t\\t\\t// Abort any current/pending executions\\n\\t\\t\\t// Clear all callbacks and values\\n\\t\\t\\tdisable: function() {\\n\\t\\t\\t\\tlocked = queue = [];\\n\\t\\t\\t\\tlist = memory = \\\"\\\";\\n\\t\\t\\t\\treturn this;\\n\\t\\t\\t},\\n\\t\\t\\tdisabled: function() {\\n\\t\\t\\t\\treturn !list;\\n\\t\\t\\t},\\n\\n\\t\\t\\t// Disable .fire\\n\\t\\t\\t// Also disable .add unless we have memory (since it would have no effect)\\n\\t\\t\\t// Abort any pending executions\\n\\t\\t\\tlock: function() {\\n\\t\\t\\t\\tlocked = queue = [];\\n\\t\\t\\t\\tif ( !memory && !firing ) {\\n\\t\\t\\t\\t\\tlist = memory = \\\"\\\";\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\treturn this;\\n\\t\\t\\t},\\n\\t\\t\\tlocked: function() {\\n\\t\\t\\t\\treturn !!locked;\\n\\t\\t\\t},\\n\\n\\t\\t\\t// Call all callbacks with the given context and arguments\\n\\t\\t\\tfireWith: function( context, args ) {\\n\\t\\t\\t\\tif ( !locked ) {\\n\\t\\t\\t\\t\\targs = args || [];\\n\\t\\t\\t\\t\\targs = [ context, args.slice ? args.slice() : args ];\\n\\t\\t\\t\\t\\tqueue.push( args );\\n\\t\\t\\t\\t\\tif ( !firing ) {\\n\\t\\t\\t\\t\\t\\tfire();\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\treturn this;\\n\\t\\t\\t},\\n\\n\\t\\t\\t// Call all the callbacks with the given arguments\\n\\t\\t\\tfire: function() {\\n\\t\\t\\t\\tself.fireWith( this, arguments );\\n\\t\\t\\t\\treturn this;\\n\\t\\t\\t},\\n\\n\\t\\t\\t// To know if the callbacks have already been called at least once\\n\\t\\t\\tfired: function() {\\n\\t\\t\\t\\treturn !!fired;\\n\\t\\t\\t}\\n\\t\\t};\\n\\n\\treturn self;\\n};\\n\\n\\nfunction Identity( v ) {\\n\\treturn v;\\n}\\nfunction Thrower( ex ) {\\n\\tthrow ex;\\n}\\n\\nfunction adoptValue( value, resolve, reject, noValue ) {\\n\\tvar method;\\n\\n\\ttry {\\n\\n\\t\\t// Check for promise aspect first to privilege synchronous behavior\\n\\t\\tif ( value && isFunction( ( method = value.promise ) ) ) {\\n\\t\\t\\tmethod.call( value ).done( resolve ).fail( reject );\\n\\n\\t\\t// Other thenables\\n\\t\\t} else if ( value && isFunction( ( method = value.then ) ) ) {\\n\\t\\t\\tmethod.call( value, resolve, reject );\\n\\n\\t\\t// Other non-thenables\\n\\t\\t} else {\\n\\n\\t\\t\\t// Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:\\n\\t\\t\\t// * false: [ value ].slice( 0 ) => resolve( value )\\n\\t\\t\\t// * true: [ value ].slice( 1 ) => resolve()\\n\\t\\t\\tresolve.apply( undefined, [ value ].slice( noValue ) );\\n\\t\\t}\\n\\n\\t// For Promises/A+, convert exceptions into rejections\\n\\t// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in\\n\\t// Deferred#then to conditionally suppress rejection.\\n\\t} catch ( value ) {\\n\\n\\t\\t// Support: Android 4.0 only\\n\\t\\t// Strict mode functions invoked without .call/.apply get global-object context\\n\\t\\treject.apply( undefined, [ value ] );\\n\\t}\\n}\\n\\njQuery.extend( {\\n\\n\\tDeferred: function( func ) {\\n\\t\\tvar tuples = [\\n\\n\\t\\t\\t\\t// action, add listener, callbacks,\\n\\t\\t\\t\\t// ... .then handlers, argument index, [final state]\\n\\t\\t\\t\\t[ \\\"notify\\\", \\\"progress\\\", jQuery.Callbacks( \\\"memory\\\" ),\\n\\t\\t\\t\\t\\tjQuery.Callbacks( \\\"memory\\\" ), 2 ],\\n\\t\\t\\t\\t[ \\\"resolve\\\", \\\"done\\\", jQuery.Callbacks( \\\"once memory\\\" ),\\n\\t\\t\\t\\t\\tjQuery.Callbacks( \\\"once memory\\\" ), 0, \\\"resolved\\\" ],\\n\\t\\t\\t\\t[ \\\"reject\\\", \\\"fail\\\", jQuery.Callbacks( \\\"once memory\\\" ),\\n\\t\\t\\t\\t\\tjQuery.Callbacks( \\\"once memory\\\" ), 1, \\\"rejected\\\" ]\\n\\t\\t\\t],\\n\\t\\t\\tstate = \\\"pending\\\",\\n\\t\\t\\tpromise = {\\n\\t\\t\\t\\tstate: function() {\\n\\t\\t\\t\\t\\treturn state;\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\talways: function() {\\n\\t\\t\\t\\t\\tdeferred.done( arguments ).fail( arguments );\\n\\t\\t\\t\\t\\treturn this;\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\\"catch\\\": function( fn ) {\\n\\t\\t\\t\\t\\treturn promise.then( null, fn );\\n\\t\\t\\t\\t},\\n\\n\\t\\t\\t\\t// Keep pipe for back-compat\\n\\t\\t\\t\\tpipe: function( /* fnDone, fnFail, fnProgress */ ) {\\n\\t\\t\\t\\t\\tvar fns = arguments;\\n\\n\\t\\t\\t\\t\\treturn jQuery.Deferred( function( newDefer ) {\\n\\t\\t\\t\\t\\t\\tjQuery.each( tuples, function( i, tuple ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t// Map tuples (progress, done, fail) to arguments (done, fail, progress)\\n\\t\\t\\t\\t\\t\\t\\tvar fn = isFunction( fns[ tuple[ 4 ] ] ) && fns[ tuple[ 4 ] ];\\n\\n\\t\\t\\t\\t\\t\\t\\t// deferred.progress(function() { bind to newDefer or newDefer.notify })\\n\\t\\t\\t\\t\\t\\t\\t// deferred.done(function() { bind to newDefer or newDefer.resolve })\\n\\t\\t\\t\\t\\t\\t\\t// deferred.fail(function() { bind to newDefer or newDefer.reject })\\n\\t\\t\\t\\t\\t\\t\\tdeferred[ tuple[ 1 ] ]( function() {\\n\\t\\t\\t\\t\\t\\t\\t\\tvar returned = fn && fn.apply( this, arguments );\\n\\t\\t\\t\\t\\t\\t\\t\\tif ( returned && isFunction( returned.promise ) ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\treturned.promise()\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t.progress( newDefer.notify )\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t.done( newDefer.resolve )\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t.fail( newDefer.reject );\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tnewDefer[ tuple[ 0 ] + \\\"With\\\" ](\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tthis,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tfn ? [ returned ] : arguments\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} );\\n\\t\\t\\t\\t\\t\\t} );\\n\\t\\t\\t\\t\\t\\tfns = null;\\n\\t\\t\\t\\t\\t} ).promise();\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\tthen: function( onFulfilled, onRejected, onProgress ) {\\n\\t\\t\\t\\t\\tvar maxDepth = 0;\\n\\t\\t\\t\\t\\tfunction resolve( depth, deferred, handler, special ) {\\n\\t\\t\\t\\t\\t\\treturn function() {\\n\\t\\t\\t\\t\\t\\t\\tvar that = this,\\n\\t\\t\\t\\t\\t\\t\\t\\targs = arguments,\\n\\t\\t\\t\\t\\t\\t\\t\\tmightThrow = function() {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tvar returned, then;\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// Support: Promises/A+ section 2.3.3.3.3\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// https://promisesaplus.com/#point-59\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// Ignore double-resolution attempts\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif ( depth < maxDepth ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\treturned = handler.apply( that, args );\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// Support: Promises/A+ section 2.3.1\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// https://promisesaplus.com/#point-48\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif ( returned === deferred.promise() ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tthrow new TypeError( \\\"Thenable self-resolution\\\" );\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// Support: Promises/A+ sections 2.3.3.1, 3.5\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// https://promisesaplus.com/#point-54\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// https://promisesaplus.com/#point-75\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// Retrieve `then` only once\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tthen = returned &&\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Support: Promises/A+ section 2.3.4\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// https://promisesaplus.com/#point-64\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Only check objects and functions for thenability\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t( typeof returned === \\\"object\\\" ||\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ttypeof returned === \\\"function\\\" ) &&\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\treturned.then;\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// Handle a returned thenable\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif ( isFunction( then ) ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Special processors (notify) just wait for resolution\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tif ( special ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tthen.call(\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\treturned,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tresolve( maxDepth, deferred, Identity, special ),\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tresolve( maxDepth, deferred, Thrower, special )\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Normal processors (resolve) also hook into progress\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// ...and disregard older resolution values\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tmaxDepth++;\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tthen.call(\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\treturned,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tresolve( maxDepth, deferred, Identity, special ),\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tresolve( maxDepth, deferred, Thrower, special ),\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tresolve( maxDepth, deferred, Identity,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tdeferred.notifyWith )\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// Handle all other returned values\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Only substitute handlers pass on context\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// and multiple values (non-spec behavior)\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tif ( handler !== Identity ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tthat = undefined;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\targs = [ returned ];\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Process the value(s)\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Default process is resolve\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t( special || deferred.resolveWith )( that, args );\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t// Only normal processors (resolve) catch and reject exceptions\\n\\t\\t\\t\\t\\t\\t\\t\\tprocess = special ?\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tmightThrow :\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tfunction() {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ttry {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tmightThrow();\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t} catch ( e ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tif ( jQuery.Deferred.exceptionHook ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tjQuery.Deferred.exceptionHook( e,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tprocess.stackTrace );\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Support: Promises/A+ section 2.3.3.3.4.1\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// https://promisesaplus.com/#point-61\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Ignore post-resolution exceptions\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tif ( depth + 1 >= maxDepth ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Only substitute handlers pass on context\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// and multiple values (non-spec behavior)\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tif ( handler !== Thrower ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tthat = undefined;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\targs = [ e ];\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tdeferred.rejectWith( that, args );\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\t\\t\\t\\t// Support: Promises/A+ section 2.3.3.3.1\\n\\t\\t\\t\\t\\t\\t\\t// https://promisesaplus.com/#point-57\\n\\t\\t\\t\\t\\t\\t\\t// Re-resolve promises immediately to dodge false rejection from\\n\\t\\t\\t\\t\\t\\t\\t// subsequent errors\\n\\t\\t\\t\\t\\t\\t\\tif ( depth ) {\\n\\t\\t\\t\\t\\t\\t\\t\\tprocess();\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t// Call an optional hook to record the stack, in case of exception\\n\\t\\t\\t\\t\\t\\t\\t\\t// since it's otherwise lost when execution goes async\\n\\t\\t\\t\\t\\t\\t\\t\\tif ( jQuery.Deferred.getStackHook ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tprocess.stackTrace = jQuery.Deferred.getStackHook();\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\twindow.setTimeout( process );\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\treturn jQuery.Deferred( function( newDefer ) {\\n\\n\\t\\t\\t\\t\\t\\t// progress_handlers.add( ... )\\n\\t\\t\\t\\t\\t\\ttuples[ 0 ][ 3 ].add(\\n\\t\\t\\t\\t\\t\\t\\tresolve(\\n\\t\\t\\t\\t\\t\\t\\t\\t0,\\n\\t\\t\\t\\t\\t\\t\\t\\tnewDefer,\\n\\t\\t\\t\\t\\t\\t\\t\\tisFunction( onProgress ) ?\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tonProgress :\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tIdentity,\\n\\t\\t\\t\\t\\t\\t\\t\\tnewDefer.notifyWith\\n\\t\\t\\t\\t\\t\\t\\t)\\n\\t\\t\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\t\\t\\t// fulfilled_handlers.add( ... )\\n\\t\\t\\t\\t\\t\\ttuples[ 1 ][ 3 ].add(\\n\\t\\t\\t\\t\\t\\t\\tresolve(\\n\\t\\t\\t\\t\\t\\t\\t\\t0,\\n\\t\\t\\t\\t\\t\\t\\t\\tnewDefer,\\n\\t\\t\\t\\t\\t\\t\\t\\tisFunction( onFulfilled ) ?\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tonFulfilled :\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tIdentity\\n\\t\\t\\t\\t\\t\\t\\t)\\n\\t\\t\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\t\\t\\t// rejected_handlers.add( ... )\\n\\t\\t\\t\\t\\t\\ttuples[ 2 ][ 3 ].add(\\n\\t\\t\\t\\t\\t\\t\\tresolve(\\n\\t\\t\\t\\t\\t\\t\\t\\t0,\\n\\t\\t\\t\\t\\t\\t\\t\\tnewDefer,\\n\\t\\t\\t\\t\\t\\t\\t\\tisFunction( onRejected ) ?\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tonRejected :\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tThrower\\n\\t\\t\\t\\t\\t\\t\\t)\\n\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t} ).promise();\\n\\t\\t\\t\\t},\\n\\n\\t\\t\\t\\t// Get a promise for this deferred\\n\\t\\t\\t\\t// If obj is provided, the promise aspect is added to the object\\n\\t\\t\\t\\tpromise: function( obj ) {\\n\\t\\t\\t\\t\\treturn obj != null ? jQuery.extend( obj, promise ) : promise;\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\tdeferred = {};\\n\\n\\t\\t// Add list-specific methods\\n\\t\\tjQuery.each( tuples, function( i, tuple ) {\\n\\t\\t\\tvar list = tuple[ 2 ],\\n\\t\\t\\t\\tstateString = tuple[ 5 ];\\n\\n\\t\\t\\t// promise.progress = list.add\\n\\t\\t\\t// promise.done = list.add\\n\\t\\t\\t// promise.fail = list.add\\n\\t\\t\\tpromise[ tuple[ 1 ] ] = list.add;\\n\\n\\t\\t\\t// Handle state\\n\\t\\t\\tif ( stateString ) {\\n\\t\\t\\t\\tlist.add(\\n\\t\\t\\t\\t\\tfunction() {\\n\\n\\t\\t\\t\\t\\t\\t// state = \\\"resolved\\\" (i.e., fulfilled)\\n\\t\\t\\t\\t\\t\\t// state = \\\"rejected\\\"\\n\\t\\t\\t\\t\\t\\tstate = stateString;\\n\\t\\t\\t\\t\\t},\\n\\n\\t\\t\\t\\t\\t// rejected_callbacks.disable\\n\\t\\t\\t\\t\\t// fulfilled_callbacks.disable\\n\\t\\t\\t\\t\\ttuples[ 3 - i ][ 2 ].disable,\\n\\n\\t\\t\\t\\t\\t// rejected_handlers.disable\\n\\t\\t\\t\\t\\t// fulfilled_handlers.disable\\n\\t\\t\\t\\t\\ttuples[ 3 - i ][ 3 ].disable,\\n\\n\\t\\t\\t\\t\\t// progress_callbacks.lock\\n\\t\\t\\t\\t\\ttuples[ 0 ][ 2 ].lock,\\n\\n\\t\\t\\t\\t\\t// progress_handlers.lock\\n\\t\\t\\t\\t\\ttuples[ 0 ][ 3 ].lock\\n\\t\\t\\t\\t);\\n\\t\\t\\t}\\n\\n\\t\\t\\t// progress_handlers.fire\\n\\t\\t\\t// fulfilled_handlers.fire\\n\\t\\t\\t// rejected_handlers.fire\\n\\t\\t\\tlist.add( tuple[ 3 ].fire );\\n\\n\\t\\t\\t// deferred.notify = function() { deferred.notifyWith(...) }\\n\\t\\t\\t// deferred.resolve = function() { deferred.resolveWith(...) }\\n\\t\\t\\t// deferred.reject = function() { deferred.rejectWith(...) }\\n\\t\\t\\tdeferred[ tuple[ 0 ] ] = function() {\\n\\t\\t\\t\\tdeferred[ tuple[ 0 ] + \\\"With\\\" ]( this === deferred ? undefined : this, arguments );\\n\\t\\t\\t\\treturn this;\\n\\t\\t\\t};\\n\\n\\t\\t\\t// deferred.notifyWith = list.fireWith\\n\\t\\t\\t// deferred.resolveWith = list.fireWith\\n\\t\\t\\t// deferred.rejectWith = list.fireWith\\n\\t\\t\\tdeferred[ tuple[ 0 ] + \\\"With\\\" ] = list.fireWith;\\n\\t\\t} );\\n\\n\\t\\t// Make the deferred a promise\\n\\t\\tpromise.promise( deferred );\\n\\n\\t\\t// Call given func if any\\n\\t\\tif ( func ) {\\n\\t\\t\\tfunc.call( deferred, deferred );\\n\\t\\t}\\n\\n\\t\\t// All done!\\n\\t\\treturn deferred;\\n\\t},\\n\\n\\t// Deferred helper\\n\\twhen: function( singleValue ) {\\n\\t\\tvar\\n\\n\\t\\t\\t// count of uncompleted subordinates\\n\\t\\t\\tremaining = arguments.length,\\n\\n\\t\\t\\t// count of unprocessed arguments\\n\\t\\t\\ti = remaining,\\n\\n\\t\\t\\t// subordinate fulfillment data\\n\\t\\t\\tresolveContexts = Array( i ),\\n\\t\\t\\tresolveValues = slice.call( arguments ),\\n\\n\\t\\t\\t// the master Deferred\\n\\t\\t\\tmaster = jQuery.Deferred(),\\n\\n\\t\\t\\t// subordinate callback factory\\n\\t\\t\\tupdateFunc = function( i ) {\\n\\t\\t\\t\\treturn function( value ) {\\n\\t\\t\\t\\t\\tresolveContexts[ i ] = this;\\n\\t\\t\\t\\t\\tresolveValues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;\\n\\t\\t\\t\\t\\tif ( !( --remaining ) ) {\\n\\t\\t\\t\\t\\t\\tmaster.resolveWith( resolveContexts, resolveValues );\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t};\\n\\t\\t\\t};\\n\\n\\t\\t// Single- and empty arguments are adopted like Promise.resolve\\n\\t\\tif ( remaining <= 1 ) {\\n\\t\\t\\tadoptValue( singleValue, master.done( updateFunc( i ) ).resolve, master.reject,\\n\\t\\t\\t\\t!remaining );\\n\\n\\t\\t\\t// Use .then() to unwrap secondary thenables (cf. gh-3000)\\n\\t\\t\\tif ( master.state() === \\\"pending\\\" ||\\n\\t\\t\\t\\tisFunction( resolveValues[ i ] && resolveValues[ i ].then ) ) {\\n\\n\\t\\t\\t\\treturn master.then();\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// Multiple arguments are aggregated like Promise.all array elements\\n\\t\\twhile ( i-- ) {\\n\\t\\t\\tadoptValue( resolveValues[ i ], updateFunc( i ), master.reject );\\n\\t\\t}\\n\\n\\t\\treturn master.promise();\\n\\t}\\n} );\\n\\n\\n// These usually indicate a programmer mistake during development,\\n// warn about them ASAP rather than swallowing them by default.\\nvar rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;\\n\\njQuery.Deferred.exceptionHook = function( error, stack ) {\\n\\n\\t// Support: IE 8 - 9 only\\n\\t// Console exists when dev tools are open, which can happen at any time\\n\\tif ( window.console && window.console.warn && error && rerrorNames.test( error.name ) ) {\\n\\t\\twindow.console.warn( \\\"jQuery.Deferred exception: \\\" + error.message, error.stack, stack );\\n\\t}\\n};\\n\\n\\n\\n\\njQuery.readyException = function( error ) {\\n\\twindow.setTimeout( function() {\\n\\t\\tthrow error;\\n\\t} );\\n};\\n\\n\\n\\n\\n// The deferred used on DOM ready\\nvar readyList = jQuery.Deferred();\\n\\njQuery.fn.ready = function( fn ) {\\n\\n\\treadyList\\n\\t\\t.then( fn )\\n\\n\\t\\t// Wrap jQuery.readyException in a function so that the lookup\\n\\t\\t// happens at the time of error handling instead of callback\\n\\t\\t// registration.\\n\\t\\t.catch( function( error ) {\\n\\t\\t\\tjQuery.readyException( error );\\n\\t\\t} );\\n\\n\\treturn this;\\n};\\n\\njQuery.extend( {\\n\\n\\t// Is the DOM ready to be used? Set to true once it occurs.\\n\\tisReady: false,\\n\\n\\t// A counter to track how many items to wait for before\\n\\t// the ready event fires. See #6781\\n\\treadyWait: 1,\\n\\n\\t// Handle when the DOM is ready\\n\\tready: function( wait ) {\\n\\n\\t\\t// Abort if there are pending holds or we're already ready\\n\\t\\tif ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\t// Remember that the DOM is ready\\n\\t\\tjQuery.isReady = true;\\n\\n\\t\\t// If a normal DOM Ready event fired, decrement, and wait if need be\\n\\t\\tif ( wait !== true && --jQuery.readyWait > 0 ) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\t// If there are functions bound, to execute\\n\\t\\treadyList.resolveWith( document, [ jQuery ] );\\n\\t}\\n} );\\n\\njQuery.ready.then = readyList.then;\\n\\n// The ready event handler and self cleanup method\\nfunction completed() {\\n\\tdocument.removeEventListener( \\\"DOMContentLoaded\\\", completed );\\n\\twindow.removeEventListener( \\\"load\\\", completed );\\n\\tjQuery.ready();\\n}\\n\\n// Catch cases where $(document).ready() is called\\n// after the browser event has already occurred.\\n// Support: IE <=9 - 10 only\\n// Older IE sometimes signals \\\"interactive\\\" too soon\\nif ( document.readyState === \\\"complete\\\" ||\\n\\t( document.readyState !== \\\"loading\\\" && !document.documentElement.doScroll ) ) {\\n\\n\\t// Handle it asynchronously to allow scripts the opportunity to delay ready\\n\\twindow.setTimeout( jQuery.ready );\\n\\n} else {\\n\\n\\t// Use the handy event callback\\n\\tdocument.addEventListener( \\\"DOMContentLoaded\\\", completed );\\n\\n\\t// A fallback to window.onload, that will always work\\n\\twindow.addEventListener( \\\"load\\\", completed );\\n}\\n\\n\\n\\n\\n// Multifunctional method to get and set values of a collection\\n// The value/s can optionally be executed if it's a function\\nvar access = function( elems, fn, key, value, chainable, emptyGet, raw ) {\\n\\tvar i = 0,\\n\\t\\tlen = elems.length,\\n\\t\\tbulk = key == null;\\n\\n\\t// Sets many values\\n\\tif ( toType( key ) === \\\"object\\\" ) {\\n\\t\\tchainable = true;\\n\\t\\tfor ( i in key ) {\\n\\t\\t\\taccess( elems, fn, i, key[ i ], true, emptyGet, raw );\\n\\t\\t}\\n\\n\\t// Sets one value\\n\\t} else if ( value !== undefined ) {\\n\\t\\tchainable = true;\\n\\n\\t\\tif ( !isFunction( value ) ) {\\n\\t\\t\\traw = true;\\n\\t\\t}\\n\\n\\t\\tif ( bulk ) {\\n\\n\\t\\t\\t// Bulk operations run against the entire set\\n\\t\\t\\tif ( raw ) {\\n\\t\\t\\t\\tfn.call( elems, value );\\n\\t\\t\\t\\tfn = null;\\n\\n\\t\\t\\t// ...except when executing function values\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tbulk = fn;\\n\\t\\t\\t\\tfn = function( elem, key, value ) {\\n\\t\\t\\t\\t\\treturn bulk.call( jQuery( elem ), value );\\n\\t\\t\\t\\t};\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tif ( fn ) {\\n\\t\\t\\tfor ( ; i < len; i++ ) {\\n\\t\\t\\t\\tfn(\\n\\t\\t\\t\\t\\telems[ i ], key, raw ?\\n\\t\\t\\t\\t\\tvalue :\\n\\t\\t\\t\\t\\tvalue.call( elems[ i ], i, fn( elems[ i ], key ) )\\n\\t\\t\\t\\t);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\tif ( chainable ) {\\n\\t\\treturn elems;\\n\\t}\\n\\n\\t// Gets\\n\\tif ( bulk ) {\\n\\t\\treturn fn.call( elems );\\n\\t}\\n\\n\\treturn len ? fn( elems[ 0 ], key ) : emptyGet;\\n};\\n\\n\\n// Matches dashed string for camelizing\\nvar rmsPrefix = /^-ms-/,\\n\\trdashAlpha = /-([a-z])/g;\\n\\n// Used by camelCase as callback to replace()\\nfunction fcamelCase( all, letter ) {\\n\\treturn letter.toUpperCase();\\n}\\n\\n// Convert dashed to camelCase; used by the css and data modules\\n// Support: IE <=9 - 11, Edge 12 - 15\\n// Microsoft forgot to hump their vendor prefix (#9572)\\nfunction camelCase( string ) {\\n\\treturn string.replace( rmsPrefix, \\\"ms-\\\" ).replace( rdashAlpha, fcamelCase );\\n}\\nvar acceptData = function( owner ) {\\n\\n\\t// Accepts only:\\n\\t//  - Node\\n\\t//    - Node.ELEMENT_NODE\\n\\t//    - Node.DOCUMENT_NODE\\n\\t//  - Object\\n\\t//    - Any\\n\\treturn owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );\\n};\\n\\n\\n\\n\\nfunction Data() {\\n\\tthis.expando = jQuery.expando + Data.uid++;\\n}\\n\\nData.uid = 1;\\n\\nData.prototype = {\\n\\n\\tcache: function( owner ) {\\n\\n\\t\\t// Check if the owner object already has a cache\\n\\t\\tvar value = owner[ this.expando ];\\n\\n\\t\\t// If not, create one\\n\\t\\tif ( !value ) {\\n\\t\\t\\tvalue = {};\\n\\n\\t\\t\\t// We can accept data for non-element nodes in modern browsers,\\n\\t\\t\\t// but we should not, see #8335.\\n\\t\\t\\t// Always return an empty object.\\n\\t\\t\\tif ( acceptData( owner ) ) {\\n\\n\\t\\t\\t\\t// If it is a node unlikely to be stringify-ed or looped over\\n\\t\\t\\t\\t// use plain assignment\\n\\t\\t\\t\\tif ( owner.nodeType ) {\\n\\t\\t\\t\\t\\towner[ this.expando ] = value;\\n\\n\\t\\t\\t\\t// Otherwise secure it in a non-enumerable property\\n\\t\\t\\t\\t// configurable must be true to allow the property to be\\n\\t\\t\\t\\t// deleted when data is removed\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tObject.defineProperty( owner, this.expando, {\\n\\t\\t\\t\\t\\t\\tvalue: value,\\n\\t\\t\\t\\t\\t\\tconfigurable: true\\n\\t\\t\\t\\t\\t} );\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn value;\\n\\t},\\n\\tset: function( owner, data, value ) {\\n\\t\\tvar prop,\\n\\t\\t\\tcache = this.cache( owner );\\n\\n\\t\\t// Handle: [ owner, key, value ] args\\n\\t\\t// Always use camelCase key (gh-2257)\\n\\t\\tif ( typeof data === \\\"string\\\" ) {\\n\\t\\t\\tcache[ camelCase( data ) ] = value;\\n\\n\\t\\t// Handle: [ owner, { properties } ] args\\n\\t\\t} else {\\n\\n\\t\\t\\t// Copy the properties one-by-one to the cache object\\n\\t\\t\\tfor ( prop in data ) {\\n\\t\\t\\t\\tcache[ camelCase( prop ) ] = data[ prop ];\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\treturn cache;\\n\\t},\\n\\tget: function( owner, key ) {\\n\\t\\treturn key === undefined ?\\n\\t\\t\\tthis.cache( owner ) :\\n\\n\\t\\t\\t// Always use camelCase key (gh-2257)\\n\\t\\t\\towner[ this.expando ] && owner[ this.expando ][ camelCase( key ) ];\\n\\t},\\n\\taccess: function( owner, key, value ) {\\n\\n\\t\\t// In cases where either:\\n\\t\\t//\\n\\t\\t//   1. No key was specified\\n\\t\\t//   2. A string key was specified, but no value provided\\n\\t\\t//\\n\\t\\t// Take the \\\"read\\\" path and allow the get method to determine\\n\\t\\t// which value to return, respectively either:\\n\\t\\t//\\n\\t\\t//   1. The entire cache object\\n\\t\\t//   2. The data stored at the key\\n\\t\\t//\\n\\t\\tif ( key === undefined ||\\n\\t\\t\\t\\t( ( key && typeof key === \\\"string\\\" ) && value === undefined ) ) {\\n\\n\\t\\t\\treturn this.get( owner, key );\\n\\t\\t}\\n\\n\\t\\t// When the key is not a string, or both a key and value\\n\\t\\t// are specified, set or extend (existing objects) with either:\\n\\t\\t//\\n\\t\\t//   1. An object of properties\\n\\t\\t//   2. A key and value\\n\\t\\t//\\n\\t\\tthis.set( owner, key, value );\\n\\n\\t\\t// Since the \\\"set\\\" path can have two possible entry points\\n\\t\\t// return the expected data based on which path was taken[*]\\n\\t\\treturn value !== undefined ? value : key;\\n\\t},\\n\\tremove: function( owner, key ) {\\n\\t\\tvar i,\\n\\t\\t\\tcache = owner[ this.expando ];\\n\\n\\t\\tif ( cache === undefined ) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tif ( key !== undefined ) {\\n\\n\\t\\t\\t// Support array or space separated string of keys\\n\\t\\t\\tif ( Array.isArray( key ) ) {\\n\\n\\t\\t\\t\\t// If key is an array of keys...\\n\\t\\t\\t\\t// We always set camelCase keys, so remove that.\\n\\t\\t\\t\\tkey = key.map( camelCase );\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tkey = camelCase( key );\\n\\n\\t\\t\\t\\t// If a key with the spaces exists, use it.\\n\\t\\t\\t\\t// Otherwise, create an array by matching non-whitespace\\n\\t\\t\\t\\tkey = key in cache ?\\n\\t\\t\\t\\t\\t[ key ] :\\n\\t\\t\\t\\t\\t( key.match( rnothtmlwhite ) || [] );\\n\\t\\t\\t}\\n\\n\\t\\t\\ti = key.length;\\n\\n\\t\\t\\twhile ( i-- ) {\\n\\t\\t\\t\\tdelete cache[ key[ i ] ];\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// Remove the expando if there's no more data\\n\\t\\tif ( key === undefined || jQuery.isEmptyObject( cache ) ) {\\n\\n\\t\\t\\t// Support: Chrome <=35 - 45\\n\\t\\t\\t// Webkit & Blink performance suffers when deleting properties\\n\\t\\t\\t// from DOM nodes, so set to undefined instead\\n\\t\\t\\t// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)\\n\\t\\t\\tif ( owner.nodeType ) {\\n\\t\\t\\t\\towner[ this.expando ] = undefined;\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tdelete owner[ this.expando ];\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\thasData: function( owner ) {\\n\\t\\tvar cache = owner[ this.expando ];\\n\\t\\treturn cache !== undefined && !jQuery.isEmptyObject( cache );\\n\\t}\\n};\\nvar dataPriv = new Data();\\n\\nvar dataUser = new Data();\\n\\n\\n\\n//\\tImplementation Summary\\n//\\n//\\t1. Enforce API surface and semantic compatibility with 1.9.x branch\\n//\\t2. Improve the module's maintainability by reducing the storage\\n//\\t\\tpaths to a single mechanism.\\n//\\t3. Use the same single mechanism to support \\\"private\\\" and \\\"user\\\" data.\\n//\\t4. _Never_ expose \\\"private\\\" data to user code (TODO: Drop _data, _removeData)\\n//\\t5. Avoid exposing implementation details on user objects (eg. expando properties)\\n//\\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\\n\\nvar rbrace = /^(?:\\\\{[\\\\w\\\\W]*\\\\}|\\\\[[\\\\w\\\\W]*\\\\])$/,\\n\\trmultiDash = /[A-Z]/g;\\n\\nfunction getData( data ) {\\n\\tif ( data === \\\"true\\\" ) {\\n\\t\\treturn true;\\n\\t}\\n\\n\\tif ( data === \\\"false\\\" ) {\\n\\t\\treturn false;\\n\\t}\\n\\n\\tif ( data === \\\"null\\\" ) {\\n\\t\\treturn null;\\n\\t}\\n\\n\\t// Only convert to a number if it doesn't change the string\\n\\tif ( data === +data + \\\"\\\" ) {\\n\\t\\treturn +data;\\n\\t}\\n\\n\\tif ( rbrace.test( data ) ) {\\n\\t\\treturn JSON.parse( data );\\n\\t}\\n\\n\\treturn data;\\n}\\n\\nfunction dataAttr( elem, key, data ) {\\n\\tvar name;\\n\\n\\t// If nothing was found internally, try to fetch any\\n\\t// data from the HTML5 data-* attribute\\n\\tif ( data === undefined && elem.nodeType === 1 ) {\\n\\t\\tname = \\\"data-\\\" + key.replace( rmultiDash, \\\"-$&\\\" ).toLowerCase();\\n\\t\\tdata = elem.getAttribute( name );\\n\\n\\t\\tif ( typeof data === \\\"string\\\" ) {\\n\\t\\t\\ttry {\\n\\t\\t\\t\\tdata = getData( data );\\n\\t\\t\\t} catch ( e ) {}\\n\\n\\t\\t\\t// Make sure we set the data so it isn't changed later\\n\\t\\t\\tdataUser.set( elem, key, data );\\n\\t\\t} else {\\n\\t\\t\\tdata = undefined;\\n\\t\\t}\\n\\t}\\n\\treturn data;\\n}\\n\\njQuery.extend( {\\n\\thasData: function( elem ) {\\n\\t\\treturn dataUser.hasData( elem ) || dataPriv.hasData( elem );\\n\\t},\\n\\n\\tdata: function( elem, name, data ) {\\n\\t\\treturn dataUser.access( elem, name, data );\\n\\t},\\n\\n\\tremoveData: function( elem, name ) {\\n\\t\\tdataUser.remove( elem, name );\\n\\t},\\n\\n\\t// TODO: Now that all calls to _data and _removeData have been replaced\\n\\t// with direct calls to dataPriv methods, these can be deprecated.\\n\\t_data: function( elem, name, data ) {\\n\\t\\treturn dataPriv.access( elem, name, data );\\n\\t},\\n\\n\\t_removeData: function( elem, name ) {\\n\\t\\tdataPriv.remove( elem, name );\\n\\t}\\n} );\\n\\njQuery.fn.extend( {\\n\\tdata: function( key, value ) {\\n\\t\\tvar i, name, data,\\n\\t\\t\\telem = this[ 0 ],\\n\\t\\t\\tattrs = elem && elem.attributes;\\n\\n\\t\\t// Gets all values\\n\\t\\tif ( key === undefined ) {\\n\\t\\t\\tif ( this.length ) {\\n\\t\\t\\t\\tdata = dataUser.get( elem );\\n\\n\\t\\t\\t\\tif ( elem.nodeType === 1 && !dataPriv.get( elem, \\\"hasDataAttrs\\\" ) ) {\\n\\t\\t\\t\\t\\ti = attrs.length;\\n\\t\\t\\t\\t\\twhile ( i-- ) {\\n\\n\\t\\t\\t\\t\\t\\t// Support: IE 11 only\\n\\t\\t\\t\\t\\t\\t// The attrs elements can be null (#14894)\\n\\t\\t\\t\\t\\t\\tif ( attrs[ i ] ) {\\n\\t\\t\\t\\t\\t\\t\\tname = attrs[ i ].name;\\n\\t\\t\\t\\t\\t\\t\\tif ( name.indexOf( \\\"data-\\\" ) === 0 ) {\\n\\t\\t\\t\\t\\t\\t\\t\\tname = camelCase( name.slice( 5 ) );\\n\\t\\t\\t\\t\\t\\t\\t\\tdataAttr( elem, name, data[ name ] );\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tdataPriv.set( elem, \\\"hasDataAttrs\\\", true );\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn data;\\n\\t\\t}\\n\\n\\t\\t// Sets multiple values\\n\\t\\tif ( typeof key === \\\"object\\\" ) {\\n\\t\\t\\treturn this.each( function() {\\n\\t\\t\\t\\tdataUser.set( this, key );\\n\\t\\t\\t} );\\n\\t\\t}\\n\\n\\t\\treturn access( this, function( value ) {\\n\\t\\t\\tvar data;\\n\\n\\t\\t\\t// The calling jQuery object (element matches) is not empty\\n\\t\\t\\t// (and therefore has an element appears at this[ 0 ]) and the\\n\\t\\t\\t// `value` parameter was not undefined. An empty jQuery object\\n\\t\\t\\t// will result in `undefined` for elem = this[ 0 ] which will\\n\\t\\t\\t// throw an exception if an attempt to read a data cache is made.\\n\\t\\t\\tif ( elem && value === undefined ) {\\n\\n\\t\\t\\t\\t// Attempt to get data from the cache\\n\\t\\t\\t\\t// The key will always be camelCased in Data\\n\\t\\t\\t\\tdata = dataUser.get( elem, key );\\n\\t\\t\\t\\tif ( data !== undefined ) {\\n\\t\\t\\t\\t\\treturn data;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Attempt to \\\"discover\\\" the data in\\n\\t\\t\\t\\t// HTML5 custom data-* attrs\\n\\t\\t\\t\\tdata = dataAttr( elem, key );\\n\\t\\t\\t\\tif ( data !== undefined ) {\\n\\t\\t\\t\\t\\treturn data;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// We tried really hard, but the data doesn't exist.\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Set the data...\\n\\t\\t\\tthis.each( function() {\\n\\n\\t\\t\\t\\t// We always store the camelCased key\\n\\t\\t\\t\\tdataUser.set( this, key, value );\\n\\t\\t\\t} );\\n\\t\\t}, null, value, arguments.length > 1, null, true );\\n\\t},\\n\\n\\tremoveData: function( key ) {\\n\\t\\treturn this.each( function() {\\n\\t\\t\\tdataUser.remove( this, key );\\n\\t\\t} );\\n\\t}\\n} );\\n\\n\\njQuery.extend( {\\n\\tqueue: function( elem, type, data ) {\\n\\t\\tvar queue;\\n\\n\\t\\tif ( elem ) {\\n\\t\\t\\ttype = ( type || \\\"fx\\\" ) + \\\"queue\\\";\\n\\t\\t\\tqueue = dataPriv.get( elem, type );\\n\\n\\t\\t\\t// Speed up dequeue by getting out quickly if this is just a lookup\\n\\t\\t\\tif ( data ) {\\n\\t\\t\\t\\tif ( !queue || Array.isArray( data ) ) {\\n\\t\\t\\t\\t\\tqueue = dataPriv.access( elem, type, jQuery.makeArray( data ) );\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tqueue.push( data );\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\treturn queue || [];\\n\\t\\t}\\n\\t},\\n\\n\\tdequeue: function( elem, type ) {\\n\\t\\ttype = type || \\\"fx\\\";\\n\\n\\t\\tvar queue = jQuery.queue( elem, type ),\\n\\t\\t\\tstartLength = queue.length,\\n\\t\\t\\tfn = queue.shift(),\\n\\t\\t\\thooks = jQuery._queueHooks( elem, type ),\\n\\t\\t\\tnext = function() {\\n\\t\\t\\t\\tjQuery.dequeue( elem, type );\\n\\t\\t\\t};\\n\\n\\t\\t// If the fx queue is dequeued, always remove the progress sentinel\\n\\t\\tif ( fn === \\\"inprogress\\\" ) {\\n\\t\\t\\tfn = queue.shift();\\n\\t\\t\\tstartLength--;\\n\\t\\t}\\n\\n\\t\\tif ( fn ) {\\n\\n\\t\\t\\t// Add a progress sentinel to prevent the fx queue from being\\n\\t\\t\\t// automatically dequeued\\n\\t\\t\\tif ( type === \\\"fx\\\" ) {\\n\\t\\t\\t\\tqueue.unshift( \\\"inprogress\\\" );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Clear up the last queue stop function\\n\\t\\t\\tdelete hooks.stop;\\n\\t\\t\\tfn.call( elem, next, hooks );\\n\\t\\t}\\n\\n\\t\\tif ( !startLength && hooks ) {\\n\\t\\t\\thooks.empty.fire();\\n\\t\\t}\\n\\t},\\n\\n\\t// Not public - generate a queueHooks object, or return the current one\\n\\t_queueHooks: function( elem, type ) {\\n\\t\\tvar key = type + \\\"queueHooks\\\";\\n\\t\\treturn dataPriv.get( elem, key ) || dataPriv.access( elem, key, {\\n\\t\\t\\tempty: jQuery.Callbacks( \\\"once memory\\\" ).add( function() {\\n\\t\\t\\t\\tdataPriv.remove( elem, [ type + \\\"queue\\\", key ] );\\n\\t\\t\\t} )\\n\\t\\t} );\\n\\t}\\n} );\\n\\njQuery.fn.extend( {\\n\\tqueue: function( type, data ) {\\n\\t\\tvar setter = 2;\\n\\n\\t\\tif ( typeof type !== \\\"string\\\" ) {\\n\\t\\t\\tdata = type;\\n\\t\\t\\ttype = \\\"fx\\\";\\n\\t\\t\\tsetter--;\\n\\t\\t}\\n\\n\\t\\tif ( arguments.length < setter ) {\\n\\t\\t\\treturn jQuery.queue( this[ 0 ], type );\\n\\t\\t}\\n\\n\\t\\treturn data === undefined ?\\n\\t\\t\\tthis :\\n\\t\\t\\tthis.each( function() {\\n\\t\\t\\t\\tvar queue = jQuery.queue( this, type, data );\\n\\n\\t\\t\\t\\t// Ensure a hooks for this queue\\n\\t\\t\\t\\tjQuery._queueHooks( this, type );\\n\\n\\t\\t\\t\\tif ( type === \\\"fx\\\" && queue[ 0 ] !== \\\"inprogress\\\" ) {\\n\\t\\t\\t\\t\\tjQuery.dequeue( this, type );\\n\\t\\t\\t\\t}\\n\\t\\t\\t} );\\n\\t},\\n\\tdequeue: function( type ) {\\n\\t\\treturn this.each( function() {\\n\\t\\t\\tjQuery.dequeue( this, type );\\n\\t\\t} );\\n\\t},\\n\\tclearQueue: function( type ) {\\n\\t\\treturn this.queue( type || \\\"fx\\\", [] );\\n\\t},\\n\\n\\t// Get a promise resolved when queues of a certain type\\n\\t// are emptied (fx is the type by default)\\n\\tpromise: function( type, obj ) {\\n\\t\\tvar tmp,\\n\\t\\t\\tcount = 1,\\n\\t\\t\\tdefer = jQuery.Deferred(),\\n\\t\\t\\telements = this,\\n\\t\\t\\ti = this.length,\\n\\t\\t\\tresolve = function() {\\n\\t\\t\\t\\tif ( !( --count ) ) {\\n\\t\\t\\t\\t\\tdefer.resolveWith( elements, [ elements ] );\\n\\t\\t\\t\\t}\\n\\t\\t\\t};\\n\\n\\t\\tif ( typeof type !== \\\"string\\\" ) {\\n\\t\\t\\tobj = type;\\n\\t\\t\\ttype = undefined;\\n\\t\\t}\\n\\t\\ttype = type || \\\"fx\\\";\\n\\n\\t\\twhile ( i-- ) {\\n\\t\\t\\ttmp = dataPriv.get( elements[ i ], type + \\\"queueHooks\\\" );\\n\\t\\t\\tif ( tmp && tmp.empty ) {\\n\\t\\t\\t\\tcount++;\\n\\t\\t\\t\\ttmp.empty.add( resolve );\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\tresolve();\\n\\t\\treturn defer.promise( obj );\\n\\t}\\n} );\\nvar pnum = ( /[+-]?(?:\\\\d*\\\\.|)\\\\d+(?:[eE][+-]?\\\\d+|)/ ).source;\\n\\nvar rcssNum = new RegExp( \\\"^(?:([+-])=|)(\\\" + pnum + \\\")([a-z%]*)$\\\", \\\"i\\\" );\\n\\n\\nvar cssExpand = [ \\\"Top\\\", \\\"Right\\\", \\\"Bottom\\\", \\\"Left\\\" ];\\n\\nvar documentElement = document.documentElement;\\n\\n\\n\\n\\tvar isAttached = function( elem ) {\\n\\t\\t\\treturn jQuery.contains( elem.ownerDocument, elem );\\n\\t\\t},\\n\\t\\tcomposed = { composed: true };\\n\\n\\t// Support: IE 9 - 11+, Edge 12 - 18+, iOS 10.0 - 10.2 only\\n\\t// Check attachment across shadow DOM boundaries when possible (gh-3504)\\n\\t// Support: iOS 10.0-10.2 only\\n\\t// Early iOS 10 versions support `attachShadow` but not `getRootNode`,\\n\\t// leading to errors. We need to check for `getRootNode`.\\n\\tif ( documentElement.getRootNode ) {\\n\\t\\tisAttached = function( elem ) {\\n\\t\\t\\treturn jQuery.contains( elem.ownerDocument, elem ) ||\\n\\t\\t\\t\\telem.getRootNode( composed ) === elem.ownerDocument;\\n\\t\\t};\\n\\t}\\nvar isHiddenWithinTree = function( elem, el ) {\\n\\n\\t\\t// isHiddenWithinTree might be called from jQuery#filter function;\\n\\t\\t// in that case, element will be second argument\\n\\t\\telem = el || elem;\\n\\n\\t\\t// Inline style trumps all\\n\\t\\treturn elem.style.display === \\\"none\\\" ||\\n\\t\\t\\telem.style.display === \\\"\\\" &&\\n\\n\\t\\t\\t// Otherwise, check computed style\\n\\t\\t\\t// Support: Firefox <=43 - 45\\n\\t\\t\\t// Disconnected elements can have computed display: none, so first confirm that elem is\\n\\t\\t\\t// in the document.\\n\\t\\t\\tisAttached( elem ) &&\\n\\n\\t\\t\\tjQuery.css( elem, \\\"display\\\" ) === \\\"none\\\";\\n\\t};\\n\\nvar swap = function( elem, options, callback, args ) {\\n\\tvar ret, name,\\n\\t\\told = {};\\n\\n\\t// Remember the old values, and insert the new ones\\n\\tfor ( name in options ) {\\n\\t\\told[ name ] = elem.style[ name ];\\n\\t\\telem.style[ name ] = options[ name ];\\n\\t}\\n\\n\\tret = callback.apply( elem, args || [] );\\n\\n\\t// Revert the old values\\n\\tfor ( name in options ) {\\n\\t\\telem.style[ name ] = old[ name ];\\n\\t}\\n\\n\\treturn ret;\\n};\\n\\n\\n\\n\\nfunction adjustCSS( elem, prop, valueParts, tween ) {\\n\\tvar adjusted, scale,\\n\\t\\tmaxIterations = 20,\\n\\t\\tcurrentValue = tween ?\\n\\t\\t\\tfunction() {\\n\\t\\t\\t\\treturn tween.cur();\\n\\t\\t\\t} :\\n\\t\\t\\tfunction() {\\n\\t\\t\\t\\treturn jQuery.css( elem, prop, \\\"\\\" );\\n\\t\\t\\t},\\n\\t\\tinitial = currentValue(),\\n\\t\\tunit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? \\\"\\\" : \\\"px\\\" ),\\n\\n\\t\\t// Starting value computation is required for potential unit mismatches\\n\\t\\tinitialInUnit = elem.nodeType &&\\n\\t\\t\\t( jQuery.cssNumber[ prop ] || unit !== \\\"px\\\" && +initial ) &&\\n\\t\\t\\trcssNum.exec( jQuery.css( elem, prop ) );\\n\\n\\tif ( initialInUnit && initialInUnit[ 3 ] !== unit ) {\\n\\n\\t\\t// Support: Firefox <=54\\n\\t\\t// Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)\\n\\t\\tinitial = initial / 2;\\n\\n\\t\\t// Trust units reported by jQuery.css\\n\\t\\tunit = unit || initialInUnit[ 3 ];\\n\\n\\t\\t// Iteratively approximate from a nonzero starting point\\n\\t\\tinitialInUnit = +initial || 1;\\n\\n\\t\\twhile ( maxIterations-- ) {\\n\\n\\t\\t\\t// Evaluate and update our best guess (doubling guesses that zero out).\\n\\t\\t\\t// Finish if the scale equals or crosses 1 (making the old*new product non-positive).\\n\\t\\t\\tjQuery.style( elem, prop, initialInUnit + unit );\\n\\t\\t\\tif ( ( 1 - scale ) * ( 1 - ( scale = currentValue() / initial || 0.5 ) ) <= 0 ) {\\n\\t\\t\\t\\tmaxIterations = 0;\\n\\t\\t\\t}\\n\\t\\t\\tinitialInUnit = initialInUnit / scale;\\n\\n\\t\\t}\\n\\n\\t\\tinitialInUnit = initialInUnit * 2;\\n\\t\\tjQuery.style( elem, prop, initialInUnit + unit );\\n\\n\\t\\t// Make sure we update the tween properties later on\\n\\t\\tvalueParts = valueParts || [];\\n\\t}\\n\\n\\tif ( valueParts ) {\\n\\t\\tinitialInUnit = +initialInUnit || +initial || 0;\\n\\n\\t\\t// Apply relative offset (+=/-=) if specified\\n\\t\\tadjusted = valueParts[ 1 ] ?\\n\\t\\t\\tinitialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :\\n\\t\\t\\t+valueParts[ 2 ];\\n\\t\\tif ( tween ) {\\n\\t\\t\\ttween.unit = unit;\\n\\t\\t\\ttween.start = initialInUnit;\\n\\t\\t\\ttween.end = adjusted;\\n\\t\\t}\\n\\t}\\n\\treturn adjusted;\\n}\\n\\n\\nvar defaultDisplayMap = {};\\n\\nfunction getDefaultDisplay( elem ) {\\n\\tvar temp,\\n\\t\\tdoc = elem.ownerDocument,\\n\\t\\tnodeName = elem.nodeName,\\n\\t\\tdisplay = defaultDisplayMap[ nodeName ];\\n\\n\\tif ( display ) {\\n\\t\\treturn display;\\n\\t}\\n\\n\\ttemp = doc.body.appendChild( doc.createElement( nodeName ) );\\n\\tdisplay = jQuery.css( temp, \\\"display\\\" );\\n\\n\\ttemp.parentNode.removeChild( temp );\\n\\n\\tif ( display === \\\"none\\\" ) {\\n\\t\\tdisplay = \\\"block\\\";\\n\\t}\\n\\tdefaultDisplayMap[ nodeName ] = display;\\n\\n\\treturn display;\\n}\\n\\nfunction showHide( elements, show ) {\\n\\tvar display, elem,\\n\\t\\tvalues = [],\\n\\t\\tindex = 0,\\n\\t\\tlength = elements.length;\\n\\n\\t// Determine new display value for elements that need to change\\n\\tfor ( ; index < length; index++ ) {\\n\\t\\telem = elements[ index ];\\n\\t\\tif ( !elem.style ) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tdisplay = elem.style.display;\\n\\t\\tif ( show ) {\\n\\n\\t\\t\\t// Since we force visibility upon cascade-hidden elements, an immediate (and slow)\\n\\t\\t\\t// check is required in this first loop unless we have a nonempty display value (either\\n\\t\\t\\t// inline or about-to-be-restored)\\n\\t\\t\\tif ( display === \\\"none\\\" ) {\\n\\t\\t\\t\\tvalues[ index ] = dataPriv.get( elem, \\\"display\\\" ) || null;\\n\\t\\t\\t\\tif ( !values[ index ] ) {\\n\\t\\t\\t\\t\\telem.style.display = \\\"\\\";\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\tif ( elem.style.display === \\\"\\\" && isHiddenWithinTree( elem ) ) {\\n\\t\\t\\t\\tvalues[ index ] = getDefaultDisplay( elem );\\n\\t\\t\\t}\\n\\t\\t} else {\\n\\t\\t\\tif ( display !== \\\"none\\\" ) {\\n\\t\\t\\t\\tvalues[ index ] = \\\"none\\\";\\n\\n\\t\\t\\t\\t// Remember what we're overwriting\\n\\t\\t\\t\\tdataPriv.set( elem, \\\"display\\\", display );\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\t// Set the display of the elements in a second loop to avoid constant reflow\\n\\tfor ( index = 0; index < length; index++ ) {\\n\\t\\tif ( values[ index ] != null ) {\\n\\t\\t\\telements[ index ].style.display = values[ index ];\\n\\t\\t}\\n\\t}\\n\\n\\treturn elements;\\n}\\n\\njQuery.fn.extend( {\\n\\tshow: function() {\\n\\t\\treturn showHide( this, true );\\n\\t},\\n\\thide: function() {\\n\\t\\treturn showHide( this );\\n\\t},\\n\\ttoggle: function( state ) {\\n\\t\\tif ( typeof state === \\\"boolean\\\" ) {\\n\\t\\t\\treturn state ? this.show() : this.hide();\\n\\t\\t}\\n\\n\\t\\treturn this.each( function() {\\n\\t\\t\\tif ( isHiddenWithinTree( this ) ) {\\n\\t\\t\\t\\tjQuery( this ).show();\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tjQuery( this ).hide();\\n\\t\\t\\t}\\n\\t\\t} );\\n\\t}\\n} );\\nvar rcheckableType = ( /^(?:checkbox|radio)$/i );\\n\\nvar rtagName = ( /<([a-z][^\\\\/\\\\0>\\\\x20\\\\t\\\\r\\\\n\\\\f]*)/i );\\n\\nvar rscriptType = ( /^$|^module$|\\\\/(?:java|ecma)script/i );\\n\\n\\n\\n// We have to close these tags to support XHTML (#13200)\\nvar wrapMap = {\\n\\n\\t// Support: IE <=9 only\\n\\toption: [ 1, \\\"<select multiple='multiple'>\\\", \\\"</select>\\\" ],\\n\\n\\t// XHTML parsers do not magically insert elements in the\\n\\t// same way that tag soup parsers do. So we cannot shorten\\n\\t// this by omitting <tbody> or other required elements.\\n\\tthead: [ 1, \\\"<table>\\\", \\\"</table>\\\" ],\\n\\tcol: [ 2, \\\"<table><colgroup>\\\", \\\"</colgroup></table>\\\" ],\\n\\ttr: [ 2, \\\"<table><tbody>\\\", \\\"</tbody></table>\\\" ],\\n\\ttd: [ 3, \\\"<table><tbody><tr>\\\", \\\"</tr></tbody></table>\\\" ],\\n\\n\\t_default: [ 0, \\\"\\\", \\\"\\\" ]\\n};\\n\\n// Support: IE <=9 only\\nwrapMap.optgroup = wrapMap.option;\\n\\nwrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\\nwrapMap.th = wrapMap.td;\\n\\n\\nfunction getAll( context, tag ) {\\n\\n\\t// Support: IE <=9 - 11 only\\n\\t// Use typeof to avoid zero-argument method invocation on host objects (#15151)\\n\\tvar ret;\\n\\n\\tif ( typeof context.getElementsByTagName !== \\\"undefined\\\" ) {\\n\\t\\tret = context.getElementsByTagName( tag || \\\"*\\\" );\\n\\n\\t} else if ( typeof context.querySelectorAll !== \\\"undefined\\\" ) {\\n\\t\\tret = context.querySelectorAll( tag || \\\"*\\\" );\\n\\n\\t} else {\\n\\t\\tret = [];\\n\\t}\\n\\n\\tif ( tag === undefined || tag && nodeName( context, tag ) ) {\\n\\t\\treturn jQuery.merge( [ context ], ret );\\n\\t}\\n\\n\\treturn ret;\\n}\\n\\n\\n// Mark scripts as having already been evaluated\\nfunction setGlobalEval( elems, refElements ) {\\n\\tvar i = 0,\\n\\t\\tl = elems.length;\\n\\n\\tfor ( ; i < l; i++ ) {\\n\\t\\tdataPriv.set(\\n\\t\\t\\telems[ i ],\\n\\t\\t\\t\\\"globalEval\\\",\\n\\t\\t\\t!refElements || dataPriv.get( refElements[ i ], \\\"globalEval\\\" )\\n\\t\\t);\\n\\t}\\n}\\n\\n\\nvar rhtml = /<|&#?\\\\w+;/;\\n\\nfunction buildFragment( elems, context, scripts, selection, ignored ) {\\n\\tvar elem, tmp, tag, wrap, attached, j,\\n\\t\\tfragment = context.createDocumentFragment(),\\n\\t\\tnodes = [],\\n\\t\\ti = 0,\\n\\t\\tl = elems.length;\\n\\n\\tfor ( ; i < l; i++ ) {\\n\\t\\telem = elems[ i ];\\n\\n\\t\\tif ( elem || elem === 0 ) {\\n\\n\\t\\t\\t// Add nodes directly\\n\\t\\t\\tif ( toType( elem ) === \\\"object\\\" ) {\\n\\n\\t\\t\\t\\t// Support: Android <=4.0 only, PhantomJS 1 only\\n\\t\\t\\t\\t// push.apply(_, arraylike) throws on ancient WebKit\\n\\t\\t\\t\\tjQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );\\n\\n\\t\\t\\t// Convert non-html into a text node\\n\\t\\t\\t} else if ( !rhtml.test( elem ) ) {\\n\\t\\t\\t\\tnodes.push( context.createTextNode( elem ) );\\n\\n\\t\\t\\t// Convert html into DOM nodes\\n\\t\\t\\t} else {\\n\\t\\t\\t\\ttmp = tmp || fragment.appendChild( context.createElement( \\\"div\\\" ) );\\n\\n\\t\\t\\t\\t// Deserialize a standard representation\\n\\t\\t\\t\\ttag = ( rtagName.exec( elem ) || [ \\\"\\\", \\\"\\\" ] )[ 1 ].toLowerCase();\\n\\t\\t\\t\\twrap = wrapMap[ tag ] || wrapMap._default;\\n\\t\\t\\t\\ttmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];\\n\\n\\t\\t\\t\\t// Descend through wrappers to the right content\\n\\t\\t\\t\\tj = wrap[ 0 ];\\n\\t\\t\\t\\twhile ( j-- ) {\\n\\t\\t\\t\\t\\ttmp = tmp.lastChild;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Support: Android <=4.0 only, PhantomJS 1 only\\n\\t\\t\\t\\t// push.apply(_, arraylike) throws on ancient WebKit\\n\\t\\t\\t\\tjQuery.merge( nodes, tmp.childNodes );\\n\\n\\t\\t\\t\\t// Remember the top-level container\\n\\t\\t\\t\\ttmp = fragment.firstChild;\\n\\n\\t\\t\\t\\t// Ensure the created nodes are orphaned (#12392)\\n\\t\\t\\t\\ttmp.textContent = \\\"\\\";\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\t// Remove wrapper from fragment\\n\\tfragment.textContent = \\\"\\\";\\n\\n\\ti = 0;\\n\\twhile ( ( elem = nodes[ i++ ] ) ) {\\n\\n\\t\\t// Skip elements already in the context collection (trac-4087)\\n\\t\\tif ( selection && jQuery.inArray( elem, selection ) > -1 ) {\\n\\t\\t\\tif ( ignored ) {\\n\\t\\t\\t\\tignored.push( elem );\\n\\t\\t\\t}\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tattached = isAttached( elem );\\n\\n\\t\\t// Append to fragment\\n\\t\\ttmp = getAll( fragment.appendChild( elem ), \\\"script\\\" );\\n\\n\\t\\t// Preserve script evaluation history\\n\\t\\tif ( attached ) {\\n\\t\\t\\tsetGlobalEval( tmp );\\n\\t\\t}\\n\\n\\t\\t// Capture executables\\n\\t\\tif ( scripts ) {\\n\\t\\t\\tj = 0;\\n\\t\\t\\twhile ( ( elem = tmp[ j++ ] ) ) {\\n\\t\\t\\t\\tif ( rscriptType.test( elem.type || \\\"\\\" ) ) {\\n\\t\\t\\t\\t\\tscripts.push( elem );\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\treturn fragment;\\n}\\n\\n\\n( function() {\\n\\tvar fragment = document.createDocumentFragment(),\\n\\t\\tdiv = fragment.appendChild( document.createElement( \\\"div\\\" ) ),\\n\\t\\tinput = document.createElement( \\\"input\\\" );\\n\\n\\t// Support: Android 4.0 - 4.3 only\\n\\t// Check state lost if the name is set (#11217)\\n\\t// Support: Windows Web Apps (WWA)\\n\\t// `name` and `type` must use .setAttribute for WWA (#14901)\\n\\tinput.setAttribute( \\\"type\\\", \\\"radio\\\" );\\n\\tinput.setAttribute( \\\"checked\\\", \\\"checked\\\" );\\n\\tinput.setAttribute( \\\"name\\\", \\\"t\\\" );\\n\\n\\tdiv.appendChild( input );\\n\\n\\t// Support: Android <=4.1 only\\n\\t// Older WebKit doesn't clone checked state correctly in fragments\\n\\tsupport.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;\\n\\n\\t// Support: IE <=11 only\\n\\t// Make sure textarea (and checkbox) defaultValue is properly cloned\\n\\tdiv.innerHTML = \\\"<textarea>x</textarea>\\\";\\n\\tsupport.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;\\n} )();\\n\\n\\nvar\\n\\trkeyEvent = /^key/,\\n\\trmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,\\n\\trtypenamespace = /^([^.]*)(?:\\\\.(.+)|)/;\\n\\nfunction returnTrue() {\\n\\treturn true;\\n}\\n\\nfunction returnFalse() {\\n\\treturn false;\\n}\\n\\n// Support: IE <=9 - 11+\\n// focus() and blur() are asynchronous, except when they are no-op.\\n// So expect focus to be synchronous when the element is already active,\\n// and blur to be synchronous when the element is not already active.\\n// (focus and blur are always synchronous in other supported browsers,\\n// this just defines when we can count on it).\\nfunction expectSync( elem, type ) {\\n\\treturn ( elem === safeActiveElement() ) === ( type === \\\"focus\\\" );\\n}\\n\\n// Support: IE <=9 only\\n// Accessing document.activeElement can throw unexpectedly\\n// https://bugs.jquery.com/ticket/13393\\nfunction safeActiveElement() {\\n\\ttry {\\n\\t\\treturn document.activeElement;\\n\\t} catch ( err ) { }\\n}\\n\\nfunction on( elem, types, selector, data, fn, one ) {\\n\\tvar origFn, type;\\n\\n\\t// Types can be a map of types/handlers\\n\\tif ( typeof types === \\\"object\\\" ) {\\n\\n\\t\\t// ( types-Object, selector, data )\\n\\t\\tif ( typeof selector !== \\\"string\\\" ) {\\n\\n\\t\\t\\t// ( types-Object, data )\\n\\t\\t\\tdata = data || selector;\\n\\t\\t\\tselector = undefined;\\n\\t\\t}\\n\\t\\tfor ( type in types ) {\\n\\t\\t\\ton( elem, type, selector, data, types[ type ], one );\\n\\t\\t}\\n\\t\\treturn elem;\\n\\t}\\n\\n\\tif ( data == null && fn == null ) {\\n\\n\\t\\t// ( types, fn )\\n\\t\\tfn = selector;\\n\\t\\tdata = selector = undefined;\\n\\t} else if ( fn == null ) {\\n\\t\\tif ( typeof selector === \\\"string\\\" ) {\\n\\n\\t\\t\\t// ( types, selector, fn )\\n\\t\\t\\tfn = data;\\n\\t\\t\\tdata = undefined;\\n\\t\\t} else {\\n\\n\\t\\t\\t// ( types, data, fn )\\n\\t\\t\\tfn = data;\\n\\t\\t\\tdata = selector;\\n\\t\\t\\tselector = undefined;\\n\\t\\t}\\n\\t}\\n\\tif ( fn === false ) {\\n\\t\\tfn = returnFalse;\\n\\t} else if ( !fn ) {\\n\\t\\treturn elem;\\n\\t}\\n\\n\\tif ( one === 1 ) {\\n\\t\\torigFn = fn;\\n\\t\\tfn = function( event ) {\\n\\n\\t\\t\\t// Can use an empty set, since event contains the info\\n\\t\\t\\tjQuery().off( event );\\n\\t\\t\\treturn origFn.apply( this, arguments );\\n\\t\\t};\\n\\n\\t\\t// Use same guid so caller can remove using origFn\\n\\t\\tfn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );\\n\\t}\\n\\treturn elem.each( function() {\\n\\t\\tjQuery.event.add( this, types, fn, data, selector );\\n\\t} );\\n}\\n\\n/*\\n * Helper functions for managing events -- not part of the public interface.\\n * Props to Dean Edwards' addEvent library for many of the ideas.\\n */\\njQuery.event = {\\n\\n\\tglobal: {},\\n\\n\\tadd: function( elem, types, handler, data, selector ) {\\n\\n\\t\\tvar handleObjIn, eventHandle, tmp,\\n\\t\\t\\tevents, t, handleObj,\\n\\t\\t\\tspecial, handlers, type, namespaces, origType,\\n\\t\\t\\telemData = dataPriv.get( elem );\\n\\n\\t\\t// Don't attach events to noData or text/comment nodes (but allow plain objects)\\n\\t\\tif ( !elemData ) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\t// Caller can pass in an object of custom data in lieu of the handler\\n\\t\\tif ( handler.handler ) {\\n\\t\\t\\thandleObjIn = handler;\\n\\t\\t\\thandler = handleObjIn.handler;\\n\\t\\t\\tselector = handleObjIn.selector;\\n\\t\\t}\\n\\n\\t\\t// Ensure that invalid selectors throw exceptions at attach time\\n\\t\\t// Evaluate against documentElement in case elem is a non-element node (e.g., document)\\n\\t\\tif ( selector ) {\\n\\t\\t\\tjQuery.find.matchesSelector( documentElement, selector );\\n\\t\\t}\\n\\n\\t\\t// Make sure that the handler has a unique ID, used to find/remove it later\\n\\t\\tif ( !handler.guid ) {\\n\\t\\t\\thandler.guid = jQuery.guid++;\\n\\t\\t}\\n\\n\\t\\t// Init the element's event structure and main handler, if this is the first\\n\\t\\tif ( !( events = elemData.events ) ) {\\n\\t\\t\\tevents = elemData.events = {};\\n\\t\\t}\\n\\t\\tif ( !( eventHandle = elemData.handle ) ) {\\n\\t\\t\\teventHandle = elemData.handle = function( e ) {\\n\\n\\t\\t\\t\\t// Discard the second event of a jQuery.event.trigger() and\\n\\t\\t\\t\\t// when an event is called after a page has unloaded\\n\\t\\t\\t\\treturn typeof jQuery !== \\\"undefined\\\" && jQuery.event.triggered !== e.type ?\\n\\t\\t\\t\\t\\tjQuery.event.dispatch.apply( elem, arguments ) : undefined;\\n\\t\\t\\t};\\n\\t\\t}\\n\\n\\t\\t// Handle multiple events separated by a space\\n\\t\\ttypes = ( types || \\\"\\\" ).match( rnothtmlwhite ) || [ \\\"\\\" ];\\n\\t\\tt = types.length;\\n\\t\\twhile ( t-- ) {\\n\\t\\t\\ttmp = rtypenamespace.exec( types[ t ] ) || [];\\n\\t\\t\\ttype = origType = tmp[ 1 ];\\n\\t\\t\\tnamespaces = ( tmp[ 2 ] || \\\"\\\" ).split( \\\".\\\" ).sort();\\n\\n\\t\\t\\t// There *must* be a type, no attaching namespace-only handlers\\n\\t\\t\\tif ( !type ) {\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// If event changes its type, use the special event handlers for the changed type\\n\\t\\t\\tspecial = jQuery.event.special[ type ] || {};\\n\\n\\t\\t\\t// If selector defined, determine special event api type, otherwise given type\\n\\t\\t\\ttype = ( selector ? special.delegateType : special.bindType ) || type;\\n\\n\\t\\t\\t// Update special based on newly reset type\\n\\t\\t\\tspecial = jQuery.event.special[ type ] || {};\\n\\n\\t\\t\\t// handleObj is passed to all event handlers\\n\\t\\t\\thandleObj = jQuery.extend( {\\n\\t\\t\\t\\ttype: type,\\n\\t\\t\\t\\torigType: origType,\\n\\t\\t\\t\\tdata: data,\\n\\t\\t\\t\\thandler: handler,\\n\\t\\t\\t\\tguid: handler.guid,\\n\\t\\t\\t\\tselector: selector,\\n\\t\\t\\t\\tneedsContext: selector && jQuery.expr.match.needsContext.test( selector ),\\n\\t\\t\\t\\tnamespace: namespaces.join( \\\".\\\" )\\n\\t\\t\\t}, handleObjIn );\\n\\n\\t\\t\\t// Init the event handler queue if we're the first\\n\\t\\t\\tif ( !( handlers = events[ type ] ) ) {\\n\\t\\t\\t\\thandlers = events[ type ] = [];\\n\\t\\t\\t\\thandlers.delegateCount = 0;\\n\\n\\t\\t\\t\\t// Only use addEventListener if the special events handler returns false\\n\\t\\t\\t\\tif ( !special.setup ||\\n\\t\\t\\t\\t\\tspecial.setup.call( elem, data, namespaces, eventHandle ) === false ) {\\n\\n\\t\\t\\t\\t\\tif ( elem.addEventListener ) {\\n\\t\\t\\t\\t\\t\\telem.addEventListener( type, eventHandle );\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( special.add ) {\\n\\t\\t\\t\\tspecial.add.call( elem, handleObj );\\n\\n\\t\\t\\t\\tif ( !handleObj.handler.guid ) {\\n\\t\\t\\t\\t\\thandleObj.handler.guid = handler.guid;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Add to the element's handler list, delegates in front\\n\\t\\t\\tif ( selector ) {\\n\\t\\t\\t\\thandlers.splice( handlers.delegateCount++, 0, handleObj );\\n\\t\\t\\t} else {\\n\\t\\t\\t\\thandlers.push( handleObj );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Keep track of which events have ever been used, for event optimization\\n\\t\\t\\tjQuery.event.global[ type ] = true;\\n\\t\\t}\\n\\n\\t},\\n\\n\\t// Detach an event or set of events from an element\\n\\tremove: function( elem, types, handler, selector, mappedTypes ) {\\n\\n\\t\\tvar j, origCount, tmp,\\n\\t\\t\\tevents, t, handleObj,\\n\\t\\t\\tspecial, handlers, type, namespaces, origType,\\n\\t\\t\\telemData = dataPriv.hasData( elem ) && dataPriv.get( elem );\\n\\n\\t\\tif ( !elemData || !( events = elemData.events ) ) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\t// Once for each type.namespace in types; type may be omitted\\n\\t\\ttypes = ( types || \\\"\\\" ).match( rnothtmlwhite ) || [ \\\"\\\" ];\\n\\t\\tt = types.length;\\n\\t\\twhile ( t-- ) {\\n\\t\\t\\ttmp = rtypenamespace.exec( types[ t ] ) || [];\\n\\t\\t\\ttype = origType = tmp[ 1 ];\\n\\t\\t\\tnamespaces = ( tmp[ 2 ] || \\\"\\\" ).split( \\\".\\\" ).sort();\\n\\n\\t\\t\\t// Unbind all events (on this namespace, if provided) for the element\\n\\t\\t\\tif ( !type ) {\\n\\t\\t\\t\\tfor ( type in events ) {\\n\\t\\t\\t\\t\\tjQuery.event.remove( elem, type + types[ t ], handler, selector, true );\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tspecial = jQuery.event.special[ type ] || {};\\n\\t\\t\\ttype = ( selector ? special.delegateType : special.bindType ) || type;\\n\\t\\t\\thandlers = events[ type ] || [];\\n\\t\\t\\ttmp = tmp[ 2 ] &&\\n\\t\\t\\t\\tnew RegExp( \\\"(^|\\\\\\\\.)\\\" + namespaces.join( \\\"\\\\\\\\.(?:.*\\\\\\\\.|)\\\" ) + \\\"(\\\\\\\\.|$)\\\" );\\n\\n\\t\\t\\t// Remove matching events\\n\\t\\t\\torigCount = j = handlers.length;\\n\\t\\t\\twhile ( j-- ) {\\n\\t\\t\\t\\thandleObj = handlers[ j ];\\n\\n\\t\\t\\t\\tif ( ( mappedTypes || origType === handleObj.origType ) &&\\n\\t\\t\\t\\t\\t( !handler || handler.guid === handleObj.guid ) &&\\n\\t\\t\\t\\t\\t( !tmp || tmp.test( handleObj.namespace ) ) &&\\n\\t\\t\\t\\t\\t( !selector || selector === handleObj.selector ||\\n\\t\\t\\t\\t\\t\\tselector === \\\"**\\\" && handleObj.selector ) ) {\\n\\t\\t\\t\\t\\thandlers.splice( j, 1 );\\n\\n\\t\\t\\t\\t\\tif ( handleObj.selector ) {\\n\\t\\t\\t\\t\\t\\thandlers.delegateCount--;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tif ( special.remove ) {\\n\\t\\t\\t\\t\\t\\tspecial.remove.call( elem, handleObj );\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Remove generic event handler if we removed something and no more handlers exist\\n\\t\\t\\t// (avoids potential for endless recursion during removal of special event handlers)\\n\\t\\t\\tif ( origCount && !handlers.length ) {\\n\\t\\t\\t\\tif ( !special.teardown ||\\n\\t\\t\\t\\t\\tspecial.teardown.call( elem, namespaces, elemData.handle ) === false ) {\\n\\n\\t\\t\\t\\t\\tjQuery.removeEvent( elem, type, elemData.handle );\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tdelete events[ type ];\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// Remove data and the expando if it's no longer used\\n\\t\\tif ( jQuery.isEmptyObject( events ) ) {\\n\\t\\t\\tdataPriv.remove( elem, \\\"handle events\\\" );\\n\\t\\t}\\n\\t},\\n\\n\\tdispatch: function( nativeEvent ) {\\n\\n\\t\\t// Make a writable jQuery.Event from the native event object\\n\\t\\tvar event = jQuery.event.fix( nativeEvent );\\n\\n\\t\\tvar i, j, ret, matched, handleObj, handlerQueue,\\n\\t\\t\\targs = new Array( arguments.length ),\\n\\t\\t\\thandlers = ( dataPriv.get( this, \\\"events\\\" ) || {} )[ event.type ] || [],\\n\\t\\t\\tspecial = jQuery.event.special[ event.type ] || {};\\n\\n\\t\\t// Use the fix-ed jQuery.Event rather than the (read-only) native event\\n\\t\\targs[ 0 ] = event;\\n\\n\\t\\tfor ( i = 1; i < arguments.length; i++ ) {\\n\\t\\t\\targs[ i ] = arguments[ i ];\\n\\t\\t}\\n\\n\\t\\tevent.delegateTarget = this;\\n\\n\\t\\t// Call the preDispatch hook for the mapped type, and let it bail if desired\\n\\t\\tif ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\t// Determine handlers\\n\\t\\thandlerQueue = jQuery.event.handlers.call( this, event, handlers );\\n\\n\\t\\t// Run delegates first; they may want to stop propagation beneath us\\n\\t\\ti = 0;\\n\\t\\twhile ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {\\n\\t\\t\\tevent.currentTarget = matched.elem;\\n\\n\\t\\t\\tj = 0;\\n\\t\\t\\twhile ( ( handleObj = matched.handlers[ j++ ] ) &&\\n\\t\\t\\t\\t!event.isImmediatePropagationStopped() ) {\\n\\n\\t\\t\\t\\t// If the event is namespaced, then each handler is only invoked if it is\\n\\t\\t\\t\\t// specially universal or its namespaces are a superset of the event's.\\n\\t\\t\\t\\tif ( !event.rnamespace || handleObj.namespace === false ||\\n\\t\\t\\t\\t\\tevent.rnamespace.test( handleObj.namespace ) ) {\\n\\n\\t\\t\\t\\t\\tevent.handleObj = handleObj;\\n\\t\\t\\t\\t\\tevent.data = handleObj.data;\\n\\n\\t\\t\\t\\t\\tret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||\\n\\t\\t\\t\\t\\t\\thandleObj.handler ).apply( matched.elem, args );\\n\\n\\t\\t\\t\\t\\tif ( ret !== undefined ) {\\n\\t\\t\\t\\t\\t\\tif ( ( event.result = ret ) === false ) {\\n\\t\\t\\t\\t\\t\\t\\tevent.preventDefault();\\n\\t\\t\\t\\t\\t\\t\\tevent.stopPropagation();\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// Call the postDispatch hook for the mapped type\\n\\t\\tif ( special.postDispatch ) {\\n\\t\\t\\tspecial.postDispatch.call( this, event );\\n\\t\\t}\\n\\n\\t\\treturn event.result;\\n\\t},\\n\\n\\thandlers: function( event, handlers ) {\\n\\t\\tvar i, handleObj, sel, matchedHandlers, matchedSelectors,\\n\\t\\t\\thandlerQueue = [],\\n\\t\\t\\tdelegateCount = handlers.delegateCount,\\n\\t\\t\\tcur = event.target;\\n\\n\\t\\t// Find delegate handlers\\n\\t\\tif ( delegateCount &&\\n\\n\\t\\t\\t// Support: IE <=9\\n\\t\\t\\t// Black-hole SVG <use> instance trees (trac-13180)\\n\\t\\t\\tcur.nodeType &&\\n\\n\\t\\t\\t// Support: Firefox <=42\\n\\t\\t\\t// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)\\n\\t\\t\\t// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click\\n\\t\\t\\t// Support: IE 11 only\\n\\t\\t\\t// ...but not arrow key \\\"clicks\\\" of radio inputs, which can have `button` -1 (gh-2343)\\n\\t\\t\\t!( event.type === \\\"click\\\" && event.button >= 1 ) ) {\\n\\n\\t\\t\\tfor ( ; cur !== this; cur = cur.parentNode || this ) {\\n\\n\\t\\t\\t\\t// Don't check non-elements (#13208)\\n\\t\\t\\t\\t// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\\n\\t\\t\\t\\tif ( cur.nodeType === 1 && !( event.type === \\\"click\\\" && cur.disabled === true ) ) {\\n\\t\\t\\t\\t\\tmatchedHandlers = [];\\n\\t\\t\\t\\t\\tmatchedSelectors = {};\\n\\t\\t\\t\\t\\tfor ( i = 0; i < delegateCount; i++ ) {\\n\\t\\t\\t\\t\\t\\thandleObj = handlers[ i ];\\n\\n\\t\\t\\t\\t\\t\\t// Don't conflict with Object.prototype properties (#13203)\\n\\t\\t\\t\\t\\t\\tsel = handleObj.selector + \\\" \\\";\\n\\n\\t\\t\\t\\t\\t\\tif ( matchedSelectors[ sel ] === undefined ) {\\n\\t\\t\\t\\t\\t\\t\\tmatchedSelectors[ sel ] = handleObj.needsContext ?\\n\\t\\t\\t\\t\\t\\t\\t\\tjQuery( sel, this ).index( cur ) > -1 :\\n\\t\\t\\t\\t\\t\\t\\t\\tjQuery.find( sel, this, null, [ cur ] ).length;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tif ( matchedSelectors[ sel ] ) {\\n\\t\\t\\t\\t\\t\\t\\tmatchedHandlers.push( handleObj );\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tif ( matchedHandlers.length ) {\\n\\t\\t\\t\\t\\t\\thandlerQueue.push( { elem: cur, handlers: matchedHandlers } );\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// Add the remaining (directly-bound) handlers\\n\\t\\tcur = this;\\n\\t\\tif ( delegateCount < handlers.length ) {\\n\\t\\t\\thandlerQueue.push( { elem: cur, handlers: handlers.slice( delegateCount ) } );\\n\\t\\t}\\n\\n\\t\\treturn handlerQueue;\\n\\t},\\n\\n\\taddProp: function( name, hook ) {\\n\\t\\tObject.defineProperty( jQuery.Event.prototype, name, {\\n\\t\\t\\tenumerable: true,\\n\\t\\t\\tconfigurable: true,\\n\\n\\t\\t\\tget: isFunction( hook ) ?\\n\\t\\t\\t\\tfunction() {\\n\\t\\t\\t\\t\\tif ( this.originalEvent ) {\\n\\t\\t\\t\\t\\t\\t\\treturn hook( this.originalEvent );\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t} :\\n\\t\\t\\t\\tfunction() {\\n\\t\\t\\t\\t\\tif ( this.originalEvent ) {\\n\\t\\t\\t\\t\\t\\t\\treturn this.originalEvent[ name ];\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t},\\n\\n\\t\\t\\tset: function( value ) {\\n\\t\\t\\t\\tObject.defineProperty( this, name, {\\n\\t\\t\\t\\t\\tenumerable: true,\\n\\t\\t\\t\\t\\tconfigurable: true,\\n\\t\\t\\t\\t\\twritable: true,\\n\\t\\t\\t\\t\\tvalue: value\\n\\t\\t\\t\\t} );\\n\\t\\t\\t}\\n\\t\\t} );\\n\\t},\\n\\n\\tfix: function( originalEvent ) {\\n\\t\\treturn originalEvent[ jQuery.expando ] ?\\n\\t\\t\\toriginalEvent :\\n\\t\\t\\tnew jQuery.Event( originalEvent );\\n\\t},\\n\\n\\tspecial: {\\n\\t\\tload: {\\n\\n\\t\\t\\t// Prevent triggered image.load events from bubbling to window.load\\n\\t\\t\\tnoBubble: true\\n\\t\\t},\\n\\t\\tclick: {\\n\\n\\t\\t\\t// Utilize native event to ensure correct state for checkable inputs\\n\\t\\t\\tsetup: function( data ) {\\n\\n\\t\\t\\t\\t// For mutual compressibility with _default, replace `this` access with a local var.\\n\\t\\t\\t\\t// `|| data` is dead code meant only to preserve the variable through minification.\\n\\t\\t\\t\\tvar el = this || data;\\n\\n\\t\\t\\t\\t// Claim the first handler\\n\\t\\t\\t\\tif ( rcheckableType.test( el.type ) &&\\n\\t\\t\\t\\t\\tel.click && nodeName( el, \\\"input\\\" ) ) {\\n\\n\\t\\t\\t\\t\\t// dataPriv.set( el, \\\"click\\\", ... )\\n\\t\\t\\t\\t\\tleverageNative( el, \\\"click\\\", returnTrue );\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Return false to allow normal processing in the caller\\n\\t\\t\\t\\treturn false;\\n\\t\\t\\t},\\n\\t\\t\\ttrigger: function( data ) {\\n\\n\\t\\t\\t\\t// For mutual compressibility with _default, replace `this` access with a local var.\\n\\t\\t\\t\\t// `|| data` is dead code meant only to preserve the variable through minification.\\n\\t\\t\\t\\tvar el = this || data;\\n\\n\\t\\t\\t\\t// Force setup before triggering a click\\n\\t\\t\\t\\tif ( rcheckableType.test( el.type ) &&\\n\\t\\t\\t\\t\\tel.click && nodeName( el, \\\"input\\\" ) ) {\\n\\n\\t\\t\\t\\t\\tleverageNative( el, \\\"click\\\" );\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Return non-false to allow normal event-path propagation\\n\\t\\t\\t\\treturn true;\\n\\t\\t\\t},\\n\\n\\t\\t\\t// For cross-browser consistency, suppress native .click() on links\\n\\t\\t\\t// Also prevent it if we're currently inside a leveraged native-event stack\\n\\t\\t\\t_default: function( event ) {\\n\\t\\t\\t\\tvar target = event.target;\\n\\t\\t\\t\\treturn rcheckableType.test( target.type ) &&\\n\\t\\t\\t\\t\\ttarget.click && nodeName( target, \\\"input\\\" ) &&\\n\\t\\t\\t\\t\\tdataPriv.get( target, \\\"click\\\" ) ||\\n\\t\\t\\t\\t\\tnodeName( target, \\\"a\\\" );\\n\\t\\t\\t}\\n\\t\\t},\\n\\n\\t\\tbeforeunload: {\\n\\t\\t\\tpostDispatch: function( event ) {\\n\\n\\t\\t\\t\\t// Support: Firefox 20+\\n\\t\\t\\t\\t// Firefox doesn't alert if the returnValue field is not set.\\n\\t\\t\\t\\tif ( event.result !== undefined && event.originalEvent ) {\\n\\t\\t\\t\\t\\tevent.originalEvent.returnValue = event.result;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n};\\n\\n// Ensure the presence of an event listener that handles manually-triggered\\n// synthetic events by interrupting progress until reinvoked in response to\\n// *native* events that it fires directly, ensuring that state changes have\\n// already occurred before other listeners are invoked.\\nfunction leverageNative( el, type, expectSync ) {\\n\\n\\t// Missing expectSync indicates a trigger call, which must force setup through jQuery.event.add\\n\\tif ( !expectSync ) {\\n\\t\\tif ( dataPriv.get( el, type ) === undefined ) {\\n\\t\\t\\tjQuery.event.add( el, type, returnTrue );\\n\\t\\t}\\n\\t\\treturn;\\n\\t}\\n\\n\\t// Register the controller as a special universal handler for all event namespaces\\n\\tdataPriv.set( el, type, false );\\n\\tjQuery.event.add( el, type, {\\n\\t\\tnamespace: false,\\n\\t\\thandler: function( event ) {\\n\\t\\t\\tvar notAsync, result,\\n\\t\\t\\t\\tsaved = dataPriv.get( this, type );\\n\\n\\t\\t\\tif ( ( event.isTrigger & 1 ) && this[ type ] ) {\\n\\n\\t\\t\\t\\t// Interrupt processing of the outer synthetic .trigger()ed event\\n\\t\\t\\t\\t// Saved data should be false in such cases, but might be a leftover capture object\\n\\t\\t\\t\\t// from an async native handler (gh-4350)\\n\\t\\t\\t\\tif ( !saved.length ) {\\n\\n\\t\\t\\t\\t\\t// Store arguments for use when handling the inner native event\\n\\t\\t\\t\\t\\t// There will always be at least one argument (an event object), so this array\\n\\t\\t\\t\\t\\t// will not be confused with a leftover capture object.\\n\\t\\t\\t\\t\\tsaved = slice.call( arguments );\\n\\t\\t\\t\\t\\tdataPriv.set( this, type, saved );\\n\\n\\t\\t\\t\\t\\t// Trigger the native event and capture its result\\n\\t\\t\\t\\t\\t// Support: IE <=9 - 11+\\n\\t\\t\\t\\t\\t// focus() and blur() are asynchronous\\n\\t\\t\\t\\t\\tnotAsync = expectSync( this, type );\\n\\t\\t\\t\\t\\tthis[ type ]();\\n\\t\\t\\t\\t\\tresult = dataPriv.get( this, type );\\n\\t\\t\\t\\t\\tif ( saved !== result || notAsync ) {\\n\\t\\t\\t\\t\\t\\tdataPriv.set( this, type, false );\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\tresult = {};\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tif ( saved !== result ) {\\n\\n\\t\\t\\t\\t\\t\\t// Cancel the outer synthetic event\\n\\t\\t\\t\\t\\t\\tevent.stopImmediatePropagation();\\n\\t\\t\\t\\t\\t\\tevent.preventDefault();\\n\\t\\t\\t\\t\\t\\treturn result.value;\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// If this is an inner synthetic event for an event with a bubbling surrogate\\n\\t\\t\\t\\t// (focus or blur), assume that the surrogate already propagated from triggering the\\n\\t\\t\\t\\t// native event and prevent that from happening again here.\\n\\t\\t\\t\\t// This technically gets the ordering wrong w.r.t. to `.trigger()` (in which the\\n\\t\\t\\t\\t// bubbling surrogate propagates *after* the non-bubbling base), but that seems\\n\\t\\t\\t\\t// less bad than duplication.\\n\\t\\t\\t\\t} else if ( ( jQuery.event.special[ type ] || {} ).delegateType ) {\\n\\t\\t\\t\\t\\tevent.stopPropagation();\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t// If this is a native event triggered above, everything is now in order\\n\\t\\t\\t// Fire an inner synthetic event with the original arguments\\n\\t\\t\\t} else if ( saved.length ) {\\n\\n\\t\\t\\t\\t// ...and capture the result\\n\\t\\t\\t\\tdataPriv.set( this, type, {\\n\\t\\t\\t\\t\\tvalue: jQuery.event.trigger(\\n\\n\\t\\t\\t\\t\\t\\t// Support: IE <=9 - 11+\\n\\t\\t\\t\\t\\t\\t// Extend with the prototype to reset the above stopImmediatePropagation()\\n\\t\\t\\t\\t\\t\\tjQuery.extend( saved[ 0 ], jQuery.Event.prototype ),\\n\\t\\t\\t\\t\\t\\tsaved.slice( 1 ),\\n\\t\\t\\t\\t\\t\\tthis\\n\\t\\t\\t\\t\\t)\\n\\t\\t\\t\\t} );\\n\\n\\t\\t\\t\\t// Abort handling of the native event\\n\\t\\t\\t\\tevent.stopImmediatePropagation();\\n\\t\\t\\t}\\n\\t\\t}\\n\\t} );\\n}\\n\\njQuery.removeEvent = function( elem, type, handle ) {\\n\\n\\t// This \\\"if\\\" is needed for plain objects\\n\\tif ( elem.removeEventListener ) {\\n\\t\\telem.removeEventListener( type, handle );\\n\\t}\\n};\\n\\njQuery.Event = function( src, props ) {\\n\\n\\t// Allow instantiation without the 'new' keyword\\n\\tif ( !( this instanceof jQuery.Event ) ) {\\n\\t\\treturn new jQuery.Event( src, props );\\n\\t}\\n\\n\\t// Event object\\n\\tif ( src && src.type ) {\\n\\t\\tthis.originalEvent = src;\\n\\t\\tthis.type = src.type;\\n\\n\\t\\t// Events bubbling up the document may have been marked as prevented\\n\\t\\t// by a handler lower down the tree; reflect the correct value.\\n\\t\\tthis.isDefaultPrevented = src.defaultPrevented ||\\n\\t\\t\\t\\tsrc.defaultPrevented === undefined &&\\n\\n\\t\\t\\t\\t// Support: Android <=2.3 only\\n\\t\\t\\t\\tsrc.returnValue === false ?\\n\\t\\t\\treturnTrue :\\n\\t\\t\\treturnFalse;\\n\\n\\t\\t// Create target properties\\n\\t\\t// Support: Safari <=6 - 7 only\\n\\t\\t// Target should not be a text node (#504, #13143)\\n\\t\\tthis.target = ( src.target && src.target.nodeType === 3 ) ?\\n\\t\\t\\tsrc.target.parentNode :\\n\\t\\t\\tsrc.target;\\n\\n\\t\\tthis.currentTarget = src.currentTarget;\\n\\t\\tthis.relatedTarget = src.relatedTarget;\\n\\n\\t// Event type\\n\\t} else {\\n\\t\\tthis.type = src;\\n\\t}\\n\\n\\t// Put explicitly provided properties onto the event object\\n\\tif ( props ) {\\n\\t\\tjQuery.extend( this, props );\\n\\t}\\n\\n\\t// Create a timestamp if incoming event doesn't have one\\n\\tthis.timeStamp = src && src.timeStamp || Date.now();\\n\\n\\t// Mark it as fixed\\n\\tthis[ jQuery.expando ] = true;\\n};\\n\\n// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\\n// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\\njQuery.Event.prototype = {\\n\\tconstructor: jQuery.Event,\\n\\tisDefaultPrevented: returnFalse,\\n\\tisPropagationStopped: returnFalse,\\n\\tisImmediatePropagationStopped: returnFalse,\\n\\tisSimulated: false,\\n\\n\\tpreventDefault: function() {\\n\\t\\tvar e = this.originalEvent;\\n\\n\\t\\tthis.isDefaultPrevented = returnTrue;\\n\\n\\t\\tif ( e && !this.isSimulated ) {\\n\\t\\t\\te.preventDefault();\\n\\t\\t}\\n\\t},\\n\\tstopPropagation: function() {\\n\\t\\tvar e = this.originalEvent;\\n\\n\\t\\tthis.isPropagationStopped = returnTrue;\\n\\n\\t\\tif ( e && !this.isSimulated ) {\\n\\t\\t\\te.stopPropagation();\\n\\t\\t}\\n\\t},\\n\\tstopImmediatePropagation: function() {\\n\\t\\tvar e = this.originalEvent;\\n\\n\\t\\tthis.isImmediatePropagationStopped = returnTrue;\\n\\n\\t\\tif ( e && !this.isSimulated ) {\\n\\t\\t\\te.stopImmediatePropagation();\\n\\t\\t}\\n\\n\\t\\tthis.stopPropagation();\\n\\t}\\n};\\n\\n// Includes all common event props including KeyEvent and MouseEvent specific props\\njQuery.each( {\\n\\taltKey: true,\\n\\tbubbles: true,\\n\\tcancelable: true,\\n\\tchangedTouches: true,\\n\\tctrlKey: true,\\n\\tdetail: true,\\n\\teventPhase: true,\\n\\tmetaKey: true,\\n\\tpageX: true,\\n\\tpageY: true,\\n\\tshiftKey: true,\\n\\tview: true,\\n\\t\\\"char\\\": true,\\n\\tcode: true,\\n\\tcharCode: true,\\n\\tkey: true,\\n\\tkeyCode: true,\\n\\tbutton: true,\\n\\tbuttons: true,\\n\\tclientX: true,\\n\\tclientY: true,\\n\\toffsetX: true,\\n\\toffsetY: true,\\n\\tpointerId: true,\\n\\tpointerType: true,\\n\\tscreenX: true,\\n\\tscreenY: true,\\n\\ttargetTouches: true,\\n\\ttoElement: true,\\n\\ttouches: true,\\n\\n\\twhich: function( event ) {\\n\\t\\tvar button = event.button;\\n\\n\\t\\t// Add which for key events\\n\\t\\tif ( event.which == null && rkeyEvent.test( event.type ) ) {\\n\\t\\t\\treturn event.charCode != null ? event.charCode : event.keyCode;\\n\\t\\t}\\n\\n\\t\\t// Add which for click: 1 === left; 2 === middle; 3 === right\\n\\t\\tif ( !event.which && button !== undefined && rmouseEvent.test( event.type ) ) {\\n\\t\\t\\tif ( button & 1 ) {\\n\\t\\t\\t\\treturn 1;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( button & 2 ) {\\n\\t\\t\\t\\treturn 3;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( button & 4 ) {\\n\\t\\t\\t\\treturn 2;\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn 0;\\n\\t\\t}\\n\\n\\t\\treturn event.which;\\n\\t}\\n}, jQuery.event.addProp );\\n\\njQuery.each( { focus: \\\"focusin\\\", blur: \\\"focusout\\\" }, function( type, delegateType ) {\\n\\tjQuery.event.special[ type ] = {\\n\\n\\t\\t// Utilize native event if possible so blur/focus sequence is correct\\n\\t\\tsetup: function() {\\n\\n\\t\\t\\t// Claim the first handler\\n\\t\\t\\t// dataPriv.set( this, \\\"focus\\\", ... )\\n\\t\\t\\t// dataPriv.set( this, \\\"blur\\\", ... )\\n\\t\\t\\tleverageNative( this, type, expectSync );\\n\\n\\t\\t\\t// Return false to allow normal processing in the caller\\n\\t\\t\\treturn false;\\n\\t\\t},\\n\\t\\ttrigger: function() {\\n\\n\\t\\t\\t// Force setup before trigger\\n\\t\\t\\tleverageNative( this, type );\\n\\n\\t\\t\\t// Return non-false to allow normal event-path propagation\\n\\t\\t\\treturn true;\\n\\t\\t},\\n\\n\\t\\tdelegateType: delegateType\\n\\t};\\n} );\\n\\n// Create mouseenter/leave events using mouseover/out and event-time checks\\n// so that event delegation works in jQuery.\\n// Do the same for pointerenter/pointerleave and pointerover/pointerout\\n//\\n// Support: Safari 7 only\\n// Safari sends mouseenter too often; see:\\n// https://bugs.chromium.org/p/chromium/issues/detail?id=470258\\n// for the description of the bug (it existed in older Chrome versions as well).\\njQuery.each( {\\n\\tmouseenter: \\\"mouseover\\\",\\n\\tmouseleave: \\\"mouseout\\\",\\n\\tpointerenter: \\\"pointerover\\\",\\n\\tpointerleave: \\\"pointerout\\\"\\n}, function( orig, fix ) {\\n\\tjQuery.event.special[ orig ] = {\\n\\t\\tdelegateType: fix,\\n\\t\\tbindType: fix,\\n\\n\\t\\thandle: function( event ) {\\n\\t\\t\\tvar ret,\\n\\t\\t\\t\\ttarget = this,\\n\\t\\t\\t\\trelated = event.relatedTarget,\\n\\t\\t\\t\\thandleObj = event.handleObj;\\n\\n\\t\\t\\t// For mouseenter/leave call the handler if related is outside the target.\\n\\t\\t\\t// NB: No relatedTarget if the mouse left/entered the browser window\\n\\t\\t\\tif ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {\\n\\t\\t\\t\\tevent.type = handleObj.origType;\\n\\t\\t\\t\\tret = handleObj.handler.apply( this, arguments );\\n\\t\\t\\t\\tevent.type = fix;\\n\\t\\t\\t}\\n\\t\\t\\treturn ret;\\n\\t\\t}\\n\\t};\\n} );\\n\\njQuery.fn.extend( {\\n\\n\\ton: function( types, selector, data, fn ) {\\n\\t\\treturn on( this, types, selector, data, fn );\\n\\t},\\n\\tone: function( types, selector, data, fn ) {\\n\\t\\treturn on( this, types, selector, data, fn, 1 );\\n\\t},\\n\\toff: function( types, selector, fn ) {\\n\\t\\tvar handleObj, type;\\n\\t\\tif ( types && types.preventDefault && types.handleObj ) {\\n\\n\\t\\t\\t// ( event )  dispatched jQuery.Event\\n\\t\\t\\thandleObj = types.handleObj;\\n\\t\\t\\tjQuery( types.delegateTarget ).off(\\n\\t\\t\\t\\thandleObj.namespace ?\\n\\t\\t\\t\\t\\thandleObj.origType + \\\".\\\" + handleObj.namespace :\\n\\t\\t\\t\\t\\thandleObj.origType,\\n\\t\\t\\t\\thandleObj.selector,\\n\\t\\t\\t\\thandleObj.handler\\n\\t\\t\\t);\\n\\t\\t\\treturn this;\\n\\t\\t}\\n\\t\\tif ( typeof types === \\\"object\\\" ) {\\n\\n\\t\\t\\t// ( types-object [, selector] )\\n\\t\\t\\tfor ( type in types ) {\\n\\t\\t\\t\\tthis.off( type, selector, types[ type ] );\\n\\t\\t\\t}\\n\\t\\t\\treturn this;\\n\\t\\t}\\n\\t\\tif ( selector === false || typeof selector === \\\"function\\\" ) {\\n\\n\\t\\t\\t// ( types [, fn] )\\n\\t\\t\\tfn = selector;\\n\\t\\t\\tselector = undefined;\\n\\t\\t}\\n\\t\\tif ( fn === false ) {\\n\\t\\t\\tfn = returnFalse;\\n\\t\\t}\\n\\t\\treturn this.each( function() {\\n\\t\\t\\tjQuery.event.remove( this, types, fn, selector );\\n\\t\\t} );\\n\\t}\\n} );\\n\\n\\nvar\\n\\n\\t/* eslint-disable max-len */\\n\\n\\t// See https://github.com/eslint/eslint/issues/3229\\n\\trxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\\\\/\\\\0>\\\\x20\\\\t\\\\r\\\\n\\\\f]*)[^>]*)\\\\/>/gi,\\n\\n\\t/* eslint-enable */\\n\\n\\t// Support: IE <=10 - 11, Edge 12 - 13 only\\n\\t// In IE/Edge using regex groups here causes severe slowdowns.\\n\\t// See https://connect.microsoft.com/IE/feedback/details/1736512/\\n\\trnoInnerhtml = /<script|<style|<link/i,\\n\\n\\t// checked=\\\"checked\\\" or checked\\n\\trchecked = /checked\\\\s*(?:[^=]|=\\\\s*.checked.)/i,\\n\\trcleanScript = /^\\\\s*<!(?:\\\\[CDATA\\\\[|--)|(?:\\\\]\\\\]|--)>\\\\s*$/g;\\n\\n// Prefer a tbody over its parent table for containing new rows\\nfunction manipulationTarget( elem, content ) {\\n\\tif ( nodeName( elem, \\\"table\\\" ) &&\\n\\t\\tnodeName( content.nodeType !== 11 ? content : content.firstChild, \\\"tr\\\" ) ) {\\n\\n\\t\\treturn jQuery( elem ).children( \\\"tbody\\\" )[ 0 ] || elem;\\n\\t}\\n\\n\\treturn elem;\\n}\\n\\n// Replace/restore the type attribute of script elements for safe DOM manipulation\\nfunction disableScript( elem ) {\\n\\telem.type = ( elem.getAttribute( \\\"type\\\" ) !== null ) + \\\"/\\\" + elem.type;\\n\\treturn elem;\\n}\\nfunction restoreScript( elem ) {\\n\\tif ( ( elem.type || \\\"\\\" ).slice( 0, 5 ) === \\\"true/\\\" ) {\\n\\t\\telem.type = elem.type.slice( 5 );\\n\\t} else {\\n\\t\\telem.removeAttribute( \\\"type\\\" );\\n\\t}\\n\\n\\treturn elem;\\n}\\n\\nfunction cloneCopyEvent( src, dest ) {\\n\\tvar i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;\\n\\n\\tif ( dest.nodeType !== 1 ) {\\n\\t\\treturn;\\n\\t}\\n\\n\\t// 1. Copy private data: events, handlers, etc.\\n\\tif ( dataPriv.hasData( src ) ) {\\n\\t\\tpdataOld = dataPriv.access( src );\\n\\t\\tpdataCur = dataPriv.set( dest, pdataOld );\\n\\t\\tevents = pdataOld.events;\\n\\n\\t\\tif ( events ) {\\n\\t\\t\\tdelete pdataCur.handle;\\n\\t\\t\\tpdataCur.events = {};\\n\\n\\t\\t\\tfor ( type in events ) {\\n\\t\\t\\t\\tfor ( i = 0, l = events[ type ].length; i < l; i++ ) {\\n\\t\\t\\t\\t\\tjQuery.event.add( dest, type, events[ type ][ i ] );\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\t// 2. Copy user data\\n\\tif ( dataUser.hasData( src ) ) {\\n\\t\\tudataOld = dataUser.access( src );\\n\\t\\tudataCur = jQuery.extend( {}, udataOld );\\n\\n\\t\\tdataUser.set( dest, udataCur );\\n\\t}\\n}\\n\\n// Fix IE bugs, see support tests\\nfunction fixInput( src, dest ) {\\n\\tvar nodeName = dest.nodeName.toLowerCase();\\n\\n\\t// Fails to persist the checked state of a cloned checkbox or radio button.\\n\\tif ( nodeName === \\\"input\\\" && rcheckableType.test( src.type ) ) {\\n\\t\\tdest.checked = src.checked;\\n\\n\\t// Fails to return the selected option to the default selected state when cloning options\\n\\t} else if ( nodeName === \\\"input\\\" || nodeName === \\\"textarea\\\" ) {\\n\\t\\tdest.defaultValue = src.defaultValue;\\n\\t}\\n}\\n\\nfunction domManip( collection, args, callback, ignored ) {\\n\\n\\t// Flatten any nested arrays\\n\\targs = concat.apply( [], args );\\n\\n\\tvar fragment, first, scripts, hasScripts, node, doc,\\n\\t\\ti = 0,\\n\\t\\tl = collection.length,\\n\\t\\tiNoClone = l - 1,\\n\\t\\tvalue = args[ 0 ],\\n\\t\\tvalueIsFunction = isFunction( value );\\n\\n\\t// We can't cloneNode fragments that contain checked, in WebKit\\n\\tif ( valueIsFunction ||\\n\\t\\t\\t( l > 1 && typeof value === \\\"string\\\" &&\\n\\t\\t\\t\\t!support.checkClone && rchecked.test( value ) ) ) {\\n\\t\\treturn collection.each( function( index ) {\\n\\t\\t\\tvar self = collection.eq( index );\\n\\t\\t\\tif ( valueIsFunction ) {\\n\\t\\t\\t\\targs[ 0 ] = value.call( this, index, self.html() );\\n\\t\\t\\t}\\n\\t\\t\\tdomManip( self, args, callback, ignored );\\n\\t\\t} );\\n\\t}\\n\\n\\tif ( l ) {\\n\\t\\tfragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );\\n\\t\\tfirst = fragment.firstChild;\\n\\n\\t\\tif ( fragment.childNodes.length === 1 ) {\\n\\t\\t\\tfragment = first;\\n\\t\\t}\\n\\n\\t\\t// Require either new content or an interest in ignored elements to invoke the callback\\n\\t\\tif ( first || ignored ) {\\n\\t\\t\\tscripts = jQuery.map( getAll( fragment, \\\"script\\\" ), disableScript );\\n\\t\\t\\thasScripts = scripts.length;\\n\\n\\t\\t\\t// Use the original fragment for the last item\\n\\t\\t\\t// instead of the first because it can end up\\n\\t\\t\\t// being emptied incorrectly in certain situations (#8070).\\n\\t\\t\\tfor ( ; i < l; i++ ) {\\n\\t\\t\\t\\tnode = fragment;\\n\\n\\t\\t\\t\\tif ( i !== iNoClone ) {\\n\\t\\t\\t\\t\\tnode = jQuery.clone( node, true, true );\\n\\n\\t\\t\\t\\t\\t// Keep references to cloned scripts for later restoration\\n\\t\\t\\t\\t\\tif ( hasScripts ) {\\n\\n\\t\\t\\t\\t\\t\\t// Support: Android <=4.0 only, PhantomJS 1 only\\n\\t\\t\\t\\t\\t\\t// push.apply(_, arraylike) throws on ancient WebKit\\n\\t\\t\\t\\t\\t\\tjQuery.merge( scripts, getAll( node, \\\"script\\\" ) );\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tcallback.call( collection[ i ], node, i );\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( hasScripts ) {\\n\\t\\t\\t\\tdoc = scripts[ scripts.length - 1 ].ownerDocument;\\n\\n\\t\\t\\t\\t// Reenable scripts\\n\\t\\t\\t\\tjQuery.map( scripts, restoreScript );\\n\\n\\t\\t\\t\\t// Evaluate executable scripts on first document insertion\\n\\t\\t\\t\\tfor ( i = 0; i < hasScripts; i++ ) {\\n\\t\\t\\t\\t\\tnode = scripts[ i ];\\n\\t\\t\\t\\t\\tif ( rscriptType.test( node.type || \\\"\\\" ) &&\\n\\t\\t\\t\\t\\t\\t!dataPriv.access( node, \\\"globalEval\\\" ) &&\\n\\t\\t\\t\\t\\t\\tjQuery.contains( doc, node ) ) {\\n\\n\\t\\t\\t\\t\\t\\tif ( node.src && ( node.type || \\\"\\\" ).toLowerCase()  !== \\\"module\\\" ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t// Optional AJAX dependency, but won't run scripts if not present\\n\\t\\t\\t\\t\\t\\t\\tif ( jQuery._evalUrl && !node.noModule ) {\\n\\t\\t\\t\\t\\t\\t\\t\\tjQuery._evalUrl( node.src, {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tnonce: node.nonce || node.getAttribute( \\\"nonce\\\" )\\n\\t\\t\\t\\t\\t\\t\\t\\t} );\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\tDOMEval( node.textContent.replace( rcleanScript, \\\"\\\" ), node, doc );\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\treturn collection;\\n}\\n\\nfunction remove( elem, selector, keepData ) {\\n\\tvar node,\\n\\t\\tnodes = selector ? jQuery.filter( selector, elem ) : elem,\\n\\t\\ti = 0;\\n\\n\\tfor ( ; ( node = nodes[ i ] ) != null; i++ ) {\\n\\t\\tif ( !keepData && node.nodeType === 1 ) {\\n\\t\\t\\tjQuery.cleanData( getAll( node ) );\\n\\t\\t}\\n\\n\\t\\tif ( node.parentNode ) {\\n\\t\\t\\tif ( keepData && isAttached( node ) ) {\\n\\t\\t\\t\\tsetGlobalEval( getAll( node, \\\"script\\\" ) );\\n\\t\\t\\t}\\n\\t\\t\\tnode.parentNode.removeChild( node );\\n\\t\\t}\\n\\t}\\n\\n\\treturn elem;\\n}\\n\\njQuery.extend( {\\n\\thtmlPrefilter: function( html ) {\\n\\t\\treturn html.replace( rxhtmlTag, \\\"<$1></$2>\\\" );\\n\\t},\\n\\n\\tclone: function( elem, dataAndEvents, deepDataAndEvents ) {\\n\\t\\tvar i, l, srcElements, destElements,\\n\\t\\t\\tclone = elem.cloneNode( true ),\\n\\t\\t\\tinPage = isAttached( elem );\\n\\n\\t\\t// Fix IE cloning issues\\n\\t\\tif ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&\\n\\t\\t\\t\\t!jQuery.isXMLDoc( elem ) ) {\\n\\n\\t\\t\\t// We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2\\n\\t\\t\\tdestElements = getAll( clone );\\n\\t\\t\\tsrcElements = getAll( elem );\\n\\n\\t\\t\\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\\n\\t\\t\\t\\tfixInput( srcElements[ i ], destElements[ i ] );\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// Copy the events from the original to the clone\\n\\t\\tif ( dataAndEvents ) {\\n\\t\\t\\tif ( deepDataAndEvents ) {\\n\\t\\t\\t\\tsrcElements = srcElements || getAll( elem );\\n\\t\\t\\t\\tdestElements = destElements || getAll( clone );\\n\\n\\t\\t\\t\\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\\n\\t\\t\\t\\t\\tcloneCopyEvent( srcElements[ i ], destElements[ i ] );\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tcloneCopyEvent( elem, clone );\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// Preserve script evaluation history\\n\\t\\tdestElements = getAll( clone, \\\"script\\\" );\\n\\t\\tif ( destElements.length > 0 ) {\\n\\t\\t\\tsetGlobalEval( destElements, !inPage && getAll( elem, \\\"script\\\" ) );\\n\\t\\t}\\n\\n\\t\\t// Return the cloned set\\n\\t\\treturn clone;\\n\\t},\\n\\n\\tcleanData: function( elems ) {\\n\\t\\tvar data, elem, type,\\n\\t\\t\\tspecial = jQuery.event.special,\\n\\t\\t\\ti = 0;\\n\\n\\t\\tfor ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {\\n\\t\\t\\tif ( acceptData( elem ) ) {\\n\\t\\t\\t\\tif ( ( data = elem[ dataPriv.expando ] ) ) {\\n\\t\\t\\t\\t\\tif ( data.events ) {\\n\\t\\t\\t\\t\\t\\tfor ( type in data.events ) {\\n\\t\\t\\t\\t\\t\\t\\tif ( special[ type ] ) {\\n\\t\\t\\t\\t\\t\\t\\t\\tjQuery.event.remove( elem, type );\\n\\n\\t\\t\\t\\t\\t\\t\\t// This is a shortcut to avoid jQuery.event.remove's overhead\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tjQuery.removeEvent( elem, type, data.handle );\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t// Support: Chrome <=35 - 45+\\n\\t\\t\\t\\t\\t// Assign undefined instead of using delete, see Data#remove\\n\\t\\t\\t\\t\\telem[ dataPriv.expando ] = undefined;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tif ( elem[ dataUser.expando ] ) {\\n\\n\\t\\t\\t\\t\\t// Support: Chrome <=35 - 45+\\n\\t\\t\\t\\t\\t// Assign undefined instead of using delete, see Data#remove\\n\\t\\t\\t\\t\\telem[ dataUser.expando ] = undefined;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n} );\\n\\njQuery.fn.extend( {\\n\\tdetach: function( selector ) {\\n\\t\\treturn remove( this, selector, true );\\n\\t},\\n\\n\\tremove: function( selector ) {\\n\\t\\treturn remove( this, selector );\\n\\t},\\n\\n\\ttext: function( value ) {\\n\\t\\treturn access( this, function( value ) {\\n\\t\\t\\treturn value === undefined ?\\n\\t\\t\\t\\tjQuery.text( this ) :\\n\\t\\t\\t\\tthis.empty().each( function() {\\n\\t\\t\\t\\t\\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\\n\\t\\t\\t\\t\\t\\tthis.textContent = value;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t} );\\n\\t\\t}, null, value, arguments.length );\\n\\t},\\n\\n\\tappend: function() {\\n\\t\\treturn domManip( this, arguments, function( elem ) {\\n\\t\\t\\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\\n\\t\\t\\t\\tvar target = manipulationTarget( this, elem );\\n\\t\\t\\t\\ttarget.appendChild( elem );\\n\\t\\t\\t}\\n\\t\\t} );\\n\\t},\\n\\n\\tprepend: function() {\\n\\t\\treturn domManip( this, arguments, function( elem ) {\\n\\t\\t\\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\\n\\t\\t\\t\\tvar target = manipulationTarget( this, elem );\\n\\t\\t\\t\\ttarget.insertBefore( elem, target.firstChild );\\n\\t\\t\\t}\\n\\t\\t} );\\n\\t},\\n\\n\\tbefore: function() {\\n\\t\\treturn domManip( this, arguments, function( elem ) {\\n\\t\\t\\tif ( this.parentNode ) {\\n\\t\\t\\t\\tthis.parentNode.insertBefore( elem, this );\\n\\t\\t\\t}\\n\\t\\t} );\\n\\t},\\n\\n\\tafter: function() {\\n\\t\\treturn domManip( this, arguments, function( elem ) {\\n\\t\\t\\tif ( this.parentNode ) {\\n\\t\\t\\t\\tthis.parentNode.insertBefore( elem, this.nextSibling );\\n\\t\\t\\t}\\n\\t\\t} );\\n\\t},\\n\\n\\tempty: function() {\\n\\t\\tvar elem,\\n\\t\\t\\ti = 0;\\n\\n\\t\\tfor ( ; ( elem = this[ i ] ) != null; i++ ) {\\n\\t\\t\\tif ( elem.nodeType === 1 ) {\\n\\n\\t\\t\\t\\t// Prevent memory leaks\\n\\t\\t\\t\\tjQuery.cleanData( getAll( elem, false ) );\\n\\n\\t\\t\\t\\t// Remove any remaining nodes\\n\\t\\t\\t\\telem.textContent = \\\"\\\";\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn this;\\n\\t},\\n\\n\\tclone: function( dataAndEvents, deepDataAndEvents ) {\\n\\t\\tdataAndEvents = dataAndEvents == null ? false : dataAndEvents;\\n\\t\\tdeepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\\n\\n\\t\\treturn this.map( function() {\\n\\t\\t\\treturn jQuery.clone( this, dataAndEvents, deepDataAndEvents );\\n\\t\\t} );\\n\\t},\\n\\n\\thtml: function( value ) {\\n\\t\\treturn access( this, function( value ) {\\n\\t\\t\\tvar elem = this[ 0 ] || {},\\n\\t\\t\\t\\ti = 0,\\n\\t\\t\\t\\tl = this.length;\\n\\n\\t\\t\\tif ( value === undefined && elem.nodeType === 1 ) {\\n\\t\\t\\t\\treturn elem.innerHTML;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// See if we can take a shortcut and just use innerHTML\\n\\t\\t\\tif ( typeof value === \\\"string\\\" && !rnoInnerhtml.test( value ) &&\\n\\t\\t\\t\\t!wrapMap[ ( rtagName.exec( value ) || [ \\\"\\\", \\\"\\\" ] )[ 1 ].toLowerCase() ] ) {\\n\\n\\t\\t\\t\\tvalue = jQuery.htmlPrefilter( value );\\n\\n\\t\\t\\t\\ttry {\\n\\t\\t\\t\\t\\tfor ( ; i < l; i++ ) {\\n\\t\\t\\t\\t\\t\\telem = this[ i ] || {};\\n\\n\\t\\t\\t\\t\\t\\t// Remove element nodes and prevent memory leaks\\n\\t\\t\\t\\t\\t\\tif ( elem.nodeType === 1 ) {\\n\\t\\t\\t\\t\\t\\t\\tjQuery.cleanData( getAll( elem, false ) );\\n\\t\\t\\t\\t\\t\\t\\telem.innerHTML = value;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\telem = 0;\\n\\n\\t\\t\\t\\t// If using innerHTML throws an exception, use the fallback method\\n\\t\\t\\t\\t} catch ( e ) {}\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( elem ) {\\n\\t\\t\\t\\tthis.empty().append( value );\\n\\t\\t\\t}\\n\\t\\t}, null, value, arguments.length );\\n\\t},\\n\\n\\treplaceWith: function() {\\n\\t\\tvar ignored = [];\\n\\n\\t\\t// Make the changes, replacing each non-ignored context element with the new content\\n\\t\\treturn domManip( this, arguments, function( elem ) {\\n\\t\\t\\tvar parent = this.parentNode;\\n\\n\\t\\t\\tif ( jQuery.inArray( this, ignored ) < 0 ) {\\n\\t\\t\\t\\tjQuery.cleanData( getAll( this ) );\\n\\t\\t\\t\\tif ( parent ) {\\n\\t\\t\\t\\t\\tparent.replaceChild( elem, this );\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t// Force callback invocation\\n\\t\\t}, ignored );\\n\\t}\\n} );\\n\\njQuery.each( {\\n\\tappendTo: \\\"append\\\",\\n\\tprependTo: \\\"prepend\\\",\\n\\tinsertBefore: \\\"before\\\",\\n\\tinsertAfter: \\\"after\\\",\\n\\treplaceAll: \\\"replaceWith\\\"\\n}, function( name, original ) {\\n\\tjQuery.fn[ name ] = function( selector ) {\\n\\t\\tvar elems,\\n\\t\\t\\tret = [],\\n\\t\\t\\tinsert = jQuery( selector ),\\n\\t\\t\\tlast = insert.length - 1,\\n\\t\\t\\ti = 0;\\n\\n\\t\\tfor ( ; i <= last; i++ ) {\\n\\t\\t\\telems = i === last ? this : this.clone( true );\\n\\t\\t\\tjQuery( insert[ i ] )[ original ]( elems );\\n\\n\\t\\t\\t// Support: Android <=4.0 only, PhantomJS 1 only\\n\\t\\t\\t// .get() because push.apply(_, arraylike) throws on ancient WebKit\\n\\t\\t\\tpush.apply( ret, elems.get() );\\n\\t\\t}\\n\\n\\t\\treturn this.pushStack( ret );\\n\\t};\\n} );\\nvar rnumnonpx = new RegExp( \\\"^(\\\" + pnum + \\\")(?!px)[a-z%]+$\\\", \\\"i\\\" );\\n\\nvar getStyles = function( elem ) {\\n\\n\\t\\t// Support: IE <=11 only, Firefox <=30 (#15098, #14150)\\n\\t\\t// IE throws on elements created in popups\\n\\t\\t// FF meanwhile throws on frame elements through \\\"defaultView.getComputedStyle\\\"\\n\\t\\tvar view = elem.ownerDocument.defaultView;\\n\\n\\t\\tif ( !view || !view.opener ) {\\n\\t\\t\\tview = window;\\n\\t\\t}\\n\\n\\t\\treturn view.getComputedStyle( elem );\\n\\t};\\n\\nvar rboxStyle = new RegExp( cssExpand.join( \\\"|\\\" ), \\\"i\\\" );\\n\\n\\n\\n( function() {\\n\\n\\t// Executing both pixelPosition & boxSizingReliable tests require only one layout\\n\\t// so they're executed at the same time to save the second computation.\\n\\tfunction computeStyleTests() {\\n\\n\\t\\t// This is a singleton, we need to execute it only once\\n\\t\\tif ( !div ) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tcontainer.style.cssText = \\\"position:absolute;left:-11111px;width:60px;\\\" +\\n\\t\\t\\t\\\"margin-top:1px;padding:0;border:0\\\";\\n\\t\\tdiv.style.cssText =\\n\\t\\t\\t\\\"position:relative;display:block;box-sizing:border-box;overflow:scroll;\\\" +\\n\\t\\t\\t\\\"margin:auto;border:1px;padding:1px;\\\" +\\n\\t\\t\\t\\\"width:60%;top:1%\\\";\\n\\t\\tdocumentElement.appendChild( container ).appendChild( div );\\n\\n\\t\\tvar divStyle = window.getComputedStyle( div );\\n\\t\\tpixelPositionVal = divStyle.top !== \\\"1%\\\";\\n\\n\\t\\t// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44\\n\\t\\treliableMarginLeftVal = roundPixelMeasures( divStyle.marginLeft ) === 12;\\n\\n\\t\\t// Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3\\n\\t\\t// Some styles come back with percentage values, even though they shouldn't\\n\\t\\tdiv.style.right = \\\"60%\\\";\\n\\t\\tpixelBoxStylesVal = roundPixelMeasures( divStyle.right ) === 36;\\n\\n\\t\\t// Support: IE 9 - 11 only\\n\\t\\t// Detect misreporting of content dimensions for box-sizing:border-box elements\\n\\t\\tboxSizingReliableVal = roundPixelMeasures( divStyle.width ) === 36;\\n\\n\\t\\t// Support: IE 9 only\\n\\t\\t// Detect overflow:scroll screwiness (gh-3699)\\n\\t\\t// Support: Chrome <=64\\n\\t\\t// Don't get tricked when zoom affects offsetWidth (gh-4029)\\n\\t\\tdiv.style.position = \\\"absolute\\\";\\n\\t\\tscrollboxSizeVal = roundPixelMeasures( div.offsetWidth / 3 ) === 12;\\n\\n\\t\\tdocumentElement.removeChild( container );\\n\\n\\t\\t// Nullify the div so it wouldn't be stored in the memory and\\n\\t\\t// it will also be a sign that checks already performed\\n\\t\\tdiv = null;\\n\\t}\\n\\n\\tfunction roundPixelMeasures( measure ) {\\n\\t\\treturn Math.round( parseFloat( measure ) );\\n\\t}\\n\\n\\tvar pixelPositionVal, boxSizingReliableVal, scrollboxSizeVal, pixelBoxStylesVal,\\n\\t\\treliableMarginLeftVal,\\n\\t\\tcontainer = document.createElement( \\\"div\\\" ),\\n\\t\\tdiv = document.createElement( \\\"div\\\" );\\n\\n\\t// Finish early in limited (non-browser) environments\\n\\tif ( !div.style ) {\\n\\t\\treturn;\\n\\t}\\n\\n\\t// Support: IE <=9 - 11 only\\n\\t// Style of cloned element affects source element cloned (#8908)\\n\\tdiv.style.backgroundClip = \\\"content-box\\\";\\n\\tdiv.cloneNode( true ).style.backgroundClip = \\\"\\\";\\n\\tsupport.clearCloneStyle = div.style.backgroundClip === \\\"content-box\\\";\\n\\n\\tjQuery.extend( support, {\\n\\t\\tboxSizingReliable: function() {\\n\\t\\t\\tcomputeStyleTests();\\n\\t\\t\\treturn boxSizingReliableVal;\\n\\t\\t},\\n\\t\\tpixelBoxStyles: function() {\\n\\t\\t\\tcomputeStyleTests();\\n\\t\\t\\treturn pixelBoxStylesVal;\\n\\t\\t},\\n\\t\\tpixelPosition: function() {\\n\\t\\t\\tcomputeStyleTests();\\n\\t\\t\\treturn pixelPositionVal;\\n\\t\\t},\\n\\t\\treliableMarginLeft: function() {\\n\\t\\t\\tcomputeStyleTests();\\n\\t\\t\\treturn reliableMarginLeftVal;\\n\\t\\t},\\n\\t\\tscrollboxSize: function() {\\n\\t\\t\\tcomputeStyleTests();\\n\\t\\t\\treturn scrollboxSizeVal;\\n\\t\\t}\\n\\t} );\\n} )();\\n\\n\\nfunction curCSS( elem, name, computed ) {\\n\\tvar width, minWidth, maxWidth, ret,\\n\\n\\t\\t// Support: Firefox 51+\\n\\t\\t// Retrieving style before computed somehow\\n\\t\\t// fixes an issue with getting wrong values\\n\\t\\t// on detached elements\\n\\t\\tstyle = elem.style;\\n\\n\\tcomputed = computed || getStyles( elem );\\n\\n\\t// getPropertyValue is needed for:\\n\\t//   .css('filter') (IE 9 only, #12537)\\n\\t//   .css('--customProperty) (#3144)\\n\\tif ( computed ) {\\n\\t\\tret = computed.getPropertyValue( name ) || computed[ name ];\\n\\n\\t\\tif ( ret === \\\"\\\" && !isAttached( elem ) ) {\\n\\t\\t\\tret = jQuery.style( elem, name );\\n\\t\\t}\\n\\n\\t\\t// A tribute to the \\\"awesome hack by Dean Edwards\\\"\\n\\t\\t// Android Browser returns percentage for some values,\\n\\t\\t// but width seems to be reliably pixels.\\n\\t\\t// This is against the CSSOM draft spec:\\n\\t\\t// https://drafts.csswg.org/cssom/#resolved-values\\n\\t\\tif ( !support.pixelBoxStyles() && rnumnonpx.test( ret ) && rboxStyle.test( name ) ) {\\n\\n\\t\\t\\t// Remember the original values\\n\\t\\t\\twidth = style.width;\\n\\t\\t\\tminWidth = style.minWidth;\\n\\t\\t\\tmaxWidth = style.maxWidth;\\n\\n\\t\\t\\t// Put in the new values to get a computed value out\\n\\t\\t\\tstyle.minWidth = style.maxWidth = style.width = ret;\\n\\t\\t\\tret = computed.width;\\n\\n\\t\\t\\t// Revert the changed values\\n\\t\\t\\tstyle.width = width;\\n\\t\\t\\tstyle.minWidth = minWidth;\\n\\t\\t\\tstyle.maxWidth = maxWidth;\\n\\t\\t}\\n\\t}\\n\\n\\treturn ret !== undefined ?\\n\\n\\t\\t// Support: IE <=9 - 11 only\\n\\t\\t// IE returns zIndex value as an integer.\\n\\t\\tret + \\\"\\\" :\\n\\t\\tret;\\n}\\n\\n\\nfunction addGetHookIf( conditionFn, hookFn ) {\\n\\n\\t// Define the hook, we'll check on the first run if it's really needed.\\n\\treturn {\\n\\t\\tget: function() {\\n\\t\\t\\tif ( conditionFn() ) {\\n\\n\\t\\t\\t\\t// Hook not needed (or it's not possible to use it due\\n\\t\\t\\t\\t// to missing dependency), remove it.\\n\\t\\t\\t\\tdelete this.get;\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Hook needed; redefine it so that the support test is not executed again.\\n\\t\\t\\treturn ( this.get = hookFn ).apply( this, arguments );\\n\\t\\t}\\n\\t};\\n}\\n\\n\\nvar cssPrefixes = [ \\\"Webkit\\\", \\\"Moz\\\", \\\"ms\\\" ],\\n\\temptyStyle = document.createElement( \\\"div\\\" ).style,\\n\\tvendorProps = {};\\n\\n// Return a vendor-prefixed property or undefined\\nfunction vendorPropName( name ) {\\n\\n\\t// Check for vendor prefixed names\\n\\tvar capName = name[ 0 ].toUpperCase() + name.slice( 1 ),\\n\\t\\ti = cssPrefixes.length;\\n\\n\\twhile ( i-- ) {\\n\\t\\tname = cssPrefixes[ i ] + capName;\\n\\t\\tif ( name in emptyStyle ) {\\n\\t\\t\\treturn name;\\n\\t\\t}\\n\\t}\\n}\\n\\n// Return a potentially-mapped jQuery.cssProps or vendor prefixed property\\nfunction finalPropName( name ) {\\n\\tvar final = jQuery.cssProps[ name ] || vendorProps[ name ];\\n\\n\\tif ( final ) {\\n\\t\\treturn final;\\n\\t}\\n\\tif ( name in emptyStyle ) {\\n\\t\\treturn name;\\n\\t}\\n\\treturn vendorProps[ name ] = vendorPropName( name ) || name;\\n}\\n\\n\\nvar\\n\\n\\t// Swappable if display is none or starts with table\\n\\t// except \\\"table\\\", \\\"table-cell\\\", or \\\"table-caption\\\"\\n\\t// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\\n\\trdisplayswap = /^(none|table(?!-c[ea]).+)/,\\n\\trcustomProp = /^--/,\\n\\tcssShow = { position: \\\"absolute\\\", visibility: \\\"hidden\\\", display: \\\"block\\\" },\\n\\tcssNormalTransform = {\\n\\t\\tletterSpacing: \\\"0\\\",\\n\\t\\tfontWeight: \\\"400\\\"\\n\\t};\\n\\nfunction setPositiveNumber( elem, value, subtract ) {\\n\\n\\t// Any relative (+/-) values have already been\\n\\t// normalized at this point\\n\\tvar matches = rcssNum.exec( value );\\n\\treturn matches ?\\n\\n\\t\\t// Guard against undefined \\\"subtract\\\", e.g., when used as in cssHooks\\n\\t\\tMath.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || \\\"px\\\" ) :\\n\\t\\tvalue;\\n}\\n\\nfunction boxModelAdjustment( elem, dimension, box, isBorderBox, styles, computedVal ) {\\n\\tvar i = dimension === \\\"width\\\" ? 1 : 0,\\n\\t\\textra = 0,\\n\\t\\tdelta = 0;\\n\\n\\t// Adjustment may not be necessary\\n\\tif ( box === ( isBorderBox ? \\\"border\\\" : \\\"content\\\" ) ) {\\n\\t\\treturn 0;\\n\\t}\\n\\n\\tfor ( ; i < 4; i += 2 ) {\\n\\n\\t\\t// Both box models exclude margin\\n\\t\\tif ( box === \\\"margin\\\" ) {\\n\\t\\t\\tdelta += jQuery.css( elem, box + cssExpand[ i ], true, styles );\\n\\t\\t}\\n\\n\\t\\t// If we get here with a content-box, we're seeking \\\"padding\\\" or \\\"border\\\" or \\\"margin\\\"\\n\\t\\tif ( !isBorderBox ) {\\n\\n\\t\\t\\t// Add padding\\n\\t\\t\\tdelta += jQuery.css( elem, \\\"padding\\\" + cssExpand[ i ], true, styles );\\n\\n\\t\\t\\t// For \\\"border\\\" or \\\"margin\\\", add border\\n\\t\\t\\tif ( box !== \\\"padding\\\" ) {\\n\\t\\t\\t\\tdelta += jQuery.css( elem, \\\"border\\\" + cssExpand[ i ] + \\\"Width\\\", true, styles );\\n\\n\\t\\t\\t// But still keep track of it otherwise\\n\\t\\t\\t} else {\\n\\t\\t\\t\\textra += jQuery.css( elem, \\\"border\\\" + cssExpand[ i ] + \\\"Width\\\", true, styles );\\n\\t\\t\\t}\\n\\n\\t\\t// If we get here with a border-box (content + padding + border), we're seeking \\\"content\\\" or\\n\\t\\t// \\\"padding\\\" or \\\"margin\\\"\\n\\t\\t} else {\\n\\n\\t\\t\\t// For \\\"content\\\", subtract padding\\n\\t\\t\\tif ( box === \\\"content\\\" ) {\\n\\t\\t\\t\\tdelta -= jQuery.css( elem, \\\"padding\\\" + cssExpand[ i ], true, styles );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// For \\\"content\\\" or \\\"padding\\\", subtract border\\n\\t\\t\\tif ( box !== \\\"margin\\\" ) {\\n\\t\\t\\t\\tdelta -= jQuery.css( elem, \\\"border\\\" + cssExpand[ i ] + \\\"Width\\\", true, styles );\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\t// Account for positive content-box scroll gutter when requested by providing computedVal\\n\\tif ( !isBorderBox && computedVal >= 0 ) {\\n\\n\\t\\t// offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border\\n\\t\\t// Assuming integer scroll gutter, subtract the rest and round down\\n\\t\\tdelta += Math.max( 0, Math.ceil(\\n\\t\\t\\telem[ \\\"offset\\\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -\\n\\t\\t\\tcomputedVal -\\n\\t\\t\\tdelta -\\n\\t\\t\\textra -\\n\\t\\t\\t0.5\\n\\n\\t\\t// If offsetWidth/offsetHeight is unknown, then we can't determine content-box scroll gutter\\n\\t\\t// Use an explicit zero to avoid NaN (gh-3964)\\n\\t\\t) ) || 0;\\n\\t}\\n\\n\\treturn delta;\\n}\\n\\nfunction getWidthOrHeight( elem, dimension, extra ) {\\n\\n\\t// Start with computed style\\n\\tvar styles = getStyles( elem ),\\n\\n\\t\\t// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-4322).\\n\\t\\t// Fake content-box until we know it's needed to know the true value.\\n\\t\\tboxSizingNeeded = !support.boxSizingReliable() || extra,\\n\\t\\tisBorderBox = boxSizingNeeded &&\\n\\t\\t\\tjQuery.css( elem, \\\"boxSizing\\\", false, styles ) === \\\"border-box\\\",\\n\\t\\tvalueIsBorderBox = isBorderBox,\\n\\n\\t\\tval = curCSS( elem, dimension, styles ),\\n\\t\\toffsetProp = \\\"offset\\\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 );\\n\\n\\t// Support: Firefox <=54\\n\\t// Return a confounding non-pixel value or feign ignorance, as appropriate.\\n\\tif ( rnumnonpx.test( val ) ) {\\n\\t\\tif ( !extra ) {\\n\\t\\t\\treturn val;\\n\\t\\t}\\n\\t\\tval = \\\"auto\\\";\\n\\t}\\n\\n\\n\\t// Fall back to offsetWidth/offsetHeight when value is \\\"auto\\\"\\n\\t// This happens for inline elements with no explicit setting (gh-3571)\\n\\t// Support: Android <=4.1 - 4.3 only\\n\\t// Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)\\n\\t// Support: IE 9-11 only\\n\\t// Also use offsetWidth/offsetHeight for when box sizing is unreliable\\n\\t// We use getClientRects() to check for hidden/disconnected.\\n\\t// In those cases, the computed value can be trusted to be border-box\\n\\tif ( ( !support.boxSizingReliable() && isBorderBox ||\\n\\t\\tval === \\\"auto\\\" ||\\n\\t\\t!parseFloat( val ) && jQuery.css( elem, \\\"display\\\", false, styles ) === \\\"inline\\\" ) &&\\n\\t\\telem.getClientRects().length ) {\\n\\n\\t\\tisBorderBox = jQuery.css( elem, \\\"boxSizing\\\", false, styles ) === \\\"border-box\\\";\\n\\n\\t\\t// Where available, offsetWidth/offsetHeight approximate border box dimensions.\\n\\t\\t// Where not available (e.g., SVG), assume unreliable box-sizing and interpret the\\n\\t\\t// retrieved value as a content box dimension.\\n\\t\\tvalueIsBorderBox = offsetProp in elem;\\n\\t\\tif ( valueIsBorderBox ) {\\n\\t\\t\\tval = elem[ offsetProp ];\\n\\t\\t}\\n\\t}\\n\\n\\t// Normalize \\\"\\\" and auto\\n\\tval = parseFloat( val ) || 0;\\n\\n\\t// Adjust for the element's box model\\n\\treturn ( val +\\n\\t\\tboxModelAdjustment(\\n\\t\\t\\telem,\\n\\t\\t\\tdimension,\\n\\t\\t\\textra || ( isBorderBox ? \\\"border\\\" : \\\"content\\\" ),\\n\\t\\t\\tvalueIsBorderBox,\\n\\t\\t\\tstyles,\\n\\n\\t\\t\\t// Provide the current computed size to request scroll gutter calculation (gh-3589)\\n\\t\\t\\tval\\n\\t\\t)\\n\\t) + \\\"px\\\";\\n}\\n\\njQuery.extend( {\\n\\n\\t// Add in style property hooks for overriding the default\\n\\t// behavior of getting and setting a style property\\n\\tcssHooks: {\\n\\t\\topacity: {\\n\\t\\t\\tget: function( elem, computed ) {\\n\\t\\t\\t\\tif ( computed ) {\\n\\n\\t\\t\\t\\t\\t// We should always get a number back from opacity\\n\\t\\t\\t\\t\\tvar ret = curCSS( elem, \\\"opacity\\\" );\\n\\t\\t\\t\\t\\treturn ret === \\\"\\\" ? \\\"1\\\" : ret;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\n\\t// Don't automatically add \\\"px\\\" to these possibly-unitless properties\\n\\tcssNumber: {\\n\\t\\t\\\"animationIterationCount\\\": true,\\n\\t\\t\\\"columnCount\\\": true,\\n\\t\\t\\\"fillOpacity\\\": true,\\n\\t\\t\\\"flexGrow\\\": true,\\n\\t\\t\\\"flexShrink\\\": true,\\n\\t\\t\\\"fontWeight\\\": true,\\n\\t\\t\\\"gridArea\\\": true,\\n\\t\\t\\\"gridColumn\\\": true,\\n\\t\\t\\\"gridColumnEnd\\\": true,\\n\\t\\t\\\"gridColumnStart\\\": true,\\n\\t\\t\\\"gridRow\\\": true,\\n\\t\\t\\\"gridRowEnd\\\": true,\\n\\t\\t\\\"gridRowStart\\\": true,\\n\\t\\t\\\"lineHeight\\\": true,\\n\\t\\t\\\"opacity\\\": true,\\n\\t\\t\\\"order\\\": true,\\n\\t\\t\\\"orphans\\\": true,\\n\\t\\t\\\"widows\\\": true,\\n\\t\\t\\\"zIndex\\\": true,\\n\\t\\t\\\"zoom\\\": true\\n\\t},\\n\\n\\t// Add in properties whose names you wish to fix before\\n\\t// setting or getting the value\\n\\tcssProps: {},\\n\\n\\t// Get and set the style property on a DOM Node\\n\\tstyle: function( elem, name, value, extra ) {\\n\\n\\t\\t// Don't set styles on text and comment nodes\\n\\t\\tif ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\t// Make sure that we're working with the right name\\n\\t\\tvar ret, type, hooks,\\n\\t\\t\\torigName = camelCase( name ),\\n\\t\\t\\tisCustomProp = rcustomProp.test( name ),\\n\\t\\t\\tstyle = elem.style;\\n\\n\\t\\t// Make sure that we're working with the right name. We don't\\n\\t\\t// want to query the value if it is a CSS custom property\\n\\t\\t// since they are user-defined.\\n\\t\\tif ( !isCustomProp ) {\\n\\t\\t\\tname = finalPropName( origName );\\n\\t\\t}\\n\\n\\t\\t// Gets hook for the prefixed version, then unprefixed version\\n\\t\\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\\n\\n\\t\\t// Check if we're setting a value\\n\\t\\tif ( value !== undefined ) {\\n\\t\\t\\ttype = typeof value;\\n\\n\\t\\t\\t// Convert \\\"+=\\\" or \\\"-=\\\" to relative numbers (#7345)\\n\\t\\t\\tif ( type === \\\"string\\\" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {\\n\\t\\t\\t\\tvalue = adjustCSS( elem, name, ret );\\n\\n\\t\\t\\t\\t// Fixes bug #9237\\n\\t\\t\\t\\ttype = \\\"number\\\";\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Make sure that null and NaN values aren't set (#7116)\\n\\t\\t\\tif ( value == null || value !== value ) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// If a number was passed in, add the unit (except for certain CSS properties)\\n\\t\\t\\t// The isCustomProp check can be removed in jQuery 4.0 when we only auto-append\\n\\t\\t\\t// \\\"px\\\" to a few hardcoded values.\\n\\t\\t\\tif ( type === \\\"number\\\" && !isCustomProp ) {\\n\\t\\t\\t\\tvalue += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? \\\"\\\" : \\\"px\\\" );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// background-* props affect original clone's values\\n\\t\\t\\tif ( !support.clearCloneStyle && value === \\\"\\\" && name.indexOf( \\\"background\\\" ) === 0 ) {\\n\\t\\t\\t\\tstyle[ name ] = \\\"inherit\\\";\\n\\t\\t\\t}\\n\\n\\t\\t\\t// If a hook was provided, use that value, otherwise just set the specified value\\n\\t\\t\\tif ( !hooks || !( \\\"set\\\" in hooks ) ||\\n\\t\\t\\t\\t( value = hooks.set( elem, value, extra ) ) !== undefined ) {\\n\\n\\t\\t\\t\\tif ( isCustomProp ) {\\n\\t\\t\\t\\t\\tstyle.setProperty( name, value );\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tstyle[ name ] = value;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t} else {\\n\\n\\t\\t\\t// If a hook was provided get the non-computed value from there\\n\\t\\t\\tif ( hooks && \\\"get\\\" in hooks &&\\n\\t\\t\\t\\t( ret = hooks.get( elem, false, extra ) ) !== undefined ) {\\n\\n\\t\\t\\t\\treturn ret;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Otherwise just get the value from the style object\\n\\t\\t\\treturn style[ name ];\\n\\t\\t}\\n\\t},\\n\\n\\tcss: function( elem, name, extra, styles ) {\\n\\t\\tvar val, num, hooks,\\n\\t\\t\\torigName = camelCase( name ),\\n\\t\\t\\tisCustomProp = rcustomProp.test( name );\\n\\n\\t\\t// Make sure that we're working with the right name. We don't\\n\\t\\t// want to modify the value if it is a CSS custom property\\n\\t\\t// since they are user-defined.\\n\\t\\tif ( !isCustomProp ) {\\n\\t\\t\\tname = finalPropName( origName );\\n\\t\\t}\\n\\n\\t\\t// Try prefixed name followed by the unprefixed name\\n\\t\\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\\n\\n\\t\\t// If a hook was provided get the computed value from there\\n\\t\\tif ( hooks && \\\"get\\\" in hooks ) {\\n\\t\\t\\tval = hooks.get( elem, true, extra );\\n\\t\\t}\\n\\n\\t\\t// Otherwise, if a way to get the computed value exists, use that\\n\\t\\tif ( val === undefined ) {\\n\\t\\t\\tval = curCSS( elem, name, styles );\\n\\t\\t}\\n\\n\\t\\t// Convert \\\"normal\\\" to computed value\\n\\t\\tif ( val === \\\"normal\\\" && name in cssNormalTransform ) {\\n\\t\\t\\tval = cssNormalTransform[ name ];\\n\\t\\t}\\n\\n\\t\\t// Make numeric if forced or a qualifier was provided and val looks numeric\\n\\t\\tif ( extra === \\\"\\\" || extra ) {\\n\\t\\t\\tnum = parseFloat( val );\\n\\t\\t\\treturn extra === true || isFinite( num ) ? num || 0 : val;\\n\\t\\t}\\n\\n\\t\\treturn val;\\n\\t}\\n} );\\n\\njQuery.each( [ \\\"height\\\", \\\"width\\\" ], function( i, dimension ) {\\n\\tjQuery.cssHooks[ dimension ] = {\\n\\t\\tget: function( elem, computed, extra ) {\\n\\t\\t\\tif ( computed ) {\\n\\n\\t\\t\\t\\t// Certain elements can have dimension info if we invisibly show them\\n\\t\\t\\t\\t// but it must have a current display style that would benefit\\n\\t\\t\\t\\treturn rdisplayswap.test( jQuery.css( elem, \\\"display\\\" ) ) &&\\n\\n\\t\\t\\t\\t\\t// Support: Safari 8+\\n\\t\\t\\t\\t\\t// Table columns in Safari have non-zero offsetWidth & zero\\n\\t\\t\\t\\t\\t// getBoundingClientRect().width unless display is changed.\\n\\t\\t\\t\\t\\t// Support: IE <=11 only\\n\\t\\t\\t\\t\\t// Running getBoundingClientRect on a disconnected node\\n\\t\\t\\t\\t\\t// in IE throws an error.\\n\\t\\t\\t\\t\\t( !elem.getClientRects().length || !elem.getBoundingClientRect().width ) ?\\n\\t\\t\\t\\t\\t\\tswap( elem, cssShow, function() {\\n\\t\\t\\t\\t\\t\\t\\treturn getWidthOrHeight( elem, dimension, extra );\\n\\t\\t\\t\\t\\t\\t} ) :\\n\\t\\t\\t\\t\\t\\tgetWidthOrHeight( elem, dimension, extra );\\n\\t\\t\\t}\\n\\t\\t},\\n\\n\\t\\tset: function( elem, value, extra ) {\\n\\t\\t\\tvar matches,\\n\\t\\t\\t\\tstyles = getStyles( elem ),\\n\\n\\t\\t\\t\\t// Only read styles.position if the test has a chance to fail\\n\\t\\t\\t\\t// to avoid forcing a reflow.\\n\\t\\t\\t\\tscrollboxSizeBuggy = !support.scrollboxSize() &&\\n\\t\\t\\t\\t\\tstyles.position === \\\"absolute\\\",\\n\\n\\t\\t\\t\\t// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-3991)\\n\\t\\t\\t\\tboxSizingNeeded = scrollboxSizeBuggy || extra,\\n\\t\\t\\t\\tisBorderBox = boxSizingNeeded &&\\n\\t\\t\\t\\t\\tjQuery.css( elem, \\\"boxSizing\\\", false, styles ) === \\\"border-box\\\",\\n\\t\\t\\t\\tsubtract = extra ?\\n\\t\\t\\t\\t\\tboxModelAdjustment(\\n\\t\\t\\t\\t\\t\\telem,\\n\\t\\t\\t\\t\\t\\tdimension,\\n\\t\\t\\t\\t\\t\\textra,\\n\\t\\t\\t\\t\\t\\tisBorderBox,\\n\\t\\t\\t\\t\\t\\tstyles\\n\\t\\t\\t\\t\\t) :\\n\\t\\t\\t\\t\\t0;\\n\\n\\t\\t\\t// Account for unreliable border-box dimensions by comparing offset* to computed and\\n\\t\\t\\t// faking a content-box to get border and padding (gh-3699)\\n\\t\\t\\tif ( isBorderBox && scrollboxSizeBuggy ) {\\n\\t\\t\\t\\tsubtract -= Math.ceil(\\n\\t\\t\\t\\t\\telem[ \\\"offset\\\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -\\n\\t\\t\\t\\t\\tparseFloat( styles[ dimension ] ) -\\n\\t\\t\\t\\t\\tboxModelAdjustment( elem, dimension, \\\"border\\\", false, styles ) -\\n\\t\\t\\t\\t\\t0.5\\n\\t\\t\\t\\t);\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Convert to pixels if value adjustment is needed\\n\\t\\t\\tif ( subtract && ( matches = rcssNum.exec( value ) ) &&\\n\\t\\t\\t\\t( matches[ 3 ] || \\\"px\\\" ) !== \\\"px\\\" ) {\\n\\n\\t\\t\\t\\telem.style[ dimension ] = value;\\n\\t\\t\\t\\tvalue = jQuery.css( elem, dimension );\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn setPositiveNumber( elem, value, subtract );\\n\\t\\t}\\n\\t};\\n} );\\n\\njQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,\\n\\tfunction( elem, computed ) {\\n\\t\\tif ( computed ) {\\n\\t\\t\\treturn ( parseFloat( curCSS( elem, \\\"marginLeft\\\" ) ) ||\\n\\t\\t\\t\\telem.getBoundingClientRect().left -\\n\\t\\t\\t\\t\\tswap( elem, { marginLeft: 0 }, function() {\\n\\t\\t\\t\\t\\t\\treturn elem.getBoundingClientRect().left;\\n\\t\\t\\t\\t\\t} )\\n\\t\\t\\t\\t) + \\\"px\\\";\\n\\t\\t}\\n\\t}\\n);\\n\\n// These hooks are used by animate to expand properties\\njQuery.each( {\\n\\tmargin: \\\"\\\",\\n\\tpadding: \\\"\\\",\\n\\tborder: \\\"Width\\\"\\n}, function( prefix, suffix ) {\\n\\tjQuery.cssHooks[ prefix + suffix ] = {\\n\\t\\texpand: function( value ) {\\n\\t\\t\\tvar i = 0,\\n\\t\\t\\t\\texpanded = {},\\n\\n\\t\\t\\t\\t// Assumes a single number if not a string\\n\\t\\t\\t\\tparts = typeof value === \\\"string\\\" ? value.split( \\\" \\\" ) : [ value ];\\n\\n\\t\\t\\tfor ( ; i < 4; i++ ) {\\n\\t\\t\\t\\texpanded[ prefix + cssExpand[ i ] + suffix ] =\\n\\t\\t\\t\\t\\tparts[ i ] || parts[ i - 2 ] || parts[ 0 ];\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn expanded;\\n\\t\\t}\\n\\t};\\n\\n\\tif ( prefix !== \\\"margin\\\" ) {\\n\\t\\tjQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;\\n\\t}\\n} );\\n\\njQuery.fn.extend( {\\n\\tcss: function( name, value ) {\\n\\t\\treturn access( this, function( elem, name, value ) {\\n\\t\\t\\tvar styles, len,\\n\\t\\t\\t\\tmap = {},\\n\\t\\t\\t\\ti = 0;\\n\\n\\t\\t\\tif ( Array.isArray( name ) ) {\\n\\t\\t\\t\\tstyles = getStyles( elem );\\n\\t\\t\\t\\tlen = name.length;\\n\\n\\t\\t\\t\\tfor ( ; i < len; i++ ) {\\n\\t\\t\\t\\t\\tmap[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn map;\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn value !== undefined ?\\n\\t\\t\\t\\tjQuery.style( elem, name, value ) :\\n\\t\\t\\t\\tjQuery.css( elem, name );\\n\\t\\t}, name, value, arguments.length > 1 );\\n\\t}\\n} );\\n\\n\\nfunction Tween( elem, options, prop, end, easing ) {\\n\\treturn new Tween.prototype.init( elem, options, prop, end, easing );\\n}\\njQuery.Tween = Tween;\\n\\nTween.prototype = {\\n\\tconstructor: Tween,\\n\\tinit: function( elem, options, prop, end, easing, unit ) {\\n\\t\\tthis.elem = elem;\\n\\t\\tthis.prop = prop;\\n\\t\\tthis.easing = easing || jQuery.easing._default;\\n\\t\\tthis.options = options;\\n\\t\\tthis.start = this.now = this.cur();\\n\\t\\tthis.end = end;\\n\\t\\tthis.unit = unit || ( jQuery.cssNumber[ prop ] ? \\\"\\\" : \\\"px\\\" );\\n\\t},\\n\\tcur: function() {\\n\\t\\tvar hooks = Tween.propHooks[ this.prop ];\\n\\n\\t\\treturn hooks && hooks.get ?\\n\\t\\t\\thooks.get( this ) :\\n\\t\\t\\tTween.propHooks._default.get( this );\\n\\t},\\n\\trun: function( percent ) {\\n\\t\\tvar eased,\\n\\t\\t\\thooks = Tween.propHooks[ this.prop ];\\n\\n\\t\\tif ( this.options.duration ) {\\n\\t\\t\\tthis.pos = eased = jQuery.easing[ this.easing ](\\n\\t\\t\\t\\tpercent, this.options.duration * percent, 0, 1, this.options.duration\\n\\t\\t\\t);\\n\\t\\t} else {\\n\\t\\t\\tthis.pos = eased = percent;\\n\\t\\t}\\n\\t\\tthis.now = ( this.end - this.start ) * eased + this.start;\\n\\n\\t\\tif ( this.options.step ) {\\n\\t\\t\\tthis.options.step.call( this.elem, this.now, this );\\n\\t\\t}\\n\\n\\t\\tif ( hooks && hooks.set ) {\\n\\t\\t\\thooks.set( this );\\n\\t\\t} else {\\n\\t\\t\\tTween.propHooks._default.set( this );\\n\\t\\t}\\n\\t\\treturn this;\\n\\t}\\n};\\n\\nTween.prototype.init.prototype = Tween.prototype;\\n\\nTween.propHooks = {\\n\\t_default: {\\n\\t\\tget: function( tween ) {\\n\\t\\t\\tvar result;\\n\\n\\t\\t\\t// Use a property on the element directly when it is not a DOM element,\\n\\t\\t\\t// or when there is no matching style property that exists.\\n\\t\\t\\tif ( tween.elem.nodeType !== 1 ||\\n\\t\\t\\t\\ttween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {\\n\\t\\t\\t\\treturn tween.elem[ tween.prop ];\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Passing an empty string as a 3rd parameter to .css will automatically\\n\\t\\t\\t// attempt a parseFloat and fallback to a string if the parse fails.\\n\\t\\t\\t// Simple values such as \\\"10px\\\" are parsed to Float;\\n\\t\\t\\t// complex values such as \\\"rotate(1rad)\\\" are returned as-is.\\n\\t\\t\\tresult = jQuery.css( tween.elem, tween.prop, \\\"\\\" );\\n\\n\\t\\t\\t// Empty strings, null, undefined and \\\"auto\\\" are converted to 0.\\n\\t\\t\\treturn !result || result === \\\"auto\\\" ? 0 : result;\\n\\t\\t},\\n\\t\\tset: function( tween ) {\\n\\n\\t\\t\\t// Use step hook for back compat.\\n\\t\\t\\t// Use cssHook if its there.\\n\\t\\t\\t// Use .style if available and use plain properties where available.\\n\\t\\t\\tif ( jQuery.fx.step[ tween.prop ] ) {\\n\\t\\t\\t\\tjQuery.fx.step[ tween.prop ]( tween );\\n\\t\\t\\t} else if ( tween.elem.nodeType === 1 && (\\n\\t\\t\\t\\t\\tjQuery.cssHooks[ tween.prop ] ||\\n\\t\\t\\t\\t\\ttween.elem.style[ finalPropName( tween.prop ) ] != null ) ) {\\n\\t\\t\\t\\tjQuery.style( tween.elem, tween.prop, tween.now + tween.unit );\\n\\t\\t\\t} else {\\n\\t\\t\\t\\ttween.elem[ tween.prop ] = tween.now;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n};\\n\\n// Support: IE <=9 only\\n// Panic based approach to setting things on disconnected nodes\\nTween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\\n\\tset: function( tween ) {\\n\\t\\tif ( tween.elem.nodeType && tween.elem.parentNode ) {\\n\\t\\t\\ttween.elem[ tween.prop ] = tween.now;\\n\\t\\t}\\n\\t}\\n};\\n\\njQuery.easing = {\\n\\tlinear: function( p ) {\\n\\t\\treturn p;\\n\\t},\\n\\tswing: function( p ) {\\n\\t\\treturn 0.5 - Math.cos( p * Math.PI ) / 2;\\n\\t},\\n\\t_default: \\\"swing\\\"\\n};\\n\\njQuery.fx = Tween.prototype.init;\\n\\n// Back compat <1.8 extension point\\njQuery.fx.step = {};\\n\\n\\n\\n\\nvar\\n\\tfxNow, inProgress,\\n\\trfxtypes = /^(?:toggle|show|hide)$/,\\n\\trrun = /queueHooks$/;\\n\\nfunction schedule() {\\n\\tif ( inProgress ) {\\n\\t\\tif ( document.hidden === false && window.requestAnimationFrame ) {\\n\\t\\t\\twindow.requestAnimationFrame( schedule );\\n\\t\\t} else {\\n\\t\\t\\twindow.setTimeout( schedule, jQuery.fx.interval );\\n\\t\\t}\\n\\n\\t\\tjQuery.fx.tick();\\n\\t}\\n}\\n\\n// Animations created synchronously will run synchronously\\nfunction createFxNow() {\\n\\twindow.setTimeout( function() {\\n\\t\\tfxNow = undefined;\\n\\t} );\\n\\treturn ( fxNow = Date.now() );\\n}\\n\\n// Generate parameters to create a standard animation\\nfunction genFx( type, includeWidth ) {\\n\\tvar which,\\n\\t\\ti = 0,\\n\\t\\tattrs = { height: type };\\n\\n\\t// If we include width, step value is 1 to do all cssExpand values,\\n\\t// otherwise step value is 2 to skip over Left and Right\\n\\tincludeWidth = includeWidth ? 1 : 0;\\n\\tfor ( ; i < 4; i += 2 - includeWidth ) {\\n\\t\\twhich = cssExpand[ i ];\\n\\t\\tattrs[ \\\"margin\\\" + which ] = attrs[ \\\"padding\\\" + which ] = type;\\n\\t}\\n\\n\\tif ( includeWidth ) {\\n\\t\\tattrs.opacity = attrs.width = type;\\n\\t}\\n\\n\\treturn attrs;\\n}\\n\\nfunction createTween( value, prop, animation ) {\\n\\tvar tween,\\n\\t\\tcollection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ \\\"*\\\" ] ),\\n\\t\\tindex = 0,\\n\\t\\tlength = collection.length;\\n\\tfor ( ; index < length; index++ ) {\\n\\t\\tif ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {\\n\\n\\t\\t\\t// We're done with this property\\n\\t\\t\\treturn tween;\\n\\t\\t}\\n\\t}\\n}\\n\\nfunction defaultPrefilter( elem, props, opts ) {\\n\\tvar prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display,\\n\\t\\tisBox = \\\"width\\\" in props || \\\"height\\\" in props,\\n\\t\\tanim = this,\\n\\t\\torig = {},\\n\\t\\tstyle = elem.style,\\n\\t\\thidden = elem.nodeType && isHiddenWithinTree( elem ),\\n\\t\\tdataShow = dataPriv.get( elem, \\\"fxshow\\\" );\\n\\n\\t// Queue-skipping animations hijack the fx hooks\\n\\tif ( !opts.queue ) {\\n\\t\\thooks = jQuery._queueHooks( elem, \\\"fx\\\" );\\n\\t\\tif ( hooks.unqueued == null ) {\\n\\t\\t\\thooks.unqueued = 0;\\n\\t\\t\\toldfire = hooks.empty.fire;\\n\\t\\t\\thooks.empty.fire = function() {\\n\\t\\t\\t\\tif ( !hooks.unqueued ) {\\n\\t\\t\\t\\t\\toldfire();\\n\\t\\t\\t\\t}\\n\\t\\t\\t};\\n\\t\\t}\\n\\t\\thooks.unqueued++;\\n\\n\\t\\tanim.always( function() {\\n\\n\\t\\t\\t// Ensure the complete handler is called before this completes\\n\\t\\t\\tanim.always( function() {\\n\\t\\t\\t\\thooks.unqueued--;\\n\\t\\t\\t\\tif ( !jQuery.queue( elem, \\\"fx\\\" ).length ) {\\n\\t\\t\\t\\t\\thooks.empty.fire();\\n\\t\\t\\t\\t}\\n\\t\\t\\t} );\\n\\t\\t} );\\n\\t}\\n\\n\\t// Detect show/hide animations\\n\\tfor ( prop in props ) {\\n\\t\\tvalue = props[ prop ];\\n\\t\\tif ( rfxtypes.test( value ) ) {\\n\\t\\t\\tdelete props[ prop ];\\n\\t\\t\\ttoggle = toggle || value === \\\"toggle\\\";\\n\\t\\t\\tif ( value === ( hidden ? \\\"hide\\\" : \\\"show\\\" ) ) {\\n\\n\\t\\t\\t\\t// Pretend to be hidden if this is a \\\"show\\\" and\\n\\t\\t\\t\\t// there is still data from a stopped show/hide\\n\\t\\t\\t\\tif ( value === \\\"show\\\" && dataShow && dataShow[ prop ] !== undefined ) {\\n\\t\\t\\t\\t\\thidden = true;\\n\\n\\t\\t\\t\\t// Ignore all other no-op show/hide data\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\torig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );\\n\\t\\t}\\n\\t}\\n\\n\\t// Bail out if this is a no-op like .hide().hide()\\n\\tpropTween = !jQuery.isEmptyObject( props );\\n\\tif ( !propTween && jQuery.isEmptyObject( orig ) ) {\\n\\t\\treturn;\\n\\t}\\n\\n\\t// Restrict \\\"overflow\\\" and \\\"display\\\" styles during box animations\\n\\tif ( isBox && elem.nodeType === 1 ) {\\n\\n\\t\\t// Support: IE <=9 - 11, Edge 12 - 15\\n\\t\\t// Record all 3 overflow attributes because IE does not infer the shorthand\\n\\t\\t// from identically-valued overflowX and overflowY and Edge just mirrors\\n\\t\\t// the overflowX value there.\\n\\t\\topts.overflow = [ style.overflow, style.overflowX, style.overflowY ];\\n\\n\\t\\t// Identify a display type, preferring old show/hide data over the CSS cascade\\n\\t\\trestoreDisplay = dataShow && dataShow.display;\\n\\t\\tif ( restoreDisplay == null ) {\\n\\t\\t\\trestoreDisplay = dataPriv.get( elem, \\\"display\\\" );\\n\\t\\t}\\n\\t\\tdisplay = jQuery.css( elem, \\\"display\\\" );\\n\\t\\tif ( display === \\\"none\\\" ) {\\n\\t\\t\\tif ( restoreDisplay ) {\\n\\t\\t\\t\\tdisplay = restoreDisplay;\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t// Get nonempty value(s) by temporarily forcing visibility\\n\\t\\t\\t\\tshowHide( [ elem ], true );\\n\\t\\t\\t\\trestoreDisplay = elem.style.display || restoreDisplay;\\n\\t\\t\\t\\tdisplay = jQuery.css( elem, \\\"display\\\" );\\n\\t\\t\\t\\tshowHide( [ elem ] );\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// Animate inline elements as inline-block\\n\\t\\tif ( display === \\\"inline\\\" || display === \\\"inline-block\\\" && restoreDisplay != null ) {\\n\\t\\t\\tif ( jQuery.css( elem, \\\"float\\\" ) === \\\"none\\\" ) {\\n\\n\\t\\t\\t\\t// Restore the original display value at the end of pure show/hide animations\\n\\t\\t\\t\\tif ( !propTween ) {\\n\\t\\t\\t\\t\\tanim.done( function() {\\n\\t\\t\\t\\t\\t\\tstyle.display = restoreDisplay;\\n\\t\\t\\t\\t\\t} );\\n\\t\\t\\t\\t\\tif ( restoreDisplay == null ) {\\n\\t\\t\\t\\t\\t\\tdisplay = style.display;\\n\\t\\t\\t\\t\\t\\trestoreDisplay = display === \\\"none\\\" ? \\\"\\\" : display;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tstyle.display = \\\"inline-block\\\";\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\tif ( opts.overflow ) {\\n\\t\\tstyle.overflow = \\\"hidden\\\";\\n\\t\\tanim.always( function() {\\n\\t\\t\\tstyle.overflow = opts.overflow[ 0 ];\\n\\t\\t\\tstyle.overflowX = opts.overflow[ 1 ];\\n\\t\\t\\tstyle.overflowY = opts.overflow[ 2 ];\\n\\t\\t} );\\n\\t}\\n\\n\\t// Implement show/hide animations\\n\\tpropTween = false;\\n\\tfor ( prop in orig ) {\\n\\n\\t\\t// General show/hide setup for this element animation\\n\\t\\tif ( !propTween ) {\\n\\t\\t\\tif ( dataShow ) {\\n\\t\\t\\t\\tif ( \\\"hidden\\\" in dataShow ) {\\n\\t\\t\\t\\t\\thidden = dataShow.hidden;\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tdataShow = dataPriv.access( elem, \\\"fxshow\\\", { display: restoreDisplay } );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Store hidden/visible for toggle so `.stop().toggle()` \\\"reverses\\\"\\n\\t\\t\\tif ( toggle ) {\\n\\t\\t\\t\\tdataShow.hidden = !hidden;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Show elements before animating them\\n\\t\\t\\tif ( hidden ) {\\n\\t\\t\\t\\tshowHide( [ elem ], true );\\n\\t\\t\\t}\\n\\n\\t\\t\\t/* eslint-disable no-loop-func */\\n\\n\\t\\t\\tanim.done( function() {\\n\\n\\t\\t\\t/* eslint-enable no-loop-func */\\n\\n\\t\\t\\t\\t// The final step of a \\\"hide\\\" animation is actually hiding the element\\n\\t\\t\\t\\tif ( !hidden ) {\\n\\t\\t\\t\\t\\tshowHide( [ elem ] );\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tdataPriv.remove( elem, \\\"fxshow\\\" );\\n\\t\\t\\t\\tfor ( prop in orig ) {\\n\\t\\t\\t\\t\\tjQuery.style( elem, prop, orig[ prop ] );\\n\\t\\t\\t\\t}\\n\\t\\t\\t} );\\n\\t\\t}\\n\\n\\t\\t// Per-property setup\\n\\t\\tpropTween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );\\n\\t\\tif ( !( prop in dataShow ) ) {\\n\\t\\t\\tdataShow[ prop ] = propTween.start;\\n\\t\\t\\tif ( hidden ) {\\n\\t\\t\\t\\tpropTween.end = propTween.start;\\n\\t\\t\\t\\tpropTween.start = 0;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\\n\\nfunction propFilter( props, specialEasing ) {\\n\\tvar index, name, easing, value, hooks;\\n\\n\\t// camelCase, specialEasing and expand cssHook pass\\n\\tfor ( index in props ) {\\n\\t\\tname = camelCase( index );\\n\\t\\teasing = specialEasing[ name ];\\n\\t\\tvalue = props[ index ];\\n\\t\\tif ( Array.isArray( value ) ) {\\n\\t\\t\\teasing = value[ 1 ];\\n\\t\\t\\tvalue = props[ index ] = value[ 0 ];\\n\\t\\t}\\n\\n\\t\\tif ( index !== name ) {\\n\\t\\t\\tprops[ name ] = value;\\n\\t\\t\\tdelete props[ index ];\\n\\t\\t}\\n\\n\\t\\thooks = jQuery.cssHooks[ name ];\\n\\t\\tif ( hooks && \\\"expand\\\" in hooks ) {\\n\\t\\t\\tvalue = hooks.expand( value );\\n\\t\\t\\tdelete props[ name ];\\n\\n\\t\\t\\t// Not quite $.extend, this won't overwrite existing keys.\\n\\t\\t\\t// Reusing 'index' because we have the correct \\\"name\\\"\\n\\t\\t\\tfor ( index in value ) {\\n\\t\\t\\t\\tif ( !( index in props ) ) {\\n\\t\\t\\t\\t\\tprops[ index ] = value[ index ];\\n\\t\\t\\t\\t\\tspecialEasing[ index ] = easing;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t} else {\\n\\t\\t\\tspecialEasing[ name ] = easing;\\n\\t\\t}\\n\\t}\\n}\\n\\nfunction Animation( elem, properties, options ) {\\n\\tvar result,\\n\\t\\tstopped,\\n\\t\\tindex = 0,\\n\\t\\tlength = Animation.prefilters.length,\\n\\t\\tdeferred = jQuery.Deferred().always( function() {\\n\\n\\t\\t\\t// Don't match elem in the :animated selector\\n\\t\\t\\tdelete tick.elem;\\n\\t\\t} ),\\n\\t\\ttick = function() {\\n\\t\\t\\tif ( stopped ) {\\n\\t\\t\\t\\treturn false;\\n\\t\\t\\t}\\n\\t\\t\\tvar currentTime = fxNow || createFxNow(),\\n\\t\\t\\t\\tremaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),\\n\\n\\t\\t\\t\\t// Support: Android 2.3 only\\n\\t\\t\\t\\t// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)\\n\\t\\t\\t\\ttemp = remaining / animation.duration || 0,\\n\\t\\t\\t\\tpercent = 1 - temp,\\n\\t\\t\\t\\tindex = 0,\\n\\t\\t\\t\\tlength = animation.tweens.length;\\n\\n\\t\\t\\tfor ( ; index < length; index++ ) {\\n\\t\\t\\t\\tanimation.tweens[ index ].run( percent );\\n\\t\\t\\t}\\n\\n\\t\\t\\tdeferred.notifyWith( elem, [ animation, percent, remaining ] );\\n\\n\\t\\t\\t// If there's more to do, yield\\n\\t\\t\\tif ( percent < 1 && length ) {\\n\\t\\t\\t\\treturn remaining;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// If this was an empty animation, synthesize a final progress notification\\n\\t\\t\\tif ( !length ) {\\n\\t\\t\\t\\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Resolve the animation and report its conclusion\\n\\t\\t\\tdeferred.resolveWith( elem, [ animation ] );\\n\\t\\t\\treturn false;\\n\\t\\t},\\n\\t\\tanimation = deferred.promise( {\\n\\t\\t\\telem: elem,\\n\\t\\t\\tprops: jQuery.extend( {}, properties ),\\n\\t\\t\\topts: jQuery.extend( true, {\\n\\t\\t\\t\\tspecialEasing: {},\\n\\t\\t\\t\\teasing: jQuery.easing._default\\n\\t\\t\\t}, options ),\\n\\t\\t\\toriginalProperties: properties,\\n\\t\\t\\toriginalOptions: options,\\n\\t\\t\\tstartTime: fxNow || createFxNow(),\\n\\t\\t\\tduration: options.duration,\\n\\t\\t\\ttweens: [],\\n\\t\\t\\tcreateTween: function( prop, end ) {\\n\\t\\t\\t\\tvar tween = jQuery.Tween( elem, animation.opts, prop, end,\\n\\t\\t\\t\\t\\t\\tanimation.opts.specialEasing[ prop ] || animation.opts.easing );\\n\\t\\t\\t\\tanimation.tweens.push( tween );\\n\\t\\t\\t\\treturn tween;\\n\\t\\t\\t},\\n\\t\\t\\tstop: function( gotoEnd ) {\\n\\t\\t\\t\\tvar index = 0,\\n\\n\\t\\t\\t\\t\\t// If we are going to the end, we want to run all the tweens\\n\\t\\t\\t\\t\\t// otherwise we skip this part\\n\\t\\t\\t\\t\\tlength = gotoEnd ? animation.tweens.length : 0;\\n\\t\\t\\t\\tif ( stopped ) {\\n\\t\\t\\t\\t\\treturn this;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tstopped = true;\\n\\t\\t\\t\\tfor ( ; index < length; index++ ) {\\n\\t\\t\\t\\t\\tanimation.tweens[ index ].run( 1 );\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Resolve when we played the last frame; otherwise, reject\\n\\t\\t\\t\\tif ( gotoEnd ) {\\n\\t\\t\\t\\t\\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\\n\\t\\t\\t\\t\\tdeferred.resolveWith( elem, [ animation, gotoEnd ] );\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tdeferred.rejectWith( elem, [ animation, gotoEnd ] );\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\treturn this;\\n\\t\\t\\t}\\n\\t\\t} ),\\n\\t\\tprops = animation.props;\\n\\n\\tpropFilter( props, animation.opts.specialEasing );\\n\\n\\tfor ( ; index < length; index++ ) {\\n\\t\\tresult = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );\\n\\t\\tif ( result ) {\\n\\t\\t\\tif ( isFunction( result.stop ) ) {\\n\\t\\t\\t\\tjQuery._queueHooks( animation.elem, animation.opts.queue ).stop =\\n\\t\\t\\t\\t\\tresult.stop.bind( result );\\n\\t\\t\\t}\\n\\t\\t\\treturn result;\\n\\t\\t}\\n\\t}\\n\\n\\tjQuery.map( props, createTween, animation );\\n\\n\\tif ( isFunction( animation.opts.start ) ) {\\n\\t\\tanimation.opts.start.call( elem, animation );\\n\\t}\\n\\n\\t// Attach callbacks from options\\n\\tanimation\\n\\t\\t.progress( animation.opts.progress )\\n\\t\\t.done( animation.opts.done, animation.opts.complete )\\n\\t\\t.fail( animation.opts.fail )\\n\\t\\t.always( animation.opts.always );\\n\\n\\tjQuery.fx.timer(\\n\\t\\tjQuery.extend( tick, {\\n\\t\\t\\telem: elem,\\n\\t\\t\\tanim: animation,\\n\\t\\t\\tqueue: animation.opts.queue\\n\\t\\t} )\\n\\t);\\n\\n\\treturn animation;\\n}\\n\\njQuery.Animation = jQuery.extend( Animation, {\\n\\n\\ttweeners: {\\n\\t\\t\\\"*\\\": [ function( prop, value ) {\\n\\t\\t\\tvar tween = this.createTween( prop, value );\\n\\t\\t\\tadjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );\\n\\t\\t\\treturn tween;\\n\\t\\t} ]\\n\\t},\\n\\n\\ttweener: function( props, callback ) {\\n\\t\\tif ( isFunction( props ) ) {\\n\\t\\t\\tcallback = props;\\n\\t\\t\\tprops = [ \\\"*\\\" ];\\n\\t\\t} else {\\n\\t\\t\\tprops = props.match( rnothtmlwhite );\\n\\t\\t}\\n\\n\\t\\tvar prop,\\n\\t\\t\\tindex = 0,\\n\\t\\t\\tlength = props.length;\\n\\n\\t\\tfor ( ; index < length; index++ ) {\\n\\t\\t\\tprop = props[ index ];\\n\\t\\t\\tAnimation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];\\n\\t\\t\\tAnimation.tweeners[ prop ].unshift( callback );\\n\\t\\t}\\n\\t},\\n\\n\\tprefilters: [ defaultPrefilter ],\\n\\n\\tprefilter: function( callback, prepend ) {\\n\\t\\tif ( prepend ) {\\n\\t\\t\\tAnimation.prefilters.unshift( callback );\\n\\t\\t} else {\\n\\t\\t\\tAnimation.prefilters.push( callback );\\n\\t\\t}\\n\\t}\\n} );\\n\\njQuery.speed = function( speed, easing, fn ) {\\n\\tvar opt = speed && typeof speed === \\\"object\\\" ? jQuery.extend( {}, speed ) : {\\n\\t\\tcomplete: fn || !fn && easing ||\\n\\t\\t\\tisFunction( speed ) && speed,\\n\\t\\tduration: speed,\\n\\t\\teasing: fn && easing || easing && !isFunction( easing ) && easing\\n\\t};\\n\\n\\t// Go to the end state if fx are off\\n\\tif ( jQuery.fx.off ) {\\n\\t\\topt.duration = 0;\\n\\n\\t} else {\\n\\t\\tif ( typeof opt.duration !== \\\"number\\\" ) {\\n\\t\\t\\tif ( opt.duration in jQuery.fx.speeds ) {\\n\\t\\t\\t\\topt.duration = jQuery.fx.speeds[ opt.duration ];\\n\\n\\t\\t\\t} else {\\n\\t\\t\\t\\topt.duration = jQuery.fx.speeds._default;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\t// Normalize opt.queue - true/undefined/null -> \\\"fx\\\"\\n\\tif ( opt.queue == null || opt.queue === true ) {\\n\\t\\topt.queue = \\\"fx\\\";\\n\\t}\\n\\n\\t// Queueing\\n\\topt.old = opt.complete;\\n\\n\\topt.complete = function() {\\n\\t\\tif ( isFunction( opt.old ) ) {\\n\\t\\t\\topt.old.call( this );\\n\\t\\t}\\n\\n\\t\\tif ( opt.queue ) {\\n\\t\\t\\tjQuery.dequeue( this, opt.queue );\\n\\t\\t}\\n\\t};\\n\\n\\treturn opt;\\n};\\n\\njQuery.fn.extend( {\\n\\tfadeTo: function( speed, to, easing, callback ) {\\n\\n\\t\\t// Show any hidden elements after setting opacity to 0\\n\\t\\treturn this.filter( isHiddenWithinTree ).css( \\\"opacity\\\", 0 ).show()\\n\\n\\t\\t\\t// Animate to the value specified\\n\\t\\t\\t.end().animate( { opacity: to }, speed, easing, callback );\\n\\t},\\n\\tanimate: function( prop, speed, easing, callback ) {\\n\\t\\tvar empty = jQuery.isEmptyObject( prop ),\\n\\t\\t\\toptall = jQuery.speed( speed, easing, callback ),\\n\\t\\t\\tdoAnimation = function() {\\n\\n\\t\\t\\t\\t// Operate on a copy of prop so per-property easing won't be lost\\n\\t\\t\\t\\tvar anim = Animation( this, jQuery.extend( {}, prop ), optall );\\n\\n\\t\\t\\t\\t// Empty animations, or finishing resolves immediately\\n\\t\\t\\t\\tif ( empty || dataPriv.get( this, \\\"finish\\\" ) ) {\\n\\t\\t\\t\\t\\tanim.stop( true );\\n\\t\\t\\t\\t}\\n\\t\\t\\t};\\n\\t\\t\\tdoAnimation.finish = doAnimation;\\n\\n\\t\\treturn empty || optall.queue === false ?\\n\\t\\t\\tthis.each( doAnimation ) :\\n\\t\\t\\tthis.queue( optall.queue, doAnimation );\\n\\t},\\n\\tstop: function( type, clearQueue, gotoEnd ) {\\n\\t\\tvar stopQueue = function( hooks ) {\\n\\t\\t\\tvar stop = hooks.stop;\\n\\t\\t\\tdelete hooks.stop;\\n\\t\\t\\tstop( gotoEnd );\\n\\t\\t};\\n\\n\\t\\tif ( typeof type !== \\\"string\\\" ) {\\n\\t\\t\\tgotoEnd = clearQueue;\\n\\t\\t\\tclearQueue = type;\\n\\t\\t\\ttype = undefined;\\n\\t\\t}\\n\\t\\tif ( clearQueue && type !== false ) {\\n\\t\\t\\tthis.queue( type || \\\"fx\\\", [] );\\n\\t\\t}\\n\\n\\t\\treturn this.each( function() {\\n\\t\\t\\tvar dequeue = true,\\n\\t\\t\\t\\tindex = type != null && type + \\\"queueHooks\\\",\\n\\t\\t\\t\\ttimers = jQuery.timers,\\n\\t\\t\\t\\tdata = dataPriv.get( this );\\n\\n\\t\\t\\tif ( index ) {\\n\\t\\t\\t\\tif ( data[ index ] && data[ index ].stop ) {\\n\\t\\t\\t\\t\\tstopQueue( data[ index ] );\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tfor ( index in data ) {\\n\\t\\t\\t\\t\\tif ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {\\n\\t\\t\\t\\t\\t\\tstopQueue( data[ index ] );\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\tfor ( index = timers.length; index--; ) {\\n\\t\\t\\t\\tif ( timers[ index ].elem === this &&\\n\\t\\t\\t\\t\\t( type == null || timers[ index ].queue === type ) ) {\\n\\n\\t\\t\\t\\t\\ttimers[ index ].anim.stop( gotoEnd );\\n\\t\\t\\t\\t\\tdequeue = false;\\n\\t\\t\\t\\t\\ttimers.splice( index, 1 );\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Start the next in the queue if the last step wasn't forced.\\n\\t\\t\\t// Timers currently will call their complete callbacks, which\\n\\t\\t\\t// will dequeue but only if they were gotoEnd.\\n\\t\\t\\tif ( dequeue || !gotoEnd ) {\\n\\t\\t\\t\\tjQuery.dequeue( this, type );\\n\\t\\t\\t}\\n\\t\\t} );\\n\\t},\\n\\tfinish: function( type ) {\\n\\t\\tif ( type !== false ) {\\n\\t\\t\\ttype = type || \\\"fx\\\";\\n\\t\\t}\\n\\t\\treturn this.each( function() {\\n\\t\\t\\tvar index,\\n\\t\\t\\t\\tdata = dataPriv.get( this ),\\n\\t\\t\\t\\tqueue = data[ type + \\\"queue\\\" ],\\n\\t\\t\\t\\thooks = data[ type + \\\"queueHooks\\\" ],\\n\\t\\t\\t\\ttimers = jQuery.timers,\\n\\t\\t\\t\\tlength = queue ? queue.length : 0;\\n\\n\\t\\t\\t// Enable finishing flag on private data\\n\\t\\t\\tdata.finish = true;\\n\\n\\t\\t\\t// Empty the queue first\\n\\t\\t\\tjQuery.queue( this, type, [] );\\n\\n\\t\\t\\tif ( hooks && hooks.stop ) {\\n\\t\\t\\t\\thooks.stop.call( this, true );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Look for any active animations, and finish them\\n\\t\\t\\tfor ( index = timers.length; index--; ) {\\n\\t\\t\\t\\tif ( timers[ index ].elem === this && timers[ index ].queue === type ) {\\n\\t\\t\\t\\t\\ttimers[ index ].anim.stop( true );\\n\\t\\t\\t\\t\\ttimers.splice( index, 1 );\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Look for any animations in the old queue and finish them\\n\\t\\t\\tfor ( index = 0; index < length; index++ ) {\\n\\t\\t\\t\\tif ( queue[ index ] && queue[ index ].finish ) {\\n\\t\\t\\t\\t\\tqueue[ index ].finish.call( this );\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Turn off finishing flag\\n\\t\\t\\tdelete data.finish;\\n\\t\\t} );\\n\\t}\\n} );\\n\\njQuery.each( [ \\\"toggle\\\", \\\"show\\\", \\\"hide\\\" ], function( i, name ) {\\n\\tvar cssFn = jQuery.fn[ name ];\\n\\tjQuery.fn[ name ] = function( speed, easing, callback ) {\\n\\t\\treturn speed == null || typeof speed === \\\"boolean\\\" ?\\n\\t\\t\\tcssFn.apply( this, arguments ) :\\n\\t\\t\\tthis.animate( genFx( name, true ), speed, easing, callback );\\n\\t};\\n} );\\n\\n// Generate shortcuts for custom animations\\njQuery.each( {\\n\\tslideDown: genFx( \\\"show\\\" ),\\n\\tslideUp: genFx( \\\"hide\\\" ),\\n\\tslideToggle: genFx( \\\"toggle\\\" ),\\n\\tfadeIn: { opacity: \\\"show\\\" },\\n\\tfadeOut: { opacity: \\\"hide\\\" },\\n\\tfadeToggle: { opacity: \\\"toggle\\\" }\\n}, function( name, props ) {\\n\\tjQuery.fn[ name ] = function( speed, easing, callback ) {\\n\\t\\treturn this.animate( props, speed, easing, callback );\\n\\t};\\n} );\\n\\njQuery.timers = [];\\njQuery.fx.tick = function() {\\n\\tvar timer,\\n\\t\\ti = 0,\\n\\t\\ttimers = jQuery.timers;\\n\\n\\tfxNow = Date.now();\\n\\n\\tfor ( ; i < timers.length; i++ ) {\\n\\t\\ttimer = timers[ i ];\\n\\n\\t\\t// Run the timer and safely remove it when done (allowing for external removal)\\n\\t\\tif ( !timer() && timers[ i ] === timer ) {\\n\\t\\t\\ttimers.splice( i--, 1 );\\n\\t\\t}\\n\\t}\\n\\n\\tif ( !timers.length ) {\\n\\t\\tjQuery.fx.stop();\\n\\t}\\n\\tfxNow = undefined;\\n};\\n\\njQuery.fx.timer = function( timer ) {\\n\\tjQuery.timers.push( timer );\\n\\tjQuery.fx.start();\\n};\\n\\njQuery.fx.interval = 13;\\njQuery.fx.start = function() {\\n\\tif ( inProgress ) {\\n\\t\\treturn;\\n\\t}\\n\\n\\tinProgress = true;\\n\\tschedule();\\n};\\n\\njQuery.fx.stop = function() {\\n\\tinProgress = null;\\n};\\n\\njQuery.fx.speeds = {\\n\\tslow: 600,\\n\\tfast: 200,\\n\\n\\t// Default speed\\n\\t_default: 400\\n};\\n\\n\\n// Based off of the plugin by Clint Helfers, with permission.\\n// https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/\\njQuery.fn.delay = function( time, type ) {\\n\\ttime = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;\\n\\ttype = type || \\\"fx\\\";\\n\\n\\treturn this.queue( type, function( next, hooks ) {\\n\\t\\tvar timeout = window.setTimeout( next, time );\\n\\t\\thooks.stop = function() {\\n\\t\\t\\twindow.clearTimeout( timeout );\\n\\t\\t};\\n\\t} );\\n};\\n\\n\\n( function() {\\n\\tvar input = document.createElement( \\\"input\\\" ),\\n\\t\\tselect = document.createElement( \\\"select\\\" ),\\n\\t\\topt = select.appendChild( document.createElement( \\\"option\\\" ) );\\n\\n\\tinput.type = \\\"checkbox\\\";\\n\\n\\t// Support: Android <=4.3 only\\n\\t// Default value for a checkbox should be \\\"on\\\"\\n\\tsupport.checkOn = input.value !== \\\"\\\";\\n\\n\\t// Support: IE <=11 only\\n\\t// Must access selectedIndex to make default options select\\n\\tsupport.optSelected = opt.selected;\\n\\n\\t// Support: IE <=11 only\\n\\t// An input loses its value after becoming a radio\\n\\tinput = document.createElement( \\\"input\\\" );\\n\\tinput.value = \\\"t\\\";\\n\\tinput.type = \\\"radio\\\";\\n\\tsupport.radioValue = input.value === \\\"t\\\";\\n} )();\\n\\n\\nvar boolHook,\\n\\tattrHandle = jQuery.expr.attrHandle;\\n\\njQuery.fn.extend( {\\n\\tattr: function( name, value ) {\\n\\t\\treturn access( this, jQuery.attr, name, value, arguments.length > 1 );\\n\\t},\\n\\n\\tremoveAttr: function( name ) {\\n\\t\\treturn this.each( function() {\\n\\t\\t\\tjQuery.removeAttr( this, name );\\n\\t\\t} );\\n\\t}\\n} );\\n\\njQuery.extend( {\\n\\tattr: function( elem, name, value ) {\\n\\t\\tvar ret, hooks,\\n\\t\\t\\tnType = elem.nodeType;\\n\\n\\t\\t// Don't get/set attributes on text, comment and attribute nodes\\n\\t\\tif ( nType === 3 || nType === 8 || nType === 2 ) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\t// Fallback to prop when attributes are not supported\\n\\t\\tif ( typeof elem.getAttribute === \\\"undefined\\\" ) {\\n\\t\\t\\treturn jQuery.prop( elem, name, value );\\n\\t\\t}\\n\\n\\t\\t// Attribute hooks are determined by the lowercase version\\n\\t\\t// Grab necessary hook if one is defined\\n\\t\\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\\n\\t\\t\\thooks = jQuery.attrHooks[ name.toLowerCase() ] ||\\n\\t\\t\\t\\t( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );\\n\\t\\t}\\n\\n\\t\\tif ( value !== undefined ) {\\n\\t\\t\\tif ( value === null ) {\\n\\t\\t\\t\\tjQuery.removeAttr( elem, name );\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( hooks && \\\"set\\\" in hooks &&\\n\\t\\t\\t\\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\\n\\t\\t\\t\\treturn ret;\\n\\t\\t\\t}\\n\\n\\t\\t\\telem.setAttribute( name, value + \\\"\\\" );\\n\\t\\t\\treturn value;\\n\\t\\t}\\n\\n\\t\\tif ( hooks && \\\"get\\\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\\n\\t\\t\\treturn ret;\\n\\t\\t}\\n\\n\\t\\tret = jQuery.find.attr( elem, name );\\n\\n\\t\\t// Non-existent attributes return null, we normalize to undefined\\n\\t\\treturn ret == null ? undefined : ret;\\n\\t},\\n\\n\\tattrHooks: {\\n\\t\\ttype: {\\n\\t\\t\\tset: function( elem, value ) {\\n\\t\\t\\t\\tif ( !support.radioValue && value === \\\"radio\\\" &&\\n\\t\\t\\t\\t\\tnodeName( elem, \\\"input\\\" ) ) {\\n\\t\\t\\t\\t\\tvar val = elem.value;\\n\\t\\t\\t\\t\\telem.setAttribute( \\\"type\\\", value );\\n\\t\\t\\t\\t\\tif ( val ) {\\n\\t\\t\\t\\t\\t\\telem.value = val;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\treturn value;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\n\\tremoveAttr: function( elem, value ) {\\n\\t\\tvar name,\\n\\t\\t\\ti = 0,\\n\\n\\t\\t\\t// Attribute names can contain non-HTML whitespace characters\\n\\t\\t\\t// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\\n\\t\\t\\tattrNames = value && value.match( rnothtmlwhite );\\n\\n\\t\\tif ( attrNames && elem.nodeType === 1 ) {\\n\\t\\t\\twhile ( ( name = attrNames[ i++ ] ) ) {\\n\\t\\t\\t\\telem.removeAttribute( name );\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n} );\\n\\n// Hooks for boolean attributes\\nboolHook = {\\n\\tset: function( elem, value, name ) {\\n\\t\\tif ( value === false ) {\\n\\n\\t\\t\\t// Remove boolean attributes when set to false\\n\\t\\t\\tjQuery.removeAttr( elem, name );\\n\\t\\t} else {\\n\\t\\t\\telem.setAttribute( name, name );\\n\\t\\t}\\n\\t\\treturn name;\\n\\t}\\n};\\n\\njQuery.each( jQuery.expr.match.bool.source.match( /\\\\w+/g ), function( i, name ) {\\n\\tvar getter = attrHandle[ name ] || jQuery.find.attr;\\n\\n\\tattrHandle[ name ] = function( elem, name, isXML ) {\\n\\t\\tvar ret, handle,\\n\\t\\t\\tlowercaseName = name.toLowerCase();\\n\\n\\t\\tif ( !isXML ) {\\n\\n\\t\\t\\t// Avoid an infinite loop by temporarily removing this function from the getter\\n\\t\\t\\thandle = attrHandle[ lowercaseName ];\\n\\t\\t\\tattrHandle[ lowercaseName ] = ret;\\n\\t\\t\\tret = getter( elem, name, isXML ) != null ?\\n\\t\\t\\t\\tlowercaseName :\\n\\t\\t\\t\\tnull;\\n\\t\\t\\tattrHandle[ lowercaseName ] = handle;\\n\\t\\t}\\n\\t\\treturn ret;\\n\\t};\\n} );\\n\\n\\n\\n\\nvar rfocusable = /^(?:input|select|textarea|button)$/i,\\n\\trclickable = /^(?:a|area)$/i;\\n\\njQuery.fn.extend( {\\n\\tprop: function( name, value ) {\\n\\t\\treturn access( this, jQuery.prop, name, value, arguments.length > 1 );\\n\\t},\\n\\n\\tremoveProp: function( name ) {\\n\\t\\treturn this.each( function() {\\n\\t\\t\\tdelete this[ jQuery.propFix[ name ] || name ];\\n\\t\\t} );\\n\\t}\\n} );\\n\\njQuery.extend( {\\n\\tprop: function( elem, name, value ) {\\n\\t\\tvar ret, hooks,\\n\\t\\t\\tnType = elem.nodeType;\\n\\n\\t\\t// Don't get/set properties on text, comment and attribute nodes\\n\\t\\tif ( nType === 3 || nType === 8 || nType === 2 ) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\\n\\n\\t\\t\\t// Fix name and attach hooks\\n\\t\\t\\tname = jQuery.propFix[ name ] || name;\\n\\t\\t\\thooks = jQuery.propHooks[ name ];\\n\\t\\t}\\n\\n\\t\\tif ( value !== undefined ) {\\n\\t\\t\\tif ( hooks && \\\"set\\\" in hooks &&\\n\\t\\t\\t\\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\\n\\t\\t\\t\\treturn ret;\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn ( elem[ name ] = value );\\n\\t\\t}\\n\\n\\t\\tif ( hooks && \\\"get\\\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\\n\\t\\t\\treturn ret;\\n\\t\\t}\\n\\n\\t\\treturn elem[ name ];\\n\\t},\\n\\n\\tpropHooks: {\\n\\t\\ttabIndex: {\\n\\t\\t\\tget: function( elem ) {\\n\\n\\t\\t\\t\\t// Support: IE <=9 - 11 only\\n\\t\\t\\t\\t// elem.tabIndex doesn't always return the\\n\\t\\t\\t\\t// correct value when it hasn't been explicitly set\\n\\t\\t\\t\\t// https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\\n\\t\\t\\t\\t// Use proper attribute retrieval(#12072)\\n\\t\\t\\t\\tvar tabindex = jQuery.find.attr( elem, \\\"tabindex\\\" );\\n\\n\\t\\t\\t\\tif ( tabindex ) {\\n\\t\\t\\t\\t\\treturn parseInt( tabindex, 10 );\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (\\n\\t\\t\\t\\t\\trfocusable.test( elem.nodeName ) ||\\n\\t\\t\\t\\t\\trclickable.test( elem.nodeName ) &&\\n\\t\\t\\t\\t\\telem.href\\n\\t\\t\\t\\t) {\\n\\t\\t\\t\\t\\treturn 0;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn -1;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\n\\tpropFix: {\\n\\t\\t\\\"for\\\": \\\"htmlFor\\\",\\n\\t\\t\\\"class\\\": \\\"className\\\"\\n\\t}\\n} );\\n\\n// Support: IE <=11 only\\n// Accessing the selectedIndex property\\n// forces the browser to respect setting selected\\n// on the option\\n// The getter ensures a default option is selected\\n// when in an optgroup\\n// eslint rule \\\"no-unused-expressions\\\" is disabled for this code\\n// since it considers such accessions noop\\nif ( !support.optSelected ) {\\n\\tjQuery.propHooks.selected = {\\n\\t\\tget: function( elem ) {\\n\\n\\t\\t\\t/* eslint no-unused-expressions: \\\"off\\\" */\\n\\n\\t\\t\\tvar parent = elem.parentNode;\\n\\t\\t\\tif ( parent && parent.parentNode ) {\\n\\t\\t\\t\\tparent.parentNode.selectedIndex;\\n\\t\\t\\t}\\n\\t\\t\\treturn null;\\n\\t\\t},\\n\\t\\tset: function( elem ) {\\n\\n\\t\\t\\t/* eslint no-unused-expressions: \\\"off\\\" */\\n\\n\\t\\t\\tvar parent = elem.parentNode;\\n\\t\\t\\tif ( parent ) {\\n\\t\\t\\t\\tparent.selectedIndex;\\n\\n\\t\\t\\t\\tif ( parent.parentNode ) {\\n\\t\\t\\t\\t\\tparent.parentNode.selectedIndex;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t};\\n}\\n\\njQuery.each( [\\n\\t\\\"tabIndex\\\",\\n\\t\\\"readOnly\\\",\\n\\t\\\"maxLength\\\",\\n\\t\\\"cellSpacing\\\",\\n\\t\\\"cellPadding\\\",\\n\\t\\\"rowSpan\\\",\\n\\t\\\"colSpan\\\",\\n\\t\\\"useMap\\\",\\n\\t\\\"frameBorder\\\",\\n\\t\\\"contentEditable\\\"\\n], function() {\\n\\tjQuery.propFix[ this.toLowerCase() ] = this;\\n} );\\n\\n\\n\\n\\n\\t// Strip and collapse whitespace according to HTML spec\\n\\t// https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace\\n\\tfunction stripAndCollapse( value ) {\\n\\t\\tvar tokens = value.match( rnothtmlwhite ) || [];\\n\\t\\treturn tokens.join( \\\" \\\" );\\n\\t}\\n\\n\\nfunction getClass( elem ) {\\n\\treturn elem.getAttribute && elem.getAttribute( \\\"class\\\" ) || \\\"\\\";\\n}\\n\\nfunction classesToArray( value ) {\\n\\tif ( Array.isArray( value ) ) {\\n\\t\\treturn value;\\n\\t}\\n\\tif ( typeof value === \\\"string\\\" ) {\\n\\t\\treturn value.match( rnothtmlwhite ) || [];\\n\\t}\\n\\treturn [];\\n}\\n\\njQuery.fn.extend( {\\n\\taddClass: function( value ) {\\n\\t\\tvar classes, elem, cur, curValue, clazz, j, finalValue,\\n\\t\\t\\ti = 0;\\n\\n\\t\\tif ( isFunction( value ) ) {\\n\\t\\t\\treturn this.each( function( j ) {\\n\\t\\t\\t\\tjQuery( this ).addClass( value.call( this, j, getClass( this ) ) );\\n\\t\\t\\t} );\\n\\t\\t}\\n\\n\\t\\tclasses = classesToArray( value );\\n\\n\\t\\tif ( classes.length ) {\\n\\t\\t\\twhile ( ( elem = this[ i++ ] ) ) {\\n\\t\\t\\t\\tcurValue = getClass( elem );\\n\\t\\t\\t\\tcur = elem.nodeType === 1 && ( \\\" \\\" + stripAndCollapse( curValue ) + \\\" \\\" );\\n\\n\\t\\t\\t\\tif ( cur ) {\\n\\t\\t\\t\\t\\tj = 0;\\n\\t\\t\\t\\t\\twhile ( ( clazz = classes[ j++ ] ) ) {\\n\\t\\t\\t\\t\\t\\tif ( cur.indexOf( \\\" \\\" + clazz + \\\" \\\" ) < 0 ) {\\n\\t\\t\\t\\t\\t\\t\\tcur += clazz + \\\" \\\";\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t// Only assign if different to avoid unneeded rendering.\\n\\t\\t\\t\\t\\tfinalValue = stripAndCollapse( cur );\\n\\t\\t\\t\\t\\tif ( curValue !== finalValue ) {\\n\\t\\t\\t\\t\\t\\telem.setAttribute( \\\"class\\\", finalValue );\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn this;\\n\\t},\\n\\n\\tremoveClass: function( value ) {\\n\\t\\tvar classes, elem, cur, curValue, clazz, j, finalValue,\\n\\t\\t\\ti = 0;\\n\\n\\t\\tif ( isFunction( value ) ) {\\n\\t\\t\\treturn this.each( function( j ) {\\n\\t\\t\\t\\tjQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );\\n\\t\\t\\t} );\\n\\t\\t}\\n\\n\\t\\tif ( !arguments.length ) {\\n\\t\\t\\treturn this.attr( \\\"class\\\", \\\"\\\" );\\n\\t\\t}\\n\\n\\t\\tclasses = classesToArray( value );\\n\\n\\t\\tif ( classes.length ) {\\n\\t\\t\\twhile ( ( elem = this[ i++ ] ) ) {\\n\\t\\t\\t\\tcurValue = getClass( elem );\\n\\n\\t\\t\\t\\t// This expression is here for better compressibility (see addClass)\\n\\t\\t\\t\\tcur = elem.nodeType === 1 && ( \\\" \\\" + stripAndCollapse( curValue ) + \\\" \\\" );\\n\\n\\t\\t\\t\\tif ( cur ) {\\n\\t\\t\\t\\t\\tj = 0;\\n\\t\\t\\t\\t\\twhile ( ( clazz = classes[ j++ ] ) ) {\\n\\n\\t\\t\\t\\t\\t\\t// Remove *all* instances\\n\\t\\t\\t\\t\\t\\twhile ( cur.indexOf( \\\" \\\" + clazz + \\\" \\\" ) > -1 ) {\\n\\t\\t\\t\\t\\t\\t\\tcur = cur.replace( \\\" \\\" + clazz + \\\" \\\", \\\" \\\" );\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t// Only assign if different to avoid unneeded rendering.\\n\\t\\t\\t\\t\\tfinalValue = stripAndCollapse( cur );\\n\\t\\t\\t\\t\\tif ( curValue !== finalValue ) {\\n\\t\\t\\t\\t\\t\\telem.setAttribute( \\\"class\\\", finalValue );\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn this;\\n\\t},\\n\\n\\ttoggleClass: function( value, stateVal ) {\\n\\t\\tvar type = typeof value,\\n\\t\\t\\tisValidValue = type === \\\"string\\\" || Array.isArray( value );\\n\\n\\t\\tif ( typeof stateVal === \\\"boolean\\\" && isValidValue ) {\\n\\t\\t\\treturn stateVal ? this.addClass( value ) : this.removeClass( value );\\n\\t\\t}\\n\\n\\t\\tif ( isFunction( value ) ) {\\n\\t\\t\\treturn this.each( function( i ) {\\n\\t\\t\\t\\tjQuery( this ).toggleClass(\\n\\t\\t\\t\\t\\tvalue.call( this, i, getClass( this ), stateVal ),\\n\\t\\t\\t\\t\\tstateVal\\n\\t\\t\\t\\t);\\n\\t\\t\\t} );\\n\\t\\t}\\n\\n\\t\\treturn this.each( function() {\\n\\t\\t\\tvar className, i, self, classNames;\\n\\n\\t\\t\\tif ( isValidValue ) {\\n\\n\\t\\t\\t\\t// Toggle individual class names\\n\\t\\t\\t\\ti = 0;\\n\\t\\t\\t\\tself = jQuery( this );\\n\\t\\t\\t\\tclassNames = classesToArray( value );\\n\\n\\t\\t\\t\\twhile ( ( className = classNames[ i++ ] ) ) {\\n\\n\\t\\t\\t\\t\\t// Check each className given, space separated list\\n\\t\\t\\t\\t\\tif ( self.hasClass( className ) ) {\\n\\t\\t\\t\\t\\t\\tself.removeClass( className );\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\tself.addClass( className );\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t// Toggle whole class name\\n\\t\\t\\t} else if ( value === undefined || type === \\\"boolean\\\" ) {\\n\\t\\t\\t\\tclassName = getClass( this );\\n\\t\\t\\t\\tif ( className ) {\\n\\n\\t\\t\\t\\t\\t// Store className if set\\n\\t\\t\\t\\t\\tdataPriv.set( this, \\\"__className__\\\", className );\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// If the element has a class name or if we're passed `false`,\\n\\t\\t\\t\\t// then remove the whole classname (if there was one, the above saved it).\\n\\t\\t\\t\\t// Otherwise bring back whatever was previously saved (if anything),\\n\\t\\t\\t\\t// falling back to the empty string if nothing was stored.\\n\\t\\t\\t\\tif ( this.setAttribute ) {\\n\\t\\t\\t\\t\\tthis.setAttribute( \\\"class\\\",\\n\\t\\t\\t\\t\\t\\tclassName || value === false ?\\n\\t\\t\\t\\t\\t\\t\\\"\\\" :\\n\\t\\t\\t\\t\\t\\tdataPriv.get( this, \\\"__className__\\\" ) || \\\"\\\"\\n\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t} );\\n\\t},\\n\\n\\thasClass: function( selector ) {\\n\\t\\tvar className, elem,\\n\\t\\t\\ti = 0;\\n\\n\\t\\tclassName = \\\" \\\" + selector + \\\" \\\";\\n\\t\\twhile ( ( elem = this[ i++ ] ) ) {\\n\\t\\t\\tif ( elem.nodeType === 1 &&\\n\\t\\t\\t\\t( \\\" \\\" + stripAndCollapse( getClass( elem ) ) + \\\" \\\" ).indexOf( className ) > -1 ) {\\n\\t\\t\\t\\t\\treturn true;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn false;\\n\\t}\\n} );\\n\\n\\n\\n\\nvar rreturn = /\\\\r/g;\\n\\njQuery.fn.extend( {\\n\\tval: function( value ) {\\n\\t\\tvar hooks, ret, valueIsFunction,\\n\\t\\t\\telem = this[ 0 ];\\n\\n\\t\\tif ( !arguments.length ) {\\n\\t\\t\\tif ( elem ) {\\n\\t\\t\\t\\thooks = jQuery.valHooks[ elem.type ] ||\\n\\t\\t\\t\\t\\tjQuery.valHooks[ elem.nodeName.toLowerCase() ];\\n\\n\\t\\t\\t\\tif ( hooks &&\\n\\t\\t\\t\\t\\t\\\"get\\\" in hooks &&\\n\\t\\t\\t\\t\\t( ret = hooks.get( elem, \\\"value\\\" ) ) !== undefined\\n\\t\\t\\t\\t) {\\n\\t\\t\\t\\t\\treturn ret;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tret = elem.value;\\n\\n\\t\\t\\t\\t// Handle most common string cases\\n\\t\\t\\t\\tif ( typeof ret === \\\"string\\\" ) {\\n\\t\\t\\t\\t\\treturn ret.replace( rreturn, \\\"\\\" );\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Handle cases where value is null/undef or number\\n\\t\\t\\t\\treturn ret == null ? \\\"\\\" : ret;\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tvalueIsFunction = isFunction( value );\\n\\n\\t\\treturn this.each( function( i ) {\\n\\t\\t\\tvar val;\\n\\n\\t\\t\\tif ( this.nodeType !== 1 ) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( valueIsFunction ) {\\n\\t\\t\\t\\tval = value.call( this, i, jQuery( this ).val() );\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tval = value;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Treat null/undefined as \\\"\\\"; convert numbers to string\\n\\t\\t\\tif ( val == null ) {\\n\\t\\t\\t\\tval = \\\"\\\";\\n\\n\\t\\t\\t} else if ( typeof val === \\\"number\\\" ) {\\n\\t\\t\\t\\tval += \\\"\\\";\\n\\n\\t\\t\\t} else if ( Array.isArray( val ) ) {\\n\\t\\t\\t\\tval = jQuery.map( val, function( value ) {\\n\\t\\t\\t\\t\\treturn value == null ? \\\"\\\" : value + \\\"\\\";\\n\\t\\t\\t\\t} );\\n\\t\\t\\t}\\n\\n\\t\\t\\thooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];\\n\\n\\t\\t\\t// If set returns undefined, fall back to normal setting\\n\\t\\t\\tif ( !hooks || !( \\\"set\\\" in hooks ) || hooks.set( this, val, \\\"value\\\" ) === undefined ) {\\n\\t\\t\\t\\tthis.value = val;\\n\\t\\t\\t}\\n\\t\\t} );\\n\\t}\\n} );\\n\\njQuery.extend( {\\n\\tvalHooks: {\\n\\t\\toption: {\\n\\t\\t\\tget: function( elem ) {\\n\\n\\t\\t\\t\\tvar val = jQuery.find.attr( elem, \\\"value\\\" );\\n\\t\\t\\t\\treturn val != null ?\\n\\t\\t\\t\\t\\tval :\\n\\n\\t\\t\\t\\t\\t// Support: IE <=10 - 11 only\\n\\t\\t\\t\\t\\t// option.text throws exceptions (#14686, #14858)\\n\\t\\t\\t\\t\\t// Strip and collapse whitespace\\n\\t\\t\\t\\t\\t// https://html.spec.whatwg.org/#strip-and-collapse-whitespace\\n\\t\\t\\t\\t\\tstripAndCollapse( jQuery.text( elem ) );\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\tselect: {\\n\\t\\t\\tget: function( elem ) {\\n\\t\\t\\t\\tvar value, option, i,\\n\\t\\t\\t\\t\\toptions = elem.options,\\n\\t\\t\\t\\t\\tindex = elem.selectedIndex,\\n\\t\\t\\t\\t\\tone = elem.type === \\\"select-one\\\",\\n\\t\\t\\t\\t\\tvalues = one ? null : [],\\n\\t\\t\\t\\t\\tmax = one ? index + 1 : options.length;\\n\\n\\t\\t\\t\\tif ( index < 0 ) {\\n\\t\\t\\t\\t\\ti = max;\\n\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\ti = one ? index : 0;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Loop through all the selected options\\n\\t\\t\\t\\tfor ( ; i < max; i++ ) {\\n\\t\\t\\t\\t\\toption = options[ i ];\\n\\n\\t\\t\\t\\t\\t// Support: IE <=9 only\\n\\t\\t\\t\\t\\t// IE8-9 doesn't update selected after form reset (#2551)\\n\\t\\t\\t\\t\\tif ( ( option.selected || i === index ) &&\\n\\n\\t\\t\\t\\t\\t\\t\\t// Don't return options that are disabled or in a disabled optgroup\\n\\t\\t\\t\\t\\t\\t\\t!option.disabled &&\\n\\t\\t\\t\\t\\t\\t\\t( !option.parentNode.disabled ||\\n\\t\\t\\t\\t\\t\\t\\t\\t!nodeName( option.parentNode, \\\"optgroup\\\" ) ) ) {\\n\\n\\t\\t\\t\\t\\t\\t// Get the specific value for the option\\n\\t\\t\\t\\t\\t\\tvalue = jQuery( option ).val();\\n\\n\\t\\t\\t\\t\\t\\t// We don't need an array for one selects\\n\\t\\t\\t\\t\\t\\tif ( one ) {\\n\\t\\t\\t\\t\\t\\t\\treturn value;\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t// Multi-Selects return an array\\n\\t\\t\\t\\t\\t\\tvalues.push( value );\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn values;\\n\\t\\t\\t},\\n\\n\\t\\t\\tset: function( elem, value ) {\\n\\t\\t\\t\\tvar optionSet, option,\\n\\t\\t\\t\\t\\toptions = elem.options,\\n\\t\\t\\t\\t\\tvalues = jQuery.makeArray( value ),\\n\\t\\t\\t\\t\\ti = options.length;\\n\\n\\t\\t\\t\\twhile ( i-- ) {\\n\\t\\t\\t\\t\\toption = options[ i ];\\n\\n\\t\\t\\t\\t\\t/* eslint-disable no-cond-assign */\\n\\n\\t\\t\\t\\t\\tif ( option.selected =\\n\\t\\t\\t\\t\\t\\tjQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1\\n\\t\\t\\t\\t\\t) {\\n\\t\\t\\t\\t\\t\\toptionSet = true;\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t/* eslint-enable no-cond-assign */\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Force browsers to behave consistently when non-matching value is set\\n\\t\\t\\t\\tif ( !optionSet ) {\\n\\t\\t\\t\\t\\telem.selectedIndex = -1;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\treturn values;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n} );\\n\\n// Radios and checkboxes getter/setter\\njQuery.each( [ \\\"radio\\\", \\\"checkbox\\\" ], function() {\\n\\tjQuery.valHooks[ this ] = {\\n\\t\\tset: function( elem, value ) {\\n\\t\\t\\tif ( Array.isArray( value ) ) {\\n\\t\\t\\t\\treturn ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );\\n\\t\\t\\t}\\n\\t\\t}\\n\\t};\\n\\tif ( !support.checkOn ) {\\n\\t\\tjQuery.valHooks[ this ].get = function( elem ) {\\n\\t\\t\\treturn elem.getAttribute( \\\"value\\\" ) === null ? \\\"on\\\" : elem.value;\\n\\t\\t};\\n\\t}\\n} );\\n\\n\\n\\n\\n// Return jQuery for attributes-only inclusion\\n\\n\\nsupport.focusin = \\\"onfocusin\\\" in window;\\n\\n\\nvar rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,\\n\\tstopPropagationCallback = function( e ) {\\n\\t\\te.stopPropagation();\\n\\t};\\n\\njQuery.extend( jQuery.event, {\\n\\n\\ttrigger: function( event, data, elem, onlyHandlers ) {\\n\\n\\t\\tvar i, cur, tmp, bubbleType, ontype, handle, special, lastElement,\\n\\t\\t\\teventPath = [ elem || document ],\\n\\t\\t\\ttype = hasOwn.call( event, \\\"type\\\" ) ? event.type : event,\\n\\t\\t\\tnamespaces = hasOwn.call( event, \\\"namespace\\\" ) ? event.namespace.split( \\\".\\\" ) : [];\\n\\n\\t\\tcur = lastElement = tmp = elem = elem || document;\\n\\n\\t\\t// Don't do events on text and comment nodes\\n\\t\\tif ( elem.nodeType === 3 || elem.nodeType === 8 ) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\t// focus/blur morphs to focusin/out; ensure we're not firing them right now\\n\\t\\tif ( rfocusMorph.test( type + jQuery.event.triggered ) ) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tif ( type.indexOf( \\\".\\\" ) > -1 ) {\\n\\n\\t\\t\\t// Namespaced trigger; create a regexp to match event type in handle()\\n\\t\\t\\tnamespaces = type.split( \\\".\\\" );\\n\\t\\t\\ttype = namespaces.shift();\\n\\t\\t\\tnamespaces.sort();\\n\\t\\t}\\n\\t\\tontype = type.indexOf( \\\":\\\" ) < 0 && \\\"on\\\" + type;\\n\\n\\t\\t// Caller can pass in a jQuery.Event object, Object, or just an event type string\\n\\t\\tevent = event[ jQuery.expando ] ?\\n\\t\\t\\tevent :\\n\\t\\t\\tnew jQuery.Event( type, typeof event === \\\"object\\\" && event );\\n\\n\\t\\t// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\\n\\t\\tevent.isTrigger = onlyHandlers ? 2 : 3;\\n\\t\\tevent.namespace = namespaces.join( \\\".\\\" );\\n\\t\\tevent.rnamespace = event.namespace ?\\n\\t\\t\\tnew RegExp( \\\"(^|\\\\\\\\.)\\\" + namespaces.join( \\\"\\\\\\\\.(?:.*\\\\\\\\.|)\\\" ) + \\\"(\\\\\\\\.|$)\\\" ) :\\n\\t\\t\\tnull;\\n\\n\\t\\t// Clean up the event in case it is being reused\\n\\t\\tevent.result = undefined;\\n\\t\\tif ( !event.target ) {\\n\\t\\t\\tevent.target = elem;\\n\\t\\t}\\n\\n\\t\\t// Clone any incoming data and prepend the event, creating the handler arg list\\n\\t\\tdata = data == null ?\\n\\t\\t\\t[ event ] :\\n\\t\\t\\tjQuery.makeArray( data, [ event ] );\\n\\n\\t\\t// Allow special events to draw outside the lines\\n\\t\\tspecial = jQuery.event.special[ type ] || {};\\n\\t\\tif ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\t// Determine event propagation path in advance, per W3C events spec (#9951)\\n\\t\\t// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\\n\\t\\tif ( !onlyHandlers && !special.noBubble && !isWindow( elem ) ) {\\n\\n\\t\\t\\tbubbleType = special.delegateType || type;\\n\\t\\t\\tif ( !rfocusMorph.test( bubbleType + type ) ) {\\n\\t\\t\\t\\tcur = cur.parentNode;\\n\\t\\t\\t}\\n\\t\\t\\tfor ( ; cur; cur = cur.parentNode ) {\\n\\t\\t\\t\\teventPath.push( cur );\\n\\t\\t\\t\\ttmp = cur;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Only add window if we got to document (e.g., not plain obj or detached DOM)\\n\\t\\t\\tif ( tmp === ( elem.ownerDocument || document ) ) {\\n\\t\\t\\t\\teventPath.push( tmp.defaultView || tmp.parentWindow || window );\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// Fire handlers on the event path\\n\\t\\ti = 0;\\n\\t\\twhile ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {\\n\\t\\t\\tlastElement = cur;\\n\\t\\t\\tevent.type = i > 1 ?\\n\\t\\t\\t\\tbubbleType :\\n\\t\\t\\t\\tspecial.bindType || type;\\n\\n\\t\\t\\t// jQuery handler\\n\\t\\t\\thandle = ( dataPriv.get( cur, \\\"events\\\" ) || {} )[ event.type ] &&\\n\\t\\t\\t\\tdataPriv.get( cur, \\\"handle\\\" );\\n\\t\\t\\tif ( handle ) {\\n\\t\\t\\t\\thandle.apply( cur, data );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Native handler\\n\\t\\t\\thandle = ontype && cur[ ontype ];\\n\\t\\t\\tif ( handle && handle.apply && acceptData( cur ) ) {\\n\\t\\t\\t\\tevent.result = handle.apply( cur, data );\\n\\t\\t\\t\\tif ( event.result === false ) {\\n\\t\\t\\t\\t\\tevent.preventDefault();\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\tevent.type = type;\\n\\n\\t\\t// If nobody prevented the default action, do it now\\n\\t\\tif ( !onlyHandlers && !event.isDefaultPrevented() ) {\\n\\n\\t\\t\\tif ( ( !special._default ||\\n\\t\\t\\t\\tspecial._default.apply( eventPath.pop(), data ) === false ) &&\\n\\t\\t\\t\\tacceptData( elem ) ) {\\n\\n\\t\\t\\t\\t// Call a native DOM method on the target with the same name as the event.\\n\\t\\t\\t\\t// Don't do default actions on window, that's where global variables be (#6170)\\n\\t\\t\\t\\tif ( ontype && isFunction( elem[ type ] ) && !isWindow( elem ) ) {\\n\\n\\t\\t\\t\\t\\t// Don't re-trigger an onFOO event when we call its FOO() method\\n\\t\\t\\t\\t\\ttmp = elem[ ontype ];\\n\\n\\t\\t\\t\\t\\tif ( tmp ) {\\n\\t\\t\\t\\t\\t\\telem[ ontype ] = null;\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t// Prevent re-triggering of the same event, since we already bubbled it above\\n\\t\\t\\t\\t\\tjQuery.event.triggered = type;\\n\\n\\t\\t\\t\\t\\tif ( event.isPropagationStopped() ) {\\n\\t\\t\\t\\t\\t\\tlastElement.addEventListener( type, stopPropagationCallback );\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\telem[ type ]();\\n\\n\\t\\t\\t\\t\\tif ( event.isPropagationStopped() ) {\\n\\t\\t\\t\\t\\t\\tlastElement.removeEventListener( type, stopPropagationCallback );\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tjQuery.event.triggered = undefined;\\n\\n\\t\\t\\t\\t\\tif ( tmp ) {\\n\\t\\t\\t\\t\\t\\telem[ ontype ] = tmp;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn event.result;\\n\\t},\\n\\n\\t// Piggyback on a donor event to simulate a different one\\n\\t// Used only for `focus(in | out)` events\\n\\tsimulate: function( type, elem, event ) {\\n\\t\\tvar e = jQuery.extend(\\n\\t\\t\\tnew jQuery.Event(),\\n\\t\\t\\tevent,\\n\\t\\t\\t{\\n\\t\\t\\t\\ttype: type,\\n\\t\\t\\t\\tisSimulated: true\\n\\t\\t\\t}\\n\\t\\t);\\n\\n\\t\\tjQuery.event.trigger( e, null, elem );\\n\\t}\\n\\n} );\\n\\njQuery.fn.extend( {\\n\\n\\ttrigger: function( type, data ) {\\n\\t\\treturn this.each( function() {\\n\\t\\t\\tjQuery.event.trigger( type, data, this );\\n\\t\\t} );\\n\\t},\\n\\ttriggerHandler: function( type, data ) {\\n\\t\\tvar elem = this[ 0 ];\\n\\t\\tif ( elem ) {\\n\\t\\t\\treturn jQuery.event.trigger( type, data, elem, true );\\n\\t\\t}\\n\\t}\\n} );\\n\\n\\n// Support: Firefox <=44\\n// Firefox doesn't have focus(in | out) events\\n// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787\\n//\\n// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1\\n// focus(in | out) events fire after focus & blur events,\\n// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order\\n// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857\\nif ( !support.focusin ) {\\n\\tjQuery.each( { focus: \\\"focusin\\\", blur: \\\"focusout\\\" }, function( orig, fix ) {\\n\\n\\t\\t// Attach a single capturing handler on the document while someone wants focusin/focusout\\n\\t\\tvar handler = function( event ) {\\n\\t\\t\\tjQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );\\n\\t\\t};\\n\\n\\t\\tjQuery.event.special[ fix ] = {\\n\\t\\t\\tsetup: function() {\\n\\t\\t\\t\\tvar doc = this.ownerDocument || this,\\n\\t\\t\\t\\t\\tattaches = dataPriv.access( doc, fix );\\n\\n\\t\\t\\t\\tif ( !attaches ) {\\n\\t\\t\\t\\t\\tdoc.addEventListener( orig, handler, true );\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tdataPriv.access( doc, fix, ( attaches || 0 ) + 1 );\\n\\t\\t\\t},\\n\\t\\t\\tteardown: function() {\\n\\t\\t\\t\\tvar doc = this.ownerDocument || this,\\n\\t\\t\\t\\t\\tattaches = dataPriv.access( doc, fix ) - 1;\\n\\n\\t\\t\\t\\tif ( !attaches ) {\\n\\t\\t\\t\\t\\tdoc.removeEventListener( orig, handler, true );\\n\\t\\t\\t\\t\\tdataPriv.remove( doc, fix );\\n\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tdataPriv.access( doc, fix, attaches );\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t};\\n\\t} );\\n}\\nvar location = window.location;\\n\\nvar nonce = Date.now();\\n\\nvar rquery = ( /\\\\?/ );\\n\\n\\n\\n// Cross-browser xml parsing\\njQuery.parseXML = function( data ) {\\n\\tvar xml;\\n\\tif ( !data || typeof data !== \\\"string\\\" ) {\\n\\t\\treturn null;\\n\\t}\\n\\n\\t// Support: IE 9 - 11 only\\n\\t// IE throws on parseFromString with invalid input.\\n\\ttry {\\n\\t\\txml = ( new window.DOMParser() ).parseFromString( data, \\\"text/xml\\\" );\\n\\t} catch ( e ) {\\n\\t\\txml = undefined;\\n\\t}\\n\\n\\tif ( !xml || xml.getElementsByTagName( \\\"parsererror\\\" ).length ) {\\n\\t\\tjQuery.error( \\\"Invalid XML: \\\" + data );\\n\\t}\\n\\treturn xml;\\n};\\n\\n\\nvar\\n\\trbracket = /\\\\[\\\\]$/,\\n\\trCRLF = /\\\\r?\\\\n/g,\\n\\trsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\\n\\trsubmittable = /^(?:input|select|textarea|keygen)/i;\\n\\nfunction buildParams( prefix, obj, traditional, add ) {\\n\\tvar name;\\n\\n\\tif ( Array.isArray( obj ) ) {\\n\\n\\t\\t// Serialize array item.\\n\\t\\tjQuery.each( obj, function( i, v ) {\\n\\t\\t\\tif ( traditional || rbracket.test( prefix ) ) {\\n\\n\\t\\t\\t\\t// Treat each array item as a scalar.\\n\\t\\t\\t\\tadd( prefix, v );\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t// Item is non-scalar (array or object), encode its numeric index.\\n\\t\\t\\t\\tbuildParams(\\n\\t\\t\\t\\t\\tprefix + \\\"[\\\" + ( typeof v === \\\"object\\\" && v != null ? i : \\\"\\\" ) + \\\"]\\\",\\n\\t\\t\\t\\t\\tv,\\n\\t\\t\\t\\t\\ttraditional,\\n\\t\\t\\t\\t\\tadd\\n\\t\\t\\t\\t);\\n\\t\\t\\t}\\n\\t\\t} );\\n\\n\\t} else if ( !traditional && toType( obj ) === \\\"object\\\" ) {\\n\\n\\t\\t// Serialize object item.\\n\\t\\tfor ( name in obj ) {\\n\\t\\t\\tbuildParams( prefix + \\\"[\\\" + name + \\\"]\\\", obj[ name ], traditional, add );\\n\\t\\t}\\n\\n\\t} else {\\n\\n\\t\\t// Serialize scalar item.\\n\\t\\tadd( prefix, obj );\\n\\t}\\n}\\n\\n// Serialize an array of form elements or a set of\\n// key/values into a query string\\njQuery.param = function( a, traditional ) {\\n\\tvar prefix,\\n\\t\\ts = [],\\n\\t\\tadd = function( key, valueOrFunction ) {\\n\\n\\t\\t\\t// If value is a function, invoke it and use its return value\\n\\t\\t\\tvar value = isFunction( valueOrFunction ) ?\\n\\t\\t\\t\\tvalueOrFunction() :\\n\\t\\t\\t\\tvalueOrFunction;\\n\\n\\t\\t\\ts[ s.length ] = encodeURIComponent( key ) + \\\"=\\\" +\\n\\t\\t\\t\\tencodeURIComponent( value == null ? \\\"\\\" : value );\\n\\t\\t};\\n\\n\\tif ( a == null ) {\\n\\t\\treturn \\\"\\\";\\n\\t}\\n\\n\\t// If an array was passed in, assume that it is an array of form elements.\\n\\tif ( Array.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {\\n\\n\\t\\t// Serialize the form elements\\n\\t\\tjQuery.each( a, function() {\\n\\t\\t\\tadd( this.name, this.value );\\n\\t\\t} );\\n\\n\\t} else {\\n\\n\\t\\t// If traditional, encode the \\\"old\\\" way (the way 1.3.2 or older\\n\\t\\t// did it), otherwise encode params recursively.\\n\\t\\tfor ( prefix in a ) {\\n\\t\\t\\tbuildParams( prefix, a[ prefix ], traditional, add );\\n\\t\\t}\\n\\t}\\n\\n\\t// Return the resulting serialization\\n\\treturn s.join( \\\"&\\\" );\\n};\\n\\njQuery.fn.extend( {\\n\\tserialize: function() {\\n\\t\\treturn jQuery.param( this.serializeArray() );\\n\\t},\\n\\tserializeArray: function() {\\n\\t\\treturn this.map( function() {\\n\\n\\t\\t\\t// Can add propHook for \\\"elements\\\" to filter or add form elements\\n\\t\\t\\tvar elements = jQuery.prop( this, \\\"elements\\\" );\\n\\t\\t\\treturn elements ? jQuery.makeArray( elements ) : this;\\n\\t\\t} )\\n\\t\\t.filter( function() {\\n\\t\\t\\tvar type = this.type;\\n\\n\\t\\t\\t// Use .is( \\\":disabled\\\" ) so that fieldset[disabled] works\\n\\t\\t\\treturn this.name && !jQuery( this ).is( \\\":disabled\\\" ) &&\\n\\t\\t\\t\\trsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&\\n\\t\\t\\t\\t( this.checked || !rcheckableType.test( type ) );\\n\\t\\t} )\\n\\t\\t.map( function( i, elem ) {\\n\\t\\t\\tvar val = jQuery( this ).val();\\n\\n\\t\\t\\tif ( val == null ) {\\n\\t\\t\\t\\treturn null;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( Array.isArray( val ) ) {\\n\\t\\t\\t\\treturn jQuery.map( val, function( val ) {\\n\\t\\t\\t\\t\\treturn { name: elem.name, value: val.replace( rCRLF, \\\"\\\\r\\\\n\\\" ) };\\n\\t\\t\\t\\t} );\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn { name: elem.name, value: val.replace( rCRLF, \\\"\\\\r\\\\n\\\" ) };\\n\\t\\t} ).get();\\n\\t}\\n} );\\n\\n\\nvar\\n\\tr20 = /%20/g,\\n\\trhash = /#.*$/,\\n\\trantiCache = /([?&])_=[^&]*/,\\n\\trheaders = /^(.*?):[ \\\\t]*([^\\\\r\\\\n]*)$/mg,\\n\\n\\t// #7653, #8125, #8152: local protocol detection\\n\\trlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\\n\\trnoContent = /^(?:GET|HEAD)$/,\\n\\trprotocol = /^\\\\/\\\\//,\\n\\n\\t/* Prefilters\\n\\t * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\\n\\t * 2) These are called:\\n\\t *    - BEFORE asking for a transport\\n\\t *    - AFTER param serialization (s.data is a string if s.processData is true)\\n\\t * 3) key is the dataType\\n\\t * 4) the catchall symbol \\\"*\\\" can be used\\n\\t * 5) execution will start with transport dataType and THEN continue down to \\\"*\\\" if needed\\n\\t */\\n\\tprefilters = {},\\n\\n\\t/* Transports bindings\\n\\t * 1) key is the dataType\\n\\t * 2) the catchall symbol \\\"*\\\" can be used\\n\\t * 3) selection will start with transport dataType and THEN go to \\\"*\\\" if needed\\n\\t */\\n\\ttransports = {},\\n\\n\\t// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\\n\\tallTypes = \\\"*/\\\".concat( \\\"*\\\" ),\\n\\n\\t// Anchor tag for parsing the document origin\\n\\toriginAnchor = document.createElement( \\\"a\\\" );\\n\\toriginAnchor.href = location.href;\\n\\n// Base \\\"constructor\\\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\\nfunction addToPrefiltersOrTransports( structure ) {\\n\\n\\t// dataTypeExpression is optional and defaults to \\\"*\\\"\\n\\treturn function( dataTypeExpression, func ) {\\n\\n\\t\\tif ( typeof dataTypeExpression !== \\\"string\\\" ) {\\n\\t\\t\\tfunc = dataTypeExpression;\\n\\t\\t\\tdataTypeExpression = \\\"*\\\";\\n\\t\\t}\\n\\n\\t\\tvar dataType,\\n\\t\\t\\ti = 0,\\n\\t\\t\\tdataTypes = dataTypeExpression.toLowerCase().match( rnothtmlwhite ) || [];\\n\\n\\t\\tif ( isFunction( func ) ) {\\n\\n\\t\\t\\t// For each dataType in the dataTypeExpression\\n\\t\\t\\twhile ( ( dataType = dataTypes[ i++ ] ) ) {\\n\\n\\t\\t\\t\\t// Prepend if requested\\n\\t\\t\\t\\tif ( dataType[ 0 ] === \\\"+\\\" ) {\\n\\t\\t\\t\\t\\tdataType = dataType.slice( 1 ) || \\\"*\\\";\\n\\t\\t\\t\\t\\t( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );\\n\\n\\t\\t\\t\\t// Otherwise append\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t( structure[ dataType ] = structure[ dataType ] || [] ).push( func );\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t};\\n}\\n\\n// Base inspection function for prefilters and transports\\nfunction inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {\\n\\n\\tvar inspected = {},\\n\\t\\tseekingTransport = ( structure === transports );\\n\\n\\tfunction inspect( dataType ) {\\n\\t\\tvar selected;\\n\\t\\tinspected[ dataType ] = true;\\n\\t\\tjQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {\\n\\t\\t\\tvar dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );\\n\\t\\t\\tif ( typeof dataTypeOrTransport === \\\"string\\\" &&\\n\\t\\t\\t\\t!seekingTransport && !inspected[ dataTypeOrTransport ] ) {\\n\\n\\t\\t\\t\\toptions.dataTypes.unshift( dataTypeOrTransport );\\n\\t\\t\\t\\tinspect( dataTypeOrTransport );\\n\\t\\t\\t\\treturn false;\\n\\t\\t\\t} else if ( seekingTransport ) {\\n\\t\\t\\t\\treturn !( selected = dataTypeOrTransport );\\n\\t\\t\\t}\\n\\t\\t} );\\n\\t\\treturn selected;\\n\\t}\\n\\n\\treturn inspect( options.dataTypes[ 0 ] ) || !inspected[ \\\"*\\\" ] && inspect( \\\"*\\\" );\\n}\\n\\n// A special extend for ajax options\\n// that takes \\\"flat\\\" options (not to be deep extended)\\n// Fixes #9887\\nfunction ajaxExtend( target, src ) {\\n\\tvar key, deep,\\n\\t\\tflatOptions = jQuery.ajaxSettings.flatOptions || {};\\n\\n\\tfor ( key in src ) {\\n\\t\\tif ( src[ key ] !== undefined ) {\\n\\t\\t\\t( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];\\n\\t\\t}\\n\\t}\\n\\tif ( deep ) {\\n\\t\\tjQuery.extend( true, target, deep );\\n\\t}\\n\\n\\treturn target;\\n}\\n\\n/* Handles responses to an ajax request:\\n * - finds the right dataType (mediates between content-type and expected dataType)\\n * - returns the corresponding response\\n */\\nfunction ajaxHandleResponses( s, jqXHR, responses ) {\\n\\n\\tvar ct, type, finalDataType, firstDataType,\\n\\t\\tcontents = s.contents,\\n\\t\\tdataTypes = s.dataTypes;\\n\\n\\t// Remove auto dataType and get content-type in the process\\n\\twhile ( dataTypes[ 0 ] === \\\"*\\\" ) {\\n\\t\\tdataTypes.shift();\\n\\t\\tif ( ct === undefined ) {\\n\\t\\t\\tct = s.mimeType || jqXHR.getResponseHeader( \\\"Content-Type\\\" );\\n\\t\\t}\\n\\t}\\n\\n\\t// Check if we're dealing with a known content-type\\n\\tif ( ct ) {\\n\\t\\tfor ( type in contents ) {\\n\\t\\t\\tif ( contents[ type ] && contents[ type ].test( ct ) ) {\\n\\t\\t\\t\\tdataTypes.unshift( type );\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\t// Check to see if we have a response for the expected dataType\\n\\tif ( dataTypes[ 0 ] in responses ) {\\n\\t\\tfinalDataType = dataTypes[ 0 ];\\n\\t} else {\\n\\n\\t\\t// Try convertible dataTypes\\n\\t\\tfor ( type in responses ) {\\n\\t\\t\\tif ( !dataTypes[ 0 ] || s.converters[ type + \\\" \\\" + dataTypes[ 0 ] ] ) {\\n\\t\\t\\t\\tfinalDataType = type;\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\t}\\n\\t\\t\\tif ( !firstDataType ) {\\n\\t\\t\\t\\tfirstDataType = type;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// Or just use first one\\n\\t\\tfinalDataType = finalDataType || firstDataType;\\n\\t}\\n\\n\\t// If we found a dataType\\n\\t// We add the dataType to the list if needed\\n\\t// and return the corresponding response\\n\\tif ( finalDataType ) {\\n\\t\\tif ( finalDataType !== dataTypes[ 0 ] ) {\\n\\t\\t\\tdataTypes.unshift( finalDataType );\\n\\t\\t}\\n\\t\\treturn responses[ finalDataType ];\\n\\t}\\n}\\n\\n/* Chain conversions given the request and the original response\\n * Also sets the responseXXX fields on the jqXHR instance\\n */\\nfunction ajaxConvert( s, response, jqXHR, isSuccess ) {\\n\\tvar conv2, current, conv, tmp, prev,\\n\\t\\tconverters = {},\\n\\n\\t\\t// Work with a copy of dataTypes in case we need to modify it for conversion\\n\\t\\tdataTypes = s.dataTypes.slice();\\n\\n\\t// Create converters map with lowercased keys\\n\\tif ( dataTypes[ 1 ] ) {\\n\\t\\tfor ( conv in s.converters ) {\\n\\t\\t\\tconverters[ conv.toLowerCase() ] = s.converters[ conv ];\\n\\t\\t}\\n\\t}\\n\\n\\tcurrent = dataTypes.shift();\\n\\n\\t// Convert to each sequential dataType\\n\\twhile ( current ) {\\n\\n\\t\\tif ( s.responseFields[ current ] ) {\\n\\t\\t\\tjqXHR[ s.responseFields[ current ] ] = response;\\n\\t\\t}\\n\\n\\t\\t// Apply the dataFilter if provided\\n\\t\\tif ( !prev && isSuccess && s.dataFilter ) {\\n\\t\\t\\tresponse = s.dataFilter( response, s.dataType );\\n\\t\\t}\\n\\n\\t\\tprev = current;\\n\\t\\tcurrent = dataTypes.shift();\\n\\n\\t\\tif ( current ) {\\n\\n\\t\\t\\t// There's only work to do if current dataType is non-auto\\n\\t\\t\\tif ( current === \\\"*\\\" ) {\\n\\n\\t\\t\\t\\tcurrent = prev;\\n\\n\\t\\t\\t// Convert response if prev dataType is non-auto and differs from current\\n\\t\\t\\t} else if ( prev !== \\\"*\\\" && prev !== current ) {\\n\\n\\t\\t\\t\\t// Seek a direct converter\\n\\t\\t\\t\\tconv = converters[ prev + \\\" \\\" + current ] || converters[ \\\"* \\\" + current ];\\n\\n\\t\\t\\t\\t// If none found, seek a pair\\n\\t\\t\\t\\tif ( !conv ) {\\n\\t\\t\\t\\t\\tfor ( conv2 in converters ) {\\n\\n\\t\\t\\t\\t\\t\\t// If conv2 outputs current\\n\\t\\t\\t\\t\\t\\ttmp = conv2.split( \\\" \\\" );\\n\\t\\t\\t\\t\\t\\tif ( tmp[ 1 ] === current ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t// If prev can be converted to accepted input\\n\\t\\t\\t\\t\\t\\t\\tconv = converters[ prev + \\\" \\\" + tmp[ 0 ] ] ||\\n\\t\\t\\t\\t\\t\\t\\t\\tconverters[ \\\"* \\\" + tmp[ 0 ] ];\\n\\t\\t\\t\\t\\t\\t\\tif ( conv ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t// Condense equivalence converters\\n\\t\\t\\t\\t\\t\\t\\t\\tif ( conv === true ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tconv = converters[ conv2 ];\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t// Otherwise, insert the intermediate dataType\\n\\t\\t\\t\\t\\t\\t\\t\\t} else if ( converters[ conv2 ] !== true ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tcurrent = tmp[ 0 ];\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tdataTypes.unshift( tmp[ 1 ] );\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Apply converter (if not an equivalence)\\n\\t\\t\\t\\tif ( conv !== true ) {\\n\\n\\t\\t\\t\\t\\t// Unless errors are allowed to bubble, catch and return them\\n\\t\\t\\t\\t\\tif ( conv && s.throws ) {\\n\\t\\t\\t\\t\\t\\tresponse = conv( response );\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\ttry {\\n\\t\\t\\t\\t\\t\\t\\tresponse = conv( response );\\n\\t\\t\\t\\t\\t\\t} catch ( e ) {\\n\\t\\t\\t\\t\\t\\t\\treturn {\\n\\t\\t\\t\\t\\t\\t\\t\\tstate: \\\"parsererror\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\terror: conv ? e : \\\"No conversion from \\\" + prev + \\\" to \\\" + current\\n\\t\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\treturn { state: \\\"success\\\", data: response };\\n}\\n\\njQuery.extend( {\\n\\n\\t// Counter for holding the number of active queries\\n\\tactive: 0,\\n\\n\\t// Last-Modified header cache for next request\\n\\tlastModified: {},\\n\\tetag: {},\\n\\n\\tajaxSettings: {\\n\\t\\turl: location.href,\\n\\t\\ttype: \\\"GET\\\",\\n\\t\\tisLocal: rlocalProtocol.test( location.protocol ),\\n\\t\\tglobal: true,\\n\\t\\tprocessData: true,\\n\\t\\tasync: true,\\n\\t\\tcontentType: \\\"application/x-www-form-urlencoded; charset=UTF-8\\\",\\n\\n\\t\\t/*\\n\\t\\ttimeout: 0,\\n\\t\\tdata: null,\\n\\t\\tdataType: null,\\n\\t\\tusername: null,\\n\\t\\tpassword: null,\\n\\t\\tcache: null,\\n\\t\\tthrows: false,\\n\\t\\ttraditional: false,\\n\\t\\theaders: {},\\n\\t\\t*/\\n\\n\\t\\taccepts: {\\n\\t\\t\\t\\\"*\\\": allTypes,\\n\\t\\t\\ttext: \\\"text/plain\\\",\\n\\t\\t\\thtml: \\\"text/html\\\",\\n\\t\\t\\txml: \\\"application/xml, text/xml\\\",\\n\\t\\t\\tjson: \\\"application/json, text/javascript\\\"\\n\\t\\t},\\n\\n\\t\\tcontents: {\\n\\t\\t\\txml: /\\\\bxml\\\\b/,\\n\\t\\t\\thtml: /\\\\bhtml/,\\n\\t\\t\\tjson: /\\\\bjson\\\\b/\\n\\t\\t},\\n\\n\\t\\tresponseFields: {\\n\\t\\t\\txml: \\\"responseXML\\\",\\n\\t\\t\\ttext: \\\"responseText\\\",\\n\\t\\t\\tjson: \\\"responseJSON\\\"\\n\\t\\t},\\n\\n\\t\\t// Data converters\\n\\t\\t// Keys separate source (or catchall \\\"*\\\") and destination types with a single space\\n\\t\\tconverters: {\\n\\n\\t\\t\\t// Convert anything to text\\n\\t\\t\\t\\\"* text\\\": String,\\n\\n\\t\\t\\t// Text to html (true = no transformation)\\n\\t\\t\\t\\\"text html\\\": true,\\n\\n\\t\\t\\t// Evaluate text as a json expression\\n\\t\\t\\t\\\"text json\\\": JSON.parse,\\n\\n\\t\\t\\t// Parse text as xml\\n\\t\\t\\t\\\"text xml\\\": jQuery.parseXML\\n\\t\\t},\\n\\n\\t\\t// For options that shouldn't be deep extended:\\n\\t\\t// you can add your own custom options here if\\n\\t\\t// and when you create one that shouldn't be\\n\\t\\t// deep extended (see ajaxExtend)\\n\\t\\tflatOptions: {\\n\\t\\t\\turl: true,\\n\\t\\t\\tcontext: true\\n\\t\\t}\\n\\t},\\n\\n\\t// Creates a full fledged settings object into target\\n\\t// with both ajaxSettings and settings fields.\\n\\t// If target is omitted, writes into ajaxSettings.\\n\\tajaxSetup: function( target, settings ) {\\n\\t\\treturn settings ?\\n\\n\\t\\t\\t// Building a settings object\\n\\t\\t\\tajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :\\n\\n\\t\\t\\t// Extending ajaxSettings\\n\\t\\t\\tajaxExtend( jQuery.ajaxSettings, target );\\n\\t},\\n\\n\\tajaxPrefilter: addToPrefiltersOrTransports( prefilters ),\\n\\tajaxTransport: addToPrefiltersOrTransports( transports ),\\n\\n\\t// Main method\\n\\tajax: function( url, options ) {\\n\\n\\t\\t// If url is an object, simulate pre-1.5 signature\\n\\t\\tif ( typeof url === \\\"object\\\" ) {\\n\\t\\t\\toptions = url;\\n\\t\\t\\turl = undefined;\\n\\t\\t}\\n\\n\\t\\t// Force options to be an object\\n\\t\\toptions = options || {};\\n\\n\\t\\tvar transport,\\n\\n\\t\\t\\t// URL without anti-cache param\\n\\t\\t\\tcacheURL,\\n\\n\\t\\t\\t// Response headers\\n\\t\\t\\tresponseHeadersString,\\n\\t\\t\\tresponseHeaders,\\n\\n\\t\\t\\t// timeout handle\\n\\t\\t\\ttimeoutTimer,\\n\\n\\t\\t\\t// Url cleanup var\\n\\t\\t\\turlAnchor,\\n\\n\\t\\t\\t// Request state (becomes false upon send and true upon completion)\\n\\t\\t\\tcompleted,\\n\\n\\t\\t\\t// To know if global events are to be dispatched\\n\\t\\t\\tfireGlobals,\\n\\n\\t\\t\\t// Loop variable\\n\\t\\t\\ti,\\n\\n\\t\\t\\t// uncached part of the url\\n\\t\\t\\tuncached,\\n\\n\\t\\t\\t// Create the final options object\\n\\t\\t\\ts = jQuery.ajaxSetup( {}, options ),\\n\\n\\t\\t\\t// Callbacks context\\n\\t\\t\\tcallbackContext = s.context || s,\\n\\n\\t\\t\\t// Context for global events is callbackContext if it is a DOM node or jQuery collection\\n\\t\\t\\tglobalEventContext = s.context &&\\n\\t\\t\\t\\t( callbackContext.nodeType || callbackContext.jquery ) ?\\n\\t\\t\\t\\t\\tjQuery( callbackContext ) :\\n\\t\\t\\t\\t\\tjQuery.event,\\n\\n\\t\\t\\t// Deferreds\\n\\t\\t\\tdeferred = jQuery.Deferred(),\\n\\t\\t\\tcompleteDeferred = jQuery.Callbacks( \\\"once memory\\\" ),\\n\\n\\t\\t\\t// Status-dependent callbacks\\n\\t\\t\\tstatusCode = s.statusCode || {},\\n\\n\\t\\t\\t// Headers (they are sent all at once)\\n\\t\\t\\trequestHeaders = {},\\n\\t\\t\\trequestHeadersNames = {},\\n\\n\\t\\t\\t// Default abort message\\n\\t\\t\\tstrAbort = \\\"canceled\\\",\\n\\n\\t\\t\\t// Fake xhr\\n\\t\\t\\tjqXHR = {\\n\\t\\t\\t\\treadyState: 0,\\n\\n\\t\\t\\t\\t// Builds headers hashtable if needed\\n\\t\\t\\t\\tgetResponseHeader: function( key ) {\\n\\t\\t\\t\\t\\tvar match;\\n\\t\\t\\t\\t\\tif ( completed ) {\\n\\t\\t\\t\\t\\t\\tif ( !responseHeaders ) {\\n\\t\\t\\t\\t\\t\\t\\tresponseHeaders = {};\\n\\t\\t\\t\\t\\t\\t\\twhile ( ( match = rheaders.exec( responseHeadersString ) ) ) {\\n\\t\\t\\t\\t\\t\\t\\t\\tresponseHeaders[ match[ 1 ].toLowerCase() + \\\" \\\" ] =\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t( responseHeaders[ match[ 1 ].toLowerCase() + \\\" \\\" ] || [] )\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t.concat( match[ 2 ] );\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tmatch = responseHeaders[ key.toLowerCase() + \\\" \\\" ];\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\treturn match == null ? null : match.join( \\\", \\\" );\\n\\t\\t\\t\\t},\\n\\n\\t\\t\\t\\t// Raw string\\n\\t\\t\\t\\tgetAllResponseHeaders: function() {\\n\\t\\t\\t\\t\\treturn completed ? responseHeadersString : null;\\n\\t\\t\\t\\t},\\n\\n\\t\\t\\t\\t// Caches the header\\n\\t\\t\\t\\tsetRequestHeader: function( name, value ) {\\n\\t\\t\\t\\t\\tif ( completed == null ) {\\n\\t\\t\\t\\t\\t\\tname = requestHeadersNames[ name.toLowerCase() ] =\\n\\t\\t\\t\\t\\t\\t\\trequestHeadersNames[ name.toLowerCase() ] || name;\\n\\t\\t\\t\\t\\t\\trequestHeaders[ name ] = value;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\treturn this;\\n\\t\\t\\t\\t},\\n\\n\\t\\t\\t\\t// Overrides response content-type header\\n\\t\\t\\t\\toverrideMimeType: function( type ) {\\n\\t\\t\\t\\t\\tif ( completed == null ) {\\n\\t\\t\\t\\t\\t\\ts.mimeType = type;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\treturn this;\\n\\t\\t\\t\\t},\\n\\n\\t\\t\\t\\t// Status-dependent callbacks\\n\\t\\t\\t\\tstatusCode: function( map ) {\\n\\t\\t\\t\\t\\tvar code;\\n\\t\\t\\t\\t\\tif ( map ) {\\n\\t\\t\\t\\t\\t\\tif ( completed ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t// Execute the appropriate callbacks\\n\\t\\t\\t\\t\\t\\t\\tjqXHR.always( map[ jqXHR.status ] );\\n\\t\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\t\\t// Lazy-add the new callbacks in a way that preserves old ones\\n\\t\\t\\t\\t\\t\\t\\tfor ( code in map ) {\\n\\t\\t\\t\\t\\t\\t\\t\\tstatusCode[ code ] = [ statusCode[ code ], map[ code ] ];\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\treturn this;\\n\\t\\t\\t\\t},\\n\\n\\t\\t\\t\\t// Cancel the request\\n\\t\\t\\t\\tabort: function( statusText ) {\\n\\t\\t\\t\\t\\tvar finalText = statusText || strAbort;\\n\\t\\t\\t\\t\\tif ( transport ) {\\n\\t\\t\\t\\t\\t\\ttransport.abort( finalText );\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tdone( 0, finalText );\\n\\t\\t\\t\\t\\treturn this;\\n\\t\\t\\t\\t}\\n\\t\\t\\t};\\n\\n\\t\\t// Attach deferreds\\n\\t\\tdeferred.promise( jqXHR );\\n\\n\\t\\t// Add protocol if not provided (prefilters might expect it)\\n\\t\\t// Handle falsy url in the settings object (#10093: consistency with old signature)\\n\\t\\t// We also use the url parameter if available\\n\\t\\ts.url = ( ( url || s.url || location.href ) + \\\"\\\" )\\n\\t\\t\\t.replace( rprotocol, location.protocol + \\\"//\\\" );\\n\\n\\t\\t// Alias method option to type as per ticket #12004\\n\\t\\ts.type = options.method || options.type || s.method || s.type;\\n\\n\\t\\t// Extract dataTypes list\\n\\t\\ts.dataTypes = ( s.dataType || \\\"*\\\" ).toLowerCase().match( rnothtmlwhite ) || [ \\\"\\\" ];\\n\\n\\t\\t// A cross-domain request is in order when the origin doesn't match the current origin.\\n\\t\\tif ( s.crossDomain == null ) {\\n\\t\\t\\turlAnchor = document.createElement( \\\"a\\\" );\\n\\n\\t\\t\\t// Support: IE <=8 - 11, Edge 12 - 15\\n\\t\\t\\t// IE throws exception on accessing the href property if url is malformed,\\n\\t\\t\\t// e.g. http://example.com:80x/\\n\\t\\t\\ttry {\\n\\t\\t\\t\\turlAnchor.href = s.url;\\n\\n\\t\\t\\t\\t// Support: IE <=8 - 11 only\\n\\t\\t\\t\\t// Anchor's host property isn't correctly set when s.url is relative\\n\\t\\t\\t\\turlAnchor.href = urlAnchor.href;\\n\\t\\t\\t\\ts.crossDomain = originAnchor.protocol + \\\"//\\\" + originAnchor.host !==\\n\\t\\t\\t\\t\\turlAnchor.protocol + \\\"//\\\" + urlAnchor.host;\\n\\t\\t\\t} catch ( e ) {\\n\\n\\t\\t\\t\\t// If there is an error parsing the URL, assume it is crossDomain,\\n\\t\\t\\t\\t// it can be rejected by the transport if it is invalid\\n\\t\\t\\t\\ts.crossDomain = true;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// Convert data if not already a string\\n\\t\\tif ( s.data && s.processData && typeof s.data !== \\\"string\\\" ) {\\n\\t\\t\\ts.data = jQuery.param( s.data, s.traditional );\\n\\t\\t}\\n\\n\\t\\t// Apply prefilters\\n\\t\\tinspectPrefiltersOrTransports( prefilters, s, options, jqXHR );\\n\\n\\t\\t// If request was aborted inside a prefilter, stop there\\n\\t\\tif ( completed ) {\\n\\t\\t\\treturn jqXHR;\\n\\t\\t}\\n\\n\\t\\t// We can fire global events as of now if asked to\\n\\t\\t// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)\\n\\t\\tfireGlobals = jQuery.event && s.global;\\n\\n\\t\\t// Watch for a new set of requests\\n\\t\\tif ( fireGlobals && jQuery.active++ === 0 ) {\\n\\t\\t\\tjQuery.event.trigger( \\\"ajaxStart\\\" );\\n\\t\\t}\\n\\n\\t\\t// Uppercase the type\\n\\t\\ts.type = s.type.toUpperCase();\\n\\n\\t\\t// Determine if request has content\\n\\t\\ts.hasContent = !rnoContent.test( s.type );\\n\\n\\t\\t// Save the URL in case we're toying with the If-Modified-Since\\n\\t\\t// and/or If-None-Match header later on\\n\\t\\t// Remove hash to simplify url manipulation\\n\\t\\tcacheURL = s.url.replace( rhash, \\\"\\\" );\\n\\n\\t\\t// More options handling for requests with no content\\n\\t\\tif ( !s.hasContent ) {\\n\\n\\t\\t\\t// Remember the hash so we can put it back\\n\\t\\t\\tuncached = s.url.slice( cacheURL.length );\\n\\n\\t\\t\\t// If data is available and should be processed, append data to url\\n\\t\\t\\tif ( s.data && ( s.processData || typeof s.data === \\\"string\\\" ) ) {\\n\\t\\t\\t\\tcacheURL += ( rquery.test( cacheURL ) ? \\\"&\\\" : \\\"?\\\" ) + s.data;\\n\\n\\t\\t\\t\\t// #9682: remove data so that it's not used in an eventual retry\\n\\t\\t\\t\\tdelete s.data;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Add or update anti-cache param if needed\\n\\t\\t\\tif ( s.cache === false ) {\\n\\t\\t\\t\\tcacheURL = cacheURL.replace( rantiCache, \\\"$1\\\" );\\n\\t\\t\\t\\tuncached = ( rquery.test( cacheURL ) ? \\\"&\\\" : \\\"?\\\" ) + \\\"_=\\\" + ( nonce++ ) + uncached;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Put hash and anti-cache on the URL that will be requested (gh-1732)\\n\\t\\t\\ts.url = cacheURL + uncached;\\n\\n\\t\\t// Change '%20' to '+' if this is encoded form body content (gh-2658)\\n\\t\\t} else if ( s.data && s.processData &&\\n\\t\\t\\t( s.contentType || \\\"\\\" ).indexOf( \\\"application/x-www-form-urlencoded\\\" ) === 0 ) {\\n\\t\\t\\ts.data = s.data.replace( r20, \\\"+\\\" );\\n\\t\\t}\\n\\n\\t\\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\\n\\t\\tif ( s.ifModified ) {\\n\\t\\t\\tif ( jQuery.lastModified[ cacheURL ] ) {\\n\\t\\t\\t\\tjqXHR.setRequestHeader( \\\"If-Modified-Since\\\", jQuery.lastModified[ cacheURL ] );\\n\\t\\t\\t}\\n\\t\\t\\tif ( jQuery.etag[ cacheURL ] ) {\\n\\t\\t\\t\\tjqXHR.setRequestHeader( \\\"If-None-Match\\\", jQuery.etag[ cacheURL ] );\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// Set the correct header, if data is being sent\\n\\t\\tif ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {\\n\\t\\t\\tjqXHR.setRequestHeader( \\\"Content-Type\\\", s.contentType );\\n\\t\\t}\\n\\n\\t\\t// Set the Accepts header for the server, depending on the dataType\\n\\t\\tjqXHR.setRequestHeader(\\n\\t\\t\\t\\\"Accept\\\",\\n\\t\\t\\ts.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?\\n\\t\\t\\t\\ts.accepts[ s.dataTypes[ 0 ] ] +\\n\\t\\t\\t\\t\\t( s.dataTypes[ 0 ] !== \\\"*\\\" ? \\\", \\\" + allTypes + \\\"; q=0.01\\\" : \\\"\\\" ) :\\n\\t\\t\\t\\ts.accepts[ \\\"*\\\" ]\\n\\t\\t);\\n\\n\\t\\t// Check for headers option\\n\\t\\tfor ( i in s.headers ) {\\n\\t\\t\\tjqXHR.setRequestHeader( i, s.headers[ i ] );\\n\\t\\t}\\n\\n\\t\\t// Allow custom headers/mimetypes and early abort\\n\\t\\tif ( s.beforeSend &&\\n\\t\\t\\t( s.beforeSend.call( callbackContext, jqXHR, s ) === false || completed ) ) {\\n\\n\\t\\t\\t// Abort if not done already and return\\n\\t\\t\\treturn jqXHR.abort();\\n\\t\\t}\\n\\n\\t\\t// Aborting is no longer a cancellation\\n\\t\\tstrAbort = \\\"abort\\\";\\n\\n\\t\\t// Install callbacks on deferreds\\n\\t\\tcompleteDeferred.add( s.complete );\\n\\t\\tjqXHR.done( s.success );\\n\\t\\tjqXHR.fail( s.error );\\n\\n\\t\\t// Get transport\\n\\t\\ttransport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );\\n\\n\\t\\t// If no transport, we auto-abort\\n\\t\\tif ( !transport ) {\\n\\t\\t\\tdone( -1, \\\"No Transport\\\" );\\n\\t\\t} else {\\n\\t\\t\\tjqXHR.readyState = 1;\\n\\n\\t\\t\\t// Send global event\\n\\t\\t\\tif ( fireGlobals ) {\\n\\t\\t\\t\\tglobalEventContext.trigger( \\\"ajaxSend\\\", [ jqXHR, s ] );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// If request was aborted inside ajaxSend, stop there\\n\\t\\t\\tif ( completed ) {\\n\\t\\t\\t\\treturn jqXHR;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Timeout\\n\\t\\t\\tif ( s.async && s.timeout > 0 ) {\\n\\t\\t\\t\\ttimeoutTimer = window.setTimeout( function() {\\n\\t\\t\\t\\t\\tjqXHR.abort( \\\"timeout\\\" );\\n\\t\\t\\t\\t}, s.timeout );\\n\\t\\t\\t}\\n\\n\\t\\t\\ttry {\\n\\t\\t\\t\\tcompleted = false;\\n\\t\\t\\t\\ttransport.send( requestHeaders, done );\\n\\t\\t\\t} catch ( e ) {\\n\\n\\t\\t\\t\\t// Rethrow post-completion exceptions\\n\\t\\t\\t\\tif ( completed ) {\\n\\t\\t\\t\\t\\tthrow e;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Propagate others as results\\n\\t\\t\\t\\tdone( -1, e );\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// Callback for when everything is done\\n\\t\\tfunction done( status, nativeStatusText, responses, headers ) {\\n\\t\\t\\tvar isSuccess, success, error, response, modified,\\n\\t\\t\\t\\tstatusText = nativeStatusText;\\n\\n\\t\\t\\t// Ignore repeat invocations\\n\\t\\t\\tif ( completed ) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tcompleted = true;\\n\\n\\t\\t\\t// Clear timeout if it exists\\n\\t\\t\\tif ( timeoutTimer ) {\\n\\t\\t\\t\\twindow.clearTimeout( timeoutTimer );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Dereference transport for early garbage collection\\n\\t\\t\\t// (no matter how long the jqXHR object will be used)\\n\\t\\t\\ttransport = undefined;\\n\\n\\t\\t\\t// Cache response headers\\n\\t\\t\\tresponseHeadersString = headers || \\\"\\\";\\n\\n\\t\\t\\t// Set readyState\\n\\t\\t\\tjqXHR.readyState = status > 0 ? 4 : 0;\\n\\n\\t\\t\\t// Determine if successful\\n\\t\\t\\tisSuccess = status >= 200 && status < 300 || status === 304;\\n\\n\\t\\t\\t// Get response data\\n\\t\\t\\tif ( responses ) {\\n\\t\\t\\t\\tresponse = ajaxHandleResponses( s, jqXHR, responses );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Convert no matter what (that way responseXXX fields are always set)\\n\\t\\t\\tresponse = ajaxConvert( s, response, jqXHR, isSuccess );\\n\\n\\t\\t\\t// If successful, handle type chaining\\n\\t\\t\\tif ( isSuccess ) {\\n\\n\\t\\t\\t\\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\\n\\t\\t\\t\\tif ( s.ifModified ) {\\n\\t\\t\\t\\t\\tmodified = jqXHR.getResponseHeader( \\\"Last-Modified\\\" );\\n\\t\\t\\t\\t\\tif ( modified ) {\\n\\t\\t\\t\\t\\t\\tjQuery.lastModified[ cacheURL ] = modified;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tmodified = jqXHR.getResponseHeader( \\\"etag\\\" );\\n\\t\\t\\t\\t\\tif ( modified ) {\\n\\t\\t\\t\\t\\t\\tjQuery.etag[ cacheURL ] = modified;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// if no content\\n\\t\\t\\t\\tif ( status === 204 || s.type === \\\"HEAD\\\" ) {\\n\\t\\t\\t\\t\\tstatusText = \\\"nocontent\\\";\\n\\n\\t\\t\\t\\t// if not modified\\n\\t\\t\\t\\t} else if ( status === 304 ) {\\n\\t\\t\\t\\t\\tstatusText = \\\"notmodified\\\";\\n\\n\\t\\t\\t\\t// If we have data, let's convert it\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tstatusText = response.state;\\n\\t\\t\\t\\t\\tsuccess = response.data;\\n\\t\\t\\t\\t\\terror = response.error;\\n\\t\\t\\t\\t\\tisSuccess = !error;\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t// Extract error from statusText and normalize for non-aborts\\n\\t\\t\\t\\terror = statusText;\\n\\t\\t\\t\\tif ( status || !statusText ) {\\n\\t\\t\\t\\t\\tstatusText = \\\"error\\\";\\n\\t\\t\\t\\t\\tif ( status < 0 ) {\\n\\t\\t\\t\\t\\t\\tstatus = 0;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Set data for the fake xhr object\\n\\t\\t\\tjqXHR.status = status;\\n\\t\\t\\tjqXHR.statusText = ( nativeStatusText || statusText ) + \\\"\\\";\\n\\n\\t\\t\\t// Success/Error\\n\\t\\t\\tif ( isSuccess ) {\\n\\t\\t\\t\\tdeferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tdeferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Status-dependent callbacks\\n\\t\\t\\tjqXHR.statusCode( statusCode );\\n\\t\\t\\tstatusCode = undefined;\\n\\n\\t\\t\\tif ( fireGlobals ) {\\n\\t\\t\\t\\tglobalEventContext.trigger( isSuccess ? \\\"ajaxSuccess\\\" : \\\"ajaxError\\\",\\n\\t\\t\\t\\t\\t[ jqXHR, s, isSuccess ? success : error ] );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Complete\\n\\t\\t\\tcompleteDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );\\n\\n\\t\\t\\tif ( fireGlobals ) {\\n\\t\\t\\t\\tglobalEventContext.trigger( \\\"ajaxComplete\\\", [ jqXHR, s ] );\\n\\n\\t\\t\\t\\t// Handle the global AJAX counter\\n\\t\\t\\t\\tif ( !( --jQuery.active ) ) {\\n\\t\\t\\t\\t\\tjQuery.event.trigger( \\\"ajaxStop\\\" );\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn jqXHR;\\n\\t},\\n\\n\\tgetJSON: function( url, data, callback ) {\\n\\t\\treturn jQuery.get( url, data, callback, \\\"json\\\" );\\n\\t},\\n\\n\\tgetScript: function( url, callback ) {\\n\\t\\treturn jQuery.get( url, undefined, callback, \\\"script\\\" );\\n\\t}\\n} );\\n\\njQuery.each( [ \\\"get\\\", \\\"post\\\" ], function( i, method ) {\\n\\tjQuery[ method ] = function( url, data, callback, type ) {\\n\\n\\t\\t// Shift arguments if data argument was omitted\\n\\t\\tif ( isFunction( data ) ) {\\n\\t\\t\\ttype = type || callback;\\n\\t\\t\\tcallback = data;\\n\\t\\t\\tdata = undefined;\\n\\t\\t}\\n\\n\\t\\t// The url can be an options object (which then must have .url)\\n\\t\\treturn jQuery.ajax( jQuery.extend( {\\n\\t\\t\\turl: url,\\n\\t\\t\\ttype: method,\\n\\t\\t\\tdataType: type,\\n\\t\\t\\tdata: data,\\n\\t\\t\\tsuccess: callback\\n\\t\\t}, jQuery.isPlainObject( url ) && url ) );\\n\\t};\\n} );\\n\\n\\njQuery._evalUrl = function( url, options ) {\\n\\treturn jQuery.ajax( {\\n\\t\\turl: url,\\n\\n\\t\\t// Make this explicit, since user can override this through ajaxSetup (#11264)\\n\\t\\ttype: \\\"GET\\\",\\n\\t\\tdataType: \\\"script\\\",\\n\\t\\tcache: true,\\n\\t\\tasync: false,\\n\\t\\tglobal: false,\\n\\n\\t\\t// Only evaluate the response if it is successful (gh-4126)\\n\\t\\t// dataFilter is not invoked for failure responses, so using it instead\\n\\t\\t// of the default converter is kludgy but it works.\\n\\t\\tconverters: {\\n\\t\\t\\t\\\"text script\\\": function() {}\\n\\t\\t},\\n\\t\\tdataFilter: function( response ) {\\n\\t\\t\\tjQuery.globalEval( response, options );\\n\\t\\t}\\n\\t} );\\n};\\n\\n\\njQuery.fn.extend( {\\n\\twrapAll: function( html ) {\\n\\t\\tvar wrap;\\n\\n\\t\\tif ( this[ 0 ] ) {\\n\\t\\t\\tif ( isFunction( html ) ) {\\n\\t\\t\\t\\thtml = html.call( this[ 0 ] );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// The elements to wrap the target around\\n\\t\\t\\twrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );\\n\\n\\t\\t\\tif ( this[ 0 ].parentNode ) {\\n\\t\\t\\t\\twrap.insertBefore( this[ 0 ] );\\n\\t\\t\\t}\\n\\n\\t\\t\\twrap.map( function() {\\n\\t\\t\\t\\tvar elem = this;\\n\\n\\t\\t\\t\\twhile ( elem.firstElementChild ) {\\n\\t\\t\\t\\t\\telem = elem.firstElementChild;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn elem;\\n\\t\\t\\t} ).append( this );\\n\\t\\t}\\n\\n\\t\\treturn this;\\n\\t},\\n\\n\\twrapInner: function( html ) {\\n\\t\\tif ( isFunction( html ) ) {\\n\\t\\t\\treturn this.each( function( i ) {\\n\\t\\t\\t\\tjQuery( this ).wrapInner( html.call( this, i ) );\\n\\t\\t\\t} );\\n\\t\\t}\\n\\n\\t\\treturn this.each( function() {\\n\\t\\t\\tvar self = jQuery( this ),\\n\\t\\t\\t\\tcontents = self.contents();\\n\\n\\t\\t\\tif ( contents.length ) {\\n\\t\\t\\t\\tcontents.wrapAll( html );\\n\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tself.append( html );\\n\\t\\t\\t}\\n\\t\\t} );\\n\\t},\\n\\n\\twrap: function( html ) {\\n\\t\\tvar htmlIsFunction = isFunction( html );\\n\\n\\t\\treturn this.each( function( i ) {\\n\\t\\t\\tjQuery( this ).wrapAll( htmlIsFunction ? html.call( this, i ) : html );\\n\\t\\t} );\\n\\t},\\n\\n\\tunwrap: function( selector ) {\\n\\t\\tthis.parent( selector ).not( \\\"body\\\" ).each( function() {\\n\\t\\t\\tjQuery( this ).replaceWith( this.childNodes );\\n\\t\\t} );\\n\\t\\treturn this;\\n\\t}\\n} );\\n\\n\\njQuery.expr.pseudos.hidden = function( elem ) {\\n\\treturn !jQuery.expr.pseudos.visible( elem );\\n};\\njQuery.expr.pseudos.visible = function( elem ) {\\n\\treturn !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );\\n};\\n\\n\\n\\n\\njQuery.ajaxSettings.xhr = function() {\\n\\ttry {\\n\\t\\treturn new window.XMLHttpRequest();\\n\\t} catch ( e ) {}\\n};\\n\\nvar xhrSuccessStatus = {\\n\\n\\t\\t// File protocol always yields status code 0, assume 200\\n\\t\\t0: 200,\\n\\n\\t\\t// Support: IE <=9 only\\n\\t\\t// #1450: sometimes IE returns 1223 when it should be 204\\n\\t\\t1223: 204\\n\\t},\\n\\txhrSupported = jQuery.ajaxSettings.xhr();\\n\\nsupport.cors = !!xhrSupported && ( \\\"withCredentials\\\" in xhrSupported );\\nsupport.ajax = xhrSupported = !!xhrSupported;\\n\\njQuery.ajaxTransport( function( options ) {\\n\\tvar callback, errorCallback;\\n\\n\\t// Cross domain only allowed if supported through XMLHttpRequest\\n\\tif ( support.cors || xhrSupported && !options.crossDomain ) {\\n\\t\\treturn {\\n\\t\\t\\tsend: function( headers, complete ) {\\n\\t\\t\\t\\tvar i,\\n\\t\\t\\t\\t\\txhr = options.xhr();\\n\\n\\t\\t\\t\\txhr.open(\\n\\t\\t\\t\\t\\toptions.type,\\n\\t\\t\\t\\t\\toptions.url,\\n\\t\\t\\t\\t\\toptions.async,\\n\\t\\t\\t\\t\\toptions.username,\\n\\t\\t\\t\\t\\toptions.password\\n\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\t// Apply custom fields if provided\\n\\t\\t\\t\\tif ( options.xhrFields ) {\\n\\t\\t\\t\\t\\tfor ( i in options.xhrFields ) {\\n\\t\\t\\t\\t\\t\\txhr[ i ] = options.xhrFields[ i ];\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Override mime type if needed\\n\\t\\t\\t\\tif ( options.mimeType && xhr.overrideMimeType ) {\\n\\t\\t\\t\\t\\txhr.overrideMimeType( options.mimeType );\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// X-Requested-With header\\n\\t\\t\\t\\t// For cross-domain requests, seeing as conditions for a preflight are\\n\\t\\t\\t\\t// akin to a jigsaw puzzle, we simply never set it to be sure.\\n\\t\\t\\t\\t// (it can always be set on a per-request basis or even using ajaxSetup)\\n\\t\\t\\t\\t// For same-domain requests, won't change header if already provided.\\n\\t\\t\\t\\tif ( !options.crossDomain && !headers[ \\\"X-Requested-With\\\" ] ) {\\n\\t\\t\\t\\t\\theaders[ \\\"X-Requested-With\\\" ] = \\\"XMLHttpRequest\\\";\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Set headers\\n\\t\\t\\t\\tfor ( i in headers ) {\\n\\t\\t\\t\\t\\txhr.setRequestHeader( i, headers[ i ] );\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Callback\\n\\t\\t\\t\\tcallback = function( type ) {\\n\\t\\t\\t\\t\\treturn function() {\\n\\t\\t\\t\\t\\t\\tif ( callback ) {\\n\\t\\t\\t\\t\\t\\t\\tcallback = errorCallback = xhr.onload =\\n\\t\\t\\t\\t\\t\\t\\t\\txhr.onerror = xhr.onabort = xhr.ontimeout =\\n\\t\\t\\t\\t\\t\\t\\t\\t\\txhr.onreadystatechange = null;\\n\\n\\t\\t\\t\\t\\t\\t\\tif ( type === \\\"abort\\\" ) {\\n\\t\\t\\t\\t\\t\\t\\t\\txhr.abort();\\n\\t\\t\\t\\t\\t\\t\\t} else if ( type === \\\"error\\\" ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t// Support: IE <=9 only\\n\\t\\t\\t\\t\\t\\t\\t\\t// On a manual native abort, IE9 throws\\n\\t\\t\\t\\t\\t\\t\\t\\t// errors on any property access that is not readyState\\n\\t\\t\\t\\t\\t\\t\\t\\tif ( typeof xhr.status !== \\\"number\\\" ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tcomplete( 0, \\\"error\\\" );\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tcomplete(\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// File: protocol always yields status 0; see #8605, #14207\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\txhr.status,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\txhr.statusText\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tcomplete(\\n\\t\\t\\t\\t\\t\\t\\t\\t\\txhrSuccessStatus[ xhr.status ] || xhr.status,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\txhr.statusText,\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// Support: IE <=9 only\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// IE9 has no XHR2 but throws on binary (trac-11426)\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// For XHR2 non-text, let the caller handle it (gh-2498)\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t( xhr.responseType || \\\"text\\\" ) !== \\\"text\\\"  ||\\n\\t\\t\\t\\t\\t\\t\\t\\t\\ttypeof xhr.responseText !== \\\"string\\\" ?\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ binary: xhr.response } :\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ text: xhr.responseText },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\txhr.getAllResponseHeaders()\\n\\t\\t\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\t// Listen to events\\n\\t\\t\\t\\txhr.onload = callback();\\n\\t\\t\\t\\terrorCallback = xhr.onerror = xhr.ontimeout = callback( \\\"error\\\" );\\n\\n\\t\\t\\t\\t// Support: IE 9 only\\n\\t\\t\\t\\t// Use onreadystatechange to replace onabort\\n\\t\\t\\t\\t// to handle uncaught aborts\\n\\t\\t\\t\\tif ( xhr.onabort !== undefined ) {\\n\\t\\t\\t\\t\\txhr.onabort = errorCallback;\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\txhr.onreadystatechange = function() {\\n\\n\\t\\t\\t\\t\\t\\t// Check readyState before timeout as it changes\\n\\t\\t\\t\\t\\t\\tif ( xhr.readyState === 4 ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t// Allow onerror to be called first,\\n\\t\\t\\t\\t\\t\\t\\t// but that will not handle a native abort\\n\\t\\t\\t\\t\\t\\t\\t// Also, save errorCallback to a variable\\n\\t\\t\\t\\t\\t\\t\\t// as xhr.onerror cannot be accessed\\n\\t\\t\\t\\t\\t\\t\\twindow.setTimeout( function() {\\n\\t\\t\\t\\t\\t\\t\\t\\tif ( callback ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\terrorCallback();\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} );\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Create the abort callback\\n\\t\\t\\t\\tcallback = callback( \\\"abort\\\" );\\n\\n\\t\\t\\t\\ttry {\\n\\n\\t\\t\\t\\t\\t// Do send the request (this may raise an exception)\\n\\t\\t\\t\\t\\txhr.send( options.hasContent && options.data || null );\\n\\t\\t\\t\\t} catch ( e ) {\\n\\n\\t\\t\\t\\t\\t// #14683: Only rethrow if this hasn't been notified as an error yet\\n\\t\\t\\t\\t\\tif ( callback ) {\\n\\t\\t\\t\\t\\t\\tthrow e;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\n\\t\\t\\tabort: function() {\\n\\t\\t\\t\\tif ( callback ) {\\n\\t\\t\\t\\t\\tcallback();\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t};\\n\\t}\\n} );\\n\\n\\n\\n\\n// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)\\njQuery.ajaxPrefilter( function( s ) {\\n\\tif ( s.crossDomain ) {\\n\\t\\ts.contents.script = false;\\n\\t}\\n} );\\n\\n// Install script dataType\\njQuery.ajaxSetup( {\\n\\taccepts: {\\n\\t\\tscript: \\\"text/javascript, application/javascript, \\\" +\\n\\t\\t\\t\\\"application/ecmascript, application/x-ecmascript\\\"\\n\\t},\\n\\tcontents: {\\n\\t\\tscript: /\\\\b(?:java|ecma)script\\\\b/\\n\\t},\\n\\tconverters: {\\n\\t\\t\\\"text script\\\": function( text ) {\\n\\t\\t\\tjQuery.globalEval( text );\\n\\t\\t\\treturn text;\\n\\t\\t}\\n\\t}\\n} );\\n\\n// Handle cache's special case and crossDomain\\njQuery.ajaxPrefilter( \\\"script\\\", function( s ) {\\n\\tif ( s.cache === undefined ) {\\n\\t\\ts.cache = false;\\n\\t}\\n\\tif ( s.crossDomain ) {\\n\\t\\ts.type = \\\"GET\\\";\\n\\t}\\n} );\\n\\n// Bind script tag hack transport\\njQuery.ajaxTransport( \\\"script\\\", function( s ) {\\n\\n\\t// This transport only deals with cross domain or forced-by-attrs requests\\n\\tif ( s.crossDomain || s.scriptAttrs ) {\\n\\t\\tvar script, callback;\\n\\t\\treturn {\\n\\t\\t\\tsend: function( _, complete ) {\\n\\t\\t\\t\\tscript = jQuery( \\\"<script>\\\" )\\n\\t\\t\\t\\t\\t.attr( s.scriptAttrs || {} )\\n\\t\\t\\t\\t\\t.prop( { charset: s.scriptCharset, src: s.url } )\\n\\t\\t\\t\\t\\t.on( \\\"load error\\\", callback = function( evt ) {\\n\\t\\t\\t\\t\\t\\tscript.remove();\\n\\t\\t\\t\\t\\t\\tcallback = null;\\n\\t\\t\\t\\t\\t\\tif ( evt ) {\\n\\t\\t\\t\\t\\t\\t\\tcomplete( evt.type === \\\"error\\\" ? 404 : 200, evt.type );\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t} );\\n\\n\\t\\t\\t\\t// Use native DOM manipulation to avoid our domManip AJAX trickery\\n\\t\\t\\t\\tdocument.head.appendChild( script[ 0 ] );\\n\\t\\t\\t},\\n\\t\\t\\tabort: function() {\\n\\t\\t\\t\\tif ( callback ) {\\n\\t\\t\\t\\t\\tcallback();\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t};\\n\\t}\\n} );\\n\\n\\n\\n\\nvar oldCallbacks = [],\\n\\trjsonp = /(=)\\\\?(?=&|$)|\\\\?\\\\?/;\\n\\n// Default jsonp settings\\njQuery.ajaxSetup( {\\n\\tjsonp: \\\"callback\\\",\\n\\tjsonpCallback: function() {\\n\\t\\tvar callback = oldCallbacks.pop() || ( jQuery.expando + \\\"_\\\" + ( nonce++ ) );\\n\\t\\tthis[ callback ] = true;\\n\\t\\treturn callback;\\n\\t}\\n} );\\n\\n// Detect, normalize options and install callbacks for jsonp requests\\njQuery.ajaxPrefilter( \\\"json jsonp\\\", function( s, originalSettings, jqXHR ) {\\n\\n\\tvar callbackName, overwritten, responseContainer,\\n\\t\\tjsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?\\n\\t\\t\\t\\\"url\\\" :\\n\\t\\t\\ttypeof s.data === \\\"string\\\" &&\\n\\t\\t\\t\\t( s.contentType || \\\"\\\" )\\n\\t\\t\\t\\t\\t.indexOf( \\\"application/x-www-form-urlencoded\\\" ) === 0 &&\\n\\t\\t\\t\\trjsonp.test( s.data ) && \\\"data\\\"\\n\\t\\t);\\n\\n\\t// Handle iff the expected data type is \\\"jsonp\\\" or we have a parameter to set\\n\\tif ( jsonProp || s.dataTypes[ 0 ] === \\\"jsonp\\\" ) {\\n\\n\\t\\t// Get callback name, remembering preexisting value associated with it\\n\\t\\tcallbackName = s.jsonpCallback = isFunction( s.jsonpCallback ) ?\\n\\t\\t\\ts.jsonpCallback() :\\n\\t\\t\\ts.jsonpCallback;\\n\\n\\t\\t// Insert callback into url or form data\\n\\t\\tif ( jsonProp ) {\\n\\t\\t\\ts[ jsonProp ] = s[ jsonProp ].replace( rjsonp, \\\"$1\\\" + callbackName );\\n\\t\\t} else if ( s.jsonp !== false ) {\\n\\t\\t\\ts.url += ( rquery.test( s.url ) ? \\\"&\\\" : \\\"?\\\" ) + s.jsonp + \\\"=\\\" + callbackName;\\n\\t\\t}\\n\\n\\t\\t// Use data converter to retrieve json after script execution\\n\\t\\ts.converters[ \\\"script json\\\" ] = function() {\\n\\t\\t\\tif ( !responseContainer ) {\\n\\t\\t\\t\\tjQuery.error( callbackName + \\\" was not called\\\" );\\n\\t\\t\\t}\\n\\t\\t\\treturn responseContainer[ 0 ];\\n\\t\\t};\\n\\n\\t\\t// Force json dataType\\n\\t\\ts.dataTypes[ 0 ] = \\\"json\\\";\\n\\n\\t\\t// Install callback\\n\\t\\toverwritten = window[ callbackName ];\\n\\t\\twindow[ callbackName ] = function() {\\n\\t\\t\\tresponseContainer = arguments;\\n\\t\\t};\\n\\n\\t\\t// Clean-up function (fires after converters)\\n\\t\\tjqXHR.always( function() {\\n\\n\\t\\t\\t// If previous value didn't exist - remove it\\n\\t\\t\\tif ( overwritten === undefined ) {\\n\\t\\t\\t\\tjQuery( window ).removeProp( callbackName );\\n\\n\\t\\t\\t// Otherwise restore preexisting value\\n\\t\\t\\t} else {\\n\\t\\t\\t\\twindow[ callbackName ] = overwritten;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Save back as free\\n\\t\\t\\tif ( s[ callbackName ] ) {\\n\\n\\t\\t\\t\\t// Make sure that re-using the options doesn't screw things around\\n\\t\\t\\t\\ts.jsonpCallback = originalSettings.jsonpCallback;\\n\\n\\t\\t\\t\\t// Save the callback name for future use\\n\\t\\t\\t\\toldCallbacks.push( callbackName );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Call if it was a function and we have a response\\n\\t\\t\\tif ( responseContainer && isFunction( overwritten ) ) {\\n\\t\\t\\t\\toverwritten( responseContainer[ 0 ] );\\n\\t\\t\\t}\\n\\n\\t\\t\\tresponseContainer = overwritten = undefined;\\n\\t\\t} );\\n\\n\\t\\t// Delegate to script\\n\\t\\treturn \\\"script\\\";\\n\\t}\\n} );\\n\\n\\n\\n\\n// Support: Safari 8 only\\n// In Safari 8 documents created via document.implementation.createHTMLDocument\\n// collapse sibling forms: the second one becomes a child of the first one.\\n// Because of that, this security measure has to be disabled in Safari 8.\\n// https://bugs.webkit.org/show_bug.cgi?id=137337\\nsupport.createHTMLDocument = ( function() {\\n\\tvar body = document.implementation.createHTMLDocument( \\\"\\\" ).body;\\n\\tbody.innerHTML = \\\"<form></form><form></form>\\\";\\n\\treturn body.childNodes.length === 2;\\n} )();\\n\\n\\n// Argument \\\"data\\\" should be string of html\\n// context (optional): If specified, the fragment will be created in this context,\\n// defaults to document\\n// keepScripts (optional): If true, will include scripts passed in the html string\\njQuery.parseHTML = function( data, context, keepScripts ) {\\n\\tif ( typeof data !== \\\"string\\\" ) {\\n\\t\\treturn [];\\n\\t}\\n\\tif ( typeof context === \\\"boolean\\\" ) {\\n\\t\\tkeepScripts = context;\\n\\t\\tcontext = false;\\n\\t}\\n\\n\\tvar base, parsed, scripts;\\n\\n\\tif ( !context ) {\\n\\n\\t\\t// Stop scripts or inline event handlers from being executed immediately\\n\\t\\t// by using document.implementation\\n\\t\\tif ( support.createHTMLDocument ) {\\n\\t\\t\\tcontext = document.implementation.createHTMLDocument( \\\"\\\" );\\n\\n\\t\\t\\t// Set the base href for the created document\\n\\t\\t\\t// so any parsed elements with URLs\\n\\t\\t\\t// are based on the document's URL (gh-2965)\\n\\t\\t\\tbase = context.createElement( \\\"base\\\" );\\n\\t\\t\\tbase.href = document.location.href;\\n\\t\\t\\tcontext.head.appendChild( base );\\n\\t\\t} else {\\n\\t\\t\\tcontext = document;\\n\\t\\t}\\n\\t}\\n\\n\\tparsed = rsingleTag.exec( data );\\n\\tscripts = !keepScripts && [];\\n\\n\\t// Single tag\\n\\tif ( parsed ) {\\n\\t\\treturn [ context.createElement( parsed[ 1 ] ) ];\\n\\t}\\n\\n\\tparsed = buildFragment( [ data ], context, scripts );\\n\\n\\tif ( scripts && scripts.length ) {\\n\\t\\tjQuery( scripts ).remove();\\n\\t}\\n\\n\\treturn jQuery.merge( [], parsed.childNodes );\\n};\\n\\n\\n/**\\n * Load a url into a page\\n */\\njQuery.fn.load = function( url, params, callback ) {\\n\\tvar selector, type, response,\\n\\t\\tself = this,\\n\\t\\toff = url.indexOf( \\\" \\\" );\\n\\n\\tif ( off > -1 ) {\\n\\t\\tselector = stripAndCollapse( url.slice( off ) );\\n\\t\\turl = url.slice( 0, off );\\n\\t}\\n\\n\\t// If it's a function\\n\\tif ( isFunction( params ) ) {\\n\\n\\t\\t// We assume that it's the callback\\n\\t\\tcallback = params;\\n\\t\\tparams = undefined;\\n\\n\\t// Otherwise, build a param string\\n\\t} else if ( params && typeof params === \\\"object\\\" ) {\\n\\t\\ttype = \\\"POST\\\";\\n\\t}\\n\\n\\t// If we have elements to modify, make the request\\n\\tif ( self.length > 0 ) {\\n\\t\\tjQuery.ajax( {\\n\\t\\t\\turl: url,\\n\\n\\t\\t\\t// If \\\"type\\\" variable is undefined, then \\\"GET\\\" method will be used.\\n\\t\\t\\t// Make value of this field explicit since\\n\\t\\t\\t// user can override it through ajaxSetup method\\n\\t\\t\\ttype: type || \\\"GET\\\",\\n\\t\\t\\tdataType: \\\"html\\\",\\n\\t\\t\\tdata: params\\n\\t\\t} ).done( function( responseText ) {\\n\\n\\t\\t\\t// Save response for use in complete callback\\n\\t\\t\\tresponse = arguments;\\n\\n\\t\\t\\tself.html( selector ?\\n\\n\\t\\t\\t\\t// If a selector was specified, locate the right elements in a dummy div\\n\\t\\t\\t\\t// Exclude scripts to avoid IE 'Permission Denied' errors\\n\\t\\t\\t\\tjQuery( \\\"<div>\\\" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :\\n\\n\\t\\t\\t\\t// Otherwise use the full result\\n\\t\\t\\t\\tresponseText );\\n\\n\\t\\t// If the request succeeds, this function gets \\\"data\\\", \\\"status\\\", \\\"jqXHR\\\"\\n\\t\\t// but they are ignored because response was set above.\\n\\t\\t// If it fails, this function gets \\\"jqXHR\\\", \\\"status\\\", \\\"error\\\"\\n\\t\\t} ).always( callback && function( jqXHR, status ) {\\n\\t\\t\\tself.each( function() {\\n\\t\\t\\t\\tcallback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );\\n\\t\\t\\t} );\\n\\t\\t} );\\n\\t}\\n\\n\\treturn this;\\n};\\n\\n\\n\\n\\n// Attach a bunch of functions for handling common AJAX events\\njQuery.each( [\\n\\t\\\"ajaxStart\\\",\\n\\t\\\"ajaxStop\\\",\\n\\t\\\"ajaxComplete\\\",\\n\\t\\\"ajaxError\\\",\\n\\t\\\"ajaxSuccess\\\",\\n\\t\\\"ajaxSend\\\"\\n], function( i, type ) {\\n\\tjQuery.fn[ type ] = function( fn ) {\\n\\t\\treturn this.on( type, fn );\\n\\t};\\n} );\\n\\n\\n\\n\\njQuery.expr.pseudos.animated = function( elem ) {\\n\\treturn jQuery.grep( jQuery.timers, function( fn ) {\\n\\t\\treturn elem === fn.elem;\\n\\t} ).length;\\n};\\n\\n\\n\\n\\njQuery.offset = {\\n\\tsetOffset: function( elem, options, i ) {\\n\\t\\tvar curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,\\n\\t\\t\\tposition = jQuery.css( elem, \\\"position\\\" ),\\n\\t\\t\\tcurElem = jQuery( elem ),\\n\\t\\t\\tprops = {};\\n\\n\\t\\t// Set position first, in-case top/left are set even on static elem\\n\\t\\tif ( position === \\\"static\\\" ) {\\n\\t\\t\\telem.style.position = \\\"relative\\\";\\n\\t\\t}\\n\\n\\t\\tcurOffset = curElem.offset();\\n\\t\\tcurCSSTop = jQuery.css( elem, \\\"top\\\" );\\n\\t\\tcurCSSLeft = jQuery.css( elem, \\\"left\\\" );\\n\\t\\tcalculatePosition = ( position === \\\"absolute\\\" || position === \\\"fixed\\\" ) &&\\n\\t\\t\\t( curCSSTop + curCSSLeft ).indexOf( \\\"auto\\\" ) > -1;\\n\\n\\t\\t// Need to be able to calculate position if either\\n\\t\\t// top or left is auto and position is either absolute or fixed\\n\\t\\tif ( calculatePosition ) {\\n\\t\\t\\tcurPosition = curElem.position();\\n\\t\\t\\tcurTop = curPosition.top;\\n\\t\\t\\tcurLeft = curPosition.left;\\n\\n\\t\\t} else {\\n\\t\\t\\tcurTop = parseFloat( curCSSTop ) || 0;\\n\\t\\t\\tcurLeft = parseFloat( curCSSLeft ) || 0;\\n\\t\\t}\\n\\n\\t\\tif ( isFunction( options ) ) {\\n\\n\\t\\t\\t// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)\\n\\t\\t\\toptions = options.call( elem, i, jQuery.extend( {}, curOffset ) );\\n\\t\\t}\\n\\n\\t\\tif ( options.top != null ) {\\n\\t\\t\\tprops.top = ( options.top - curOffset.top ) + curTop;\\n\\t\\t}\\n\\t\\tif ( options.left != null ) {\\n\\t\\t\\tprops.left = ( options.left - curOffset.left ) + curLeft;\\n\\t\\t}\\n\\n\\t\\tif ( \\\"using\\\" in options ) {\\n\\t\\t\\toptions.using.call( elem, props );\\n\\n\\t\\t} else {\\n\\t\\t\\tcurElem.css( props );\\n\\t\\t}\\n\\t}\\n};\\n\\njQuery.fn.extend( {\\n\\n\\t// offset() relates an element's border box to the document origin\\n\\toffset: function( options ) {\\n\\n\\t\\t// Preserve chaining for setter\\n\\t\\tif ( arguments.length ) {\\n\\t\\t\\treturn options === undefined ?\\n\\t\\t\\t\\tthis :\\n\\t\\t\\t\\tthis.each( function( i ) {\\n\\t\\t\\t\\t\\tjQuery.offset.setOffset( this, options, i );\\n\\t\\t\\t\\t} );\\n\\t\\t}\\n\\n\\t\\tvar rect, win,\\n\\t\\t\\telem = this[ 0 ];\\n\\n\\t\\tif ( !elem ) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\t// Return zeros for disconnected and hidden (display: none) elements (gh-2310)\\n\\t\\t// Support: IE <=11 only\\n\\t\\t// Running getBoundingClientRect on a\\n\\t\\t// disconnected node in IE throws an error\\n\\t\\tif ( !elem.getClientRects().length ) {\\n\\t\\t\\treturn { top: 0, left: 0 };\\n\\t\\t}\\n\\n\\t\\t// Get document-relative position by adding viewport scroll to viewport-relative gBCR\\n\\t\\trect = elem.getBoundingClientRect();\\n\\t\\twin = elem.ownerDocument.defaultView;\\n\\t\\treturn {\\n\\t\\t\\ttop: rect.top + win.pageYOffset,\\n\\t\\t\\tleft: rect.left + win.pageXOffset\\n\\t\\t};\\n\\t},\\n\\n\\t// position() relates an element's margin box to its offset parent's padding box\\n\\t// This corresponds to the behavior of CSS absolute positioning\\n\\tposition: function() {\\n\\t\\tif ( !this[ 0 ] ) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tvar offsetParent, offset, doc,\\n\\t\\t\\telem = this[ 0 ],\\n\\t\\t\\tparentOffset = { top: 0, left: 0 };\\n\\n\\t\\t// position:fixed elements are offset from the viewport, which itself always has zero offset\\n\\t\\tif ( jQuery.css( elem, \\\"position\\\" ) === \\\"fixed\\\" ) {\\n\\n\\t\\t\\t// Assume position:fixed implies availability of getBoundingClientRect\\n\\t\\t\\toffset = elem.getBoundingClientRect();\\n\\n\\t\\t} else {\\n\\t\\t\\toffset = this.offset();\\n\\n\\t\\t\\t// Account for the *real* offset parent, which can be the document or its root element\\n\\t\\t\\t// when a statically positioned element is identified\\n\\t\\t\\tdoc = elem.ownerDocument;\\n\\t\\t\\toffsetParent = elem.offsetParent || doc.documentElement;\\n\\t\\t\\twhile ( offsetParent &&\\n\\t\\t\\t\\t( offsetParent === doc.body || offsetParent === doc.documentElement ) &&\\n\\t\\t\\t\\tjQuery.css( offsetParent, \\\"position\\\" ) === \\\"static\\\" ) {\\n\\n\\t\\t\\t\\toffsetParent = offsetParent.parentNode;\\n\\t\\t\\t}\\n\\t\\t\\tif ( offsetParent && offsetParent !== elem && offsetParent.nodeType === 1 ) {\\n\\n\\t\\t\\t\\t// Incorporate borders into its offset, since they are outside its content origin\\n\\t\\t\\t\\tparentOffset = jQuery( offsetParent ).offset();\\n\\t\\t\\t\\tparentOffset.top += jQuery.css( offsetParent, \\\"borderTopWidth\\\", true );\\n\\t\\t\\t\\tparentOffset.left += jQuery.css( offsetParent, \\\"borderLeftWidth\\\", true );\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// Subtract parent offsets and element margins\\n\\t\\treturn {\\n\\t\\t\\ttop: offset.top - parentOffset.top - jQuery.css( elem, \\\"marginTop\\\", true ),\\n\\t\\t\\tleft: offset.left - parentOffset.left - jQuery.css( elem, \\\"marginLeft\\\", true )\\n\\t\\t};\\n\\t},\\n\\n\\t// This method will return documentElement in the following cases:\\n\\t// 1) For the element inside the iframe without offsetParent, this method will return\\n\\t//    documentElement of the parent window\\n\\t// 2) For the hidden or detached element\\n\\t// 3) For body or html element, i.e. in case of the html node - it will return itself\\n\\t//\\n\\t// but those exceptions were never presented as a real life use-cases\\n\\t// and might be considered as more preferable results.\\n\\t//\\n\\t// This logic, however, is not guaranteed and can change at any point in the future\\n\\toffsetParent: function() {\\n\\t\\treturn this.map( function() {\\n\\t\\t\\tvar offsetParent = this.offsetParent;\\n\\n\\t\\t\\twhile ( offsetParent && jQuery.css( offsetParent, \\\"position\\\" ) === \\\"static\\\" ) {\\n\\t\\t\\t\\toffsetParent = offsetParent.offsetParent;\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn offsetParent || documentElement;\\n\\t\\t} );\\n\\t}\\n} );\\n\\n// Create scrollLeft and scrollTop methods\\njQuery.each( { scrollLeft: \\\"pageXOffset\\\", scrollTop: \\\"pageYOffset\\\" }, function( method, prop ) {\\n\\tvar top = \\\"pageYOffset\\\" === prop;\\n\\n\\tjQuery.fn[ method ] = function( val ) {\\n\\t\\treturn access( this, function( elem, method, val ) {\\n\\n\\t\\t\\t// Coalesce documents and windows\\n\\t\\t\\tvar win;\\n\\t\\t\\tif ( isWindow( elem ) ) {\\n\\t\\t\\t\\twin = elem;\\n\\t\\t\\t} else if ( elem.nodeType === 9 ) {\\n\\t\\t\\t\\twin = elem.defaultView;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( val === undefined ) {\\n\\t\\t\\t\\treturn win ? win[ prop ] : elem[ method ];\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( win ) {\\n\\t\\t\\t\\twin.scrollTo(\\n\\t\\t\\t\\t\\t!top ? val : win.pageXOffset,\\n\\t\\t\\t\\t\\ttop ? val : win.pageYOffset\\n\\t\\t\\t\\t);\\n\\n\\t\\t\\t} else {\\n\\t\\t\\t\\telem[ method ] = val;\\n\\t\\t\\t}\\n\\t\\t}, method, val, arguments.length );\\n\\t};\\n} );\\n\\n// Support: Safari <=7 - 9.1, Chrome <=37 - 49\\n// Add the top/left cssHooks using jQuery.fn.position\\n// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\\n// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347\\n// getComputedStyle returns percent when specified for top/left/bottom/right;\\n// rather than make the css module depend on the offset module, just check for it here\\njQuery.each( [ \\\"top\\\", \\\"left\\\" ], function( i, prop ) {\\n\\tjQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,\\n\\t\\tfunction( elem, computed ) {\\n\\t\\t\\tif ( computed ) {\\n\\t\\t\\t\\tcomputed = curCSS( elem, prop );\\n\\n\\t\\t\\t\\t// If curCSS returns percentage, fallback to offset\\n\\t\\t\\t\\treturn rnumnonpx.test( computed ) ?\\n\\t\\t\\t\\t\\tjQuery( elem ).position()[ prop ] + \\\"px\\\" :\\n\\t\\t\\t\\t\\tcomputed;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t);\\n} );\\n\\n\\n// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\\njQuery.each( { Height: \\\"height\\\", Width: \\\"width\\\" }, function( name, type ) {\\n\\tjQuery.each( { padding: \\\"inner\\\" + name, content: type, \\\"\\\": \\\"outer\\\" + name },\\n\\t\\tfunction( defaultExtra, funcName ) {\\n\\n\\t\\t// Margin is only for outerHeight, outerWidth\\n\\t\\tjQuery.fn[ funcName ] = function( margin, value ) {\\n\\t\\t\\tvar chainable = arguments.length && ( defaultExtra || typeof margin !== \\\"boolean\\\" ),\\n\\t\\t\\t\\textra = defaultExtra || ( margin === true || value === true ? \\\"margin\\\" : \\\"border\\\" );\\n\\n\\t\\t\\treturn access( this, function( elem, type, value ) {\\n\\t\\t\\t\\tvar doc;\\n\\n\\t\\t\\t\\tif ( isWindow( elem ) ) {\\n\\n\\t\\t\\t\\t\\t// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)\\n\\t\\t\\t\\t\\treturn funcName.indexOf( \\\"outer\\\" ) === 0 ?\\n\\t\\t\\t\\t\\t\\telem[ \\\"inner\\\" + name ] :\\n\\t\\t\\t\\t\\t\\telem.document.documentElement[ \\\"client\\\" + name ];\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Get document width or height\\n\\t\\t\\t\\tif ( elem.nodeType === 9 ) {\\n\\t\\t\\t\\t\\tdoc = elem.documentElement;\\n\\n\\t\\t\\t\\t\\t// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\\n\\t\\t\\t\\t\\t// whichever is greatest\\n\\t\\t\\t\\t\\treturn Math.max(\\n\\t\\t\\t\\t\\t\\telem.body[ \\\"scroll\\\" + name ], doc[ \\\"scroll\\\" + name ],\\n\\t\\t\\t\\t\\t\\telem.body[ \\\"offset\\\" + name ], doc[ \\\"offset\\\" + name ],\\n\\t\\t\\t\\t\\t\\tdoc[ \\\"client\\\" + name ]\\n\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn value === undefined ?\\n\\n\\t\\t\\t\\t\\t// Get width or height on the element, requesting but not forcing parseFloat\\n\\t\\t\\t\\t\\tjQuery.css( elem, type, extra ) :\\n\\n\\t\\t\\t\\t\\t// Set width or height on the element\\n\\t\\t\\t\\t\\tjQuery.style( elem, type, value, extra );\\n\\t\\t\\t}, type, chainable ? margin : undefined, chainable );\\n\\t\\t};\\n\\t} );\\n} );\\n\\n\\njQuery.each( ( \\\"blur focus focusin focusout resize scroll click dblclick \\\" +\\n\\t\\\"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \\\" +\\n\\t\\\"change select submit keydown keypress keyup contextmenu\\\" ).split( \\\" \\\" ),\\n\\tfunction( i, name ) {\\n\\n\\t// Handle event binding\\n\\tjQuery.fn[ name ] = function( data, fn ) {\\n\\t\\treturn arguments.length > 0 ?\\n\\t\\t\\tthis.on( name, null, data, fn ) :\\n\\t\\t\\tthis.trigger( name );\\n\\t};\\n} );\\n\\njQuery.fn.extend( {\\n\\thover: function( fnOver, fnOut ) {\\n\\t\\treturn this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );\\n\\t}\\n} );\\n\\n\\n\\n\\njQuery.fn.extend( {\\n\\n\\tbind: function( types, data, fn ) {\\n\\t\\treturn this.on( types, null, data, fn );\\n\\t},\\n\\tunbind: function( types, fn ) {\\n\\t\\treturn this.off( types, null, fn );\\n\\t},\\n\\n\\tdelegate: function( selector, types, data, fn ) {\\n\\t\\treturn this.on( types, selector, data, fn );\\n\\t},\\n\\tundelegate: function( selector, types, fn ) {\\n\\n\\t\\t// ( namespace ) or ( selector, types [, fn] )\\n\\t\\treturn arguments.length === 1 ?\\n\\t\\t\\tthis.off( selector, \\\"**\\\" ) :\\n\\t\\t\\tthis.off( types, selector || \\\"**\\\", fn );\\n\\t}\\n} );\\n\\n// Bind a function to a context, optionally partially applying any\\n// arguments.\\n// jQuery.proxy is deprecated to promote standards (specifically Function#bind)\\n// However, it is not slated for removal any time soon\\njQuery.proxy = function( fn, context ) {\\n\\tvar tmp, args, proxy;\\n\\n\\tif ( typeof context === \\\"string\\\" ) {\\n\\t\\ttmp = fn[ context ];\\n\\t\\tcontext = fn;\\n\\t\\tfn = tmp;\\n\\t}\\n\\n\\t// Quick check to determine if target is callable, in the spec\\n\\t// this throws a TypeError, but we will just return undefined.\\n\\tif ( !isFunction( fn ) ) {\\n\\t\\treturn undefined;\\n\\t}\\n\\n\\t// Simulated bind\\n\\targs = slice.call( arguments, 2 );\\n\\tproxy = function() {\\n\\t\\treturn fn.apply( context || this, args.concat( slice.call( arguments ) ) );\\n\\t};\\n\\n\\t// Set the guid of unique handler to the same of original handler, so it can be removed\\n\\tproxy.guid = fn.guid = fn.guid || jQuery.guid++;\\n\\n\\treturn proxy;\\n};\\n\\njQuery.holdReady = function( hold ) {\\n\\tif ( hold ) {\\n\\t\\tjQuery.readyWait++;\\n\\t} else {\\n\\t\\tjQuery.ready( true );\\n\\t}\\n};\\njQuery.isArray = Array.isArray;\\njQuery.parseJSON = JSON.parse;\\njQuery.nodeName = nodeName;\\njQuery.isFunction = isFunction;\\njQuery.isWindow = isWindow;\\njQuery.camelCase = camelCase;\\njQuery.type = toType;\\n\\njQuery.now = Date.now;\\n\\njQuery.isNumeric = function( obj ) {\\n\\n\\t// As of jQuery 3.0, isNumeric is limited to\\n\\t// strings and numbers (primitives or objects)\\n\\t// that can be coerced to finite numbers (gh-2662)\\n\\tvar type = jQuery.type( obj );\\n\\treturn ( type === \\\"number\\\" || type === \\\"string\\\" ) &&\\n\\n\\t\\t// parseFloat NaNs numeric-cast false positives (\\\"\\\")\\n\\t\\t// ...but misinterprets leading-number strings, particularly hex literals (\\\"0x...\\\")\\n\\t\\t// subtraction forces infinities to NaN\\n\\t\\t!isNaN( obj - parseFloat( obj ) );\\n};\\n\\n\\n\\n\\n// Register as a named AMD module, since jQuery can be concatenated with other\\n// files that may use define, but not via a proper concatenation script that\\n// understands anonymous AMD modules. A named AMD is safest and most robust\\n// way to register. Lowercase jquery is used because AMD module names are\\n// derived from file names, and jQuery is normally delivered in a lowercase\\n// file name. Do this after creating the global so that if an AMD module wants\\n// to call noConflict to hide this version of jQuery, it will work.\\n\\n// Note that for maximum portability, libraries that are not jQuery should\\n// declare themselves as anonymous modules, and avoid setting a global if an\\n// AMD loader is present. jQuery is a special case. For more information, see\\n// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\\n\\nif ( typeof define === \\\"function\\\" && define.amd ) {\\n\\tdefine( \\\"jquery\\\", [], function() {\\n\\t\\treturn jQuery;\\n\\t} );\\n}\\n\\n\\n\\n\\nvar\\n\\n\\t// Map over jQuery in case of overwrite\\n\\t_jQuery = window.jQuery,\\n\\n\\t// Map over the $ in case of overwrite\\n\\t_$ = window.$;\\n\\njQuery.noConflict = function( deep ) {\\n\\tif ( window.$ === jQuery ) {\\n\\t\\twindow.$ = _$;\\n\\t}\\n\\n\\tif ( deep && window.jQuery === jQuery ) {\\n\\t\\twindow.jQuery = _jQuery;\\n\\t}\\n\\n\\treturn jQuery;\\n};\\n\\n// Expose jQuery and $ identifiers, even in AMD\\n// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\\n// and CommonJS for browser emulators (#13566)\\nif ( !noGlobal ) {\\n\\twindow.jQuery = window.$ = jQuery;\\n}\\n\\n\\n\\n\\nreturn jQuery;\\n} );\\n\",\"(function( self ){\\n\\n\\tvar THREE = require(\\\"./three.js\\\");\\n\\n\\tmodule.exports = function( addons ){\\n\\n\\t\\tif( addons instanceof Array ){\\n\\n\\t\\t\\tfor( var addonIndex = 0, length = addons.length; addonIndex < length; addonIndex++ ){\\n\\t\\t\\t\\t\\n\\t\\t\\t\\tvar addon = addons[addonIndex];\\n\\t\\t\\t\\t\\n\\t\\t\\t\\tif( addon instanceof Function ){\\n\\n\\t\\t\\t\\t\\taddon(THREE);\\n\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\telse if( typeof addon === \\\"string\\\" ){\\n\\n\\t\\t\\t\\t\\trequire(\\\"./addons/\\\" + addon + \\\".js\\\")(THREE);\\n\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\telse {\\n\\n\\t\\t\\t\\t\\tthrow new Error(\\\"Invalid module type provided\\\");\\n\\n\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\n\\t\\t\\t};\\n\\n\\t\\t};\\n\\n\\t\\treturn THREE;\\n\\n\\t};\\n\\n})(this || {});\\n\",\"(function( self ){\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t */\\n\\n\\tvar THREE = { REVISION: '79' };\\n\\n\\t// Polyfills\\n\\n\\tif ( Number.EPSILON === undefined ) {\\n\\n\\t\\tNumber.EPSILON = Math.pow( 2, - 52 );\\n\\n\\t}\\n\\n\\t//\\n\\n\\tif ( Math.sign === undefined ) {\\n\\n\\t\\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\\n\\n\\t\\tMath.sign = function ( x ) {\\n\\n\\t\\t\\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;\\n\\n\\t\\t};\\n\\n\\t}\\n\\n\\tif ( Function.prototype.name === undefined ) {\\n\\n\\t\\t// Missing in IE9-11.\\n\\t\\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\\n\\n\\t\\tObject.defineProperty( Function.prototype, 'name', {\\n\\n\\t\\t\\tget: function () {\\n\\n\\t\\t\\t\\treturn this.toString().match( /^\\\\s*function\\\\s*(\\\\S*)\\\\s*\\\\(/ )[ 1 ];\\n\\n\\t\\t\\t}\\n\\n\\t\\t} );\\n\\n\\t}\\n\\n\\tif ( Object.assign === undefined ) {\\n\\n\\t\\t// Missing in IE.\\n\\t\\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\\n\\n\\t\\t( function () {\\n\\n\\t\\t\\tObject.assign = function ( target ) {\\n\\n\\t\\t\\t\\t'use strict';\\n\\n\\t\\t\\t\\tif ( target === undefined || target === null ) {\\n\\n\\t\\t\\t\\t\\tthrow new TypeError( 'Cannot convert undefined or null to object' );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tvar output = Object( target );\\n\\n\\t\\t\\t\\tfor ( var index = 1; index < arguments.length; index ++ ) {\\n\\n\\t\\t\\t\\t\\tvar source = arguments[ index ];\\n\\n\\t\\t\\t\\t\\tif ( source !== undefined && source !== null ) {\\n\\n\\t\\t\\t\\t\\t\\tfor ( var nextKey in source ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tif ( Object.prototype.hasOwnProperty.call( source, nextKey ) ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\toutput[ nextKey ] = source[ nextKey ];\\n\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn output;\\n\\n\\t\\t\\t};\\n\\n\\t\\t} )();\\n\\n\\t}\\n\\n\\t//\\n\\n\\tObject.assign( THREE, {\\n\\n\\t\\t// https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent.button\\n\\n\\t\\tMOUSE: { LEFT: 0, MIDDLE: 1, RIGHT: 2 },\\n\\n\\t\\t// GL STATE CONSTANTS\\n\\n\\t\\tCullFaceNone: 0,\\n\\t\\tCullFaceBack: 1,\\n\\t\\tCullFaceFront: 2,\\n\\t\\tCullFaceFrontBack: 3,\\n\\n\\t\\tFrontFaceDirectionCW: 0,\\n\\t\\tFrontFaceDirectionCCW: 1,\\n\\n\\t\\t// SHADOWING TYPES\\n\\n\\t\\tBasicShadowMap: 0,\\n\\t\\tPCFShadowMap: 1,\\n\\t\\tPCFSoftShadowMap: 2,\\n\\n\\t\\t// MATERIAL CONSTANTS\\n\\n\\t\\t// side\\n\\n\\t\\tFrontSide: 0,\\n\\t\\tBackSide: 1,\\n\\t\\tDoubleSide: 2,\\n\\n\\t\\t// shading\\n\\n\\t\\tFlatShading: 1,\\n\\t\\tSmoothShading: 2,\\n\\n\\t\\t// colors\\n\\n\\t\\tNoColors: 0,\\n\\t\\tFaceColors: 1,\\n\\t\\tVertexColors: 2,\\n\\n\\t\\t// blending modes\\n\\n\\t\\tNoBlending: 0,\\n\\t\\tNormalBlending: 1,\\n\\t\\tAdditiveBlending: 2,\\n\\t\\tSubtractiveBlending: 3,\\n\\t\\tMultiplyBlending: 4,\\n\\t\\tCustomBlending: 5,\\n\\n\\t\\t// custom blending equations\\n\\t\\t// (numbers start from 100 not to clash with other\\n\\t\\t// mappings to OpenGL constants defined in Texture.js)\\n\\n\\t\\tAddEquation: 100,\\n\\t\\tSubtractEquation: 101,\\n\\t\\tReverseSubtractEquation: 102,\\n\\t\\tMinEquation: 103,\\n\\t\\tMaxEquation: 104,\\n\\n\\t\\t// custom blending destination factors\\n\\n\\t\\tZeroFactor: 200,\\n\\t\\tOneFactor: 201,\\n\\t\\tSrcColorFactor: 202,\\n\\t\\tOneMinusSrcColorFactor: 203,\\n\\t\\tSrcAlphaFactor: 204,\\n\\t\\tOneMinusSrcAlphaFactor: 205,\\n\\t\\tDstAlphaFactor: 206,\\n\\t\\tOneMinusDstAlphaFactor: 207,\\n\\n\\t\\t// custom blending source factors\\n\\n\\t\\t//ZeroFactor: 200,\\n\\t\\t//OneFactor: 201,\\n\\t\\t//SrcAlphaFactor: 204,\\n\\t\\t//OneMinusSrcAlphaFactor: 205,\\n\\t\\t//DstAlphaFactor: 206,\\n\\t\\t//OneMinusDstAlphaFactor: 207,\\n\\t\\tDstColorFactor: 208,\\n\\t\\tOneMinusDstColorFactor: 209,\\n\\t\\tSrcAlphaSaturateFactor: 210,\\n\\n\\t\\t// depth modes\\n\\n\\t\\tNeverDepth: 0,\\n\\t\\tAlwaysDepth: 1,\\n\\t\\tLessDepth: 2,\\n\\t\\tLessEqualDepth: 3,\\n\\t\\tEqualDepth: 4,\\n\\t\\tGreaterEqualDepth: 5,\\n\\t\\tGreaterDepth: 6,\\n\\t\\tNotEqualDepth: 7,\\n\\n\\n\\t\\t// TEXTURE CONSTANTS\\n\\n\\t\\tMultiplyOperation: 0,\\n\\t\\tMixOperation: 1,\\n\\t\\tAddOperation: 2,\\n\\n\\t\\t// Tone Mapping modes\\n\\n\\t\\tNoToneMapping: 0, // do not do any tone mapping, not even exposure (required for special purpose passes.)\\n\\t\\tLinearToneMapping: 1, // only apply exposure.\\n\\t\\tReinhardToneMapping: 2,\\n\\t\\tUncharted2ToneMapping: 3, // John Hable\\n\\t\\tCineonToneMapping: 4, // optimized filmic operator by Jim Hejl and Richard Burgess-Dawson\\n\\n\\t\\t// Mapping modes\\n\\n\\t\\tUVMapping: 300,\\n\\n\\t\\tCubeReflectionMapping: 301,\\n\\t\\tCubeRefractionMapping: 302,\\n\\n\\t\\tEquirectangularReflectionMapping: 303,\\n\\t\\tEquirectangularRefractionMapping: 304,\\n\\n\\t\\tSphericalReflectionMapping: 305,\\n\\t\\tCubeUVReflectionMapping: 306,\\n\\t\\tCubeUVRefractionMapping: 307,\\n\\n\\t\\t// Wrapping modes\\n\\n\\t\\tRepeatWrapping: 1000,\\n\\t\\tClampToEdgeWrapping: 1001,\\n\\t\\tMirroredRepeatWrapping: 1002,\\n\\n\\t\\t// Filters\\n\\n\\t\\tNearestFilter: 1003,\\n\\t\\tNearestMipMapNearestFilter: 1004,\\n\\t\\tNearestMipMapLinearFilter: 1005,\\n\\t\\tLinearFilter: 1006,\\n\\t\\tLinearMipMapNearestFilter: 1007,\\n\\t\\tLinearMipMapLinearFilter: 1008,\\n\\n\\t\\t// Data types\\n\\n\\t\\tUnsignedByteType: 1009,\\n\\t\\tByteType: 1010,\\n\\t\\tShortType: 1011,\\n\\t\\tUnsignedShortType: 1012,\\n\\t\\tIntType: 1013,\\n\\t\\tUnsignedIntType: 1014,\\n\\t\\tFloatType: 1015,\\n\\t\\tHalfFloatType: 1025,\\n\\n\\t\\t// Pixel types\\n\\n\\t\\t//UnsignedByteType: 1009,\\n\\t\\tUnsignedShort4444Type: 1016,\\n\\t\\tUnsignedShort5551Type: 1017,\\n\\t\\tUnsignedShort565Type: 1018,\\n\\n\\t\\t// Pixel formats\\n\\n\\t\\tAlphaFormat: 1019,\\n\\t\\tRGBFormat: 1020,\\n\\t\\tRGBAFormat: 1021,\\n\\t\\tLuminanceFormat: 1022,\\n\\t\\tLuminanceAlphaFormat: 1023,\\n\\t\\t// THREE.RGBEFormat handled as THREE.RGBAFormat in shaders\\n\\t\\tRGBEFormat: THREE.RGBAFormat, //1024;\\n\\t\\tDepthFormat: 1026,\\n\\n\\t\\t// DDS / ST3C Compressed texture formats\\n\\n\\t\\tRGB_S3TC_DXT1_Format: 2001,\\n\\t\\tRGBA_S3TC_DXT1_Format: 2002,\\n\\t\\tRGBA_S3TC_DXT3_Format: 2003,\\n\\t\\tRGBA_S3TC_DXT5_Format: 2004,\\n\\n\\t\\t// PVRTC compressed texture formats\\n\\n\\t\\tRGB_PVRTC_4BPPV1_Format: 2100,\\n\\t\\tRGB_PVRTC_2BPPV1_Format: 2101,\\n\\t\\tRGBA_PVRTC_4BPPV1_Format: 2102,\\n\\t\\tRGBA_PVRTC_2BPPV1_Format: 2103,\\n\\n\\t\\t// ETC compressed texture formats\\n\\n\\t\\tRGB_ETC1_Format: 2151,\\n\\n\\t\\t// Loop styles for AnimationAction\\n\\n\\t\\tLoopOnce: 2200,\\n\\t\\tLoopRepeat: 2201,\\n\\t\\tLoopPingPong: 2202,\\n\\n\\t\\t// Interpolation\\n\\n\\t\\tInterpolateDiscrete: 2300,\\n\\t\\tInterpolateLinear: 2301,\\n\\t\\tInterpolateSmooth: 2302,\\n\\n\\t\\t// Interpolant ending modes\\n\\n\\t\\tZeroCurvatureEnding: 2400,\\n\\t\\tZeroSlopeEnding: 2401,\\n\\t\\tWrapAroundEnding: 2402,\\n\\n\\t\\t// Triangle Draw modes\\n\\n\\t\\tTrianglesDrawMode: 0,\\n\\t\\tTriangleStripDrawMode: 1,\\n\\t\\tTriangleFanDrawMode: 2,\\n\\n\\t\\t// Texture Encodings\\n\\n\\t\\tLinearEncoding: 3000, // No encoding at all.\\n\\t\\tsRGBEncoding: 3001,\\n\\t\\tGammaEncoding: 3007, // uses GAMMA_FACTOR, for backwards compatibility with WebGLRenderer.gammaInput/gammaOutput\\n\\n\\t\\t// The following Texture Encodings are for RGB-only (no alpha) HDR light emission sources.\\n\\t\\t// These encodings should not specified as output encodings except in rare situations.\\n\\t\\tRGBEEncoding: 3002, // AKA Radiance.\\n\\t\\tLogLuvEncoding: 3003,\\n\\t\\tRGBM7Encoding: 3004,\\n\\t\\tRGBM16Encoding: 3005,\\n\\t\\tRGBDEncoding: 3006, // MaxRange is 256.\\n\\n\\t\\t// Depth packing strategies\\n\\n\\t\\tBasicDepthPacking: 3200, // for writing to float textures for high precision or for visualizing results in RGB buffers\\n\\t\\tRGBADepthPacking: 3201 // for packing into RGBA buffers.\\n\\n\\t} );\\n\\n\\t// File:src/math/Color.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t */\\n\\n\\tTHREE.Color = function ( r, g, b ) {\\n\\n\\t\\tif ( g === undefined && b === undefined ) {\\n\\n\\t\\t\\t// r is THREE.Color, hex or string\\n\\t\\t\\treturn this.set( r );\\n\\n\\t\\t}\\n\\n\\t\\treturn this.setRGB( r, g, b );\\n\\n\\t};\\n\\n\\tTHREE.Color.prototype = {\\n\\n\\t\\tconstructor: THREE.Color,\\n\\n\\t\\tr: 1, g: 1, b: 1,\\n\\n\\t\\tset: function ( value ) {\\n\\n\\t\\t\\tif ( value instanceof THREE.Color ) {\\n\\n\\t\\t\\t\\tthis.copy( value );\\n\\n\\t\\t\\t} else if ( typeof value === 'number' ) {\\n\\n\\t\\t\\t\\tthis.setHex( value );\\n\\n\\t\\t\\t} else if ( typeof value === 'string' ) {\\n\\n\\t\\t\\t\\tthis.setStyle( value );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tsetScalar: function ( scalar ) {\\n\\n\\t\\t\\tthis.r = scalar;\\n\\t\\t\\tthis.g = scalar;\\n\\t\\t\\tthis.b = scalar;\\n\\n\\t\\t},\\n\\n\\t\\tsetHex: function ( hex ) {\\n\\n\\t\\t\\thex = Math.floor( hex );\\n\\n\\t\\t\\tthis.r = ( hex >> 16 & 255 ) / 255;\\n\\t\\t\\tthis.g = ( hex >> 8 & 255 ) / 255;\\n\\t\\t\\tthis.b = ( hex & 255 ) / 255;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tsetRGB: function ( r, g, b ) {\\n\\n\\t\\t\\tthis.r = r;\\n\\t\\t\\tthis.g = g;\\n\\t\\t\\tthis.b = b;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tsetHSL: function () {\\n\\n\\t\\t\\tfunction hue2rgb( p, q, t ) {\\n\\n\\t\\t\\t\\tif ( t < 0 ) t += 1;\\n\\t\\t\\t\\tif ( t > 1 ) t -= 1;\\n\\t\\t\\t\\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\\n\\t\\t\\t\\tif ( t < 1 / 2 ) return q;\\n\\t\\t\\t\\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\\n\\t\\t\\t\\treturn p;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn function setHSL( h, s, l ) {\\n\\n\\t\\t\\t\\t// h,s,l ranges are in 0.0 - 1.0\\n\\t\\t\\t\\th = THREE.Math.euclideanModulo( h, 1 );\\n\\t\\t\\t\\ts = THREE.Math.clamp( s, 0, 1 );\\n\\t\\t\\t\\tl = THREE.Math.clamp( l, 0, 1 );\\n\\n\\t\\t\\t\\tif ( s === 0 ) {\\n\\n\\t\\t\\t\\t\\tthis.r = this.g = this.b = l;\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\\n\\t\\t\\t\\t\\tvar q = ( 2 * l ) - p;\\n\\n\\t\\t\\t\\t\\tthis.r = hue2rgb( q, p, h + 1 / 3 );\\n\\t\\t\\t\\t\\tthis.g = hue2rgb( q, p, h );\\n\\t\\t\\t\\t\\tthis.b = hue2rgb( q, p, h - 1 / 3 );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn this;\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\t\\tsetStyle: function ( style ) {\\n\\n\\t\\t\\tfunction handleAlpha( string ) {\\n\\n\\t\\t\\t\\tif ( string === undefined ) return;\\n\\n\\t\\t\\t\\tif ( parseFloat( string ) < 1 ) {\\n\\n\\t\\t\\t\\t\\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\n\\t\\t\\tvar m;\\n\\n\\t\\t\\tif ( m = /^((?:rgb|hsl)a?)\\\\(\\\\s*([^\\\\)]*)\\\\)/.exec( style ) ) {\\n\\n\\t\\t\\t\\t// rgb / hsl\\n\\n\\t\\t\\t\\tvar color;\\n\\t\\t\\t\\tvar name = m[ 1 ];\\n\\t\\t\\t\\tvar components = m[ 2 ];\\n\\n\\t\\t\\t\\tswitch ( name ) {\\n\\n\\t\\t\\t\\t\\tcase 'rgb':\\n\\t\\t\\t\\t\\tcase 'rgba':\\n\\n\\t\\t\\t\\t\\t\\tif ( color = /^(\\\\d+)\\\\s*,\\\\s*(\\\\d+)\\\\s*,\\\\s*(\\\\d+)\\\\s*(,\\\\s*([0-9]*\\\\.?[0-9]+)\\\\s*)?$/.exec( components ) ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t// rgb(255,0,0) rgba(255,0,0,0.5)\\n\\t\\t\\t\\t\\t\\t\\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\\n\\t\\t\\t\\t\\t\\t\\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\\n\\t\\t\\t\\t\\t\\t\\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\\n\\n\\t\\t\\t\\t\\t\\t\\thandleAlpha( color[ 5 ] );\\n\\n\\t\\t\\t\\t\\t\\t\\treturn this;\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\tif ( color = /^(\\\\d+)\\\\%\\\\s*,\\\\s*(\\\\d+)\\\\%\\\\s*,\\\\s*(\\\\d+)\\\\%\\\\s*(,\\\\s*([0-9]*\\\\.?[0-9]+)\\\\s*)?$/.exec( components ) ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\\n\\t\\t\\t\\t\\t\\t\\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\\n\\t\\t\\t\\t\\t\\t\\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\\n\\t\\t\\t\\t\\t\\t\\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\\n\\n\\t\\t\\t\\t\\t\\t\\thandleAlpha( color[ 5 ] );\\n\\n\\t\\t\\t\\t\\t\\t\\treturn this;\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\tcase 'hsl':\\n\\t\\t\\t\\t\\tcase 'hsla':\\n\\n\\t\\t\\t\\t\\t\\tif ( color = /^([0-9]*\\\\.?[0-9]+)\\\\s*,\\\\s*(\\\\d+)\\\\%\\\\s*,\\\\s*(\\\\d+)\\\\%\\\\s*(,\\\\s*([0-9]*\\\\.?[0-9]+)\\\\s*)?$/.exec( components ) ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\\n\\t\\t\\t\\t\\t\\t\\tvar h = parseFloat( color[ 1 ] ) / 360;\\n\\t\\t\\t\\t\\t\\t\\tvar s = parseInt( color[ 2 ], 10 ) / 100;\\n\\t\\t\\t\\t\\t\\t\\tvar l = parseInt( color[ 3 ], 10 ) / 100;\\n\\n\\t\\t\\t\\t\\t\\t\\thandleAlpha( color[ 5 ] );\\n\\n\\t\\t\\t\\t\\t\\t\\treturn this.setHSL( h, s, l );\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t} else if ( m = /^\\\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\\n\\n\\t\\t\\t\\t// hex color\\n\\n\\t\\t\\t\\tvar hex = m[ 1 ];\\n\\t\\t\\t\\tvar size = hex.length;\\n\\n\\t\\t\\t\\tif ( size === 3 ) {\\n\\n\\t\\t\\t\\t\\t// #ff0\\n\\t\\t\\t\\t\\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\\n\\t\\t\\t\\t\\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\\n\\t\\t\\t\\t\\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\\n\\n\\t\\t\\t\\t\\treturn this;\\n\\n\\t\\t\\t\\t} else if ( size === 6 ) {\\n\\n\\t\\t\\t\\t\\t// #ff0000\\n\\t\\t\\t\\t\\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\\n\\t\\t\\t\\t\\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\\n\\t\\t\\t\\t\\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\\n\\n\\t\\t\\t\\t\\treturn this;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( style && style.length > 0 ) {\\n\\n\\t\\t\\t\\t// color keywords\\n\\t\\t\\t\\tvar hex = THREE.ColorKeywords[ style ];\\n\\n\\t\\t\\t\\tif ( hex !== undefined ) {\\n\\n\\t\\t\\t\\t\\t// red\\n\\t\\t\\t\\t\\tthis.setHex( hex );\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t// unknown color\\n\\t\\t\\t\\t\\tconsole.warn( 'THREE.Color: Unknown color ' + style );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tclone: function () {\\n\\n\\t\\t\\treturn new this.constructor( this.r, this.g, this.b );\\n\\n\\t\\t},\\n\\n\\t\\tcopy: function ( color ) {\\n\\n\\t\\t\\tthis.r = color.r;\\n\\t\\t\\tthis.g = color.g;\\n\\t\\t\\tthis.b = color.b;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tcopyGammaToLinear: function ( color, gammaFactor ) {\\n\\n\\t\\t\\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\\n\\n\\t\\t\\tthis.r = Math.pow( color.r, gammaFactor );\\n\\t\\t\\tthis.g = Math.pow( color.g, gammaFactor );\\n\\t\\t\\tthis.b = Math.pow( color.b, gammaFactor );\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tcopyLinearToGamma: function ( color, gammaFactor ) {\\n\\n\\t\\t\\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\\n\\n\\t\\t\\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\\n\\n\\t\\t\\tthis.r = Math.pow( color.r, safeInverse );\\n\\t\\t\\tthis.g = Math.pow( color.g, safeInverse );\\n\\t\\t\\tthis.b = Math.pow( color.b, safeInverse );\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tconvertGammaToLinear: function () {\\n\\n\\t\\t\\tvar r = this.r, g = this.g, b = this.b;\\n\\n\\t\\t\\tthis.r = r * r;\\n\\t\\t\\tthis.g = g * g;\\n\\t\\t\\tthis.b = b * b;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tconvertLinearToGamma: function () {\\n\\n\\t\\t\\tthis.r = Math.sqrt( this.r );\\n\\t\\t\\tthis.g = Math.sqrt( this.g );\\n\\t\\t\\tthis.b = Math.sqrt( this.b );\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tgetHex: function () {\\n\\n\\t\\t\\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\\n\\n\\t\\t},\\n\\n\\t\\tgetHexString: function () {\\n\\n\\t\\t\\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\\n\\n\\t\\t},\\n\\n\\t\\tgetHSL: function ( optionalTarget ) {\\n\\n\\t\\t\\t// h,s,l ranges are in 0.0 - 1.0\\n\\n\\t\\t\\tvar hsl = optionalTarget || { h: 0, s: 0, l: 0 };\\n\\n\\t\\t\\tvar r = this.r, g = this.g, b = this.b;\\n\\n\\t\\t\\tvar max = Math.max( r, g, b );\\n\\t\\t\\tvar min = Math.min( r, g, b );\\n\\n\\t\\t\\tvar hue, saturation;\\n\\t\\t\\tvar lightness = ( min + max ) / 2.0;\\n\\n\\t\\t\\tif ( min === max ) {\\n\\n\\t\\t\\t\\thue = 0;\\n\\t\\t\\t\\tsaturation = 0;\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\tvar delta = max - min;\\n\\n\\t\\t\\t\\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\\n\\n\\t\\t\\t\\tswitch ( max ) {\\n\\n\\t\\t\\t\\t\\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\\n\\t\\t\\t\\t\\tcase g: hue = ( b - r ) / delta + 2; break;\\n\\t\\t\\t\\t\\tcase b: hue = ( r - g ) / delta + 4; break;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\thue /= 6;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\thsl.h = hue;\\n\\t\\t\\thsl.s = saturation;\\n\\t\\t\\thsl.l = lightness;\\n\\n\\t\\t\\treturn hsl;\\n\\n\\t\\t},\\n\\n\\t\\tgetStyle: function () {\\n\\n\\t\\t\\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\\n\\n\\t\\t},\\n\\n\\t\\toffsetHSL: function ( h, s, l ) {\\n\\n\\t\\t\\tvar hsl = this.getHSL();\\n\\n\\t\\t\\thsl.h += h; hsl.s += s; hsl.l += l;\\n\\n\\t\\t\\tthis.setHSL( hsl.h, hsl.s, hsl.l );\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tadd: function ( color ) {\\n\\n\\t\\t\\tthis.r += color.r;\\n\\t\\t\\tthis.g += color.g;\\n\\t\\t\\tthis.b += color.b;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\taddColors: function ( color1, color2 ) {\\n\\n\\t\\t\\tthis.r = color1.r + color2.r;\\n\\t\\t\\tthis.g = color1.g + color2.g;\\n\\t\\t\\tthis.b = color1.b + color2.b;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\taddScalar: function ( s ) {\\n\\n\\t\\t\\tthis.r += s;\\n\\t\\t\\tthis.g += s;\\n\\t\\t\\tthis.b += s;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tsub: function( color ) {\\n\\n\\t\\t\\tthis.r = Math.max( 0, this.r - color.r );\\n\\t\\t\\tthis.g = Math.max( 0, this.g - color.g );\\n\\t\\t\\tthis.b = Math.max( 0, this.b - color.b );\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tmultiply: function ( color ) {\\n\\n\\t\\t\\tthis.r *= color.r;\\n\\t\\t\\tthis.g *= color.g;\\n\\t\\t\\tthis.b *= color.b;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tmultiplyScalar: function ( s ) {\\n\\n\\t\\t\\tthis.r *= s;\\n\\t\\t\\tthis.g *= s;\\n\\t\\t\\tthis.b *= s;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tlerp: function ( color, alpha ) {\\n\\n\\t\\t\\tthis.r += ( color.r - this.r ) * alpha;\\n\\t\\t\\tthis.g += ( color.g - this.g ) * alpha;\\n\\t\\t\\tthis.b += ( color.b - this.b ) * alpha;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tequals: function ( c ) {\\n\\n\\t\\t\\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\\n\\n\\t\\t},\\n\\n\\t\\tfromArray: function ( array, offset ) {\\n\\n\\t\\t\\tif ( offset === undefined ) offset = 0;\\n\\n\\t\\t\\tthis.r = array[ offset ];\\n\\t\\t\\tthis.g = array[ offset + 1 ];\\n\\t\\t\\tthis.b = array[ offset + 2 ];\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\ttoArray: function ( array, offset ) {\\n\\n\\t\\t\\tif ( array === undefined ) array = [];\\n\\t\\t\\tif ( offset === undefined ) offset = 0;\\n\\n\\t\\t\\tarray[ offset ] = this.r;\\n\\t\\t\\tarray[ offset + 1 ] = this.g;\\n\\t\\t\\tarray[ offset + 2 ] = this.b;\\n\\n\\t\\t\\treturn array;\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\tTHREE.ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\\n\\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\\n\\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\\n\\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\\n\\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\\n\\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\\n\\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\\n\\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\\n\\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\\n\\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\\n\\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\\n\\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\\n\\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\\n\\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\\n\\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\\n\\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\\n\\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\\n\\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\\n\\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\\n\\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\\n\\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\\n\\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\\n\\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\\n\\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\\n\\n\\t// File:src/math/Quaternion.js\\n\\n\\t/**\\n\\t * @author mikael emtinger / http://gomo.se/\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t * @author WestLangley / http://github.com/WestLangley\\n\\t * @author bhouston / http://clara.io\\n\\t */\\n\\n\\tTHREE.Quaternion = function ( x, y, z, w ) {\\n\\n\\t\\tthis._x = x || 0;\\n\\t\\tthis._y = y || 0;\\n\\t\\tthis._z = z || 0;\\n\\t\\tthis._w = ( w !== undefined ) ? w : 1;\\n\\n\\t};\\n\\n\\tTHREE.Quaternion.prototype = {\\n\\n\\t\\tconstructor: THREE.Quaternion,\\n\\n\\t\\tget x () {\\n\\n\\t\\t\\treturn this._x;\\n\\n\\t\\t},\\n\\n\\t\\tset x ( value ) {\\n\\n\\t\\t\\tthis._x = value;\\n\\t\\t\\tthis.onChangeCallback();\\n\\n\\t\\t},\\n\\n\\t\\tget y () {\\n\\n\\t\\t\\treturn this._y;\\n\\n\\t\\t},\\n\\n\\t\\tset y ( value ) {\\n\\n\\t\\t\\tthis._y = value;\\n\\t\\t\\tthis.onChangeCallback();\\n\\n\\t\\t},\\n\\n\\t\\tget z () {\\n\\n\\t\\t\\treturn this._z;\\n\\n\\t\\t},\\n\\n\\t\\tset z ( value ) {\\n\\n\\t\\t\\tthis._z = value;\\n\\t\\t\\tthis.onChangeCallback();\\n\\n\\t\\t},\\n\\n\\t\\tget w () {\\n\\n\\t\\t\\treturn this._w;\\n\\n\\t\\t},\\n\\n\\t\\tset w ( value ) {\\n\\n\\t\\t\\tthis._w = value;\\n\\t\\t\\tthis.onChangeCallback();\\n\\n\\t\\t},\\n\\n\\t\\tset: function ( x, y, z, w ) {\\n\\n\\t\\t\\tthis._x = x;\\n\\t\\t\\tthis._y = y;\\n\\t\\t\\tthis._z = z;\\n\\t\\t\\tthis._w = w;\\n\\n\\t\\t\\tthis.onChangeCallback();\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tclone: function () {\\n\\n\\t\\t\\treturn new this.constructor( this._x, this._y, this._z, this._w );\\n\\n\\t\\t},\\n\\n\\t\\tcopy: function ( quaternion ) {\\n\\n\\t\\t\\tthis._x = quaternion.x;\\n\\t\\t\\tthis._y = quaternion.y;\\n\\t\\t\\tthis._z = quaternion.z;\\n\\t\\t\\tthis._w = quaternion.w;\\n\\n\\t\\t\\tthis.onChangeCallback();\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tsetFromEuler: function ( euler, update ) {\\n\\n\\t\\t\\tif ( euler instanceof THREE.Euler === false ) {\\n\\n\\t\\t\\t\\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t// http://www.mathworks.com/matlabcentral/fileexchange/\\n\\t\\t\\t// \\t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\\n\\t\\t\\t//\\tcontent/SpinCalc.m\\n\\n\\t\\t\\tvar c1 = Math.cos( euler._x / 2 );\\n\\t\\t\\tvar c2 = Math.cos( euler._y / 2 );\\n\\t\\t\\tvar c3 = Math.cos( euler._z / 2 );\\n\\t\\t\\tvar s1 = Math.sin( euler._x / 2 );\\n\\t\\t\\tvar s2 = Math.sin( euler._y / 2 );\\n\\t\\t\\tvar s3 = Math.sin( euler._z / 2 );\\n\\n\\t\\t\\tvar order = euler.order;\\n\\n\\t\\t\\tif ( order === 'XYZ' ) {\\n\\n\\t\\t\\t\\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\\n\\t\\t\\t\\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\\n\\t\\t\\t\\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\\n\\t\\t\\t\\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\\n\\n\\t\\t\\t} else if ( order === 'YXZ' ) {\\n\\n\\t\\t\\t\\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\\n\\t\\t\\t\\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\\n\\t\\t\\t\\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\\n\\t\\t\\t\\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\\n\\n\\t\\t\\t} else if ( order === 'ZXY' ) {\\n\\n\\t\\t\\t\\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\\n\\t\\t\\t\\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\\n\\t\\t\\t\\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\\n\\t\\t\\t\\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\\n\\n\\t\\t\\t} else if ( order === 'ZYX' ) {\\n\\n\\t\\t\\t\\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\\n\\t\\t\\t\\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\\n\\t\\t\\t\\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\\n\\t\\t\\t\\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\\n\\n\\t\\t\\t} else if ( order === 'YZX' ) {\\n\\n\\t\\t\\t\\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\\n\\t\\t\\t\\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\\n\\t\\t\\t\\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\\n\\t\\t\\t\\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\\n\\n\\t\\t\\t} else if ( order === 'XZY' ) {\\n\\n\\t\\t\\t\\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\\n\\t\\t\\t\\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\\n\\t\\t\\t\\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\\n\\t\\t\\t\\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( update !== false ) this.onChangeCallback();\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tsetFromAxisAngle: function ( axis, angle ) {\\n\\n\\t\\t\\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\\n\\n\\t\\t\\t// assumes axis is normalized\\n\\n\\t\\t\\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\\n\\n\\t\\t\\tthis._x = axis.x * s;\\n\\t\\t\\tthis._y = axis.y * s;\\n\\t\\t\\tthis._z = axis.z * s;\\n\\t\\t\\tthis._w = Math.cos( halfAngle );\\n\\n\\t\\t\\tthis.onChangeCallback();\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tsetFromRotationMatrix: function ( m ) {\\n\\n\\t\\t\\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\\n\\n\\t\\t\\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\\n\\n\\t\\t\\tvar te = m.elements,\\n\\n\\t\\t\\t\\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\\n\\t\\t\\t\\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\\n\\t\\t\\t\\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\\n\\n\\t\\t\\t\\ttrace = m11 + m22 + m33,\\n\\t\\t\\t\\ts;\\n\\n\\t\\t\\tif ( trace > 0 ) {\\n\\n\\t\\t\\t\\ts = 0.5 / Math.sqrt( trace + 1.0 );\\n\\n\\t\\t\\t\\tthis._w = 0.25 / s;\\n\\t\\t\\t\\tthis._x = ( m32 - m23 ) * s;\\n\\t\\t\\t\\tthis._y = ( m13 - m31 ) * s;\\n\\t\\t\\t\\tthis._z = ( m21 - m12 ) * s;\\n\\n\\t\\t\\t} else if ( m11 > m22 && m11 > m33 ) {\\n\\n\\t\\t\\t\\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\\n\\n\\t\\t\\t\\tthis._w = ( m32 - m23 ) / s;\\n\\t\\t\\t\\tthis._x = 0.25 * s;\\n\\t\\t\\t\\tthis._y = ( m12 + m21 ) / s;\\n\\t\\t\\t\\tthis._z = ( m13 + m31 ) / s;\\n\\n\\t\\t\\t} else if ( m22 > m33 ) {\\n\\n\\t\\t\\t\\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\\n\\n\\t\\t\\t\\tthis._w = ( m13 - m31 ) / s;\\n\\t\\t\\t\\tthis._x = ( m12 + m21 ) / s;\\n\\t\\t\\t\\tthis._y = 0.25 * s;\\n\\t\\t\\t\\tthis._z = ( m23 + m32 ) / s;\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\\n\\n\\t\\t\\t\\tthis._w = ( m21 - m12 ) / s;\\n\\t\\t\\t\\tthis._x = ( m13 + m31 ) / s;\\n\\t\\t\\t\\tthis._y = ( m23 + m32 ) / s;\\n\\t\\t\\t\\tthis._z = 0.25 * s;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.onChangeCallback();\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tsetFromUnitVectors: function () {\\n\\n\\t\\t\\t// http://lolengine.net/blog/2014/02/24/quaternion-from-two-vectors-final\\n\\n\\t\\t\\t// assumes direction vectors vFrom and vTo are normalized\\n\\n\\t\\t\\tvar v1, r;\\n\\n\\t\\t\\tvar EPS = 0.000001;\\n\\n\\t\\t\\treturn function setFromUnitVectors( vFrom, vTo ) {\\n\\n\\t\\t\\t\\tif ( v1 === undefined ) v1 = new THREE.Vector3();\\n\\n\\t\\t\\t\\tr = vFrom.dot( vTo ) + 1;\\n\\n\\t\\t\\t\\tif ( r < EPS ) {\\n\\n\\t\\t\\t\\t\\tr = 0;\\n\\n\\t\\t\\t\\t\\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\\n\\n\\t\\t\\t\\t\\t\\tv1.set( - vFrom.y, vFrom.x, 0 );\\n\\n\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\tv1.set( 0, - vFrom.z, vFrom.y );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\tv1.crossVectors( vFrom, vTo );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tthis._x = v1.x;\\n\\t\\t\\t\\tthis._y = v1.y;\\n\\t\\t\\t\\tthis._z = v1.z;\\n\\t\\t\\t\\tthis._w = r;\\n\\n\\t\\t\\t\\treturn this.normalize();\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\t\\tinverse: function () {\\n\\n\\t\\t\\treturn this.conjugate().normalize();\\n\\n\\t\\t},\\n\\n\\t\\tconjugate: function () {\\n\\n\\t\\t\\tthis._x *= - 1;\\n\\t\\t\\tthis._y *= - 1;\\n\\t\\t\\tthis._z *= - 1;\\n\\n\\t\\t\\tthis.onChangeCallback();\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tdot: function ( v ) {\\n\\n\\t\\t\\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\\n\\n\\t\\t},\\n\\n\\t\\tlengthSq: function () {\\n\\n\\t\\t\\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\\n\\n\\t\\t},\\n\\n\\t\\tlength: function () {\\n\\n\\t\\t\\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\\n\\n\\t\\t},\\n\\n\\t\\tnormalize: function () {\\n\\n\\t\\t\\tvar l = this.length();\\n\\n\\t\\t\\tif ( l === 0 ) {\\n\\n\\t\\t\\t\\tthis._x = 0;\\n\\t\\t\\t\\tthis._y = 0;\\n\\t\\t\\t\\tthis._z = 0;\\n\\t\\t\\t\\tthis._w = 1;\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\tl = 1 / l;\\n\\n\\t\\t\\t\\tthis._x = this._x * l;\\n\\t\\t\\t\\tthis._y = this._y * l;\\n\\t\\t\\t\\tthis._z = this._z * l;\\n\\t\\t\\t\\tthis._w = this._w * l;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.onChangeCallback();\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tmultiply: function ( q, p ) {\\n\\n\\t\\t\\tif ( p !== undefined ) {\\n\\n\\t\\t\\t\\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\\n\\t\\t\\t\\treturn this.multiplyQuaternions( q, p );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn this.multiplyQuaternions( this, q );\\n\\n\\t\\t},\\n\\n\\t\\tpremultiply: function ( q ) {\\n\\n\\t\\t\\treturn this.multiplyQuaternions( q, this );\\n\\n\\t\\t},\\n\\n\\t\\tmultiplyQuaternions: function ( a, b ) {\\n\\n\\t\\t\\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\\n\\n\\t\\t\\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\\n\\t\\t\\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\\n\\n\\t\\t\\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\\n\\t\\t\\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\\n\\t\\t\\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\\n\\t\\t\\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\\n\\n\\t\\t\\tthis.onChangeCallback();\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tslerp: function ( qb, t ) {\\n\\n\\t\\t\\tif ( t === 0 ) return this;\\n\\t\\t\\tif ( t === 1 ) return this.copy( qb );\\n\\n\\t\\t\\tvar x = this._x, y = this._y, z = this._z, w = this._w;\\n\\n\\t\\t\\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\\n\\n\\t\\t\\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\\n\\n\\t\\t\\tif ( cosHalfTheta < 0 ) {\\n\\n\\t\\t\\t\\tthis._w = - qb._w;\\n\\t\\t\\t\\tthis._x = - qb._x;\\n\\t\\t\\t\\tthis._y = - qb._y;\\n\\t\\t\\t\\tthis._z = - qb._z;\\n\\n\\t\\t\\t\\tcosHalfTheta = - cosHalfTheta;\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\tthis.copy( qb );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( cosHalfTheta >= 1.0 ) {\\n\\n\\t\\t\\t\\tthis._w = w;\\n\\t\\t\\t\\tthis._x = x;\\n\\t\\t\\t\\tthis._y = y;\\n\\t\\t\\t\\tthis._z = z;\\n\\n\\t\\t\\t\\treturn this;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar sinHalfTheta = Math.sqrt( 1.0 - cosHalfTheta * cosHalfTheta );\\n\\n\\t\\t\\tif ( Math.abs( sinHalfTheta ) < 0.001 ) {\\n\\n\\t\\t\\t\\tthis._w = 0.5 * ( w + this._w );\\n\\t\\t\\t\\tthis._x = 0.5 * ( x + this._x );\\n\\t\\t\\t\\tthis._y = 0.5 * ( y + this._y );\\n\\t\\t\\t\\tthis._z = 0.5 * ( z + this._z );\\n\\n\\t\\t\\t\\treturn this;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\\n\\t\\t\\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\\n\\t\\t\\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\\n\\n\\t\\t\\tthis._w = ( w * ratioA + this._w * ratioB );\\n\\t\\t\\tthis._x = ( x * ratioA + this._x * ratioB );\\n\\t\\t\\tthis._y = ( y * ratioA + this._y * ratioB );\\n\\t\\t\\tthis._z = ( z * ratioA + this._z * ratioB );\\n\\n\\t\\t\\tthis.onChangeCallback();\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tequals: function ( quaternion ) {\\n\\n\\t\\t\\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\\n\\n\\t\\t},\\n\\n\\t\\tfromArray: function ( array, offset ) {\\n\\n\\t\\t\\tif ( offset === undefined ) offset = 0;\\n\\n\\t\\t\\tthis._x = array[ offset ];\\n\\t\\t\\tthis._y = array[ offset + 1 ];\\n\\t\\t\\tthis._z = array[ offset + 2 ];\\n\\t\\t\\tthis._w = array[ offset + 3 ];\\n\\n\\t\\t\\tthis.onChangeCallback();\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\ttoArray: function ( array, offset ) {\\n\\n\\t\\t\\tif ( array === undefined ) array = [];\\n\\t\\t\\tif ( offset === undefined ) offset = 0;\\n\\n\\t\\t\\tarray[ offset ] = this._x;\\n\\t\\t\\tarray[ offset + 1 ] = this._y;\\n\\t\\t\\tarray[ offset + 2 ] = this._z;\\n\\t\\t\\tarray[ offset + 3 ] = this._w;\\n\\n\\t\\t\\treturn array;\\n\\n\\t\\t},\\n\\n\\t\\tonChange: function ( callback ) {\\n\\n\\t\\t\\tthis.onChangeCallback = callback;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tonChangeCallback: function () {}\\n\\n\\t};\\n\\n\\tObject.assign( THREE.Quaternion, {\\n\\n\\t\\tslerp: function( qa, qb, qm, t ) {\\n\\n\\t\\t\\treturn qm.copy( qa ).slerp( qb, t );\\n\\n\\t\\t},\\n\\n\\t\\tslerpFlat: function(\\n\\t\\t\\t\\tdst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\\n\\n\\t\\t\\t// fuzz-free, array-based Quaternion SLERP operation\\n\\n\\t\\t\\tvar x0 = src0[ srcOffset0 + 0 ],\\n\\t\\t\\t\\ty0 = src0[ srcOffset0 + 1 ],\\n\\t\\t\\t\\tz0 = src0[ srcOffset0 + 2 ],\\n\\t\\t\\t\\tw0 = src0[ srcOffset0 + 3 ],\\n\\n\\t\\t\\t\\tx1 = src1[ srcOffset1 + 0 ],\\n\\t\\t\\t\\ty1 = src1[ srcOffset1 + 1 ],\\n\\t\\t\\t\\tz1 = src1[ srcOffset1 + 2 ],\\n\\t\\t\\t\\tw1 = src1[ srcOffset1 + 3 ];\\n\\n\\t\\t\\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\\n\\n\\t\\t\\t\\tvar s = 1 - t,\\n\\n\\t\\t\\t\\t\\tcos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\\n\\n\\t\\t\\t\\t\\tdir = ( cos >= 0 ? 1 : - 1 ),\\n\\t\\t\\t\\t\\tsqrSin = 1 - cos * cos;\\n\\n\\t\\t\\t\\t// Skip the Slerp for tiny steps to avoid numeric problems:\\n\\t\\t\\t\\tif ( sqrSin > Number.EPSILON ) {\\n\\n\\t\\t\\t\\t\\tvar sin = Math.sqrt( sqrSin ),\\n\\t\\t\\t\\t\\t\\tlen = Math.atan2( sin, cos * dir );\\n\\n\\t\\t\\t\\t\\ts = Math.sin( s * len ) / sin;\\n\\t\\t\\t\\t\\tt = Math.sin( t * len ) / sin;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tvar tDir = t * dir;\\n\\n\\t\\t\\t\\tx0 = x0 * s + x1 * tDir;\\n\\t\\t\\t\\ty0 = y0 * s + y1 * tDir;\\n\\t\\t\\t\\tz0 = z0 * s + z1 * tDir;\\n\\t\\t\\t\\tw0 = w0 * s + w1 * tDir;\\n\\n\\t\\t\\t\\t// Normalize in case we just did a lerp:\\n\\t\\t\\t\\tif ( s === 1 - t ) {\\n\\n\\t\\t\\t\\t\\tvar f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\\n\\n\\t\\t\\t\\t\\tx0 *= f;\\n\\t\\t\\t\\t\\ty0 *= f;\\n\\t\\t\\t\\t\\tz0 *= f;\\n\\t\\t\\t\\t\\tw0 *= f;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tdst[ dstOffset ] = x0;\\n\\t\\t\\tdst[ dstOffset + 1 ] = y0;\\n\\t\\t\\tdst[ dstOffset + 2 ] = z0;\\n\\t\\t\\tdst[ dstOffset + 3 ] = w0;\\n\\n\\t\\t}\\n\\n\\t} );\\n\\n\\t// File:src/math/Vector2.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t * @author philogb / http://blog.thejit.org/\\n\\t * @author egraether / http://egraether.com/\\n\\t * @author zz85 / http://www.lab4games.net/zz85/blog\\n\\t */\\n\\n\\tTHREE.Vector2 = function ( x, y ) {\\n\\n\\t\\tthis.x = x || 0;\\n\\t\\tthis.y = y || 0;\\n\\n\\t};\\n\\n\\tTHREE.Vector2.prototype = {\\n\\n\\t\\tconstructor: THREE.Vector2,\\n\\n\\t\\tget width() {\\n\\n\\t\\t\\treturn this.x;\\n\\n\\t\\t},\\n\\n\\t\\tset width( value ) {\\n\\n\\t\\t\\tthis.x = value;\\n\\n\\t\\t},\\n\\n\\t\\tget height() {\\n\\n\\t\\t\\treturn this.y;\\n\\n\\t\\t},\\n\\n\\t\\tset height( value ) {\\n\\n\\t\\t\\tthis.y = value;\\n\\n\\t\\t},\\n\\n\\t\\t//\\n\\n\\t\\tset: function ( x, y ) {\\n\\n\\t\\t\\tthis.x = x;\\n\\t\\t\\tthis.y = y;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tsetScalar: function ( scalar ) {\\n\\n\\t\\t\\tthis.x = scalar;\\n\\t\\t\\tthis.y = scalar;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tsetX: function ( x ) {\\n\\n\\t\\t\\tthis.x = x;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tsetY: function ( y ) {\\n\\n\\t\\t\\tthis.y = y;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tsetComponent: function ( index, value ) {\\n\\n\\t\\t\\tswitch ( index ) {\\n\\n\\t\\t\\t\\tcase 0: this.x = value; break;\\n\\t\\t\\t\\tcase 1: this.y = value; break;\\n\\t\\t\\t\\tdefault: throw new Error( 'index is out of range: ' + index );\\n\\n\\t\\t\\t}\\n\\n\\t\\t},\\n\\n\\t\\tgetComponent: function ( index ) {\\n\\n\\t\\t\\tswitch ( index ) {\\n\\n\\t\\t\\t\\tcase 0: return this.x;\\n\\t\\t\\t\\tcase 1: return this.y;\\n\\t\\t\\t\\tdefault: throw new Error( 'index is out of range: ' + index );\\n\\n\\t\\t\\t}\\n\\n\\t\\t},\\n\\n\\t\\tclone: function () {\\n\\n\\t\\t\\treturn new this.constructor( this.x, this.y );\\n\\n\\t\\t},\\n\\n\\t\\tcopy: function ( v ) {\\n\\n\\t\\t\\tthis.x = v.x;\\n\\t\\t\\tthis.y = v.y;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tadd: function ( v, w ) {\\n\\n\\t\\t\\tif ( w !== undefined ) {\\n\\n\\t\\t\\t\\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\\n\\t\\t\\t\\treturn this.addVectors( v, w );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.x += v.x;\\n\\t\\t\\tthis.y += v.y;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\taddScalar: function ( s ) {\\n\\n\\t\\t\\tthis.x += s;\\n\\t\\t\\tthis.y += s;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\taddVectors: function ( a, b ) {\\n\\n\\t\\t\\tthis.x = a.x + b.x;\\n\\t\\t\\tthis.y = a.y + b.y;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\taddScaledVector: function ( v, s ) {\\n\\n\\t\\t\\tthis.x += v.x * s;\\n\\t\\t\\tthis.y += v.y * s;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tsub: function ( v, w ) {\\n\\n\\t\\t\\tif ( w !== undefined ) {\\n\\n\\t\\t\\t\\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\\n\\t\\t\\t\\treturn this.subVectors( v, w );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.x -= v.x;\\n\\t\\t\\tthis.y -= v.y;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tsubScalar: function ( s ) {\\n\\n\\t\\t\\tthis.x -= s;\\n\\t\\t\\tthis.y -= s;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tsubVectors: function ( a, b ) {\\n\\n\\t\\t\\tthis.x = a.x - b.x;\\n\\t\\t\\tthis.y = a.y - b.y;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tmultiply: function ( v ) {\\n\\n\\t\\t\\tthis.x *= v.x;\\n\\t\\t\\tthis.y *= v.y;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tmultiplyScalar: function ( scalar ) {\\n\\n\\t\\t\\tif ( isFinite( scalar ) ) {\\n\\n\\t\\t\\t\\tthis.x *= scalar;\\n\\t\\t\\t\\tthis.y *= scalar;\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\tthis.x = 0;\\n\\t\\t\\t\\tthis.y = 0;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tdivide: function ( v ) {\\n\\n\\t\\t\\tthis.x /= v.x;\\n\\t\\t\\tthis.y /= v.y;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tdivideScalar: function ( scalar ) {\\n\\n\\t\\t\\treturn this.multiplyScalar( 1 / scalar );\\n\\n\\t\\t},\\n\\n\\t\\tmin: function ( v ) {\\n\\n\\t\\t\\tthis.x = Math.min( this.x, v.x );\\n\\t\\t\\tthis.y = Math.min( this.y, v.y );\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tmax: function ( v ) {\\n\\n\\t\\t\\tthis.x = Math.max( this.x, v.x );\\n\\t\\t\\tthis.y = Math.max( this.y, v.y );\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tclamp: function ( min, max ) {\\n\\n\\t\\t\\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\\n\\n\\t\\t\\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\\n\\t\\t\\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tclampScalar: function () {\\n\\n\\t\\t\\tvar min, max;\\n\\n\\t\\t\\treturn function clampScalar( minVal, maxVal ) {\\n\\n\\t\\t\\t\\tif ( min === undefined ) {\\n\\n\\t\\t\\t\\t\\tmin = new THREE.Vector2();\\n\\t\\t\\t\\t\\tmax = new THREE.Vector2();\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tmin.set( minVal, minVal );\\n\\t\\t\\t\\tmax.set( maxVal, maxVal );\\n\\n\\t\\t\\t\\treturn this.clamp( min, max );\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\t\\tclampLength: function ( min, max ) {\\n\\n\\t\\t\\tvar length = this.length();\\n\\n\\t\\t\\treturn this.multiplyScalar( Math.max( min, Math.min( max, length ) ) / length );\\n\\n\\t\\t},\\n\\n\\t\\tfloor: function () {\\n\\n\\t\\t\\tthis.x = Math.floor( this.x );\\n\\t\\t\\tthis.y = Math.floor( this.y );\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tceil: function () {\\n\\n\\t\\t\\tthis.x = Math.ceil( this.x );\\n\\t\\t\\tthis.y = Math.ceil( this.y );\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tround: function () {\\n\\n\\t\\t\\tthis.x = Math.round( this.x );\\n\\t\\t\\tthis.y = Math.round( this.y );\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\troundToZero: function () {\\n\\n\\t\\t\\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\\n\\t\\t\\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tnegate: function () {\\n\\n\\t\\t\\tthis.x = - this.x;\\n\\t\\t\\tthis.y = - this.y;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tdot: function ( v ) {\\n\\n\\t\\t\\treturn this.x * v.x + this.y * v.y;\\n\\n\\t\\t},\\n\\n\\t\\tlengthSq: function () {\\n\\n\\t\\t\\treturn this.x * this.x + this.y * this.y;\\n\\n\\t\\t},\\n\\n\\t\\tlength: function () {\\n\\n\\t\\t\\treturn Math.sqrt( this.x * this.x + this.y * this.y );\\n\\n\\t\\t},\\n\\n\\t\\tlengthManhattan: function() {\\n\\n\\t\\t\\treturn Math.abs( this.x ) + Math.abs( this.y );\\n\\n\\t\\t},\\n\\n\\t\\tnormalize: function () {\\n\\n\\t\\t\\treturn this.divideScalar( this.length() );\\n\\n\\t\\t},\\n\\n\\t\\tangle: function () {\\n\\n\\t\\t\\t// computes the angle in radians with respect to the positive x-axis\\n\\n\\t\\t\\tvar angle = Math.atan2( this.y, this.x );\\n\\n\\t\\t\\tif ( angle < 0 ) angle += 2 * Math.PI;\\n\\n\\t\\t\\treturn angle;\\n\\n\\t\\t},\\n\\n\\t\\tdistanceTo: function ( v ) {\\n\\n\\t\\t\\treturn Math.sqrt( this.distanceToSquared( v ) );\\n\\n\\t\\t},\\n\\n\\t\\tdistanceToSquared: function ( v ) {\\n\\n\\t\\t\\tvar dx = this.x - v.x, dy = this.y - v.y;\\n\\t\\t\\treturn dx * dx + dy * dy;\\n\\n\\t\\t},\\n\\n\\t\\tdistanceToManhattan: function ( v ) {\\n\\n\\t\\t\\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\\n\\n\\t\\t},\\n\\n\\t\\tsetLength: function ( length ) {\\n\\n\\t\\t\\treturn this.multiplyScalar( length / this.length() );\\n\\n\\t\\t},\\n\\n\\t\\tlerp: function ( v, alpha ) {\\n\\n\\t\\t\\tthis.x += ( v.x - this.x ) * alpha;\\n\\t\\t\\tthis.y += ( v.y - this.y ) * alpha;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tlerpVectors: function ( v1, v2, alpha ) {\\n\\n\\t\\t\\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\\n\\n\\t\\t},\\n\\n\\t\\tequals: function ( v ) {\\n\\n\\t\\t\\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\\n\\n\\t\\t},\\n\\n\\t\\tfromArray: function ( array, offset ) {\\n\\n\\t\\t\\tif ( offset === undefined ) offset = 0;\\n\\n\\t\\t\\tthis.x = array[ offset ];\\n\\t\\t\\tthis.y = array[ offset + 1 ];\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\ttoArray: function ( array, offset ) {\\n\\n\\t\\t\\tif ( array === undefined ) array = [];\\n\\t\\t\\tif ( offset === undefined ) offset = 0;\\n\\n\\t\\t\\tarray[ offset ] = this.x;\\n\\t\\t\\tarray[ offset + 1 ] = this.y;\\n\\n\\t\\t\\treturn array;\\n\\n\\t\\t},\\n\\n\\t\\tfromAttribute: function ( attribute, index, offset ) {\\n\\n\\t\\t\\tif ( offset === undefined ) offset = 0;\\n\\n\\t\\t\\tindex = index * attribute.itemSize + offset;\\n\\n\\t\\t\\tthis.x = attribute.array[ index ];\\n\\t\\t\\tthis.y = attribute.array[ index + 1 ];\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\trotateAround: function ( center, angle ) {\\n\\n\\t\\t\\tvar c = Math.cos( angle ), s = Math.sin( angle );\\n\\n\\t\\t\\tvar x = this.x - center.x;\\n\\t\\t\\tvar y = this.y - center.y;\\n\\n\\t\\t\\tthis.x = x * c - y * s + center.x;\\n\\t\\t\\tthis.y = x * s + y * c + center.y;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\t// File:src/math/Vector3.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t * @author *kile / http://kile.stravaganza.org/\\n\\t * @author philogb / http://blog.thejit.org/\\n\\t * @author mikael emtinger / http://gomo.se/\\n\\t * @author egraether / http://egraether.com/\\n\\t * @author WestLangley / http://github.com/WestLangley\\n\\t */\\n\\n\\tTHREE.Vector3 = function ( x, y, z ) {\\n\\n\\t\\tthis.x = x || 0;\\n\\t\\tthis.y = y || 0;\\n\\t\\tthis.z = z || 0;\\n\\n\\t};\\n\\n\\tTHREE.Vector3.prototype = {\\n\\n\\t\\tconstructor: THREE.Vector3,\\n\\n\\t\\tset: function ( x, y, z ) {\\n\\n\\t\\t\\tthis.x = x;\\n\\t\\t\\tthis.y = y;\\n\\t\\t\\tthis.z = z;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tsetScalar: function ( scalar ) {\\n\\n\\t\\t\\tthis.x = scalar;\\n\\t\\t\\tthis.y = scalar;\\n\\t\\t\\tthis.z = scalar;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tsetX: function ( x ) {\\n\\n\\t\\t\\tthis.x = x;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tsetY: function ( y ) {\\n\\n\\t\\t\\tthis.y = y;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tsetZ: function ( z ) {\\n\\n\\t\\t\\tthis.z = z;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tsetComponent: function ( index, value ) {\\n\\n\\t\\t\\tswitch ( index ) {\\n\\n\\t\\t\\t\\tcase 0: this.x = value; break;\\n\\t\\t\\t\\tcase 1: this.y = value; break;\\n\\t\\t\\t\\tcase 2: this.z = value; break;\\n\\t\\t\\t\\tdefault: throw new Error( 'index is out of range: ' + index );\\n\\n\\t\\t\\t}\\n\\n\\t\\t},\\n\\n\\t\\tgetComponent: function ( index ) {\\n\\n\\t\\t\\tswitch ( index ) {\\n\\n\\t\\t\\t\\tcase 0: return this.x;\\n\\t\\t\\t\\tcase 1: return this.y;\\n\\t\\t\\t\\tcase 2: return this.z;\\n\\t\\t\\t\\tdefault: throw new Error( 'index is out of range: ' + index );\\n\\n\\t\\t\\t}\\n\\n\\t\\t},\\n\\n\\t\\tclone: function () {\\n\\n\\t\\t\\treturn new this.constructor( this.x, this.y, this.z );\\n\\n\\t\\t},\\n\\n\\t\\tcopy: function ( v ) {\\n\\n\\t\\t\\tthis.x = v.x;\\n\\t\\t\\tthis.y = v.y;\\n\\t\\t\\tthis.z = v.z;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tadd: function ( v, w ) {\\n\\n\\t\\t\\tif ( w !== undefined ) {\\n\\n\\t\\t\\t\\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\\n\\t\\t\\t\\treturn this.addVectors( v, w );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.x += v.x;\\n\\t\\t\\tthis.y += v.y;\\n\\t\\t\\tthis.z += v.z;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\taddScalar: function ( s ) {\\n\\n\\t\\t\\tthis.x += s;\\n\\t\\t\\tthis.y += s;\\n\\t\\t\\tthis.z += s;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\taddVectors: function ( a, b ) {\\n\\n\\t\\t\\tthis.x = a.x + b.x;\\n\\t\\t\\tthis.y = a.y + b.y;\\n\\t\\t\\tthis.z = a.z + b.z;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\taddScaledVector: function ( v, s ) {\\n\\n\\t\\t\\tthis.x += v.x * s;\\n\\t\\t\\tthis.y += v.y * s;\\n\\t\\t\\tthis.z += v.z * s;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tsub: function ( v, w ) {\\n\\n\\t\\t\\tif ( w !== undefined ) {\\n\\n\\t\\t\\t\\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\\n\\t\\t\\t\\treturn this.subVectors( v, w );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.x -= v.x;\\n\\t\\t\\tthis.y -= v.y;\\n\\t\\t\\tthis.z -= v.z;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tsubScalar: function ( s ) {\\n\\n\\t\\t\\tthis.x -= s;\\n\\t\\t\\tthis.y -= s;\\n\\t\\t\\tthis.z -= s;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tsubVectors: function ( a, b ) {\\n\\n\\t\\t\\tthis.x = a.x - b.x;\\n\\t\\t\\tthis.y = a.y - b.y;\\n\\t\\t\\tthis.z = a.z - b.z;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tmultiply: function ( v, w ) {\\n\\n\\t\\t\\tif ( w !== undefined ) {\\n\\n\\t\\t\\t\\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\\n\\t\\t\\t\\treturn this.multiplyVectors( v, w );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.x *= v.x;\\n\\t\\t\\tthis.y *= v.y;\\n\\t\\t\\tthis.z *= v.z;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tmultiplyScalar: function ( scalar ) {\\n\\n\\t\\t\\tif ( isFinite( scalar ) ) {\\n\\n\\t\\t\\t\\tthis.x *= scalar;\\n\\t\\t\\t\\tthis.y *= scalar;\\n\\t\\t\\t\\tthis.z *= scalar;\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\tthis.x = 0;\\n\\t\\t\\t\\tthis.y = 0;\\n\\t\\t\\t\\tthis.z = 0;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tmultiplyVectors: function ( a, b ) {\\n\\n\\t\\t\\tthis.x = a.x * b.x;\\n\\t\\t\\tthis.y = a.y * b.y;\\n\\t\\t\\tthis.z = a.z * b.z;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tapplyEuler: function () {\\n\\n\\t\\t\\tvar quaternion;\\n\\n\\t\\t\\treturn function applyEuler( euler ) {\\n\\n\\t\\t\\t\\tif ( euler instanceof THREE.Euler === false ) {\\n\\n\\t\\t\\t\\t\\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( quaternion === undefined ) quaternion = new THREE.Quaternion();\\n\\n\\t\\t\\t\\treturn this.applyQuaternion( quaternion.setFromEuler( euler ) );\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\t\\tapplyAxisAngle: function () {\\n\\n\\t\\t\\tvar quaternion;\\n\\n\\t\\t\\treturn function applyAxisAngle( axis, angle ) {\\n\\n\\t\\t\\t\\tif ( quaternion === undefined ) quaternion = new THREE.Quaternion();\\n\\n\\t\\t\\t\\treturn this.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\t\\tapplyMatrix3: function ( m ) {\\n\\n\\t\\t\\tvar x = this.x, y = this.y, z = this.z;\\n\\t\\t\\tvar e = m.elements;\\n\\n\\t\\t\\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\\n\\t\\t\\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\\n\\t\\t\\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tapplyMatrix4: function ( m ) {\\n\\n\\t\\t\\t// input: THREE.Matrix4 affine matrix\\n\\n\\t\\t\\tvar x = this.x, y = this.y, z = this.z;\\n\\t\\t\\tvar e = m.elements;\\n\\n\\t\\t\\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ];\\n\\t\\t\\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ];\\n\\t\\t\\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ];\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tapplyProjection: function ( m ) {\\n\\n\\t\\t\\t// input: THREE.Matrix4 projection matrix\\n\\n\\t\\t\\tvar x = this.x, y = this.y, z = this.z;\\n\\t\\t\\tvar e = m.elements;\\n\\t\\t\\tvar d = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] ); // perspective divide\\n\\n\\t\\t\\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ] ) * d;\\n\\t\\t\\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ] ) * d;\\n\\t\\t\\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * d;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tapplyQuaternion: function ( q ) {\\n\\n\\t\\t\\tvar x = this.x, y = this.y, z = this.z;\\n\\t\\t\\tvar qx = q.x, qy = q.y, qz = q.z, qw = q.w;\\n\\n\\t\\t\\t// calculate quat * vector\\n\\n\\t\\t\\tvar ix =  qw * x + qy * z - qz * y;\\n\\t\\t\\tvar iy =  qw * y + qz * x - qx * z;\\n\\t\\t\\tvar iz =  qw * z + qx * y - qy * x;\\n\\t\\t\\tvar iw = - qx * x - qy * y - qz * z;\\n\\n\\t\\t\\t// calculate result * inverse quat\\n\\n\\t\\t\\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\\n\\t\\t\\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\\n\\t\\t\\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tproject: function () {\\n\\n\\t\\t\\tvar matrix;\\n\\n\\t\\t\\treturn function project( camera ) {\\n\\n\\t\\t\\t\\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\\n\\n\\t\\t\\t\\tmatrix.multiplyMatrices( camera.projectionMatrix, matrix.getInverse( camera.matrixWorld ) );\\n\\t\\t\\t\\treturn this.applyProjection( matrix );\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\t\\tunproject: function () {\\n\\n\\t\\t\\tvar matrix;\\n\\n\\t\\t\\treturn function unproject( camera ) {\\n\\n\\t\\t\\t\\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\\n\\n\\t\\t\\t\\tmatrix.multiplyMatrices( camera.matrixWorld, matrix.getInverse( camera.projectionMatrix ) );\\n\\t\\t\\t\\treturn this.applyProjection( matrix );\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\t\\ttransformDirection: function ( m ) {\\n\\n\\t\\t\\t// input: THREE.Matrix4 affine matrix\\n\\t\\t\\t// vector interpreted as a direction\\n\\n\\t\\t\\tvar x = this.x, y = this.y, z = this.z;\\n\\t\\t\\tvar e = m.elements;\\n\\n\\t\\t\\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z;\\n\\t\\t\\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z;\\n\\t\\t\\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\\n\\n\\t\\t\\treturn this.normalize();\\n\\n\\t\\t},\\n\\n\\t\\tdivide: function ( v ) {\\n\\n\\t\\t\\tthis.x /= v.x;\\n\\t\\t\\tthis.y /= v.y;\\n\\t\\t\\tthis.z /= v.z;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tdivideScalar: function ( scalar ) {\\n\\n\\t\\t\\treturn this.multiplyScalar( 1 / scalar );\\n\\n\\t\\t},\\n\\n\\t\\tmin: function ( v ) {\\n\\n\\t\\t\\tthis.x = Math.min( this.x, v.x );\\n\\t\\t\\tthis.y = Math.min( this.y, v.y );\\n\\t\\t\\tthis.z = Math.min( this.z, v.z );\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tmax: function ( v ) {\\n\\n\\t\\t\\tthis.x = Math.max( this.x, v.x );\\n\\t\\t\\tthis.y = Math.max( this.y, v.y );\\n\\t\\t\\tthis.z = Math.max( this.z, v.z );\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tclamp: function ( min, max ) {\\n\\n\\t\\t\\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\\n\\n\\t\\t\\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\\n\\t\\t\\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\\n\\t\\t\\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tclampScalar: function () {\\n\\n\\t\\t\\tvar min, max;\\n\\n\\t\\t\\treturn function clampScalar( minVal, maxVal ) {\\n\\n\\t\\t\\t\\tif ( min === undefined ) {\\n\\n\\t\\t\\t\\t\\tmin = new THREE.Vector3();\\n\\t\\t\\t\\t\\tmax = new THREE.Vector3();\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tmin.set( minVal, minVal, minVal );\\n\\t\\t\\t\\tmax.set( maxVal, maxVal, maxVal );\\n\\n\\t\\t\\t\\treturn this.clamp( min, max );\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\t\\tclampLength: function ( min, max ) {\\n\\n\\t\\t\\tvar length = this.length();\\n\\n\\t\\t\\treturn this.multiplyScalar( Math.max( min, Math.min( max, length ) ) / length );\\n\\n\\t\\t},\\n\\n\\t\\tfloor: function () {\\n\\n\\t\\t\\tthis.x = Math.floor( this.x );\\n\\t\\t\\tthis.y = Math.floor( this.y );\\n\\t\\t\\tthis.z = Math.floor( this.z );\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tceil: function () {\\n\\n\\t\\t\\tthis.x = Math.ceil( this.x );\\n\\t\\t\\tthis.y = Math.ceil( this.y );\\n\\t\\t\\tthis.z = Math.ceil( this.z );\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tround: function () {\\n\\n\\t\\t\\tthis.x = Math.round( this.x );\\n\\t\\t\\tthis.y = Math.round( this.y );\\n\\t\\t\\tthis.z = Math.round( this.z );\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\troundToZero: function () {\\n\\n\\t\\t\\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\\n\\t\\t\\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\\n\\t\\t\\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tnegate: function () {\\n\\n\\t\\t\\tthis.x = - this.x;\\n\\t\\t\\tthis.y = - this.y;\\n\\t\\t\\tthis.z = - this.z;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tdot: function ( v ) {\\n\\n\\t\\t\\treturn this.x * v.x + this.y * v.y + this.z * v.z;\\n\\n\\t\\t},\\n\\n\\t\\tlengthSq: function () {\\n\\n\\t\\t\\treturn this.x * this.x + this.y * this.y + this.z * this.z;\\n\\n\\t\\t},\\n\\n\\t\\tlength: function () {\\n\\n\\t\\t\\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\\n\\n\\t\\t},\\n\\n\\t\\tlengthManhattan: function () {\\n\\n\\t\\t\\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\\n\\n\\t\\t},\\n\\n\\t\\tnormalize: function () {\\n\\n\\t\\t\\treturn this.divideScalar( this.length() );\\n\\n\\t\\t},\\n\\n\\t\\tsetLength: function ( length ) {\\n\\n\\t\\t\\treturn this.multiplyScalar( length / this.length() );\\n\\n\\t\\t},\\n\\n\\t\\tlerp: function ( v, alpha ) {\\n\\n\\t\\t\\tthis.x += ( v.x - this.x ) * alpha;\\n\\t\\t\\tthis.y += ( v.y - this.y ) * alpha;\\n\\t\\t\\tthis.z += ( v.z - this.z ) * alpha;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tlerpVectors: function ( v1, v2, alpha ) {\\n\\n\\t\\t\\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\\n\\n\\t\\t},\\n\\n\\t\\tcross: function ( v, w ) {\\n\\n\\t\\t\\tif ( w !== undefined ) {\\n\\n\\t\\t\\t\\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\\n\\t\\t\\t\\treturn this.crossVectors( v, w );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar x = this.x, y = this.y, z = this.z;\\n\\n\\t\\t\\tthis.x = y * v.z - z * v.y;\\n\\t\\t\\tthis.y = z * v.x - x * v.z;\\n\\t\\t\\tthis.z = x * v.y - y * v.x;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tcrossVectors: function ( a, b ) {\\n\\n\\t\\t\\tvar ax = a.x, ay = a.y, az = a.z;\\n\\t\\t\\tvar bx = b.x, by = b.y, bz = b.z;\\n\\n\\t\\t\\tthis.x = ay * bz - az * by;\\n\\t\\t\\tthis.y = az * bx - ax * bz;\\n\\t\\t\\tthis.z = ax * by - ay * bx;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tprojectOnVector: function ( vector ) {\\n\\n\\t\\t\\tvar scalar = vector.dot( this ) / vector.lengthSq();\\n\\t\\t\\n\\t\\t\\treturn this.copy( vector ).multiplyScalar( scalar );\\n\\t\\t\\n\\t\\t},\\n\\n\\t\\tprojectOnPlane: function () {\\n\\n\\t\\t\\tvar v1;\\n\\n\\t\\t\\treturn function projectOnPlane( planeNormal ) {\\n\\n\\t\\t\\t\\tif ( v1 === undefined ) v1 = new THREE.Vector3();\\n\\n\\t\\t\\t\\tv1.copy( this ).projectOnVector( planeNormal );\\n\\n\\t\\t\\t\\treturn this.sub( v1 );\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\t\\treflect: function () {\\n\\n\\t\\t\\t// reflect incident vector off plane orthogonal to normal\\n\\t\\t\\t// normal is assumed to have unit length\\n\\n\\t\\t\\tvar v1;\\n\\n\\t\\t\\treturn function reflect( normal ) {\\n\\n\\t\\t\\t\\tif ( v1 === undefined ) v1 = new THREE.Vector3();\\n\\n\\t\\t\\t\\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\t\\tangleTo: function ( v ) {\\n\\n\\t\\t\\tvar theta = this.dot( v ) / ( Math.sqrt( this.lengthSq() * v.lengthSq() ) );\\n\\n\\t\\t\\t// clamp, to handle numerical problems\\n\\n\\t\\t\\treturn Math.acos( THREE.Math.clamp( theta, - 1, 1 ) );\\n\\n\\t\\t},\\n\\n\\t\\tdistanceTo: function ( v ) {\\n\\n\\t\\t\\treturn Math.sqrt( this.distanceToSquared( v ) );\\n\\n\\t\\t},\\n\\n\\t\\tdistanceToSquared: function ( v ) {\\n\\n\\t\\t\\tvar dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\\n\\n\\t\\t\\treturn dx * dx + dy * dy + dz * dz;\\n\\n\\t\\t},\\n\\n\\t\\tdistanceToManhattan: function ( v ) {\\n\\n\\t\\t\\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\\n\\n\\t\\t},\\n\\n\\t\\tsetFromSpherical: function( s ) {\\n\\n\\t\\t\\tvar sinPhiRadius = Math.sin( s.phi ) * s.radius;\\n\\n\\t\\t\\tthis.x = sinPhiRadius * Math.sin( s.theta );\\n\\t\\t\\tthis.y = Math.cos( s.phi ) * s.radius;\\n\\t\\t\\tthis.z = sinPhiRadius * Math.cos( s.theta );\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tsetFromMatrixPosition: function ( m ) {\\n\\n\\t\\t\\treturn this.setFromMatrixColumn( m, 3 );\\n\\n\\t\\t},\\n\\n\\t\\tsetFromMatrixScale: function ( m ) {\\n\\n\\t\\t\\tvar sx = this.setFromMatrixColumn( m, 0 ).length();\\n\\t\\t\\tvar sy = this.setFromMatrixColumn( m, 1 ).length();\\n\\t\\t\\tvar sz = this.setFromMatrixColumn( m, 2 ).length();\\n\\n\\t\\t\\tthis.x = sx;\\n\\t\\t\\tthis.y = sy;\\n\\t\\t\\tthis.z = sz;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tsetFromMatrixColumn: function ( m, index ) {\\n\\n\\t\\t\\tif ( typeof m === 'number' ) {\\n\\n\\t\\t\\t\\tconsole.warn( 'THREE.Vector3: setFromMatrixColumn now expects ( matrix, index ).' );\\n\\t\\t\\t\\tvar temp = m\\n\\t\\t\\t\\tm = index;\\n\\t\\t\\t\\tindex = temp;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn this.fromArray( m.elements, index * 4 );\\n\\n\\t\\t},\\n\\n\\t\\tequals: function ( v ) {\\n\\n\\t\\t\\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\\n\\n\\t\\t},\\n\\n\\t\\tfromArray: function ( array, offset ) {\\n\\n\\t\\t\\tif ( offset === undefined ) offset = 0;\\n\\n\\t\\t\\tthis.x = array[ offset ];\\n\\t\\t\\tthis.y = array[ offset + 1 ];\\n\\t\\t\\tthis.z = array[ offset + 2 ];\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\ttoArray: function ( array, offset ) {\\n\\n\\t\\t\\tif ( array === undefined ) array = [];\\n\\t\\t\\tif ( offset === undefined ) offset = 0;\\n\\n\\t\\t\\tarray[ offset ] = this.x;\\n\\t\\t\\tarray[ offset + 1 ] = this.y;\\n\\t\\t\\tarray[ offset + 2 ] = this.z;\\n\\n\\t\\t\\treturn array;\\n\\n\\t\\t},\\n\\n\\t\\tfromAttribute: function ( attribute, index, offset ) {\\n\\n\\t\\t\\tif ( offset === undefined ) offset = 0;\\n\\n\\t\\t\\tindex = index * attribute.itemSize + offset;\\n\\n\\t\\t\\tthis.x = attribute.array[ index ];\\n\\t\\t\\tthis.y = attribute.array[ index + 1 ];\\n\\t\\t\\tthis.z = attribute.array[ index + 2 ];\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\t// File:src/math/Vector4.js\\n\\n\\t/**\\n\\t * @author supereggbert / http://www.paulbrunt.co.uk/\\n\\t * @author philogb / http://blog.thejit.org/\\n\\t * @author mikael emtinger / http://gomo.se/\\n\\t * @author egraether / http://egraether.com/\\n\\t * @author WestLangley / http://github.com/WestLangley\\n\\t */\\n\\n\\tTHREE.Vector4 = function ( x, y, z, w ) {\\n\\n\\t\\tthis.x = x || 0;\\n\\t\\tthis.y = y || 0;\\n\\t\\tthis.z = z || 0;\\n\\t\\tthis.w = ( w !== undefined ) ? w : 1;\\n\\n\\t};\\n\\n\\tTHREE.Vector4.prototype = {\\n\\n\\t\\tconstructor: THREE.Vector4,\\n\\n\\t\\tset: function ( x, y, z, w ) {\\n\\n\\t\\t\\tthis.x = x;\\n\\t\\t\\tthis.y = y;\\n\\t\\t\\tthis.z = z;\\n\\t\\t\\tthis.w = w;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tsetScalar: function ( scalar ) {\\n\\n\\t\\t\\tthis.x = scalar;\\n\\t\\t\\tthis.y = scalar;\\n\\t\\t\\tthis.z = scalar;\\n\\t\\t\\tthis.w = scalar;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tsetX: function ( x ) {\\n\\n\\t\\t\\tthis.x = x;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tsetY: function ( y ) {\\n\\n\\t\\t\\tthis.y = y;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tsetZ: function ( z ) {\\n\\n\\t\\t\\tthis.z = z;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tsetW: function ( w ) {\\n\\n\\t\\t\\tthis.w = w;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tsetComponent: function ( index, value ) {\\n\\n\\t\\t\\tswitch ( index ) {\\n\\n\\t\\t\\t\\tcase 0: this.x = value; break;\\n\\t\\t\\t\\tcase 1: this.y = value; break;\\n\\t\\t\\t\\tcase 2: this.z = value; break;\\n\\t\\t\\t\\tcase 3: this.w = value; break;\\n\\t\\t\\t\\tdefault: throw new Error( 'index is out of range: ' + index );\\n\\n\\t\\t\\t}\\n\\n\\t\\t},\\n\\n\\t\\tgetComponent: function ( index ) {\\n\\n\\t\\t\\tswitch ( index ) {\\n\\n\\t\\t\\t\\tcase 0: return this.x;\\n\\t\\t\\t\\tcase 1: return this.y;\\n\\t\\t\\t\\tcase 2: return this.z;\\n\\t\\t\\t\\tcase 3: return this.w;\\n\\t\\t\\t\\tdefault: throw new Error( 'index is out of range: ' + index );\\n\\n\\t\\t\\t}\\n\\n\\t\\t},\\n\\n\\t\\tclone: function () {\\n\\n\\t\\t\\treturn new this.constructor( this.x, this.y, this.z, this.w );\\n\\n\\t\\t},\\n\\n\\t\\tcopy: function ( v ) {\\n\\n\\t\\t\\tthis.x = v.x;\\n\\t\\t\\tthis.y = v.y;\\n\\t\\t\\tthis.z = v.z;\\n\\t\\t\\tthis.w = ( v.w !== undefined ) ? v.w : 1;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tadd: function ( v, w ) {\\n\\n\\t\\t\\tif ( w !== undefined ) {\\n\\n\\t\\t\\t\\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\\n\\t\\t\\t\\treturn this.addVectors( v, w );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.x += v.x;\\n\\t\\t\\tthis.y += v.y;\\n\\t\\t\\tthis.z += v.z;\\n\\t\\t\\tthis.w += v.w;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\taddScalar: function ( s ) {\\n\\n\\t\\t\\tthis.x += s;\\n\\t\\t\\tthis.y += s;\\n\\t\\t\\tthis.z += s;\\n\\t\\t\\tthis.w += s;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\taddVectors: function ( a, b ) {\\n\\n\\t\\t\\tthis.x = a.x + b.x;\\n\\t\\t\\tthis.y = a.y + b.y;\\n\\t\\t\\tthis.z = a.z + b.z;\\n\\t\\t\\tthis.w = a.w + b.w;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\taddScaledVector: function ( v, s ) {\\n\\n\\t\\t\\tthis.x += v.x * s;\\n\\t\\t\\tthis.y += v.y * s;\\n\\t\\t\\tthis.z += v.z * s;\\n\\t\\t\\tthis.w += v.w * s;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tsub: function ( v, w ) {\\n\\n\\t\\t\\tif ( w !== undefined ) {\\n\\n\\t\\t\\t\\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\\n\\t\\t\\t\\treturn this.subVectors( v, w );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.x -= v.x;\\n\\t\\t\\tthis.y -= v.y;\\n\\t\\t\\tthis.z -= v.z;\\n\\t\\t\\tthis.w -= v.w;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tsubScalar: function ( s ) {\\n\\n\\t\\t\\tthis.x -= s;\\n\\t\\t\\tthis.y -= s;\\n\\t\\t\\tthis.z -= s;\\n\\t\\t\\tthis.w -= s;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tsubVectors: function ( a, b ) {\\n\\n\\t\\t\\tthis.x = a.x - b.x;\\n\\t\\t\\tthis.y = a.y - b.y;\\n\\t\\t\\tthis.z = a.z - b.z;\\n\\t\\t\\tthis.w = a.w - b.w;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tmultiplyScalar: function ( scalar ) {\\n\\n\\t\\t\\tif ( isFinite( scalar ) ) {\\n\\n\\t\\t\\t\\tthis.x *= scalar;\\n\\t\\t\\t\\tthis.y *= scalar;\\n\\t\\t\\t\\tthis.z *= scalar;\\n\\t\\t\\t\\tthis.w *= scalar;\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\tthis.x = 0;\\n\\t\\t\\t\\tthis.y = 0;\\n\\t\\t\\t\\tthis.z = 0;\\n\\t\\t\\t\\tthis.w = 0;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tapplyMatrix4: function ( m ) {\\n\\n\\t\\t\\tvar x = this.x, y = this.y, z = this.z, w = this.w;\\n\\t\\t\\tvar e = m.elements;\\n\\n\\t\\t\\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\\n\\t\\t\\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\\n\\t\\t\\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\\n\\t\\t\\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tdivideScalar: function ( scalar ) {\\n\\n\\t\\t\\treturn this.multiplyScalar( 1 / scalar );\\n\\n\\t\\t},\\n\\n\\t\\tsetAxisAngleFromQuaternion: function ( q ) {\\n\\n\\t\\t\\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\\n\\n\\t\\t\\t// q is assumed to be normalized\\n\\n\\t\\t\\tthis.w = 2 * Math.acos( q.w );\\n\\n\\t\\t\\tvar s = Math.sqrt( 1 - q.w * q.w );\\n\\n\\t\\t\\tif ( s < 0.0001 ) {\\n\\n\\t\\t\\t\\t this.x = 1;\\n\\t\\t\\t\\t this.y = 0;\\n\\t\\t\\t\\t this.z = 0;\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t this.x = q.x / s;\\n\\t\\t\\t\\t this.y = q.y / s;\\n\\t\\t\\t\\t this.z = q.z / s;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tsetAxisAngleFromRotationMatrix: function ( m ) {\\n\\n\\t\\t\\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\\n\\n\\t\\t\\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\\n\\n\\t\\t\\tvar angle, x, y, z,\\t\\t// variables for result\\n\\t\\t\\t\\tepsilon = 0.01,\\t\\t// margin to allow for rounding errors\\n\\t\\t\\t\\tepsilon2 = 0.1,\\t\\t// margin to distinguish between 0 and 180 degrees\\n\\n\\t\\t\\t\\tte = m.elements,\\n\\n\\t\\t\\t\\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\\n\\t\\t\\t\\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\\n\\t\\t\\t\\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\\n\\n\\t\\t\\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\\n\\t\\t\\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\\n\\t\\t\\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\\n\\n\\t\\t\\t\\t// singularity found\\n\\t\\t\\t\\t// first check for identity matrix which must have +1 for all terms\\n\\t\\t\\t\\t// in leading diagonal and zero in other terms\\n\\n\\t\\t\\t\\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\\n\\t\\t\\t\\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\\n\\t\\t\\t\\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\\n\\t\\t\\t\\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\\n\\n\\t\\t\\t\\t\\t// this singularity is identity matrix so angle = 0\\n\\n\\t\\t\\t\\t\\tthis.set( 1, 0, 0, 0 );\\n\\n\\t\\t\\t\\t\\treturn this; // zero angle, arbitrary axis\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// otherwise this singularity is angle = 180\\n\\n\\t\\t\\t\\tangle = Math.PI;\\n\\n\\t\\t\\t\\tvar xx = ( m11 + 1 ) / 2;\\n\\t\\t\\t\\tvar yy = ( m22 + 1 ) / 2;\\n\\t\\t\\t\\tvar zz = ( m33 + 1 ) / 2;\\n\\t\\t\\t\\tvar xy = ( m12 + m21 ) / 4;\\n\\t\\t\\t\\tvar xz = ( m13 + m31 ) / 4;\\n\\t\\t\\t\\tvar yz = ( m23 + m32 ) / 4;\\n\\n\\t\\t\\t\\tif ( ( xx > yy ) && ( xx > zz ) ) {\\n\\n\\t\\t\\t\\t\\t// m11 is the largest diagonal term\\n\\n\\t\\t\\t\\t\\tif ( xx < epsilon ) {\\n\\n\\t\\t\\t\\t\\t\\tx = 0;\\n\\t\\t\\t\\t\\t\\ty = 0.707106781;\\n\\t\\t\\t\\t\\t\\tz = 0.707106781;\\n\\n\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\tx = Math.sqrt( xx );\\n\\t\\t\\t\\t\\t\\ty = xy / x;\\n\\t\\t\\t\\t\\t\\tz = xz / x;\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t} else if ( yy > zz ) {\\n\\n\\t\\t\\t\\t\\t// m22 is the largest diagonal term\\n\\n\\t\\t\\t\\t\\tif ( yy < epsilon ) {\\n\\n\\t\\t\\t\\t\\t\\tx = 0.707106781;\\n\\t\\t\\t\\t\\t\\ty = 0;\\n\\t\\t\\t\\t\\t\\tz = 0.707106781;\\n\\n\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\ty = Math.sqrt( yy );\\n\\t\\t\\t\\t\\t\\tx = xy / y;\\n\\t\\t\\t\\t\\t\\tz = yz / y;\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t// m33 is the largest diagonal term so base result on this\\n\\n\\t\\t\\t\\t\\tif ( zz < epsilon ) {\\n\\n\\t\\t\\t\\t\\t\\tx = 0.707106781;\\n\\t\\t\\t\\t\\t\\ty = 0.707106781;\\n\\t\\t\\t\\t\\t\\tz = 0;\\n\\n\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\tz = Math.sqrt( zz );\\n\\t\\t\\t\\t\\t\\tx = xz / z;\\n\\t\\t\\t\\t\\t\\ty = yz / z;\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tthis.set( x, y, z, angle );\\n\\n\\t\\t\\t\\treturn this; // return 180 deg rotation\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t// as we have reached here there are no singularities so we can handle normally\\n\\n\\t\\t\\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\\n\\t\\t\\t                   ( m13 - m31 ) * ( m13 - m31 ) +\\n\\t\\t\\t                   ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\\n\\n\\t\\t\\tif ( Math.abs( s ) < 0.001 ) s = 1;\\n\\n\\t\\t\\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\\n\\t\\t\\t// caught by singularity test above, but I've left it in just in case\\n\\n\\t\\t\\tthis.x = ( m32 - m23 ) / s;\\n\\t\\t\\tthis.y = ( m13 - m31 ) / s;\\n\\t\\t\\tthis.z = ( m21 - m12 ) / s;\\n\\t\\t\\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tmin: function ( v ) {\\n\\n\\t\\t\\tthis.x = Math.min( this.x, v.x );\\n\\t\\t\\tthis.y = Math.min( this.y, v.y );\\n\\t\\t\\tthis.z = Math.min( this.z, v.z );\\n\\t\\t\\tthis.w = Math.min( this.w, v.w );\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tmax: function ( v ) {\\n\\n\\t\\t\\tthis.x = Math.max( this.x, v.x );\\n\\t\\t\\tthis.y = Math.max( this.y, v.y );\\n\\t\\t\\tthis.z = Math.max( this.z, v.z );\\n\\t\\t\\tthis.w = Math.max( this.w, v.w );\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tclamp: function ( min, max ) {\\n\\n\\t\\t\\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\\n\\n\\t\\t\\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\\n\\t\\t\\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\\n\\t\\t\\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\\n\\t\\t\\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tclampScalar: function () {\\n\\n\\t\\t\\tvar min, max;\\n\\n\\t\\t\\treturn function clampScalar( minVal, maxVal ) {\\n\\n\\t\\t\\t\\tif ( min === undefined ) {\\n\\n\\t\\t\\t\\t\\tmin = new THREE.Vector4();\\n\\t\\t\\t\\t\\tmax = new THREE.Vector4();\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tmin.set( minVal, minVal, minVal, minVal );\\n\\t\\t\\t\\tmax.set( maxVal, maxVal, maxVal, maxVal );\\n\\n\\t\\t\\t\\treturn this.clamp( min, max );\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\t\\tfloor: function () {\\n\\n\\t\\t\\tthis.x = Math.floor( this.x );\\n\\t\\t\\tthis.y = Math.floor( this.y );\\n\\t\\t\\tthis.z = Math.floor( this.z );\\n\\t\\t\\tthis.w = Math.floor( this.w );\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tceil: function () {\\n\\n\\t\\t\\tthis.x = Math.ceil( this.x );\\n\\t\\t\\tthis.y = Math.ceil( this.y );\\n\\t\\t\\tthis.z = Math.ceil( this.z );\\n\\t\\t\\tthis.w = Math.ceil( this.w );\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tround: function () {\\n\\n\\t\\t\\tthis.x = Math.round( this.x );\\n\\t\\t\\tthis.y = Math.round( this.y );\\n\\t\\t\\tthis.z = Math.round( this.z );\\n\\t\\t\\tthis.w = Math.round( this.w );\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\troundToZero: function () {\\n\\n\\t\\t\\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\\n\\t\\t\\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\\n\\t\\t\\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\\n\\t\\t\\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tnegate: function () {\\n\\n\\t\\t\\tthis.x = - this.x;\\n\\t\\t\\tthis.y = - this.y;\\n\\t\\t\\tthis.z = - this.z;\\n\\t\\t\\tthis.w = - this.w;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tdot: function ( v ) {\\n\\n\\t\\t\\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\\n\\n\\t\\t},\\n\\n\\t\\tlengthSq: function () {\\n\\n\\t\\t\\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\\n\\n\\t\\t},\\n\\n\\t\\tlength: function () {\\n\\n\\t\\t\\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\\n\\n\\t\\t},\\n\\n\\t\\tlengthManhattan: function () {\\n\\n\\t\\t\\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\\n\\n\\t\\t},\\n\\n\\t\\tnormalize: function () {\\n\\n\\t\\t\\treturn this.divideScalar( this.length() );\\n\\n\\t\\t},\\n\\n\\t\\tsetLength: function ( length ) {\\n\\n\\t\\t\\treturn this.multiplyScalar( length / this.length() );\\n\\n\\t\\t},\\n\\n\\t\\tlerp: function ( v, alpha ) {\\n\\n\\t\\t\\tthis.x += ( v.x - this.x ) * alpha;\\n\\t\\t\\tthis.y += ( v.y - this.y ) * alpha;\\n\\t\\t\\tthis.z += ( v.z - this.z ) * alpha;\\n\\t\\t\\tthis.w += ( v.w - this.w ) * alpha;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tlerpVectors: function ( v1, v2, alpha ) {\\n\\n\\t\\t\\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\\n\\n\\t\\t},\\n\\n\\t\\tequals: function ( v ) {\\n\\n\\t\\t\\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\\n\\n\\t\\t},\\n\\n\\t\\tfromArray: function ( array, offset ) {\\n\\n\\t\\t\\tif ( offset === undefined ) offset = 0;\\n\\n\\t\\t\\tthis.x = array[ offset ];\\n\\t\\t\\tthis.y = array[ offset + 1 ];\\n\\t\\t\\tthis.z = array[ offset + 2 ];\\n\\t\\t\\tthis.w = array[ offset + 3 ];\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\ttoArray: function ( array, offset ) {\\n\\n\\t\\t\\tif ( array === undefined ) array = [];\\n\\t\\t\\tif ( offset === undefined ) offset = 0;\\n\\n\\t\\t\\tarray[ offset ] = this.x;\\n\\t\\t\\tarray[ offset + 1 ] = this.y;\\n\\t\\t\\tarray[ offset + 2 ] = this.z;\\n\\t\\t\\tarray[ offset + 3 ] = this.w;\\n\\n\\t\\t\\treturn array;\\n\\n\\t\\t},\\n\\n\\t\\tfromAttribute: function ( attribute, index, offset ) {\\n\\n\\t\\t\\tif ( offset === undefined ) offset = 0;\\n\\n\\t\\t\\tindex = index * attribute.itemSize + offset;\\n\\n\\t\\t\\tthis.x = attribute.array[ index ];\\n\\t\\t\\tthis.y = attribute.array[ index + 1 ];\\n\\t\\t\\tthis.z = attribute.array[ index + 2 ];\\n\\t\\t\\tthis.w = attribute.array[ index + 3 ];\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\t// File:src/math/Euler.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t * @author WestLangley / http://github.com/WestLangley\\n\\t * @author bhouston / http://clara.io\\n\\t */\\n\\n\\tTHREE.Euler = function ( x, y, z, order ) {\\n\\n\\t\\tthis._x = x || 0;\\n\\t\\tthis._y = y || 0;\\n\\t\\tthis._z = z || 0;\\n\\t\\tthis._order = order || THREE.Euler.DefaultOrder;\\n\\n\\t};\\n\\n\\tTHREE.Euler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\\n\\n\\tTHREE.Euler.DefaultOrder = 'XYZ';\\n\\n\\tTHREE.Euler.prototype = {\\n\\n\\t\\tconstructor: THREE.Euler,\\n\\n\\t\\tget x () {\\n\\n\\t\\t\\treturn this._x;\\n\\n\\t\\t},\\n\\n\\t\\tset x ( value ) {\\n\\n\\t\\t\\tthis._x = value;\\n\\t\\t\\tthis.onChangeCallback();\\n\\n\\t\\t},\\n\\n\\t\\tget y () {\\n\\n\\t\\t\\treturn this._y;\\n\\n\\t\\t},\\n\\n\\t\\tset y ( value ) {\\n\\n\\t\\t\\tthis._y = value;\\n\\t\\t\\tthis.onChangeCallback();\\n\\n\\t\\t},\\n\\n\\t\\tget z () {\\n\\n\\t\\t\\treturn this._z;\\n\\n\\t\\t},\\n\\n\\t\\tset z ( value ) {\\n\\n\\t\\t\\tthis._z = value;\\n\\t\\t\\tthis.onChangeCallback();\\n\\n\\t\\t},\\n\\n\\t\\tget order () {\\n\\n\\t\\t\\treturn this._order;\\n\\n\\t\\t},\\n\\n\\t\\tset order ( value ) {\\n\\n\\t\\t\\tthis._order = value;\\n\\t\\t\\tthis.onChangeCallback();\\n\\n\\t\\t},\\n\\n\\t\\tset: function ( x, y, z, order ) {\\n\\n\\t\\t\\tthis._x = x;\\n\\t\\t\\tthis._y = y;\\n\\t\\t\\tthis._z = z;\\n\\t\\t\\tthis._order = order || this._order;\\n\\n\\t\\t\\tthis.onChangeCallback();\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tclone: function () {\\n\\n\\t\\t\\treturn new this.constructor( this._x, this._y, this._z, this._order );\\n\\n\\t\\t},\\n\\n\\t\\tcopy: function ( euler ) {\\n\\n\\t\\t\\tthis._x = euler._x;\\n\\t\\t\\tthis._y = euler._y;\\n\\t\\t\\tthis._z = euler._z;\\n\\t\\t\\tthis._order = euler._order;\\n\\n\\t\\t\\tthis.onChangeCallback();\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tsetFromRotationMatrix: function ( m, order, update ) {\\n\\n\\t\\t\\tvar clamp = THREE.Math.clamp;\\n\\n\\t\\t\\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\\n\\n\\t\\t\\tvar te = m.elements;\\n\\t\\t\\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\\n\\t\\t\\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\\n\\t\\t\\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\\n\\n\\t\\t\\torder = order || this._order;\\n\\n\\t\\t\\tif ( order === 'XYZ' ) {\\n\\n\\t\\t\\t\\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\\n\\n\\t\\t\\t\\tif ( Math.abs( m13 ) < 0.99999 ) {\\n\\n\\t\\t\\t\\t\\tthis._x = Math.atan2( - m23, m33 );\\n\\t\\t\\t\\t\\tthis._z = Math.atan2( - m12, m11 );\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\tthis._x = Math.atan2( m32, m22 );\\n\\t\\t\\t\\t\\tthis._z = 0;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t} else if ( order === 'YXZ' ) {\\n\\n\\t\\t\\t\\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\\n\\n\\t\\t\\t\\tif ( Math.abs( m23 ) < 0.99999 ) {\\n\\n\\t\\t\\t\\t\\tthis._y = Math.atan2( m13, m33 );\\n\\t\\t\\t\\t\\tthis._z = Math.atan2( m21, m22 );\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\tthis._y = Math.atan2( - m31, m11 );\\n\\t\\t\\t\\t\\tthis._z = 0;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t} else if ( order === 'ZXY' ) {\\n\\n\\t\\t\\t\\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\\n\\n\\t\\t\\t\\tif ( Math.abs( m32 ) < 0.99999 ) {\\n\\n\\t\\t\\t\\t\\tthis._y = Math.atan2( - m31, m33 );\\n\\t\\t\\t\\t\\tthis._z = Math.atan2( - m12, m22 );\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\tthis._y = 0;\\n\\t\\t\\t\\t\\tthis._z = Math.atan2( m21, m11 );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t} else if ( order === 'ZYX' ) {\\n\\n\\t\\t\\t\\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\\n\\n\\t\\t\\t\\tif ( Math.abs( m31 ) < 0.99999 ) {\\n\\n\\t\\t\\t\\t\\tthis._x = Math.atan2( m32, m33 );\\n\\t\\t\\t\\t\\tthis._z = Math.atan2( m21, m11 );\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\tthis._x = 0;\\n\\t\\t\\t\\t\\tthis._z = Math.atan2( - m12, m22 );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t} else if ( order === 'YZX' ) {\\n\\n\\t\\t\\t\\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\\n\\n\\t\\t\\t\\tif ( Math.abs( m21 ) < 0.99999 ) {\\n\\n\\t\\t\\t\\t\\tthis._x = Math.atan2( - m23, m22 );\\n\\t\\t\\t\\t\\tthis._y = Math.atan2( - m31, m11 );\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\tthis._x = 0;\\n\\t\\t\\t\\t\\tthis._y = Math.atan2( m13, m33 );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t} else if ( order === 'XZY' ) {\\n\\n\\t\\t\\t\\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\\n\\n\\t\\t\\t\\tif ( Math.abs( m12 ) < 0.99999 ) {\\n\\n\\t\\t\\t\\t\\tthis._x = Math.atan2( m32, m22 );\\n\\t\\t\\t\\t\\tthis._y = Math.atan2( m13, m11 );\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\tthis._x = Math.atan2( - m23, m33 );\\n\\t\\t\\t\\t\\tthis._y = 0;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis._order = order;\\n\\n\\t\\t\\tif ( update !== false ) this.onChangeCallback();\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tsetFromQuaternion: function () {\\n\\n\\t\\t\\tvar matrix;\\n\\n\\t\\t\\treturn function setFromQuaternion( q, order, update ) {\\n\\n\\t\\t\\t\\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\\n\\n\\t\\t\\t\\tmatrix.makeRotationFromQuaternion( q );\\n\\n\\t\\t\\t\\treturn this.setFromRotationMatrix( matrix, order, update );\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\t\\tsetFromVector3: function ( v, order ) {\\n\\n\\t\\t\\treturn this.set( v.x, v.y, v.z, order || this._order );\\n\\n\\t\\t},\\n\\n\\t\\treorder: function () {\\n\\n\\t\\t\\t// WARNING: this discards revolution information -bhouston\\n\\n\\t\\t\\tvar q = new THREE.Quaternion();\\n\\n\\t\\t\\treturn function reorder( newOrder ) {\\n\\n\\t\\t\\t\\tq.setFromEuler( this );\\n\\t\\t\\t\\t\\n\\t\\t\\t\\treturn this.setFromQuaternion( q, newOrder );\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\t\\tequals: function ( euler ) {\\n\\n\\t\\t\\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\\n\\n\\t\\t},\\n\\n\\t\\tfromArray: function ( array ) {\\n\\n\\t\\t\\tthis._x = array[ 0 ];\\n\\t\\t\\tthis._y = array[ 1 ];\\n\\t\\t\\tthis._z = array[ 2 ];\\n\\t\\t\\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\\n\\n\\t\\t\\tthis.onChangeCallback();\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\ttoArray: function ( array, offset ) {\\n\\n\\t\\t\\tif ( array === undefined ) array = [];\\n\\t\\t\\tif ( offset === undefined ) offset = 0;\\n\\n\\t\\t\\tarray[ offset ] = this._x;\\n\\t\\t\\tarray[ offset + 1 ] = this._y;\\n\\t\\t\\tarray[ offset + 2 ] = this._z;\\n\\t\\t\\tarray[ offset + 3 ] = this._order;\\n\\n\\t\\t\\treturn array;\\n\\n\\t\\t},\\n\\n\\t\\ttoVector3: function ( optionalResult ) {\\n\\n\\t\\t\\tif ( optionalResult ) {\\n\\n\\t\\t\\t\\treturn optionalResult.set( this._x, this._y, this._z );\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\treturn new THREE.Vector3( this._x, this._y, this._z );\\n\\n\\t\\t\\t}\\n\\n\\t\\t},\\n\\n\\t\\tonChange: function ( callback ) {\\n\\n\\t\\t\\tthis.onChangeCallback = callback;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tonChangeCallback: function () {}\\n\\n\\t};\\n\\n\\t// File:src/math/Line3.js\\n\\n\\t/**\\n\\t * @author bhouston / http://clara.io\\n\\t */\\n\\n\\tTHREE.Line3 = function ( start, end ) {\\n\\n\\t\\tthis.start = ( start !== undefined ) ? start : new THREE.Vector3();\\n\\t\\tthis.end = ( end !== undefined ) ? end : new THREE.Vector3();\\n\\n\\t};\\n\\n\\tTHREE.Line3.prototype = {\\n\\n\\t\\tconstructor: THREE.Line3,\\n\\n\\t\\tset: function ( start, end ) {\\n\\n\\t\\t\\tthis.start.copy( start );\\n\\t\\t\\tthis.end.copy( end );\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tclone: function () {\\n\\n\\t\\t\\treturn new this.constructor().copy( this );\\n\\n\\t\\t},\\n\\n\\t\\tcopy: function ( line ) {\\n\\n\\t\\t\\tthis.start.copy( line.start );\\n\\t\\t\\tthis.end.copy( line.end );\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tcenter: function ( optionalTarget ) {\\n\\n\\t\\t\\tvar result = optionalTarget || new THREE.Vector3();\\n\\t\\t\\treturn result.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\\n\\n\\t\\t},\\n\\n\\t\\tdelta: function ( optionalTarget ) {\\n\\n\\t\\t\\tvar result = optionalTarget || new THREE.Vector3();\\n\\t\\t\\treturn result.subVectors( this.end, this.start );\\n\\n\\t\\t},\\n\\n\\t\\tdistanceSq: function () {\\n\\n\\t\\t\\treturn this.start.distanceToSquared( this.end );\\n\\n\\t\\t},\\n\\n\\t\\tdistance: function () {\\n\\n\\t\\t\\treturn this.start.distanceTo( this.end );\\n\\n\\t\\t},\\n\\n\\t\\tat: function ( t, optionalTarget ) {\\n\\n\\t\\t\\tvar result = optionalTarget || new THREE.Vector3();\\n\\n\\t\\t\\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\\n\\n\\t\\t},\\n\\n\\t\\tclosestPointToPointParameter: function () {\\n\\n\\t\\t\\tvar startP = new THREE.Vector3();\\n\\t\\t\\tvar startEnd = new THREE.Vector3();\\n\\n\\t\\t\\treturn function closestPointToPointParameter( point, clampToLine ) {\\n\\n\\t\\t\\t\\tstartP.subVectors( point, this.start );\\n\\t\\t\\t\\tstartEnd.subVectors( this.end, this.start );\\n\\n\\t\\t\\t\\tvar startEnd2 = startEnd.dot( startEnd );\\n\\t\\t\\t\\tvar startEnd_startP = startEnd.dot( startP );\\n\\n\\t\\t\\t\\tvar t = startEnd_startP / startEnd2;\\n\\n\\t\\t\\t\\tif ( clampToLine ) {\\n\\n\\t\\t\\t\\t\\tt = THREE.Math.clamp( t, 0, 1 );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn t;\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\t\\tclosestPointToPoint: function ( point, clampToLine, optionalTarget ) {\\n\\n\\t\\t\\tvar t = this.closestPointToPointParameter( point, clampToLine );\\n\\n\\t\\t\\tvar result = optionalTarget || new THREE.Vector3();\\n\\n\\t\\t\\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\\n\\n\\t\\t},\\n\\n\\t\\tapplyMatrix4: function ( matrix ) {\\n\\n\\t\\t\\tthis.start.applyMatrix4( matrix );\\n\\t\\t\\tthis.end.applyMatrix4( matrix );\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tequals: function ( line ) {\\n\\n\\t\\t\\treturn line.start.equals( this.start ) && line.end.equals( this.end );\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\t// File:src/math/Box2.js\\n\\n\\t/**\\n\\t * @author bhouston / http://clara.io\\n\\t */\\n\\n\\tTHREE.Box2 = function ( min, max ) {\\n\\n\\t\\tthis.min = ( min !== undefined ) ? min : new THREE.Vector2( + Infinity, + Infinity );\\n\\t\\tthis.max = ( max !== undefined ) ? max : new THREE.Vector2( - Infinity, - Infinity );\\n\\n\\t};\\n\\n\\tTHREE.Box2.prototype = {\\n\\n\\t\\tconstructor: THREE.Box2,\\n\\n\\t\\tset: function ( min, max ) {\\n\\n\\t\\t\\tthis.min.copy( min );\\n\\t\\t\\tthis.max.copy( max );\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tsetFromPoints: function ( points ) {\\n\\n\\t\\t\\tthis.makeEmpty();\\n\\n\\t\\t\\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\\n\\n\\t\\t\\t\\tthis.expandByPoint( points[ i ] );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tsetFromCenterAndSize: function () {\\n\\n\\t\\t\\tvar v1 = new THREE.Vector2();\\n\\n\\t\\t\\treturn function setFromCenterAndSize( center, size ) {\\n\\n\\t\\t\\t\\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\\n\\t\\t\\t\\tthis.min.copy( center ).sub( halfSize );\\n\\t\\t\\t\\tthis.max.copy( center ).add( halfSize );\\n\\n\\t\\t\\t\\treturn this;\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\t\\tclone: function () {\\n\\n\\t\\t\\treturn new this.constructor().copy( this );\\n\\n\\t\\t},\\n\\n\\t\\tcopy: function ( box ) {\\n\\n\\t\\t\\tthis.min.copy( box.min );\\n\\t\\t\\tthis.max.copy( box.max );\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tmakeEmpty: function () {\\n\\n\\t\\t\\tthis.min.x = this.min.y = + Infinity;\\n\\t\\t\\tthis.max.x = this.max.y = - Infinity;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tisEmpty: function () {\\n\\n\\t\\t\\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\\n\\n\\t\\t\\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\\n\\n\\t\\t},\\n\\n\\t\\tcenter: function ( optionalTarget ) {\\n\\n\\t\\t\\tvar result = optionalTarget || new THREE.Vector2();\\n\\t\\t\\treturn result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\\n\\n\\t\\t},\\n\\n\\t\\tsize: function ( optionalTarget ) {\\n\\n\\t\\t\\tvar result = optionalTarget || new THREE.Vector2();\\n\\t\\t\\treturn result.subVectors( this.max, this.min );\\n\\n\\t\\t},\\n\\n\\t\\texpandByPoint: function ( point ) {\\n\\n\\t\\t\\tthis.min.min( point );\\n\\t\\t\\tthis.max.max( point );\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\texpandByVector: function ( vector ) {\\n\\n\\t\\t\\tthis.min.sub( vector );\\n\\t\\t\\tthis.max.add( vector );\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\texpandByScalar: function ( scalar ) {\\n\\n\\t\\t\\tthis.min.addScalar( - scalar );\\n\\t\\t\\tthis.max.addScalar( scalar );\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tcontainsPoint: function ( point ) {\\n\\n\\t\\t\\tif ( point.x < this.min.x || point.x > this.max.x ||\\n\\t\\t\\t     point.y < this.min.y || point.y > this.max.y ) {\\n\\n\\t\\t\\t\\treturn false;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn true;\\n\\n\\t\\t},\\n\\n\\t\\tcontainsBox: function ( box ) {\\n\\n\\t\\t\\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\\n\\t\\t\\t     ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) ) {\\n\\n\\t\\t\\t\\treturn true;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn false;\\n\\n\\t\\t},\\n\\n\\t\\tgetParameter: function ( point, optionalTarget ) {\\n\\n\\t\\t\\t// This can potentially have a divide by zero if the box\\n\\t\\t\\t// has a size dimension of 0.\\n\\n\\t\\t\\tvar result = optionalTarget || new THREE.Vector2();\\n\\n\\t\\t\\treturn result.set(\\n\\t\\t\\t\\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\\n\\t\\t\\t\\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\\n\\t\\t\\t);\\n\\n\\t\\t},\\n\\n\\t\\tintersectsBox: function ( box ) {\\n\\n\\t\\t\\t// using 6 splitting planes to rule out intersections.\\n\\n\\t\\t\\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\\n\\t\\t\\t     box.max.y < this.min.y || box.min.y > this.max.y ) {\\n\\n\\t\\t\\t\\treturn false;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn true;\\n\\n\\t\\t},\\n\\n\\t\\tclampPoint: function ( point, optionalTarget ) {\\n\\n\\t\\t\\tvar result = optionalTarget || new THREE.Vector2();\\n\\t\\t\\treturn result.copy( point ).clamp( this.min, this.max );\\n\\n\\t\\t},\\n\\n\\t\\tdistanceToPoint: function () {\\n\\n\\t\\t\\tvar v1 = new THREE.Vector2();\\n\\n\\t\\t\\treturn function distanceToPoint( point ) {\\n\\n\\t\\t\\t\\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\\n\\t\\t\\t\\treturn clampedPoint.sub( point ).length();\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\t\\tintersect: function ( box ) {\\n\\n\\t\\t\\tthis.min.max( box.min );\\n\\t\\t\\tthis.max.min( box.max );\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tunion: function ( box ) {\\n\\n\\t\\t\\tthis.min.min( box.min );\\n\\t\\t\\tthis.max.max( box.max );\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\ttranslate: function ( offset ) {\\n\\n\\t\\t\\tthis.min.add( offset );\\n\\t\\t\\tthis.max.add( offset );\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tequals: function ( box ) {\\n\\n\\t\\t\\treturn box.min.equals( this.min ) && box.max.equals( this.max );\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\t// File:src/math/Box3.js\\n\\n\\t/**\\n\\t * @author bhouston / http://clara.io\\n\\t * @author WestLangley / http://github.com/WestLangley\\n\\t */\\n\\n\\tTHREE.Box3 = function ( min, max ) {\\n\\n\\t\\tthis.min = ( min !== undefined ) ? min : new THREE.Vector3( + Infinity, + Infinity, + Infinity );\\n\\t\\tthis.max = ( max !== undefined ) ? max : new THREE.Vector3( - Infinity, - Infinity, - Infinity );\\n\\n\\t};\\n\\n\\tTHREE.Box3.prototype = {\\n\\n\\t\\tconstructor: THREE.Box3,\\n\\n\\t\\tset: function ( min, max ) {\\n\\n\\t\\t\\tthis.min.copy( min );\\n\\t\\t\\tthis.max.copy( max );\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tsetFromArray: function ( array ) {\\n\\n\\t\\t\\tvar minX = + Infinity;\\n\\t\\t\\tvar minY = + Infinity;\\n\\t\\t\\tvar minZ = + Infinity;\\n\\n\\t\\t\\tvar maxX = - Infinity;\\n\\t\\t\\tvar maxY = - Infinity;\\n\\t\\t\\tvar maxZ = - Infinity;\\n\\n\\t\\t\\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\\n\\n\\t\\t\\t\\tvar x = array[ i ];\\n\\t\\t\\t\\tvar y = array[ i + 1 ];\\n\\t\\t\\t\\tvar z = array[ i + 2 ];\\n\\n\\t\\t\\t\\tif ( x < minX ) minX = x;\\n\\t\\t\\t\\tif ( y < minY ) minY = y;\\n\\t\\t\\t\\tif ( z < minZ ) minZ = z;\\n\\n\\t\\t\\t\\tif ( x > maxX ) maxX = x;\\n\\t\\t\\t\\tif ( y > maxY ) maxY = y;\\n\\t\\t\\t\\tif ( z > maxZ ) maxZ = z;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.min.set( minX, minY, minZ );\\n\\t\\t\\tthis.max.set( maxX, maxY, maxZ );\\n\\n\\t\\t},\\n\\n\\t\\tsetFromPoints: function ( points ) {\\n\\n\\t\\t\\tthis.makeEmpty();\\n\\n\\t\\t\\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\\n\\n\\t\\t\\t\\tthis.expandByPoint( points[ i ] );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tsetFromCenterAndSize: function () {\\n\\n\\t\\t\\tvar v1 = new THREE.Vector3();\\n\\n\\t\\t\\treturn function setFromCenterAndSize( center, size ) {\\n\\n\\t\\t\\t\\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\\n\\n\\t\\t\\t\\tthis.min.copy( center ).sub( halfSize );\\n\\t\\t\\t\\tthis.max.copy( center ).add( halfSize );\\n\\n\\t\\t\\t\\treturn this;\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\t\\tsetFromObject: function () {\\n\\n\\t\\t\\t// Computes the world-axis-aligned bounding box of an object (including its children),\\n\\t\\t\\t// accounting for both the object's, and children's, world transforms\\n\\n\\t\\t\\tvar v1 = new THREE.Vector3();\\n\\n\\t\\t\\treturn function setFromObject( object ) {\\n\\n\\t\\t\\t\\tvar scope = this;\\n\\n\\t\\t\\t\\tobject.updateMatrixWorld( true );\\n\\n\\t\\t\\t\\tthis.makeEmpty();\\n\\n\\t\\t\\t\\tobject.traverse( function ( node ) {\\n\\n\\t\\t\\t\\t\\tvar geometry = node.geometry;\\n\\n\\t\\t\\t\\t\\tif ( geometry !== undefined ) {\\n\\n\\t\\t\\t\\t\\t\\tif ( geometry instanceof THREE.Geometry ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tvar vertices = geometry.vertices;\\n\\n\\t\\t\\t\\t\\t\\t\\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tv1.copy( vertices[ i ] );\\n\\t\\t\\t\\t\\t\\t\\t\\tv1.applyMatrix4( node.matrixWorld );\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tscope.expandByPoint( v1 );\\n\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t} else if ( geometry instanceof THREE.BufferGeometry ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tvar attribute = geometry.attributes.position;\\n\\n\\t\\t\\t\\t\\t\\t\\tif ( attribute !== undefined ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tvar array, offset, stride;\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tarray = attribute.data.array;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\toffset = attribute.offset;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tstride = attribute.data.stride;\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tarray = attribute.array;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\toffset = 0;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tstride = 3;\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tfor ( var i = offset, il = array.length; i < il; i += stride ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tv1.fromArray( array, i );\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tv1.applyMatrix4( node.matrixWorld );\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tscope.expandByPoint( v1 );\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t} );\\n\\n\\t\\t\\t\\treturn this;\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\t\\tclone: function () {\\n\\n\\t\\t\\treturn new this.constructor().copy( this );\\n\\n\\t\\t},\\n\\n\\t\\tcopy: function ( box ) {\\n\\n\\t\\t\\tthis.min.copy( box.min );\\n\\t\\t\\tthis.max.copy( box.max );\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tmakeEmpty: function () {\\n\\n\\t\\t\\tthis.min.x = this.min.y = this.min.z = + Infinity;\\n\\t\\t\\tthis.max.x = this.max.y = this.max.z = - Infinity;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tisEmpty: function () {\\n\\n\\t\\t\\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\\n\\n\\t\\t\\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\\n\\n\\t\\t},\\n\\n\\t\\tcenter: function ( optionalTarget ) {\\n\\n\\t\\t\\tvar result = optionalTarget || new THREE.Vector3();\\n\\t\\t\\treturn result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\\n\\n\\t\\t},\\n\\n\\t\\tsize: function ( optionalTarget ) {\\n\\n\\t\\t\\tvar result = optionalTarget || new THREE.Vector3();\\n\\t\\t\\treturn result.subVectors( this.max, this.min );\\n\\n\\t\\t},\\n\\n\\t\\texpandByPoint: function ( point ) {\\n\\n\\t\\t\\tthis.min.min( point );\\n\\t\\t\\tthis.max.max( point );\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\texpandByVector: function ( vector ) {\\n\\n\\t\\t\\tthis.min.sub( vector );\\n\\t\\t\\tthis.max.add( vector );\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\texpandByScalar: function ( scalar ) {\\n\\n\\t\\t\\tthis.min.addScalar( - scalar );\\n\\t\\t\\tthis.max.addScalar( scalar );\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tcontainsPoint: function ( point ) {\\n\\n\\t\\t\\tif ( point.x < this.min.x || point.x > this.max.x ||\\n\\t\\t\\t\\t\\t point.y < this.min.y || point.y > this.max.y ||\\n\\t\\t\\t\\t\\t point.z < this.min.z || point.z > this.max.z ) {\\n\\n\\t\\t\\t\\treturn false;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn true;\\n\\n\\t\\t},\\n\\n\\t\\tcontainsBox: function ( box ) {\\n\\n\\t\\t\\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\\n\\t\\t\\t\\t ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) &&\\n\\t\\t\\t\\t ( this.min.z <= box.min.z ) && ( box.max.z <= this.max.z ) ) {\\n\\n\\t\\t\\t\\treturn true;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn false;\\n\\n\\t\\t},\\n\\n\\t\\tgetParameter: function ( point, optionalTarget ) {\\n\\n\\t\\t\\t// This can potentially have a divide by zero if the box\\n\\t\\t\\t// has a size dimension of 0.\\n\\n\\t\\t\\tvar result = optionalTarget || new THREE.Vector3();\\n\\n\\t\\t\\treturn result.set(\\n\\t\\t\\t\\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\\n\\t\\t\\t\\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\\n\\t\\t\\t\\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\\n\\t\\t\\t);\\n\\n\\t\\t},\\n\\n\\t\\tintersectsBox: function ( box ) {\\n\\n\\t\\t\\t// using 6 splitting planes to rule out intersections.\\n\\n\\t\\t\\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\\n\\t\\t\\t\\t\\t box.max.y < this.min.y || box.min.y > this.max.y ||\\n\\t\\t\\t\\t\\t box.max.z < this.min.z || box.min.z > this.max.z ) {\\n\\n\\t\\t\\t\\treturn false;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn true;\\n\\n\\t\\t},\\n\\n\\t\\tintersectsSphere: ( function () {\\n\\n\\t\\t\\tvar closestPoint;\\n\\n\\t\\t\\treturn function intersectsSphere( sphere ) {\\n\\n\\t\\t\\t\\tif ( closestPoint === undefined ) closestPoint = new THREE.Vector3();\\n\\n\\t\\t\\t\\t// Find the point on the AABB closest to the sphere center.\\n\\t\\t\\t\\tthis.clampPoint( sphere.center, closestPoint );\\n\\n\\t\\t\\t\\t// If that point is inside the sphere, the AABB and sphere intersect.\\n\\t\\t\\t\\treturn closestPoint.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\\n\\n\\t\\t\\t};\\n\\n\\t\\t} )(),\\n\\n\\t\\tintersectsPlane: function ( plane ) {\\n\\n\\t\\t\\t// We compute the minimum and maximum dot product values. If those values\\n\\t\\t\\t// are on the same side (back or front) of the plane, then there is no intersection.\\n\\n\\t\\t\\tvar min, max;\\n\\n\\t\\t\\tif ( plane.normal.x > 0 ) {\\n\\n\\t\\t\\t\\tmin = plane.normal.x * this.min.x;\\n\\t\\t\\t\\tmax = plane.normal.x * this.max.x;\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\tmin = plane.normal.x * this.max.x;\\n\\t\\t\\t\\tmax = plane.normal.x * this.min.x;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( plane.normal.y > 0 ) {\\n\\n\\t\\t\\t\\tmin += plane.normal.y * this.min.y;\\n\\t\\t\\t\\tmax += plane.normal.y * this.max.y;\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\tmin += plane.normal.y * this.max.y;\\n\\t\\t\\t\\tmax += plane.normal.y * this.min.y;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( plane.normal.z > 0 ) {\\n\\n\\t\\t\\t\\tmin += plane.normal.z * this.min.z;\\n\\t\\t\\t\\tmax += plane.normal.z * this.max.z;\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\tmin += plane.normal.z * this.max.z;\\n\\t\\t\\t\\tmax += plane.normal.z * this.min.z;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn ( min <= plane.constant && max >= plane.constant );\\n\\n\\t\\t},\\n\\n\\t\\tclampPoint: function ( point, optionalTarget ) {\\n\\n\\t\\t\\tvar result = optionalTarget || new THREE.Vector3();\\n\\t\\t\\treturn result.copy( point ).clamp( this.min, this.max );\\n\\n\\t\\t},\\n\\n\\t\\tdistanceToPoint: function () {\\n\\n\\t\\t\\tvar v1 = new THREE.Vector3();\\n\\n\\t\\t\\treturn function distanceToPoint( point ) {\\n\\n\\t\\t\\t\\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\\n\\t\\t\\t\\treturn clampedPoint.sub( point ).length();\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\t\\tgetBoundingSphere: function () {\\n\\n\\t\\t\\tvar v1 = new THREE.Vector3();\\n\\n\\t\\t\\treturn function getBoundingSphere( optionalTarget ) {\\n\\n\\t\\t\\t\\tvar result = optionalTarget || new THREE.Sphere();\\n\\n\\t\\t\\t\\tresult.center = this.center();\\n\\t\\t\\t\\tresult.radius = this.size( v1 ).length() * 0.5;\\n\\n\\t\\t\\t\\treturn result;\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\t\\tintersect: function ( box ) {\\n\\n\\t\\t\\tthis.min.max( box.min );\\n\\t\\t\\tthis.max.min( box.max );\\n\\n\\t\\t\\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\\n\\t\\t\\tif( this.isEmpty() ) this.makeEmpty();\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tunion: function ( box ) {\\n\\n\\t\\t\\tthis.min.min( box.min );\\n\\t\\t\\tthis.max.max( box.max );\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tapplyMatrix4: function () {\\n\\n\\t\\t\\tvar points = [\\n\\t\\t\\t\\tnew THREE.Vector3(),\\n\\t\\t\\t\\tnew THREE.Vector3(),\\n\\t\\t\\t\\tnew THREE.Vector3(),\\n\\t\\t\\t\\tnew THREE.Vector3(),\\n\\t\\t\\t\\tnew THREE.Vector3(),\\n\\t\\t\\t\\tnew THREE.Vector3(),\\n\\t\\t\\t\\tnew THREE.Vector3(),\\n\\t\\t\\t\\tnew THREE.Vector3()\\n\\t\\t\\t];\\n\\n\\t\\t\\treturn function applyMatrix4( matrix ) {\\n\\n\\t\\t\\t\\t// transform of empty box is an empty box.\\n\\t\\t\\t\\tif( this.isEmpty() ) return this;\\n\\n\\t\\t\\t\\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\\n\\t\\t\\t\\tpoints[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\\n\\t\\t\\t\\tpoints[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\\n\\t\\t\\t\\tpoints[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\\n\\t\\t\\t\\tpoints[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\\n\\t\\t\\t\\tpoints[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\\n\\t\\t\\t\\tpoints[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\\n\\t\\t\\t\\tpoints[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\\n\\t\\t\\t\\tpoints[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix );\\t// 111\\n\\n\\t\\t\\t\\tthis.setFromPoints( points );\\n\\n\\t\\t\\t\\treturn this;\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\t\\ttranslate: function ( offset ) {\\n\\n\\t\\t\\tthis.min.add( offset );\\n\\t\\t\\tthis.max.add( offset );\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tequals: function ( box ) {\\n\\n\\t\\t\\treturn box.min.equals( this.min ) && box.max.equals( this.max );\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\t// File:src/math/Matrix3.js\\n\\n\\t/**\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t * @author WestLangley / http://github.com/WestLangley\\n\\t * @author bhouston / http://clara.io\\n\\t * @author tschw\\n\\t */\\n\\n\\tTHREE.Matrix3 = function () {\\n\\n\\t\\tthis.elements = new Float32Array( [\\n\\n\\t\\t\\t1, 0, 0,\\n\\t\\t\\t0, 1, 0,\\n\\t\\t\\t0, 0, 1\\n\\n\\t\\t] );\\n\\n\\t\\tif ( arguments.length > 0 ) {\\n\\n\\t\\t\\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\tTHREE.Matrix3.prototype = {\\n\\n\\t\\tconstructor: THREE.Matrix3,\\n\\n\\t\\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\\n\\n\\t\\t\\tvar te = this.elements;\\n\\n\\t\\t\\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\\n\\t\\t\\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\\n\\t\\t\\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tidentity: function () {\\n\\n\\t\\t\\tthis.set(\\n\\n\\t\\t\\t\\t1, 0, 0,\\n\\t\\t\\t\\t0, 1, 0,\\n\\t\\t\\t\\t0, 0, 1\\n\\n\\t\\t\\t);\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tclone: function () {\\n\\n\\t\\t\\treturn new this.constructor().fromArray( this.elements );\\n\\n\\t\\t},\\n\\n\\t\\tcopy: function ( m ) {\\n\\n\\t\\t\\tvar me = m.elements;\\n\\n\\t\\t\\tthis.set(\\n\\n\\t\\t\\t\\tme[ 0 ], me[ 3 ], me[ 6 ],\\n\\t\\t\\t\\tme[ 1 ], me[ 4 ], me[ 7 ],\\n\\t\\t\\t\\tme[ 2 ], me[ 5 ], me[ 8 ]\\n\\n\\t\\t\\t);\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tsetFromMatrix4: function( m ) {\\n\\n\\t\\t\\tvar me = m.elements;\\n\\n\\t\\t\\tthis.set(\\n\\n\\t\\t\\t\\tme[ 0 ], me[ 4 ], me[  8 ],\\n\\t\\t\\t\\tme[ 1 ], me[ 5 ], me[  9 ],\\n\\t\\t\\t\\tme[ 2 ], me[ 6 ], me[ 10 ]\\n\\n\\t\\t\\t);\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tapplyToVector3Array: function () {\\n\\n\\t\\t\\tvar v1;\\n\\n\\t\\t\\treturn function applyToVector3Array( array, offset, length ) {\\n\\n\\t\\t\\t\\tif ( v1 === undefined ) v1 = new THREE.Vector3();\\n\\t\\t\\t\\tif ( offset === undefined ) offset = 0;\\n\\t\\t\\t\\tif ( length === undefined ) length = array.length;\\n\\n\\t\\t\\t\\tfor ( var i = 0, j = offset; i < length; i += 3, j += 3 ) {\\n\\n\\t\\t\\t\\t\\tv1.fromArray( array, j );\\n\\t\\t\\t\\t\\tv1.applyMatrix3( this );\\n\\t\\t\\t\\t\\tv1.toArray( array, j );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn array;\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\t\\tapplyToBuffer: function () {\\n\\n\\t\\t\\tvar v1;\\n\\n\\t\\t\\treturn function applyToBuffer( buffer, offset, length ) {\\n\\n\\t\\t\\t\\tif ( v1 === undefined ) v1 = new THREE.Vector3();\\n\\t\\t\\t\\tif ( offset === undefined ) offset = 0;\\n\\t\\t\\t\\tif ( length === undefined ) length = buffer.length / buffer.itemSize;\\n\\n\\t\\t\\t\\tfor ( var i = 0, j = offset; i < length; i ++, j ++ ) {\\n\\n\\t\\t\\t\\t\\tv1.x = buffer.getX( j );\\n\\t\\t\\t\\t\\tv1.y = buffer.getY( j );\\n\\t\\t\\t\\t\\tv1.z = buffer.getZ( j );\\n\\n\\t\\t\\t\\t\\tv1.applyMatrix3( this );\\n\\n\\t\\t\\t\\t\\tbuffer.setXYZ( v1.x, v1.y, v1.z );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn buffer;\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\t\\tmultiplyScalar: function ( s ) {\\n\\n\\t\\t\\tvar te = this.elements;\\n\\n\\t\\t\\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\\n\\t\\t\\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\\n\\t\\t\\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tdeterminant: function () {\\n\\n\\t\\t\\tvar te = this.elements;\\n\\n\\t\\t\\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\\n\\t\\t\\t\\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\\n\\t\\t\\t\\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\\n\\n\\t\\t\\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\\n\\n\\t\\t},\\n\\n\\t\\tgetInverse: function ( matrix, throwOnDegenerate ) {\\n\\n\\t\\t\\tif ( matrix instanceof THREE.Matrix4 ) {\\n\\n\\t\\t\\t\\tconsole.error( \\\"THREE.Matrix3.getInverse no longer takes a Matrix4 argument.\\\" );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar me = matrix.elements,\\n\\t\\t\\t\\tte = this.elements,\\n\\n\\t\\t\\t\\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ],\\n\\t\\t\\t\\tn12 = me[ 3 ], n22 = me[ 4 ], n32 = me[ 5 ],\\n\\t\\t\\t\\tn13 = me[ 6 ], n23 = me[ 7 ], n33 = me[ 8 ],\\n\\n\\t\\t\\t\\tt11 = n33 * n22 - n32 * n23,\\n\\t\\t\\t\\tt12 = n32 * n13 - n33 * n12,\\n\\t\\t\\t\\tt13 = n23 * n12 - n22 * n13,\\n\\n\\t\\t\\t\\tdet = n11 * t11 + n21 * t12 + n31 * t13;\\n\\n\\t\\t\\tif ( det === 0 ) {\\n\\n\\t\\t\\t\\tvar msg = \\\"THREE.Matrix3.getInverse(): can't invert matrix, determinant is 0\\\";\\n\\n\\t\\t\\t\\tif ( throwOnDegenerate || false ) {\\n\\n\\t\\t\\t\\t\\tthrow new Error( msg );\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\tconsole.warn( msg );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn this.identity();\\n\\t\\t\\t}\\n\\t\\t\\t\\n\\t\\t\\tvar detInv = 1 / det;\\n\\n\\t\\t\\tte[ 0 ] = t11 * detInv;\\n\\t\\t\\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\\n\\t\\t\\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\\n\\n\\t\\t\\tte[ 3 ] = t12 * detInv;\\n\\t\\t\\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\\n\\t\\t\\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\\n\\n\\t\\t\\tte[ 6 ] = t13 * detInv;\\n\\t\\t\\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\\n\\t\\t\\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\ttranspose: function () {\\n\\n\\t\\t\\tvar tmp, m = this.elements;\\n\\n\\t\\t\\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\\n\\t\\t\\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\\n\\t\\t\\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tflattenToArrayOffset: function ( array, offset ) {\\n\\n\\t\\t\\tconsole.warn( \\\"THREE.Matrix3: .flattenToArrayOffset is deprecated \\\" +\\n\\t\\t\\t\\t\\t\\\"- just use .toArray instead.\\\" );\\n\\n\\t\\t\\treturn this.toArray( array, offset );\\n\\n\\t\\t},\\n\\n\\t\\tgetNormalMatrix: function ( matrix4 ) {\\n\\n\\t\\t\\treturn this.setFromMatrix4( matrix4 ).getInverse( this ).transpose();\\n\\n\\t\\t},\\n\\n\\t\\ttransposeIntoArray: function ( r ) {\\n\\n\\t\\t\\tvar m = this.elements;\\n\\n\\t\\t\\tr[ 0 ] = m[ 0 ];\\n\\t\\t\\tr[ 1 ] = m[ 3 ];\\n\\t\\t\\tr[ 2 ] = m[ 6 ];\\n\\t\\t\\tr[ 3 ] = m[ 1 ];\\n\\t\\t\\tr[ 4 ] = m[ 4 ];\\n\\t\\t\\tr[ 5 ] = m[ 7 ];\\n\\t\\t\\tr[ 6 ] = m[ 2 ];\\n\\t\\t\\tr[ 7 ] = m[ 5 ];\\n\\t\\t\\tr[ 8 ] = m[ 8 ];\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tfromArray: function ( array ) {\\n\\n\\t\\t\\tthis.elements.set( array );\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\ttoArray: function ( array, offset ) {\\n\\n\\t\\t\\tif ( array === undefined ) array = [];\\n\\t\\t\\tif ( offset === undefined ) offset = 0;\\n\\n\\t\\t\\tvar te = this.elements;\\n\\n\\t\\t\\tarray[ offset ] = te[ 0 ];\\n\\t\\t\\tarray[ offset + 1 ] = te[ 1 ];\\n\\t\\t\\tarray[ offset + 2 ] = te[ 2 ];\\n\\n\\t\\t\\tarray[ offset + 3 ] = te[ 3 ];\\n\\t\\t\\tarray[ offset + 4 ] = te[ 4 ];\\n\\t\\t\\tarray[ offset + 5 ] = te[ 5 ];\\n\\n\\t\\t\\tarray[ offset + 6 ] = te[ 6 ];\\n\\t\\t\\tarray[ offset + 7 ] = te[ 7 ];\\n\\t\\t\\tarray[ offset + 8 ]  = te[ 8 ];\\n\\n\\t\\t\\treturn array;\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\t// File:src/math/Matrix4.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t * @author supereggbert / http://www.paulbrunt.co.uk/\\n\\t * @author philogb / http://blog.thejit.org/\\n\\t * @author jordi_ros / http://plattsoft.com\\n\\t * @author D1plo1d / http://github.com/D1plo1d\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t * @author mikael emtinger / http://gomo.se/\\n\\t * @author timknip / http://www.floorplanner.com/\\n\\t * @author bhouston / http://clara.io\\n\\t * @author WestLangley / http://github.com/WestLangley\\n\\t */\\n\\n\\tTHREE.Matrix4 = function () {\\n\\n\\t\\tthis.elements = new Float32Array( [\\n\\n\\t\\t\\t1, 0, 0, 0,\\n\\t\\t\\t0, 1, 0, 0,\\n\\t\\t\\t0, 0, 1, 0,\\n\\t\\t\\t0, 0, 0, 1\\n\\n\\t\\t] );\\n\\n\\t\\tif ( arguments.length > 0 ) {\\n\\n\\t\\t\\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\tTHREE.Matrix4.prototype = {\\n\\n\\t\\tconstructor: THREE.Matrix4,\\n\\n\\t\\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\\n\\n\\t\\t\\tvar te = this.elements;\\n\\n\\t\\t\\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\\n\\t\\t\\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\\n\\t\\t\\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\\n\\t\\t\\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tidentity: function () {\\n\\n\\t\\t\\tthis.set(\\n\\n\\t\\t\\t\\t1, 0, 0, 0,\\n\\t\\t\\t\\t0, 1, 0, 0,\\n\\t\\t\\t\\t0, 0, 1, 0,\\n\\t\\t\\t\\t0, 0, 0, 1\\n\\n\\t\\t\\t);\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tclone: function () {\\n\\n\\t\\t\\treturn new THREE.Matrix4().fromArray( this.elements );\\n\\n\\t\\t},\\n\\n\\t\\tcopy: function ( m ) {\\n\\n\\t\\t\\tthis.elements.set( m.elements );\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tcopyPosition: function ( m ) {\\n\\n\\t\\t\\tvar te = this.elements;\\n\\t\\t\\tvar me = m.elements;\\n\\n\\t\\t\\tte[ 12 ] = me[ 12 ];\\n\\t\\t\\tte[ 13 ] = me[ 13 ];\\n\\t\\t\\tte[ 14 ] = me[ 14 ];\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\textractBasis: function ( xAxis, yAxis, zAxis ) {\\n\\n\\t\\t\\txAxis.setFromMatrixColumn( this, 0 );\\n\\t\\t\\tyAxis.setFromMatrixColumn( this, 1 );\\n\\t\\t\\tzAxis.setFromMatrixColumn( this, 2 );\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\\n\\n\\t\\t\\tthis.set(\\n\\t\\t\\t\\txAxis.x, yAxis.x, zAxis.x, 0,\\n\\t\\t\\t\\txAxis.y, yAxis.y, zAxis.y, 0,\\n\\t\\t\\t\\txAxis.z, yAxis.z, zAxis.z, 0,\\n\\t\\t\\t\\t0,       0,       0,       1\\n\\t\\t\\t);\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\textractRotation: function () {\\n\\n\\t\\t\\tvar v1;\\n\\n\\t\\t\\treturn function extractRotation( m ) {\\n\\n\\t\\t\\t\\tif ( v1 === undefined ) v1 = new THREE.Vector3();\\n\\n\\t\\t\\t\\tvar te = this.elements;\\n\\t\\t\\t\\tvar me = m.elements;\\n\\n\\t\\t\\t\\tvar scaleX = 1 / v1.setFromMatrixColumn( m, 0 ).length();\\n\\t\\t\\t\\tvar scaleY = 1 / v1.setFromMatrixColumn( m, 1 ).length();\\n\\t\\t\\t\\tvar scaleZ = 1 / v1.setFromMatrixColumn( m, 2 ).length();\\n\\n\\t\\t\\t\\tte[ 0 ] = me[ 0 ] * scaleX;\\n\\t\\t\\t\\tte[ 1 ] = me[ 1 ] * scaleX;\\n\\t\\t\\t\\tte[ 2 ] = me[ 2 ] * scaleX;\\n\\n\\t\\t\\t\\tte[ 4 ] = me[ 4 ] * scaleY;\\n\\t\\t\\t\\tte[ 5 ] = me[ 5 ] * scaleY;\\n\\t\\t\\t\\tte[ 6 ] = me[ 6 ] * scaleY;\\n\\n\\t\\t\\t\\tte[ 8 ] = me[ 8 ] * scaleZ;\\n\\t\\t\\t\\tte[ 9 ] = me[ 9 ] * scaleZ;\\n\\t\\t\\t\\tte[ 10 ] = me[ 10 ] * scaleZ;\\n\\n\\t\\t\\t\\treturn this;\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\t\\tmakeRotationFromEuler: function ( euler ) {\\n\\n\\t\\t\\tif ( euler instanceof THREE.Euler === false ) {\\n\\n\\t\\t\\t\\tconsole.error( 'THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar te = this.elements;\\n\\n\\t\\t\\tvar x = euler.x, y = euler.y, z = euler.z;\\n\\t\\t\\tvar a = Math.cos( x ), b = Math.sin( x );\\n\\t\\t\\tvar c = Math.cos( y ), d = Math.sin( y );\\n\\t\\t\\tvar e = Math.cos( z ), f = Math.sin( z );\\n\\n\\t\\t\\tif ( euler.order === 'XYZ' ) {\\n\\n\\t\\t\\t\\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\\n\\n\\t\\t\\t\\tte[ 0 ] = c * e;\\n\\t\\t\\t\\tte[ 4 ] = - c * f;\\n\\t\\t\\t\\tte[ 8 ] = d;\\n\\n\\t\\t\\t\\tte[ 1 ] = af + be * d;\\n\\t\\t\\t\\tte[ 5 ] = ae - bf * d;\\n\\t\\t\\t\\tte[ 9 ] = - b * c;\\n\\n\\t\\t\\t\\tte[ 2 ] = bf - ae * d;\\n\\t\\t\\t\\tte[ 6 ] = be + af * d;\\n\\t\\t\\t\\tte[ 10 ] = a * c;\\n\\n\\t\\t\\t} else if ( euler.order === 'YXZ' ) {\\n\\n\\t\\t\\t\\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\\n\\n\\t\\t\\t\\tte[ 0 ] = ce + df * b;\\n\\t\\t\\t\\tte[ 4 ] = de * b - cf;\\n\\t\\t\\t\\tte[ 8 ] = a * d;\\n\\n\\t\\t\\t\\tte[ 1 ] = a * f;\\n\\t\\t\\t\\tte[ 5 ] = a * e;\\n\\t\\t\\t\\tte[ 9 ] = - b;\\n\\n\\t\\t\\t\\tte[ 2 ] = cf * b - de;\\n\\t\\t\\t\\tte[ 6 ] = df + ce * b;\\n\\t\\t\\t\\tte[ 10 ] = a * c;\\n\\n\\t\\t\\t} else if ( euler.order === 'ZXY' ) {\\n\\n\\t\\t\\t\\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\\n\\n\\t\\t\\t\\tte[ 0 ] = ce - df * b;\\n\\t\\t\\t\\tte[ 4 ] = - a * f;\\n\\t\\t\\t\\tte[ 8 ] = de + cf * b;\\n\\n\\t\\t\\t\\tte[ 1 ] = cf + de * b;\\n\\t\\t\\t\\tte[ 5 ] = a * e;\\n\\t\\t\\t\\tte[ 9 ] = df - ce * b;\\n\\n\\t\\t\\t\\tte[ 2 ] = - a * d;\\n\\t\\t\\t\\tte[ 6 ] = b;\\n\\t\\t\\t\\tte[ 10 ] = a * c;\\n\\n\\t\\t\\t} else if ( euler.order === 'ZYX' ) {\\n\\n\\t\\t\\t\\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\\n\\n\\t\\t\\t\\tte[ 0 ] = c * e;\\n\\t\\t\\t\\tte[ 4 ] = be * d - af;\\n\\t\\t\\t\\tte[ 8 ] = ae * d + bf;\\n\\n\\t\\t\\t\\tte[ 1 ] = c * f;\\n\\t\\t\\t\\tte[ 5 ] = bf * d + ae;\\n\\t\\t\\t\\tte[ 9 ] = af * d - be;\\n\\n\\t\\t\\t\\tte[ 2 ] = - d;\\n\\t\\t\\t\\tte[ 6 ] = b * c;\\n\\t\\t\\t\\tte[ 10 ] = a * c;\\n\\n\\t\\t\\t} else if ( euler.order === 'YZX' ) {\\n\\n\\t\\t\\t\\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\\n\\n\\t\\t\\t\\tte[ 0 ] = c * e;\\n\\t\\t\\t\\tte[ 4 ] = bd - ac * f;\\n\\t\\t\\t\\tte[ 8 ] = bc * f + ad;\\n\\n\\t\\t\\t\\tte[ 1 ] = f;\\n\\t\\t\\t\\tte[ 5 ] = a * e;\\n\\t\\t\\t\\tte[ 9 ] = - b * e;\\n\\n\\t\\t\\t\\tte[ 2 ] = - d * e;\\n\\t\\t\\t\\tte[ 6 ] = ad * f + bc;\\n\\t\\t\\t\\tte[ 10 ] = ac - bd * f;\\n\\n\\t\\t\\t} else if ( euler.order === 'XZY' ) {\\n\\n\\t\\t\\t\\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\\n\\n\\t\\t\\t\\tte[ 0 ] = c * e;\\n\\t\\t\\t\\tte[ 4 ] = - f;\\n\\t\\t\\t\\tte[ 8 ] = d * e;\\n\\n\\t\\t\\t\\tte[ 1 ] = ac * f + bd;\\n\\t\\t\\t\\tte[ 5 ] = a * e;\\n\\t\\t\\t\\tte[ 9 ] = ad * f - bc;\\n\\n\\t\\t\\t\\tte[ 2 ] = bc * f - ad;\\n\\t\\t\\t\\tte[ 6 ] = b * e;\\n\\t\\t\\t\\tte[ 10 ] = bd * f + ac;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t// last column\\n\\t\\t\\tte[ 3 ] = 0;\\n\\t\\t\\tte[ 7 ] = 0;\\n\\t\\t\\tte[ 11 ] = 0;\\n\\n\\t\\t\\t// bottom row\\n\\t\\t\\tte[ 12 ] = 0;\\n\\t\\t\\tte[ 13 ] = 0;\\n\\t\\t\\tte[ 14 ] = 0;\\n\\t\\t\\tte[ 15 ] = 1;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tmakeRotationFromQuaternion: function ( q ) {\\n\\n\\t\\t\\tvar te = this.elements;\\n\\n\\t\\t\\tvar x = q.x, y = q.y, z = q.z, w = q.w;\\n\\t\\t\\tvar x2 = x + x, y2 = y + y, z2 = z + z;\\n\\t\\t\\tvar xx = x * x2, xy = x * y2, xz = x * z2;\\n\\t\\t\\tvar yy = y * y2, yz = y * z2, zz = z * z2;\\n\\t\\t\\tvar wx = w * x2, wy = w * y2, wz = w * z2;\\n\\n\\t\\t\\tte[ 0 ] = 1 - ( yy + zz );\\n\\t\\t\\tte[ 4 ] = xy - wz;\\n\\t\\t\\tte[ 8 ] = xz + wy;\\n\\n\\t\\t\\tte[ 1 ] = xy + wz;\\n\\t\\t\\tte[ 5 ] = 1 - ( xx + zz );\\n\\t\\t\\tte[ 9 ] = yz - wx;\\n\\n\\t\\t\\tte[ 2 ] = xz - wy;\\n\\t\\t\\tte[ 6 ] = yz + wx;\\n\\t\\t\\tte[ 10 ] = 1 - ( xx + yy );\\n\\n\\t\\t\\t// last column\\n\\t\\t\\tte[ 3 ] = 0;\\n\\t\\t\\tte[ 7 ] = 0;\\n\\t\\t\\tte[ 11 ] = 0;\\n\\n\\t\\t\\t// bottom row\\n\\t\\t\\tte[ 12 ] = 0;\\n\\t\\t\\tte[ 13 ] = 0;\\n\\t\\t\\tte[ 14 ] = 0;\\n\\t\\t\\tte[ 15 ] = 1;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tlookAt: function () {\\n\\n\\t\\t\\tvar x, y, z;\\n\\n\\t\\t\\treturn function lookAt( eye, target, up ) {\\n\\n\\t\\t\\t\\tif ( x === undefined ) {\\n\\n\\t\\t\\t\\t\\tx = new THREE.Vector3();\\n\\t\\t\\t\\t\\ty = new THREE.Vector3();\\n\\t\\t\\t\\t\\tz = new THREE.Vector3();\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tvar te = this.elements;\\n\\n\\t\\t\\t\\tz.subVectors( eye, target ).normalize();\\n\\n\\t\\t\\t\\tif ( z.lengthSq() === 0 ) {\\n\\n\\t\\t\\t\\t\\tz.z = 1;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tx.crossVectors( up, z ).normalize();\\n\\n\\t\\t\\t\\tif ( x.lengthSq() === 0 ) {\\n\\n\\t\\t\\t\\t\\tz.z += 0.0001;\\n\\t\\t\\t\\t\\tx.crossVectors( up, z ).normalize();\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\ty.crossVectors( z, x );\\n\\n\\n\\t\\t\\t\\tte[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;\\n\\t\\t\\t\\tte[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;\\n\\t\\t\\t\\tte[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;\\n\\n\\t\\t\\t\\treturn this;\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\t\\tmultiply: function ( m, n ) {\\n\\n\\t\\t\\tif ( n !== undefined ) {\\n\\n\\t\\t\\t\\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\\n\\t\\t\\t\\treturn this.multiplyMatrices( m, n );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn this.multiplyMatrices( this, m );\\n\\n\\t\\t},\\n\\n\\t\\tpremultiply: function ( m ) {\\n\\n\\t\\t\\treturn this.multiplyMatrices( m, this );\\n\\n\\t\\t},\\n\\n\\t\\tmultiplyMatrices: function ( a, b ) {\\n\\n\\t\\t\\tvar ae = a.elements;\\n\\t\\t\\tvar be = b.elements;\\n\\t\\t\\tvar te = this.elements;\\n\\n\\t\\t\\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\\n\\t\\t\\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\\n\\t\\t\\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\\n\\t\\t\\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\\n\\n\\t\\t\\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\\n\\t\\t\\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\\n\\t\\t\\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\\n\\t\\t\\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\\n\\n\\t\\t\\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\\n\\t\\t\\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\\n\\t\\t\\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\\n\\t\\t\\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\\n\\n\\t\\t\\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\\n\\t\\t\\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\\n\\t\\t\\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\\n\\t\\t\\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\\n\\n\\t\\t\\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\\n\\t\\t\\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\\n\\t\\t\\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\\n\\t\\t\\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\\n\\n\\t\\t\\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\\n\\t\\t\\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\\n\\t\\t\\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\\n\\t\\t\\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tmultiplyToArray: function ( a, b, r ) {\\n\\n\\t\\t\\tvar te = this.elements;\\n\\n\\t\\t\\tthis.multiplyMatrices( a, b );\\n\\n\\t\\t\\tr[ 0 ] = te[ 0 ]; r[ 1 ] = te[ 1 ]; r[ 2 ] = te[ 2 ]; r[ 3 ] = te[ 3 ];\\n\\t\\t\\tr[ 4 ] = te[ 4 ]; r[ 5 ] = te[ 5 ]; r[ 6 ] = te[ 6 ]; r[ 7 ] = te[ 7 ];\\n\\t\\t\\tr[ 8 ]  = te[ 8 ]; r[ 9 ]  = te[ 9 ]; r[ 10 ] = te[ 10 ]; r[ 11 ] = te[ 11 ];\\n\\t\\t\\tr[ 12 ] = te[ 12 ]; r[ 13 ] = te[ 13 ]; r[ 14 ] = te[ 14 ]; r[ 15 ] = te[ 15 ];\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tmultiplyScalar: function ( s ) {\\n\\n\\t\\t\\tvar te = this.elements;\\n\\n\\t\\t\\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\\n\\t\\t\\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\\n\\t\\t\\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\\n\\t\\t\\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tapplyToVector3Array: function () {\\n\\n\\t\\t\\tvar v1;\\n\\n\\t\\t\\treturn function applyToVector3Array( array, offset, length ) {\\n\\n\\t\\t\\t\\tif ( v1 === undefined ) v1 = new THREE.Vector3();\\n\\t\\t\\t\\tif ( offset === undefined ) offset = 0;\\n\\t\\t\\t\\tif ( length === undefined ) length = array.length;\\n\\n\\t\\t\\t\\tfor ( var i = 0, j = offset; i < length; i += 3, j += 3 ) {\\n\\n\\t\\t\\t\\t\\tv1.fromArray( array, j );\\n\\t\\t\\t\\t\\tv1.applyMatrix4( this );\\n\\t\\t\\t\\t\\tv1.toArray( array, j );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn array;\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\t\\tapplyToBuffer: function () {\\n\\n\\t\\t\\tvar v1;\\n\\n\\t\\t\\treturn function applyToBuffer( buffer, offset, length ) {\\n\\n\\t\\t\\t\\tif ( v1 === undefined ) v1 = new THREE.Vector3();\\n\\t\\t\\t\\tif ( offset === undefined ) offset = 0;\\n\\t\\t\\t\\tif ( length === undefined ) length = buffer.length / buffer.itemSize;\\n\\n\\t\\t\\t\\tfor ( var i = 0, j = offset; i < length; i ++, j ++ ) {\\n\\n\\t\\t\\t\\t\\tv1.x = buffer.getX( j );\\n\\t\\t\\t\\t\\tv1.y = buffer.getY( j );\\n\\t\\t\\t\\t\\tv1.z = buffer.getZ( j );\\n\\n\\t\\t\\t\\t\\tv1.applyMatrix4( this );\\n\\n\\t\\t\\t\\t\\tbuffer.setXYZ( v1.x, v1.y, v1.z );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn buffer;\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\t\\tdeterminant: function () {\\n\\n\\t\\t\\tvar te = this.elements;\\n\\n\\t\\t\\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\\n\\t\\t\\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\\n\\t\\t\\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\\n\\t\\t\\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\\n\\n\\t\\t\\t//TODO: make this more efficient\\n\\t\\t\\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\\n\\n\\t\\t\\treturn (\\n\\t\\t\\t\\tn41 * (\\n\\t\\t\\t\\t\\t+ n14 * n23 * n32\\n\\t\\t\\t\\t\\t - n13 * n24 * n32\\n\\t\\t\\t\\t\\t - n14 * n22 * n33\\n\\t\\t\\t\\t\\t + n12 * n24 * n33\\n\\t\\t\\t\\t\\t + n13 * n22 * n34\\n\\t\\t\\t\\t\\t - n12 * n23 * n34\\n\\t\\t\\t\\t) +\\n\\t\\t\\t\\tn42 * (\\n\\t\\t\\t\\t\\t+ n11 * n23 * n34\\n\\t\\t\\t\\t\\t - n11 * n24 * n33\\n\\t\\t\\t\\t\\t + n14 * n21 * n33\\n\\t\\t\\t\\t\\t - n13 * n21 * n34\\n\\t\\t\\t\\t\\t + n13 * n24 * n31\\n\\t\\t\\t\\t\\t - n14 * n23 * n31\\n\\t\\t\\t\\t) +\\n\\t\\t\\t\\tn43 * (\\n\\t\\t\\t\\t\\t+ n11 * n24 * n32\\n\\t\\t\\t\\t\\t - n11 * n22 * n34\\n\\t\\t\\t\\t\\t - n14 * n21 * n32\\n\\t\\t\\t\\t\\t + n12 * n21 * n34\\n\\t\\t\\t\\t\\t + n14 * n22 * n31\\n\\t\\t\\t\\t\\t - n12 * n24 * n31\\n\\t\\t\\t\\t) +\\n\\t\\t\\t\\tn44 * (\\n\\t\\t\\t\\t\\t- n13 * n22 * n31\\n\\t\\t\\t\\t\\t - n11 * n23 * n32\\n\\t\\t\\t\\t\\t + n11 * n22 * n33\\n\\t\\t\\t\\t\\t + n13 * n21 * n32\\n\\t\\t\\t\\t\\t - n12 * n21 * n33\\n\\t\\t\\t\\t\\t + n12 * n23 * n31\\n\\t\\t\\t\\t)\\n\\n\\t\\t\\t);\\n\\n\\t\\t},\\n\\n\\t\\ttranspose: function () {\\n\\n\\t\\t\\tvar te = this.elements;\\n\\t\\t\\tvar tmp;\\n\\n\\t\\t\\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\\n\\t\\t\\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\\n\\t\\t\\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\\n\\n\\t\\t\\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\\n\\t\\t\\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\\n\\t\\t\\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tflattenToArrayOffset: function ( array, offset ) {\\n\\n\\t\\t\\tconsole.warn( \\\"THREE.Matrix3: .flattenToArrayOffset is deprecated \\\" +\\n\\t\\t\\t\\t\\t\\\"- just use .toArray instead.\\\" );\\n\\n\\t\\t\\treturn this.toArray( array, offset );\\n\\n\\t\\t},\\n\\n\\t\\tgetPosition: function () {\\n\\n\\t\\t\\tvar v1;\\n\\n\\t\\t\\treturn function getPosition() {\\n\\n\\t\\t\\t\\tif ( v1 === undefined ) v1 = new THREE.Vector3();\\n\\t\\t\\t\\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\\n\\n\\t\\t\\t\\treturn v1.setFromMatrixColumn( this, 3 );\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\t\\tsetPosition: function ( v ) {\\n\\n\\t\\t\\tvar te = this.elements;\\n\\n\\t\\t\\tte[ 12 ] = v.x;\\n\\t\\t\\tte[ 13 ] = v.y;\\n\\t\\t\\tte[ 14 ] = v.z;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tgetInverse: function ( m, throwOnDegenerate ) {\\n\\n\\t\\t\\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\\n\\t\\t\\tvar te = this.elements,\\n\\t\\t\\t\\tme = m.elements,\\n\\n\\t\\t\\t\\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ], n41 = me[ 3 ],\\n\\t\\t\\t\\tn12 = me[ 4 ], n22 = me[ 5 ], n32 = me[ 6 ], n42 = me[ 7 ],\\n\\t\\t\\t\\tn13 = me[ 8 ], n23 = me[ 9 ], n33 = me[ 10 ], n43 = me[ 11 ],\\n\\t\\t\\t\\tn14 = me[ 12 ], n24 = me[ 13 ], n34 = me[ 14 ], n44 = me[ 15 ],\\n\\n\\t\\t\\t\\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\\n\\t\\t\\t\\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\\n\\t\\t\\t\\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\\n\\t\\t\\t\\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\\n\\n\\t\\t\\tvar det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\\n\\n\\t\\t\\tif ( det === 0 ) {\\n\\n\\t\\t\\t\\tvar msg = \\\"THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0\\\";\\n\\n\\t\\t\\t\\tif ( throwOnDegenerate || false ) {\\n\\n\\t\\t\\t\\t\\tthrow new Error( msg );\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\tconsole.warn( msg );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn this.identity();\\n\\n\\t\\t\\t}\\n\\t\\t\\t\\n\\t\\t\\tvar detInv = 1 / det;\\n\\n\\t\\t\\tte[ 0 ] = t11 * detInv;\\n\\t\\t\\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\\n\\t\\t\\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\\n\\t\\t\\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\\n\\n\\t\\t\\tte[ 4 ] = t12 * detInv;\\n\\t\\t\\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\\n\\t\\t\\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\\n\\t\\t\\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\\n\\n\\t\\t\\tte[ 8 ] = t13 * detInv;\\n\\t\\t\\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\\n\\t\\t\\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\\n\\t\\t\\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\\n\\n\\t\\t\\tte[ 12 ] = t14 * detInv;\\n\\t\\t\\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\\n\\t\\t\\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\\n\\t\\t\\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tscale: function ( v ) {\\n\\n\\t\\t\\tvar te = this.elements;\\n\\t\\t\\tvar x = v.x, y = v.y, z = v.z;\\n\\n\\t\\t\\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\\n\\t\\t\\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\\n\\t\\t\\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\\n\\t\\t\\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tgetMaxScaleOnAxis: function () {\\n\\n\\t\\t\\tvar te = this.elements;\\n\\n\\t\\t\\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\\n\\t\\t\\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\\n\\t\\t\\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\\n\\n\\t\\t\\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\\n\\n\\t\\t},\\n\\n\\t\\tmakeTranslation: function ( x, y, z ) {\\n\\n\\t\\t\\tthis.set(\\n\\n\\t\\t\\t\\t1, 0, 0, x,\\n\\t\\t\\t\\t0, 1, 0, y,\\n\\t\\t\\t\\t0, 0, 1, z,\\n\\t\\t\\t\\t0, 0, 0, 1\\n\\n\\t\\t\\t);\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tmakeRotationX: function ( theta ) {\\n\\n\\t\\t\\tvar c = Math.cos( theta ), s = Math.sin( theta );\\n\\n\\t\\t\\tthis.set(\\n\\n\\t\\t\\t\\t1, 0,  0, 0,\\n\\t\\t\\t\\t0, c, - s, 0,\\n\\t\\t\\t\\t0, s,  c, 0,\\n\\t\\t\\t\\t0, 0,  0, 1\\n\\n\\t\\t\\t);\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tmakeRotationY: function ( theta ) {\\n\\n\\t\\t\\tvar c = Math.cos( theta ), s = Math.sin( theta );\\n\\n\\t\\t\\tthis.set(\\n\\n\\t\\t\\t\\t c, 0, s, 0,\\n\\t\\t\\t\\t 0, 1, 0, 0,\\n\\t\\t\\t\\t- s, 0, c, 0,\\n\\t\\t\\t\\t 0, 0, 0, 1\\n\\n\\t\\t\\t);\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tmakeRotationZ: function ( theta ) {\\n\\n\\t\\t\\tvar c = Math.cos( theta ), s = Math.sin( theta );\\n\\n\\t\\t\\tthis.set(\\n\\n\\t\\t\\t\\tc, - s, 0, 0,\\n\\t\\t\\t\\ts,  c, 0, 0,\\n\\t\\t\\t\\t0,  0, 1, 0,\\n\\t\\t\\t\\t0,  0, 0, 1\\n\\n\\t\\t\\t);\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tmakeRotationAxis: function ( axis, angle ) {\\n\\n\\t\\t\\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\\n\\n\\t\\t\\tvar c = Math.cos( angle );\\n\\t\\t\\tvar s = Math.sin( angle );\\n\\t\\t\\tvar t = 1 - c;\\n\\t\\t\\tvar x = axis.x, y = axis.y, z = axis.z;\\n\\t\\t\\tvar tx = t * x, ty = t * y;\\n\\n\\t\\t\\tthis.set(\\n\\n\\t\\t\\t\\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\\n\\t\\t\\t\\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\\n\\t\\t\\t\\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\\n\\t\\t\\t\\t0, 0, 0, 1\\n\\n\\t\\t\\t);\\n\\n\\t\\t\\t return this;\\n\\n\\t\\t},\\n\\n\\t\\tmakeScale: function ( x, y, z ) {\\n\\n\\t\\t\\tthis.set(\\n\\n\\t\\t\\t\\tx, 0, 0, 0,\\n\\t\\t\\t\\t0, y, 0, 0,\\n\\t\\t\\t\\t0, 0, z, 0,\\n\\t\\t\\t\\t0, 0, 0, 1\\n\\n\\t\\t\\t);\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tcompose: function ( position, quaternion, scale ) {\\n\\n\\t\\t\\tthis.makeRotationFromQuaternion( quaternion );\\n\\t\\t\\tthis.scale( scale );\\n\\t\\t\\tthis.setPosition( position );\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tdecompose: function () {\\n\\n\\t\\t\\tvar vector, matrix;\\n\\n\\t\\t\\treturn function decompose( position, quaternion, scale ) {\\n\\n\\t\\t\\t\\tif ( vector === undefined ) {\\n\\n\\t\\t\\t\\t\\tvector = new THREE.Vector3();\\n\\t\\t\\t\\t\\tmatrix = new THREE.Matrix4();\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tvar te = this.elements;\\n\\n\\t\\t\\t\\tvar sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\\n\\t\\t\\t\\tvar sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\\n\\t\\t\\t\\tvar sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\\n\\n\\t\\t\\t\\t// if determine is negative, we need to invert one scale\\n\\t\\t\\t\\tvar det = this.determinant();\\n\\t\\t\\t\\tif ( det < 0 ) {\\n\\n\\t\\t\\t\\t\\tsx = - sx;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tposition.x = te[ 12 ];\\n\\t\\t\\t\\tposition.y = te[ 13 ];\\n\\t\\t\\t\\tposition.z = te[ 14 ];\\n\\n\\t\\t\\t\\t// scale the rotation part\\n\\n\\t\\t\\t\\tmatrix.elements.set( this.elements ); // at this point matrix is incomplete so we can't use .copy()\\n\\n\\t\\t\\t\\tvar invSX = 1 / sx;\\n\\t\\t\\t\\tvar invSY = 1 / sy;\\n\\t\\t\\t\\tvar invSZ = 1 / sz;\\n\\n\\t\\t\\t\\tmatrix.elements[ 0 ] *= invSX;\\n\\t\\t\\t\\tmatrix.elements[ 1 ] *= invSX;\\n\\t\\t\\t\\tmatrix.elements[ 2 ] *= invSX;\\n\\n\\t\\t\\t\\tmatrix.elements[ 4 ] *= invSY;\\n\\t\\t\\t\\tmatrix.elements[ 5 ] *= invSY;\\n\\t\\t\\t\\tmatrix.elements[ 6 ] *= invSY;\\n\\n\\t\\t\\t\\tmatrix.elements[ 8 ] *= invSZ;\\n\\t\\t\\t\\tmatrix.elements[ 9 ] *= invSZ;\\n\\t\\t\\t\\tmatrix.elements[ 10 ] *= invSZ;\\n\\n\\t\\t\\t\\tquaternion.setFromRotationMatrix( matrix );\\n\\n\\t\\t\\t\\tscale.x = sx;\\n\\t\\t\\t\\tscale.y = sy;\\n\\t\\t\\t\\tscale.z = sz;\\n\\n\\t\\t\\t\\treturn this;\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\t\\tmakeFrustum: function ( left, right, bottom, top, near, far ) {\\n\\n\\t\\t\\tvar te = this.elements;\\n\\t\\t\\tvar x = 2 * near / ( right - left );\\n\\t\\t\\tvar y = 2 * near / ( top - bottom );\\n\\n\\t\\t\\tvar a = ( right + left ) / ( right - left );\\n\\t\\t\\tvar b = ( top + bottom ) / ( top - bottom );\\n\\t\\t\\tvar c = - ( far + near ) / ( far - near );\\n\\t\\t\\tvar d = - 2 * far * near / ( far - near );\\n\\n\\t\\t\\tte[ 0 ] = x;\\tte[ 4 ] = 0;\\tte[ 8 ] = a;\\tte[ 12 ] = 0;\\n\\t\\t\\tte[ 1 ] = 0;\\tte[ 5 ] = y;\\tte[ 9 ] = b;\\tte[ 13 ] = 0;\\n\\t\\t\\tte[ 2 ] = 0;\\tte[ 6 ] = 0;\\tte[ 10 ] = c;\\tte[ 14 ] = d;\\n\\t\\t\\tte[ 3 ] = 0;\\tte[ 7 ] = 0;\\tte[ 11 ] = - 1;\\tte[ 15 ] = 0;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tmakePerspective: function ( fov, aspect, near, far ) {\\n\\n\\t\\t\\tvar ymax = near * Math.tan( THREE.Math.DEG2RAD * fov * 0.5 );\\n\\t\\t\\tvar ymin = - ymax;\\n\\t\\t\\tvar xmin = ymin * aspect;\\n\\t\\t\\tvar xmax = ymax * aspect;\\n\\n\\t\\t\\treturn this.makeFrustum( xmin, xmax, ymin, ymax, near, far );\\n\\n\\t\\t},\\n\\n\\t\\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\\n\\n\\t\\t\\tvar te = this.elements;\\n\\t\\t\\tvar w = 1.0 / ( right - left );\\n\\t\\t\\tvar h = 1.0 / ( top - bottom );\\n\\t\\t\\tvar p = 1.0 / ( far - near );\\n\\n\\t\\t\\tvar x = ( right + left ) * w;\\n\\t\\t\\tvar y = ( top + bottom ) * h;\\n\\t\\t\\tvar z = ( far + near ) * p;\\n\\n\\t\\t\\tte[ 0 ] = 2 * w;\\tte[ 4 ] = 0;\\tte[ 8 ] = 0;\\tte[ 12 ] = - x;\\n\\t\\t\\tte[ 1 ] = 0;\\tte[ 5 ] = 2 * h;\\tte[ 9 ] = 0;\\tte[ 13 ] = - y;\\n\\t\\t\\tte[ 2 ] = 0;\\tte[ 6 ] = 0;\\tte[ 10 ] = - 2 * p;\\tte[ 14 ] = - z;\\n\\t\\t\\tte[ 3 ] = 0;\\tte[ 7 ] = 0;\\tte[ 11 ] = 0;\\tte[ 15 ] = 1;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tequals: function ( matrix ) {\\n\\n\\t\\t\\tvar te = this.elements;\\n\\t\\t\\tvar me = matrix.elements;\\n\\n\\t\\t\\tfor ( var i = 0; i < 16; i ++ ) {\\n\\n\\t\\t\\t\\tif ( te[ i ] !== me[ i ] ) return false;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn true;\\n\\n\\t\\t},\\n\\n\\t\\tfromArray: function ( array ) {\\n\\n\\t\\t\\tthis.elements.set( array );\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\ttoArray: function ( array, offset ) {\\n\\n\\t\\t\\tif ( array === undefined ) array = [];\\n\\t\\t\\tif ( offset === undefined ) offset = 0;\\n\\n\\t\\t\\tvar te = this.elements;\\n\\n\\t\\t\\tarray[ offset ] = te[ 0 ];\\n\\t\\t\\tarray[ offset + 1 ] = te[ 1 ];\\n\\t\\t\\tarray[ offset + 2 ] = te[ 2 ];\\n\\t\\t\\tarray[ offset + 3 ] = te[ 3 ];\\n\\n\\t\\t\\tarray[ offset + 4 ] = te[ 4 ];\\n\\t\\t\\tarray[ offset + 5 ] = te[ 5 ];\\n\\t\\t\\tarray[ offset + 6 ] = te[ 6 ];\\n\\t\\t\\tarray[ offset + 7 ] = te[ 7 ];\\n\\n\\t\\t\\tarray[ offset + 8 ]  = te[ 8 ];\\n\\t\\t\\tarray[ offset + 9 ]  = te[ 9 ];\\n\\t\\t\\tarray[ offset + 10 ] = te[ 10 ];\\n\\t\\t\\tarray[ offset + 11 ] = te[ 11 ];\\n\\n\\t\\t\\tarray[ offset + 12 ] = te[ 12 ];\\n\\t\\t\\tarray[ offset + 13 ] = te[ 13 ];\\n\\t\\t\\tarray[ offset + 14 ] = te[ 14 ];\\n\\t\\t\\tarray[ offset + 15 ] = te[ 15 ];\\n\\n\\t\\t\\treturn array;\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\t// File:src/math/Ray.js\\n\\n\\t/**\\n\\t * @author bhouston / http://clara.io\\n\\t */\\n\\n\\tTHREE.Ray = function ( origin, direction ) {\\n\\n\\t\\tthis.origin = ( origin !== undefined ) ? origin : new THREE.Vector3();\\n\\t\\tthis.direction = ( direction !== undefined ) ? direction : new THREE.Vector3();\\n\\n\\t};\\n\\n\\tTHREE.Ray.prototype = {\\n\\n\\t\\tconstructor: THREE.Ray,\\n\\n\\t\\tset: function ( origin, direction ) {\\n\\n\\t\\t\\tthis.origin.copy( origin );\\n\\t\\t\\tthis.direction.copy( direction );\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tclone: function () {\\n\\n\\t\\t\\treturn new this.constructor().copy( this );\\n\\n\\t\\t},\\n\\n\\t\\tcopy: function ( ray ) {\\n\\n\\t\\t\\tthis.origin.copy( ray.origin );\\n\\t\\t\\tthis.direction.copy( ray.direction );\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tat: function ( t, optionalTarget ) {\\n\\n\\t\\t\\tvar result = optionalTarget || new THREE.Vector3();\\n\\n\\t\\t\\treturn result.copy( this.direction ).multiplyScalar( t ).add( this.origin );\\n\\n\\t\\t},\\n\\n\\t\\tlookAt: function ( v ) {\\n\\n\\t\\t\\tthis.direction.copy( v ).sub( this.origin ).normalize();\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\trecast: function () {\\n\\n\\t\\t\\tvar v1 = new THREE.Vector3();\\n\\n\\t\\t\\treturn function recast( t ) {\\n\\n\\t\\t\\t\\tthis.origin.copy( this.at( t, v1 ) );\\n\\n\\t\\t\\t\\treturn this;\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\t\\tclosestPointToPoint: function ( point, optionalTarget ) {\\n\\n\\t\\t\\tvar result = optionalTarget || new THREE.Vector3();\\n\\t\\t\\tresult.subVectors( point, this.origin );\\n\\t\\t\\tvar directionDistance = result.dot( this.direction );\\n\\n\\t\\t\\tif ( directionDistance < 0 ) {\\n\\n\\t\\t\\t\\treturn result.copy( this.origin );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn result.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\\n\\n\\t\\t},\\n\\n\\t\\tdistanceToPoint: function ( point ) {\\n\\n\\t\\t\\treturn Math.sqrt( this.distanceSqToPoint( point ) );\\n\\n\\t\\t},\\n\\n\\t\\tdistanceSqToPoint: function () {\\n\\n\\t\\t\\tvar v1 = new THREE.Vector3();\\n\\n\\t\\t\\treturn function distanceSqToPoint( point ) {\\n\\n\\t\\t\\t\\tvar directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );\\n\\n\\t\\t\\t\\t// point behind the ray\\n\\n\\t\\t\\t\\tif ( directionDistance < 0 ) {\\n\\n\\t\\t\\t\\t\\treturn this.origin.distanceToSquared( point );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tv1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\\n\\n\\t\\t\\t\\treturn v1.distanceToSquared( point );\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\t\\tdistanceSqToSegment: function () {\\n\\n\\t\\t\\tvar segCenter = new THREE.Vector3();\\n\\t\\t\\tvar segDir = new THREE.Vector3();\\n\\t\\t\\tvar diff = new THREE.Vector3();\\n\\n\\t\\t\\treturn function distanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\\n\\n\\t\\t\\t\\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\\n\\t\\t\\t\\t// It returns the min distance between the ray and the segment\\n\\t\\t\\t\\t// defined by v0 and v1\\n\\t\\t\\t\\t// It can also set two optional targets :\\n\\t\\t\\t\\t// - The closest point on the ray\\n\\t\\t\\t\\t// - The closest point on the segment\\n\\n\\t\\t\\t\\tsegCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\\n\\t\\t\\t\\tsegDir.copy( v1 ).sub( v0 ).normalize();\\n\\t\\t\\t\\tdiff.copy( this.origin ).sub( segCenter );\\n\\n\\t\\t\\t\\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\\n\\t\\t\\t\\tvar a01 = - this.direction.dot( segDir );\\n\\t\\t\\t\\tvar b0 = diff.dot( this.direction );\\n\\t\\t\\t\\tvar b1 = - diff.dot( segDir );\\n\\t\\t\\t\\tvar c = diff.lengthSq();\\n\\t\\t\\t\\tvar det = Math.abs( 1 - a01 * a01 );\\n\\t\\t\\t\\tvar s0, s1, sqrDist, extDet;\\n\\n\\t\\t\\t\\tif ( det > 0 ) {\\n\\n\\t\\t\\t\\t\\t// The ray and segment are not parallel.\\n\\n\\t\\t\\t\\t\\ts0 = a01 * b1 - b0;\\n\\t\\t\\t\\t\\ts1 = a01 * b0 - b1;\\n\\t\\t\\t\\t\\textDet = segExtent * det;\\n\\n\\t\\t\\t\\t\\tif ( s0 >= 0 ) {\\n\\n\\t\\t\\t\\t\\t\\tif ( s1 >= - extDet ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tif ( s1 <= extDet ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t// region 0\\n\\t\\t\\t\\t\\t\\t\\t\\t// Minimum at interior points of ray and segment.\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tvar invDet = 1 / det;\\n\\t\\t\\t\\t\\t\\t\\t\\ts0 *= invDet;\\n\\t\\t\\t\\t\\t\\t\\t\\ts1 *= invDet;\\n\\t\\t\\t\\t\\t\\t\\t\\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\\n\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t// region 1\\n\\n\\t\\t\\t\\t\\t\\t\\t\\ts1 = segExtent;\\n\\t\\t\\t\\t\\t\\t\\t\\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\\n\\t\\t\\t\\t\\t\\t\\t\\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\\n\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\t\\t// region 5\\n\\n\\t\\t\\t\\t\\t\\t\\ts1 = - segExtent;\\n\\t\\t\\t\\t\\t\\t\\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\\n\\t\\t\\t\\t\\t\\t\\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\tif ( s1 <= - extDet ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t// region 4\\n\\n\\t\\t\\t\\t\\t\\t\\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\\n\\t\\t\\t\\t\\t\\t\\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\\n\\t\\t\\t\\t\\t\\t\\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\\n\\n\\t\\t\\t\\t\\t\\t} else if ( s1 <= extDet ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t// region 3\\n\\n\\t\\t\\t\\t\\t\\t\\ts0 = 0;\\n\\t\\t\\t\\t\\t\\t\\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\\n\\t\\t\\t\\t\\t\\t\\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\\n\\n\\t\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\t\\t// region 2\\n\\n\\t\\t\\t\\t\\t\\t\\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\\n\\t\\t\\t\\t\\t\\t\\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\\n\\t\\t\\t\\t\\t\\t\\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t// Ray and segment are parallel.\\n\\n\\t\\t\\t\\t\\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\\n\\t\\t\\t\\t\\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\\n\\t\\t\\t\\t\\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( optionalPointOnRay ) {\\n\\n\\t\\t\\t\\t\\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( optionalPointOnSegment ) {\\n\\n\\t\\t\\t\\t\\toptionalPointOnSegment.copy( segDir ).multiplyScalar( s1 ).add( segCenter );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn sqrDist;\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\t\\tintersectSphere: function () {\\n\\n\\t\\t\\tvar v1 = new THREE.Vector3();\\n\\n\\t\\t\\treturn function intersectSphere( sphere, optionalTarget ) {\\n\\n\\t\\t\\t\\tv1.subVectors( sphere.center, this.origin );\\n\\t\\t\\t\\tvar tca = v1.dot( this.direction );\\n\\t\\t\\t\\tvar d2 = v1.dot( v1 ) - tca * tca;\\n\\t\\t\\t\\tvar radius2 = sphere.radius * sphere.radius;\\n\\n\\t\\t\\t\\tif ( d2 > radius2 ) return null;\\n\\n\\t\\t\\t\\tvar thc = Math.sqrt( radius2 - d2 );\\n\\n\\t\\t\\t\\t// t0 = first intersect point - entrance on front of sphere\\n\\t\\t\\t\\tvar t0 = tca - thc;\\n\\n\\t\\t\\t\\t// t1 = second intersect point - exit point on back of sphere\\n\\t\\t\\t\\tvar t1 = tca + thc;\\n\\n\\t\\t\\t\\t// test to see if both t0 and t1 are behind the ray - if so, return null\\n\\t\\t\\t\\tif ( t0 < 0 && t1 < 0 ) return null;\\n\\n\\t\\t\\t\\t// test to see if t0 is behind the ray:\\n\\t\\t\\t\\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\\n\\t\\t\\t\\t// in order to always return an intersect point that is in front of the ray.\\n\\t\\t\\t\\tif ( t0 < 0 ) return this.at( t1, optionalTarget );\\n\\n\\t\\t\\t\\t// else t0 is in front of the ray, so return the first collision point scaled by t0\\n\\t\\t\\t\\treturn this.at( t0, optionalTarget );\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\t\\tintersectsSphere: function ( sphere ) {\\n\\n\\t\\t\\treturn this.distanceToPoint( sphere.center ) <= sphere.radius;\\n\\n\\t\\t},\\n\\n\\t\\tdistanceToPlane: function ( plane ) {\\n\\n\\t\\t\\tvar denominator = plane.normal.dot( this.direction );\\n\\n\\t\\t\\tif ( denominator === 0 ) {\\n\\n\\t\\t\\t\\t// line is coplanar, return origin\\n\\t\\t\\t\\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\\n\\n\\t\\t\\t\\t\\treturn 0;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Null is preferable to undefined since undefined means.... it is undefined\\n\\n\\t\\t\\t\\treturn null;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\\n\\n\\t\\t\\t// Return if the ray never intersects the plane\\n\\n\\t\\t\\treturn t >= 0 ? t :  null;\\n\\n\\t\\t},\\n\\n\\t\\tintersectPlane: function ( plane, optionalTarget ) {\\n\\n\\t\\t\\tvar t = this.distanceToPlane( plane );\\n\\n\\t\\t\\tif ( t === null ) {\\n\\n\\t\\t\\t\\treturn null;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn this.at( t, optionalTarget );\\n\\n\\t\\t},\\n\\n\\n\\n\\t\\tintersectsPlane: function ( plane ) {\\n\\n\\t\\t\\t// check if the ray lies on the plane first\\n\\n\\t\\t\\tvar distToPoint = plane.distanceToPoint( this.origin );\\n\\n\\t\\t\\tif ( distToPoint === 0 ) {\\n\\n\\t\\t\\t\\treturn true;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar denominator = plane.normal.dot( this.direction );\\n\\n\\t\\t\\tif ( denominator * distToPoint < 0 ) {\\n\\n\\t\\t\\t\\treturn true;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t// ray origin is behind the plane (and is pointing behind it)\\n\\n\\t\\t\\treturn false;\\n\\n\\t\\t},\\n\\n\\t\\tintersectBox: function ( box, optionalTarget ) {\\n\\n\\t\\t\\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\\n\\n\\t\\t\\tvar invdirx = 1 / this.direction.x,\\n\\t\\t\\t\\tinvdiry = 1 / this.direction.y,\\n\\t\\t\\t\\tinvdirz = 1 / this.direction.z;\\n\\n\\t\\t\\tvar origin = this.origin;\\n\\n\\t\\t\\tif ( invdirx >= 0 ) {\\n\\n\\t\\t\\t\\ttmin = ( box.min.x - origin.x ) * invdirx;\\n\\t\\t\\t\\ttmax = ( box.max.x - origin.x ) * invdirx;\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\ttmin = ( box.max.x - origin.x ) * invdirx;\\n\\t\\t\\t\\ttmax = ( box.min.x - origin.x ) * invdirx;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( invdiry >= 0 ) {\\n\\n\\t\\t\\t\\ttymin = ( box.min.y - origin.y ) * invdiry;\\n\\t\\t\\t\\ttymax = ( box.max.y - origin.y ) * invdiry;\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\ttymin = ( box.max.y - origin.y ) * invdiry;\\n\\t\\t\\t\\ttymax = ( box.min.y - origin.y ) * invdiry;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\\n\\n\\t\\t\\t// These lines also handle the case where tmin or tmax is NaN\\n\\t\\t\\t// (result of 0 * Infinity). x !== x returns true if x is NaN\\n\\n\\t\\t\\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\\n\\n\\t\\t\\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\\n\\n\\t\\t\\tif ( invdirz >= 0 ) {\\n\\n\\t\\t\\t\\ttzmin = ( box.min.z - origin.z ) * invdirz;\\n\\t\\t\\t\\ttzmax = ( box.max.z - origin.z ) * invdirz;\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\ttzmin = ( box.max.z - origin.z ) * invdirz;\\n\\t\\t\\t\\ttzmax = ( box.min.z - origin.z ) * invdirz;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\\n\\n\\t\\t\\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\\n\\n\\t\\t\\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\\n\\n\\t\\t\\t//return point closest to the ray (positive side)\\n\\n\\t\\t\\tif ( tmax < 0 ) return null;\\n\\n\\t\\t\\treturn this.at( tmin >= 0 ? tmin : tmax, optionalTarget );\\n\\n\\t\\t},\\n\\n\\t\\tintersectsBox: ( function () {\\n\\n\\t\\t\\tvar v = new THREE.Vector3();\\n\\n\\t\\t\\treturn function intersectsBox( box ) {\\n\\n\\t\\t\\t\\treturn this.intersectBox( box, v ) !== null;\\n\\n\\t\\t\\t};\\n\\n\\t\\t} )(),\\n\\n\\t\\tintersectTriangle: function () {\\n\\n\\t\\t\\t// Compute the offset origin, edges, and normal.\\n\\t\\t\\tvar diff = new THREE.Vector3();\\n\\t\\t\\tvar edge1 = new THREE.Vector3();\\n\\t\\t\\tvar edge2 = new THREE.Vector3();\\n\\t\\t\\tvar normal = new THREE.Vector3();\\n\\n\\t\\t\\treturn function intersectTriangle( a, b, c, backfaceCulling, optionalTarget ) {\\n\\n\\t\\t\\t\\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\\n\\n\\t\\t\\t\\tedge1.subVectors( b, a );\\n\\t\\t\\t\\tedge2.subVectors( c, a );\\n\\t\\t\\t\\tnormal.crossVectors( edge1, edge2 );\\n\\n\\t\\t\\t\\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\\n\\t\\t\\t\\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\\n\\t\\t\\t\\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\\n\\t\\t\\t\\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\\n\\t\\t\\t\\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\\n\\t\\t\\t\\tvar DdN = this.direction.dot( normal );\\n\\t\\t\\t\\tvar sign;\\n\\n\\t\\t\\t\\tif ( DdN > 0 ) {\\n\\n\\t\\t\\t\\t\\tif ( backfaceCulling ) return null;\\n\\t\\t\\t\\t\\tsign = 1;\\n\\n\\t\\t\\t\\t} else if ( DdN < 0 ) {\\n\\n\\t\\t\\t\\t\\tsign = - 1;\\n\\t\\t\\t\\t\\tDdN = - DdN;\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\treturn null;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tdiff.subVectors( this.origin, a );\\n\\t\\t\\t\\tvar DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );\\n\\n\\t\\t\\t\\t// b1 < 0, no intersection\\n\\t\\t\\t\\tif ( DdQxE2 < 0 ) {\\n\\n\\t\\t\\t\\t\\treturn null;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tvar DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );\\n\\n\\t\\t\\t\\t// b2 < 0, no intersection\\n\\t\\t\\t\\tif ( DdE1xQ < 0 ) {\\n\\n\\t\\t\\t\\t\\treturn null;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// b1+b2 > 1, no intersection\\n\\t\\t\\t\\tif ( DdQxE2 + DdE1xQ > DdN ) {\\n\\n\\t\\t\\t\\t\\treturn null;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Line intersects triangle, check if ray does.\\n\\t\\t\\t\\tvar QdN = - sign * diff.dot( normal );\\n\\n\\t\\t\\t\\t// t < 0, no intersection\\n\\t\\t\\t\\tif ( QdN < 0 ) {\\n\\n\\t\\t\\t\\t\\treturn null;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Ray intersects triangle.\\n\\t\\t\\t\\treturn this.at( QdN / DdN, optionalTarget );\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\t\\tapplyMatrix4: function ( matrix4 ) {\\n\\n\\t\\t\\tthis.direction.add( this.origin ).applyMatrix4( matrix4 );\\n\\t\\t\\tthis.origin.applyMatrix4( matrix4 );\\n\\t\\t\\tthis.direction.sub( this.origin );\\n\\t\\t\\tthis.direction.normalize();\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tequals: function ( ray ) {\\n\\n\\t\\t\\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\t// File:src/math/Sphere.js\\n\\n\\t/**\\n\\t * @author bhouston / http://clara.io\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t */\\n\\n\\tTHREE.Sphere = function ( center, radius ) {\\n\\n\\t\\tthis.center = ( center !== undefined ) ? center : new THREE.Vector3();\\n\\t\\tthis.radius = ( radius !== undefined ) ? radius : 0;\\n\\n\\t};\\n\\n\\tTHREE.Sphere.prototype = {\\n\\n\\t\\tconstructor: THREE.Sphere,\\n\\n\\t\\tset: function ( center, radius ) {\\n\\n\\t\\t\\tthis.center.copy( center );\\n\\t\\t\\tthis.radius = radius;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tsetFromPoints: function () {\\n\\n\\t\\t\\tvar box = new THREE.Box3();\\n\\n\\t\\t\\treturn function setFromPoints( points, optionalCenter ) {\\n\\n\\t\\t\\t\\tvar center = this.center;\\n\\n\\t\\t\\t\\tif ( optionalCenter !== undefined ) {\\n\\n\\t\\t\\t\\t\\tcenter.copy( optionalCenter );\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\tbox.setFromPoints( points ).center( center );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tvar maxRadiusSq = 0;\\n\\n\\t\\t\\t\\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\\n\\n\\t\\t\\t\\t\\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tthis.radius = Math.sqrt( maxRadiusSq );\\n\\n\\t\\t\\t\\treturn this;\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\t\\tclone: function () {\\n\\n\\t\\t\\treturn new this.constructor().copy( this );\\n\\n\\t\\t},\\n\\n\\t\\tcopy: function ( sphere ) {\\n\\n\\t\\t\\tthis.center.copy( sphere.center );\\n\\t\\t\\tthis.radius = sphere.radius;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tempty: function () {\\n\\n\\t\\t\\treturn ( this.radius <= 0 );\\n\\n\\t\\t},\\n\\n\\t\\tcontainsPoint: function ( point ) {\\n\\n\\t\\t\\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\\n\\n\\t\\t},\\n\\n\\t\\tdistanceToPoint: function ( point ) {\\n\\n\\t\\t\\treturn ( point.distanceTo( this.center ) - this.radius );\\n\\n\\t\\t},\\n\\n\\t\\tintersectsSphere: function ( sphere ) {\\n\\n\\t\\t\\tvar radiusSum = this.radius + sphere.radius;\\n\\n\\t\\t\\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\\n\\n\\t\\t},\\n\\n\\t\\tintersectsBox: function ( box ) {\\n\\n\\t\\t\\treturn box.intersectsSphere( this );\\n\\n\\t\\t},\\n\\n\\t\\tintersectsPlane: function ( plane ) {\\n\\n\\t\\t\\t// We use the following equation to compute the signed distance from\\n\\t\\t\\t// the center of the sphere to the plane.\\n\\t\\t\\t//\\n\\t\\t\\t// distance = q * n - d\\n\\t\\t\\t//\\n\\t\\t\\t// If this distance is greater than the radius of the sphere,\\n\\t\\t\\t// then there is no intersection.\\n\\n\\t\\t\\treturn Math.abs( this.center.dot( plane.normal ) - plane.constant ) <= this.radius;\\n\\n\\t\\t},\\n\\n\\t\\tclampPoint: function ( point, optionalTarget ) {\\n\\n\\t\\t\\tvar deltaLengthSq = this.center.distanceToSquared( point );\\n\\n\\t\\t\\tvar result = optionalTarget || new THREE.Vector3();\\n\\n\\t\\t\\tresult.copy( point );\\n\\n\\t\\t\\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\\n\\n\\t\\t\\t\\tresult.sub( this.center ).normalize();\\n\\t\\t\\t\\tresult.multiplyScalar( this.radius ).add( this.center );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn result;\\n\\n\\t\\t},\\n\\n\\t\\tgetBoundingBox: function ( optionalTarget ) {\\n\\n\\t\\t\\tvar box = optionalTarget || new THREE.Box3();\\n\\n\\t\\t\\tbox.set( this.center, this.center );\\n\\t\\t\\tbox.expandByScalar( this.radius );\\n\\n\\t\\t\\treturn box;\\n\\n\\t\\t},\\n\\n\\t\\tapplyMatrix4: function ( matrix ) {\\n\\n\\t\\t\\tthis.center.applyMatrix4( matrix );\\n\\t\\t\\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\ttranslate: function ( offset ) {\\n\\n\\t\\t\\tthis.center.add( offset );\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tequals: function ( sphere ) {\\n\\n\\t\\t\\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\t// File:src/math/Frustum.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t * @author bhouston / http://clara.io\\n\\t */\\n\\n\\tTHREE.Frustum = function ( p0, p1, p2, p3, p4, p5 ) {\\n\\n\\t\\tthis.planes = [\\n\\n\\t\\t\\t( p0 !== undefined ) ? p0 : new THREE.Plane(),\\n\\t\\t\\t( p1 !== undefined ) ? p1 : new THREE.Plane(),\\n\\t\\t\\t( p2 !== undefined ) ? p2 : new THREE.Plane(),\\n\\t\\t\\t( p3 !== undefined ) ? p3 : new THREE.Plane(),\\n\\t\\t\\t( p4 !== undefined ) ? p4 : new THREE.Plane(),\\n\\t\\t\\t( p5 !== undefined ) ? p5 : new THREE.Plane()\\n\\n\\t\\t];\\n\\n\\t};\\n\\n\\tTHREE.Frustum.prototype = {\\n\\n\\t\\tconstructor: THREE.Frustum,\\n\\n\\t\\tset: function ( p0, p1, p2, p3, p4, p5 ) {\\n\\n\\t\\t\\tvar planes = this.planes;\\n\\n\\t\\t\\tplanes[ 0 ].copy( p0 );\\n\\t\\t\\tplanes[ 1 ].copy( p1 );\\n\\t\\t\\tplanes[ 2 ].copy( p2 );\\n\\t\\t\\tplanes[ 3 ].copy( p3 );\\n\\t\\t\\tplanes[ 4 ].copy( p4 );\\n\\t\\t\\tplanes[ 5 ].copy( p5 );\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tclone: function () {\\n\\n\\t\\t\\treturn new this.constructor().copy( this );\\n\\n\\t\\t},\\n\\n\\t\\tcopy: function ( frustum ) {\\n\\n\\t\\t\\tvar planes = this.planes;\\n\\n\\t\\t\\tfor ( var i = 0; i < 6; i ++ ) {\\n\\n\\t\\t\\t\\tplanes[ i ].copy( frustum.planes[ i ] );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tsetFromMatrix: function ( m ) {\\n\\n\\t\\t\\tvar planes = this.planes;\\n\\t\\t\\tvar me = m.elements;\\n\\t\\t\\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\\n\\t\\t\\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\\n\\t\\t\\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\\n\\t\\t\\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\\n\\n\\t\\t\\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\\n\\t\\t\\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\\n\\t\\t\\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\\n\\t\\t\\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\\n\\t\\t\\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\\n\\t\\t\\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tintersectsObject: function () {\\n\\n\\t\\t\\tvar sphere = new THREE.Sphere();\\n\\n\\t\\t\\treturn function intersectsObject( object ) {\\n\\n\\t\\t\\t\\tvar geometry = object.geometry;\\n\\n\\t\\t\\t\\tif ( geometry.boundingSphere === null )\\n\\t\\t\\t\\t\\tgeometry.computeBoundingSphere();\\n\\n\\t\\t\\t\\tsphere.copy( geometry.boundingSphere )\\n\\t\\t\\t\\t\\t.applyMatrix4( object.matrixWorld );\\n\\n\\t\\t\\t\\treturn this.intersectsSphere( sphere );\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\t\\tintersectsSprite: function () {\\n\\n\\t\\t\\tvar sphere = new THREE.Sphere();\\n\\n\\t\\t\\treturn function intersectsSprite( sprite ) {\\n\\n\\t\\t\\t\\tsphere.center.set( 0, 0, 0 );\\n\\t\\t\\t\\tsphere.radius = 0.7071067811865476;\\n\\t\\t\\t\\tsphere.applyMatrix4( sprite.matrixWorld );\\n\\n\\t\\t\\t\\treturn this.intersectsSphere( sphere );\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\t\\tintersectsSphere: function ( sphere ) {\\n\\n\\t\\t\\tvar planes = this.planes;\\n\\t\\t\\tvar center = sphere.center;\\n\\t\\t\\tvar negRadius = - sphere.radius;\\n\\n\\t\\t\\tfor ( var i = 0; i < 6; i ++ ) {\\n\\n\\t\\t\\t\\tvar distance = planes[ i ].distanceToPoint( center );\\n\\n\\t\\t\\t\\tif ( distance < negRadius ) {\\n\\n\\t\\t\\t\\t\\treturn false;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn true;\\n\\n\\t\\t},\\n\\n\\t\\tintersectsBox: function () {\\n\\n\\t\\t\\tvar p1 = new THREE.Vector3(),\\n\\t\\t\\t\\tp2 = new THREE.Vector3();\\n\\n\\t\\t\\treturn function intersectsBox( box ) {\\n\\n\\t\\t\\t\\tvar planes = this.planes;\\n\\n\\t\\t\\t\\tfor ( var i = 0; i < 6 ; i ++ ) {\\n\\n\\t\\t\\t\\t\\tvar plane = planes[ i ];\\n\\n\\t\\t\\t\\t\\tp1.x = plane.normal.x > 0 ? box.min.x : box.max.x;\\n\\t\\t\\t\\t\\tp2.x = plane.normal.x > 0 ? box.max.x : box.min.x;\\n\\t\\t\\t\\t\\tp1.y = plane.normal.y > 0 ? box.min.y : box.max.y;\\n\\t\\t\\t\\t\\tp2.y = plane.normal.y > 0 ? box.max.y : box.min.y;\\n\\t\\t\\t\\t\\tp1.z = plane.normal.z > 0 ? box.min.z : box.max.z;\\n\\t\\t\\t\\t\\tp2.z = plane.normal.z > 0 ? box.max.z : box.min.z;\\n\\n\\t\\t\\t\\t\\tvar d1 = plane.distanceToPoint( p1 );\\n\\t\\t\\t\\t\\tvar d2 = plane.distanceToPoint( p2 );\\n\\n\\t\\t\\t\\t\\t// if both outside plane, no intersection\\n\\n\\t\\t\\t\\t\\tif ( d1 < 0 && d2 < 0 ) {\\n\\n\\t\\t\\t\\t\\t\\treturn false;\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn true;\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\n\\t\\tcontainsPoint: function ( point ) {\\n\\n\\t\\t\\tvar planes = this.planes;\\n\\n\\t\\t\\tfor ( var i = 0; i < 6; i ++ ) {\\n\\n\\t\\t\\t\\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\\n\\n\\t\\t\\t\\t\\treturn false;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn true;\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\t// File:src/math/Plane.js\\n\\n\\t/**\\n\\t * @author bhouston / http://clara.io\\n\\t */\\n\\n\\tTHREE.Plane = function ( normal, constant ) {\\n\\n\\t\\tthis.normal = ( normal !== undefined ) ? normal : new THREE.Vector3( 1, 0, 0 );\\n\\t\\tthis.constant = ( constant !== undefined ) ? constant : 0;\\n\\n\\t};\\n\\n\\tTHREE.Plane.prototype = {\\n\\n\\t\\tconstructor: THREE.Plane,\\n\\n\\t\\tset: function ( normal, constant ) {\\n\\n\\t\\t\\tthis.normal.copy( normal );\\n\\t\\t\\tthis.constant = constant;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tsetComponents: function ( x, y, z, w ) {\\n\\n\\t\\t\\tthis.normal.set( x, y, z );\\n\\t\\t\\tthis.constant = w;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\\n\\n\\t\\t\\tthis.normal.copy( normal );\\n\\t\\t\\tthis.constant = - point.dot( this.normal );\\t// must be this.normal, not normal, as this.normal is normalized\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tsetFromCoplanarPoints: function () {\\n\\n\\t\\t\\tvar v1 = new THREE.Vector3();\\n\\t\\t\\tvar v2 = new THREE.Vector3();\\n\\n\\t\\t\\treturn function setFromCoplanarPoints( a, b, c ) {\\n\\n\\t\\t\\t\\tvar normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();\\n\\n\\t\\t\\t\\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\\n\\n\\t\\t\\t\\tthis.setFromNormalAndCoplanarPoint( normal, a );\\n\\n\\t\\t\\t\\treturn this;\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\t\\tclone: function () {\\n\\n\\t\\t\\treturn new this.constructor().copy( this );\\n\\n\\t\\t},\\n\\n\\t\\tcopy: function ( plane ) {\\n\\n\\t\\t\\tthis.normal.copy( plane.normal );\\n\\t\\t\\tthis.constant = plane.constant;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tnormalize: function () {\\n\\n\\t\\t\\t// Note: will lead to a divide by zero if the plane is invalid.\\n\\n\\t\\t\\tvar inverseNormalLength = 1.0 / this.normal.length();\\n\\t\\t\\tthis.normal.multiplyScalar( inverseNormalLength );\\n\\t\\t\\tthis.constant *= inverseNormalLength;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tnegate: function () {\\n\\n\\t\\t\\tthis.constant *= - 1;\\n\\t\\t\\tthis.normal.negate();\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tdistanceToPoint: function ( point ) {\\n\\n\\t\\t\\treturn this.normal.dot( point ) + this.constant;\\n\\n\\t\\t},\\n\\n\\t\\tdistanceToSphere: function ( sphere ) {\\n\\n\\t\\t\\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\\n\\n\\t\\t},\\n\\n\\t\\tprojectPoint: function ( point, optionalTarget ) {\\n\\n\\t\\t\\treturn this.orthoPoint( point, optionalTarget ).sub( point ).negate();\\n\\n\\t\\t},\\n\\n\\t\\torthoPoint: function ( point, optionalTarget ) {\\n\\n\\t\\t\\tvar perpendicularMagnitude = this.distanceToPoint( point );\\n\\n\\t\\t\\tvar result = optionalTarget || new THREE.Vector3();\\n\\t\\t\\treturn result.copy( this.normal ).multiplyScalar( perpendicularMagnitude );\\n\\n\\t\\t},\\n\\n\\t\\tintersectLine: function () {\\n\\n\\t\\t\\tvar v1 = new THREE.Vector3();\\n\\n\\t\\t\\treturn function intersectLine( line, optionalTarget ) {\\n\\n\\t\\t\\t\\tvar result = optionalTarget || new THREE.Vector3();\\n\\n\\t\\t\\t\\tvar direction = line.delta( v1 );\\n\\n\\t\\t\\t\\tvar denominator = this.normal.dot( direction );\\n\\n\\t\\t\\t\\tif ( denominator === 0 ) {\\n\\n\\t\\t\\t\\t\\t// line is coplanar, return origin\\n\\t\\t\\t\\t\\tif ( this.distanceToPoint( line.start ) === 0 ) {\\n\\n\\t\\t\\t\\t\\t\\treturn result.copy( line.start );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t// Unsure if this is the correct method to handle this case.\\n\\t\\t\\t\\t\\treturn undefined;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\\n\\n\\t\\t\\t\\tif ( t < 0 || t > 1 ) {\\n\\n\\t\\t\\t\\t\\treturn undefined;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn result.copy( direction ).multiplyScalar( t ).add( line.start );\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\t\\tintersectsLine: function ( line ) {\\n\\n\\t\\t\\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\\n\\n\\t\\t\\tvar startSign = this.distanceToPoint( line.start );\\n\\t\\t\\tvar endSign = this.distanceToPoint( line.end );\\n\\n\\t\\t\\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\\n\\n\\t\\t},\\n\\n\\t\\tintersectsBox: function ( box ) {\\n\\n\\t\\t\\treturn box.intersectsPlane( this );\\n\\n\\t\\t},\\n\\n\\t\\tintersectsSphere: function ( sphere ) {\\n\\n\\t\\t\\treturn sphere.intersectsPlane( this );\\n\\n\\t\\t},\\n\\n\\t\\tcoplanarPoint: function ( optionalTarget ) {\\n\\n\\t\\t\\tvar result = optionalTarget || new THREE.Vector3();\\n\\t\\t\\treturn result.copy( this.normal ).multiplyScalar( - this.constant );\\n\\n\\t\\t},\\n\\n\\t\\tapplyMatrix4: function () {\\n\\n\\t\\t\\tvar v1 = new THREE.Vector3();\\n\\t\\t\\tvar m1 = new THREE.Matrix3();\\n\\n\\t\\t\\treturn function applyMatrix4( matrix, optionalNormalMatrix ) {\\n\\n\\t\\t\\t\\tvar referencePoint = this.coplanarPoint( v1 ).applyMatrix4( matrix );\\n\\n\\t\\t\\t\\t// transform normal based on theory here:\\n\\t\\t\\t\\t// http://www.songho.ca/opengl/gl_normaltransform.html\\n\\t\\t\\t\\tvar normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );\\n\\t\\t\\t\\tvar normal = this.normal.applyMatrix3( normalMatrix ).normalize();\\n\\n\\t\\t\\t\\t// recalculate constant (like in setFromNormalAndCoplanarPoint)\\n\\t\\t\\t\\tthis.constant = - referencePoint.dot( normal );\\n\\n\\t\\t\\t\\treturn this;\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\t\\ttranslate: function ( offset ) {\\n\\n\\t\\t\\tthis.constant = this.constant - offset.dot( this.normal );\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tequals: function ( plane ) {\\n\\n\\t\\t\\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\t// File:src/math/Spherical.js\\n\\n\\t/**\\n\\t * @author bhouston / http://clara.io\\n\\t * @author WestLangley / http://github.com/WestLangley\\n\\t *\\n\\t * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\\n\\t *\\n\\t * The poles (phi) are at the positive and negative y axis.\\n\\t * The equator starts at positive z.\\n\\t */\\n\\n\\tTHREE.Spherical = function ( radius, phi, theta ) {\\n\\n\\t\\tthis.radius = ( radius !== undefined ) ? radius : 1.0;\\n\\t\\tthis.phi = ( phi !== undefined ) ? phi : 0; // up / down towards top and bottom pole\\n\\t\\tthis.theta = ( theta !== undefined ) ? theta : 0; // around the equator of the sphere\\n\\n\\t\\treturn this;\\n\\n\\t};\\n\\n\\tTHREE.Spherical.prototype = {\\n\\n\\t\\tconstructor: THREE.Spherical,\\n\\n\\t\\tset: function ( radius, phi, theta ) {\\n\\n\\t\\t\\tthis.radius = radius;\\n\\t\\t\\tthis.phi = phi;\\n\\t\\t\\tthis.theta = theta;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tclone: function () {\\n\\n\\t\\t\\treturn new this.constructor().copy( this );\\n\\n\\t\\t},\\n\\n\\t\\tcopy: function ( other ) {\\n\\n\\t\\t\\tthis.radius.copy( other.radius );\\n\\t\\t\\tthis.phi.copy( other.phi );\\n\\t\\t\\tthis.theta.copy( other.theta );\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\t// restrict phi to be betwee EPS and PI-EPS\\n\\t\\tmakeSafe: function() {\\n\\n\\t\\t\\tvar EPS = 0.000001;\\n\\t\\t\\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tsetFromVector3: function( vec3 ) {\\n\\n\\t\\t\\tthis.radius = vec3.length();\\n\\n\\t\\t\\tif ( this.radius === 0 ) {\\n\\n\\t\\t\\t\\tthis.theta = 0;\\n\\t\\t\\t\\tthis.phi = 0;\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\tthis.theta = Math.atan2( vec3.x, vec3.z ); // equator angle around y-up axis\\n\\t\\t\\t\\tthis.phi = Math.acos( THREE.Math.clamp( vec3.y / this.radius, - 1, 1 ) ); // polar angle\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t};\\n\\n\\t// File:src/math/Math.js\\n\\n\\t/**\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t */\\n\\n\\tTHREE.Math = {\\n\\n\\t\\tDEG2RAD: Math.PI / 180,\\n\\t\\tRAD2DEG: 180 / Math.PI,\\n\\n\\t\\tgenerateUUID: function () {\\n\\n\\t\\t\\t// http://www.broofa.com/Tools/Math.uuid.htm\\n\\n\\t\\t\\tvar chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split( '' );\\n\\t\\t\\tvar uuid = new Array( 36 );\\n\\t\\t\\tvar rnd = 0, r;\\n\\n\\t\\t\\treturn function generateUUID() {\\n\\n\\t\\t\\t\\tfor ( var i = 0; i < 36; i ++ ) {\\n\\n\\t\\t\\t\\t\\tif ( i === 8 || i === 13 || i === 18 || i === 23 ) {\\n\\n\\t\\t\\t\\t\\t\\tuuid[ i ] = '-';\\n\\n\\t\\t\\t\\t\\t} else if ( i === 14 ) {\\n\\n\\t\\t\\t\\t\\t\\tuuid[ i ] = '4';\\n\\n\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\tif ( rnd <= 0x02 ) rnd = 0x2000000 + ( Math.random() * 0x1000000 ) | 0;\\n\\t\\t\\t\\t\\t\\tr = rnd & 0xf;\\n\\t\\t\\t\\t\\t\\trnd = rnd >> 4;\\n\\t\\t\\t\\t\\t\\tuuid[ i ] = chars[ ( i === 19 ) ? ( r & 0x3 ) | 0x8 : r ];\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn uuid.join( '' );\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\t\\tclamp: function ( value, min, max ) {\\n\\n\\t\\t\\treturn Math.max( min, Math.min( max, value ) );\\n\\n\\t\\t},\\n\\n\\t\\t// compute euclidian modulo of m % n\\n\\t\\t// https://en.wikipedia.org/wiki/Modulo_operation\\n\\n\\t\\teuclideanModulo: function ( n, m ) {\\n\\n\\t\\t\\treturn ( ( n % m ) + m ) % m;\\n\\n\\t\\t},\\n\\n\\t\\t// Linear mapping from range <a1, a2> to range <b1, b2>\\n\\n\\t\\tmapLinear: function ( x, a1, a2, b1, b2 ) {\\n\\n\\t\\t\\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\\n\\n\\t\\t},\\n\\n\\t\\t// http://en.wikipedia.org/wiki/Smoothstep\\n\\n\\t\\tsmoothstep: function ( x, min, max ) {\\n\\n\\t\\t\\tif ( x <= min ) return 0;\\n\\t\\t\\tif ( x >= max ) return 1;\\n\\n\\t\\t\\tx = ( x - min ) / ( max - min );\\n\\n\\t\\t\\treturn x * x * ( 3 - 2 * x );\\n\\n\\t\\t},\\n\\n\\t\\tsmootherstep: function ( x, min, max ) {\\n\\n\\t\\t\\tif ( x <= min ) return 0;\\n\\t\\t\\tif ( x >= max ) return 1;\\n\\n\\t\\t\\tx = ( x - min ) / ( max - min );\\n\\n\\t\\t\\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\\n\\n\\t\\t},\\n\\n\\t\\trandom16: function () {\\n\\n\\t\\t\\tconsole.warn( 'THREE.Math.random16() has been deprecated. Use Math.random() instead.' );\\n\\t\\t\\treturn Math.random();\\n\\n\\t\\t},\\n\\n\\t\\t// Random integer from <low, high> interval\\n\\n\\t\\trandInt: function ( low, high ) {\\n\\n\\t\\t\\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\\n\\n\\t\\t},\\n\\n\\t\\t// Random float from <low, high> interval\\n\\n\\t\\trandFloat: function ( low, high ) {\\n\\n\\t\\t\\treturn low + Math.random() * ( high - low );\\n\\n\\t\\t},\\n\\n\\t\\t// Random float from <-range/2, range/2> interval\\n\\n\\t\\trandFloatSpread: function ( range ) {\\n\\n\\t\\t\\treturn range * ( 0.5 - Math.random() );\\n\\n\\t\\t},\\n\\n\\t\\tdegToRad: function ( degrees ) {\\n\\n\\t\\t\\treturn degrees * THREE.Math.DEG2RAD;\\n\\n\\t\\t},\\n\\n\\t\\tradToDeg: function ( radians ) {\\n\\n\\t\\t\\treturn radians * THREE.Math.RAD2DEG;\\n\\n\\t\\t},\\n\\n\\t\\tisPowerOfTwo: function ( value ) {\\n\\n\\t\\t\\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\\n\\n\\t\\t},\\n\\n\\t\\tnearestPowerOfTwo: function ( value ) {\\n\\n\\t\\t\\treturn Math.pow( 2, Math.round( Math.log( value ) / Math.LN2 ) );\\n\\n\\t\\t},\\n\\n\\t\\tnextPowerOfTwo: function ( value ) {\\n\\n\\t\\t\\tvalue --;\\n\\t\\t\\tvalue |= value >> 1;\\n\\t\\t\\tvalue |= value >> 2;\\n\\t\\t\\tvalue |= value >> 4;\\n\\t\\t\\tvalue |= value >> 8;\\n\\t\\t\\tvalue |= value >> 16;\\n\\t\\t\\tvalue ++;\\n\\n\\t\\t\\treturn value;\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\t// File:src/math/Spline.js\\n\\n\\t/**\\n\\t * Spline from Tween.js, slightly optimized (and trashed)\\n\\t * http://sole.github.com/tween.js/examples/05_spline.html\\n\\t *\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t */\\n\\n\\tTHREE.Spline = function ( points ) {\\n\\n\\t\\tthis.points = points;\\n\\n\\t\\tvar c = [], v3 = { x: 0, y: 0, z: 0 },\\n\\t\\tpoint, intPoint, weight, w2, w3,\\n\\t\\tpa, pb, pc, pd;\\n\\n\\t\\tthis.initFromArray = function ( a ) {\\n\\n\\t\\t\\tthis.points = [];\\n\\n\\t\\t\\tfor ( var i = 0; i < a.length; i ++ ) {\\n\\n\\t\\t\\t\\tthis.points[ i ] = { x: a[ i ][ 0 ], y: a[ i ][ 1 ], z: a[ i ][ 2 ] };\\n\\n\\t\\t\\t}\\n\\n\\t\\t};\\n\\n\\t\\tthis.getPoint = function ( k ) {\\n\\n\\t\\t\\tpoint = ( this.points.length - 1 ) * k;\\n\\t\\t\\tintPoint = Math.floor( point );\\n\\t\\t\\tweight = point - intPoint;\\n\\n\\t\\t\\tc[ 0 ] = intPoint === 0 ? intPoint : intPoint - 1;\\n\\t\\t\\tc[ 1 ] = intPoint;\\n\\t\\t\\tc[ 2 ] = intPoint  > this.points.length - 2 ? this.points.length - 1 : intPoint + 1;\\n\\t\\t\\tc[ 3 ] = intPoint  > this.points.length - 3 ? this.points.length - 1 : intPoint + 2;\\n\\n\\t\\t\\tpa = this.points[ c[ 0 ] ];\\n\\t\\t\\tpb = this.points[ c[ 1 ] ];\\n\\t\\t\\tpc = this.points[ c[ 2 ] ];\\n\\t\\t\\tpd = this.points[ c[ 3 ] ];\\n\\n\\t\\t\\tw2 = weight * weight;\\n\\t\\t\\tw3 = weight * w2;\\n\\n\\t\\t\\tv3.x = interpolate( pa.x, pb.x, pc.x, pd.x, weight, w2, w3 );\\n\\t\\t\\tv3.y = interpolate( pa.y, pb.y, pc.y, pd.y, weight, w2, w3 );\\n\\t\\t\\tv3.z = interpolate( pa.z, pb.z, pc.z, pd.z, weight, w2, w3 );\\n\\n\\t\\t\\treturn v3;\\n\\n\\t\\t};\\n\\n\\t\\tthis.getControlPointsArray = function () {\\n\\n\\t\\t\\tvar i, p, l = this.points.length,\\n\\t\\t\\t\\tcoords = [];\\n\\n\\t\\t\\tfor ( i = 0; i < l; i ++ ) {\\n\\n\\t\\t\\t\\tp = this.points[ i ];\\n\\t\\t\\t\\tcoords[ i ] = [ p.x, p.y, p.z ];\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn coords;\\n\\n\\t\\t};\\n\\n\\t\\t// approximate length by summing linear segments\\n\\n\\t\\tthis.getLength = function ( nSubDivisions ) {\\n\\n\\t\\t\\tvar i, index, nSamples, position,\\n\\t\\t\\t\\tpoint = 0, intPoint = 0, oldIntPoint = 0,\\n\\t\\t\\t\\toldPosition = new THREE.Vector3(),\\n\\t\\t\\t\\ttmpVec = new THREE.Vector3(),\\n\\t\\t\\t\\tchunkLengths = [],\\n\\t\\t\\t\\ttotalLength = 0;\\n\\n\\t\\t\\t// first point has 0 length\\n\\n\\t\\t\\tchunkLengths[ 0 ] = 0;\\n\\n\\t\\t\\tif ( ! nSubDivisions ) nSubDivisions = 100;\\n\\n\\t\\t\\tnSamples = this.points.length * nSubDivisions;\\n\\n\\t\\t\\toldPosition.copy( this.points[ 0 ] );\\n\\n\\t\\t\\tfor ( i = 1; i < nSamples; i ++ ) {\\n\\n\\t\\t\\t\\tindex = i / nSamples;\\n\\n\\t\\t\\t\\tposition = this.getPoint( index );\\n\\t\\t\\t\\ttmpVec.copy( position );\\n\\n\\t\\t\\t\\ttotalLength += tmpVec.distanceTo( oldPosition );\\n\\n\\t\\t\\t\\toldPosition.copy( position );\\n\\n\\t\\t\\t\\tpoint = ( this.points.length - 1 ) * index;\\n\\t\\t\\t\\tintPoint = Math.floor( point );\\n\\n\\t\\t\\t\\tif ( intPoint !== oldIntPoint ) {\\n\\n\\t\\t\\t\\t\\tchunkLengths[ intPoint ] = totalLength;\\n\\t\\t\\t\\t\\toldIntPoint = intPoint;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t// last point ends with total length\\n\\n\\t\\t\\tchunkLengths[ chunkLengths.length ] = totalLength;\\n\\n\\t\\t\\treturn { chunks: chunkLengths, total: totalLength };\\n\\n\\t\\t};\\n\\n\\t\\tthis.reparametrizeByArcLength = function ( samplingCoef ) {\\n\\n\\t\\t\\tvar i, j,\\n\\t\\t\\t\\tindex, indexCurrent, indexNext,\\n\\t\\t\\t\\trealDistance,\\n\\t\\t\\t\\tsampling, position,\\n\\t\\t\\t\\tnewpoints = [],\\n\\t\\t\\t\\ttmpVec = new THREE.Vector3(),\\n\\t\\t\\t\\tsl = this.getLength();\\n\\n\\t\\t\\tnewpoints.push( tmpVec.copy( this.points[ 0 ] ).clone() );\\n\\n\\t\\t\\tfor ( i = 1; i < this.points.length; i ++ ) {\\n\\n\\t\\t\\t\\t//tmpVec.copy( this.points[ i - 1 ] );\\n\\t\\t\\t\\t//linearDistance = tmpVec.distanceTo( this.points[ i ] );\\n\\n\\t\\t\\t\\trealDistance = sl.chunks[ i ] - sl.chunks[ i - 1 ];\\n\\n\\t\\t\\t\\tsampling = Math.ceil( samplingCoef * realDistance / sl.total );\\n\\n\\t\\t\\t\\tindexCurrent = ( i - 1 ) / ( this.points.length - 1 );\\n\\t\\t\\t\\tindexNext = i / ( this.points.length - 1 );\\n\\n\\t\\t\\t\\tfor ( j = 1; j < sampling - 1; j ++ ) {\\n\\n\\t\\t\\t\\t\\tindex = indexCurrent + j * ( 1 / sampling ) * ( indexNext - indexCurrent );\\n\\n\\t\\t\\t\\t\\tposition = this.getPoint( index );\\n\\t\\t\\t\\t\\tnewpoints.push( tmpVec.copy( position ).clone() );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tnewpoints.push( tmpVec.copy( this.points[ i ] ).clone() );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.points = newpoints;\\n\\n\\t\\t};\\n\\n\\t\\t// Catmull-Rom\\n\\n\\t\\tfunction interpolate( p0, p1, p2, p3, t, t2, t3 ) {\\n\\n\\t\\t\\tvar v0 = ( p2 - p0 ) * 0.5,\\n\\t\\t\\t\\tv1 = ( p3 - p1 ) * 0.5;\\n\\n\\t\\t\\treturn ( 2 * ( p1 - p2 ) + v0 + v1 ) * t3 + ( - 3 * ( p1 - p2 ) - 2 * v0 - v1 ) * t2 + v0 * t + p1;\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\t// File:src/math/Triangle.js\\n\\n\\t/**\\n\\t * @author bhouston / http://clara.io\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t */\\n\\n\\tTHREE.Triangle = function ( a, b, c ) {\\n\\n\\t\\tthis.a = ( a !== undefined ) ? a : new THREE.Vector3();\\n\\t\\tthis.b = ( b !== undefined ) ? b : new THREE.Vector3();\\n\\t\\tthis.c = ( c !== undefined ) ? c : new THREE.Vector3();\\n\\n\\t};\\n\\n\\tTHREE.Triangle.normal = function () {\\n\\n\\t\\tvar v0 = new THREE.Vector3();\\n\\n\\t\\treturn function normal( a, b, c, optionalTarget ) {\\n\\n\\t\\t\\tvar result = optionalTarget || new THREE.Vector3();\\n\\n\\t\\t\\tresult.subVectors( c, b );\\n\\t\\t\\tv0.subVectors( a, b );\\n\\t\\t\\tresult.cross( v0 );\\n\\n\\t\\t\\tvar resultLengthSq = result.lengthSq();\\n\\t\\t\\tif ( resultLengthSq > 0 ) {\\n\\n\\t\\t\\t\\treturn result.multiplyScalar( 1 / Math.sqrt( resultLengthSq ) );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn result.set( 0, 0, 0 );\\n\\n\\t\\t};\\n\\n\\t}();\\n\\n\\t// static/instance method to calculate barycentric coordinates\\n\\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\\n\\tTHREE.Triangle.barycoordFromPoint = function () {\\n\\n\\t\\tvar v0 = new THREE.Vector3();\\n\\t\\tvar v1 = new THREE.Vector3();\\n\\t\\tvar v2 = new THREE.Vector3();\\n\\n\\t\\treturn function barycoordFromPoint( point, a, b, c, optionalTarget ) {\\n\\n\\t\\t\\tv0.subVectors( c, a );\\n\\t\\t\\tv1.subVectors( b, a );\\n\\t\\t\\tv2.subVectors( point, a );\\n\\n\\t\\t\\tvar dot00 = v0.dot( v0 );\\n\\t\\t\\tvar dot01 = v0.dot( v1 );\\n\\t\\t\\tvar dot02 = v0.dot( v2 );\\n\\t\\t\\tvar dot11 = v1.dot( v1 );\\n\\t\\t\\tvar dot12 = v1.dot( v2 );\\n\\n\\t\\t\\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\\n\\n\\t\\t\\tvar result = optionalTarget || new THREE.Vector3();\\n\\n\\t\\t\\t// collinear or singular triangle\\n\\t\\t\\tif ( denom === 0 ) {\\n\\n\\t\\t\\t\\t// arbitrary location outside of triangle?\\n\\t\\t\\t\\t// not sure if this is the best idea, maybe should be returning undefined\\n\\t\\t\\t\\treturn result.set( - 2, - 1, - 1 );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar invDenom = 1 / denom;\\n\\t\\t\\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\\n\\t\\t\\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\\n\\n\\t\\t\\t// barycentric coordinates must always sum to 1\\n\\t\\t\\treturn result.set( 1 - u - v, v, u );\\n\\n\\t\\t};\\n\\n\\t}();\\n\\n\\tTHREE.Triangle.containsPoint = function () {\\n\\n\\t\\tvar v1 = new THREE.Vector3();\\n\\n\\t\\treturn function containsPoint( point, a, b, c ) {\\n\\n\\t\\t\\tvar result = THREE.Triangle.barycoordFromPoint( point, a, b, c, v1 );\\n\\n\\t\\t\\treturn ( result.x >= 0 ) && ( result.y >= 0 ) && ( ( result.x + result.y ) <= 1 );\\n\\n\\t\\t};\\n\\n\\t}();\\n\\n\\tTHREE.Triangle.prototype = {\\n\\n\\t\\tconstructor: THREE.Triangle,\\n\\n\\t\\tset: function ( a, b, c ) {\\n\\n\\t\\t\\tthis.a.copy( a );\\n\\t\\t\\tthis.b.copy( b );\\n\\t\\t\\tthis.c.copy( c );\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\\n\\n\\t\\t\\tthis.a.copy( points[ i0 ] );\\n\\t\\t\\tthis.b.copy( points[ i1 ] );\\n\\t\\t\\tthis.c.copy( points[ i2 ] );\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tclone: function () {\\n\\n\\t\\t\\treturn new this.constructor().copy( this );\\n\\n\\t\\t},\\n\\n\\t\\tcopy: function ( triangle ) {\\n\\n\\t\\t\\tthis.a.copy( triangle.a );\\n\\t\\t\\tthis.b.copy( triangle.b );\\n\\t\\t\\tthis.c.copy( triangle.c );\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tarea: function () {\\n\\n\\t\\t\\tvar v0 = new THREE.Vector3();\\n\\t\\t\\tvar v1 = new THREE.Vector3();\\n\\n\\t\\t\\treturn function area() {\\n\\n\\t\\t\\t\\tv0.subVectors( this.c, this.b );\\n\\t\\t\\t\\tv1.subVectors( this.a, this.b );\\n\\n\\t\\t\\t\\treturn v0.cross( v1 ).length() * 0.5;\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\t\\tmidpoint: function ( optionalTarget ) {\\n\\n\\t\\t\\tvar result = optionalTarget || new THREE.Vector3();\\n\\t\\t\\treturn result.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\\n\\n\\t\\t},\\n\\n\\t\\tnormal: function ( optionalTarget ) {\\n\\n\\t\\t\\treturn THREE.Triangle.normal( this.a, this.b, this.c, optionalTarget );\\n\\n\\t\\t},\\n\\n\\t\\tplane: function ( optionalTarget ) {\\n\\n\\t\\t\\tvar result = optionalTarget || new THREE.Plane();\\n\\n\\t\\t\\treturn result.setFromCoplanarPoints( this.a, this.b, this.c );\\n\\n\\t\\t},\\n\\n\\t\\tbarycoordFromPoint: function ( point, optionalTarget ) {\\n\\n\\t\\t\\treturn THREE.Triangle.barycoordFromPoint( point, this.a, this.b, this.c, optionalTarget );\\n\\n\\t\\t},\\n\\n\\t\\tcontainsPoint: function ( point ) {\\n\\n\\t\\t\\treturn THREE.Triangle.containsPoint( point, this.a, this.b, this.c );\\n\\n\\t\\t},\\n\\n\\t\\tclosestPointToPoint: function () {\\n\\n\\t\\t\\tvar plane, edgeList, projectedPoint, closestPoint;\\n\\n\\t\\t\\treturn function closestPointToPoint( point, optionalTarget ) {\\n\\n\\t\\t\\t\\tif ( plane === undefined ) {\\n\\n\\t\\t\\t\\t\\tplane = new THREE.Plane();\\n\\t\\t\\t\\t\\tedgeList = [ new THREE.Line3(), new THREE.Line3(), new THREE.Line3() ];\\n\\t\\t\\t\\t\\tprojectedPoint = new THREE.Vector3();\\n\\t\\t\\t\\t\\tclosestPoint = new THREE.Vector3();\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tvar result = optionalTarget || new THREE.Vector3();\\n\\t\\t\\t\\tvar minDistance = Infinity;\\n\\n\\t\\t\\t\\t// project the point onto the plane of the triangle\\n\\n\\t\\t\\t\\tplane.setFromCoplanarPoints( this.a, this.b, this.c );\\n\\t\\t\\t\\tplane.projectPoint( point, projectedPoint );\\n\\n\\t\\t\\t\\t// check if the projection lies within the triangle\\n\\n\\t\\t\\t\\tif( this.containsPoint( projectedPoint ) === true ) {\\n\\n\\t\\t\\t\\t\\t// if so, this is the closest point\\n\\n\\t\\t\\t\\t\\tresult.copy( projectedPoint );\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t// if not, the point falls outside the triangle. the result is the closest point to the triangle's edges or vertices\\n\\n\\t\\t\\t\\t\\tedgeList[ 0 ].set( this.a, this.b );\\n\\t\\t\\t\\t\\tedgeList[ 1 ].set( this.b, this.c );\\n\\t\\t\\t\\t\\tedgeList[ 2 ].set( this.c, this.a );\\n\\n\\t\\t\\t\\t\\tfor( var i = 0; i < edgeList.length; i ++ ) {\\n\\n\\t\\t\\t\\t\\t\\tedgeList[ i ].closestPointToPoint( projectedPoint, true, closestPoint );\\n\\n\\t\\t\\t\\t\\t\\tvar distance = projectedPoint.distanceToSquared( closestPoint );\\n\\n\\t\\t\\t\\t\\t\\tif( distance < minDistance ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tminDistance = distance;\\n\\n\\t\\t\\t\\t\\t\\t\\tresult.copy( closestPoint );\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn result;\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\t\\tequals: function ( triangle ) {\\n\\n\\t\\t\\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\t// File:src/math/Interpolant.js\\n\\n\\t/**\\n\\t * Abstract base class of interpolants over parametric samples.\\n\\t *\\n\\t * The parameter domain is one dimensional, typically the time or a path\\n\\t * along a curve defined by the data.\\n\\t *\\n\\t * The sample values can have any dimensionality and derived classes may\\n\\t * apply special interpretations to the data.\\n\\t *\\n\\t * This class provides the interval seek in a Template Method, deferring\\n\\t * the actual interpolation to derived classes.\\n\\t *\\n\\t * Time complexity is O(1) for linear access crossing at most two points\\n\\t * and O(log N) for random access, where N is the number of positions.\\n\\t *\\n\\t * References:\\n\\t *\\n\\t * \\t\\thttp://www.oodesign.com/template-method-pattern.html\\n\\t *\\n\\t * @author tschw\\n\\t */\\n\\n\\tTHREE.Interpolant = function(\\n\\t\\t\\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\\n\\n\\t\\tthis.parameterPositions = parameterPositions;\\n\\t\\tthis._cachedIndex = 0;\\n\\n\\t\\tthis.resultBuffer = resultBuffer !== undefined ?\\n\\t\\t\\t\\tresultBuffer : new sampleValues.constructor( sampleSize );\\n\\t\\tthis.sampleValues = sampleValues;\\n\\t\\tthis.valueSize = sampleSize;\\n\\n\\t};\\n\\n\\tTHREE.Interpolant.prototype = {\\n\\n\\t\\tconstructor: THREE.Interpolant,\\n\\n\\t\\tevaluate: function( t ) {\\n\\n\\t\\t\\tvar pp = this.parameterPositions,\\n\\t\\t\\t\\ti1 = this._cachedIndex,\\n\\n\\t\\t\\t\\tt1 = pp[   i1   ],\\n\\t\\t\\t\\tt0 = pp[ i1 - 1 ];\\n\\n\\t\\t\\tvalidate_interval: {\\n\\n\\t\\t\\t\\tseek: {\\n\\n\\t\\t\\t\\t\\tvar right;\\n\\n\\t\\t\\t\\t\\tlinear_scan: {\\n\\t//- See http://jsperf.com/comparison-to-undefined/3\\n\\t//- slower code:\\n\\t//-\\n\\t//- \\t\\t\\t\\tif ( t >= t1 || t1 === undefined ) {\\n\\t\\t\\t\\t\\t\\tforward_scan: if ( ! ( t < t1 ) ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tfor ( var giveUpAt = i1 + 2; ;) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tif ( t1 === undefined ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif ( t < t0 ) break forward_scan;\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// after end\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\ti1 = pp.length;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tthis._cachedIndex = i1;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\treturn this.afterEnd_( i1 - 1, t, t0 );\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tif ( i1 === giveUpAt ) break; // this loop\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tt0 = t1;\\n\\t\\t\\t\\t\\t\\t\\t\\tt1 = pp[ ++ i1 ];\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tif ( t < t1 ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// we have arrived at the sought interval\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tbreak seek;\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t// prepare binary search on the right side of the index\\n\\t\\t\\t\\t\\t\\t\\tright = pp.length;\\n\\t\\t\\t\\t\\t\\t\\tbreak linear_scan;\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t//- slower code:\\n\\t//-\\t\\t\\t\\t\\tif ( t < t0 || t0 === undefined ) {\\n\\t\\t\\t\\t\\t\\tif ( ! ( t >= t0 ) ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t// looping?\\n\\n\\t\\t\\t\\t\\t\\t\\tvar t1global = pp[ 1 ];\\n\\n\\t\\t\\t\\t\\t\\t\\tif ( t < t1global ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\ti1 = 2; // + 1, using the scan for the details\\n\\t\\t\\t\\t\\t\\t\\t\\tt0 = t1global;\\n\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t// linear reverse scan\\n\\n\\t\\t\\t\\t\\t\\t\\tfor ( var giveUpAt = i1 - 2; ;) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tif ( t0 === undefined ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// before start\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tthis._cachedIndex = 0;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\treturn this.beforeStart_( 0, t, t1 );\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tif ( i1 === giveUpAt ) break; // this loop\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tt1 = t0;\\n\\t\\t\\t\\t\\t\\t\\t\\tt0 = pp[ -- i1 - 1 ];\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tif ( t >= t0 ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// we have arrived at the sought interval\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tbreak seek;\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t// prepare binary search on the left side of the index\\n\\t\\t\\t\\t\\t\\t\\tright = i1;\\n\\t\\t\\t\\t\\t\\t\\ti1 = 0;\\n\\t\\t\\t\\t\\t\\t\\tbreak linear_scan;\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t// the interval is valid\\n\\n\\t\\t\\t\\t\\t\\tbreak validate_interval;\\n\\n\\t\\t\\t\\t\\t} // linear scan\\n\\n\\t\\t\\t\\t\\t// binary search\\n\\n\\t\\t\\t\\t\\twhile ( i1 < right ) {\\n\\n\\t\\t\\t\\t\\t\\tvar mid = ( i1 + right ) >>> 1;\\n\\n\\t\\t\\t\\t\\t\\tif ( t < pp[ mid ] ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tright = mid;\\n\\n\\t\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\t\\ti1 = mid + 1;\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tt1 = pp[   i1   ];\\n\\t\\t\\t\\t\\tt0 = pp[ i1 - 1 ];\\n\\n\\t\\t\\t\\t\\t// check boundary cases, again\\n\\n\\t\\t\\t\\t\\tif ( t0 === undefined ) {\\n\\n\\t\\t\\t\\t\\t\\tthis._cachedIndex = 0;\\n\\t\\t\\t\\t\\t\\treturn this.beforeStart_( 0, t, t1 );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tif ( t1 === undefined ) {\\n\\n\\t\\t\\t\\t\\t\\ti1 = pp.length;\\n\\t\\t\\t\\t\\t\\tthis._cachedIndex = i1;\\n\\t\\t\\t\\t\\t\\treturn this.afterEnd_( i1 - 1, t0, t );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t} // seek\\n\\n\\t\\t\\t\\tthis._cachedIndex = i1;\\n\\n\\t\\t\\t\\tthis.intervalChanged_( i1, t0, t1 );\\n\\n\\t\\t\\t} // validate_interval\\n\\n\\t\\t\\treturn this.interpolate_( i1, t0, t, t1 );\\n\\n\\t\\t},\\n\\n\\t\\tsettings: null, // optional, subclass-specific settings structure\\n\\t\\t// Note: The indirection allows central control of many interpolants.\\n\\n\\t\\t// --- Protected interface\\n\\n\\t\\tDefaultSettings_: {},\\n\\n\\t\\tgetSettings_: function() {\\n\\n\\t\\t\\treturn this.settings || this.DefaultSettings_;\\n\\n\\t\\t},\\n\\n\\t\\tcopySampleValue_: function( index ) {\\n\\n\\t\\t\\t// copies a sample value to the result buffer\\n\\n\\t\\t\\tvar result = this.resultBuffer,\\n\\t\\t\\t\\tvalues = this.sampleValues,\\n\\t\\t\\t\\tstride = this.valueSize,\\n\\t\\t\\t\\toffset = index * stride;\\n\\n\\t\\t\\tfor ( var i = 0; i !== stride; ++ i ) {\\n\\n\\t\\t\\t\\tresult[ i ] = values[ offset + i ];\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn result;\\n\\n\\t\\t},\\n\\n\\t\\t// Template methods for derived classes:\\n\\n\\t\\tinterpolate_: function( i1, t0, t, t1 ) {\\n\\n\\t\\t\\tthrow new Error( \\\"call to abstract method\\\" );\\n\\t\\t\\t// implementations shall return this.resultBuffer\\n\\n\\t\\t},\\n\\n\\t\\tintervalChanged_: function( i1, t0, t1 ) {\\n\\n\\t\\t\\t// empty\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\tObject.assign( THREE.Interpolant.prototype, {\\n\\n\\t\\tbeforeStart_: //( 0, t, t0 ), returns this.resultBuffer\\n\\t\\t\\tTHREE.Interpolant.prototype.copySampleValue_,\\n\\n\\t\\tafterEnd_: //( N-1, tN-1, t ), returns this.resultBuffer\\n\\t\\t\\tTHREE.Interpolant.prototype.copySampleValue_\\n\\n\\t} );\\n\\n\\t// File:src/math/interpolants/CubicInterpolant.js\\n\\n\\t/**\\n\\t * Fast and simple cubic spline interpolant.\\n\\t *\\n\\t * It was derived from a Hermitian construction setting the first derivative\\n\\t * at each sample position to the linear slope between neighboring positions\\n\\t * over their parameter interval.\\n\\t *\\n\\t * @author tschw\\n\\t */\\n\\n\\tTHREE.CubicInterpolant = function(\\n\\t\\t\\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\\n\\n\\t\\tTHREE.Interpolant.call(\\n\\t\\t\\t\\tthis, parameterPositions, sampleValues, sampleSize, resultBuffer );\\n\\n\\t\\tthis._weightPrev = -0;\\n\\t\\tthis._offsetPrev = -0;\\n\\t\\tthis._weightNext = -0;\\n\\t\\tthis._offsetNext = -0;\\n\\n\\t};\\n\\n\\tTHREE.CubicInterpolant.prototype =\\n\\t\\t\\tObject.assign( Object.create( THREE.Interpolant.prototype ), {\\n\\n\\t\\tconstructor: THREE.CubicInterpolant,\\n\\n\\t\\tDefaultSettings_: {\\n\\n\\t\\t\\tendingStart: \\tTHREE.ZeroCurvatureEnding,\\n\\t\\t\\tendingEnd:\\t\\tTHREE.ZeroCurvatureEnding\\n\\n\\t\\t},\\n\\n\\t\\tintervalChanged_: function( i1, t0, t1 ) {\\n\\n\\t\\t\\tvar pp = this.parameterPositions,\\n\\t\\t\\t\\tiPrev = i1 - 2,\\n\\t\\t\\t\\tiNext = i1 + 1,\\n\\n\\t\\t\\t\\ttPrev = pp[ iPrev ],\\n\\t\\t\\t\\ttNext = pp[ iNext ];\\n\\n\\t\\t\\tif ( tPrev === undefined ) {\\n\\n\\t\\t\\t\\tswitch ( this.getSettings_().endingStart ) {\\n\\n\\t\\t\\t\\t\\tcase THREE.ZeroSlopeEnding:\\n\\n\\t\\t\\t\\t\\t\\t// f'(t0) = 0\\n\\t\\t\\t\\t\\t\\tiPrev = i1;\\n\\t\\t\\t\\t\\t\\ttPrev = 2 * t0 - t1;\\n\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\tcase THREE.WrapAroundEnding:\\n\\n\\t\\t\\t\\t\\t\\t// use the other end of the curve\\n\\t\\t\\t\\t\\t\\tiPrev = pp.length - 2;\\n\\t\\t\\t\\t\\t\\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\\n\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\tdefault: // ZeroCurvatureEnding\\n\\n\\t\\t\\t\\t\\t\\t// f''(t0) = 0 a.k.a. Natural Spline\\n\\t\\t\\t\\t\\t\\tiPrev = i1;\\n\\t\\t\\t\\t\\t\\ttPrev = t1;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( tNext === undefined ) {\\n\\n\\t\\t\\t\\tswitch ( this.getSettings_().endingEnd ) {\\n\\n\\t\\t\\t\\t\\tcase THREE.ZeroSlopeEnding:\\n\\n\\t\\t\\t\\t\\t\\t// f'(tN) = 0\\n\\t\\t\\t\\t\\t\\tiNext = i1;\\n\\t\\t\\t\\t\\t\\ttNext = 2 * t1 - t0;\\n\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\tcase THREE.WrapAroundEnding:\\n\\n\\t\\t\\t\\t\\t\\t// use the other end of the curve\\n\\t\\t\\t\\t\\t\\tiNext = 1;\\n\\t\\t\\t\\t\\t\\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\\n\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\tdefault: // ZeroCurvatureEnding\\n\\n\\t\\t\\t\\t\\t\\t// f''(tN) = 0, a.k.a. Natural Spline\\n\\t\\t\\t\\t\\t\\tiNext = i1 - 1;\\n\\t\\t\\t\\t\\t\\ttNext = t0;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar halfDt = ( t1 - t0 ) * 0.5,\\n\\t\\t\\t\\tstride = this.valueSize;\\n\\n\\t\\t\\tthis._weightPrev = halfDt / ( t0 - tPrev );\\n\\t\\t\\tthis._weightNext = halfDt / ( tNext - t1 );\\n\\t\\t\\tthis._offsetPrev = iPrev * stride;\\n\\t\\t\\tthis._offsetNext = iNext * stride;\\n\\n\\t\\t},\\n\\n\\t\\tinterpolate_: function( i1, t0, t, t1 ) {\\n\\n\\t\\t\\tvar result = this.resultBuffer,\\n\\t\\t\\t\\tvalues = this.sampleValues,\\n\\t\\t\\t\\tstride = this.valueSize,\\n\\n\\t\\t\\t\\to1 = i1 * stride,\\t\\to0 = o1 - stride,\\n\\t\\t\\t\\toP = this._offsetPrev, \\toN = this._offsetNext,\\n\\t\\t\\t\\twP = this._weightPrev,\\twN = this._weightNext,\\n\\n\\t\\t\\t\\tp = ( t - t0 ) / ( t1 - t0 ),\\n\\t\\t\\t\\tpp = p * p,\\n\\t\\t\\t\\tppp = pp * p;\\n\\n\\t\\t\\t// evaluate polynomials\\n\\n\\t\\t\\tvar sP =     - wP   * ppp   +         2 * wP    * pp    -          wP   * p;\\n\\t\\t\\tvar s0 = ( 1 + wP ) * ppp   + (-1.5 - 2 * wP )  * pp    + ( -0.5 + wP ) * p     + 1;\\n\\t\\t\\tvar s1 = (-1 - wN ) * ppp   + ( 1.5 +   wN   )  * pp    +    0.5        * p;\\n\\t\\t\\tvar sN =       wN   * ppp   -           wN      * pp;\\n\\n\\t\\t\\t// combine data linearly\\n\\n\\t\\t\\tfor ( var i = 0; i !== stride; ++ i ) {\\n\\n\\t\\t\\t\\tresult[ i ] =\\n\\t\\t\\t\\t\\t\\tsP * values[ oP + i ] +\\n\\t\\t\\t\\t\\t\\ts0 * values[ o0 + i ] +\\n\\t\\t\\t\\t\\t\\ts1 * values[ o1 + i ] +\\n\\t\\t\\t\\t\\t\\tsN * values[ oN + i ];\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn result;\\n\\n\\t\\t}\\n\\n\\t} );\\n\\n\\t// File:src/math/interpolants/DiscreteInterpolant.js\\n\\n\\t/**\\n\\t *\\n\\t * Interpolant that evaluates to the sample value at the position preceeding\\n\\t * the parameter.\\n\\t *\\n\\t * @author tschw\\n\\t */\\n\\n\\tTHREE.DiscreteInterpolant = function(\\n\\t\\t\\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\\n\\n\\t\\tTHREE.Interpolant.call(\\n\\t\\t\\t\\tthis, parameterPositions, sampleValues, sampleSize, resultBuffer );\\n\\n\\t};\\n\\n\\tTHREE.DiscreteInterpolant.prototype =\\n\\t\\t\\tObject.assign( Object.create( THREE.Interpolant.prototype ), {\\n\\n\\t\\tconstructor: THREE.DiscreteInterpolant,\\n\\n\\t\\tinterpolate_: function( i1, t0, t, t1 ) {\\n\\n\\t\\t\\treturn this.copySampleValue_( i1 - 1 );\\n\\n\\t\\t}\\n\\n\\t} );\\n\\n\\t// File:src/math/interpolants/LinearInterpolant.js\\n\\n\\t/**\\n\\t * @author tschw\\n\\t */\\n\\n\\tTHREE.LinearInterpolant = function(\\n\\t\\t\\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\\n\\n\\t\\tTHREE.Interpolant.call(\\n\\t\\t\\t\\tthis, parameterPositions, sampleValues, sampleSize, resultBuffer );\\n\\n\\t};\\n\\n\\tTHREE.LinearInterpolant.prototype =\\n\\t\\t\\tObject.assign( Object.create( THREE.Interpolant.prototype ), {\\n\\n\\t\\tconstructor: THREE.LinearInterpolant,\\n\\n\\t\\tinterpolate_: function( i1, t0, t, t1 ) {\\n\\n\\t\\t\\tvar result = this.resultBuffer,\\n\\t\\t\\t\\tvalues = this.sampleValues,\\n\\t\\t\\t\\tstride = this.valueSize,\\n\\n\\t\\t\\t\\toffset1 = i1 * stride,\\n\\t\\t\\t\\toffset0 = offset1 - stride,\\n\\n\\t\\t\\t\\tweight1 = ( t - t0 ) / ( t1 - t0 ),\\n\\t\\t\\t\\tweight0 = 1 - weight1;\\n\\n\\t\\t\\tfor ( var i = 0; i !== stride; ++ i ) {\\n\\n\\t\\t\\t\\tresult[ i ] =\\n\\t\\t\\t\\t\\t\\tvalues[ offset0 + i ] * weight0 +\\n\\t\\t\\t\\t\\t\\tvalues[ offset1 + i ] * weight1;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn result;\\n\\n\\t\\t}\\n\\n\\t} );\\n\\n\\t// File:src/math/interpolants/QuaternionLinearInterpolant.js\\n\\n\\t/**\\n\\t * Spherical linear unit quaternion interpolant.\\n\\t *\\n\\t * @author tschw\\n\\t */\\n\\n\\tTHREE.QuaternionLinearInterpolant = function(\\n\\t\\t\\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\\n\\n\\t\\tTHREE.Interpolant.call(\\n\\t\\t\\t\\tthis, parameterPositions, sampleValues, sampleSize, resultBuffer );\\n\\n\\t};\\n\\n\\tTHREE.QuaternionLinearInterpolant.prototype =\\n\\t\\t\\tObject.assign( Object.create( THREE.Interpolant.prototype ), {\\n\\n\\t\\tconstructor: THREE.QuaternionLinearInterpolant,\\n\\n\\t\\tinterpolate_: function( i1, t0, t, t1 ) {\\n\\n\\t\\t\\tvar result = this.resultBuffer,\\n\\t\\t\\t\\tvalues = this.sampleValues,\\n\\t\\t\\t\\tstride = this.valueSize,\\n\\n\\t\\t\\t\\toffset = i1 * stride,\\n\\n\\t\\t\\t\\talpha = ( t - t0 ) / ( t1 - t0 );\\n\\n\\t\\t\\tfor ( var end = offset + stride; offset !== end; offset += 4 ) {\\n\\n\\t\\t\\t\\tTHREE.Quaternion.slerpFlat( result, 0,\\n\\t\\t\\t\\t\\t\\tvalues, offset - stride, values, offset, alpha );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn result;\\n\\n\\t\\t}\\n\\n\\t} );\\n\\n\\t// File:src/core/Clock.js\\n\\n\\t/**\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t */\\n\\n\\tTHREE.Clock = function ( autoStart ) {\\n\\n\\t\\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\\n\\n\\t\\tthis.startTime = 0;\\n\\t\\tthis.oldTime = 0;\\n\\t\\tthis.elapsedTime = 0;\\n\\n\\t\\tthis.running = false;\\n\\n\\t};\\n\\n\\tTHREE.Clock.prototype = {\\n\\n\\t\\tconstructor: THREE.Clock,\\n\\n\\t\\tstart: function () {\\n\\n\\t\\t\\tthis.startTime = ( performance || Date ).now();\\n\\n\\t\\t\\tthis.oldTime = this.startTime;\\n\\t\\t\\tthis.running = true;\\n\\n\\t\\t},\\n\\n\\t\\tstop: function () {\\n\\n\\t\\t\\tthis.getElapsedTime();\\n\\t\\t\\tthis.running = false;\\n\\n\\t\\t},\\n\\n\\t\\tgetElapsedTime: function () {\\n\\n\\t\\t\\tthis.getDelta();\\n\\t\\t\\treturn this.elapsedTime;\\n\\n\\t\\t},\\n\\n\\t\\tgetDelta: function () {\\n\\n\\t\\t\\tvar diff = 0;\\n\\n\\t\\t\\tif ( this.autoStart && ! this.running ) {\\n\\n\\t\\t\\t\\tthis.start();\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( this.running ) {\\n\\n\\t\\t\\t\\tvar newTime = ( performance || Date ).now();\\n\\n\\t\\t\\t\\tdiff = ( newTime - this.oldTime ) / 1000;\\n\\t\\t\\t\\tthis.oldTime = newTime;\\n\\n\\t\\t\\t\\tthis.elapsedTime += diff;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn diff;\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\t// File:src/core/EventDispatcher.js\\n\\n\\t/**\\n\\t * https://github.com/mrdoob/eventdispatcher.js/\\n\\t */\\n\\n\\tTHREE.EventDispatcher = function () {};\\n\\n\\tObject.assign( THREE.EventDispatcher.prototype, {\\n\\n\\t\\taddEventListener: function ( type, listener ) {\\n\\n\\t\\t\\tif ( this._listeners === undefined ) this._listeners = {};\\n\\n\\t\\t\\tvar listeners = this._listeners;\\n\\n\\t\\t\\tif ( listeners[ type ] === undefined ) {\\n\\n\\t\\t\\t\\tlisteners[ type ] = [];\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\\n\\n\\t\\t\\t\\tlisteners[ type ].push( listener );\\n\\n\\t\\t\\t}\\n\\n\\t\\t},\\n\\n\\t\\thasEventListener: function ( type, listener ) {\\n\\n\\t\\t\\tif ( this._listeners === undefined ) return false;\\n\\n\\t\\t\\tvar listeners = this._listeners;\\n\\n\\t\\t\\tif ( listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1 ) {\\n\\n\\t\\t\\t\\treturn true;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn false;\\n\\n\\t\\t},\\n\\n\\t\\tremoveEventListener: function ( type, listener ) {\\n\\n\\t\\t\\tif ( this._listeners === undefined ) return;\\n\\n\\t\\t\\tvar listeners = this._listeners;\\n\\t\\t\\tvar listenerArray = listeners[ type ];\\n\\n\\t\\t\\tif ( listenerArray !== undefined ) {\\n\\n\\t\\t\\t\\tvar index = listenerArray.indexOf( listener );\\n\\n\\t\\t\\t\\tif ( index !== - 1 ) {\\n\\n\\t\\t\\t\\t\\tlistenerArray.splice( index, 1 );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t},\\n\\n\\t\\tdispatchEvent: function ( event ) {\\n\\n\\t\\t\\tif ( this._listeners === undefined ) return;\\n\\n\\t\\t\\tvar listeners = this._listeners;\\n\\t\\t\\tvar listenerArray = listeners[ event.type ];\\n\\n\\t\\t\\tif ( listenerArray !== undefined ) {\\n\\n\\t\\t\\t\\tevent.target = this;\\n\\n\\t\\t\\t\\tvar array = [], i = 0;\\n\\t\\t\\t\\tvar length = listenerArray.length;\\n\\n\\t\\t\\t\\tfor ( i = 0; i < length; i ++ ) {\\n\\n\\t\\t\\t\\t\\tarray[ i ] = listenerArray[ i ];\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tfor ( i = 0; i < length; i ++ ) {\\n\\n\\t\\t\\t\\t\\tarray[ i ].call( this, event );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t} );\\n\\n\\t// File:src/core/Layers.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t */\\n\\n\\tTHREE.Layers = function () {\\n\\n\\t\\tthis.mask = 1;\\n\\n\\t};\\n\\n\\tTHREE.Layers.prototype = {\\n\\n\\t\\tconstructor: THREE.Layers,\\n\\n\\t\\tset: function ( channel ) {\\n\\n\\t\\t\\tthis.mask = 1 << channel;\\n\\n\\t\\t},\\n\\n\\t\\tenable: function ( channel ) {\\n\\n\\t\\t\\tthis.mask |= 1 << channel;\\n\\n\\t\\t},\\n\\n\\t\\ttoggle: function ( channel ) {\\n\\n\\t\\t\\tthis.mask ^= 1 << channel;\\n\\n\\t\\t},\\n\\n\\t\\tdisable: function ( channel ) {\\n\\n\\t\\t\\tthis.mask &= ~ ( 1 << channel );\\n\\n\\t\\t},\\n\\n\\t\\ttest: function ( layers ) {\\n\\n\\t\\t\\treturn ( this.mask & layers.mask ) !== 0;\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\t// File:src/core/Raycaster.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t * @author bhouston / http://clara.io/\\n\\t * @author stephomi / http://stephaneginier.com/\\n\\t */\\n\\n\\t( function ( THREE ) {\\n\\n\\t\\tTHREE.Raycaster = function ( origin, direction, near, far ) {\\n\\n\\t\\t\\tthis.ray = new THREE.Ray( origin, direction );\\n\\t\\t\\t// direction is assumed to be normalized (for accurate distance calculations)\\n\\n\\t\\t\\tthis.near = near || 0;\\n\\t\\t\\tthis.far = far || Infinity;\\n\\n\\t\\t\\tthis.params = {\\n\\t\\t\\t\\tMesh: {},\\n\\t\\t\\t\\tLine: {},\\n\\t\\t\\t\\tLOD: {},\\n\\t\\t\\t\\tPoints: { threshold: 1 },\\n\\t\\t\\t\\tSprite: {}\\n\\t\\t\\t};\\n\\n\\t\\t\\tObject.defineProperties( this.params, {\\n\\t\\t\\t\\tPointCloud: {\\n\\t\\t\\t\\t\\tget: function () {\\n\\t\\t\\t\\t\\t\\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\\n\\t\\t\\t\\t\\t\\treturn this.Points;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t} );\\n\\n\\t\\t};\\n\\n\\t\\tfunction ascSort( a, b ) {\\n\\n\\t\\t\\treturn a.distance - b.distance;\\n\\n\\t\\t}\\n\\n\\t\\tfunction intersectObject( object, raycaster, intersects, recursive ) {\\n\\n\\t\\t\\tif ( object.visible === false ) return;\\n\\n\\t\\t\\tobject.raycast( raycaster, intersects );\\n\\n\\t\\t\\tif ( recursive === true ) {\\n\\n\\t\\t\\t\\tvar children = object.children;\\n\\n\\t\\t\\t\\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\\n\\n\\t\\t\\t\\t\\tintersectObject( children[ i ], raycaster, intersects, true );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\t//\\n\\n\\t\\tTHREE.Raycaster.prototype = {\\n\\n\\t\\t\\tconstructor: THREE.Raycaster,\\n\\n\\t\\t\\tlinePrecision: 1,\\n\\n\\t\\t\\tset: function ( origin, direction ) {\\n\\n\\t\\t\\t\\t// direction is assumed to be normalized (for accurate distance calculations)\\n\\n\\t\\t\\t\\tthis.ray.set( origin, direction );\\n\\n\\t\\t\\t},\\n\\n\\t\\t\\tsetFromCamera: function ( coords, camera ) {\\n\\n\\t\\t\\t\\tif ( camera instanceof THREE.PerspectiveCamera ) {\\n\\n\\t\\t\\t\\t\\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\\n\\t\\t\\t\\t\\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\\n\\n\\t\\t\\t\\t} else if ( camera instanceof THREE.OrthographicCamera ) {\\n\\n\\t\\t\\t\\t\\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\\n\\t\\t\\t\\t\\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t},\\n\\n\\t\\t\\tintersectObject: function ( object, recursive ) {\\n\\n\\t\\t\\t\\tvar intersects = [];\\n\\n\\t\\t\\t\\tintersectObject( object, this, intersects, recursive );\\n\\n\\t\\t\\t\\tintersects.sort( ascSort );\\n\\n\\t\\t\\t\\treturn intersects;\\n\\n\\t\\t\\t},\\n\\n\\t\\t\\tintersectObjects: function ( objects, recursive ) {\\n\\n\\t\\t\\t\\tvar intersects = [];\\n\\n\\t\\t\\t\\tif ( Array.isArray( objects ) === false ) {\\n\\n\\t\\t\\t\\t\\tconsole.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\\n\\t\\t\\t\\t\\treturn intersects;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\\n\\n\\t\\t\\t\\t\\tintersectObject( objects[ i ], this, intersects, recursive );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tintersects.sort( ascSort );\\n\\n\\t\\t\\t\\treturn intersects;\\n\\n\\t\\t\\t}\\n\\n\\t\\t};\\n\\n\\t}( THREE ) );\\n\\n\\t// File:src/core/Object3D.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t * @author mikael emtinger / http://gomo.se/\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t * @author WestLangley / http://github.com/WestLangley\\n\\t * @author elephantatwork / www.elephantatwork.ch\\n\\t */\\n\\n\\tTHREE.Object3D = function () {\\n\\n\\t\\tObject.defineProperty( this, 'id', { value: THREE.Object3DIdCount ++ } );\\n\\n\\t\\tthis.uuid = THREE.Math.generateUUID();\\n\\n\\t\\tthis.name = '';\\n\\t\\tthis.type = 'Object3D';\\n\\n\\t\\tthis.parent = null;\\n\\t\\tthis.children = [];\\n\\n\\t\\tthis.up = THREE.Object3D.DefaultUp.clone();\\n\\n\\t\\tvar position = new THREE.Vector3();\\n\\t\\tvar rotation = new THREE.Euler();\\n\\t\\tvar quaternion = new THREE.Quaternion();\\n\\t\\tvar scale = new THREE.Vector3( 1, 1, 1 );\\n\\n\\t\\tfunction onRotationChange() {\\n\\n\\t\\t\\tquaternion.setFromEuler( rotation, false );\\n\\n\\t\\t}\\n\\n\\t\\tfunction onQuaternionChange() {\\n\\n\\t\\t\\trotation.setFromQuaternion( quaternion, undefined, false );\\n\\n\\t\\t}\\n\\n\\t\\trotation.onChange( onRotationChange );\\n\\t\\tquaternion.onChange( onQuaternionChange );\\n\\n\\t\\tObject.defineProperties( this, {\\n\\t\\t\\tposition: {\\n\\t\\t\\t\\tenumerable: true,\\n\\t\\t\\t\\tvalue: position\\n\\t\\t\\t},\\n\\t\\t\\trotation: {\\n\\t\\t\\t\\tenumerable: true,\\n\\t\\t\\t\\tvalue: rotation\\n\\t\\t\\t},\\n\\t\\t\\tquaternion: {\\n\\t\\t\\t\\tenumerable: true,\\n\\t\\t\\t\\tvalue: quaternion\\n\\t\\t\\t},\\n\\t\\t\\tscale: {\\n\\t\\t\\t\\tenumerable: true,\\n\\t\\t\\t\\tvalue: scale\\n\\t\\t\\t},\\n\\t\\t\\tmodelViewMatrix: {\\n\\t\\t\\t\\tvalue: new THREE.Matrix4()\\n\\t\\t\\t},\\n\\t\\t\\tnormalMatrix: {\\n\\t\\t\\t\\tvalue: new THREE.Matrix3()\\n\\t\\t\\t}\\n\\t\\t} );\\n\\n\\t\\tthis.matrix = new THREE.Matrix4();\\n\\t\\tthis.matrixWorld = new THREE.Matrix4();\\n\\n\\t\\tthis.matrixAutoUpdate = THREE.Object3D.DefaultMatrixAutoUpdate;\\n\\t\\tthis.matrixWorldNeedsUpdate = false;\\n\\n\\t\\tthis.layers = new THREE.Layers();\\n\\t\\tthis.visible = true;\\n\\n\\t\\tthis.castShadow = false;\\n\\t\\tthis.receiveShadow = false;\\n\\n\\t\\tthis.frustumCulled = true;\\n\\t\\tthis.renderOrder = 0;\\n\\n\\t\\tthis.userData = {};\\n\\n\\t};\\n\\n\\tTHREE.Object3D.DefaultUp = new THREE.Vector3( 0, 1, 0 );\\n\\tTHREE.Object3D.DefaultMatrixAutoUpdate = true;\\n\\n\\tObject.assign( THREE.Object3D.prototype, THREE.EventDispatcher.prototype, {\\n\\n\\t\\tapplyMatrix: function ( matrix ) {\\n\\n\\t\\t\\tthis.matrix.multiplyMatrices( matrix, this.matrix );\\n\\n\\t\\t\\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\\n\\n\\t\\t},\\n\\n\\t\\tsetRotationFromAxisAngle: function ( axis, angle ) {\\n\\n\\t\\t\\t// assumes axis is normalized\\n\\n\\t\\t\\tthis.quaternion.setFromAxisAngle( axis, angle );\\n\\n\\t\\t},\\n\\n\\t\\tsetRotationFromEuler: function ( euler ) {\\n\\n\\t\\t\\tthis.quaternion.setFromEuler( euler, true );\\n\\n\\t\\t},\\n\\n\\t\\tsetRotationFromMatrix: function ( m ) {\\n\\n\\t\\t\\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\\n\\n\\t\\t\\tthis.quaternion.setFromRotationMatrix( m );\\n\\n\\t\\t},\\n\\n\\t\\tsetRotationFromQuaternion: function ( q ) {\\n\\n\\t\\t\\t// assumes q is normalized\\n\\n\\t\\t\\tthis.quaternion.copy( q );\\n\\n\\t\\t},\\n\\n\\t\\trotateOnAxis: function () {\\n\\n\\t\\t\\t// rotate object on axis in object space\\n\\t\\t\\t// axis is assumed to be normalized\\n\\n\\t\\t\\tvar q1 = new THREE.Quaternion();\\n\\n\\t\\t\\treturn function rotateOnAxis( axis, angle ) {\\n\\n\\t\\t\\t\\tq1.setFromAxisAngle( axis, angle );\\n\\n\\t\\t\\t\\tthis.quaternion.multiply( q1 );\\n\\n\\t\\t\\t\\treturn this;\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\t\\trotateX: function () {\\n\\n\\t\\t\\tvar v1 = new THREE.Vector3( 1, 0, 0 );\\n\\n\\t\\t\\treturn function rotateX( angle ) {\\n\\n\\t\\t\\t\\treturn this.rotateOnAxis( v1, angle );\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\t\\trotateY: function () {\\n\\n\\t\\t\\tvar v1 = new THREE.Vector3( 0, 1, 0 );\\n\\n\\t\\t\\treturn function rotateY( angle ) {\\n\\n\\t\\t\\t\\treturn this.rotateOnAxis( v1, angle );\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\t\\trotateZ: function () {\\n\\n\\t\\t\\tvar v1 = new THREE.Vector3( 0, 0, 1 );\\n\\n\\t\\t\\treturn function rotateZ( angle ) {\\n\\n\\t\\t\\t\\treturn this.rotateOnAxis( v1, angle );\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\t\\ttranslateOnAxis: function () {\\n\\n\\t\\t\\t// translate object by distance along axis in object space\\n\\t\\t\\t// axis is assumed to be normalized\\n\\n\\t\\t\\tvar v1 = new THREE.Vector3();\\n\\n\\t\\t\\treturn function translateOnAxis( axis, distance ) {\\n\\n\\t\\t\\t\\tv1.copy( axis ).applyQuaternion( this.quaternion );\\n\\n\\t\\t\\t\\tthis.position.add( v1.multiplyScalar( distance ) );\\n\\n\\t\\t\\t\\treturn this;\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\t\\ttranslateX: function () {\\n\\n\\t\\t\\tvar v1 = new THREE.Vector3( 1, 0, 0 );\\n\\n\\t\\t\\treturn function translateX( distance ) {\\n\\n\\t\\t\\t\\treturn this.translateOnAxis( v1, distance );\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\t\\ttranslateY: function () {\\n\\n\\t\\t\\tvar v1 = new THREE.Vector3( 0, 1, 0 );\\n\\n\\t\\t\\treturn function translateY( distance ) {\\n\\n\\t\\t\\t\\treturn this.translateOnAxis( v1, distance );\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\t\\ttranslateZ: function () {\\n\\n\\t\\t\\tvar v1 = new THREE.Vector3( 0, 0, 1 );\\n\\n\\t\\t\\treturn function translateZ( distance ) {\\n\\n\\t\\t\\t\\treturn this.translateOnAxis( v1, distance );\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\t\\tlocalToWorld: function ( vector ) {\\n\\n\\t\\t\\treturn vector.applyMatrix4( this.matrixWorld );\\n\\n\\t\\t},\\n\\n\\t\\tworldToLocal: function () {\\n\\n\\t\\t\\tvar m1 = new THREE.Matrix4();\\n\\n\\t\\t\\treturn function worldToLocal( vector ) {\\n\\n\\t\\t\\t\\treturn vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\t\\tlookAt: function () {\\n\\n\\t\\t\\t// This routine does not support objects with rotated and/or translated parent(s)\\n\\n\\t\\t\\tvar m1 = new THREE.Matrix4();\\n\\n\\t\\t\\treturn function lookAt( vector ) {\\n\\n\\t\\t\\t\\tm1.lookAt( vector, this.position, this.up );\\n\\n\\t\\t\\t\\tthis.quaternion.setFromRotationMatrix( m1 );\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\t\\tadd: function ( object ) {\\n\\n\\t\\t\\tif ( arguments.length > 1 ) {\\n\\n\\t\\t\\t\\tfor ( var i = 0; i < arguments.length; i ++ ) {\\n\\n\\t\\t\\t\\t\\tthis.add( arguments[ i ] );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn this;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( object === this ) {\\n\\n\\t\\t\\t\\tconsole.error( \\\"THREE.Object3D.add: object can't be added as a child of itself.\\\", object );\\n\\t\\t\\t\\treturn this;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( object instanceof THREE.Object3D ) {\\n\\n\\t\\t\\t\\tif ( object.parent !== null ) {\\n\\n\\t\\t\\t\\t\\tobject.parent.remove( object );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tobject.parent = this;\\n\\t\\t\\t\\tobject.dispatchEvent( { type: 'added' } );\\n\\n\\t\\t\\t\\tthis.children.push( object );\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\tconsole.error( \\\"THREE.Object3D.add: object not an instance of THREE.Object3D.\\\", object );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tremove: function ( object ) {\\n\\n\\t\\t\\tif ( arguments.length > 1 ) {\\n\\n\\t\\t\\t\\tfor ( var i = 0; i < arguments.length; i ++ ) {\\n\\n\\t\\t\\t\\t\\tthis.remove( arguments[ i ] );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar index = this.children.indexOf( object );\\n\\n\\t\\t\\tif ( index !== - 1 ) {\\n\\n\\t\\t\\t\\tobject.parent = null;\\n\\n\\t\\t\\t\\tobject.dispatchEvent( { type: 'removed' } );\\n\\n\\t\\t\\t\\tthis.children.splice( index, 1 );\\n\\n\\t\\t\\t}\\n\\n\\t\\t},\\n\\n\\t\\tgetObjectById: function ( id ) {\\n\\n\\t\\t\\treturn this.getObjectByProperty( 'id', id );\\n\\n\\t\\t},\\n\\n\\t\\tgetObjectByName: function ( name ) {\\n\\n\\t\\t\\treturn this.getObjectByProperty( 'name', name );\\n\\n\\t\\t},\\n\\n\\t\\tgetObjectByProperty: function ( name, value ) {\\n\\n\\t\\t\\tif ( this[ name ] === value ) return this;\\n\\n\\t\\t\\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\\n\\n\\t\\t\\t\\tvar child = this.children[ i ];\\n\\t\\t\\t\\tvar object = child.getObjectByProperty( name, value );\\n\\n\\t\\t\\t\\tif ( object !== undefined ) {\\n\\n\\t\\t\\t\\t\\treturn object;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn undefined;\\n\\n\\t\\t},\\n\\n\\t\\tgetWorldPosition: function ( optionalTarget ) {\\n\\n\\t\\t\\tvar result = optionalTarget || new THREE.Vector3();\\n\\n\\t\\t\\tthis.updateMatrixWorld( true );\\n\\n\\t\\t\\treturn result.setFromMatrixPosition( this.matrixWorld );\\n\\n\\t\\t},\\n\\n\\t\\tgetWorldQuaternion: function () {\\n\\n\\t\\t\\tvar position = new THREE.Vector3();\\n\\t\\t\\tvar scale = new THREE.Vector3();\\n\\n\\t\\t\\treturn function getWorldQuaternion( optionalTarget ) {\\n\\n\\t\\t\\t\\tvar result = optionalTarget || new THREE.Quaternion();\\n\\n\\t\\t\\t\\tthis.updateMatrixWorld( true );\\n\\n\\t\\t\\t\\tthis.matrixWorld.decompose( position, result, scale );\\n\\n\\t\\t\\t\\treturn result;\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\t\\tgetWorldRotation: function () {\\n\\n\\t\\t\\tvar quaternion = new THREE.Quaternion();\\n\\n\\t\\t\\treturn function getWorldRotation( optionalTarget ) {\\n\\n\\t\\t\\t\\tvar result = optionalTarget || new THREE.Euler();\\n\\n\\t\\t\\t\\tthis.getWorldQuaternion( quaternion );\\n\\n\\t\\t\\t\\treturn result.setFromQuaternion( quaternion, this.rotation.order, false );\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\t\\tgetWorldScale: function () {\\n\\n\\t\\t\\tvar position = new THREE.Vector3();\\n\\t\\t\\tvar quaternion = new THREE.Quaternion();\\n\\n\\t\\t\\treturn function getWorldScale( optionalTarget ) {\\n\\n\\t\\t\\t\\tvar result = optionalTarget || new THREE.Vector3();\\n\\n\\t\\t\\t\\tthis.updateMatrixWorld( true );\\n\\n\\t\\t\\t\\tthis.matrixWorld.decompose( position, quaternion, result );\\n\\n\\t\\t\\t\\treturn result;\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\t\\tgetWorldDirection: function () {\\n\\n\\t\\t\\tvar quaternion = new THREE.Quaternion();\\n\\n\\t\\t\\treturn function getWorldDirection( optionalTarget ) {\\n\\n\\t\\t\\t\\tvar result = optionalTarget || new THREE.Vector3();\\n\\n\\t\\t\\t\\tthis.getWorldQuaternion( quaternion );\\n\\n\\t\\t\\t\\treturn result.set( 0, 0, 1 ).applyQuaternion( quaternion );\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\t\\traycast: function () {},\\n\\n\\t\\ttraverse: function ( callback ) {\\n\\n\\t\\t\\tcallback( this );\\n\\n\\t\\t\\tvar children = this.children;\\n\\n\\t\\t\\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\\n\\n\\t\\t\\t\\tchildren[ i ].traverse( callback );\\n\\n\\t\\t\\t}\\n\\n\\t\\t},\\n\\n\\t\\ttraverseVisible: function ( callback ) {\\n\\n\\t\\t\\tif ( this.visible === false ) return;\\n\\n\\t\\t\\tcallback( this );\\n\\n\\t\\t\\tvar children = this.children;\\n\\n\\t\\t\\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\\n\\n\\t\\t\\t\\tchildren[ i ].traverseVisible( callback );\\n\\n\\t\\t\\t}\\n\\n\\t\\t},\\n\\n\\t\\ttraverseAncestors: function ( callback ) {\\n\\n\\t\\t\\tvar parent = this.parent;\\n\\n\\t\\t\\tif ( parent !== null ) {\\n\\n\\t\\t\\t\\tcallback( parent );\\n\\n\\t\\t\\t\\tparent.traverseAncestors( callback );\\n\\n\\t\\t\\t}\\n\\n\\t\\t},\\n\\n\\t\\tupdateMatrix: function () {\\n\\n\\t\\t\\tthis.matrix.compose( this.position, this.quaternion, this.scale );\\n\\n\\t\\t\\tthis.matrixWorldNeedsUpdate = true;\\n\\n\\t\\t},\\n\\n\\t\\tupdateMatrixWorld: function ( force ) {\\n\\n\\t\\t\\tif ( this.matrixAutoUpdate === true ) this.updateMatrix();\\n\\n\\t\\t\\tif ( this.matrixWorldNeedsUpdate === true || force === true ) {\\n\\n\\t\\t\\t\\tif ( this.parent === null ) {\\n\\n\\t\\t\\t\\t\\tthis.matrixWorld.copy( this.matrix );\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tthis.matrixWorldNeedsUpdate = false;\\n\\n\\t\\t\\t\\tforce = true;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t// update children\\n\\n\\t\\t\\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\\n\\n\\t\\t\\t\\tthis.children[ i ].updateMatrixWorld( force );\\n\\n\\t\\t\\t}\\n\\n\\t\\t},\\n\\n\\t\\ttoJSON: function ( meta ) {\\n\\n\\t\\t\\t// meta is '' when called from JSON.stringify\\n\\t\\t\\tvar isRootObject = ( meta === undefined || meta === '' );\\n\\n\\t\\t\\tvar output = {};\\n\\n\\t\\t\\t// meta is a hash used to collect geometries, materials.\\n\\t\\t\\t// not providing it implies that this is the root object\\n\\t\\t\\t// being serialized.\\n\\t\\t\\tif ( isRootObject ) {\\n\\n\\t\\t\\t\\t// initialize meta obj\\n\\t\\t\\t\\tmeta = {\\n\\t\\t\\t\\t\\tgeometries: {},\\n\\t\\t\\t\\t\\tmaterials: {},\\n\\t\\t\\t\\t\\ttextures: {},\\n\\t\\t\\t\\t\\timages: {}\\n\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\toutput.metadata = {\\n\\t\\t\\t\\t\\tversion: 4.4,\\n\\t\\t\\t\\t\\ttype: 'Object',\\n\\t\\t\\t\\t\\tgenerator: 'Object3D.toJSON'\\n\\t\\t\\t\\t};\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t// standard Object3D serialization\\n\\n\\t\\t\\tvar object = {};\\n\\n\\t\\t\\tobject.uuid = this.uuid;\\n\\t\\t\\tobject.type = this.type;\\n\\n\\t\\t\\tif ( this.name !== '' ) object.name = this.name;\\n\\t\\t\\tif ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\\n\\t\\t\\tif ( this.castShadow === true ) object.castShadow = true;\\n\\t\\t\\tif ( this.receiveShadow === true ) object.receiveShadow = true;\\n\\t\\t\\tif ( this.visible === false ) object.visible = false;\\n\\n\\t\\t\\tobject.matrix = this.matrix.toArray();\\n\\n\\t\\t\\t//\\n\\n\\t\\t\\tif ( this.geometry !== undefined ) {\\n\\n\\t\\t\\t\\tif ( meta.geometries[ this.geometry.uuid ] === undefined ) {\\n\\n\\t\\t\\t\\t\\tmeta.geometries[ this.geometry.uuid ] = this.geometry.toJSON( meta );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tobject.geometry = this.geometry.uuid;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( this.material !== undefined ) {\\n\\n\\t\\t\\t\\tif ( meta.materials[ this.material.uuid ] === undefined ) {\\n\\n\\t\\t\\t\\t\\tmeta.materials[ this.material.uuid ] = this.material.toJSON( meta );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tobject.material = this.material.uuid;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t//\\n\\n\\t\\t\\tif ( this.children.length > 0 ) {\\n\\n\\t\\t\\t\\tobject.children = [];\\n\\n\\t\\t\\t\\tfor ( var i = 0; i < this.children.length; i ++ ) {\\n\\n\\t\\t\\t\\t\\tobject.children.push( this.children[ i ].toJSON( meta ).object );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( isRootObject ) {\\n\\n\\t\\t\\t\\tvar geometries = extractFromCache( meta.geometries );\\n\\t\\t\\t\\tvar materials = extractFromCache( meta.materials );\\n\\t\\t\\t\\tvar textures = extractFromCache( meta.textures );\\n\\t\\t\\t\\tvar images = extractFromCache( meta.images );\\n\\n\\t\\t\\t\\tif ( geometries.length > 0 ) output.geometries = geometries;\\n\\t\\t\\t\\tif ( materials.length > 0 ) output.materials = materials;\\n\\t\\t\\t\\tif ( textures.length > 0 ) output.textures = textures;\\n\\t\\t\\t\\tif ( images.length > 0 ) output.images = images;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\toutput.object = object;\\n\\n\\t\\t\\treturn output;\\n\\n\\t\\t\\t// extract data from the cache hash\\n\\t\\t\\t// remove metadata on each item\\n\\t\\t\\t// and return as array\\n\\t\\t\\tfunction extractFromCache ( cache ) {\\n\\n\\t\\t\\t\\tvar values = [];\\n\\t\\t\\t\\tfor ( var key in cache ) {\\n\\n\\t\\t\\t\\t\\tvar data = cache[ key ];\\n\\t\\t\\t\\t\\tdelete data.metadata;\\n\\t\\t\\t\\t\\tvalues.push( data );\\n\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\treturn values;\\n\\n\\t\\t\\t}\\n\\n\\t\\t},\\n\\n\\t\\tclone: function ( recursive ) {\\n\\n\\t\\t\\treturn new this.constructor().copy( this, recursive );\\n\\n\\t\\t},\\n\\n\\t\\tcopy: function ( source, recursive ) {\\n\\n\\t\\t\\tif ( recursive === undefined ) recursive = true;\\n\\n\\t\\t\\tthis.name = source.name;\\n\\n\\t\\t\\tthis.up.copy( source.up );\\n\\n\\t\\t\\tthis.position.copy( source.position );\\n\\t\\t\\tthis.quaternion.copy( source.quaternion );\\n\\t\\t\\tthis.scale.copy( source.scale );\\n\\n\\t\\t\\tthis.matrix.copy( source.matrix );\\n\\t\\t\\tthis.matrixWorld.copy( source.matrixWorld );\\n\\n\\t\\t\\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\\n\\t\\t\\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\\n\\n\\t\\t\\tthis.visible = source.visible;\\n\\n\\t\\t\\tthis.castShadow = source.castShadow;\\n\\t\\t\\tthis.receiveShadow = source.receiveShadow;\\n\\n\\t\\t\\tthis.frustumCulled = source.frustumCulled;\\n\\t\\t\\tthis.renderOrder = source.renderOrder;\\n\\n\\t\\t\\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\\n\\n\\t\\t\\tif ( recursive === true ) {\\n\\n\\t\\t\\t\\tfor ( var i = 0; i < source.children.length; i ++ ) {\\n\\n\\t\\t\\t\\t\\tvar child = source.children[ i ];\\n\\t\\t\\t\\t\\tthis.add( child.clone() );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t}\\n\\n\\t} );\\n\\n\\tTHREE.Object3DIdCount = 0;\\n\\n\\t// File:src/core/Face3.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t */\\n\\n\\tTHREE.Face3 = function ( a, b, c, normal, color, materialIndex ) {\\n\\n\\t\\tthis.a = a;\\n\\t\\tthis.b = b;\\n\\t\\tthis.c = c;\\n\\n\\t\\tthis.normal = normal instanceof THREE.Vector3 ? normal : new THREE.Vector3();\\n\\t\\tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\\n\\n\\t\\tthis.color = color instanceof THREE.Color ? color : new THREE.Color();\\n\\t\\tthis.vertexColors = Array.isArray( color ) ? color : [];\\n\\n\\t\\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\\n\\n\\t};\\n\\n\\tTHREE.Face3.prototype = {\\n\\n\\t\\tconstructor: THREE.Face3,\\n\\n\\t\\tclone: function () {\\n\\n\\t\\t\\treturn new this.constructor().copy( this );\\n\\n\\t\\t},\\n\\n\\t\\tcopy: function ( source ) {\\n\\n\\t\\t\\tthis.a = source.a;\\n\\t\\t\\tthis.b = source.b;\\n\\t\\t\\tthis.c = source.c;\\n\\n\\t\\t\\tthis.normal.copy( source.normal );\\n\\t\\t\\tthis.color.copy( source.color );\\n\\n\\t\\t\\tthis.materialIndex = source.materialIndex;\\n\\n\\t\\t\\tfor ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\\n\\n\\t\\t\\t\\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tfor ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {\\n\\n\\t\\t\\t\\tthis.vertexColors[ i ] = source.vertexColors[ i ].clone();\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\t// File:src/core/BufferAttribute.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t */\\n\\n\\tTHREE.BufferAttribute = function ( array, itemSize, normalized ) {\\n\\n\\t\\tthis.uuid = THREE.Math.generateUUID();\\n\\n\\t\\tthis.array = array;\\n\\t\\tthis.itemSize = itemSize;\\n\\n\\t\\tthis.dynamic = false;\\n\\t\\tthis.updateRange = { offset: 0, count: - 1 };\\n\\n\\t\\tthis.version = 0;\\n\\t\\tthis.normalized = normalized === true;\\n\\n\\t};\\n\\n\\tTHREE.BufferAttribute.prototype = {\\n\\n\\t\\tconstructor: THREE.BufferAttribute,\\n\\n\\t\\tget count() {\\n\\n\\t\\t\\treturn this.array.length / this.itemSize;\\n\\n\\t\\t},\\n\\n\\t\\tset needsUpdate( value ) {\\n\\n\\t\\t\\tif ( value === true ) this.version ++;\\n\\n\\t\\t},\\n\\n\\t\\tsetDynamic: function ( value ) {\\n\\n\\t\\t\\tthis.dynamic = value;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tcopy: function ( source ) {\\n\\n\\t\\t\\tthis.array = new source.array.constructor( source.array );\\n\\t\\t\\tthis.itemSize = source.itemSize;\\n\\n\\t\\t\\tthis.dynamic = source.dynamic;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tcopyAt: function ( index1, attribute, index2 ) {\\n\\n\\t\\t\\tindex1 *= this.itemSize;\\n\\t\\t\\tindex2 *= attribute.itemSize;\\n\\n\\t\\t\\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\\n\\n\\t\\t\\t\\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tcopyArray: function ( array ) {\\n\\n\\t\\t\\tthis.array.set( array );\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tcopyColorsArray: function ( colors ) {\\n\\n\\t\\t\\tvar array = this.array, offset = 0;\\n\\n\\t\\t\\tfor ( var i = 0, l = colors.length; i < l; i ++ ) {\\n\\n\\t\\t\\t\\tvar color = colors[ i ];\\n\\n\\t\\t\\t\\tif ( color === undefined ) {\\n\\n\\t\\t\\t\\t\\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\\n\\t\\t\\t\\t\\tcolor = new THREE.Color();\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tarray[ offset ++ ] = color.r;\\n\\t\\t\\t\\tarray[ offset ++ ] = color.g;\\n\\t\\t\\t\\tarray[ offset ++ ] = color.b;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tcopyIndicesArray: function ( indices ) {\\n\\n\\t\\t\\tvar array = this.array, offset = 0;\\n\\n\\t\\t\\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\\n\\n\\t\\t\\t\\tvar index = indices[ i ];\\n\\n\\t\\t\\t\\tarray[ offset ++ ] = index.a;\\n\\t\\t\\t\\tarray[ offset ++ ] = index.b;\\n\\t\\t\\t\\tarray[ offset ++ ] = index.c;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tcopyVector2sArray: function ( vectors ) {\\n\\n\\t\\t\\tvar array = this.array, offset = 0;\\n\\n\\t\\t\\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\\n\\n\\t\\t\\t\\tvar vector = vectors[ i ];\\n\\n\\t\\t\\t\\tif ( vector === undefined ) {\\n\\n\\t\\t\\t\\t\\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\\n\\t\\t\\t\\t\\tvector = new THREE.Vector2();\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tarray[ offset ++ ] = vector.x;\\n\\t\\t\\t\\tarray[ offset ++ ] = vector.y;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tcopyVector3sArray: function ( vectors ) {\\n\\n\\t\\t\\tvar array = this.array, offset = 0;\\n\\n\\t\\t\\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\\n\\n\\t\\t\\t\\tvar vector = vectors[ i ];\\n\\n\\t\\t\\t\\tif ( vector === undefined ) {\\n\\n\\t\\t\\t\\t\\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\\n\\t\\t\\t\\t\\tvector = new THREE.Vector3();\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tarray[ offset ++ ] = vector.x;\\n\\t\\t\\t\\tarray[ offset ++ ] = vector.y;\\n\\t\\t\\t\\tarray[ offset ++ ] = vector.z;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tcopyVector4sArray: function ( vectors ) {\\n\\n\\t\\t\\tvar array = this.array, offset = 0;\\n\\n\\t\\t\\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\\n\\n\\t\\t\\t\\tvar vector = vectors[ i ];\\n\\n\\t\\t\\t\\tif ( vector === undefined ) {\\n\\n\\t\\t\\t\\t\\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\\n\\t\\t\\t\\t\\tvector = new THREE.Vector4();\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tarray[ offset ++ ] = vector.x;\\n\\t\\t\\t\\tarray[ offset ++ ] = vector.y;\\n\\t\\t\\t\\tarray[ offset ++ ] = vector.z;\\n\\t\\t\\t\\tarray[ offset ++ ] = vector.w;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tset: function ( value, offset ) {\\n\\n\\t\\t\\tif ( offset === undefined ) offset = 0;\\n\\n\\t\\t\\tthis.array.set( value, offset );\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tgetX: function ( index ) {\\n\\n\\t\\t\\treturn this.array[ index * this.itemSize ];\\n\\n\\t\\t},\\n\\n\\t\\tsetX: function ( index, x ) {\\n\\n\\t\\t\\tthis.array[ index * this.itemSize ] = x;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tgetY: function ( index ) {\\n\\n\\t\\t\\treturn this.array[ index * this.itemSize + 1 ];\\n\\n\\t\\t},\\n\\n\\t\\tsetY: function ( index, y ) {\\n\\n\\t\\t\\tthis.array[ index * this.itemSize + 1 ] = y;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tgetZ: function ( index ) {\\n\\n\\t\\t\\treturn this.array[ index * this.itemSize + 2 ];\\n\\n\\t\\t},\\n\\n\\t\\tsetZ: function ( index, z ) {\\n\\n\\t\\t\\tthis.array[ index * this.itemSize + 2 ] = z;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tgetW: function ( index ) {\\n\\n\\t\\t\\treturn this.array[ index * this.itemSize + 3 ];\\n\\n\\t\\t},\\n\\n\\t\\tsetW: function ( index, w ) {\\n\\n\\t\\t\\tthis.array[ index * this.itemSize + 3 ] = w;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tsetXY: function ( index, x, y ) {\\n\\n\\t\\t\\tindex *= this.itemSize;\\n\\n\\t\\t\\tthis.array[ index + 0 ] = x;\\n\\t\\t\\tthis.array[ index + 1 ] = y;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tsetXYZ: function ( index, x, y, z ) {\\n\\n\\t\\t\\tindex *= this.itemSize;\\n\\n\\t\\t\\tthis.array[ index + 0 ] = x;\\n\\t\\t\\tthis.array[ index + 1 ] = y;\\n\\t\\t\\tthis.array[ index + 2 ] = z;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tsetXYZW: function ( index, x, y, z, w ) {\\n\\n\\t\\t\\tindex *= this.itemSize;\\n\\n\\t\\t\\tthis.array[ index + 0 ] = x;\\n\\t\\t\\tthis.array[ index + 1 ] = y;\\n\\t\\t\\tthis.array[ index + 2 ] = z;\\n\\t\\t\\tthis.array[ index + 3 ] = w;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tclone: function () {\\n\\n\\t\\t\\treturn new this.constructor().copy( this );\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\t//\\n\\n\\tTHREE.Int8Attribute = function ( array, itemSize ) {\\n\\n\\t\\treturn new THREE.BufferAttribute( new Int8Array( array ), itemSize );\\n\\n\\t};\\n\\n\\tTHREE.Uint8Attribute = function ( array, itemSize ) {\\n\\n\\t\\treturn new THREE.BufferAttribute( new Uint8Array( array ), itemSize );\\n\\n\\t};\\n\\n\\tTHREE.Uint8ClampedAttribute = function ( array, itemSize ) {\\n\\n\\t\\treturn new THREE.BufferAttribute( new Uint8ClampedArray( array ), itemSize );\\n\\n\\t};\\n\\n\\tTHREE.Int16Attribute = function ( array, itemSize ) {\\n\\n\\t\\treturn new THREE.BufferAttribute( new Int16Array( array ), itemSize );\\n\\n\\t};\\n\\n\\tTHREE.Uint16Attribute = function ( array, itemSize ) {\\n\\n\\t\\treturn new THREE.BufferAttribute( new Uint16Array( array ), itemSize );\\n\\n\\t};\\n\\n\\tTHREE.Int32Attribute = function ( array, itemSize ) {\\n\\n\\t\\treturn new THREE.BufferAttribute( new Int32Array( array ), itemSize );\\n\\n\\t};\\n\\n\\tTHREE.Uint32Attribute = function ( array, itemSize ) {\\n\\n\\t\\treturn new THREE.BufferAttribute( new Uint32Array( array ), itemSize );\\n\\n\\t};\\n\\n\\tTHREE.Float32Attribute = function ( array, itemSize ) {\\n\\n\\t\\treturn new THREE.BufferAttribute( new Float32Array( array ), itemSize );\\n\\n\\t};\\n\\n\\tTHREE.Float64Attribute = function ( array, itemSize ) {\\n\\n\\t\\treturn new THREE.BufferAttribute( new Float64Array( array ), itemSize );\\n\\n\\t};\\n\\n\\n\\t// Deprecated\\n\\n\\tTHREE.DynamicBufferAttribute = function ( array, itemSize ) {\\n\\n\\t\\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.' );\\n\\t\\treturn new THREE.BufferAttribute( array, itemSize ).setDynamic( true );\\n\\n\\t};\\n\\n\\t// File:src/core/InstancedBufferAttribute.js\\n\\n\\t/**\\n\\t * @author benaadams / https://twitter.com/ben_a_adams\\n\\t */\\n\\n\\tTHREE.InstancedBufferAttribute = function ( array, itemSize, meshPerAttribute ) {\\n\\n\\t\\tTHREE.BufferAttribute.call( this, array, itemSize );\\n\\n\\t\\tthis.meshPerAttribute = meshPerAttribute || 1;\\n\\n\\t};\\n\\n\\tTHREE.InstancedBufferAttribute.prototype = Object.create( THREE.BufferAttribute.prototype );\\n\\tTHREE.InstancedBufferAttribute.prototype.constructor = THREE.InstancedBufferAttribute;\\n\\n\\tTHREE.InstancedBufferAttribute.prototype.copy = function ( source ) {\\n\\n\\t\\tTHREE.BufferAttribute.prototype.copy.call( this, source );\\n\\n\\t\\tthis.meshPerAttribute = source.meshPerAttribute;\\n\\n\\t\\treturn this;\\n\\n\\t};\\n\\n\\t// File:src/core/InterleavedBuffer.js\\n\\n\\t/**\\n\\t * @author benaadams / https://twitter.com/ben_a_adams\\n\\t */\\n\\n\\tTHREE.InterleavedBuffer = function ( array, stride ) {\\n\\n\\t\\tthis.uuid = THREE.Math.generateUUID();\\n\\n\\t\\tthis.array = array;\\n\\t\\tthis.stride = stride;\\n\\n\\t\\tthis.dynamic = false;\\n\\t\\tthis.updateRange = { offset: 0, count: - 1 };\\n\\n\\t\\tthis.version = 0;\\n\\n\\t};\\n\\n\\tTHREE.InterleavedBuffer.prototype = {\\n\\n\\t\\tconstructor: THREE.InterleavedBuffer,\\n\\n\\t\\tget length () {\\n\\n\\t\\t\\treturn this.array.length;\\n\\n\\t\\t},\\n\\n\\t\\tget count () {\\n\\n\\t\\t\\treturn this.array.length / this.stride;\\n\\n\\t\\t},\\n\\n\\t\\tset needsUpdate( value ) {\\n\\n\\t\\t\\tif ( value === true ) this.version ++;\\n\\n\\t\\t},\\n\\n\\t\\tsetDynamic: function ( value ) {\\n\\n\\t\\t\\tthis.dynamic = value;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tcopy: function ( source ) {\\n\\n\\t\\t\\tthis.array = new source.array.constructor( source.array );\\n\\t\\t\\tthis.stride = source.stride;\\n\\t\\t\\tthis.dynamic = source.dynamic;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tcopyAt: function ( index1, attribute, index2 ) {\\n\\n\\t\\t\\tindex1 *= this.stride;\\n\\t\\t\\tindex2 *= attribute.stride;\\n\\n\\t\\t\\tfor ( var i = 0, l = this.stride; i < l; i ++ ) {\\n\\n\\t\\t\\t\\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tset: function ( value, offset ) {\\n\\n\\t\\t\\tif ( offset === undefined ) offset = 0;\\n\\n\\t\\t\\tthis.array.set( value, offset );\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tclone: function () {\\n\\n\\t\\t\\treturn new this.constructor().copy( this );\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\t// File:src/core/InstancedInterleavedBuffer.js\\n\\n\\t/**\\n\\t * @author benaadams / https://twitter.com/ben_a_adams\\n\\t */\\n\\n\\tTHREE.InstancedInterleavedBuffer = function ( array, stride, meshPerAttribute ) {\\n\\n\\t\\tTHREE.InterleavedBuffer.call( this, array, stride );\\n\\n\\t\\tthis.meshPerAttribute = meshPerAttribute || 1;\\n\\n\\t};\\n\\n\\tTHREE.InstancedInterleavedBuffer.prototype = Object.create( THREE.InterleavedBuffer.prototype );\\n\\tTHREE.InstancedInterleavedBuffer.prototype.constructor = THREE.InstancedInterleavedBuffer;\\n\\n\\tTHREE.InstancedInterleavedBuffer.prototype.copy = function ( source ) {\\n\\n\\t\\tTHREE.InterleavedBuffer.prototype.copy.call( this, source );\\n\\n\\t\\tthis.meshPerAttribute = source.meshPerAttribute;\\n\\n\\t\\treturn this;\\n\\n\\t};\\n\\n\\t// File:src/core/InterleavedBufferAttribute.js\\n\\n\\t/**\\n\\t * @author benaadams / https://twitter.com/ben_a_adams\\n\\t */\\n\\n\\tTHREE.InterleavedBufferAttribute = function ( interleavedBuffer, itemSize, offset, normalized ) {\\n\\n\\t\\tthis.uuid = THREE.Math.generateUUID();\\n\\n\\t\\tthis.data = interleavedBuffer;\\n\\t\\tthis.itemSize = itemSize;\\n\\t\\tthis.offset = offset;\\n\\n\\t\\tthis.normalized = normalized === true;\\n\\n\\t};\\n\\n\\n\\tTHREE.InterleavedBufferAttribute.prototype = {\\n\\n\\t\\tconstructor: THREE.InterleavedBufferAttribute,\\n\\n\\t\\tget length() {\\n\\n\\t\\t\\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Please use .count.' );\\n\\t\\t\\treturn this.array.length;\\n\\n\\t\\t},\\n\\n\\t\\tget count() {\\n\\n\\t\\t\\treturn this.data.count;\\n\\n\\t\\t},\\n\\n\\t\\tget array() {\\n\\n\\t\\t\\treturn this.data.array;\\n\\n\\t\\t},\\n\\n\\t\\tsetX: function ( index, x ) {\\n\\n\\t\\t\\tthis.data.array[ index * this.data.stride + this.offset ] = x;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tsetY: function ( index, y ) {\\n\\n\\t\\t\\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tsetZ: function ( index, z ) {\\n\\n\\t\\t\\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tsetW: function ( index, w ) {\\n\\n\\t\\t\\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tgetX: function ( index ) {\\n\\n\\t\\t\\treturn this.data.array[ index * this.data.stride + this.offset ];\\n\\n\\t\\t},\\n\\n\\t\\tgetY: function ( index ) {\\n\\n\\t\\t\\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\\n\\n\\t\\t},\\n\\n\\t\\tgetZ: function ( index ) {\\n\\n\\t\\t\\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\\n\\n\\t\\t},\\n\\n\\t\\tgetW: function ( index ) {\\n\\n\\t\\t\\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\\n\\n\\t\\t},\\n\\n\\t\\tsetXY: function ( index, x, y ) {\\n\\n\\t\\t\\tindex = index * this.data.stride + this.offset;\\n\\n\\t\\t\\tthis.data.array[ index + 0 ] = x;\\n\\t\\t\\tthis.data.array[ index + 1 ] = y;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tsetXYZ: function ( index, x, y, z ) {\\n\\n\\t\\t\\tindex = index * this.data.stride + this.offset;\\n\\n\\t\\t\\tthis.data.array[ index + 0 ] = x;\\n\\t\\t\\tthis.data.array[ index + 1 ] = y;\\n\\t\\t\\tthis.data.array[ index + 2 ] = z;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tsetXYZW: function ( index, x, y, z, w ) {\\n\\n\\t\\t\\tindex = index * this.data.stride + this.offset;\\n\\n\\t\\t\\tthis.data.array[ index + 0 ] = x;\\n\\t\\t\\tthis.data.array[ index + 1 ] = y;\\n\\t\\t\\tthis.data.array[ index + 2 ] = z;\\n\\t\\t\\tthis.data.array[ index + 3 ] = w;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\t// File:src/core/Geometry.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t * @author kile / http://kile.stravaganza.org/\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t * @author mikael emtinger / http://gomo.se/\\n\\t * @author zz85 / http://www.lab4games.net/zz85/blog\\n\\t * @author bhouston / http://clara.io\\n\\t */\\n\\n\\tTHREE.Geometry = function () {\\n\\n\\t\\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\\n\\n\\t\\tthis.uuid = THREE.Math.generateUUID();\\n\\n\\t\\tthis.name = '';\\n\\t\\tthis.type = 'Geometry';\\n\\n\\t\\tthis.vertices = [];\\n\\t\\tthis.colors = [];\\n\\t\\tthis.faces = [];\\n\\t\\tthis.faceVertexUvs = [ [] ];\\n\\n\\t\\tthis.morphTargets = [];\\n\\t\\tthis.morphNormals = [];\\n\\n\\t\\tthis.skinWeights = [];\\n\\t\\tthis.skinIndices = [];\\n\\n\\t\\tthis.lineDistances = [];\\n\\n\\t\\tthis.boundingBox = null;\\n\\t\\tthis.boundingSphere = null;\\n\\n\\t\\t// update flags\\n\\n\\t\\tthis.elementsNeedUpdate = false;\\n\\t\\tthis.verticesNeedUpdate = false;\\n\\t\\tthis.uvsNeedUpdate = false;\\n\\t\\tthis.normalsNeedUpdate = false;\\n\\t\\tthis.colorsNeedUpdate = false;\\n\\t\\tthis.lineDistancesNeedUpdate = false;\\n\\t\\tthis.groupsNeedUpdate = false;\\n\\n\\t};\\n\\n\\tObject.assign( THREE.Geometry.prototype, THREE.EventDispatcher.prototype, {\\n\\n\\t\\tapplyMatrix: function ( matrix ) {\\n\\n\\t\\t\\tvar normalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\\n\\n\\t\\t\\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\\n\\n\\t\\t\\t\\tvar vertex = this.vertices[ i ];\\n\\t\\t\\t\\tvertex.applyMatrix4( matrix );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\\n\\n\\t\\t\\t\\tvar face = this.faces[ i ];\\n\\t\\t\\t\\tface.normal.applyMatrix3( normalMatrix ).normalize();\\n\\n\\t\\t\\t\\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\\n\\n\\t\\t\\t\\t\\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( this.boundingBox !== null ) {\\n\\n\\t\\t\\t\\tthis.computeBoundingBox();\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( this.boundingSphere !== null ) {\\n\\n\\t\\t\\t\\tthis.computeBoundingSphere();\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.verticesNeedUpdate = true;\\n\\t\\t\\tthis.normalsNeedUpdate = true;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\trotateX: function () {\\n\\n\\t\\t\\t// rotate geometry around world x-axis\\n\\n\\t\\t\\tvar m1;\\n\\n\\t\\t\\treturn function rotateX( angle ) {\\n\\n\\t\\t\\t\\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\\n\\n\\t\\t\\t\\tm1.makeRotationX( angle );\\n\\n\\t\\t\\t\\tthis.applyMatrix( m1 );\\n\\n\\t\\t\\t\\treturn this;\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\t\\trotateY: function () {\\n\\n\\t\\t\\t// rotate geometry around world y-axis\\n\\n\\t\\t\\tvar m1;\\n\\n\\t\\t\\treturn function rotateY( angle ) {\\n\\n\\t\\t\\t\\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\\n\\n\\t\\t\\t\\tm1.makeRotationY( angle );\\n\\n\\t\\t\\t\\tthis.applyMatrix( m1 );\\n\\n\\t\\t\\t\\treturn this;\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\t\\trotateZ: function () {\\n\\n\\t\\t\\t// rotate geometry around world z-axis\\n\\n\\t\\t\\tvar m1;\\n\\n\\t\\t\\treturn function rotateZ( angle ) {\\n\\n\\t\\t\\t\\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\\n\\n\\t\\t\\t\\tm1.makeRotationZ( angle );\\n\\n\\t\\t\\t\\tthis.applyMatrix( m1 );\\n\\n\\t\\t\\t\\treturn this;\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\t\\ttranslate: function () {\\n\\n\\t\\t\\t// translate geometry\\n\\n\\t\\t\\tvar m1;\\n\\n\\t\\t\\treturn function translate( x, y, z ) {\\n\\n\\t\\t\\t\\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\\n\\n\\t\\t\\t\\tm1.makeTranslation( x, y, z );\\n\\n\\t\\t\\t\\tthis.applyMatrix( m1 );\\n\\n\\t\\t\\t\\treturn this;\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\t\\tscale: function () {\\n\\n\\t\\t\\t// scale geometry\\n\\n\\t\\t\\tvar m1;\\n\\n\\t\\t\\treturn function scale( x, y, z ) {\\n\\n\\t\\t\\t\\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\\n\\n\\t\\t\\t\\tm1.makeScale( x, y, z );\\n\\n\\t\\t\\t\\tthis.applyMatrix( m1 );\\n\\n\\t\\t\\t\\treturn this;\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\t\\tlookAt: function () {\\n\\n\\t\\t\\tvar obj;\\n\\n\\t\\t\\treturn function lookAt( vector ) {\\n\\n\\t\\t\\t\\tif ( obj === undefined ) obj = new THREE.Object3D();\\n\\n\\t\\t\\t\\tobj.lookAt( vector );\\n\\n\\t\\t\\t\\tobj.updateMatrix();\\n\\n\\t\\t\\t\\tthis.applyMatrix( obj.matrix );\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\t\\tfromBufferGeometry: function ( geometry ) {\\n\\n\\t\\t\\tvar scope = this;\\n\\n\\t\\t\\tvar indices = geometry.index !== null ? geometry.index.array : undefined;\\n\\t\\t\\tvar attributes = geometry.attributes;\\n\\n\\t\\t\\tvar positions = attributes.position.array;\\n\\t\\t\\tvar normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\\n\\t\\t\\tvar colors = attributes.color !== undefined ? attributes.color.array : undefined;\\n\\t\\t\\tvar uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\\n\\t\\t\\tvar uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\\n\\n\\t\\t\\tif ( uvs2 !== undefined ) this.faceVertexUvs[ 1 ] = [];\\n\\n\\t\\t\\tvar tempNormals = [];\\n\\t\\t\\tvar tempUVs = [];\\n\\t\\t\\tvar tempUVs2 = [];\\n\\n\\t\\t\\tfor ( var i = 0, j = 0; i < positions.length; i += 3, j += 2 ) {\\n\\n\\t\\t\\t\\tscope.vertices.push( new THREE.Vector3( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] ) );\\n\\n\\t\\t\\t\\tif ( normals !== undefined ) {\\n\\n\\t\\t\\t\\t\\ttempNormals.push( new THREE.Vector3( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] ) );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( colors !== undefined ) {\\n\\n\\t\\t\\t\\t\\tscope.colors.push( new THREE.Color( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] ) );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( uvs !== undefined ) {\\n\\n\\t\\t\\t\\t\\ttempUVs.push( new THREE.Vector2( uvs[ j ], uvs[ j + 1 ] ) );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( uvs2 !== undefined ) {\\n\\n\\t\\t\\t\\t\\ttempUVs2.push( new THREE.Vector2( uvs2[ j ], uvs2[ j + 1 ] ) );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tfunction addFace( a, b, c, materialIndex ) {\\n\\n\\t\\t\\t\\tvar vertexNormals = normals !== undefined ? [ tempNormals[ a ].clone(), tempNormals[ b ].clone(), tempNormals[ c ].clone() ] : [];\\n\\t\\t\\t\\tvar vertexColors = colors !== undefined ? [ scope.colors[ a ].clone(), scope.colors[ b ].clone(), scope.colors[ c ].clone() ] : [];\\n\\n\\t\\t\\t\\tvar face = new THREE.Face3( a, b, c, vertexNormals, vertexColors, materialIndex );\\n\\n\\t\\t\\t\\tscope.faces.push( face );\\n\\n\\t\\t\\t\\tif ( uvs !== undefined ) {\\n\\n\\t\\t\\t\\t\\tscope.faceVertexUvs[ 0 ].push( [ tempUVs[ a ].clone(), tempUVs[ b ].clone(), tempUVs[ c ].clone() ] );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( uvs2 !== undefined ) {\\n\\n\\t\\t\\t\\t\\tscope.faceVertexUvs[ 1 ].push( [ tempUVs2[ a ].clone(), tempUVs2[ b ].clone(), tempUVs2[ c ].clone() ] );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( indices !== undefined ) {\\n\\n\\t\\t\\t\\tvar groups = geometry.groups;\\n\\n\\t\\t\\t\\tif ( groups.length > 0 ) {\\n\\n\\t\\t\\t\\t\\tfor ( var i = 0; i < groups.length; i ++ ) {\\n\\n\\t\\t\\t\\t\\t\\tvar group = groups[ i ];\\n\\n\\t\\t\\t\\t\\t\\tvar start = group.start;\\n\\t\\t\\t\\t\\t\\tvar count = group.count;\\n\\n\\t\\t\\t\\t\\t\\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\\n\\n\\t\\t\\t\\t\\t\\t\\taddFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ], group.materialIndex  );\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\tfor ( var i = 0; i < indices.length; i += 3 ) {\\n\\n\\t\\t\\t\\t\\t\\taddFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\tfor ( var i = 0; i < positions.length / 3; i += 3 ) {\\n\\n\\t\\t\\t\\t\\taddFace( i, i + 1, i + 2 );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.computeFaceNormals();\\n\\n\\t\\t\\tif ( geometry.boundingBox !== null ) {\\n\\n\\t\\t\\t\\tthis.boundingBox = geometry.boundingBox.clone();\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( geometry.boundingSphere !== null ) {\\n\\n\\t\\t\\t\\tthis.boundingSphere = geometry.boundingSphere.clone();\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tcenter: function () {\\n\\n\\t\\t\\tthis.computeBoundingBox();\\n\\n\\t\\t\\tvar offset = this.boundingBox.center().negate();\\n\\n\\t\\t\\tthis.translate( offset.x, offset.y, offset.z );\\n\\n\\t\\t\\treturn offset;\\n\\n\\t\\t},\\n\\n\\t\\tnormalize: function () {\\n\\n\\t\\t\\tthis.computeBoundingSphere();\\n\\n\\t\\t\\tvar center = this.boundingSphere.center;\\n\\t\\t\\tvar radius = this.boundingSphere.radius;\\n\\n\\t\\t\\tvar s = radius === 0 ? 1 : 1.0 / radius;\\n\\n\\t\\t\\tvar matrix = new THREE.Matrix4();\\n\\t\\t\\tmatrix.set(\\n\\t\\t\\t\\ts, 0, 0, - s * center.x,\\n\\t\\t\\t\\t0, s, 0, - s * center.y,\\n\\t\\t\\t\\t0, 0, s, - s * center.z,\\n\\t\\t\\t\\t0, 0, 0, 1\\n\\t\\t\\t);\\n\\n\\t\\t\\tthis.applyMatrix( matrix );\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tcomputeFaceNormals: function () {\\n\\n\\t\\t\\tvar cb = new THREE.Vector3(), ab = new THREE.Vector3();\\n\\n\\t\\t\\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\\n\\n\\t\\t\\t\\tvar face = this.faces[ f ];\\n\\n\\t\\t\\t\\tvar vA = this.vertices[ face.a ];\\n\\t\\t\\t\\tvar vB = this.vertices[ face.b ];\\n\\t\\t\\t\\tvar vC = this.vertices[ face.c ];\\n\\n\\t\\t\\t\\tcb.subVectors( vC, vB );\\n\\t\\t\\t\\tab.subVectors( vA, vB );\\n\\t\\t\\t\\tcb.cross( ab );\\n\\n\\t\\t\\t\\tcb.normalize();\\n\\n\\t\\t\\t\\tface.normal.copy( cb );\\n\\n\\t\\t\\t}\\n\\n\\t\\t},\\n\\n\\t\\tcomputeVertexNormals: function ( areaWeighted ) {\\n\\n\\t\\t\\tif ( areaWeighted === undefined ) areaWeighted = true;\\n\\n\\t\\t\\tvar v, vl, f, fl, face, vertices;\\n\\n\\t\\t\\tvertices = new Array( this.vertices.length );\\n\\n\\t\\t\\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\\n\\n\\t\\t\\t\\tvertices[ v ] = new THREE.Vector3();\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( areaWeighted ) {\\n\\n\\t\\t\\t\\t// vertex normals weighted by triangle areas\\n\\t\\t\\t\\t// http://www.iquilezles.org/www/articles/normals/normals.htm\\n\\n\\t\\t\\t\\tvar vA, vB, vC;\\n\\t\\t\\t\\tvar cb = new THREE.Vector3(), ab = new THREE.Vector3();\\n\\n\\t\\t\\t\\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\\n\\n\\t\\t\\t\\t\\tface = this.faces[ f ];\\n\\n\\t\\t\\t\\t\\tvA = this.vertices[ face.a ];\\n\\t\\t\\t\\t\\tvB = this.vertices[ face.b ];\\n\\t\\t\\t\\t\\tvC = this.vertices[ face.c ];\\n\\n\\t\\t\\t\\t\\tcb.subVectors( vC, vB );\\n\\t\\t\\t\\t\\tab.subVectors( vA, vB );\\n\\t\\t\\t\\t\\tcb.cross( ab );\\n\\n\\t\\t\\t\\t\\tvertices[ face.a ].add( cb );\\n\\t\\t\\t\\t\\tvertices[ face.b ].add( cb );\\n\\t\\t\\t\\t\\tvertices[ face.c ].add( cb );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\\n\\n\\t\\t\\t\\t\\tface = this.faces[ f ];\\n\\n\\t\\t\\t\\t\\tvertices[ face.a ].add( face.normal );\\n\\t\\t\\t\\t\\tvertices[ face.b ].add( face.normal );\\n\\t\\t\\t\\t\\tvertices[ face.c ].add( face.normal );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\\n\\n\\t\\t\\t\\tvertices[ v ].normalize();\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\\n\\n\\t\\t\\t\\tface = this.faces[ f ];\\n\\n\\t\\t\\t\\tvar vertexNormals = face.vertexNormals;\\n\\n\\t\\t\\t\\tif ( vertexNormals.length === 3 ) {\\n\\n\\t\\t\\t\\t\\tvertexNormals[ 0 ].copy( vertices[ face.a ] );\\n\\t\\t\\t\\t\\tvertexNormals[ 1 ].copy( vertices[ face.b ] );\\n\\t\\t\\t\\t\\tvertexNormals[ 2 ].copy( vertices[ face.c ] );\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\tvertexNormals[ 0 ] = vertices[ face.a ].clone();\\n\\t\\t\\t\\t\\tvertexNormals[ 1 ] = vertices[ face.b ].clone();\\n\\t\\t\\t\\t\\tvertexNormals[ 2 ] = vertices[ face.c ].clone();\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( this.faces.length > 0 ) {\\n\\n\\t\\t\\t\\tthis.normalsNeedUpdate = true;\\n\\n\\t\\t\\t}\\n\\n\\t\\t},\\n\\n\\t\\tcomputeMorphNormals: function () {\\n\\n\\t\\t\\tvar i, il, f, fl, face;\\n\\n\\t\\t\\t// save original normals\\n\\t\\t\\t// - create temp variables on first access\\n\\t\\t\\t//   otherwise just copy (for faster repeated calls)\\n\\n\\t\\t\\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\\n\\n\\t\\t\\t\\tface = this.faces[ f ];\\n\\n\\t\\t\\t\\tif ( ! face.__originalFaceNormal ) {\\n\\n\\t\\t\\t\\t\\tface.__originalFaceNormal = face.normal.clone();\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\tface.__originalFaceNormal.copy( face.normal );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\\n\\n\\t\\t\\t\\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\\n\\n\\t\\t\\t\\t\\tif ( ! face.__originalVertexNormals[ i ] ) {\\n\\n\\t\\t\\t\\t\\t\\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\\n\\n\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t// use temp geometry to compute face and vertex normals for each morph\\n\\n\\t\\t\\tvar tmpGeo = new THREE.Geometry();\\n\\t\\t\\ttmpGeo.faces = this.faces;\\n\\n\\t\\t\\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\\n\\n\\t\\t\\t\\t// create on first access\\n\\n\\t\\t\\t\\tif ( ! this.morphNormals[ i ] ) {\\n\\n\\t\\t\\t\\t\\tthis.morphNormals[ i ] = {};\\n\\t\\t\\t\\t\\tthis.morphNormals[ i ].faceNormals = [];\\n\\t\\t\\t\\t\\tthis.morphNormals[ i ].vertexNormals = [];\\n\\n\\t\\t\\t\\t\\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\\n\\t\\t\\t\\t\\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\\n\\n\\t\\t\\t\\t\\tvar faceNormal, vertexNormals;\\n\\n\\t\\t\\t\\t\\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\\n\\n\\t\\t\\t\\t\\t\\tfaceNormal = new THREE.Vector3();\\n\\t\\t\\t\\t\\t\\tvertexNormals = { a: new THREE.Vector3(), b: new THREE.Vector3(), c: new THREE.Vector3() };\\n\\n\\t\\t\\t\\t\\t\\tdstNormalsFace.push( faceNormal );\\n\\t\\t\\t\\t\\t\\tdstNormalsVertex.push( vertexNormals );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tvar morphNormals = this.morphNormals[ i ];\\n\\n\\t\\t\\t\\t// set vertices to morph target\\n\\n\\t\\t\\t\\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\\n\\n\\t\\t\\t\\t// compute morph normals\\n\\n\\t\\t\\t\\ttmpGeo.computeFaceNormals();\\n\\t\\t\\t\\ttmpGeo.computeVertexNormals();\\n\\n\\t\\t\\t\\t// store morph normals\\n\\n\\t\\t\\t\\tvar faceNormal, vertexNormals;\\n\\n\\t\\t\\t\\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\\n\\n\\t\\t\\t\\t\\tface = this.faces[ f ];\\n\\n\\t\\t\\t\\t\\tfaceNormal = morphNormals.faceNormals[ f ];\\n\\t\\t\\t\\t\\tvertexNormals = morphNormals.vertexNormals[ f ];\\n\\n\\t\\t\\t\\t\\tfaceNormal.copy( face.normal );\\n\\n\\t\\t\\t\\t\\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\\n\\t\\t\\t\\t\\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\\n\\t\\t\\t\\t\\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t// restore original normals\\n\\n\\t\\t\\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\\n\\n\\t\\t\\t\\tface = this.faces[ f ];\\n\\n\\t\\t\\t\\tface.normal = face.__originalFaceNormal;\\n\\t\\t\\t\\tface.vertexNormals = face.__originalVertexNormals;\\n\\n\\t\\t\\t}\\n\\n\\t\\t},\\n\\n\\t\\tcomputeTangents: function () {\\n\\n\\t\\t\\tconsole.warn( 'THREE.Geometry: .computeTangents() has been removed.' );\\n\\n\\t\\t},\\n\\n\\t\\tcomputeLineDistances: function () {\\n\\n\\t\\t\\tvar d = 0;\\n\\t\\t\\tvar vertices = this.vertices;\\n\\n\\t\\t\\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\\n\\n\\t\\t\\t\\tif ( i > 0 ) {\\n\\n\\t\\t\\t\\t\\td += vertices[ i ].distanceTo( vertices[ i - 1 ] );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tthis.lineDistances[ i ] = d;\\n\\n\\t\\t\\t}\\n\\n\\t\\t},\\n\\n\\t\\tcomputeBoundingBox: function () {\\n\\n\\t\\t\\tif ( this.boundingBox === null ) {\\n\\n\\t\\t\\t\\tthis.boundingBox = new THREE.Box3();\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.boundingBox.setFromPoints( this.vertices );\\n\\n\\t\\t},\\n\\n\\t\\tcomputeBoundingSphere: function () {\\n\\n\\t\\t\\tif ( this.boundingSphere === null ) {\\n\\n\\t\\t\\t\\tthis.boundingSphere = new THREE.Sphere();\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.boundingSphere.setFromPoints( this.vertices );\\n\\n\\t\\t},\\n\\n\\t\\tmerge: function ( geometry, matrix, materialIndexOffset ) {\\n\\n\\t\\t\\tif ( geometry instanceof THREE.Geometry === false ) {\\n\\n\\t\\t\\t\\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\\n\\t\\t\\t\\treturn;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar normalMatrix,\\n\\t\\t\\tvertexOffset = this.vertices.length,\\n\\t\\t\\tvertices1 = this.vertices,\\n\\t\\t\\tvertices2 = geometry.vertices,\\n\\t\\t\\tfaces1 = this.faces,\\n\\t\\t\\tfaces2 = geometry.faces,\\n\\t\\t\\tuvs1 = this.faceVertexUvs[ 0 ],\\n\\t\\t\\tuvs2 = geometry.faceVertexUvs[ 0 ];\\n\\n\\t\\t\\tif ( materialIndexOffset === undefined ) materialIndexOffset = 0;\\n\\n\\t\\t\\tif ( matrix !== undefined ) {\\n\\n\\t\\t\\t\\tnormalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t// vertices\\n\\n\\t\\t\\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\\n\\n\\t\\t\\t\\tvar vertex = vertices2[ i ];\\n\\n\\t\\t\\t\\tvar vertexCopy = vertex.clone();\\n\\n\\t\\t\\t\\tif ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\\n\\n\\t\\t\\t\\tvertices1.push( vertexCopy );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t// faces\\n\\n\\t\\t\\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\\n\\n\\t\\t\\t\\tvar face = faces2[ i ], faceCopy, normal, color,\\n\\t\\t\\t\\tfaceVertexNormals = face.vertexNormals,\\n\\t\\t\\t\\tfaceVertexColors = face.vertexColors;\\n\\n\\t\\t\\t\\tfaceCopy = new THREE.Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\\n\\t\\t\\t\\tfaceCopy.normal.copy( face.normal );\\n\\n\\t\\t\\t\\tif ( normalMatrix !== undefined ) {\\n\\n\\t\\t\\t\\t\\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\\n\\n\\t\\t\\t\\t\\tnormal = faceVertexNormals[ j ].clone();\\n\\n\\t\\t\\t\\t\\tif ( normalMatrix !== undefined ) {\\n\\n\\t\\t\\t\\t\\t\\tnormal.applyMatrix3( normalMatrix ).normalize();\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tfaceCopy.vertexNormals.push( normal );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tfaceCopy.color.copy( face.color );\\n\\n\\t\\t\\t\\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\\n\\n\\t\\t\\t\\t\\tcolor = faceVertexColors[ j ];\\n\\t\\t\\t\\t\\tfaceCopy.vertexColors.push( color.clone() );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\\n\\n\\t\\t\\t\\tfaces1.push( faceCopy );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t// uvs\\n\\n\\t\\t\\tfor ( i = 0, il = uvs2.length; i < il; i ++ ) {\\n\\n\\t\\t\\t\\tvar uv = uvs2[ i ], uvCopy = [];\\n\\n\\t\\t\\t\\tif ( uv === undefined ) {\\n\\n\\t\\t\\t\\t\\tcontinue;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tfor ( var j = 0, jl = uv.length; j < jl; j ++ ) {\\n\\n\\t\\t\\t\\t\\tuvCopy.push( uv[ j ].clone() );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tuvs1.push( uvCopy );\\n\\n\\t\\t\\t}\\n\\n\\t\\t},\\n\\n\\t\\tmergeMesh: function ( mesh ) {\\n\\n\\t\\t\\tif ( mesh instanceof THREE.Mesh === false ) {\\n\\n\\t\\t\\t\\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\\n\\t\\t\\t\\treturn;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tmesh.matrixAutoUpdate && mesh.updateMatrix();\\n\\n\\t\\t\\tthis.merge( mesh.geometry, mesh.matrix );\\n\\n\\t\\t},\\n\\n\\t\\t/*\\n\\t\\t * Checks for duplicate vertices with hashmap.\\n\\t\\t * Duplicated vertices are removed\\n\\t\\t * and faces' vertices are updated.\\n\\t\\t */\\n\\n\\t\\tmergeVertices: function () {\\n\\n\\t\\t\\tvar verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\\n\\t\\t\\tvar unique = [], changes = [];\\n\\n\\t\\t\\tvar v, key;\\n\\t\\t\\tvar precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\\n\\t\\t\\tvar precision = Math.pow( 10, precisionPoints );\\n\\t\\t\\tvar i, il, face;\\n\\t\\t\\tvar indices, j, jl;\\n\\n\\t\\t\\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\\n\\n\\t\\t\\t\\tv = this.vertices[ i ];\\n\\t\\t\\t\\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\\n\\n\\t\\t\\t\\tif ( verticesMap[ key ] === undefined ) {\\n\\n\\t\\t\\t\\t\\tverticesMap[ key ] = i;\\n\\t\\t\\t\\t\\tunique.push( this.vertices[ i ] );\\n\\t\\t\\t\\t\\tchanges[ i ] = unique.length - 1;\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\\n\\t\\t\\t\\t\\tchanges[ i ] = changes[ verticesMap[ key ] ];\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\n\\t\\t\\t// if faces are completely degenerate after merging vertices, we\\n\\t\\t\\t// have to remove them from the geometry.\\n\\t\\t\\tvar faceIndicesToRemove = [];\\n\\n\\t\\t\\tfor ( i = 0, il = this.faces.length; i < il; i ++ ) {\\n\\n\\t\\t\\t\\tface = this.faces[ i ];\\n\\n\\t\\t\\t\\tface.a = changes[ face.a ];\\n\\t\\t\\t\\tface.b = changes[ face.b ];\\n\\t\\t\\t\\tface.c = changes[ face.c ];\\n\\n\\t\\t\\t\\tindices = [ face.a, face.b, face.c ];\\n\\n\\t\\t\\t\\tvar dupIndex = - 1;\\n\\n\\t\\t\\t\\t// if any duplicate vertices are found in a Face3\\n\\t\\t\\t\\t// we have to remove the face as nothing can be saved\\n\\t\\t\\t\\tfor ( var n = 0; n < 3; n ++ ) {\\n\\n\\t\\t\\t\\t\\tif ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\\n\\n\\t\\t\\t\\t\\t\\tdupIndex = n;\\n\\t\\t\\t\\t\\t\\tfaceIndicesToRemove.push( i );\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\\n\\n\\t\\t\\t\\tvar idx = faceIndicesToRemove[ i ];\\n\\n\\t\\t\\t\\tthis.faces.splice( idx, 1 );\\n\\n\\t\\t\\t\\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\\n\\n\\t\\t\\t\\t\\tthis.faceVertexUvs[ j ].splice( idx, 1 );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Use unique set of vertices\\n\\n\\t\\t\\tvar diff = this.vertices.length - unique.length;\\n\\t\\t\\tthis.vertices = unique;\\n\\t\\t\\treturn diff;\\n\\n\\t\\t},\\n\\n\\t\\tsortFacesByMaterialIndex: function () {\\n\\n\\t\\t\\tvar faces = this.faces;\\n\\t\\t\\tvar length = faces.length;\\n\\n\\t\\t\\t// tag faces\\n\\n\\t\\t\\tfor ( var i = 0; i < length; i ++ ) {\\n\\n\\t\\t\\t\\tfaces[ i ]._id = i;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t// sort faces\\n\\n\\t\\t\\tfunction materialIndexSort( a, b ) {\\n\\n\\t\\t\\t\\treturn a.materialIndex - b.materialIndex;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tfaces.sort( materialIndexSort );\\n\\n\\t\\t\\t// sort uvs\\n\\n\\t\\t\\tvar uvs1 = this.faceVertexUvs[ 0 ];\\n\\t\\t\\tvar uvs2 = this.faceVertexUvs[ 1 ];\\n\\n\\t\\t\\tvar newUvs1, newUvs2;\\n\\n\\t\\t\\tif ( uvs1 && uvs1.length === length ) newUvs1 = [];\\n\\t\\t\\tif ( uvs2 && uvs2.length === length ) newUvs2 = [];\\n\\n\\t\\t\\tfor ( var i = 0; i < length; i ++ ) {\\n\\n\\t\\t\\t\\tvar id = faces[ i ]._id;\\n\\n\\t\\t\\t\\tif ( newUvs1 ) newUvs1.push( uvs1[ id ] );\\n\\t\\t\\t\\tif ( newUvs2 ) newUvs2.push( uvs2[ id ] );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( newUvs1 ) this.faceVertexUvs[ 0 ] = newUvs1;\\n\\t\\t\\tif ( newUvs2 ) this.faceVertexUvs[ 1 ] = newUvs2;\\n\\n\\t\\t},\\n\\n\\t\\ttoJSON: function () {\\n\\n\\t\\t\\tvar data = {\\n\\t\\t\\t\\tmetadata: {\\n\\t\\t\\t\\t\\tversion: 4.4,\\n\\t\\t\\t\\t\\ttype: 'Geometry',\\n\\t\\t\\t\\t\\tgenerator: 'Geometry.toJSON'\\n\\t\\t\\t\\t}\\n\\t\\t\\t};\\n\\n\\t\\t\\t// standard Geometry serialization\\n\\n\\t\\t\\tdata.uuid = this.uuid;\\n\\t\\t\\tdata.type = this.type;\\n\\t\\t\\tif ( this.name !== '' ) data.name = this.name;\\n\\n\\t\\t\\tif ( this.parameters !== undefined ) {\\n\\n\\t\\t\\t\\tvar parameters = this.parameters;\\n\\n\\t\\t\\t\\tfor ( var key in parameters ) {\\n\\n\\t\\t\\t\\t\\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn data;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar vertices = [];\\n\\n\\t\\t\\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\\n\\n\\t\\t\\t\\tvar vertex = this.vertices[ i ];\\n\\t\\t\\t\\tvertices.push( vertex.x, vertex.y, vertex.z );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar faces = [];\\n\\t\\t\\tvar normals = [];\\n\\t\\t\\tvar normalsHash = {};\\n\\t\\t\\tvar colors = [];\\n\\t\\t\\tvar colorsHash = {};\\n\\t\\t\\tvar uvs = [];\\n\\t\\t\\tvar uvsHash = {};\\n\\n\\t\\t\\tfor ( var i = 0; i < this.faces.length; i ++ ) {\\n\\n\\t\\t\\t\\tvar face = this.faces[ i ];\\n\\n\\t\\t\\t\\tvar hasMaterial = true;\\n\\t\\t\\t\\tvar hasFaceUv = false; // deprecated\\n\\t\\t\\t\\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\\n\\t\\t\\t\\tvar hasFaceNormal = face.normal.length() > 0;\\n\\t\\t\\t\\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\\n\\t\\t\\t\\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\\n\\t\\t\\t\\tvar hasFaceVertexColor = face.vertexColors.length > 0;\\n\\n\\t\\t\\t\\tvar faceType = 0;\\n\\n\\t\\t\\t\\tfaceType = setBit( faceType, 0, 0 ); // isQuad\\n\\t\\t\\t\\tfaceType = setBit( faceType, 1, hasMaterial );\\n\\t\\t\\t\\tfaceType = setBit( faceType, 2, hasFaceUv );\\n\\t\\t\\t\\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\\n\\t\\t\\t\\tfaceType = setBit( faceType, 4, hasFaceNormal );\\n\\t\\t\\t\\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\\n\\t\\t\\t\\tfaceType = setBit( faceType, 6, hasFaceColor );\\n\\t\\t\\t\\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\\n\\n\\t\\t\\t\\tfaces.push( faceType );\\n\\t\\t\\t\\tfaces.push( face.a, face.b, face.c );\\n\\t\\t\\t\\tfaces.push( face.materialIndex );\\n\\n\\t\\t\\t\\tif ( hasFaceVertexUv ) {\\n\\n\\t\\t\\t\\t\\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\\n\\n\\t\\t\\t\\t\\tfaces.push(\\n\\t\\t\\t\\t\\t\\tgetUvIndex( faceVertexUvs[ 0 ] ),\\n\\t\\t\\t\\t\\t\\tgetUvIndex( faceVertexUvs[ 1 ] ),\\n\\t\\t\\t\\t\\t\\tgetUvIndex( faceVertexUvs[ 2 ] )\\n\\t\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( hasFaceNormal ) {\\n\\n\\t\\t\\t\\t\\tfaces.push( getNormalIndex( face.normal ) );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( hasFaceVertexNormal ) {\\n\\n\\t\\t\\t\\t\\tvar vertexNormals = face.vertexNormals;\\n\\n\\t\\t\\t\\t\\tfaces.push(\\n\\t\\t\\t\\t\\t\\tgetNormalIndex( vertexNormals[ 0 ] ),\\n\\t\\t\\t\\t\\t\\tgetNormalIndex( vertexNormals[ 1 ] ),\\n\\t\\t\\t\\t\\t\\tgetNormalIndex( vertexNormals[ 2 ] )\\n\\t\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( hasFaceColor ) {\\n\\n\\t\\t\\t\\t\\tfaces.push( getColorIndex( face.color ) );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( hasFaceVertexColor ) {\\n\\n\\t\\t\\t\\t\\tvar vertexColors = face.vertexColors;\\n\\n\\t\\t\\t\\t\\tfaces.push(\\n\\t\\t\\t\\t\\t\\tgetColorIndex( vertexColors[ 0 ] ),\\n\\t\\t\\t\\t\\t\\tgetColorIndex( vertexColors[ 1 ] ),\\n\\t\\t\\t\\t\\t\\tgetColorIndex( vertexColors[ 2 ] )\\n\\t\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tfunction setBit( value, position, enabled ) {\\n\\n\\t\\t\\t\\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tfunction getNormalIndex( normal ) {\\n\\n\\t\\t\\t\\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\\n\\n\\t\\t\\t\\tif ( normalsHash[ hash ] !== undefined ) {\\n\\n\\t\\t\\t\\t\\treturn normalsHash[ hash ];\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tnormalsHash[ hash ] = normals.length / 3;\\n\\t\\t\\t\\tnormals.push( normal.x, normal.y, normal.z );\\n\\n\\t\\t\\t\\treturn normalsHash[ hash ];\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tfunction getColorIndex( color ) {\\n\\n\\t\\t\\t\\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\\n\\n\\t\\t\\t\\tif ( colorsHash[ hash ] !== undefined ) {\\n\\n\\t\\t\\t\\t\\treturn colorsHash[ hash ];\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tcolorsHash[ hash ] = colors.length;\\n\\t\\t\\t\\tcolors.push( color.getHex() );\\n\\n\\t\\t\\t\\treturn colorsHash[ hash ];\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tfunction getUvIndex( uv ) {\\n\\n\\t\\t\\t\\tvar hash = uv.x.toString() + uv.y.toString();\\n\\n\\t\\t\\t\\tif ( uvsHash[ hash ] !== undefined ) {\\n\\n\\t\\t\\t\\t\\treturn uvsHash[ hash ];\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tuvsHash[ hash ] = uvs.length / 2;\\n\\t\\t\\t\\tuvs.push( uv.x, uv.y );\\n\\n\\t\\t\\t\\treturn uvsHash[ hash ];\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tdata.data = {};\\n\\n\\t\\t\\tdata.data.vertices = vertices;\\n\\t\\t\\tdata.data.normals = normals;\\n\\t\\t\\tif ( colors.length > 0 ) data.data.colors = colors;\\n\\t\\t\\tif ( uvs.length > 0 ) data.data.uvs = [ uvs ]; // temporal backward compatibility\\n\\t\\t\\tdata.data.faces = faces;\\n\\n\\t\\t\\treturn data;\\n\\n\\t\\t},\\n\\n\\t\\tclone: function () {\\n\\n\\t\\t\\t/*\\n\\t\\t\\t// Handle primitives\\n\\n\\t\\t\\tvar parameters = this.parameters;\\n\\n\\t\\t\\tif ( parameters !== undefined ) {\\n\\n\\t\\t\\t\\tvar values = [];\\n\\n\\t\\t\\t\\tfor ( var key in parameters ) {\\n\\n\\t\\t\\t\\t\\tvalues.push( parameters[ key ] );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tvar geometry = Object.create( this.constructor.prototype );\\n\\t\\t\\t\\tthis.constructor.apply( geometry, values );\\n\\t\\t\\t\\treturn geometry;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn new this.constructor().copy( this );\\n\\t\\t\\t*/\\n\\n\\t\\t\\treturn new THREE.Geometry().copy( this );\\n\\n\\t\\t},\\n\\n\\t\\tcopy: function ( source ) {\\n\\n\\t\\t\\tthis.vertices = [];\\n\\t\\t\\tthis.faces = [];\\n\\t\\t\\tthis.faceVertexUvs = [ [] ];\\n\\n\\t\\t\\tvar vertices = source.vertices;\\n\\n\\t\\t\\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\\n\\n\\t\\t\\t\\tthis.vertices.push( vertices[ i ].clone() );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar faces = source.faces;\\n\\n\\t\\t\\tfor ( var i = 0, il = faces.length; i < il; i ++ ) {\\n\\n\\t\\t\\t\\tthis.faces.push( faces[ i ].clone() );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tfor ( var i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {\\n\\n\\t\\t\\t\\tvar faceVertexUvs = source.faceVertexUvs[ i ];\\n\\n\\t\\t\\t\\tif ( this.faceVertexUvs[ i ] === undefined ) {\\n\\n\\t\\t\\t\\t\\tthis.faceVertexUvs[ i ] = [];\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tfor ( var j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\\n\\n\\t\\t\\t\\t\\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\\n\\n\\t\\t\\t\\t\\tfor ( var k = 0, kl = uvs.length; k < kl; k ++ ) {\\n\\n\\t\\t\\t\\t\\t\\tvar uv = uvs[ k ];\\n\\n\\t\\t\\t\\t\\t\\tuvsCopy.push( uv.clone() );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tthis.faceVertexUvs[ i ].push( uvsCopy );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tdispose: function () {\\n\\n\\t\\t\\tthis.dispatchEvent( { type: 'dispose' } );\\n\\n\\t\\t}\\n\\n\\t} );\\n\\n\\tTHREE.GeometryIdCount = 0;\\n\\n\\t// File:src/core/DirectGeometry.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t */\\n\\n\\tTHREE.DirectGeometry = function () {\\n\\n\\t\\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\\n\\n\\t\\tthis.uuid = THREE.Math.generateUUID();\\n\\n\\t\\tthis.name = '';\\n\\t\\tthis.type = 'DirectGeometry';\\n\\n\\t\\tthis.indices = [];\\n\\t\\tthis.vertices = [];\\n\\t\\tthis.normals = [];\\n\\t\\tthis.colors = [];\\n\\t\\tthis.uvs = [];\\n\\t\\tthis.uvs2 = [];\\n\\n\\t\\tthis.groups = [];\\n\\n\\t\\tthis.morphTargets = {};\\n\\n\\t\\tthis.skinWeights = [];\\n\\t\\tthis.skinIndices = [];\\n\\n\\t\\t// this.lineDistances = [];\\n\\n\\t\\tthis.boundingBox = null;\\n\\t\\tthis.boundingSphere = null;\\n\\n\\t\\t// update flags\\n\\n\\t\\tthis.verticesNeedUpdate = false;\\n\\t\\tthis.normalsNeedUpdate = false;\\n\\t\\tthis.colorsNeedUpdate = false;\\n\\t\\tthis.uvsNeedUpdate = false;\\n\\t\\tthis.groupsNeedUpdate = false;\\n\\n\\t};\\n\\n\\tObject.assign( THREE.DirectGeometry.prototype, THREE.EventDispatcher.prototype, {\\n\\n\\t\\tcomputeBoundingBox: THREE.Geometry.prototype.computeBoundingBox,\\n\\t\\tcomputeBoundingSphere: THREE.Geometry.prototype.computeBoundingSphere,\\n\\n\\t\\tcomputeFaceNormals: function () {\\n\\n\\t\\t\\tconsole.warn( 'THREE.DirectGeometry: computeFaceNormals() is not a method of this type of geometry.' );\\n\\n\\t\\t},\\n\\n\\t\\tcomputeVertexNormals: function () {\\n\\n\\t\\t\\tconsole.warn( 'THREE.DirectGeometry: computeVertexNormals() is not a method of this type of geometry.' );\\n\\n\\t\\t},\\n\\n\\t\\tcomputeGroups: function ( geometry ) {\\n\\n\\t\\t\\tvar group;\\n\\t\\t\\tvar groups = [];\\n\\t\\t\\tvar materialIndex;\\n\\n\\t\\t\\tvar faces = geometry.faces;\\n\\n\\t\\t\\tfor ( var i = 0; i < faces.length; i ++ ) {\\n\\n\\t\\t\\t\\tvar face = faces[ i ];\\n\\n\\t\\t\\t\\t// materials\\n\\n\\t\\t\\t\\tif ( face.materialIndex !== materialIndex ) {\\n\\n\\t\\t\\t\\t\\tmaterialIndex = face.materialIndex;\\n\\n\\t\\t\\t\\t\\tif ( group !== undefined ) {\\n\\n\\t\\t\\t\\t\\t\\tgroup.count = ( i * 3 ) - group.start;\\n\\t\\t\\t\\t\\t\\tgroups.push( group );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tgroup = {\\n\\t\\t\\t\\t\\t\\tstart: i * 3,\\n\\t\\t\\t\\t\\t\\tmaterialIndex: materialIndex\\n\\t\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( group !== undefined ) {\\n\\n\\t\\t\\t\\tgroup.count = ( i * 3 ) - group.start;\\n\\t\\t\\t\\tgroups.push( group );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.groups = groups;\\n\\n\\t\\t},\\n\\n\\t\\tfromGeometry: function ( geometry ) {\\n\\n\\t\\t\\tvar faces = geometry.faces;\\n\\t\\t\\tvar vertices = geometry.vertices;\\n\\t\\t\\tvar faceVertexUvs = geometry.faceVertexUvs;\\n\\n\\t\\t\\tvar hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\\n\\t\\t\\tvar hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\\n\\n\\t\\t\\t// morphs\\n\\n\\t\\t\\tvar morphTargets = geometry.morphTargets;\\n\\t\\t\\tvar morphTargetsLength = morphTargets.length;\\n\\n\\t\\t\\tvar morphTargetsPosition;\\n\\n\\t\\t\\tif ( morphTargetsLength > 0 ) {\\n\\n\\t\\t\\t\\tmorphTargetsPosition = [];\\n\\n\\t\\t\\t\\tfor ( var i = 0; i < morphTargetsLength; i ++ ) {\\n\\n\\t\\t\\t\\t\\tmorphTargetsPosition[ i ] = [];\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tthis.morphTargets.position = morphTargetsPosition;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar morphNormals = geometry.morphNormals;\\n\\t\\t\\tvar morphNormalsLength = morphNormals.length;\\n\\n\\t\\t\\tvar morphTargetsNormal;\\n\\n\\t\\t\\tif ( morphNormalsLength > 0 ) {\\n\\n\\t\\t\\t\\tmorphTargetsNormal = [];\\n\\n\\t\\t\\t\\tfor ( var i = 0; i < morphNormalsLength; i ++ ) {\\n\\n\\t\\t\\t\\t\\tmorphTargetsNormal[ i ] = [];\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tthis.morphTargets.normal = morphTargetsNormal;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t// skins\\n\\n\\t\\t\\tvar skinIndices = geometry.skinIndices;\\n\\t\\t\\tvar skinWeights = geometry.skinWeights;\\n\\n\\t\\t\\tvar hasSkinIndices = skinIndices.length === vertices.length;\\n\\t\\t\\tvar hasSkinWeights = skinWeights.length === vertices.length;\\n\\n\\t\\t\\t//\\n\\n\\t\\t\\tfor ( var i = 0; i < faces.length; i ++ ) {\\n\\n\\t\\t\\t\\tvar face = faces[ i ];\\n\\n\\t\\t\\t\\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\\n\\n\\t\\t\\t\\tvar vertexNormals = face.vertexNormals;\\n\\n\\t\\t\\t\\tif ( vertexNormals.length === 3 ) {\\n\\n\\t\\t\\t\\t\\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\tvar normal = face.normal;\\n\\n\\t\\t\\t\\t\\tthis.normals.push( normal, normal, normal );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tvar vertexColors = face.vertexColors;\\n\\n\\t\\t\\t\\tif ( vertexColors.length === 3 ) {\\n\\n\\t\\t\\t\\t\\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\tvar color = face.color;\\n\\n\\t\\t\\t\\t\\tthis.colors.push( color, color, color );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( hasFaceVertexUv === true ) {\\n\\n\\t\\t\\t\\t\\tvar vertexUvs = faceVertexUvs[ 0 ][ i ];\\n\\n\\t\\t\\t\\t\\tif ( vertexUvs !== undefined ) {\\n\\n\\t\\t\\t\\t\\t\\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\\n\\n\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );\\n\\n\\t\\t\\t\\t\\t\\tthis.uvs.push( new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( hasFaceVertexUv2 === true ) {\\n\\n\\t\\t\\t\\t\\tvar vertexUvs = faceVertexUvs[ 1 ][ i ];\\n\\n\\t\\t\\t\\t\\tif ( vertexUvs !== undefined ) {\\n\\n\\t\\t\\t\\t\\t\\tthis.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\\n\\n\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );\\n\\n\\t\\t\\t\\t\\t\\tthis.uvs2.push( new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// morphs\\n\\n\\t\\t\\t\\tfor ( var j = 0; j < morphTargetsLength; j ++ ) {\\n\\n\\t\\t\\t\\t\\tvar morphTarget = morphTargets[ j ].vertices;\\n\\n\\t\\t\\t\\t\\tmorphTargetsPosition[ j ].push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tfor ( var j = 0; j < morphNormalsLength; j ++ ) {\\n\\n\\t\\t\\t\\t\\tvar morphNormal = morphNormals[ j ].vertexNormals[ i ];\\n\\n\\t\\t\\t\\t\\tmorphTargetsNormal[ j ].push( morphNormal.a, morphNormal.b, morphNormal.c );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// skins\\n\\n\\t\\t\\t\\tif ( hasSkinIndices ) {\\n\\n\\t\\t\\t\\t\\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( hasSkinWeights ) {\\n\\n\\t\\t\\t\\t\\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.computeGroups( geometry );\\n\\n\\t\\t\\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\\n\\t\\t\\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\\n\\t\\t\\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\\n\\t\\t\\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\\n\\t\\t\\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tdispose: function () {\\n\\n\\t\\t\\tthis.dispatchEvent( { type: 'dispose' } );\\n\\n\\t\\t}\\n\\n\\t} );\\n\\n\\t// File:src/core/BufferGeometry.js\\n\\n\\t/**\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t */\\n\\n\\tTHREE.BufferGeometry = function () {\\n\\n\\t\\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\\n\\n\\t\\tthis.uuid = THREE.Math.generateUUID();\\n\\n\\t\\tthis.name = '';\\n\\t\\tthis.type = 'BufferGeometry';\\n\\n\\t\\tthis.index = null;\\n\\t\\tthis.attributes = {};\\n\\n\\t\\tthis.morphAttributes = {};\\n\\n\\t\\tthis.groups = [];\\n\\n\\t\\tthis.boundingBox = null;\\n\\t\\tthis.boundingSphere = null;\\n\\n\\t\\tthis.drawRange = { start: 0, count: Infinity };\\n\\n\\t};\\n\\n\\tObject.assign( THREE.BufferGeometry.prototype, THREE.EventDispatcher.prototype, {\\n\\n\\t\\tgetIndex: function () {\\n\\n\\t\\t\\treturn this.index;\\n\\n\\t\\t},\\n\\n\\t\\tsetIndex: function ( index ) {\\n\\n\\t\\t\\tthis.index = index;\\n\\n\\t\\t},\\n\\n\\t\\taddAttribute: function ( name, attribute ) {\\n\\n\\t\\t\\tif ( attribute instanceof THREE.BufferAttribute === false && attribute instanceof THREE.InterleavedBufferAttribute === false ) {\\n\\n\\t\\t\\t\\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\\n\\n\\t\\t\\t\\tthis.addAttribute( name, new THREE.BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\\n\\n\\t\\t\\t\\treturn;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( name === 'index' ) {\\n\\n\\t\\t\\t\\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\\n\\t\\t\\t\\tthis.setIndex( attribute );\\n\\n\\t\\t\\t\\treturn;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.attributes[ name ] = attribute;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tgetAttribute: function ( name ) {\\n\\n\\t\\t\\treturn this.attributes[ name ];\\n\\n\\t\\t},\\n\\n\\t\\tremoveAttribute: function ( name ) {\\n\\n\\t\\t\\tdelete this.attributes[ name ];\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\taddGroup: function ( start, count, materialIndex ) {\\n\\n\\t\\t\\tthis.groups.push( {\\n\\n\\t\\t\\t\\tstart: start,\\n\\t\\t\\t\\tcount: count,\\n\\t\\t\\t\\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\\n\\n\\t\\t\\t} );\\n\\n\\t\\t},\\n\\n\\t\\tclearGroups: function () {\\n\\n\\t\\t\\tthis.groups = [];\\n\\n\\t\\t},\\n\\n\\t\\tsetDrawRange: function ( start, count ) {\\n\\n\\t\\t\\tthis.drawRange.start = start;\\n\\t\\t\\tthis.drawRange.count = count;\\n\\n\\t\\t},\\n\\n\\t\\tapplyMatrix: function ( matrix ) {\\n\\n\\t\\t\\tvar position = this.attributes.position;\\n\\n\\t\\t\\tif ( position !== undefined ) {\\n\\n\\t\\t\\t\\tmatrix.applyToVector3Array( position.array );\\n\\t\\t\\t\\tposition.needsUpdate = true;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar normal = this.attributes.normal;\\n\\n\\t\\t\\tif ( normal !== undefined ) {\\n\\n\\t\\t\\t\\tvar normalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\\n\\n\\t\\t\\t\\tnormalMatrix.applyToVector3Array( normal.array );\\n\\t\\t\\t\\tnormal.needsUpdate = true;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( this.boundingBox !== null ) {\\n\\n\\t\\t\\t\\tthis.computeBoundingBox();\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( this.boundingSphere !== null ) {\\n\\n\\t\\t\\t\\tthis.computeBoundingSphere();\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\trotateX: function () {\\n\\n\\t\\t\\t// rotate geometry around world x-axis\\n\\n\\t\\t\\tvar m1;\\n\\n\\t\\t\\treturn function rotateX( angle ) {\\n\\n\\t\\t\\t\\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\\n\\n\\t\\t\\t\\tm1.makeRotationX( angle );\\n\\n\\t\\t\\t\\tthis.applyMatrix( m1 );\\n\\n\\t\\t\\t\\treturn this;\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\t\\trotateY: function () {\\n\\n\\t\\t\\t// rotate geometry around world y-axis\\n\\n\\t\\t\\tvar m1;\\n\\n\\t\\t\\treturn function rotateY( angle ) {\\n\\n\\t\\t\\t\\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\\n\\n\\t\\t\\t\\tm1.makeRotationY( angle );\\n\\n\\t\\t\\t\\tthis.applyMatrix( m1 );\\n\\n\\t\\t\\t\\treturn this;\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\t\\trotateZ: function () {\\n\\n\\t\\t\\t// rotate geometry around world z-axis\\n\\n\\t\\t\\tvar m1;\\n\\n\\t\\t\\treturn function rotateZ( angle ) {\\n\\n\\t\\t\\t\\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\\n\\n\\t\\t\\t\\tm1.makeRotationZ( angle );\\n\\n\\t\\t\\t\\tthis.applyMatrix( m1 );\\n\\n\\t\\t\\t\\treturn this;\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\t\\ttranslate: function () {\\n\\n\\t\\t\\t// translate geometry\\n\\n\\t\\t\\tvar m1;\\n\\n\\t\\t\\treturn function translate( x, y, z ) {\\n\\n\\t\\t\\t\\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\\n\\n\\t\\t\\t\\tm1.makeTranslation( x, y, z );\\n\\n\\t\\t\\t\\tthis.applyMatrix( m1 );\\n\\n\\t\\t\\t\\treturn this;\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\t\\tscale: function () {\\n\\n\\t\\t\\t// scale geometry\\n\\n\\t\\t\\tvar m1;\\n\\n\\t\\t\\treturn function scale( x, y, z ) {\\n\\n\\t\\t\\t\\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\\n\\n\\t\\t\\t\\tm1.makeScale( x, y, z );\\n\\n\\t\\t\\t\\tthis.applyMatrix( m1 );\\n\\n\\t\\t\\t\\treturn this;\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\t\\tlookAt: function () {\\n\\n\\t\\t\\tvar obj;\\n\\n\\t\\t\\treturn function lookAt( vector ) {\\n\\n\\t\\t\\t\\tif ( obj === undefined ) obj = new THREE.Object3D();\\n\\n\\t\\t\\t\\tobj.lookAt( vector );\\n\\n\\t\\t\\t\\tobj.updateMatrix();\\n\\n\\t\\t\\t\\tthis.applyMatrix( obj.matrix );\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\t\\tcenter: function () {\\n\\n\\t\\t\\tthis.computeBoundingBox();\\n\\n\\t\\t\\tvar offset = this.boundingBox.center().negate();\\n\\n\\t\\t\\tthis.translate( offset.x, offset.y, offset.z );\\n\\n\\t\\t\\treturn offset;\\n\\n\\t\\t},\\n\\n\\t\\tsetFromObject: function ( object ) {\\n\\n\\t\\t\\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\\n\\n\\t\\t\\tvar geometry = object.geometry;\\n\\n\\t\\t\\tif ( object instanceof THREE.Points || object instanceof THREE.Line ) {\\n\\n\\t\\t\\t\\tvar positions = new THREE.Float32Attribute( geometry.vertices.length * 3, 3 );\\n\\t\\t\\t\\tvar colors = new THREE.Float32Attribute( geometry.colors.length * 3, 3 );\\n\\n\\t\\t\\t\\tthis.addAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\\n\\t\\t\\t\\tthis.addAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\\n\\n\\t\\t\\t\\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\\n\\n\\t\\t\\t\\t\\tvar lineDistances = new THREE.Float32Attribute( geometry.lineDistances.length, 1 );\\n\\n\\t\\t\\t\\t\\tthis.addAttribute( 'lineDistance', lineDistances.copyArray( geometry.lineDistances ) );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( geometry.boundingSphere !== null ) {\\n\\n\\t\\t\\t\\t\\tthis.boundingSphere = geometry.boundingSphere.clone();\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( geometry.boundingBox !== null ) {\\n\\n\\t\\t\\t\\t\\tthis.boundingBox = geometry.boundingBox.clone();\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t} else if ( object instanceof THREE.Mesh ) {\\n\\n\\t\\t\\t\\tif ( geometry instanceof THREE.Geometry ) {\\n\\n\\t\\t\\t\\t\\tthis.fromGeometry( geometry );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tupdateFromObject: function ( object ) {\\n\\n\\t\\t\\tvar geometry = object.geometry;\\n\\n\\t\\t\\tif ( object instanceof THREE.Mesh ) {\\n\\n\\t\\t\\t\\tvar direct = geometry.__directGeometry;\\n\\n\\t\\t\\t\\tif ( direct === undefined || geometry.elementsNeedUpdate === true ) {\\n\\n\\t\\t\\t\\t\\treturn this.fromGeometry( geometry );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate || geometry.elementsNeedUpdate;\\n\\t\\t\\t\\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate || geometry.elementsNeedUpdate;\\n\\t\\t\\t\\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate || geometry.elementsNeedUpdate;\\n\\t\\t\\t\\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate || geometry.elementsNeedUpdate;\\n\\t\\t\\t\\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate || geometry.elementsNeedUpdate;\\n\\n\\t\\t\\t\\tgeometry.elementsNeedUpdate = false;\\n\\t\\t\\t\\tgeometry.verticesNeedUpdate = false;\\n\\t\\t\\t\\tgeometry.normalsNeedUpdate = false;\\n\\t\\t\\t\\tgeometry.colorsNeedUpdate = false;\\n\\t\\t\\t\\tgeometry.uvsNeedUpdate = false;\\n\\t\\t\\t\\tgeometry.groupsNeedUpdate = false;\\n\\n\\t\\t\\t\\tgeometry = direct;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar attribute;\\n\\n\\t\\t\\tif ( geometry.verticesNeedUpdate === true ) {\\n\\n\\t\\t\\t\\tattribute = this.attributes.position;\\n\\n\\t\\t\\t\\tif ( attribute !== undefined ) {\\n\\n\\t\\t\\t\\t\\tattribute.copyVector3sArray( geometry.vertices );\\n\\t\\t\\t\\t\\tattribute.needsUpdate = true;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tgeometry.verticesNeedUpdate = false;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( geometry.normalsNeedUpdate === true ) {\\n\\n\\t\\t\\t\\tattribute = this.attributes.normal;\\n\\n\\t\\t\\t\\tif ( attribute !== undefined ) {\\n\\n\\t\\t\\t\\t\\tattribute.copyVector3sArray( geometry.normals );\\n\\t\\t\\t\\t\\tattribute.needsUpdate = true;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tgeometry.normalsNeedUpdate = false;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( geometry.colorsNeedUpdate === true ) {\\n\\n\\t\\t\\t\\tattribute = this.attributes.color;\\n\\n\\t\\t\\t\\tif ( attribute !== undefined ) {\\n\\n\\t\\t\\t\\t\\tattribute.copyColorsArray( geometry.colors );\\n\\t\\t\\t\\t\\tattribute.needsUpdate = true;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tgeometry.colorsNeedUpdate = false;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( geometry.uvsNeedUpdate ) {\\n\\n\\t\\t\\t\\tattribute = this.attributes.uv;\\n\\n\\t\\t\\t\\tif ( attribute !== undefined ) {\\n\\n\\t\\t\\t\\t\\tattribute.copyVector2sArray( geometry.uvs );\\n\\t\\t\\t\\t\\tattribute.needsUpdate = true;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tgeometry.uvsNeedUpdate = false;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( geometry.lineDistancesNeedUpdate ) {\\n\\n\\t\\t\\t\\tattribute = this.attributes.lineDistance;\\n\\n\\t\\t\\t\\tif ( attribute !== undefined ) {\\n\\n\\t\\t\\t\\t\\tattribute.copyArray( geometry.lineDistances );\\n\\t\\t\\t\\t\\tattribute.needsUpdate = true;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tgeometry.lineDistancesNeedUpdate = false;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( geometry.groupsNeedUpdate ) {\\n\\n\\t\\t\\t\\tgeometry.computeGroups( object.geometry );\\n\\t\\t\\t\\tthis.groups = geometry.groups;\\n\\n\\t\\t\\t\\tgeometry.groupsNeedUpdate = false;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tfromGeometry: function ( geometry ) {\\n\\n\\t\\t\\tgeometry.__directGeometry = new THREE.DirectGeometry().fromGeometry( geometry );\\n\\n\\t\\t\\treturn this.fromDirectGeometry( geometry.__directGeometry );\\n\\n\\t\\t},\\n\\n\\t\\tfromDirectGeometry: function ( geometry ) {\\n\\n\\t\\t\\tvar positions = new Float32Array( geometry.vertices.length * 3 );\\n\\t\\t\\tthis.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\\n\\n\\t\\t\\tif ( geometry.normals.length > 0 ) {\\n\\n\\t\\t\\t\\tvar normals = new Float32Array( geometry.normals.length * 3 );\\n\\t\\t\\t\\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( geometry.colors.length > 0 ) {\\n\\n\\t\\t\\t\\tvar colors = new Float32Array( geometry.colors.length * 3 );\\n\\t\\t\\t\\tthis.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( geometry.uvs.length > 0 ) {\\n\\n\\t\\t\\t\\tvar uvs = new Float32Array( geometry.uvs.length * 2 );\\n\\t\\t\\t\\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( geometry.uvs2.length > 0 ) {\\n\\n\\t\\t\\t\\tvar uvs2 = new Float32Array( geometry.uvs2.length * 2 );\\n\\t\\t\\t\\tthis.addAttribute( 'uv2', new THREE.BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( geometry.indices.length > 0 ) {\\n\\n\\t\\t\\t\\tvar TypeArray = geometry.vertices.length > 65535 ? Uint32Array : Uint16Array;\\n\\t\\t\\t\\tvar indices = new TypeArray( geometry.indices.length * 3 );\\n\\t\\t\\t\\tthis.setIndex( new THREE.BufferAttribute( indices, 1 ).copyIndicesArray( geometry.indices ) );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t// groups\\n\\n\\t\\t\\tthis.groups = geometry.groups;\\n\\n\\t\\t\\t// morphs\\n\\n\\t\\t\\tfor ( var name in geometry.morphTargets ) {\\n\\n\\t\\t\\t\\tvar array = [];\\n\\t\\t\\t\\tvar morphTargets = geometry.morphTargets[ name ];\\n\\n\\t\\t\\t\\tfor ( var i = 0, l = morphTargets.length; i < l; i ++ ) {\\n\\n\\t\\t\\t\\t\\tvar morphTarget = morphTargets[ i ];\\n\\n\\t\\t\\t\\t\\tvar attribute = new THREE.Float32Attribute( morphTarget.length * 3, 3 );\\n\\n\\t\\t\\t\\t\\tarray.push( attribute.copyVector3sArray( morphTarget ) );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tthis.morphAttributes[ name ] = array;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t// skinning\\n\\n\\t\\t\\tif ( geometry.skinIndices.length > 0 ) {\\n\\n\\t\\t\\t\\tvar skinIndices = new THREE.Float32Attribute( geometry.skinIndices.length * 4, 4 );\\n\\t\\t\\t\\tthis.addAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( geometry.skinWeights.length > 0 ) {\\n\\n\\t\\t\\t\\tvar skinWeights = new THREE.Float32Attribute( geometry.skinWeights.length * 4, 4 );\\n\\t\\t\\t\\tthis.addAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t//\\n\\n\\t\\t\\tif ( geometry.boundingSphere !== null ) {\\n\\n\\t\\t\\t\\tthis.boundingSphere = geometry.boundingSphere.clone();\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( geometry.boundingBox !== null ) {\\n\\n\\t\\t\\t\\tthis.boundingBox = geometry.boundingBox.clone();\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tcomputeBoundingBox: function () {\\n\\n\\t\\t\\tif ( this.boundingBox === null ) {\\n\\n\\t\\t\\t\\tthis.boundingBox = new THREE.Box3();\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar positions = this.attributes.position.array;\\n\\n\\t\\t\\tif ( positions !== undefined ) {\\n\\n\\t\\t\\t\\tthis.boundingBox.setFromArray( positions );\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\tthis.boundingBox.makeEmpty();\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\\n\\n\\t\\t\\t\\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \\\"position\\\" attribute is likely to have NaN values.', this );\\n\\n\\t\\t\\t}\\n\\n\\t\\t},\\n\\n\\t\\tcomputeBoundingSphere: function () {\\n\\n\\t\\t\\tvar box = new THREE.Box3();\\n\\t\\t\\tvar vector = new THREE.Vector3();\\n\\n\\t\\t\\treturn function computeBoundingSphere() {\\n\\n\\t\\t\\t\\tif ( this.boundingSphere === null ) {\\n\\n\\t\\t\\t\\t\\tthis.boundingSphere = new THREE.Sphere();\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tvar positions = this.attributes.position;\\n\\n\\t\\t\\t\\tif ( positions ) {\\n\\n\\t\\t\\t\\t\\tvar array = positions.array;\\n\\t\\t\\t\\t\\tvar center = this.boundingSphere.center;\\n\\n\\t\\t\\t\\t\\tbox.setFromArray( array );\\n\\t\\t\\t\\t\\tbox.center( center );\\n\\n\\t\\t\\t\\t\\t// hoping to find a boundingSphere with a radius smaller than the\\n\\t\\t\\t\\t\\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\\n\\n\\t\\t\\t\\t\\tvar maxRadiusSq = 0;\\n\\n\\t\\t\\t\\t\\tfor ( var i = 0, il = array.length; i < il; i += 3 ) {\\n\\n\\t\\t\\t\\t\\t\\tvector.fromArray( array, i );\\n\\t\\t\\t\\t\\t\\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\\n\\n\\t\\t\\t\\t\\tif ( isNaN( this.boundingSphere.radius ) ) {\\n\\n\\t\\t\\t\\t\\t\\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \\\"position\\\" attribute is likely to have NaN values.', this );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\t\\tcomputeFaceNormals: function () {\\n\\n\\t\\t\\t// backwards compatibility\\n\\n\\t\\t},\\n\\n\\t\\tcomputeVertexNormals: function () {\\n\\n\\t\\t\\tvar index = this.index;\\n\\t\\t\\tvar attributes = this.attributes;\\n\\t\\t\\tvar groups = this.groups;\\n\\n\\t\\t\\tif ( attributes.position ) {\\n\\n\\t\\t\\t\\tvar positions = attributes.position.array;\\n\\n\\t\\t\\t\\tif ( attributes.normal === undefined ) {\\n\\n\\t\\t\\t\\t\\tthis.addAttribute( 'normal', new THREE.BufferAttribute( new Float32Array( positions.length ), 3 ) );\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t// reset existing normals to zero\\n\\n\\t\\t\\t\\t\\tvar array = attributes.normal.array;\\n\\n\\t\\t\\t\\t\\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\\n\\n\\t\\t\\t\\t\\t\\tarray[ i ] = 0;\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tvar normals = attributes.normal.array;\\n\\n\\t\\t\\t\\tvar vA, vB, vC,\\n\\n\\t\\t\\t\\tpA = new THREE.Vector3(),\\n\\t\\t\\t\\tpB = new THREE.Vector3(),\\n\\t\\t\\t\\tpC = new THREE.Vector3(),\\n\\n\\t\\t\\t\\tcb = new THREE.Vector3(),\\n\\t\\t\\t\\tab = new THREE.Vector3();\\n\\n\\t\\t\\t\\t// indexed elements\\n\\n\\t\\t\\t\\tif ( index ) {\\n\\n\\t\\t\\t\\t\\tvar indices = index.array;\\n\\n\\t\\t\\t\\t\\tif ( groups.length === 0 ) {\\n\\n\\t\\t\\t\\t\\t\\tthis.addGroup( 0, indices.length );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tfor ( var j = 0, jl = groups.length; j < jl; ++ j ) {\\n\\n\\t\\t\\t\\t\\t\\tvar group = groups[ j ];\\n\\n\\t\\t\\t\\t\\t\\tvar start = group.start;\\n\\t\\t\\t\\t\\t\\tvar count = group.count;\\n\\n\\t\\t\\t\\t\\t\\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tvA = indices[ i + 0 ] * 3;\\n\\t\\t\\t\\t\\t\\t\\tvB = indices[ i + 1 ] * 3;\\n\\t\\t\\t\\t\\t\\t\\tvC = indices[ i + 2 ] * 3;\\n\\n\\t\\t\\t\\t\\t\\t\\tpA.fromArray( positions, vA );\\n\\t\\t\\t\\t\\t\\t\\tpB.fromArray( positions, vB );\\n\\t\\t\\t\\t\\t\\t\\tpC.fromArray( positions, vC );\\n\\n\\t\\t\\t\\t\\t\\t\\tcb.subVectors( pC, pB );\\n\\t\\t\\t\\t\\t\\t\\tab.subVectors( pA, pB );\\n\\t\\t\\t\\t\\t\\t\\tcb.cross( ab );\\n\\n\\t\\t\\t\\t\\t\\t\\tnormals[ vA ] += cb.x;\\n\\t\\t\\t\\t\\t\\t\\tnormals[ vA + 1 ] += cb.y;\\n\\t\\t\\t\\t\\t\\t\\tnormals[ vA + 2 ] += cb.z;\\n\\n\\t\\t\\t\\t\\t\\t\\tnormals[ vB ] += cb.x;\\n\\t\\t\\t\\t\\t\\t\\tnormals[ vB + 1 ] += cb.y;\\n\\t\\t\\t\\t\\t\\t\\tnormals[ vB + 2 ] += cb.z;\\n\\n\\t\\t\\t\\t\\t\\t\\tnormals[ vC ] += cb.x;\\n\\t\\t\\t\\t\\t\\t\\tnormals[ vC + 1 ] += cb.y;\\n\\t\\t\\t\\t\\t\\t\\tnormals[ vC + 2 ] += cb.z;\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t// non-indexed elements (unconnected triangle soup)\\n\\n\\t\\t\\t\\t\\tfor ( var i = 0, il = positions.length; i < il; i += 9 ) {\\n\\n\\t\\t\\t\\t\\t\\tpA.fromArray( positions, i );\\n\\t\\t\\t\\t\\t\\tpB.fromArray( positions, i + 3 );\\n\\t\\t\\t\\t\\t\\tpC.fromArray( positions, i + 6 );\\n\\n\\t\\t\\t\\t\\t\\tcb.subVectors( pC, pB );\\n\\t\\t\\t\\t\\t\\tab.subVectors( pA, pB );\\n\\t\\t\\t\\t\\t\\tcb.cross( ab );\\n\\n\\t\\t\\t\\t\\t\\tnormals[ i ] = cb.x;\\n\\t\\t\\t\\t\\t\\tnormals[ i + 1 ] = cb.y;\\n\\t\\t\\t\\t\\t\\tnormals[ i + 2 ] = cb.z;\\n\\n\\t\\t\\t\\t\\t\\tnormals[ i + 3 ] = cb.x;\\n\\t\\t\\t\\t\\t\\tnormals[ i + 4 ] = cb.y;\\n\\t\\t\\t\\t\\t\\tnormals[ i + 5 ] = cb.z;\\n\\n\\t\\t\\t\\t\\t\\tnormals[ i + 6 ] = cb.x;\\n\\t\\t\\t\\t\\t\\tnormals[ i + 7 ] = cb.y;\\n\\t\\t\\t\\t\\t\\tnormals[ i + 8 ] = cb.z;\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tthis.normalizeNormals();\\n\\n\\t\\t\\t\\tattributes.normal.needsUpdate = true;\\n\\n\\t\\t\\t}\\n\\n\\t\\t},\\n\\n\\t\\tmerge: function ( geometry, offset ) {\\n\\n\\t\\t\\tif ( geometry instanceof THREE.BufferGeometry === false ) {\\n\\n\\t\\t\\t\\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\\n\\t\\t\\t\\treturn;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( offset === undefined ) offset = 0;\\n\\n\\t\\t\\tvar attributes = this.attributes;\\n\\n\\t\\t\\tfor ( var key in attributes ) {\\n\\n\\t\\t\\t\\tif ( geometry.attributes[ key ] === undefined ) continue;\\n\\n\\t\\t\\t\\tvar attribute1 = attributes[ key ];\\n\\t\\t\\t\\tvar attributeArray1 = attribute1.array;\\n\\n\\t\\t\\t\\tvar attribute2 = geometry.attributes[ key ];\\n\\t\\t\\t\\tvar attributeArray2 = attribute2.array;\\n\\n\\t\\t\\t\\tvar attributeSize = attribute2.itemSize;\\n\\n\\t\\t\\t\\tfor ( var i = 0, j = attributeSize * offset; i < attributeArray2.length; i ++, j ++ ) {\\n\\n\\t\\t\\t\\t\\tattributeArray1[ j ] = attributeArray2[ i ];\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tnormalizeNormals: function () {\\n\\n\\t\\t\\tvar normals = this.attributes.normal.array;\\n\\n\\t\\t\\tvar x, y, z, n;\\n\\n\\t\\t\\tfor ( var i = 0, il = normals.length; i < il; i += 3 ) {\\n\\n\\t\\t\\t\\tx = normals[ i ];\\n\\t\\t\\t\\ty = normals[ i + 1 ];\\n\\t\\t\\t\\tz = normals[ i + 2 ];\\n\\n\\t\\t\\t\\tn = 1.0 / Math.sqrt( x * x + y * y + z * z );\\n\\n\\t\\t\\t\\tnormals[ i ] *= n;\\n\\t\\t\\t\\tnormals[ i + 1 ] *= n;\\n\\t\\t\\t\\tnormals[ i + 2 ] *= n;\\n\\n\\t\\t\\t}\\n\\n\\t\\t},\\n\\n\\t\\ttoNonIndexed: function () {\\n\\n\\t\\t\\tif ( this.index === null ) {\\n\\n\\t\\t\\t\\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.' );\\n\\t\\t\\t\\treturn this;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar geometry2 = new THREE.BufferGeometry();\\n\\n\\t\\t\\tvar indices = this.index.array;\\n\\t\\t\\tvar attributes = this.attributes;\\n\\n\\t\\t\\tfor ( var name in attributes ) {\\n\\n\\t\\t\\t\\tvar attribute = attributes[ name ];\\n\\n\\t\\t\\t\\tvar array = attribute.array;\\n\\t\\t\\t\\tvar itemSize = attribute.itemSize;\\n\\n\\t\\t\\t\\tvar array2 = new array.constructor( indices.length * itemSize );\\n\\n\\t\\t\\t\\tvar index = 0, index2 = 0;\\n\\n\\t\\t\\t\\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\\n\\n\\t\\t\\t\\t\\tindex = indices[ i ] * itemSize;\\n\\n\\t\\t\\t\\t\\tfor ( var j = 0; j < itemSize; j ++ ) {\\n\\n\\t\\t\\t\\t\\t\\tarray2[ index2 ++ ] = array[ index ++ ];\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tgeometry2.addAttribute( name, new THREE.BufferAttribute( array2, itemSize ) );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn geometry2;\\n\\n\\t\\t},\\n\\n\\t\\ttoJSON: function () {\\n\\n\\t\\t\\tvar data = {\\n\\t\\t\\t\\tmetadata: {\\n\\t\\t\\t\\t\\tversion: 4.4,\\n\\t\\t\\t\\t\\ttype: 'BufferGeometry',\\n\\t\\t\\t\\t\\tgenerator: 'BufferGeometry.toJSON'\\n\\t\\t\\t\\t}\\n\\t\\t\\t};\\n\\n\\t\\t\\t// standard BufferGeometry serialization\\n\\n\\t\\t\\tdata.uuid = this.uuid;\\n\\t\\t\\tdata.type = this.type;\\n\\t\\t\\tif ( this.name !== '' ) data.name = this.name;\\n\\n\\t\\t\\tif ( this.parameters !== undefined ) {\\n\\n\\t\\t\\t\\tvar parameters = this.parameters;\\n\\n\\t\\t\\t\\tfor ( var key in parameters ) {\\n\\n\\t\\t\\t\\t\\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn data;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tdata.data = { attributes: {} };\\n\\n\\t\\t\\tvar index = this.index;\\n\\n\\t\\t\\tif ( index !== null ) {\\n\\n\\t\\t\\t\\tvar array = Array.prototype.slice.call( index.array );\\n\\n\\t\\t\\t\\tdata.data.index = {\\n\\t\\t\\t\\t\\ttype: index.array.constructor.name,\\n\\t\\t\\t\\t\\tarray: array\\n\\t\\t\\t\\t};\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar attributes = this.attributes;\\n\\n\\t\\t\\tfor ( var key in attributes ) {\\n\\n\\t\\t\\t\\tvar attribute = attributes[ key ];\\n\\n\\t\\t\\t\\tvar array = Array.prototype.slice.call( attribute.array );\\n\\n\\t\\t\\t\\tdata.data.attributes[ key ] = {\\n\\t\\t\\t\\t\\titemSize: attribute.itemSize,\\n\\t\\t\\t\\t\\ttype: attribute.array.constructor.name,\\n\\t\\t\\t\\t\\tarray: array,\\n\\t\\t\\t\\t\\tnormalized: attribute.normalized\\n\\t\\t\\t\\t};\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar groups = this.groups;\\n\\n\\t\\t\\tif ( groups.length > 0 ) {\\n\\n\\t\\t\\t\\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar boundingSphere = this.boundingSphere;\\n\\n\\t\\t\\tif ( boundingSphere !== null ) {\\n\\n\\t\\t\\t\\tdata.data.boundingSphere = {\\n\\t\\t\\t\\t\\tcenter: boundingSphere.center.toArray(),\\n\\t\\t\\t\\t\\tradius: boundingSphere.radius\\n\\t\\t\\t\\t};\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn data;\\n\\n\\t\\t},\\n\\n\\t\\tclone: function () {\\n\\n\\t\\t\\t/*\\n\\t\\t\\t// Handle primitives\\n\\n\\t\\t\\tvar parameters = this.parameters;\\n\\n\\t\\t\\tif ( parameters !== undefined ) {\\n\\n\\t\\t\\t\\tvar values = [];\\n\\n\\t\\t\\t\\tfor ( var key in parameters ) {\\n\\n\\t\\t\\t\\t\\tvalues.push( parameters[ key ] );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tvar geometry = Object.create( this.constructor.prototype );\\n\\t\\t\\t\\tthis.constructor.apply( geometry, values );\\n\\t\\t\\t\\treturn geometry;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn new this.constructor().copy( this );\\n\\t\\t\\t*/\\n\\n\\t\\t\\treturn new THREE.BufferGeometry().copy( this );\\n\\n\\t\\t},\\n\\n\\t\\tcopy: function ( source ) {\\n\\n\\t\\t\\tvar index = source.index;\\n\\n\\t\\t\\tif ( index !== null ) {\\n\\n\\t\\t\\t\\tthis.setIndex( index.clone() );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar attributes = source.attributes;\\n\\n\\t\\t\\tfor ( var name in attributes ) {\\n\\n\\t\\t\\t\\tvar attribute = attributes[ name ];\\n\\t\\t\\t\\tthis.addAttribute( name, attribute.clone() );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar groups = source.groups;\\n\\n\\t\\t\\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\\n\\n\\t\\t\\t\\tvar group = groups[ i ];\\n\\t\\t\\t\\tthis.addGroup( group.start, group.count, group.materialIndex );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tdispose: function () {\\n\\n\\t\\t\\tthis.dispatchEvent( { type: 'dispose' } );\\n\\n\\t\\t}\\n\\n\\t} );\\n\\n\\tTHREE.BufferGeometry.MaxIndex = 65535;\\n\\n\\t// File:src/core/InstancedBufferGeometry.js\\n\\n\\t/**\\n\\t * @author benaadams / https://twitter.com/ben_a_adams\\n\\t */\\n\\n\\tTHREE.InstancedBufferGeometry = function () {\\n\\n\\t\\tTHREE.BufferGeometry.call( this );\\n\\n\\t\\tthis.type = 'InstancedBufferGeometry';\\n\\t\\tthis.maxInstancedCount = undefined;\\n\\n\\t};\\n\\n\\tTHREE.InstancedBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\\n\\tTHREE.InstancedBufferGeometry.prototype.constructor = THREE.InstancedBufferGeometry;\\n\\n\\tTHREE.InstancedBufferGeometry.prototype.addGroup = function ( start, count, instances ) {\\n\\n\\t\\tthis.groups.push( {\\n\\n\\t\\t\\tstart: start,\\n\\t\\t\\tcount: count,\\n\\t\\t\\tinstances: instances\\n\\n\\t\\t} );\\n\\n\\t};\\n\\n\\tTHREE.InstancedBufferGeometry.prototype.copy = function ( source ) {\\n\\n\\t\\tvar index = source.index;\\n\\n\\t\\tif ( index !== null ) {\\n\\n\\t\\t\\tthis.setIndex( index.clone() );\\n\\n\\t\\t}\\n\\n\\t\\tvar attributes = source.attributes;\\n\\n\\t\\tfor ( var name in attributes ) {\\n\\n\\t\\t\\tvar attribute = attributes[ name ];\\n\\t\\t\\tthis.addAttribute( name, attribute.clone() );\\n\\n\\t\\t}\\n\\n\\t\\tvar groups = source.groups;\\n\\n\\t\\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\\n\\n\\t\\t\\tvar group = groups[ i ];\\n\\t\\t\\tthis.addGroup( group.start, group.count, group.instances );\\n\\n\\t\\t}\\n\\n\\t\\treturn this;\\n\\n\\t};\\n\\n\\t// File:src/core/Uniform.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t */\\n\\n\\tTHREE.Uniform = function ( value ) {\\n\\n\\t\\tif ( typeof value === 'string' ) {\\n\\n\\t\\t\\tconsole.warn( 'THREE.Uniform: Type parameter is no longer needed.' );\\n\\t\\t\\tvalue = arguments[ 1 ];\\n\\n\\t\\t}\\n\\n\\t\\tthis.value = value;\\n\\n\\t\\tthis.dynamic = false;\\n\\n\\t};\\n\\n\\tTHREE.Uniform.prototype = {\\n\\n\\t\\tconstructor: THREE.Uniform,\\n\\n\\t\\tonUpdate: function ( callback ) {\\n\\n\\t\\t\\tthis.dynamic = true;\\n\\t\\t\\tthis.onUpdateCallback = callback;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\t// File:src/animation/AnimationAction.js\\n\\n\\t/**\\n\\t *\\n\\t * Action provided by AnimationMixer for scheduling clip playback on specific\\n\\t * objects.\\n\\t *\\n\\t * @author Ben Houston / http://clara.io/\\n\\t * @author David Sarno / http://lighthaus.us/\\n\\t * @author tschw\\n\\t *\\n\\t */\\n\\n\\tTHREE.AnimationAction = function() {\\n\\n\\t\\tthrow new Error( \\\"THREE.AnimationAction: \\\" +\\n\\t\\t\\t\\t\\\"Use mixer.clipAction for construction.\\\" );\\n\\n\\t};\\n\\n\\tTHREE.AnimationAction._new =\\n\\t\\t\\tfunction AnimationAction( mixer, clip, localRoot ) {\\n\\n\\t\\tthis._mixer = mixer;\\n\\t\\tthis._clip = clip;\\n\\t\\tthis._localRoot = localRoot || null;\\n\\n\\t\\tvar tracks = clip.tracks,\\n\\t\\t\\tnTracks = tracks.length,\\n\\t\\t\\tinterpolants = new Array( nTracks );\\n\\n\\t\\tvar interpolantSettings = {\\n\\t\\t\\t\\tendingStart: \\tTHREE.ZeroCurvatureEnding,\\n\\t\\t\\t\\tendingEnd:\\t\\tTHREE.ZeroCurvatureEnding\\n\\t\\t};\\n\\n\\t\\tfor ( var i = 0; i !== nTracks; ++ i ) {\\n\\n\\t\\t\\tvar interpolant = tracks[ i ].createInterpolant( null );\\n\\t\\t\\tinterpolants[ i ] = interpolant;\\n\\t\\t\\tinterpolant.settings = interpolantSettings;\\n\\n\\t\\t}\\n\\n\\t\\tthis._interpolantSettings = interpolantSettings;\\n\\n\\t\\tthis._interpolants = interpolants;\\t// bound by the mixer\\n\\n\\t\\t// inside: PropertyMixer (managed by the mixer)\\n\\t\\tthis._propertyBindings = new Array( nTracks );\\n\\n\\t\\tthis._cacheIndex = null;\\t\\t\\t// for the memory manager\\n\\t\\tthis._byClipCacheIndex = null;\\t\\t// for the memory manager\\n\\n\\t\\tthis._timeScaleInterpolant = null;\\n\\t\\tthis._weightInterpolant = null;\\n\\n\\t\\tthis.loop = THREE.LoopRepeat;\\n\\t\\tthis._loopCount = -1;\\n\\n\\t\\t// global mixer time when the action is to be started\\n\\t\\t// it's set back to 'null' upon start of the action\\n\\t\\tthis._startTime = null;\\n\\n\\t\\t// scaled local time of the action\\n\\t\\t// gets clamped or wrapped to 0..clip.duration according to loop\\n\\t\\tthis.time = 0;\\n\\n\\t\\tthis.timeScale = 1;\\n\\t\\tthis._effectiveTimeScale = 1;\\n\\n\\t\\tthis.weight = 1;\\n\\t\\tthis._effectiveWeight = 1;\\n\\n\\t\\tthis.repetitions = Infinity; \\t\\t// no. of repetitions when looping\\n\\n\\t\\tthis.paused = false;\\t\\t\\t\\t// false -> zero effective time scale\\n\\t\\tthis.enabled = true;\\t\\t\\t\\t// true -> zero effective weight\\n\\n\\t\\tthis.clampWhenFinished \\t= false;\\t// keep feeding the last frame?\\n\\n\\t\\tthis.zeroSlopeAtStart \\t= true;\\t\\t// for smooth interpolation w/o separate\\n\\t\\tthis.zeroSlopeAtEnd\\t\\t= true;\\t\\t// clips for start, loop and end\\n\\n\\t};\\n\\n\\tTHREE.AnimationAction._new.prototype = {\\n\\n\\t\\tconstructor: THREE.AnimationAction._new,\\n\\n\\t\\t// State & Scheduling\\n\\n\\t\\tplay: function() {\\n\\n\\t\\t\\tthis._mixer._activateAction( this );\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tstop: function() {\\n\\n\\t\\t\\tthis._mixer._deactivateAction( this );\\n\\n\\t\\t\\treturn this.reset();\\n\\n\\t\\t},\\n\\n\\t\\treset: function() {\\n\\n\\t\\t\\tthis.paused = false;\\n\\t\\t\\tthis.enabled = true;\\n\\n\\t\\t\\tthis.time = 0;\\t\\t\\t// restart clip\\n\\t\\t\\tthis._loopCount = -1;\\t// forget previous loops\\n\\t\\t\\tthis._startTime = null;\\t// forget scheduling\\n\\n\\t\\t\\treturn this.stopFading().stopWarping();\\n\\n\\t\\t},\\n\\n\\t\\tisRunning: function() {\\n\\n\\t\\t\\tvar start = this._startTime;\\n\\n\\t\\t\\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\\n\\t\\t\\t\\t\\tthis._startTime === null && this._mixer._isActiveAction( this );\\n\\n\\t\\t},\\n\\n\\t\\t// return true when play has been called\\n\\t\\tisScheduled: function() {\\n\\n\\t\\t\\treturn this._mixer._isActiveAction( this );\\n\\n\\t\\t},\\n\\n\\t\\tstartAt: function( time ) {\\n\\n\\t\\t\\tthis._startTime = time;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tsetLoop: function( mode, repetitions ) {\\n\\n\\t\\t\\tthis.loop = mode;\\n\\t\\t\\tthis.repetitions = repetitions;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\t// Weight\\n\\n\\t\\t// set the weight stopping any scheduled fading\\n\\t\\t// although .enabled = false yields an effective weight of zero, this\\n\\t\\t// method does *not* change .enabled, because it would be confusing\\n\\t\\tsetEffectiveWeight: function( weight ) {\\n\\n\\t\\t\\tthis.weight = weight;\\n\\n\\t\\t\\t// note: same logic as when updated at runtime\\n\\t\\t\\tthis._effectiveWeight = this.enabled ? weight : 0;\\n\\n\\t\\t\\treturn this.stopFading();\\n\\n\\t\\t},\\n\\n\\t\\t// return the weight considering fading and .enabled\\n\\t\\tgetEffectiveWeight: function() {\\n\\n\\t\\t\\treturn this._effectiveWeight;\\n\\n\\t\\t},\\n\\n\\t\\tfadeIn: function( duration ) {\\n\\n\\t\\t\\treturn this._scheduleFading( duration, 0, 1 );\\n\\n\\t\\t},\\n\\n\\t\\tfadeOut: function( duration ) {\\n\\n\\t\\t\\treturn this._scheduleFading( duration, 1, 0 );\\n\\n\\t\\t},\\n\\n\\t\\tcrossFadeFrom: function( fadeOutAction, duration, warp ) {\\n\\n\\t\\t\\tvar mixer = this._mixer;\\n\\n\\t\\t\\tfadeOutAction.fadeOut( duration );\\n\\t\\t\\tthis.fadeIn( duration );\\n\\n\\t\\t\\tif( warp ) {\\n\\n\\t\\t\\t\\tvar fadeInDuration = this._clip.duration,\\n\\t\\t\\t\\t\\tfadeOutDuration = fadeOutAction._clip.duration,\\n\\n\\t\\t\\t\\t\\tstartEndRatio = fadeOutDuration / fadeInDuration,\\n\\t\\t\\t\\t\\tendStartRatio = fadeInDuration / fadeOutDuration;\\n\\n\\t\\t\\t\\tfadeOutAction.warp( 1.0, startEndRatio, duration );\\n\\t\\t\\t\\tthis.warp( endStartRatio, 1.0, duration );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tcrossFadeTo: function( fadeInAction, duration, warp ) {\\n\\n\\t\\t\\treturn fadeInAction.crossFadeFrom( this, duration, warp );\\n\\n\\t\\t},\\n\\n\\t\\tstopFading: function() {\\n\\n\\t\\t\\tvar weightInterpolant = this._weightInterpolant;\\n\\n\\t\\t\\tif ( weightInterpolant !== null ) {\\n\\n\\t\\t\\t\\tthis._weightInterpolant = null;\\n\\t\\t\\t\\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\t// Time Scale Control\\n\\n\\t\\t// set the weight stopping any scheduled warping\\n\\t\\t// although .paused = true yields an effective time scale of zero, this\\n\\t\\t// method does *not* change .paused, because it would be confusing\\n\\t\\tsetEffectiveTimeScale: function( timeScale ) {\\n\\n\\t\\t\\tthis.timeScale = timeScale;\\n\\t\\t\\tthis._effectiveTimeScale = this.paused ? 0 :timeScale;\\n\\n\\t\\t\\treturn this.stopWarping();\\n\\n\\t\\t},\\n\\n\\t\\t// return the time scale considering warping and .paused\\n\\t\\tgetEffectiveTimeScale: function() {\\n\\n\\t\\t\\treturn this._effectiveTimeScale;\\n\\n\\t\\t},\\n\\n\\t\\tsetDuration: function( duration ) {\\n\\n\\t\\t\\tthis.timeScale = this._clip.duration / duration;\\n\\n\\t\\t\\treturn this.stopWarping();\\n\\n\\t\\t},\\n\\n\\t\\tsyncWith: function( action ) {\\n\\n\\t\\t\\tthis.time = action.time;\\n\\t\\t\\tthis.timeScale = action.timeScale;\\n\\n\\t\\t\\treturn this.stopWarping();\\n\\n\\t\\t},\\n\\n\\t\\thalt: function( duration ) {\\n\\n\\t\\t\\treturn this.warp( this._effectiveTimeScale, 0, duration );\\n\\n\\t\\t},\\n\\n\\t\\twarp: function( startTimeScale, endTimeScale, duration ) {\\n\\n\\t\\t\\tvar mixer = this._mixer, now = mixer.time,\\n\\t\\t\\t\\tinterpolant = this._timeScaleInterpolant,\\n\\n\\t\\t\\t\\ttimeScale = this.timeScale;\\n\\n\\t\\t\\tif ( interpolant === null ) {\\n\\n\\t\\t\\t\\tinterpolant = mixer._lendControlInterpolant(),\\n\\t\\t\\t\\tthis._timeScaleInterpolant = interpolant;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar times = interpolant.parameterPositions,\\n\\t\\t\\t\\tvalues = interpolant.sampleValues;\\n\\n\\t\\t\\ttimes[ 0 ] = now;\\n\\t\\t\\ttimes[ 1 ] = now + duration;\\n\\n\\t\\t\\tvalues[ 0 ] = startTimeScale / timeScale;\\n\\t\\t\\tvalues[ 1 ] = endTimeScale / timeScale;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tstopWarping: function() {\\n\\n\\t\\t\\tvar timeScaleInterpolant = this._timeScaleInterpolant;\\n\\n\\t\\t\\tif ( timeScaleInterpolant !== null ) {\\n\\n\\t\\t\\t\\tthis._timeScaleInterpolant = null;\\n\\t\\t\\t\\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\t// Object Accessors\\n\\n\\t\\tgetMixer: function() {\\n\\n\\t\\t\\treturn this._mixer;\\n\\n\\t\\t},\\n\\n\\t\\tgetClip: function() {\\n\\n\\t\\t\\treturn this._clip;\\n\\n\\t\\t},\\n\\n\\t\\tgetRoot: function() {\\n\\n\\t\\t\\treturn this._localRoot || this._mixer._root;\\n\\n\\t\\t},\\n\\n\\t\\t// Interna\\n\\n\\t\\t_update: function( time, deltaTime, timeDirection, accuIndex ) {\\n\\t\\t\\t// called by the mixer\\n\\n\\t\\t\\tvar startTime = this._startTime;\\n\\n\\t\\t\\tif ( startTime !== null ) {\\n\\n\\t\\t\\t\\t// check for scheduled start of action\\n\\n\\t\\t\\t\\tvar timeRunning = ( time - startTime ) * timeDirection;\\n\\t\\t\\t\\tif ( timeRunning < 0 || timeDirection === 0 ) {\\n\\n\\t\\t\\t\\t\\treturn; // yet to come / don't decide when delta = 0\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// start\\n\\n\\t\\t\\t\\tthis._startTime = null; // unschedule\\n\\t\\t\\t\\tdeltaTime = timeDirection * timeRunning;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t// apply time scale and advance time\\n\\n\\t\\t\\tdeltaTime *= this._updateTimeScale( time );\\n\\t\\t\\tvar clipTime = this._updateTime( deltaTime );\\n\\n\\t\\t\\t// note: _updateTime may disable the action resulting in\\n\\t\\t\\t// an effective weight of 0\\n\\n\\t\\t\\tvar weight = this._updateWeight( time );\\n\\n\\t\\t\\tif ( weight > 0 ) {\\n\\n\\t\\t\\t\\tvar interpolants = this._interpolants;\\n\\t\\t\\t\\tvar propertyMixers = this._propertyBindings;\\n\\n\\t\\t\\t\\tfor ( var j = 0, m = interpolants.length; j !== m; ++ j ) {\\n\\n\\t\\t\\t\\t\\tinterpolants[ j ].evaluate( clipTime );\\n\\t\\t\\t\\t\\tpropertyMixers[ j ].accumulate( accuIndex, weight );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t},\\n\\n\\t\\t_updateWeight: function( time ) {\\n\\n\\t\\t\\tvar weight = 0;\\n\\n\\t\\t\\tif ( this.enabled ) {\\n\\n\\t\\t\\t\\tweight = this.weight;\\n\\t\\t\\t\\tvar interpolant = this._weightInterpolant;\\n\\n\\t\\t\\t\\tif ( interpolant !== null ) {\\n\\n\\t\\t\\t\\t\\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\\n\\n\\t\\t\\t\\t\\tweight *= interpolantValue;\\n\\n\\t\\t\\t\\t\\tif ( time > interpolant.parameterPositions[ 1 ] ) {\\n\\n\\t\\t\\t\\t\\t\\tthis.stopFading();\\n\\n\\t\\t\\t\\t\\t\\tif ( interpolantValue === 0 ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t// faded out, disable\\n\\t\\t\\t\\t\\t\\t\\tthis.enabled = false;\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis._effectiveWeight = weight;\\n\\t\\t\\treturn weight;\\n\\n\\t\\t},\\n\\n\\t\\t_updateTimeScale: function( time ) {\\n\\n\\t\\t\\tvar timeScale = 0;\\n\\n\\t\\t\\tif ( ! this.paused ) {\\n\\n\\t\\t\\t\\ttimeScale = this.timeScale;\\n\\n\\t\\t\\t\\tvar interpolant = this._timeScaleInterpolant;\\n\\n\\t\\t\\t\\tif ( interpolant !== null ) {\\n\\n\\t\\t\\t\\t\\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\\n\\n\\t\\t\\t\\t\\ttimeScale *= interpolantValue;\\n\\n\\t\\t\\t\\t\\tif ( time > interpolant.parameterPositions[ 1 ] ) {\\n\\n\\t\\t\\t\\t\\t\\tthis.stopWarping();\\n\\n\\t\\t\\t\\t\\t\\tif ( timeScale === 0 ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t// motion has halted, pause\\n\\t\\t\\t\\t\\t\\t\\tthis.paused = true;\\n\\n\\t\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\t\\t// warp done - apply final time scale\\n\\t\\t\\t\\t\\t\\t\\tthis.timeScale = timeScale;\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis._effectiveTimeScale = timeScale;\\n\\t\\t\\treturn timeScale;\\n\\n\\t\\t},\\n\\n\\t\\t_updateTime: function( deltaTime ) {\\n\\n\\t\\t\\tvar time = this.time + deltaTime;\\n\\n\\t\\t\\tif ( deltaTime === 0 ) return time;\\n\\n\\t\\t\\tvar duration = this._clip.duration,\\n\\n\\t\\t\\t\\tloop = this.loop,\\n\\t\\t\\t\\tloopCount = this._loopCount;\\n\\n\\t\\t\\tif ( loop === THREE.LoopOnce ) {\\n\\n\\t\\t\\t\\tif ( loopCount === -1 ) {\\n\\t\\t\\t\\t\\t// just started\\n\\n\\t\\t\\t\\t\\tthis.loopCount = 0;\\n\\t\\t\\t\\t\\tthis._setEndings( true, true, false );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\thandle_stop: {\\n\\n\\t\\t\\t\\t\\tif ( time >= duration ) {\\n\\n\\t\\t\\t\\t\\t\\ttime = duration;\\n\\n\\t\\t\\t\\t\\t} else if ( time < 0 ) {\\n\\n\\t\\t\\t\\t\\t\\ttime = 0;\\n\\n\\t\\t\\t\\t\\t} else break handle_stop;\\n\\n\\t\\t\\t\\t\\tif ( this.clampWhenFinished ) this.paused = true;\\n\\t\\t\\t\\t\\telse this.enabled = false;\\n\\n\\t\\t\\t\\t\\tthis._mixer.dispatchEvent( {\\n\\t\\t\\t\\t\\t\\ttype: 'finished', action: this,\\n\\t\\t\\t\\t\\t\\tdirection: deltaTime < 0 ? -1 : 1\\n\\t\\t\\t\\t\\t} );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t} else { // repetitive Repeat or PingPong\\n\\n\\t\\t\\t\\tvar pingPong = ( loop === THREE.LoopPingPong );\\n\\n\\t\\t\\t\\tif ( loopCount === -1 ) {\\n\\t\\t\\t\\t\\t// just started\\n\\n\\t\\t\\t\\t\\tif ( deltaTime >= 0 ) {\\n\\n\\t\\t\\t\\t\\t\\tloopCount = 0;\\n\\n\\t\\t\\t\\t\\t\\tthis._setEndings(\\n\\t\\t\\t\\t\\t\\t\\t\\ttrue, this.repetitions === 0, pingPong );\\n\\n\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\t// when looping in reverse direction, the initial\\n\\t\\t\\t\\t\\t\\t// transition through zero counts as a repetition,\\n\\t\\t\\t\\t\\t\\t// so leave loopCount at -1\\n\\n\\t\\t\\t\\t\\t\\tthis._setEndings(\\n\\t\\t\\t\\t\\t\\t\\t\\tthis.repetitions === 0, true, pingPong );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( time >= duration || time < 0 ) {\\n\\t\\t\\t\\t\\t// wrap around\\n\\n\\t\\t\\t\\t\\tvar loopDelta = Math.floor( time / duration ); // signed\\n\\t\\t\\t\\t\\ttime -= duration * loopDelta;\\n\\n\\t\\t\\t\\t\\tloopCount += Math.abs( loopDelta );\\n\\n\\t\\t\\t\\t\\tvar pending = this.repetitions - loopCount;\\n\\n\\t\\t\\t\\t\\tif ( pending < 0 ) {\\n\\t\\t\\t\\t\\t\\t// have to stop (switch state, clamp time, fire event)\\n\\n\\t\\t\\t\\t\\t\\tif ( this.clampWhenFinished ) this.paused = true;\\n\\t\\t\\t\\t\\t\\telse this.enabled = false;\\n\\n\\t\\t\\t\\t\\t\\ttime = deltaTime > 0 ? duration : 0;\\n\\n\\t\\t\\t\\t\\t\\tthis._mixer.dispatchEvent( {\\n\\t\\t\\t\\t\\t\\t\\ttype: 'finished', action: this,\\n\\t\\t\\t\\t\\t\\t\\tdirection: deltaTime > 0 ? 1 : -1\\n\\t\\t\\t\\t\\t\\t} );\\n\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t// keep running\\n\\n\\t\\t\\t\\t\\t\\tif ( pending === 0 ) {\\n\\t\\t\\t\\t\\t\\t\\t// entering the last round\\n\\n\\t\\t\\t\\t\\t\\t\\tvar atStart = deltaTime < 0;\\n\\t\\t\\t\\t\\t\\t\\tthis._setEndings( atStart, ! atStart, pingPong );\\n\\n\\t\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\t\\tthis._setEndings( false, false, pingPong );\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\tthis._loopCount = loopCount;\\n\\n\\t\\t\\t\\t\\t\\tthis._mixer.dispatchEvent( {\\n\\t\\t\\t\\t\\t\\t\\ttype: 'loop', action: this, loopDelta: loopDelta\\n\\t\\t\\t\\t\\t\\t} );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\\n\\t\\t\\t\\t\\t// invert time for the \\\"pong round\\\"\\n\\n\\t\\t\\t\\t\\tthis.time = time;\\n\\t\\t\\t\\t\\treturn duration - time;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.time = time;\\n\\t\\t\\treturn time;\\n\\n\\t\\t},\\n\\n\\t\\t_setEndings: function( atStart, atEnd, pingPong ) {\\n\\n\\t\\t\\tvar settings = this._interpolantSettings;\\n\\n\\t\\t\\tif ( pingPong ) {\\n\\n\\t\\t\\t\\tsettings.endingStart \\t= THREE.ZeroSlopeEnding;\\n\\t\\t\\t\\tsettings.endingEnd\\t\\t= THREE.ZeroSlopeEnding;\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t// assuming for LoopOnce atStart == atEnd == true\\n\\n\\t\\t\\t\\tif ( atStart ) {\\n\\n\\t\\t\\t\\t\\tsettings.endingStart = this.zeroSlopeAtStart ?\\n\\t\\t\\t\\t\\t\\t\\tTHREE.ZeroSlopeEnding : THREE.ZeroCurvatureEnding;\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\tsettings.endingStart = THREE.WrapAroundEnding;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( atEnd ) {\\n\\n\\t\\t\\t\\t\\tsettings.endingEnd = this.zeroSlopeAtEnd ?\\n\\t\\t\\t\\t\\t\\t\\tTHREE.ZeroSlopeEnding : THREE.ZeroCurvatureEnding;\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\tsettings.endingEnd \\t = THREE.WrapAroundEnding;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t},\\n\\n\\t\\t_scheduleFading: function( duration, weightNow, weightThen ) {\\n\\n\\t\\t\\tvar mixer = this._mixer, now = mixer.time,\\n\\t\\t\\t\\tinterpolant = this._weightInterpolant;\\n\\n\\t\\t\\tif ( interpolant === null ) {\\n\\n\\t\\t\\t\\tinterpolant = mixer._lendControlInterpolant(),\\n\\t\\t\\t\\tthis._weightInterpolant = interpolant;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar times = interpolant.parameterPositions,\\n\\t\\t\\t\\tvalues = interpolant.sampleValues;\\n\\n\\t\\t\\ttimes[ 0 ] = now; \\t\\t\\t\\tvalues[ 0 ] = weightNow;\\n\\t\\t\\ttimes[ 1 ] = now + duration;\\tvalues[ 1 ] = weightThen;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\n\\t// File:src/animation/AnimationClip.js\\n\\n\\t/**\\n\\t *\\n\\t * Reusable set of Tracks that represent an animation.\\n\\t *\\n\\t * @author Ben Houston / http://clara.io/\\n\\t * @author David Sarno / http://lighthaus.us/\\n\\t */\\n\\n\\tTHREE.AnimationClip = function ( name, duration, tracks ) {\\n\\n\\t\\tthis.name = name;\\n\\t\\tthis.tracks = tracks;\\n\\t\\tthis.duration = ( duration !== undefined ) ? duration : -1;\\n\\n\\t\\tthis.uuid = THREE.Math.generateUUID();\\n\\n\\t\\t// this means it should figure out its duration by scanning the tracks\\n\\t\\tif ( this.duration < 0 ) {\\n\\n\\t\\t\\tthis.resetDuration();\\n\\n\\t\\t}\\n\\n\\t\\t// maybe only do these on demand, as doing them here could potentially slow down loading\\n\\t\\t// but leaving these here during development as this ensures a lot of testing of these functions\\n\\t\\tthis.trim();\\n\\t\\tthis.optimize();\\n\\n\\t};\\n\\n\\tTHREE.AnimationClip.prototype = {\\n\\n\\t\\tconstructor: THREE.AnimationClip,\\n\\n\\t\\tresetDuration: function() {\\n\\n\\t\\t\\tvar tracks = this.tracks,\\n\\t\\t\\t\\tduration = 0;\\n\\n\\t\\t\\tfor ( var i = 0, n = tracks.length; i !== n; ++ i ) {\\n\\n\\t\\t\\t\\tvar track = this.tracks[ i ];\\n\\n\\t\\t\\t\\tduration = Math.max(\\n\\t\\t\\t\\t\\t\\tduration, track.times[ track.times.length - 1 ] );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.duration = duration;\\n\\n\\t\\t},\\n\\n\\t\\ttrim: function() {\\n\\n\\t\\t\\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\\n\\n\\t\\t\\t\\tthis.tracks[ i ].trim( 0, this.duration );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\toptimize: function() {\\n\\n\\t\\t\\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\\n\\n\\t\\t\\t\\tthis.tracks[ i ].optimize();\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\t// Static methods:\\n\\n\\tObject.assign( THREE.AnimationClip, {\\n\\n\\t\\tparse: function( json ) {\\n\\n\\t\\t\\tvar tracks = [],\\n\\t\\t\\t\\tjsonTracks = json.tracks,\\n\\t\\t\\t\\tframeTime = 1.0 / ( json.fps || 1.0 );\\n\\n\\t\\t\\tfor ( var i = 0, n = jsonTracks.length; i !== n; ++ i ) {\\n\\n\\t\\t\\t\\ttracks.push( THREE.KeyframeTrack.parse( jsonTracks[ i ] ).scale( frameTime ) );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn new THREE.AnimationClip( json.name, json.duration, tracks );\\n\\n\\t\\t},\\n\\n\\n\\t\\ttoJSON: function( clip ) {\\n\\n\\t\\t\\tvar tracks = [],\\n\\t\\t\\t\\tclipTracks = clip.tracks;\\n\\n\\t\\t\\tvar json = {\\n\\n\\t\\t\\t\\t'name': clip.name,\\n\\t\\t\\t\\t'duration': clip.duration,\\n\\t\\t\\t\\t'tracks': tracks\\n\\n\\t\\t\\t};\\n\\n\\t\\t\\tfor ( var i = 0, n = clipTracks.length; i !== n; ++ i ) {\\n\\n\\t\\t\\t\\ttracks.push( THREE.KeyframeTrack.toJSON( clipTracks[ i ] ) );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn json;\\n\\n\\t\\t},\\n\\n\\n\\t\\tCreateFromMorphTargetSequence: function( name, morphTargetSequence, fps, noLoop ) {\\n\\n\\t\\t\\tvar numMorphTargets = morphTargetSequence.length;\\n\\t\\t\\tvar tracks = [];\\n\\n\\t\\t\\tfor ( var i = 0; i < numMorphTargets; i ++ ) {\\n\\n\\t\\t\\t\\tvar times = [];\\n\\t\\t\\t\\tvar values = [];\\n\\n\\t\\t\\t\\ttimes.push(\\n\\t\\t\\t\\t\\t\\t( i + numMorphTargets - 1 ) % numMorphTargets,\\n\\t\\t\\t\\t\\t\\ti,\\n\\t\\t\\t\\t\\t\\t( i + 1 ) % numMorphTargets );\\n\\n\\t\\t\\t\\tvalues.push( 0, 1, 0 );\\n\\n\\t\\t\\t\\tvar order = THREE.AnimationUtils.getKeyframeOrder( times );\\n\\t\\t\\t\\ttimes = THREE.AnimationUtils.sortedArray( times, 1, order );\\n\\t\\t\\t\\tvalues = THREE.AnimationUtils.sortedArray( values, 1, order );\\n\\n\\t\\t\\t\\t// if there is a key at the first frame, duplicate it as the\\n\\t\\t\\t\\t// last frame as well for perfect loop.\\n\\t\\t\\t\\tif ( ! noLoop && times[ 0 ] === 0 ) {\\n\\n\\t\\t\\t\\t\\ttimes.push( numMorphTargets );\\n\\t\\t\\t\\t\\tvalues.push( values[ 0 ] );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\ttracks.push(\\n\\t\\t\\t\\t\\t\\tnew THREE.NumberKeyframeTrack(\\n\\t\\t\\t\\t\\t\\t\\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\\n\\t\\t\\t\\t\\t\\t\\ttimes, values\\n\\t\\t\\t\\t\\t\\t).scale( 1.0 / fps ) );\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn new THREE.AnimationClip( name, -1, tracks );\\n\\n\\t\\t},\\n\\n\\t\\tfindByName: function( objectOrClipArray, name ) {\\n\\n\\t\\t\\tvar clipArray = objectOrClipArray;\\n\\n\\t\\t\\tif ( ! Array.isArray( objectOrClipArray ) ) {\\n\\n\\t\\t\\t\\tvar o = objectOrClipArray;\\n\\t\\t\\t\\tclipArray = o.geometry && o.geometry.animations || o.animations;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tfor ( var i = 0; i < clipArray.length; i ++ ) {\\n\\n\\t\\t\\t\\tif ( clipArray[ i ].name === name ) {\\n\\n\\t\\t\\t\\t\\treturn clipArray[ i ];\\n\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn null;\\n\\n\\t\\t},\\n\\n\\t\\tCreateClipsFromMorphTargetSequences: function( morphTargets, fps, noLoop ) {\\n\\n\\t\\t\\tvar animationToMorphTargets = {};\\n\\n\\t\\t\\t// tested with https://regex101.com/ on trick sequences\\n\\t\\t\\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\\n\\t\\t\\tvar pattern = /^([\\\\w-]*?)([\\\\d]+)$/;\\n\\n\\t\\t\\t// sort morph target names into animation groups based\\n\\t\\t\\t// patterns like Walk_001, Walk_002, Run_001, Run_002\\n\\t\\t\\tfor ( var i = 0, il = morphTargets.length; i < il; i ++ ) {\\n\\n\\t\\t\\t\\tvar morphTarget = morphTargets[ i ];\\n\\t\\t\\t\\tvar parts = morphTarget.name.match( pattern );\\n\\n\\t\\t\\t\\tif ( parts && parts.length > 1 ) {\\n\\n\\t\\t\\t\\t\\tvar name = parts[ 1 ];\\n\\n\\t\\t\\t\\t\\tvar animationMorphTargets = animationToMorphTargets[ name ];\\n\\t\\t\\t\\t\\tif ( ! animationMorphTargets ) {\\n\\n\\t\\t\\t\\t\\t\\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tanimationMorphTargets.push( morphTarget );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar clips = [];\\n\\n\\t\\t\\tfor ( var name in animationToMorphTargets ) {\\n\\n\\t\\t\\t\\tclips.push( THREE.AnimationClip.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn clips;\\n\\n\\t\\t},\\n\\n\\t\\t// parse the animation.hierarchy format\\n\\t\\tparseAnimation: function( animation, bones, nodeName ) {\\n\\n\\t\\t\\tif ( ! animation ) {\\n\\n\\t\\t\\t\\tconsole.error( \\\"  no animation in JSONLoader data\\\" );\\n\\t\\t\\t\\treturn null;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar addNonemptyTrack = function(\\n\\t\\t\\t\\t\\ttrackType, trackName, animationKeys, propertyName, destTracks ) {\\n\\n\\t\\t\\t\\t// only return track if there are actually keys.\\n\\t\\t\\t\\tif ( animationKeys.length !== 0 ) {\\n\\n\\t\\t\\t\\t\\tvar times = [];\\n\\t\\t\\t\\t\\tvar values = [];\\n\\n\\t\\t\\t\\t\\tTHREE.AnimationUtils.flattenJSON(\\n\\t\\t\\t\\t\\t\\t\\tanimationKeys, times, values, propertyName );\\n\\n\\t\\t\\t\\t\\t// empty keys are filtered out, so check again\\n\\t\\t\\t\\t\\tif ( times.length !== 0 ) {\\n\\n\\t\\t\\t\\t\\t\\tdestTracks.push( new trackType( trackName, times, values ) );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t};\\n\\n\\t\\t\\tvar tracks = [];\\n\\n\\t\\t\\tvar clipName = animation.name || 'default';\\n\\t\\t\\t// automatic length determination in AnimationClip.\\n\\t\\t\\tvar duration = animation.length || -1;\\n\\t\\t\\tvar fps = animation.fps || 30;\\n\\n\\t\\t\\tvar hierarchyTracks = animation.hierarchy || [];\\n\\n\\t\\t\\tfor ( var h = 0; h < hierarchyTracks.length; h ++ ) {\\n\\n\\t\\t\\t\\tvar animationKeys = hierarchyTracks[ h ].keys;\\n\\n\\t\\t\\t\\t// skip empty tracks\\n\\t\\t\\t\\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\\n\\n\\t\\t\\t\\t// process morph targets in a way exactly compatible\\n\\t\\t\\t\\t// with AnimationHandler.init( animation )\\n\\t\\t\\t\\tif ( animationKeys[0].morphTargets ) {\\n\\n\\t\\t\\t\\t\\t// figure out all morph targets used in this track\\n\\t\\t\\t\\t\\tvar morphTargetNames = {};\\n\\t\\t\\t\\t\\tfor ( var k = 0; k < animationKeys.length; k ++ ) {\\n\\n\\t\\t\\t\\t\\t\\tif ( animationKeys[k].morphTargets ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tfor ( var m = 0; m < animationKeys[k].morphTargets.length; m ++ ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tmorphTargetNames[ animationKeys[k].morphTargets[m] ] = -1;\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t// create a track for each morph target with all zero\\n\\t\\t\\t\\t\\t// morphTargetInfluences except for the keys in which\\n\\t\\t\\t\\t\\t// the morphTarget is named.\\n\\t\\t\\t\\t\\tfor ( var morphTargetName in morphTargetNames ) {\\n\\n\\t\\t\\t\\t\\t\\tvar times = [];\\n\\t\\t\\t\\t\\t\\tvar values = [];\\n\\n\\t\\t\\t\\t\\t\\tfor ( var m = 0;\\n\\t\\t\\t\\t\\t\\t\\t\\tm !== animationKeys[k].morphTargets.length; ++ m ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tvar animationKey = animationKeys[k];\\n\\n\\t\\t\\t\\t\\t\\t\\ttimes.push( animationKey.time );\\n\\t\\t\\t\\t\\t\\t\\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\ttracks.push( new THREE.NumberKeyframeTrack(\\n\\t\\t\\t\\t\\t\\t\\t\\t'.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tduration = morphTargetNames.length * ( fps || 1.0 );\\n\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t// ...assume skeletal animation\\n\\n\\t\\t\\t\\t\\tvar boneName = '.bones[' + bones[ h ].name + ']';\\n\\n\\t\\t\\t\\t\\taddNonemptyTrack(\\n\\t\\t\\t\\t\\t\\t\\tTHREE.VectorKeyframeTrack, boneName + '.position',\\n\\t\\t\\t\\t\\t\\t\\tanimationKeys, 'pos', tracks );\\n\\n\\t\\t\\t\\t\\taddNonemptyTrack(\\n\\t\\t\\t\\t\\t\\t\\tTHREE.QuaternionKeyframeTrack, boneName + '.quaternion',\\n\\t\\t\\t\\t\\t\\t\\tanimationKeys, 'rot', tracks );\\n\\n\\t\\t\\t\\t\\taddNonemptyTrack(\\n\\t\\t\\t\\t\\t\\t\\tTHREE.VectorKeyframeTrack, boneName + '.scale',\\n\\t\\t\\t\\t\\t\\t\\tanimationKeys, 'scl', tracks );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( tracks.length === 0 ) {\\n\\n\\t\\t\\t\\treturn null;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar clip = new THREE.AnimationClip( clipName, duration, tracks );\\n\\n\\t\\t\\treturn clip;\\n\\n\\t\\t}\\n\\n\\t} );\\n\\n\\t// File:src/animation/AnimationMixer.js\\n\\n\\t/**\\n\\t *\\n\\t * Player for AnimationClips.\\n\\t *\\n\\t *\\n\\t * @author Ben Houston / http://clara.io/\\n\\t * @author David Sarno / http://lighthaus.us/\\n\\t * @author tschw\\n\\t */\\n\\n\\tTHREE.AnimationMixer = function( root ) {\\n\\n\\t\\tthis._root = root;\\n\\t\\tthis._initMemoryManager();\\n\\t\\tthis._accuIndex = 0;\\n\\n\\t\\tthis.time = 0;\\n\\n\\t\\tthis.timeScale = 1.0;\\n\\n\\t};\\n\\n\\tObject.assign( THREE.AnimationMixer.prototype, THREE.EventDispatcher.prototype, {\\n\\n\\t\\t// return an action for a clip optionally using a custom root target\\n\\t\\t// object (this method allocates a lot of dynamic memory in case a\\n\\t\\t// previously unknown clip/root combination is specified)\\n\\t\\tclipAction: function( clip, optionalRoot ) {\\n\\n\\t\\t\\tvar root = optionalRoot || this._root,\\n\\t\\t\\t\\trootUuid = root.uuid,\\n\\n\\t\\t\\t\\tclipObject = typeof clip === 'string' ?\\n\\t\\t\\t\\t\\t\\tTHREE.AnimationClip.findByName( root, clip ) : clip,\\n\\n\\t\\t\\t\\tclipUuid = clipObject !== null ? clipObject.uuid : clip,\\n\\n\\t\\t\\t\\tactionsForClip = this._actionsByClip[ clipUuid ],\\n\\t\\t\\t\\tprototypeAction = null;\\n\\n\\t\\t\\tif ( actionsForClip !== undefined ) {\\n\\n\\t\\t\\t\\tvar existingAction =\\n\\t\\t\\t\\t\\t\\tactionsForClip.actionByRoot[ rootUuid ];\\n\\n\\t\\t\\t\\tif ( existingAction !== undefined ) {\\n\\n\\t\\t\\t\\t\\treturn existingAction;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// we know the clip, so we don't have to parse all\\n\\t\\t\\t\\t// the bindings again but can just copy\\n\\t\\t\\t\\tprototypeAction = actionsForClip.knownActions[ 0 ];\\n\\n\\t\\t\\t\\t// also, take the clip from the prototype action\\n\\t\\t\\t\\tif ( clipObject === null )\\n\\t\\t\\t\\t\\tclipObject = prototypeAction._clip;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t// clip must be known when specified via string\\n\\t\\t\\tif ( clipObject === null ) return null;\\n\\n\\t\\t\\t// allocate all resources required to run it\\n\\t\\t\\tvar newAction = new THREE.\\n\\t\\t\\t\\t\\tAnimationMixer._Action( this, clipObject, optionalRoot );\\n\\n\\t\\t\\tthis._bindAction( newAction, prototypeAction );\\n\\n\\t\\t\\t// and make the action known to the memory manager\\n\\t\\t\\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\\n\\n\\t\\t\\treturn newAction;\\n\\n\\t\\t},\\n\\n\\t\\t// get an existing action\\n\\t\\texistingAction: function( clip, optionalRoot ) {\\n\\n\\t\\t\\tvar root = optionalRoot || this._root,\\n\\t\\t\\t\\trootUuid = root.uuid,\\n\\n\\t\\t\\t\\tclipObject = typeof clip === 'string' ?\\n\\t\\t\\t\\t\\t\\tTHREE.AnimationClip.findByName( root, clip ) : clip,\\n\\n\\t\\t\\t\\tclipUuid = clipObject ? clipObject.uuid : clip,\\n\\n\\t\\t\\t\\tactionsForClip = this._actionsByClip[ clipUuid ];\\n\\n\\t\\t\\tif ( actionsForClip !== undefined ) {\\n\\n\\t\\t\\t\\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn null;\\n\\n\\t\\t},\\n\\n\\t\\t// deactivates all previously scheduled actions\\n\\t\\tstopAllAction: function() {\\n\\n\\t\\t\\tvar actions = this._actions,\\n\\t\\t\\t\\tnActions = this._nActiveActions,\\n\\t\\t\\t\\tbindings = this._bindings,\\n\\t\\t\\t\\tnBindings = this._nActiveBindings;\\n\\n\\t\\t\\tthis._nActiveActions = 0;\\n\\t\\t\\tthis._nActiveBindings = 0;\\n\\n\\t\\t\\tfor ( var i = 0; i !== nActions; ++ i ) {\\n\\n\\t\\t\\t\\tactions[ i ].reset();\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tfor ( var i = 0; i !== nBindings; ++ i ) {\\n\\n\\t\\t\\t\\tbindings[ i ].useCount = 0;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\t// advance the time and update apply the animation\\n\\t\\tupdate: function( deltaTime ) {\\n\\n\\t\\t\\tdeltaTime *= this.timeScale;\\n\\n\\t\\t\\tvar actions = this._actions,\\n\\t\\t\\t\\tnActions = this._nActiveActions,\\n\\n\\t\\t\\t\\ttime = this.time += deltaTime,\\n\\t\\t\\t\\ttimeDirection = Math.sign( deltaTime ),\\n\\n\\t\\t\\t\\taccuIndex = this._accuIndex ^= 1;\\n\\n\\t\\t\\t// run active actions\\n\\n\\t\\t\\tfor ( var i = 0; i !== nActions; ++ i ) {\\n\\n\\t\\t\\t\\tvar action = actions[ i ];\\n\\n\\t\\t\\t\\tif ( action.enabled ) {\\n\\n\\t\\t\\t\\t\\taction._update( time, deltaTime, timeDirection, accuIndex );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t// update scene graph\\n\\n\\t\\t\\tvar bindings = this._bindings,\\n\\t\\t\\t\\tnBindings = this._nActiveBindings;\\n\\n\\t\\t\\tfor ( var i = 0; i !== nBindings; ++ i ) {\\n\\n\\t\\t\\t\\tbindings[ i ].apply( accuIndex );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\t// return this mixer's root target object\\n\\t\\tgetRoot: function() {\\n\\n\\t\\t\\treturn this._root;\\n\\n\\t\\t},\\n\\n\\t\\t// free all resources specific to a particular clip\\n\\t\\tuncacheClip: function( clip ) {\\n\\n\\t\\t\\tvar actions = this._actions,\\n\\t\\t\\t\\tclipUuid = clip.uuid,\\n\\t\\t\\t\\tactionsByClip = this._actionsByClip,\\n\\t\\t\\t\\tactionsForClip = actionsByClip[ clipUuid ];\\n\\n\\t\\t\\tif ( actionsForClip !== undefined ) {\\n\\n\\t\\t\\t\\t// note: just calling _removeInactiveAction would mess up the\\n\\t\\t\\t\\t// iteration state and also require updating the state we can\\n\\t\\t\\t\\t// just throw away\\n\\n\\t\\t\\t\\tvar actionsToRemove = actionsForClip.knownActions;\\n\\n\\t\\t\\t\\tfor ( var i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\\n\\n\\t\\t\\t\\t\\tvar action = actionsToRemove[ i ];\\n\\n\\t\\t\\t\\t\\tthis._deactivateAction( action );\\n\\n\\t\\t\\t\\t\\tvar cacheIndex = action._cacheIndex,\\n\\t\\t\\t\\t\\t\\tlastInactiveAction = actions[ actions.length - 1 ];\\n\\n\\t\\t\\t\\t\\taction._cacheIndex = null;\\n\\t\\t\\t\\t\\taction._byClipCacheIndex = null;\\n\\n\\t\\t\\t\\t\\tlastInactiveAction._cacheIndex = cacheIndex;\\n\\t\\t\\t\\t\\tactions[ cacheIndex ] = lastInactiveAction;\\n\\t\\t\\t\\t\\tactions.pop();\\n\\n\\t\\t\\t\\t\\tthis._removeInactiveBindingsForAction( action );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tdelete actionsByClip[ clipUuid ];\\n\\n\\t\\t\\t}\\n\\n\\t\\t},\\n\\n\\t\\t// free all resources specific to a particular root target object\\n\\t\\tuncacheRoot: function( root ) {\\n\\n\\t\\t\\tvar rootUuid = root.uuid,\\n\\t\\t\\t\\tactionsByClip = this._actionsByClip;\\n\\n\\t\\t\\tfor ( var clipUuid in actionsByClip ) {\\n\\n\\t\\t\\t\\tvar actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\\n\\t\\t\\t\\t\\taction = actionByRoot[ rootUuid ];\\n\\n\\t\\t\\t\\tif ( action !== undefined ) {\\n\\n\\t\\t\\t\\t\\tthis._deactivateAction( action );\\n\\t\\t\\t\\t\\tthis._removeInactiveAction( action );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar bindingsByRoot = this._bindingsByRootAndName,\\n\\t\\t\\t\\tbindingByName = bindingsByRoot[ rootUuid ];\\n\\n\\t\\t\\tif ( bindingByName !== undefined ) {\\n\\n\\t\\t\\t\\tfor ( var trackName in bindingByName ) {\\n\\n\\t\\t\\t\\t\\tvar binding = bindingByName[ trackName ];\\n\\t\\t\\t\\t\\tbinding.restoreOriginalState();\\n\\t\\t\\t\\t\\tthis._removeInactiveBinding( binding );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t},\\n\\n\\t\\t// remove a targeted clip from the cache\\n\\t\\tuncacheAction: function( clip, optionalRoot ) {\\n\\n\\t\\t\\tvar action = this.existingAction( clip, optionalRoot );\\n\\n\\t\\t\\tif ( action !== null ) {\\n\\n\\t\\t\\t\\tthis._deactivateAction( action );\\n\\t\\t\\t\\tthis._removeInactiveAction( action );\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t} );\\n\\n\\tTHREE.AnimationMixer._Action = THREE.AnimationAction._new;\\n\\n\\t// Implementation details:\\n\\n\\tObject.assign( THREE.AnimationMixer.prototype, {\\n\\n\\t\\t_bindAction: function( action, prototypeAction ) {\\n\\n\\t\\t\\tvar root = action._localRoot || this._root,\\n\\t\\t\\t\\ttracks = action._clip.tracks,\\n\\t\\t\\t\\tnTracks = tracks.length,\\n\\t\\t\\t\\tbindings = action._propertyBindings,\\n\\t\\t\\t\\tinterpolants = action._interpolants,\\n\\t\\t\\t\\trootUuid = root.uuid,\\n\\t\\t\\t\\tbindingsByRoot = this._bindingsByRootAndName,\\n\\t\\t\\t\\tbindingsByName = bindingsByRoot[ rootUuid ];\\n\\n\\t\\t\\tif ( bindingsByName === undefined ) {\\n\\n\\t\\t\\t\\tbindingsByName = {};\\n\\t\\t\\t\\tbindingsByRoot[ rootUuid ] = bindingsByName;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tfor ( var i = 0; i !== nTracks; ++ i ) {\\n\\n\\t\\t\\t\\tvar track = tracks[ i ],\\n\\t\\t\\t\\t\\ttrackName = track.name,\\n\\t\\t\\t\\t\\tbinding = bindingsByName[ trackName ];\\n\\n\\t\\t\\t\\tif ( binding !== undefined ) {\\n\\n\\t\\t\\t\\t\\tbindings[ i ] = binding;\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\tbinding = bindings[ i ];\\n\\n\\t\\t\\t\\t\\tif ( binding !== undefined ) {\\n\\n\\t\\t\\t\\t\\t\\t// existing binding, make sure the cache knows\\n\\n\\t\\t\\t\\t\\t\\tif ( binding._cacheIndex === null ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t++ binding.referenceCount;\\n\\t\\t\\t\\t\\t\\t\\tthis._addInactiveBinding( binding, rootUuid, trackName );\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\tcontinue;\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tvar path = prototypeAction && prototypeAction.\\n\\t\\t\\t\\t\\t\\t\\t_propertyBindings[ i ].binding.parsedPath;\\n\\n\\t\\t\\t\\t\\tbinding = new THREE.PropertyMixer(\\n\\t\\t\\t\\t\\t\\t\\tTHREE.PropertyBinding.create( root, trackName, path ),\\n\\t\\t\\t\\t\\t\\t\\ttrack.ValueTypeName, track.getValueSize() );\\n\\n\\t\\t\\t\\t\\t++ binding.referenceCount;\\n\\t\\t\\t\\t\\tthis._addInactiveBinding( binding, rootUuid, trackName );\\n\\n\\t\\t\\t\\t\\tbindings[ i ] = binding;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tinterpolants[ i ].resultBuffer = binding.buffer;\\n\\n\\t\\t\\t}\\n\\n\\t\\t},\\n\\n\\t\\t_activateAction: function( action ) {\\n\\n\\t\\t\\tif ( ! this._isActiveAction( action ) ) {\\n\\n\\t\\t\\t\\tif ( action._cacheIndex === null ) {\\n\\n\\t\\t\\t\\t\\t// this action has been forgotten by the cache, but the user\\n\\t\\t\\t\\t\\t// appears to be still using it -> rebind\\n\\n\\t\\t\\t\\t\\tvar rootUuid = ( action._localRoot || this._root ).uuid,\\n\\t\\t\\t\\t\\t\\tclipUuid = action._clip.uuid,\\n\\t\\t\\t\\t\\t\\tactionsForClip = this._actionsByClip[ clipUuid ];\\n\\n\\t\\t\\t\\t\\tthis._bindAction( action,\\n\\t\\t\\t\\t\\t\\t\\tactionsForClip && actionsForClip.knownActions[ 0 ] );\\n\\n\\t\\t\\t\\t\\tthis._addInactiveAction( action, clipUuid, rootUuid );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tvar bindings = action._propertyBindings;\\n\\n\\t\\t\\t\\t// increment reference counts / sort out state\\n\\t\\t\\t\\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\\n\\n\\t\\t\\t\\t\\tvar binding = bindings[ i ];\\n\\n\\t\\t\\t\\t\\tif ( binding.useCount ++ === 0 ) {\\n\\n\\t\\t\\t\\t\\t\\tthis._lendBinding( binding );\\n\\t\\t\\t\\t\\t\\tbinding.saveOriginalState();\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tthis._lendAction( action );\\n\\n\\t\\t\\t}\\n\\n\\t\\t},\\n\\n\\t\\t_deactivateAction: function( action ) {\\n\\n\\t\\t\\tif ( this._isActiveAction( action ) ) {\\n\\n\\t\\t\\t\\tvar bindings = action._propertyBindings;\\n\\n\\t\\t\\t\\t// decrement reference counts / sort out state\\n\\t\\t\\t\\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\\n\\n\\t\\t\\t\\t\\tvar binding = bindings[ i ];\\n\\n\\t\\t\\t\\t\\tif ( -- binding.useCount === 0 ) {\\n\\n\\t\\t\\t\\t\\t\\tbinding.restoreOriginalState();\\n\\t\\t\\t\\t\\t\\tthis._takeBackBinding( binding );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tthis._takeBackAction( action );\\n\\n\\t\\t\\t}\\n\\n\\t\\t},\\n\\n\\t\\t// Memory manager\\n\\n\\t\\t_initMemoryManager: function() {\\n\\n\\t\\t\\tthis._actions = []; // 'nActiveActions' followed by inactive ones\\n\\t\\t\\tthis._nActiveActions = 0;\\n\\n\\t\\t\\tthis._actionsByClip = {};\\n\\t\\t\\t// inside:\\n\\t\\t\\t// {\\n\\t\\t\\t// \\t\\tknownActions: Array< _Action >\\t- used as prototypes\\n\\t\\t\\t// \\t\\tactionByRoot: _Action\\t\\t\\t- lookup\\n\\t\\t\\t// }\\n\\n\\n\\t\\t\\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\\n\\t\\t\\tthis._nActiveBindings = 0;\\n\\n\\t\\t\\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\\n\\n\\n\\t\\t\\tthis._controlInterpolants = []; // same game as above\\n\\t\\t\\tthis._nActiveControlInterpolants = 0;\\n\\n\\t\\t\\tvar scope = this;\\n\\n\\t\\t\\tthis.stats = {\\n\\n\\t\\t\\t\\tactions: {\\n\\t\\t\\t\\t\\tget total() { return scope._actions.length; },\\n\\t\\t\\t\\t\\tget inUse() { return scope._nActiveActions; }\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\tbindings: {\\n\\t\\t\\t\\t\\tget total() { return scope._bindings.length; },\\n\\t\\t\\t\\t\\tget inUse() { return scope._nActiveBindings; }\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\tcontrolInterpolants: {\\n\\t\\t\\t\\t\\tget total() { return scope._controlInterpolants.length; },\\n\\t\\t\\t\\t\\tget inUse() { return scope._nActiveControlInterpolants; }\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t};\\n\\n\\t\\t},\\n\\n\\t\\t// Memory management for _Action objects\\n\\n\\t\\t_isActiveAction: function( action ) {\\n\\n\\t\\t\\tvar index = action._cacheIndex;\\n\\t\\t\\treturn index !== null && index < this._nActiveActions;\\n\\n\\t\\t},\\n\\n\\t\\t_addInactiveAction: function( action, clipUuid, rootUuid ) {\\n\\n\\t\\t\\tvar actions = this._actions,\\n\\t\\t\\t\\tactionsByClip = this._actionsByClip,\\n\\t\\t\\t\\tactionsForClip = actionsByClip[ clipUuid ];\\n\\n\\t\\t\\tif ( actionsForClip === undefined ) {\\n\\n\\t\\t\\t\\tactionsForClip = {\\n\\n\\t\\t\\t\\t\\tknownActions: [ action ],\\n\\t\\t\\t\\t\\tactionByRoot: {}\\n\\n\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\taction._byClipCacheIndex = 0;\\n\\n\\t\\t\\t\\tactionsByClip[ clipUuid ] = actionsForClip;\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\tvar knownActions = actionsForClip.knownActions;\\n\\n\\t\\t\\t\\taction._byClipCacheIndex = knownActions.length;\\n\\t\\t\\t\\tknownActions.push( action );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\taction._cacheIndex = actions.length;\\n\\t\\t\\tactions.push( action );\\n\\n\\t\\t\\tactionsForClip.actionByRoot[ rootUuid ] = action;\\n\\n\\t\\t},\\n\\n\\t\\t_removeInactiveAction: function( action ) {\\n\\n\\t\\t\\tvar actions = this._actions,\\n\\t\\t\\t\\tlastInactiveAction = actions[ actions.length - 1 ],\\n\\t\\t\\t\\tcacheIndex = action._cacheIndex;\\n\\n\\t\\t\\tlastInactiveAction._cacheIndex = cacheIndex;\\n\\t\\t\\tactions[ cacheIndex ] = lastInactiveAction;\\n\\t\\t\\tactions.pop();\\n\\n\\t\\t\\taction._cacheIndex = null;\\n\\n\\n\\t\\t\\tvar clipUuid = action._clip.uuid,\\n\\t\\t\\t\\tactionsByClip = this._actionsByClip,\\n\\t\\t\\t\\tactionsForClip = actionsByClip[ clipUuid ],\\n\\t\\t\\t\\tknownActionsForClip = actionsForClip.knownActions,\\n\\n\\t\\t\\t\\tlastKnownAction =\\n\\t\\t\\t\\t\\tknownActionsForClip[ knownActionsForClip.length - 1 ],\\n\\n\\t\\t\\t\\tbyClipCacheIndex = action._byClipCacheIndex;\\n\\n\\t\\t\\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\\n\\t\\t\\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\\n\\t\\t\\tknownActionsForClip.pop();\\n\\n\\t\\t\\taction._byClipCacheIndex = null;\\n\\n\\n\\t\\t\\tvar actionByRoot = actionsForClip.actionByRoot,\\n\\t\\t\\t\\trootUuid = ( actions._localRoot || this._root ).uuid;\\n\\n\\t\\t\\tdelete actionByRoot[ rootUuid ];\\n\\n\\t\\t\\tif ( knownActionsForClip.length === 0 ) {\\n\\n\\t\\t\\t\\tdelete actionsByClip[ clipUuid ];\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis._removeInactiveBindingsForAction( action );\\n\\n\\t\\t},\\n\\n\\t\\t_removeInactiveBindingsForAction: function( action ) {\\n\\n\\t\\t\\tvar bindings = action._propertyBindings;\\n\\t\\t\\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\\n\\n\\t\\t\\t\\tvar binding = bindings[ i ];\\n\\n\\t\\t\\t\\tif ( -- binding.referenceCount === 0 ) {\\n\\n\\t\\t\\t\\t\\tthis._removeInactiveBinding( binding );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t},\\n\\n\\t\\t_lendAction: function( action ) {\\n\\n\\t\\t\\t// [ active actions |  inactive actions  ]\\n\\t\\t\\t// [  active actions >| inactive actions ]\\n\\t\\t\\t//                 s        a\\n\\t\\t\\t//                  <-swap->\\n\\t\\t\\t//                 a        s\\n\\n\\t\\t\\tvar actions = this._actions,\\n\\t\\t\\t\\tprevIndex = action._cacheIndex,\\n\\n\\t\\t\\t\\tlastActiveIndex = this._nActiveActions ++,\\n\\n\\t\\t\\t\\tfirstInactiveAction = actions[ lastActiveIndex ];\\n\\n\\t\\t\\taction._cacheIndex = lastActiveIndex;\\n\\t\\t\\tactions[ lastActiveIndex ] = action;\\n\\n\\t\\t\\tfirstInactiveAction._cacheIndex = prevIndex;\\n\\t\\t\\tactions[ prevIndex ] = firstInactiveAction;\\n\\n\\t\\t},\\n\\n\\t\\t_takeBackAction: function( action ) {\\n\\n\\t\\t\\t// [  active actions  | inactive actions ]\\n\\t\\t\\t// [ active actions |< inactive actions  ]\\n\\t\\t\\t//        a        s\\n\\t\\t\\t//         <-swap->\\n\\t\\t\\t//        s        a\\n\\n\\t\\t\\tvar actions = this._actions,\\n\\t\\t\\t\\tprevIndex = action._cacheIndex,\\n\\n\\t\\t\\t\\tfirstInactiveIndex = -- this._nActiveActions,\\n\\n\\t\\t\\t\\tlastActiveAction = actions[ firstInactiveIndex ];\\n\\n\\t\\t\\taction._cacheIndex = firstInactiveIndex;\\n\\t\\t\\tactions[ firstInactiveIndex ] = action;\\n\\n\\t\\t\\tlastActiveAction._cacheIndex = prevIndex;\\n\\t\\t\\tactions[ prevIndex ] = lastActiveAction;\\n\\n\\t\\t},\\n\\n\\t\\t// Memory management for PropertyMixer objects\\n\\n\\t\\t_addInactiveBinding: function( binding, rootUuid, trackName ) {\\n\\n\\t\\t\\tvar bindingsByRoot = this._bindingsByRootAndName,\\n\\t\\t\\t\\tbindingByName = bindingsByRoot[ rootUuid ],\\n\\n\\t\\t\\t\\tbindings = this._bindings;\\n\\n\\t\\t\\tif ( bindingByName === undefined ) {\\n\\n\\t\\t\\t\\tbindingByName = {};\\n\\t\\t\\t\\tbindingsByRoot[ rootUuid ] = bindingByName;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tbindingByName[ trackName ] = binding;\\n\\n\\t\\t\\tbinding._cacheIndex = bindings.length;\\n\\t\\t\\tbindings.push( binding );\\n\\n\\t\\t},\\n\\n\\t\\t_removeInactiveBinding: function( binding ) {\\n\\n\\t\\t\\tvar bindings = this._bindings,\\n\\t\\t\\t\\tpropBinding = binding.binding,\\n\\t\\t\\t\\trootUuid = propBinding.rootNode.uuid,\\n\\t\\t\\t\\ttrackName = propBinding.path,\\n\\t\\t\\t\\tbindingsByRoot = this._bindingsByRootAndName,\\n\\t\\t\\t\\tbindingByName = bindingsByRoot[ rootUuid ],\\n\\n\\t\\t\\t\\tlastInactiveBinding = bindings[ bindings.length - 1 ],\\n\\t\\t\\t\\tcacheIndex = binding._cacheIndex;\\n\\n\\t\\t\\tlastInactiveBinding._cacheIndex = cacheIndex;\\n\\t\\t\\tbindings[ cacheIndex ] = lastInactiveBinding;\\n\\t\\t\\tbindings.pop();\\n\\n\\t\\t\\tdelete bindingByName[ trackName ];\\n\\n\\t\\t\\tremove_empty_map: {\\n\\n\\t\\t\\t\\tfor ( var _ in bindingByName ) break remove_empty_map;\\n\\n\\t\\t\\t\\tdelete bindingsByRoot[ rootUuid ];\\n\\n\\t\\t\\t}\\n\\n\\t\\t},\\n\\n\\t\\t_lendBinding: function( binding ) {\\n\\n\\t\\t\\tvar bindings = this._bindings,\\n\\t\\t\\t\\tprevIndex = binding._cacheIndex,\\n\\n\\t\\t\\t\\tlastActiveIndex = this._nActiveBindings ++,\\n\\n\\t\\t\\t\\tfirstInactiveBinding = bindings[ lastActiveIndex ];\\n\\n\\t\\t\\tbinding._cacheIndex = lastActiveIndex;\\n\\t\\t\\tbindings[ lastActiveIndex ] = binding;\\n\\n\\t\\t\\tfirstInactiveBinding._cacheIndex = prevIndex;\\n\\t\\t\\tbindings[ prevIndex ] = firstInactiveBinding;\\n\\n\\t\\t},\\n\\n\\t\\t_takeBackBinding: function( binding ) {\\n\\n\\t\\t\\tvar bindings = this._bindings,\\n\\t\\t\\t\\tprevIndex = binding._cacheIndex,\\n\\n\\t\\t\\t\\tfirstInactiveIndex = -- this._nActiveBindings,\\n\\n\\t\\t\\t\\tlastActiveBinding = bindings[ firstInactiveIndex ];\\n\\n\\t\\t\\tbinding._cacheIndex = firstInactiveIndex;\\n\\t\\t\\tbindings[ firstInactiveIndex ] = binding;\\n\\n\\t\\t\\tlastActiveBinding._cacheIndex = prevIndex;\\n\\t\\t\\tbindings[ prevIndex ] = lastActiveBinding;\\n\\n\\t\\t},\\n\\n\\n\\t\\t// Memory management of Interpolants for weight and time scale\\n\\n\\t\\t_lendControlInterpolant: function() {\\n\\n\\t\\t\\tvar interpolants = this._controlInterpolants,\\n\\t\\t\\t\\tlastActiveIndex = this._nActiveControlInterpolants ++,\\n\\t\\t\\t\\tinterpolant = interpolants[ lastActiveIndex ];\\n\\n\\t\\t\\tif ( interpolant === undefined ) {\\n\\n\\t\\t\\t\\tinterpolant = new THREE.LinearInterpolant(\\n\\t\\t\\t\\t\\t\\tnew Float32Array( 2 ), new Float32Array( 2 ),\\n\\t\\t\\t\\t\\t\\t\\t1, this._controlInterpolantsResultBuffer );\\n\\n\\t\\t\\t\\tinterpolant.__cacheIndex = lastActiveIndex;\\n\\t\\t\\t\\tinterpolants[ lastActiveIndex ] = interpolant;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn interpolant;\\n\\n\\t\\t},\\n\\n\\t\\t_takeBackControlInterpolant: function( interpolant ) {\\n\\n\\t\\t\\tvar interpolants = this._controlInterpolants,\\n\\t\\t\\t\\tprevIndex = interpolant.__cacheIndex,\\n\\n\\t\\t\\t\\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\\n\\n\\t\\t\\t\\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\\n\\n\\t\\t\\tinterpolant.__cacheIndex = firstInactiveIndex;\\n\\t\\t\\tinterpolants[ firstInactiveIndex ] = interpolant;\\n\\n\\t\\t\\tlastActiveInterpolant.__cacheIndex = prevIndex;\\n\\t\\t\\tinterpolants[ prevIndex ] = lastActiveInterpolant;\\n\\n\\t\\t},\\n\\n\\t\\t_controlInterpolantsResultBuffer: new Float32Array( 1 )\\n\\n\\t} );\\n\\n\\t// File:src/animation/AnimationObjectGroup.js\\n\\n\\t/**\\n\\t *\\n\\t * A group of objects that receives a shared animation state.\\n\\t *\\n\\t * Usage:\\n\\t *\\n\\t * \\t-\\tAdd objects you would otherwise pass as 'root' to the\\n\\t * \\t\\tconstructor or the .clipAction method of AnimationMixer.\\n\\t *\\n\\t * \\t-\\tInstead pass this object as 'root'.\\n\\t *\\n\\t * \\t-\\tYou can also add and remove objects later when the mixer\\n\\t * \\t\\tis running.\\n\\t *\\n\\t * Note:\\n\\t *\\n\\t *  \\tObjects of this class appear as one object to the mixer,\\n\\t *  \\tso cache control of the individual objects must be done\\n\\t *  \\ton the group.\\n\\t *\\n\\t * Limitation:\\n\\t *\\n\\t * \\t- \\tThe animated properties must be compatible among the\\n\\t * \\t\\tall objects in the group.\\n\\t *\\n\\t *  -\\tA single property can either be controlled through a\\n\\t *  \\ttarget group or directly, but not both.\\n\\t *\\n\\t * @author tschw\\n\\t */\\n\\n\\tTHREE.AnimationObjectGroup = function( var_args ) {\\n\\n\\t\\tthis.uuid = THREE.Math.generateUUID();\\n\\n\\t\\t// cached objects followed by the active ones\\n\\t\\tthis._objects = Array.prototype.slice.call( arguments );\\n\\n\\t\\tthis.nCachedObjects_ = 0;\\t\\t\\t// threshold\\n\\t\\t// note: read by PropertyBinding.Composite\\n\\n\\t\\tvar indices = {};\\n\\t\\tthis._indicesByUUID = indices;\\t\\t// for bookkeeping\\n\\n\\t\\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\\n\\n\\t\\t\\tindices[ arguments[ i ].uuid ] = i;\\n\\n\\t\\t}\\n\\n\\t\\tthis._paths = [];\\t\\t\\t\\t\\t// inside: string\\n\\t\\tthis._parsedPaths = [];\\t\\t\\t\\t// inside: { we don't care, here }\\n\\t\\tthis._bindings = []; \\t\\t\\t\\t// inside: Array< PropertyBinding >\\n\\t\\tthis._bindingsIndicesByPath = {}; \\t// inside: indices in these arrays\\n\\n\\t\\tvar scope = this;\\n\\n\\t\\tthis.stats = {\\n\\n\\t\\t\\tobjects: {\\n\\t\\t\\t\\tget total() { return scope._objects.length; },\\n\\t\\t\\t\\tget inUse() { return this.total - scope.nCachedObjects_;  }\\n\\t\\t\\t},\\n\\n\\t\\t\\tget bindingsPerObject() { return scope._bindings.length; }\\n\\n\\t\\t};\\n\\n\\t};\\n\\n\\tTHREE.AnimationObjectGroup.prototype = {\\n\\n\\t\\tconstructor: THREE.AnimationObjectGroup,\\n\\n\\t\\tadd: function( var_args ) {\\n\\n\\t\\t\\tvar objects = this._objects,\\n\\t\\t\\t\\tnObjects = objects.length,\\n\\t\\t\\t\\tnCachedObjects = this.nCachedObjects_,\\n\\t\\t\\t\\tindicesByUUID = this._indicesByUUID,\\n\\t\\t\\t\\tpaths = this._paths,\\n\\t\\t\\t\\tparsedPaths = this._parsedPaths,\\n\\t\\t\\t\\tbindings = this._bindings,\\n\\t\\t\\t\\tnBindings = bindings.length;\\n\\n\\t\\t\\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\\n\\n\\t\\t\\t\\tvar object = arguments[ i ],\\n\\t\\t\\t\\t\\tuuid = object.uuid,\\n\\t\\t\\t\\t\\tindex = indicesByUUID[ uuid ];\\n\\n\\t\\t\\t\\tif ( index === undefined ) {\\n\\n\\t\\t\\t\\t\\t// unknown object -> add it to the ACTIVE region\\n\\n\\t\\t\\t\\t\\tindex = nObjects ++;\\n\\t\\t\\t\\t\\tindicesByUUID[ uuid ] = index;\\n\\t\\t\\t\\t\\tobjects.push( object );\\n\\n\\t\\t\\t\\t\\t// accounting is done, now do the same for all bindings\\n\\n\\t\\t\\t\\t\\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\\n\\n\\t\\t\\t\\t\\t\\tbindings[ j ].push(\\n\\t\\t\\t\\t\\t\\t\\t\\tnew THREE.PropertyBinding(\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tobject, paths[ j ], parsedPaths[ j ] ) );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t} else if ( index < nCachedObjects ) {\\n\\n\\t\\t\\t\\t\\tvar knownObject = objects[ index ];\\n\\n\\t\\t\\t\\t\\t// move existing object to the ACTIVE region\\n\\n\\t\\t\\t\\t\\tvar firstActiveIndex = -- nCachedObjects,\\n\\t\\t\\t\\t\\t\\tlastCachedObject = objects[ firstActiveIndex ];\\n\\n\\t\\t\\t\\t\\tindicesByUUID[ lastCachedObject.uuid ] = index;\\n\\t\\t\\t\\t\\tobjects[ index ] = lastCachedObject;\\n\\n\\t\\t\\t\\t\\tindicesByUUID[ uuid ] = firstActiveIndex;\\n\\t\\t\\t\\t\\tobjects[ firstActiveIndex ] = object;\\n\\n\\t\\t\\t\\t\\t// accounting is done, now do the same for all bindings\\n\\n\\t\\t\\t\\t\\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\\n\\n\\t\\t\\t\\t\\t\\tvar bindingsForPath = bindings[ j ],\\n\\t\\t\\t\\t\\t\\t\\tlastCached = bindingsForPath[ firstActiveIndex ],\\n\\t\\t\\t\\t\\t\\t\\tbinding = bindingsForPath[ index ];\\n\\n\\t\\t\\t\\t\\t\\tbindingsForPath[ index ] = lastCached;\\n\\n\\t\\t\\t\\t\\t\\tif ( binding === undefined ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t// since we do not bother to create new bindings\\n\\t\\t\\t\\t\\t\\t\\t// for objects that are cached, the binding may\\n\\t\\t\\t\\t\\t\\t\\t// or may not exist\\n\\n\\t\\t\\t\\t\\t\\t\\tbinding = new THREE.PropertyBinding(\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tobject, paths[ j ], parsedPaths[ j ] );\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\tbindingsForPath[ firstActiveIndex ] = binding;\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t} else if ( objects[ index ] !== knownObject) {\\n\\n\\t\\t\\t\\t\\tconsole.error( \\\"Different objects with the same UUID \\\" +\\n\\t\\t\\t\\t\\t\\t\\t\\\"detected. Clean the caches or recreate your \\\" +\\n\\t\\t\\t\\t\\t\\t\\t\\\"infrastructure when reloading scenes...\\\" );\\n\\n\\t\\t\\t\\t} // else the object is already where we want it to be\\n\\n\\t\\t\\t} // for arguments\\n\\n\\t\\t\\tthis.nCachedObjects_ = nCachedObjects;\\n\\n\\t\\t},\\n\\n\\t\\tremove: function( var_args ) {\\n\\n\\t\\t\\tvar objects = this._objects,\\n\\t\\t\\t\\tnObjects = objects.length,\\n\\t\\t\\t\\tnCachedObjects = this.nCachedObjects_,\\n\\t\\t\\t\\tindicesByUUID = this._indicesByUUID,\\n\\t\\t\\t\\tbindings = this._bindings,\\n\\t\\t\\t\\tnBindings = bindings.length;\\n\\n\\t\\t\\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\\n\\n\\t\\t\\t\\tvar object = arguments[ i ],\\n\\t\\t\\t\\t\\tuuid = object.uuid,\\n\\t\\t\\t\\t\\tindex = indicesByUUID[ uuid ];\\n\\n\\t\\t\\t\\tif ( index !== undefined && index >= nCachedObjects ) {\\n\\n\\t\\t\\t\\t\\t// move existing object into the CACHED region\\n\\n\\t\\t\\t\\t\\tvar lastCachedIndex = nCachedObjects ++,\\n\\t\\t\\t\\t\\t\\tfirstActiveObject = objects[ lastCachedIndex ];\\n\\n\\t\\t\\t\\t\\tindicesByUUID[ firstActiveObject.uuid ] = index;\\n\\t\\t\\t\\t\\tobjects[ index ] = firstActiveObject;\\n\\n\\t\\t\\t\\t\\tindicesByUUID[ uuid ] = lastCachedIndex;\\n\\t\\t\\t\\t\\tobjects[ lastCachedIndex ] = object;\\n\\n\\t\\t\\t\\t\\t// accounting is done, now do the same for all bindings\\n\\n\\t\\t\\t\\t\\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\\n\\n\\t\\t\\t\\t\\t\\tvar bindingsForPath = bindings[ j ],\\n\\t\\t\\t\\t\\t\\t\\tfirstActive = bindingsForPath[ lastCachedIndex ],\\n\\t\\t\\t\\t\\t\\t\\tbinding = bindingsForPath[ index ];\\n\\n\\t\\t\\t\\t\\t\\tbindingsForPath[ index ] = firstActive;\\n\\t\\t\\t\\t\\t\\tbindingsForPath[ lastCachedIndex ] = binding;\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t} // for arguments\\n\\n\\t\\t\\tthis.nCachedObjects_ = nCachedObjects;\\n\\n\\t\\t},\\n\\n\\t\\t// remove & forget\\n\\t\\tuncache: function( var_args ) {\\n\\n\\t\\t\\tvar objects = this._objects,\\n\\t\\t\\t\\tnObjects = objects.length,\\n\\t\\t\\t\\tnCachedObjects = this.nCachedObjects_,\\n\\t\\t\\t\\tindicesByUUID = this._indicesByUUID,\\n\\t\\t\\t\\tbindings = this._bindings,\\n\\t\\t\\t\\tnBindings = bindings.length;\\n\\n\\t\\t\\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\\n\\n\\t\\t\\t\\tvar object = arguments[ i ],\\n\\t\\t\\t\\t\\tuuid = object.uuid,\\n\\t\\t\\t\\t\\tindex = indicesByUUID[ uuid ];\\n\\n\\t\\t\\t\\tif ( index !== undefined ) {\\n\\n\\t\\t\\t\\t\\tdelete indicesByUUID[ uuid ];\\n\\n\\t\\t\\t\\t\\tif ( index < nCachedObjects ) {\\n\\n\\t\\t\\t\\t\\t\\t// object is cached, shrink the CACHED region\\n\\n\\t\\t\\t\\t\\t\\tvar firstActiveIndex = -- nCachedObjects,\\n\\t\\t\\t\\t\\t\\t\\tlastCachedObject = objects[ firstActiveIndex ],\\n\\t\\t\\t\\t\\t\\t\\tlastIndex = -- nObjects,\\n\\t\\t\\t\\t\\t\\t\\tlastObject = objects[ lastIndex ];\\n\\n\\t\\t\\t\\t\\t\\t// last cached object takes this object's place\\n\\t\\t\\t\\t\\t\\tindicesByUUID[ lastCachedObject.uuid ] = index;\\n\\t\\t\\t\\t\\t\\tobjects[ index ] = lastCachedObject;\\n\\n\\t\\t\\t\\t\\t\\t// last object goes to the activated slot and pop\\n\\t\\t\\t\\t\\t\\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\\n\\t\\t\\t\\t\\t\\tobjects[ firstActiveIndex ] = lastObject;\\n\\t\\t\\t\\t\\t\\tobjects.pop();\\n\\n\\t\\t\\t\\t\\t\\t// accounting is done, now do the same for all bindings\\n\\n\\t\\t\\t\\t\\t\\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tvar bindingsForPath = bindings[ j ],\\n\\t\\t\\t\\t\\t\\t\\t\\tlastCached = bindingsForPath[ firstActiveIndex ],\\n\\t\\t\\t\\t\\t\\t\\t\\tlast = bindingsForPath[ lastIndex ];\\n\\n\\t\\t\\t\\t\\t\\t\\tbindingsForPath[ index ] = lastCached;\\n\\t\\t\\t\\t\\t\\t\\tbindingsForPath[ firstActiveIndex ] = last;\\n\\t\\t\\t\\t\\t\\t\\tbindingsForPath.pop();\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\t// object is active, just swap with the last and pop\\n\\n\\t\\t\\t\\t\\t\\tvar lastIndex = -- nObjects,\\n\\t\\t\\t\\t\\t\\t\\tlastObject = objects[ lastIndex ];\\n\\n\\t\\t\\t\\t\\t\\tindicesByUUID[ lastObject.uuid ] = index;\\n\\t\\t\\t\\t\\t\\tobjects[ index ] = lastObject;\\n\\t\\t\\t\\t\\t\\tobjects.pop();\\n\\n\\t\\t\\t\\t\\t\\t// accounting is done, now do the same for all bindings\\n\\n\\t\\t\\t\\t\\t\\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tvar bindingsForPath = bindings[ j ];\\n\\n\\t\\t\\t\\t\\t\\t\\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\\n\\t\\t\\t\\t\\t\\t\\tbindingsForPath.pop();\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t} // cached or active\\n\\n\\t\\t\\t\\t} // if object is known\\n\\n\\t\\t\\t} // for arguments\\n\\n\\t\\t\\tthis.nCachedObjects_ = nCachedObjects;\\n\\n\\t\\t},\\n\\n\\t\\t// Internal interface used by befriended PropertyBinding.Composite:\\n\\n\\t\\tsubscribe_: function( path, parsedPath ) {\\n\\t\\t\\t// returns an array of bindings for the given path that is changed\\n\\t\\t\\t// according to the contained objects in the group\\n\\n\\t\\t\\tvar indicesByPath = this._bindingsIndicesByPath,\\n\\t\\t\\t\\tindex = indicesByPath[ path ],\\n\\t\\t\\t\\tbindings = this._bindings;\\n\\n\\t\\t\\tif ( index !== undefined ) return bindings[ index ];\\n\\n\\t\\t\\tvar paths = this._paths,\\n\\t\\t\\t\\tparsedPaths = this._parsedPaths,\\n\\t\\t\\t\\tobjects = this._objects,\\n\\t\\t\\t\\tnObjects = objects.length,\\n\\t\\t\\t\\tnCachedObjects = this.nCachedObjects_,\\n\\t\\t\\t\\tbindingsForPath = new Array( nObjects );\\n\\n\\t\\t\\tindex = bindings.length;\\n\\n\\t\\t\\tindicesByPath[ path ] = index;\\n\\n\\t\\t\\tpaths.push( path );\\n\\t\\t\\tparsedPaths.push( parsedPath );\\n\\t\\t\\tbindings.push( bindingsForPath );\\n\\n\\t\\t\\tfor ( var i = nCachedObjects,\\n\\t\\t\\t\\t\\tn = objects.length; i !== n; ++ i ) {\\n\\n\\t\\t\\t\\tvar object = objects[ i ];\\n\\n\\t\\t\\t\\tbindingsForPath[ i ] =\\n\\t\\t\\t\\t\\t\\tnew THREE.PropertyBinding( object, path, parsedPath );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn bindingsForPath;\\n\\n\\t\\t},\\n\\n\\t\\tunsubscribe_: function( path ) {\\n\\t\\t\\t// tells the group to forget about a property path and no longer\\n\\t\\t\\t// update the array previously obtained with 'subscribe_'\\n\\n\\t\\t\\tvar indicesByPath = this._bindingsIndicesByPath,\\n\\t\\t\\t\\tindex = indicesByPath[ path ];\\n\\n\\t\\t\\tif ( index !== undefined ) {\\n\\n\\t\\t\\t\\tvar paths = this._paths,\\n\\t\\t\\t\\t\\tparsedPaths = this._parsedPaths,\\n\\t\\t\\t\\t\\tbindings = this._bindings,\\n\\t\\t\\t\\t\\tlastBindingsIndex = bindings.length - 1,\\n\\t\\t\\t\\t\\tlastBindings = bindings[ lastBindingsIndex ],\\n\\t\\t\\t\\t\\tlastBindingsPath = path[ lastBindingsIndex ];\\n\\n\\t\\t\\t\\tindicesByPath[ lastBindingsPath ] = index;\\n\\n\\t\\t\\t\\tbindings[ index ] = lastBindings;\\n\\t\\t\\t\\tbindings.pop();\\n\\n\\t\\t\\t\\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\\n\\t\\t\\t\\tparsedPaths.pop();\\n\\n\\t\\t\\t\\tpaths[ index ] = paths[ lastBindingsIndex ];\\n\\t\\t\\t\\tpaths.pop();\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\n\\t// File:src/animation/AnimationUtils.js\\n\\n\\t/**\\n\\t * @author tschw\\n\\t * @author Ben Houston / http://clara.io/\\n\\t * @author David Sarno / http://lighthaus.us/\\n\\t */\\n\\n\\tTHREE.AnimationUtils = {\\n\\n\\t\\t// same as Array.prototype.slice, but also works on typed arrays\\n\\t\\tarraySlice: function( array, from, to ) {\\n\\n\\t\\t\\tif ( THREE.AnimationUtils.isTypedArray( array ) ) {\\n\\n\\t\\t\\t\\treturn new array.constructor( array.subarray( from, to ) );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn array.slice( from, to );\\n\\n\\t\\t},\\n\\n\\t\\t// converts an array to a specific type\\n\\t\\tconvertArray: function( array, type, forceClone ) {\\n\\n\\t\\t\\tif ( ! array || // let 'undefined' and 'null' pass\\n\\t\\t\\t\\t\\t! forceClone && array.constructor === type ) return array;\\n\\n\\t\\t\\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\\n\\n\\t\\t\\t\\treturn new type( array ); // create typed array\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn Array.prototype.slice.call( array ); // create Array\\n\\n\\t\\t},\\n\\n\\t\\tisTypedArray: function( object ) {\\n\\n\\t\\t\\treturn ArrayBuffer.isView( object ) &&\\n\\t\\t\\t\\t\\t! ( object instanceof DataView );\\n\\n\\t\\t},\\n\\n\\t\\t// returns an array by which times and values can be sorted\\n\\t\\tgetKeyframeOrder: function( times ) {\\n\\n\\t\\t\\tfunction compareTime( i, j ) {\\n\\n\\t\\t\\t\\treturn times[ i ] - times[ j ];\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar n = times.length;\\n\\t\\t\\tvar result = new Array( n );\\n\\t\\t\\tfor ( var i = 0; i !== n; ++ i ) result[ i ] = i;\\n\\n\\t\\t\\tresult.sort( compareTime );\\n\\n\\t\\t\\treturn result;\\n\\n\\t\\t},\\n\\n\\t\\t// uses the array previously returned by 'getKeyframeOrder' to sort data\\n\\t\\tsortedArray: function( values, stride, order ) {\\n\\n\\t\\t\\tvar nValues = values.length;\\n\\t\\t\\tvar result = new values.constructor( nValues );\\n\\n\\t\\t\\tfor ( var i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\\n\\n\\t\\t\\t\\tvar srcOffset = order[ i ] * stride;\\n\\n\\t\\t\\t\\tfor ( var j = 0; j !== stride; ++ j ) {\\n\\n\\t\\t\\t\\t\\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn result;\\n\\n\\t\\t},\\n\\n\\t\\t// function for parsing AOS keyframe formats\\n\\t\\tflattenJSON: function( jsonKeys, times, values, valuePropertyName ) {\\n\\n\\t\\t\\tvar i = 1, key = jsonKeys[ 0 ];\\n\\n\\t\\t\\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\\n\\n\\t\\t\\t\\tkey = jsonKeys[ i ++ ];\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( key === undefined ) return; // no data\\n\\n\\t\\t\\tvar value = key[ valuePropertyName ];\\n\\t\\t\\tif ( value === undefined ) return; // no data\\n\\n\\t\\t\\tif ( Array.isArray( value ) ) {\\n\\n\\t\\t\\t\\tdo {\\n\\n\\t\\t\\t\\t\\tvalue = key[ valuePropertyName ];\\n\\n\\t\\t\\t\\t\\tif ( value !== undefined ) {\\n\\n\\t\\t\\t\\t\\t\\ttimes.push( key.time );\\n\\t\\t\\t\\t\\t\\tvalues.push.apply( values, value ); // push all elements\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tkey = jsonKeys[ i ++ ];\\n\\n\\t\\t\\t\\t} while ( key !== undefined );\\n\\n\\t\\t\\t} else if ( value.toArray !== undefined ) {\\n\\t\\t\\t\\t// ...assume THREE.Math-ish\\n\\n\\t\\t\\t\\tdo {\\n\\n\\t\\t\\t\\t\\tvalue = key[ valuePropertyName ];\\n\\n\\t\\t\\t\\t\\tif ( value !== undefined ) {\\n\\n\\t\\t\\t\\t\\t\\ttimes.push( key.time );\\n\\t\\t\\t\\t\\t\\tvalue.toArray( values, values.length );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tkey = jsonKeys[ i ++ ];\\n\\n\\t\\t\\t\\t} while ( key !== undefined );\\n\\n\\t\\t\\t} else {\\n\\t\\t\\t\\t// otherwise push as-is\\n\\n\\t\\t\\t\\tdo {\\n\\n\\t\\t\\t\\t\\tvalue = key[ valuePropertyName ];\\n\\n\\t\\t\\t\\t\\tif ( value !== undefined ) {\\n\\n\\t\\t\\t\\t\\t\\ttimes.push( key.time );\\n\\t\\t\\t\\t\\t\\tvalues.push( value );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tkey = jsonKeys[ i ++ ];\\n\\n\\t\\t\\t\\t} while ( key !== undefined );\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\t// File:src/animation/KeyframeTrack.js\\n\\n\\t/**\\n\\t *\\n\\t * A timed sequence of keyframes for a specific property.\\n\\t *\\n\\t *\\n\\t * @author Ben Houston / http://clara.io/\\n\\t * @author David Sarno / http://lighthaus.us/\\n\\t * @author tschw\\n\\t */\\n\\n\\tTHREE.KeyframeTrack = function ( name, times, values, interpolation ) {\\n\\n\\t\\tif( name === undefined ) throw new Error( \\\"track name is undefined\\\" );\\n\\n\\t\\tif( times === undefined || times.length === 0 ) {\\n\\n\\t\\t\\tthrow new Error( \\\"no keyframes in track named \\\" + name );\\n\\n\\t\\t}\\n\\n\\t\\tthis.name = name;\\n\\n\\t\\tthis.times = THREE.AnimationUtils.convertArray( times, this.TimeBufferType );\\n\\t\\tthis.values = THREE.AnimationUtils.convertArray( values, this.ValueBufferType );\\n\\n\\t\\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\\n\\n\\t\\tthis.validate();\\n\\t\\tthis.optimize();\\n\\n\\t};\\n\\n\\tTHREE.KeyframeTrack.prototype = {\\n\\n\\t\\tconstructor: THREE.KeyframeTrack,\\n\\n\\t\\tTimeBufferType: Float32Array,\\n\\t\\tValueBufferType: Float32Array,\\n\\n\\t\\tDefaultInterpolation: THREE.InterpolateLinear,\\n\\n\\t\\tInterpolantFactoryMethodDiscrete: function( result ) {\\n\\n\\t\\t\\treturn new THREE.DiscreteInterpolant(\\n\\t\\t\\t\\t\\tthis.times, this.values, this.getValueSize(), result );\\n\\n\\t\\t},\\n\\n\\t\\tInterpolantFactoryMethodLinear: function( result ) {\\n\\n\\t\\t\\treturn new THREE.LinearInterpolant(\\n\\t\\t\\t\\t\\tthis.times, this.values, this.getValueSize(), result );\\n\\n\\t\\t},\\n\\n\\t\\tInterpolantFactoryMethodSmooth: function( result ) {\\n\\n\\t\\t\\treturn new THREE.CubicInterpolant(\\n\\t\\t\\t\\t\\tthis.times, this.values, this.getValueSize(), result );\\n\\n\\t\\t},\\n\\n\\t\\tsetInterpolation: function( interpolation ) {\\n\\n\\t\\t\\tvar factoryMethod;\\n\\n\\t\\t\\tswitch ( interpolation ) {\\n\\n\\t\\t\\t\\tcase THREE.InterpolateDiscrete:\\n\\n\\t\\t\\t\\t\\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\\n\\n\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\tcase THREE.InterpolateLinear:\\n\\n\\t\\t\\t\\t\\tfactoryMethod = this.InterpolantFactoryMethodLinear;\\n\\n\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\tcase THREE.InterpolateSmooth:\\n\\n\\t\\t\\t\\t\\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\\n\\n\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( factoryMethod === undefined ) {\\n\\n\\t\\t\\t\\tvar message = \\\"unsupported interpolation for \\\" +\\n\\t\\t\\t\\t\\t\\tthis.ValueTypeName + \\\" keyframe track named \\\" + this.name;\\n\\n\\t\\t\\t\\tif ( this.createInterpolant === undefined ) {\\n\\n\\t\\t\\t\\t\\t// fall back to default, unless the default itself is messed up\\n\\t\\t\\t\\t\\tif ( interpolation !== this.DefaultInterpolation ) {\\n\\n\\t\\t\\t\\t\\t\\tthis.setInterpolation( this.DefaultInterpolation );\\n\\n\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\tthrow new Error( message ); // fatal, in this case\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tconsole.warn( message );\\n\\t\\t\\t\\treturn;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.createInterpolant = factoryMethod;\\n\\n\\t\\t},\\n\\n\\t\\tgetInterpolation: function() {\\n\\n\\t\\t\\tswitch ( this.createInterpolant ) {\\n\\n\\t\\t\\t\\tcase this.InterpolantFactoryMethodDiscrete:\\n\\n\\t\\t\\t\\t\\treturn THREE.InterpolateDiscrete;\\n\\n\\t\\t\\t\\tcase this.InterpolantFactoryMethodLinear:\\n\\n\\t\\t\\t\\t\\treturn THREE.InterpolateLinear;\\n\\n\\t\\t\\t\\tcase this.InterpolantFactoryMethodSmooth:\\n\\n\\t\\t\\t\\t\\treturn THREE.InterpolateSmooth;\\n\\n\\t\\t\\t}\\n\\n\\t\\t},\\n\\n\\t\\tgetValueSize: function() {\\n\\n\\t\\t\\treturn this.values.length / this.times.length;\\n\\n\\t\\t},\\n\\n\\t\\t// move all keyframes either forwards or backwards in time\\n\\t\\tshift: function( timeOffset ) {\\n\\n\\t\\t\\tif( timeOffset !== 0.0 ) {\\n\\n\\t\\t\\t\\tvar times = this.times;\\n\\n\\t\\t\\t\\tfor( var i = 0, n = times.length; i !== n; ++ i ) {\\n\\n\\t\\t\\t\\t\\ttimes[ i ] += timeOffset;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\\n\\t\\tscale: function( timeScale ) {\\n\\n\\t\\t\\tif( timeScale !== 1.0 ) {\\n\\n\\t\\t\\t\\tvar times = this.times;\\n\\n\\t\\t\\t\\tfor( var i = 0, n = times.length; i !== n; ++ i ) {\\n\\n\\t\\t\\t\\t\\ttimes[ i ] *= timeScale;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\\n\\t\\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\\n\\t\\ttrim: function( startTime, endTime ) {\\n\\n\\t\\t\\tvar times = this.times,\\n\\t\\t\\t\\tnKeys = times.length,\\n\\t\\t\\t\\tfrom = 0,\\n\\t\\t\\t\\tto = nKeys - 1;\\n\\n\\t\\t\\twhile ( from !== nKeys && times[ from ] < startTime ) ++ from;\\n\\t\\t\\twhile ( to !== -1 && times[ to ] > endTime ) -- to;\\n\\n\\t\\t\\t++ to; // inclusive -> exclusive bound\\n\\n\\t\\t\\tif( from !== 0 || to !== nKeys ) {\\n\\n\\t\\t\\t\\t// empty tracks are forbidden, so keep at least one keyframe\\n\\t\\t\\t\\tif ( from >= to ) to = Math.max( to , 1 ), from = to - 1;\\n\\n\\t\\t\\t\\tvar stride = this.getValueSize();\\n\\t\\t\\t\\tthis.times = THREE.AnimationUtils.arraySlice( times, from, to );\\n\\t\\t\\t\\tthis.values = THREE.AnimationUtils.\\n\\t\\t\\t\\t\\t\\tarraySlice( this.values, from * stride, to * stride );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\\n\\t\\tvalidate: function() {\\n\\n\\t\\t\\tvar valid = true;\\n\\n\\t\\t\\tvar valueSize = this.getValueSize();\\n\\t\\t\\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\\n\\n\\t\\t\\t\\tconsole.error( \\\"invalid value size in track\\\", this );\\n\\t\\t\\t\\tvalid = false;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar times = this.times,\\n\\t\\t\\t\\tvalues = this.values,\\n\\n\\t\\t\\t\\tnKeys = times.length;\\n\\n\\t\\t\\tif( nKeys === 0 ) {\\n\\n\\t\\t\\t\\tconsole.error( \\\"track is empty\\\", this );\\n\\t\\t\\t\\tvalid = false;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar prevTime = null;\\n\\n\\t\\t\\tfor( var i = 0; i !== nKeys; i ++ ) {\\n\\n\\t\\t\\t\\tvar currTime = times[ i ];\\n\\n\\t\\t\\t\\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\\n\\n\\t\\t\\t\\t\\tconsole.error( \\\"time is not a valid number\\\", this, i, currTime );\\n\\t\\t\\t\\t\\tvalid = false;\\n\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif( prevTime !== null && prevTime > currTime ) {\\n\\n\\t\\t\\t\\t\\tconsole.error( \\\"out of order keys\\\", this, i, currTime, prevTime );\\n\\t\\t\\t\\t\\tvalid = false;\\n\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tprevTime = currTime;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( values !== undefined ) {\\n\\n\\t\\t\\t\\tif ( THREE.AnimationUtils.isTypedArray( values ) ) {\\n\\n\\t\\t\\t\\t\\tfor ( var i = 0, n = values.length; i !== n; ++ i ) {\\n\\n\\t\\t\\t\\t\\t\\tvar value = values[ i ];\\n\\n\\t\\t\\t\\t\\t\\tif ( isNaN( value ) ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tconsole.error( \\\"value is not a valid number\\\", this, i, value );\\n\\t\\t\\t\\t\\t\\t\\tvalid = false;\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn valid;\\n\\n\\t\\t},\\n\\n\\t\\t// removes equivalent sequential keys as common in morph target sequences\\n\\t\\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\\n\\t\\toptimize: function() {\\n\\n\\t\\t\\tvar times = this.times,\\n\\t\\t\\t\\tvalues = this.values,\\n\\t\\t\\t\\tstride = this.getValueSize(),\\n\\n\\t\\t\\t\\twriteIndex = 1;\\n\\n\\t\\t\\tfor( var i = 1, n = times.length - 1; i <= n; ++ i ) {\\n\\n\\t\\t\\t\\tvar keep = false;\\n\\n\\t\\t\\t\\tvar time = times[ i ];\\n\\t\\t\\t\\tvar timeNext = times[ i + 1 ];\\n\\n\\t\\t\\t\\t// remove adjacent keyframes scheduled at the same time\\n\\n\\t\\t\\t\\tif ( time !== timeNext && ( i !== 1 || time !== time[ 0 ] ) ) {\\n\\n\\t\\t\\t\\t\\t// remove unnecessary keyframes same as their neighbors\\n\\t\\t\\t\\t\\tvar offset = i * stride,\\n\\t\\t\\t\\t\\t\\toffsetP = offset - stride,\\n\\t\\t\\t\\t\\t\\toffsetN = offset + stride;\\n\\n\\t\\t\\t\\t\\tfor ( var j = 0; j !== stride; ++ j ) {\\n\\n\\t\\t\\t\\t\\t\\tvar value = values[ offset + j ];\\n\\n\\t\\t\\t\\t\\t\\tif ( value !== values[ offsetP + j ] ||\\n\\t\\t\\t\\t\\t\\t\\t\\tvalue !== values[ offsetN + j ] ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tkeep = true;\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// in-place compaction\\n\\n\\t\\t\\t\\tif ( keep ) {\\n\\n\\t\\t\\t\\t\\tif ( i !== writeIndex ) {\\n\\n\\t\\t\\t\\t\\t\\ttimes[ writeIndex ] = times[ i ];\\n\\n\\t\\t\\t\\t\\t\\tvar readOffset = i * stride,\\n\\t\\t\\t\\t\\t\\t\\twriteOffset = writeIndex * stride;\\n\\n\\t\\t\\t\\t\\t\\tfor ( var j = 0; j !== stride; ++ j ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tvalues[ writeOffset + j ] = values[ readOffset + j ];\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t++ writeIndex;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( writeIndex !== times.length ) {\\n\\n\\t\\t\\t\\tthis.times = THREE.AnimationUtils.arraySlice( times, 0, writeIndex );\\n\\t\\t\\t\\tthis.values = THREE.AnimationUtils.arraySlice( values, 0, writeIndex * stride );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\t// Static methods:\\n\\n\\tObject.assign( THREE.KeyframeTrack, {\\n\\n\\t\\t// Serialization (in static context, because of constructor invocation\\n\\t\\t// and automatic invocation of .toJSON):\\n\\n\\t\\tparse: function( json ) {\\n\\n\\t\\t\\tif( json.type === undefined ) {\\n\\n\\t\\t\\t\\tthrow new Error( \\\"track type undefined, can not parse\\\" );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar trackType = THREE.KeyframeTrack._getTrackTypeForValueTypeName( json.type );\\n\\n\\t\\t\\tif ( json.times === undefined ) {\\n\\n\\t\\t\\t\\tvar times = [], values = [];\\n\\n\\t\\t\\t\\tTHREE.AnimationUtils.flattenJSON( json.keys, times, values, 'value' );\\n\\n\\t\\t\\t\\tjson.times = times;\\n\\t\\t\\t\\tjson.values = values;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t// derived classes can define a static parse method\\n\\t\\t\\tif ( trackType.parse !== undefined ) {\\n\\n\\t\\t\\t\\treturn trackType.parse( json );\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t// by default, we asssume a constructor compatible with the base\\n\\t\\t\\t\\treturn new trackType(\\n\\t\\t\\t\\t\\t\\tjson.name, json.times, json.values, json.interpolation );\\n\\n\\t\\t\\t}\\n\\n\\t\\t},\\n\\n\\t\\ttoJSON: function( track ) {\\n\\n\\t\\t\\tvar trackType = track.constructor;\\n\\n\\t\\t\\tvar json;\\n\\n\\t\\t\\t// derived classes can define a static toJSON method\\n\\t\\t\\tif ( trackType.toJSON !== undefined ) {\\n\\n\\t\\t\\t\\tjson = trackType.toJSON( track );\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t// by default, we assume the data can be serialized as-is\\n\\t\\t\\t\\tjson = {\\n\\n\\t\\t\\t\\t\\t'name': track.name,\\n\\t\\t\\t\\t\\t'times': THREE.AnimationUtils.convertArray( track.times, Array ),\\n\\t\\t\\t\\t\\t'values': THREE.AnimationUtils.convertArray( track.values, Array )\\n\\n\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\tvar interpolation = track.getInterpolation();\\n\\n\\t\\t\\t\\tif ( interpolation !== track.DefaultInterpolation ) {\\n\\n\\t\\t\\t\\t\\tjson.interpolation = interpolation;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tjson.type = track.ValueTypeName; // mandatory\\n\\n\\t\\t\\treturn json;\\n\\n\\t\\t},\\n\\n\\t\\t_getTrackTypeForValueTypeName: function( typeName ) {\\n\\n\\t\\t\\tswitch( typeName.toLowerCase() ) {\\n\\n\\t\\t\\t\\tcase \\\"scalar\\\":\\n\\t\\t\\t\\tcase \\\"double\\\":\\n\\t\\t\\t\\tcase \\\"float\\\":\\n\\t\\t\\t\\tcase \\\"number\\\":\\n\\t\\t\\t\\tcase \\\"integer\\\":\\n\\n\\t\\t\\t\\t\\treturn THREE.NumberKeyframeTrack;\\n\\n\\t\\t\\t\\tcase \\\"vector\\\":\\n\\t\\t\\t\\tcase \\\"vector2\\\":\\n\\t\\t\\t\\tcase \\\"vector3\\\":\\n\\t\\t\\t\\tcase \\\"vector4\\\":\\n\\n\\t\\t\\t\\t\\treturn THREE.VectorKeyframeTrack;\\n\\n\\t\\t\\t\\tcase \\\"color\\\":\\n\\n\\t\\t\\t\\t\\treturn THREE.ColorKeyframeTrack;\\n\\n\\t\\t\\t\\tcase \\\"quaternion\\\":\\n\\n\\t\\t\\t\\t\\treturn THREE.QuaternionKeyframeTrack;\\n\\n\\t\\t\\t\\tcase \\\"bool\\\":\\n\\t\\t\\t\\tcase \\\"boolean\\\":\\n\\n\\t\\t\\t\\t\\treturn THREE.BooleanKeyframeTrack;\\n\\n\\t\\t\\t\\tcase \\\"string\\\":\\n\\n\\t\\t\\t\\t\\treturn THREE.StringKeyframeTrack;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tthrow new Error( \\\"Unsupported typeName: \\\" + typeName );\\n\\n\\t\\t}\\n\\n\\t} );\\n\\n\\t// File:src/animation/PropertyBinding.js\\n\\n\\t/**\\n\\t *\\n\\t * A reference to a real property in the scene graph.\\n\\t *\\n\\t *\\n\\t * @author Ben Houston / http://clara.io/\\n\\t * @author David Sarno / http://lighthaus.us/\\n\\t * @author tschw\\n\\t */\\n\\n\\tTHREE.PropertyBinding = function ( rootNode, path, parsedPath ) {\\n\\n\\t\\tthis.path = path;\\n\\t\\tthis.parsedPath = parsedPath ||\\n\\t\\t\\t\\tTHREE.PropertyBinding.parseTrackName( path );\\n\\n\\t\\tthis.node = THREE.PropertyBinding.findNode(\\n\\t\\t\\t\\trootNode, this.parsedPath.nodeName ) || rootNode;\\n\\n\\t\\tthis.rootNode = rootNode;\\n\\n\\t};\\n\\n\\tTHREE.PropertyBinding.prototype = {\\n\\n\\t\\tconstructor: THREE.PropertyBinding,\\n\\n\\t\\tgetValue: function getValue_unbound( targetArray, offset ) {\\n\\n\\t\\t\\tthis.bind();\\n\\t\\t\\tthis.getValue( targetArray, offset );\\n\\n\\t\\t\\t// Note: This class uses a State pattern on a per-method basis:\\n\\t\\t\\t// 'bind' sets 'this.getValue' / 'setValue' and shadows the\\n\\t\\t\\t// prototype version of these methods with one that represents\\n\\t\\t\\t// the bound state. When the property is not found, the methods\\n\\t\\t\\t// become no-ops.\\n\\n\\t\\t},\\n\\n\\t\\tsetValue: function getValue_unbound( sourceArray, offset ) {\\n\\n\\t\\t\\tthis.bind();\\n\\t\\t\\tthis.setValue( sourceArray, offset );\\n\\n\\t\\t},\\n\\n\\t\\t// create getter / setter pair for a property in the scene graph\\n\\t\\tbind: function() {\\n\\n\\t\\t\\tvar targetObject = this.node,\\n\\t\\t\\t\\tparsedPath = this.parsedPath,\\n\\n\\t\\t\\t\\tobjectName = parsedPath.objectName,\\n\\t\\t\\t\\tpropertyName = parsedPath.propertyName,\\n\\t\\t\\t\\tpropertyIndex = parsedPath.propertyIndex;\\n\\n\\t\\t\\tif ( ! targetObject ) {\\n\\n\\t\\t\\t\\ttargetObject = THREE.PropertyBinding.findNode(\\n\\t\\t\\t\\t\\t\\tthis.rootNode, parsedPath.nodeName ) || this.rootNode;\\n\\n\\t\\t\\t\\tthis.node = targetObject;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t// set fail state so we can just 'return' on error\\n\\t\\t\\tthis.getValue = this._getValue_unavailable;\\n\\t\\t\\tthis.setValue = this._setValue_unavailable;\\n\\n\\t \\t\\t// ensure there is a value node\\n\\t\\t\\tif ( ! targetObject ) {\\n\\n\\t\\t\\t\\tconsole.error( \\\"  trying to update node for track: \\\" + this.path + \\\" but it wasn't found.\\\" );\\n\\t\\t\\t\\treturn;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( objectName ) {\\n\\n\\t\\t\\t\\tvar objectIndex = parsedPath.objectIndex;\\n\\n\\t\\t\\t\\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\\n\\t\\t\\t\\tswitch ( objectName ) {\\n\\n\\t\\t\\t\\t\\tcase 'materials':\\n\\n\\t\\t\\t\\t\\t\\tif ( ! targetObject.material ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tconsole.error( '  can not bind to material as node does not have a material', this );\\n\\t\\t\\t\\t\\t\\t\\treturn;\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\tif ( ! targetObject.material.materials ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tconsole.error( '  can not bind to material.materials as node.material does not have a materials array', this );\\n\\t\\t\\t\\t\\t\\t\\treturn;\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\ttargetObject = targetObject.material.materials;\\n\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\tcase 'bones':\\n\\n\\t\\t\\t\\t\\t\\tif ( ! targetObject.skeleton ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tconsole.error( '  can not bind to bones as node does not have a skeleton', this );\\n\\t\\t\\t\\t\\t\\t\\treturn;\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t// potential future optimization: skip this if propertyIndex is already an integer\\n\\t\\t\\t\\t\\t\\t// and convert the integer string to a true integer.\\n\\n\\t\\t\\t\\t\\t\\ttargetObject = targetObject.skeleton.bones;\\n\\n\\t\\t\\t\\t\\t\\t// support resolving morphTarget names into indices.\\n\\t\\t\\t\\t\\t\\tfor ( var i = 0; i < targetObject.length; i ++ ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tif ( targetObject[ i ].name === objectIndex ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tobjectIndex = i;\\n\\t\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\tdefault:\\n\\n\\t\\t\\t\\t\\t\\tif ( targetObject[ objectName ] === undefined ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tconsole.error( '  can not bind to objectName of node, undefined', this );\\n\\t\\t\\t\\t\\t\\t\\treturn;\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\ttargetObject = targetObject[ objectName ];\\n\\n\\t\\t\\t\\t}\\n\\n\\n\\t\\t\\t\\tif ( objectIndex !== undefined ) {\\n\\n\\t\\t\\t\\t\\tif ( targetObject[ objectIndex ] === undefined ) {\\n\\n\\t\\t\\t\\t\\t\\tconsole.error( \\\"  trying to bind to objectIndex of objectName, but is undefined:\\\", this, targetObject );\\n\\t\\t\\t\\t\\t\\treturn;\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\ttargetObject = targetObject[ objectIndex ];\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t// resolve property\\n\\t\\t\\tvar nodeProperty = targetObject[ propertyName ];\\n\\n\\t\\t\\tif ( nodeProperty === undefined ) {\\n\\n\\t\\t\\t\\tvar nodeName = parsedPath.nodeName;\\n\\n\\t\\t\\t\\tconsole.error( \\\"  trying to update property for track: \\\" + nodeName +\\n\\t\\t\\t\\t\\t\\t'.' + propertyName + \\\" but it wasn't found.\\\", targetObject );\\n\\t\\t\\t\\treturn;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t// determine versioning scheme\\n\\t\\t\\tvar versioning = this.Versioning.None;\\n\\n\\t\\t\\tif ( targetObject.needsUpdate !== undefined ) { // material\\n\\n\\t\\t\\t\\tversioning = this.Versioning.NeedsUpdate;\\n\\t\\t\\t\\tthis.targetObject = targetObject;\\n\\n\\t\\t\\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\\n\\n\\t\\t\\t\\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\\n\\t\\t\\t\\tthis.targetObject = targetObject;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t// determine how the property gets bound\\n\\t\\t\\tvar bindingType = this.BindingType.Direct;\\n\\n\\t\\t\\tif ( propertyIndex !== undefined ) {\\n\\t\\t\\t\\t// access a sub element of the property array (only primitives are supported right now)\\n\\n\\t\\t\\t\\tif ( propertyName === \\\"morphTargetInfluences\\\" ) {\\n\\t\\t\\t\\t\\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\\n\\n\\t\\t\\t\\t\\t// support resolving morphTarget names into indices.\\n\\t\\t\\t\\t\\tif ( ! targetObject.geometry ) {\\n\\n\\t\\t\\t\\t\\t\\tconsole.error( '  can not bind to morphTargetInfluences becasuse node does not have a geometry', this );\\n\\t\\t\\t\\t\\t\\treturn;\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tif ( ! targetObject.geometry.morphTargets ) {\\n\\n\\t\\t\\t\\t\\t\\tconsole.error( '  can not bind to morphTargetInfluences becasuse node does not have a geometry.morphTargets', this );\\n\\t\\t\\t\\t\\t\\treturn;\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tfor ( var i = 0; i < this.node.geometry.morphTargets.length; i ++ ) {\\n\\n\\t\\t\\t\\t\\t\\tif ( targetObject.geometry.morphTargets[ i ].name === propertyIndex ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tpropertyIndex = i;\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tbindingType = this.BindingType.ArrayElement;\\n\\n\\t\\t\\t\\tthis.resolvedProperty = nodeProperty;\\n\\t\\t\\t\\tthis.propertyIndex = propertyIndex;\\n\\n\\t\\t\\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\\n\\t\\t\\t\\t// must use copy for Object3D.Euler/Quaternion\\n\\n\\t\\t\\t\\tbindingType = this.BindingType.HasFromToArray;\\n\\n\\t\\t\\t\\tthis.resolvedProperty = nodeProperty;\\n\\n\\t\\t\\t} else if ( nodeProperty.length !== undefined ) {\\n\\n\\t\\t\\t\\tbindingType = this.BindingType.EntireArray;\\n\\n\\t\\t\\t\\tthis.resolvedProperty = nodeProperty;\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\tthis.propertyName = propertyName;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t// select getter / setter\\n\\t\\t\\tthis.getValue = this.GetterByBindingType[ bindingType ];\\n\\t\\t\\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\\n\\n\\t\\t},\\n\\n\\t\\tunbind: function() {\\n\\n\\t\\t\\tthis.node = null;\\n\\n\\t\\t\\t// back to the prototype version of getValue / setValue\\n\\t\\t\\t// note: avoiding to mutate the shape of 'this' via 'delete'\\n\\t\\t\\tthis.getValue = this._getValue_unbound;\\n\\t\\t\\tthis.setValue = this._setValue_unbound;\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\tObject.assign( THREE.PropertyBinding.prototype, { // prototype, continued\\n\\n\\t\\t// these are used to \\\"bind\\\" a nonexistent property\\n\\t\\t_getValue_unavailable: function() {},\\n\\t\\t_setValue_unavailable: function() {},\\n\\n\\t\\t// initial state of these methods that calls 'bind'\\n\\t\\t_getValue_unbound: THREE.PropertyBinding.prototype.getValue,\\n\\t\\t_setValue_unbound: THREE.PropertyBinding.prototype.setValue,\\n\\n\\t\\tBindingType: {\\n\\t\\t\\tDirect: 0,\\n\\t\\t\\tEntireArray: 1,\\n\\t\\t\\tArrayElement: 2,\\n\\t\\t\\tHasFromToArray: 3\\n\\t\\t},\\n\\n\\t\\tVersioning: {\\n\\t\\t\\tNone: 0,\\n\\t\\t\\tNeedsUpdate: 1,\\n\\t\\t\\tMatrixWorldNeedsUpdate: 2\\n\\t\\t},\\n\\n\\t\\tGetterByBindingType: [\\n\\n\\t\\t\\tfunction getValue_direct( buffer, offset ) {\\n\\n\\t\\t\\t\\tbuffer[ offset ] = this.node[ this.propertyName ];\\n\\n\\t\\t\\t},\\n\\n\\t\\t\\tfunction getValue_array( buffer, offset ) {\\n\\n\\t\\t\\t\\tvar source = this.resolvedProperty;\\n\\n\\t\\t\\t\\tfor ( var i = 0, n = source.length; i !== n; ++ i ) {\\n\\n\\t\\t\\t\\t\\tbuffer[ offset ++ ] = source[ i ];\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t},\\n\\n\\t\\t\\tfunction getValue_arrayElement( buffer, offset ) {\\n\\n\\t\\t\\t\\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\\n\\n\\t\\t\\t},\\n\\n\\t\\t\\tfunction getValue_toArray( buffer, offset ) {\\n\\n\\t\\t\\t\\tthis.resolvedProperty.toArray( buffer, offset );\\n\\n\\t\\t\\t}\\n\\n\\t\\t],\\n\\n\\t\\tSetterByBindingTypeAndVersioning: [\\n\\n\\t\\t\\t[\\n\\t\\t\\t\\t// Direct\\n\\n\\t\\t\\t\\tfunction setValue_direct( buffer, offset ) {\\n\\n\\t\\t\\t\\t\\tthis.node[ this.propertyName ] = buffer[ offset ];\\n\\n\\t\\t\\t\\t},\\n\\n\\t\\t\\t\\tfunction setValue_direct_setNeedsUpdate( buffer, offset ) {\\n\\n\\t\\t\\t\\t\\tthis.node[ this.propertyName ] = buffer[ offset ];\\n\\t\\t\\t\\t\\tthis.targetObject.needsUpdate = true;\\n\\n\\t\\t\\t\\t},\\n\\n\\t\\t\\t\\tfunction setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\\n\\n\\t\\t\\t\\t\\tthis.node[ this.propertyName ] = buffer[ offset ];\\n\\t\\t\\t\\t\\tthis.targetObject.matrixWorldNeedsUpdate = true;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t], [\\n\\n\\t\\t\\t\\t// EntireArray\\n\\n\\t\\t\\t\\tfunction setValue_array( buffer, offset ) {\\n\\n\\t\\t\\t\\t\\tvar dest = this.resolvedProperty;\\n\\n\\t\\t\\t\\t\\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\\n\\n\\t\\t\\t\\t\\t\\tdest[ i ] = buffer[ offset ++ ];\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t},\\n\\n\\t\\t\\t\\tfunction setValue_array_setNeedsUpdate( buffer, offset ) {\\n\\n\\t\\t\\t\\t\\tvar dest = this.resolvedProperty;\\n\\n\\t\\t\\t\\t\\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\\n\\n\\t\\t\\t\\t\\t\\tdest[ i ] = buffer[ offset ++ ];\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tthis.targetObject.needsUpdate = true;\\n\\n\\t\\t\\t\\t},\\n\\n\\t\\t\\t\\tfunction setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\\n\\n\\t\\t\\t\\t\\tvar dest = this.resolvedProperty;\\n\\n\\t\\t\\t\\t\\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\\n\\n\\t\\t\\t\\t\\t\\tdest[ i ] = buffer[ offset ++ ];\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tthis.targetObject.matrixWorldNeedsUpdate = true;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t], [\\n\\n\\t\\t\\t\\t// ArrayElement\\n\\n\\t\\t\\t\\tfunction setValue_arrayElement( buffer, offset ) {\\n\\n\\t\\t\\t\\t\\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\\n\\n\\t\\t\\t\\t},\\n\\n\\t\\t\\t\\tfunction setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\\n\\n\\t\\t\\t\\t\\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\\n\\t\\t\\t\\t\\tthis.targetObject.needsUpdate = true;\\n\\n\\t\\t\\t\\t},\\n\\n\\t\\t\\t\\tfunction setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\\n\\n\\t\\t\\t\\t\\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\\n\\t\\t\\t\\t\\tthis.targetObject.matrixWorldNeedsUpdate = true;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t], [\\n\\n\\t\\t\\t\\t// HasToFromArray\\n\\n\\t\\t\\t\\tfunction setValue_fromArray( buffer, offset ) {\\n\\n\\t\\t\\t\\t\\tthis.resolvedProperty.fromArray( buffer, offset );\\n\\n\\t\\t\\t\\t},\\n\\n\\t\\t\\t\\tfunction setValue_fromArray_setNeedsUpdate( buffer, offset ) {\\n\\n\\t\\t\\t\\t\\tthis.resolvedProperty.fromArray( buffer, offset );\\n\\t\\t\\t\\t\\tthis.targetObject.needsUpdate = true;\\n\\n\\t\\t\\t\\t},\\n\\n\\t\\t\\t\\tfunction setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\\n\\n\\t\\t\\t\\t\\tthis.resolvedProperty.fromArray( buffer, offset );\\n\\t\\t\\t\\t\\tthis.targetObject.matrixWorldNeedsUpdate = true;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t]\\n\\n\\t\\t]\\n\\n\\t} );\\n\\n\\tTHREE.PropertyBinding.Composite =\\n\\t\\t\\tfunction( targetGroup, path, optionalParsedPath ) {\\n\\n\\t\\tvar parsedPath = optionalParsedPath ||\\n\\t\\t\\t\\tTHREE.PropertyBinding.parseTrackName( path );\\n\\n\\t\\tthis._targetGroup = targetGroup;\\n\\t\\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\\n\\n\\t};\\n\\n\\tTHREE.PropertyBinding.Composite.prototype = {\\n\\n\\t\\tconstructor: THREE.PropertyBinding.Composite,\\n\\n\\t\\tgetValue: function( array, offset ) {\\n\\n\\t\\t\\tthis.bind(); // bind all binding\\n\\n\\t\\t\\tvar firstValidIndex = this._targetGroup.nCachedObjects_,\\n\\t\\t\\t\\tbinding = this._bindings[ firstValidIndex ];\\n\\n\\t\\t\\t// and only call .getValue on the first\\n\\t\\t\\tif ( binding !== undefined ) binding.getValue( array, offset );\\n\\n\\t\\t},\\n\\n\\t\\tsetValue: function( array, offset ) {\\n\\n\\t\\t\\tvar bindings = this._bindings;\\n\\n\\t\\t\\tfor ( var i = this._targetGroup.nCachedObjects_,\\n\\t\\t\\t\\t\\tn = bindings.length; i !== n; ++ i ) {\\n\\n\\t\\t\\t\\tbindings[ i ].setValue( array, offset );\\n\\n\\t\\t\\t}\\n\\n\\t\\t},\\n\\n\\t\\tbind: function() {\\n\\n\\t\\t\\tvar bindings = this._bindings;\\n\\n\\t\\t\\tfor ( var i = this._targetGroup.nCachedObjects_,\\n\\t\\t\\t\\t\\tn = bindings.length; i !== n; ++ i ) {\\n\\n\\t\\t\\t\\tbindings[ i ].bind();\\n\\n\\t\\t\\t}\\n\\n\\t\\t},\\n\\n\\t\\tunbind: function() {\\n\\n\\t\\t\\tvar bindings = this._bindings;\\n\\n\\t\\t\\tfor ( var i = this._targetGroup.nCachedObjects_,\\n\\t\\t\\t\\t\\tn = bindings.length; i !== n; ++ i ) {\\n\\n\\t\\t\\t\\tbindings[ i ].unbind();\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\tTHREE.PropertyBinding.create = function( root, path, parsedPath ) {\\n\\n\\t\\tif ( ! ( root instanceof THREE.AnimationObjectGroup ) ) {\\n\\n\\t\\t\\treturn new THREE.PropertyBinding( root, path, parsedPath );\\n\\n\\t\\t} else {\\n\\n\\t\\t\\treturn new THREE.PropertyBinding.Composite( root, path, parsedPath );\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\tTHREE.PropertyBinding.parseTrackName = function( trackName ) {\\n\\n\\t\\t// matches strings in the form of:\\n\\t\\t//    nodeName.property\\n\\t\\t//    nodeName.property[accessor]\\n\\t\\t//    nodeName.material.property[accessor]\\n\\t\\t//    uuid.property[accessor]\\n\\t\\t//    uuid.objectName[objectIndex].propertyName[propertyIndex]\\n\\t\\t//    parentName/nodeName.property\\n\\t\\t//    parentName/parentName/nodeName.property[index]\\n\\t\\t//\\t  .bone[Armature.DEF_cog].position\\n\\t\\t// created and tested via https://regex101.com/#javascript\\n\\n\\t\\tvar re = /^(([\\\\w]+\\\\/)*)([\\\\w-\\\\d]+)?(\\\\.([\\\\w]+)(\\\\[([\\\\w\\\\d\\\\[\\\\]\\\\_.:\\\\- ]+)\\\\])?)?(\\\\.([\\\\w.]+)(\\\\[([\\\\w\\\\d\\\\[\\\\]\\\\_. ]+)\\\\])?)$/;\\n\\t\\tvar matches = re.exec( trackName );\\n\\n\\t\\tif ( ! matches ) {\\n\\n\\t\\t\\tthrow new Error( \\\"cannot parse trackName at all: \\\" + trackName );\\n\\n\\t\\t}\\n\\n\\t\\tif ( matches.index === re.lastIndex ) {\\n\\n\\t\\t\\tre.lastIndex++;\\n\\n\\t\\t}\\n\\n\\t\\tvar results = {\\n\\t\\t\\t// directoryName: matches[ 1 ], // (tschw) currently unused\\n\\t\\t\\tnodeName: matches[ 3 ], \\t// allowed to be null, specified root node.\\n\\t\\t\\tobjectName: matches[ 5 ],\\n\\t\\t\\tobjectIndex: matches[ 7 ],\\n\\t\\t\\tpropertyName: matches[ 9 ],\\n\\t\\t\\tpropertyIndex: matches[ 11 ]\\t// allowed to be null, specifies that the whole property is set.\\n\\t\\t};\\n\\n\\t\\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\\n\\n\\t\\t\\tthrow new Error( \\\"can not parse propertyName from trackName: \\\" + trackName );\\n\\n\\t\\t}\\n\\n\\t\\treturn results;\\n\\n\\t};\\n\\n\\tTHREE.PropertyBinding.findNode = function( root, nodeName ) {\\n\\n\\t\\tif ( ! nodeName || nodeName === \\\"\\\" || nodeName === \\\"root\\\" || nodeName === \\\".\\\" || nodeName === -1 || nodeName === root.name || nodeName === root.uuid ) {\\n\\n\\t\\t\\treturn root;\\n\\n\\t\\t}\\n\\n\\t\\t// search into skeleton bones.\\n\\t\\tif ( root.skeleton ) {\\n\\n\\t\\t\\tvar searchSkeleton = function( skeleton ) {\\n\\n\\t\\t\\t\\tfor( var i = 0; i < skeleton.bones.length; i ++ ) {\\n\\n\\t\\t\\t\\t\\tvar bone = skeleton.bones[ i ];\\n\\n\\t\\t\\t\\t\\tif ( bone.name === nodeName ) {\\n\\n\\t\\t\\t\\t\\t\\treturn bone;\\n\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn null;\\n\\n\\t\\t\\t};\\n\\n\\t\\t\\tvar bone = searchSkeleton( root.skeleton );\\n\\n\\t\\t\\tif ( bone ) {\\n\\n\\t\\t\\t\\treturn bone;\\n\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// search into node subtree.\\n\\t\\tif ( root.children ) {\\n\\n\\t\\t\\tvar searchNodeSubtree = function( children ) {\\n\\n\\t\\t\\t\\tfor( var i = 0; i < children.length; i ++ ) {\\n\\n\\t\\t\\t\\t\\tvar childNode = children[ i ];\\n\\n\\t\\t\\t\\t\\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\\n\\n\\t\\t\\t\\t\\t\\treturn childNode;\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tvar result = searchNodeSubtree( childNode.children );\\n\\n\\t\\t\\t\\t\\tif ( result ) return result;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn null;\\n\\n\\t\\t\\t};\\n\\n\\t\\t\\tvar subTreeNode = searchNodeSubtree( root.children );\\n\\n\\t\\t\\tif ( subTreeNode ) {\\n\\n\\t\\t\\t\\treturn subTreeNode;\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\treturn null;\\n\\n\\t};\\n\\n\\t// File:src/animation/PropertyMixer.js\\n\\n\\t/**\\n\\t *\\n\\t * Buffered scene graph property that allows weighted accumulation.\\n\\t *\\n\\t *\\n\\t * @author Ben Houston / http://clara.io/\\n\\t * @author David Sarno / http://lighthaus.us/\\n\\t * @author tschw\\n\\t */\\n\\n\\tTHREE.PropertyMixer = function ( binding, typeName, valueSize ) {\\n\\n\\t\\tthis.binding = binding;\\n\\t\\tthis.valueSize = valueSize;\\n\\n\\t\\tvar bufferType = Float64Array,\\n\\t\\t\\tmixFunction;\\n\\n\\t\\tswitch ( typeName ) {\\n\\n\\t\\t\\tcase 'quaternion':\\t\\t\\tmixFunction = this._slerp;\\t\\tbreak;\\n\\n\\t\\t\\tcase 'string':\\n\\t\\t\\tcase 'bool':\\n\\n\\t\\t\\t\\tbufferType = Array,\\t\\tmixFunction = this._select;\\t\\tbreak;\\n\\n\\t\\t\\tdefault:\\t\\t\\t\\t\\tmixFunction = this._lerp;\\n\\n\\t\\t}\\n\\n\\t\\tthis.buffer = new bufferType( valueSize * 4 );\\n\\t\\t// layout: [ incoming | accu0 | accu1 | orig ]\\n\\t\\t//\\n\\t\\t// interpolators can use .buffer as their .result\\n\\t\\t// the data then goes to 'incoming'\\n\\t\\t//\\n\\t\\t// 'accu0' and 'accu1' are used frame-interleaved for\\n\\t\\t// the cumulative result and are compared to detect\\n\\t\\t// changes\\n\\t\\t//\\n\\t\\t// 'orig' stores the original state of the property\\n\\n\\t\\tthis._mixBufferRegion = mixFunction;\\n\\n\\t\\tthis.cumulativeWeight = 0;\\n\\n\\t\\tthis.useCount = 0;\\n\\t\\tthis.referenceCount = 0;\\n\\n\\t};\\n\\n\\tTHREE.PropertyMixer.prototype = {\\n\\n\\t\\tconstructor: THREE.PropertyMixer,\\n\\n\\t\\t// accumulate data in the 'incoming' region into 'accu<i>'\\n\\t\\taccumulate: function( accuIndex, weight ) {\\n\\n\\t\\t\\t// note: happily accumulating nothing when weight = 0, the caller knows\\n\\t\\t\\t// the weight and shouldn't have made the call in the first place\\n\\n\\t\\t\\tvar buffer = this.buffer,\\n\\t\\t\\t\\tstride = this.valueSize,\\n\\t\\t\\t\\toffset = accuIndex * stride + stride,\\n\\n\\t\\t\\t\\tcurrentWeight = this.cumulativeWeight;\\n\\n\\t\\t\\tif ( currentWeight === 0 ) {\\n\\n\\t\\t\\t\\t// accuN := incoming * weight\\n\\n\\t\\t\\t\\tfor ( var i = 0; i !== stride; ++ i ) {\\n\\n\\t\\t\\t\\t\\tbuffer[ offset + i ] = buffer[ i ];\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tcurrentWeight = weight;\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t// accuN := accuN + incoming * weight\\n\\n\\t\\t\\t\\tcurrentWeight += weight;\\n\\t\\t\\t\\tvar mix = weight / currentWeight;\\n\\t\\t\\t\\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.cumulativeWeight = currentWeight;\\n\\n\\t\\t},\\n\\n\\t\\t// apply the state of 'accu<i>' to the binding when accus differ\\n\\t\\tapply: function( accuIndex ) {\\n\\n\\t\\t\\tvar stride = this.valueSize,\\n\\t\\t\\t\\tbuffer = this.buffer,\\n\\t\\t\\t\\toffset = accuIndex * stride + stride,\\n\\n\\t\\t\\t\\tweight = this.cumulativeWeight,\\n\\n\\t\\t\\t\\tbinding = this.binding;\\n\\n\\t\\t\\tthis.cumulativeWeight = 0;\\n\\n\\t\\t\\tif ( weight < 1 ) {\\n\\n\\t\\t\\t\\t// accuN := accuN + original * ( 1 - cumulativeWeight )\\n\\n\\t\\t\\t\\tvar originalValueOffset = stride * 3;\\n\\n\\t\\t\\t\\tthis._mixBufferRegion(\\n\\t\\t\\t\\t\\t\\tbuffer, offset, originalValueOffset, 1 - weight, stride );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tfor ( var i = stride, e = stride + stride; i !== e; ++ i ) {\\n\\n\\t\\t\\t\\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\\n\\n\\t\\t\\t\\t\\t// value has changed -> update scene graph\\n\\n\\t\\t\\t\\t\\tbinding.setValue( buffer, offset );\\n\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t},\\n\\n\\t\\t// remember the state of the bound property and copy it to both accus\\n\\t\\tsaveOriginalState: function() {\\n\\n\\t\\t\\tvar binding = this.binding;\\n\\n\\t\\t\\tvar buffer = this.buffer,\\n\\t\\t\\t\\tstride = this.valueSize,\\n\\n\\t\\t\\t\\toriginalValueOffset = stride * 3;\\n\\n\\t\\t\\tbinding.getValue( buffer, originalValueOffset );\\n\\n\\t\\t\\t// accu[0..1] := orig -- initially detect changes against the original\\n\\t\\t\\tfor ( var i = stride, e = originalValueOffset; i !== e; ++ i ) {\\n\\n\\t\\t\\t\\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.cumulativeWeight = 0;\\n\\n\\t\\t},\\n\\n\\t\\t// apply the state previously taken via 'saveOriginalState' to the binding\\n\\t\\trestoreOriginalState: function() {\\n\\n\\t\\t\\tvar originalValueOffset = this.valueSize * 3;\\n\\t\\t\\tthis.binding.setValue( this.buffer, originalValueOffset );\\n\\n\\t\\t},\\n\\n\\n\\t\\t// mix functions\\n\\n\\t\\t_select: function( buffer, dstOffset, srcOffset, t, stride ) {\\n\\n\\t\\t\\tif ( t >= 0.5 ) {\\n\\n\\t\\t\\t\\tfor ( var i = 0; i !== stride; ++ i ) {\\n\\n\\t\\t\\t\\t\\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t},\\n\\n\\t\\t_slerp: function( buffer, dstOffset, srcOffset, t, stride ) {\\n\\n\\t\\t\\tTHREE.Quaternion.slerpFlat( buffer, dstOffset,\\n\\t\\t\\t\\t\\tbuffer, dstOffset, buffer, srcOffset, t );\\n\\n\\t\\t},\\n\\n\\t\\t_lerp: function( buffer, dstOffset, srcOffset, t, stride ) {\\n\\n\\t\\t\\tvar s = 1 - t;\\n\\n\\t\\t\\tfor ( var i = 0; i !== stride; ++ i ) {\\n\\n\\t\\t\\t\\tvar j = dstOffset + i;\\n\\n\\t\\t\\t\\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\t// File:src/animation/tracks/BooleanKeyframeTrack.js\\n\\n\\t/**\\n\\t *\\n\\t * A Track of Boolean keyframe values.\\n\\t *\\n\\t *\\n\\t * @author Ben Houston / http://clara.io/\\n\\t * @author David Sarno / http://lighthaus.us/\\n\\t * @author tschw\\n\\t */\\n\\n\\tTHREE.BooleanKeyframeTrack = function ( name, times, values ) {\\n\\n\\t\\tTHREE.KeyframeTrack.call( this, name, times, values );\\n\\n\\t};\\n\\n\\tTHREE.BooleanKeyframeTrack.prototype =\\n\\t\\t\\tObject.assign( Object.create( THREE.KeyframeTrack.prototype ), {\\n\\n\\t\\tconstructor: THREE.BooleanKeyframeTrack,\\n\\n\\t\\tValueTypeName: 'bool',\\n\\t\\tValueBufferType: Array,\\n\\n\\t\\tDefaultInterpolation: THREE.InterpolateDiscrete,\\n\\n\\t\\tInterpolantFactoryMethodLinear: undefined,\\n\\t\\tInterpolantFactoryMethodSmooth: undefined\\n\\n\\t\\t// Note: Actually this track could have a optimized / compressed\\n\\t\\t// representation of a single value and a custom interpolant that\\n\\t\\t// computes \\\"firstValue ^ isOdd( index )\\\".\\n\\n\\t} );\\n\\n\\t// File:src/animation/tracks/ColorKeyframeTrack.js\\n\\n\\t/**\\n\\t *\\n\\t * A Track of keyframe values that represent color.\\n\\t *\\n\\t *\\n\\t * @author Ben Houston / http://clara.io/\\n\\t * @author David Sarno / http://lighthaus.us/\\n\\t * @author tschw\\n\\t */\\n\\n\\tTHREE.ColorKeyframeTrack = function ( name, times, values, interpolation ) {\\n\\n\\t\\tTHREE.KeyframeTrack.call( this, name, times, values, interpolation );\\n\\n\\t};\\n\\n\\tTHREE.ColorKeyframeTrack.prototype =\\n\\t\\t\\tObject.assign( Object.create( THREE.KeyframeTrack.prototype ), {\\n\\n\\t\\tconstructor: THREE.ColorKeyframeTrack,\\n\\n\\t\\tValueTypeName: 'color'\\n\\n\\t\\t// ValueBufferType is inherited\\n\\n\\t\\t// DefaultInterpolation is inherited\\n\\n\\n\\t\\t// Note: Very basic implementation and nothing special yet.\\n\\t\\t// However, this is the place for color space parameterization.\\n\\n\\t} );\\n\\n\\t// File:src/animation/tracks/NumberKeyframeTrack.js\\n\\n\\t/**\\n\\t *\\n\\t * A Track of numeric keyframe values.\\n\\t *\\n\\t * @author Ben Houston / http://clara.io/\\n\\t * @author David Sarno / http://lighthaus.us/\\n\\t * @author tschw\\n\\t */\\n\\n\\tTHREE.NumberKeyframeTrack = function ( name, times, values, interpolation ) {\\n\\n\\t\\tTHREE.KeyframeTrack.call( this, name, times, values, interpolation );\\n\\n\\t};\\n\\n\\tTHREE.NumberKeyframeTrack.prototype =\\n\\t\\t\\tObject.assign( Object.create( THREE.KeyframeTrack.prototype ), {\\n\\n\\t\\tconstructor: THREE.NumberKeyframeTrack,\\n\\n\\t\\tValueTypeName: 'number',\\n\\n\\t\\t// ValueBufferType is inherited\\n\\n\\t\\t// DefaultInterpolation is inherited\\n\\n\\t} );\\n\\n\\t// File:src/animation/tracks/QuaternionKeyframeTrack.js\\n\\n\\t/**\\n\\t *\\n\\t * A Track of quaternion keyframe values.\\n\\t *\\n\\t * @author Ben Houston / http://clara.io/\\n\\t * @author David Sarno / http://lighthaus.us/\\n\\t * @author tschw\\n\\t */\\n\\n\\tTHREE.QuaternionKeyframeTrack = function ( name, times, values, interpolation ) {\\n\\n\\t\\tTHREE.KeyframeTrack.call( this, name, times, values, interpolation );\\n\\n\\t};\\n\\n\\tTHREE.QuaternionKeyframeTrack.prototype =\\n\\t\\t\\tObject.assign( Object.create( THREE.KeyframeTrack.prototype ), {\\n\\n\\t\\tconstructor: THREE.QuaternionKeyframeTrack,\\n\\n\\t\\tValueTypeName: 'quaternion',\\n\\n\\t\\t// ValueBufferType is inherited\\n\\n\\t\\tDefaultInterpolation: THREE.InterpolateLinear,\\n\\n\\t\\tInterpolantFactoryMethodLinear: function( result ) {\\n\\n\\t\\t\\treturn new THREE.QuaternionLinearInterpolant(\\n\\t\\t\\t\\t\\tthis.times, this.values, this.getValueSize(), result );\\n\\n\\t\\t},\\n\\n\\t\\tInterpolantFactoryMethodSmooth: undefined // not yet implemented\\n\\n\\t} );\\n\\n\\t// File:src/animation/tracks/StringKeyframeTrack.js\\n\\n\\t/**\\n\\t *\\n\\t * A Track that interpolates Strings\\n\\t *\\n\\t *\\n\\t * @author Ben Houston / http://clara.io/\\n\\t * @author David Sarno / http://lighthaus.us/\\n\\t * @author tschw\\n\\t */\\n\\n\\tTHREE.StringKeyframeTrack = function ( name, times, values, interpolation ) {\\n\\n\\t\\tTHREE.KeyframeTrack.call( this, name, times, values, interpolation );\\n\\n\\t};\\n\\n\\tTHREE.StringKeyframeTrack.prototype =\\n\\t\\t\\tObject.assign( Object.create( THREE.KeyframeTrack.prototype ), {\\n\\n\\t\\tconstructor: THREE.StringKeyframeTrack,\\n\\n\\t\\tValueTypeName: 'string',\\n\\t\\tValueBufferType: Array,\\n\\n\\t\\tDefaultInterpolation: THREE.InterpolateDiscrete,\\n\\n\\t\\tInterpolantFactoryMethodLinear: undefined,\\n\\n\\t\\tInterpolantFactoryMethodSmooth: undefined\\n\\n\\t} );\\n\\n\\t// File:src/animation/tracks/VectorKeyframeTrack.js\\n\\n\\t/**\\n\\t *\\n\\t * A Track of vectored keyframe values.\\n\\t *\\n\\t *\\n\\t * @author Ben Houston / http://clara.io/\\n\\t * @author David Sarno / http://lighthaus.us/\\n\\t * @author tschw\\n\\t */\\n\\n\\tTHREE.VectorKeyframeTrack = function ( name, times, values, interpolation ) {\\n\\n\\t\\tTHREE.KeyframeTrack.call( this, name, times, values, interpolation );\\n\\n\\t};\\n\\n\\tTHREE.VectorKeyframeTrack.prototype =\\n\\t\\t\\tObject.assign( Object.create( THREE.KeyframeTrack.prototype ), {\\n\\n\\t\\tconstructor: THREE.VectorKeyframeTrack,\\n\\n\\t\\tValueTypeName: 'vector'\\n\\n\\t\\t// ValueBufferType is inherited\\n\\n\\t\\t// DefaultInterpolation is inherited\\n\\n\\t} );\\n\\n\\t// File:src/audio/Audio.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t * @author Reece Aaron Lecrivain / http://reecenotes.com/\\n\\t */\\n\\n\\tTHREE.Audio = function ( listener ) {\\n\\n\\t\\tTHREE.Object3D.call( this );\\n\\n\\t\\tthis.type = 'Audio';\\n\\n\\t\\tthis.context = listener.context;\\n\\t\\tthis.source = this.context.createBufferSource();\\n\\t\\tthis.source.onended = this.onEnded.bind( this );\\n\\n\\t\\tthis.gain = this.context.createGain();\\n\\t\\tthis.gain.connect( listener.getInput() );\\n\\n\\t\\tthis.autoplay = false;\\n\\n\\t\\tthis.startTime = 0;\\n\\t\\tthis.playbackRate = 1;\\n\\t\\tthis.isPlaying = false;\\n\\t\\tthis.hasPlaybackControl = true;\\n\\t\\tthis.sourceType = 'empty';\\n\\n\\t\\tthis.filters = [];\\n\\n\\t};\\n\\n\\tTHREE.Audio.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\\n\\n\\t\\tconstructor: THREE.Audio,\\n\\n\\t\\tgetOutput: function () {\\n\\n\\t\\t\\treturn this.gain;\\n\\n\\t\\t},\\n\\n\\t\\tsetNodeSource: function ( audioNode ) {\\n\\n\\t\\t\\tthis.hasPlaybackControl = false;\\n\\t\\t\\tthis.sourceType = 'audioNode';\\n\\t\\t\\tthis.source = audioNode;\\n\\t\\t\\tthis.connect();\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tsetBuffer: function ( audioBuffer ) {\\n\\n\\t\\t\\tthis.source.buffer = audioBuffer;\\n\\t\\t\\tthis.sourceType = 'buffer';\\n\\n\\t\\t\\tif ( this.autoplay ) this.play();\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tplay: function () {\\n\\n\\t\\t\\tif ( this.isPlaying === true ) {\\n\\n\\t\\t\\t\\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\\n\\t\\t\\t\\treturn;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( this.hasPlaybackControl === false ) {\\n\\n\\t\\t\\t\\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\\n\\t\\t\\t\\treturn;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar source = this.context.createBufferSource();\\n\\n\\t\\t\\tsource.buffer = this.source.buffer;\\n\\t\\t\\tsource.loop = this.source.loop;\\n\\t\\t\\tsource.onended = this.source.onended;\\n\\t\\t\\tsource.start( 0, this.startTime );\\n\\t\\t\\tsource.playbackRate.value = this.playbackRate;\\n\\n\\t\\t\\tthis.isPlaying = true;\\n\\n\\t\\t\\tthis.source = source;\\n\\n\\t\\t\\treturn this.connect();\\n\\n\\t\\t},\\n\\n\\t\\tpause: function () {\\n\\n\\t\\t\\tif ( this.hasPlaybackControl === false ) {\\n\\n\\t\\t\\t\\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\\n\\t\\t\\t\\treturn;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.source.stop();\\n\\t\\t\\tthis.startTime = this.context.currentTime;\\n\\t\\t\\tthis.isPlaying = false;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tstop: function () {\\n\\n\\t\\t\\tif ( this.hasPlaybackControl === false ) {\\n\\n\\t\\t\\t\\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\\n\\t\\t\\t\\treturn;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.source.stop();\\n\\t\\t\\tthis.startTime = 0;\\n\\t\\t\\tthis.isPlaying = false;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tconnect: function () {\\n\\n\\t\\t\\tif ( this.filters.length > 0 ) {\\n\\n\\t\\t\\t\\tthis.source.connect( this.filters[ 0 ] );\\n\\n\\t\\t\\t\\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\\n\\n\\t\\t\\t\\t\\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\tthis.source.connect( this.getOutput() );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tdisconnect: function () {\\n\\n\\t\\t\\tif ( this.filters.length > 0 ) {\\n\\n\\t\\t\\t\\tthis.source.disconnect( this.filters[ 0 ] );\\n\\n\\t\\t\\t\\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\\n\\n\\t\\t\\t\\t\\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\tthis.source.disconnect( this.getOutput() );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tgetFilters: function () {\\n\\n\\t\\t\\treturn this.filters;\\n\\n\\t\\t},\\n\\n\\t\\tsetFilters: function ( value ) {\\n\\n\\t\\t\\tif ( ! value ) value = [];\\n\\n\\t\\t\\tif ( this.isPlaying === true ) {\\n\\n\\t\\t\\t\\tthis.disconnect();\\n\\t\\t\\t\\tthis.filters = value;\\n\\t\\t\\t\\tthis.connect();\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\tthis.filters = value;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tgetFilter: function () {\\n\\n\\t\\t\\treturn this.getFilters()[ 0 ];\\n\\n\\t\\t},\\n\\n\\t\\tsetFilter: function ( filter ) {\\n\\n\\t\\t\\treturn this.setFilters( filter ? [ filter ] : [] );\\n\\n\\t\\t},\\n\\n\\t\\tsetPlaybackRate: function ( value ) {\\n\\n\\t\\t\\tif ( this.hasPlaybackControl === false ) {\\n\\n\\t\\t\\t\\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\\n\\t\\t\\t\\treturn;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.playbackRate = value;\\n\\n\\t\\t\\tif ( this.isPlaying === true ) {\\n\\n\\t\\t\\t\\tthis.source.playbackRate.value = this.playbackRate;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tgetPlaybackRate: function () {\\n\\n\\t\\t\\treturn this.playbackRate;\\n\\n\\t\\t},\\n\\n\\t\\tonEnded: function () {\\n\\n\\t\\t\\tthis.isPlaying = false;\\n\\n\\t\\t},\\n\\n\\t\\tgetLoop: function () {\\n\\n\\t\\t\\tif ( this.hasPlaybackControl === false ) {\\n\\n\\t\\t\\t\\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\\n\\t\\t\\t\\treturn false;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn this.source.loop;\\n\\n\\t\\t},\\n\\n\\t\\tsetLoop: function ( value ) {\\n\\n\\t\\t\\tif ( this.hasPlaybackControl === false ) {\\n\\n\\t\\t\\t\\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\\n\\t\\t\\t\\treturn;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.source.loop = value;\\n\\n\\t\\t},\\n\\n\\t\\tgetVolume: function () {\\n\\n\\t\\t\\treturn this.gain.gain.value;\\n\\n\\t\\t},\\n\\n\\n\\t\\tsetVolume: function ( value ) {\\n\\n\\t\\t\\tthis.gain.gain.value = value;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t}\\n\\n\\t} );\\n\\n\\t// File:src/audio/AudioAnalyser.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t */\\n\\n\\tTHREE.AudioAnalyser = function ( audio, fftSize ) {\\n\\n\\t\\tthis.analyser = audio.context.createAnalyser();\\n\\t\\tthis.analyser.fftSize = fftSize !== undefined ? fftSize : 2048;\\n\\n\\t\\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\\n\\n\\t\\taudio.getOutput().connect( this.analyser );\\n\\n\\t};\\n\\n\\tObject.assign( THREE.AudioAnalyser.prototype, {\\n\\n\\t\\tgetFrequencyData: function () {\\n\\n\\t\\t\\tthis.analyser.getByteFrequencyData( this.data );\\n\\n\\t\\t\\treturn this.data;\\n\\n\\t\\t},\\n\\n\\t\\tgetAverageFrequency: function () {\\n\\n\\t\\t\\tvar value = 0, data = this.getFrequencyData();\\n\\n\\t\\t\\tfor ( var i = 0; i < data.length; i ++ ) {\\n\\n\\t\\t\\t\\tvalue += data[ i ];\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn value / data.length;\\n\\n\\t\\t}\\n\\n\\t} );\\n\\n\\t// File:src/audio/AudioContext.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t */\\n\\n\\tObject.defineProperty( THREE, 'AudioContext', {\\n\\n\\t\\tget: ( function () {\\n\\n\\t\\t\\tvar context;\\n\\n\\t\\t\\treturn function get() {\\n\\n\\t\\t\\t\\tif ( context === undefined ) {\\n\\n\\t\\t\\t\\t\\tcontext = new ( window.AudioContext || window.webkitAudioContext )();\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn context;\\n\\n\\t\\t\\t};\\n\\n\\t\\t} )()\\n\\n\\t} );\\n\\n\\t// File:src/audio/PositionalAudio.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t */\\n\\n\\tTHREE.PositionalAudio = function ( listener ) {\\n\\n\\t\\tTHREE.Audio.call( this, listener );\\n\\n\\t\\tthis.panner = this.context.createPanner();\\n\\t\\tthis.panner.connect( this.gain );\\n\\n\\t};\\n\\n\\tTHREE.PositionalAudio.prototype = Object.assign( Object.create( THREE.Audio.prototype ), {\\n\\n\\t\\tconstructor: THREE.PositionalAudio,\\n\\n\\t\\tgetOutput: function () {\\n\\n\\t\\t\\treturn this.panner;\\n\\n\\t\\t},\\n\\n\\t\\tgetRefDistance: function () {\\n\\n\\t\\t\\treturn this.panner.refDistance;\\n\\n\\t\\t},\\n\\n\\t\\tsetRefDistance: function ( value ) {\\n\\n\\t\\t\\tthis.panner.refDistance = value;\\n\\n\\t\\t},\\n\\n\\t\\tgetRolloffFactor: function () {\\n\\n\\t\\t\\treturn this.panner.rolloffFactor;\\n\\n\\t\\t},\\n\\n\\t\\tsetRolloffFactor: function ( value ) {\\n\\n\\t\\t\\tthis.panner.rolloffFactor = value;\\n\\n\\t\\t},\\n\\n\\t\\tgetDistanceModel: function () {\\n\\n\\t\\t\\treturn this.panner.distanceModel;\\n\\n\\t\\t},\\n\\n\\t\\tsetDistanceModel: function ( value ) {\\n\\n\\t\\t\\tthis.panner.distanceModel = value;\\n\\n\\t\\t},\\n\\n\\t\\tgetMaxDistance: function () {\\n\\n\\t\\t\\treturn this.panner.maxDistance;\\n\\n\\t\\t},\\n\\n\\t\\tsetMaxDistance: function ( value ) {\\n\\n\\t\\t\\tthis.panner.maxDistance = value;\\n\\n\\t\\t},\\n\\n\\t\\tupdateMatrixWorld: ( function () {\\n\\n\\t\\t\\tvar position = new THREE.Vector3();\\n\\n\\t\\t\\treturn function updateMatrixWorld( force ) {\\n\\n\\t\\t\\t\\tTHREE.Object3D.prototype.updateMatrixWorld.call( this, force );\\n\\n\\t\\t\\t\\tposition.setFromMatrixPosition( this.matrixWorld );\\n\\n\\t\\t\\t\\tthis.panner.setPosition( position.x, position.y, position.z );\\n\\n\\t\\t\\t};\\n\\n\\t\\t} )()\\n\\n\\n\\t} );\\n\\n\\t// File:src/audio/AudioListener.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t */\\n\\n\\tTHREE.AudioListener = function () {\\n\\n\\t\\tTHREE.Object3D.call( this );\\n\\n\\t\\tthis.type = 'AudioListener';\\n\\n\\t\\tthis.context = THREE.AudioContext;\\n\\n\\t\\tthis.gain = this.context.createGain();\\n\\t\\tthis.gain.connect( this.context.destination );\\n\\n\\t\\tthis.filter = null;\\n\\n\\t};\\n\\n\\tTHREE.AudioListener.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\\n\\n\\t\\tconstructor: THREE.AudioListener,\\n\\n\\t\\tgetInput: function () {\\n\\n\\t\\t\\treturn this.gain;\\n\\n\\t\\t},\\n\\n\\t\\tremoveFilter: function ( ) {\\n\\n\\t\\t\\tif ( this.filter !== null ) {\\n\\n\\t\\t\\t\\tthis.gain.disconnect( this.filter );\\n\\t\\t\\t\\tthis.filter.disconnect( this.context.destination );\\n\\t\\t\\t\\tthis.gain.connect( this.context.destination );\\n\\t\\t\\t\\tthis.filter = null;\\n\\n\\t\\t\\t}\\n\\n\\t\\t},\\n\\n\\t\\tgetFilter: function () {\\n\\n\\t\\t\\treturn this.filter;\\n\\n\\t\\t},\\n\\n\\t\\tsetFilter: function ( value ) {\\n\\n\\t\\t\\tif ( this.filter !== null ) {\\n\\n\\t\\t\\t\\tthis.gain.disconnect( this.filter );\\n\\t\\t\\t\\tthis.filter.disconnect( this.context.destination );\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\tthis.gain.disconnect( this.context.destination );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.filter = value;\\n\\t\\t\\tthis.gain.connect( this.filter );\\n\\t\\t\\tthis.filter.connect( this.context.destination );\\n\\n\\t\\t},\\n\\n\\t\\tgetMasterVolume: function () {\\n\\n\\t\\t\\treturn this.gain.gain.value;\\n\\n\\t\\t},\\n\\n\\t\\tsetMasterVolume: function ( value ) {\\n\\n\\t\\t\\tthis.gain.gain.value = value;\\n\\n\\t\\t},\\n\\n\\t\\tupdateMatrixWorld: ( function () {\\n\\n\\t\\t\\tvar position = new THREE.Vector3();\\n\\t\\t\\tvar quaternion = new THREE.Quaternion();\\n\\t\\t\\tvar scale = new THREE.Vector3();\\n\\n\\t\\t\\tvar orientation = new THREE.Vector3();\\n\\n\\t\\t\\treturn function updateMatrixWorld( force ) {\\n\\n\\t\\t\\t\\tTHREE.Object3D.prototype.updateMatrixWorld.call( this, force );\\n\\n\\t\\t\\t\\tvar listener = this.context.listener;\\n\\t\\t\\t\\tvar up = this.up;\\n\\n\\t\\t\\t\\tthis.matrixWorld.decompose( position, quaternion, scale );\\n\\n\\t\\t\\t\\torientation.set( 0, 0, - 1 ).applyQuaternion( quaternion );\\n\\n\\t\\t\\t\\tlistener.setPosition( position.x, position.y, position.z );\\n\\t\\t\\t\\tlistener.setOrientation( orientation.x, orientation.y, orientation.z, up.x, up.y, up.z );\\n\\n\\t\\t\\t};\\n\\n\\t\\t} )()\\n\\n\\t} );\\n\\n\\t// File:src/cameras/Camera.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t * @author mikael emtinger / http://gomo.se/\\n\\t * @author WestLangley / http://github.com/WestLangley\\n\\t*/\\n\\n\\tTHREE.Camera = function () {\\n\\n\\t\\tTHREE.Object3D.call( this );\\n\\n\\t\\tthis.type = 'Camera';\\n\\n\\t\\tthis.matrixWorldInverse = new THREE.Matrix4();\\n\\t\\tthis.projectionMatrix = new THREE.Matrix4();\\n\\n\\t};\\n\\n\\tTHREE.Camera.prototype = Object.create( THREE.Object3D.prototype );\\n\\tTHREE.Camera.prototype.constructor = THREE.Camera;\\n\\n\\tTHREE.Camera.prototype.getWorldDirection = function () {\\n\\n\\t\\tvar quaternion = new THREE.Quaternion();\\n\\n\\t\\treturn function getWorldDirection( optionalTarget ) {\\n\\n\\t\\t\\tvar result = optionalTarget || new THREE.Vector3();\\n\\n\\t\\t\\tthis.getWorldQuaternion( quaternion );\\n\\n\\t\\t\\treturn result.set( 0, 0, - 1 ).applyQuaternion( quaternion );\\n\\n\\t\\t};\\n\\n\\t}();\\n\\n\\tTHREE.Camera.prototype.lookAt = function () {\\n\\n\\t\\t// This routine does not support cameras with rotated and/or translated parent(s)\\n\\n\\t\\tvar m1 = new THREE.Matrix4();\\n\\n\\t\\treturn function lookAt( vector ) {\\n\\n\\t\\t\\tm1.lookAt( this.position, vector, this.up );\\n\\n\\t\\t\\tthis.quaternion.setFromRotationMatrix( m1 );\\n\\n\\t\\t};\\n\\n\\t}();\\n\\n\\tTHREE.Camera.prototype.clone = function () {\\n\\n\\t\\treturn new this.constructor().copy( this );\\n\\n\\t};\\n\\n\\tTHREE.Camera.prototype.copy = function ( source ) {\\n\\n\\t\\tTHREE.Object3D.prototype.copy.call( this, source );\\n\\n\\t\\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\\n\\t\\tthis.projectionMatrix.copy( source.projectionMatrix );\\n\\n\\t\\treturn this;\\n\\n\\t};\\n\\n\\t// File:src/cameras/CubeCamera.js\\n\\n\\t/**\\n\\t * Camera for rendering cube maps\\n\\t *\\t- renders scene into axis-aligned cube\\n\\t *\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t */\\n\\n\\tTHREE.CubeCamera = function ( near, far, cubeResolution ) {\\n\\n\\t\\tTHREE.Object3D.call( this );\\n\\n\\t\\tthis.type = 'CubeCamera';\\n\\n\\t\\tvar fov = 90, aspect = 1;\\n\\n\\t\\tvar cameraPX = new THREE.PerspectiveCamera( fov, aspect, near, far );\\n\\t\\tcameraPX.up.set( 0, - 1, 0 );\\n\\t\\tcameraPX.lookAt( new THREE.Vector3( 1, 0, 0 ) );\\n\\t\\tthis.add( cameraPX );\\n\\n\\t\\tvar cameraNX = new THREE.PerspectiveCamera( fov, aspect, near, far );\\n\\t\\tcameraNX.up.set( 0, - 1, 0 );\\n\\t\\tcameraNX.lookAt( new THREE.Vector3( - 1, 0, 0 ) );\\n\\t\\tthis.add( cameraNX );\\n\\n\\t\\tvar cameraPY = new THREE.PerspectiveCamera( fov, aspect, near, far );\\n\\t\\tcameraPY.up.set( 0, 0, 1 );\\n\\t\\tcameraPY.lookAt( new THREE.Vector3( 0, 1, 0 ) );\\n\\t\\tthis.add( cameraPY );\\n\\n\\t\\tvar cameraNY = new THREE.PerspectiveCamera( fov, aspect, near, far );\\n\\t\\tcameraNY.up.set( 0, 0, - 1 );\\n\\t\\tcameraNY.lookAt( new THREE.Vector3( 0, - 1, 0 ) );\\n\\t\\tthis.add( cameraNY );\\n\\n\\t\\tvar cameraPZ = new THREE.PerspectiveCamera( fov, aspect, near, far );\\n\\t\\tcameraPZ.up.set( 0, - 1, 0 );\\n\\t\\tcameraPZ.lookAt( new THREE.Vector3( 0, 0, 1 ) );\\n\\t\\tthis.add( cameraPZ );\\n\\n\\t\\tvar cameraNZ = new THREE.PerspectiveCamera( fov, aspect, near, far );\\n\\t\\tcameraNZ.up.set( 0, - 1, 0 );\\n\\t\\tcameraNZ.lookAt( new THREE.Vector3( 0, 0, - 1 ) );\\n\\t\\tthis.add( cameraNZ );\\n\\n\\t\\tvar options = { format: THREE.RGBFormat, magFilter: THREE.LinearFilter, minFilter: THREE.LinearFilter };\\n\\n\\t\\tthis.renderTarget = new THREE.WebGLRenderTargetCube( cubeResolution, cubeResolution, options );\\n\\n\\t\\tthis.updateCubeMap = function ( renderer, scene ) {\\n\\n\\t\\t\\tif ( this.parent === null ) this.updateMatrixWorld();\\n\\n\\t\\t\\tvar renderTarget = this.renderTarget;\\n\\t\\t\\tvar generateMipmaps = renderTarget.texture.generateMipmaps;\\n\\n\\t\\t\\trenderTarget.texture.generateMipmaps = false;\\n\\n\\t\\t\\trenderTarget.activeCubeFace = 0;\\n\\t\\t\\trenderer.render( scene, cameraPX, renderTarget );\\n\\n\\t\\t\\trenderTarget.activeCubeFace = 1;\\n\\t\\t\\trenderer.render( scene, cameraNX, renderTarget );\\n\\n\\t\\t\\trenderTarget.activeCubeFace = 2;\\n\\t\\t\\trenderer.render( scene, cameraPY, renderTarget );\\n\\n\\t\\t\\trenderTarget.activeCubeFace = 3;\\n\\t\\t\\trenderer.render( scene, cameraNY, renderTarget );\\n\\n\\t\\t\\trenderTarget.activeCubeFace = 4;\\n\\t\\t\\trenderer.render( scene, cameraPZ, renderTarget );\\n\\n\\t\\t\\trenderTarget.texture.generateMipmaps = generateMipmaps;\\n\\n\\t\\t\\trenderTarget.activeCubeFace = 5;\\n\\t\\t\\trenderer.render( scene, cameraNZ, renderTarget );\\n\\n\\t\\t\\trenderer.setRenderTarget( null );\\n\\n\\t\\t};\\n\\n\\t};\\n\\n\\tTHREE.CubeCamera.prototype = Object.create( THREE.Object3D.prototype );\\n\\tTHREE.CubeCamera.prototype.constructor = THREE.CubeCamera;\\n\\n\\t// File:src/cameras/OrthographicCamera.js\\n\\n\\t/**\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t * @author arose / http://github.com/arose\\n\\t */\\n\\n\\tTHREE.OrthographicCamera = function ( left, right, top, bottom, near, far ) {\\n\\n\\t\\tTHREE.Camera.call( this );\\n\\n\\t\\tthis.type = 'OrthographicCamera';\\n\\n\\t\\tthis.zoom = 1;\\n\\t\\tthis.view = null;\\n\\n\\t\\tthis.left = left;\\n\\t\\tthis.right = right;\\n\\t\\tthis.top = top;\\n\\t\\tthis.bottom = bottom;\\n\\n\\t\\tthis.near = ( near !== undefined ) ? near : 0.1;\\n\\t\\tthis.far = ( far !== undefined ) ? far : 2000;\\n\\n\\t\\tthis.updateProjectionMatrix();\\n\\n\\t};\\n\\n\\tTHREE.OrthographicCamera.prototype = Object.assign( Object.create( THREE.Camera.prototype ), {\\n\\n\\t\\tconstructor: THREE.OrthographicCamera,\\n\\n\\t\\tcopy: function ( source ) {\\n\\n\\t\\t\\tTHREE.Camera.prototype.copy.call( this, source );\\n\\n\\t\\t\\tthis.left = source.left;\\n\\t\\t\\tthis.right = source.right;\\n\\t\\t\\tthis.top = source.top;\\n\\t\\t\\tthis.bottom = source.bottom;\\n\\t\\t\\tthis.near = source.near;\\n\\t\\t\\tthis.far = source.far;\\n\\n\\t\\t\\tthis.zoom = source.zoom;\\n\\t\\t\\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tsetViewOffset: function( fullWidth, fullHeight, x, y, width, height ) {\\n\\n\\t\\t\\tthis.view = {\\n\\t\\t\\t\\tfullWidth: fullWidth,\\n\\t\\t\\t\\tfullHeight: fullHeight,\\n\\t\\t\\t\\toffsetX: x,\\n\\t\\t\\t\\toffsetY: y,\\n\\t\\t\\t\\twidth: width,\\n\\t\\t\\t\\theight: height\\n\\t\\t\\t};\\n\\n\\t\\t\\tthis.updateProjectionMatrix();\\n\\n\\t\\t},\\n\\n\\t\\tclearViewOffset: function() {\\n\\n\\t\\t\\tthis.view = null;\\n\\t\\t\\tthis.updateProjectionMatrix();\\n\\n\\t\\t},\\n\\n\\t\\tupdateProjectionMatrix: function () {\\n\\n\\t\\t\\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\\n\\t\\t\\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\\n\\t\\t\\tvar cx = ( this.right + this.left ) / 2;\\n\\t\\t\\tvar cy = ( this.top + this.bottom ) / 2;\\n\\n\\t\\t\\tvar left = cx - dx;\\n\\t\\t\\tvar right = cx + dx;\\n\\t\\t\\tvar top = cy + dy;\\n\\t\\t\\tvar bottom = cy - dy;\\n\\n\\t\\t\\tif ( this.view !== null ) {\\n\\n\\t\\t\\t\\tvar zoomW = this.zoom / ( this.view.width / this.view.fullWidth );\\n\\t\\t\\t\\tvar zoomH = this.zoom / ( this.view.height / this.view.fullHeight );\\n\\t\\t\\t\\tvar scaleW = ( this.right - this.left ) / this.view.width;\\n\\t\\t\\t\\tvar scaleH = ( this.top - this.bottom ) / this.view.height;\\n\\n\\t\\t\\t\\tleft += scaleW * ( this.view.offsetX / zoomW );\\n\\t\\t\\t\\tright = left + scaleW * ( this.view.width / zoomW );\\n\\t\\t\\t\\ttop -= scaleH * ( this.view.offsetY / zoomH );\\n\\t\\t\\t\\tbottom = top - scaleH * ( this.view.height / zoomH );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\\n\\n\\t\\t},\\n\\n\\t\\ttoJSON: function ( meta ) {\\n\\n\\t\\t\\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\\n\\n\\t\\t\\tdata.object.zoom = this.zoom;\\n\\t\\t\\tdata.object.left = this.left;\\n\\t\\t\\tdata.object.right = this.right;\\n\\t\\t\\tdata.object.top = this.top;\\n\\t\\t\\tdata.object.bottom = this.bottom;\\n\\t\\t\\tdata.object.near = this.near;\\n\\t\\t\\tdata.object.far = this.far;\\n\\n\\t\\t\\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\\n\\n\\t\\t\\treturn data;\\n\\n\\t\\t}\\n\\n\\t} );\\n\\n\\t// File:src/cameras/PerspectiveCamera.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t * @author greggman / http://games.greggman.com/\\n\\t * @author zz85 / http://www.lab4games.net/zz85/blog\\n\\t * @author tschw\\n\\t */\\n\\n\\tTHREE.PerspectiveCamera = function ( fov, aspect, near, far ) {\\n\\n\\t\\tTHREE.Camera.call( this );\\n\\n\\t\\tthis.type = 'PerspectiveCamera';\\n\\n\\t\\tthis.fov = fov !== undefined ? fov : 50;\\n\\t\\tthis.zoom = 1;\\n\\n\\t\\tthis.near = near !== undefined ? near : 0.1;\\n\\t\\tthis.far = far !== undefined ? far : 2000;\\n\\t\\tthis.focus = 10;\\n\\n\\t\\tthis.aspect = aspect !== undefined ? aspect : 1;\\n\\t\\tthis.view = null;\\n\\n\\t\\tthis.filmGauge = 35;\\t// width of the film (default in millimeters)\\n\\t\\tthis.filmOffset = 0;\\t// horizontal film offset (same unit as gauge)\\n\\n\\t\\tthis.updateProjectionMatrix();\\n\\n\\t};\\n\\n\\tTHREE.PerspectiveCamera.prototype = Object.assign( Object.create( THREE.Camera.prototype ), {\\n\\n\\t\\tconstructor: THREE.PerspectiveCamera,\\n\\n\\t\\tcopy: function ( source ) {\\n\\n\\t\\t\\tTHREE.Camera.prototype.copy.call( this, source );\\n\\n\\t\\t\\tthis.fov = source.fov;\\n\\t\\t\\tthis.zoom = source.zoom;\\n\\n\\t\\t\\tthis.near = source.near;\\n\\t\\t\\tthis.far = source.far;\\n\\t\\t\\tthis.focus = source.focus;\\n\\n\\t\\t\\tthis.aspect = source.aspect;\\n\\t\\t\\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\\n\\n\\t\\t\\tthis.filmGauge = source.filmGauge;\\n\\t\\t\\tthis.filmOffset = source.filmOffset;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * Sets the FOV by focal length in respect to the current .filmGauge.\\n\\t\\t *\\n\\t\\t * The default film gauge is 35, so that the focal length can be specified for\\n\\t\\t * a 35mm (full frame) camera.\\n\\t\\t *\\n\\t\\t * Values for focal length and film gauge must have the same unit.\\n\\t\\t */\\n\\t\\tsetFocalLength: function ( focalLength ) {\\n\\n\\t\\t\\t// see http://www.bobatkins.com/photography/technical/field_of_view.html\\n\\t\\t\\tvar vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\\n\\n\\t\\t\\tthis.fov = THREE.Math.RAD2DEG * 2 * Math.atan( vExtentSlope );\\n\\t\\t\\tthis.updateProjectionMatrix();\\n\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * Calculates the focal length from the current .fov and .filmGauge.\\n\\t\\t */\\n\\t\\tgetFocalLength: function () {\\n\\n\\t\\t\\tvar vExtentSlope = Math.tan( THREE.Math.DEG2RAD * 0.5 * this.fov );\\n\\n\\t\\t\\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\\n\\n\\t\\t},\\n\\n\\t\\tgetEffectiveFOV: function () {\\n\\n\\t\\t\\treturn THREE.Math.RAD2DEG * 2 * Math.atan(\\n\\t\\t\\t\\t\\tMath.tan( THREE.Math.DEG2RAD * 0.5 * this.fov ) / this.zoom );\\n\\n\\t\\t},\\n\\n\\t\\tgetFilmWidth: function () {\\n\\n\\t\\t\\t// film not completely covered in portrait format (aspect < 1)\\n\\t\\t\\treturn this.filmGauge * Math.min( this.aspect, 1 );\\n\\n\\t\\t},\\n\\n\\t\\tgetFilmHeight: function () {\\n\\n\\t\\t\\t// film not completely covered in landscape format (aspect > 1)\\n\\t\\t\\treturn this.filmGauge / Math.max( this.aspect, 1 );\\n\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * Sets an offset in a larger frustum. This is useful for multi-window or\\n\\t\\t * multi-monitor/multi-machine setups.\\n\\t\\t *\\n\\t\\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\\n\\t\\t * the monitors are in grid like this\\n\\t\\t *\\n\\t\\t *   +---+---+---+\\n\\t\\t *   | A | B | C |\\n\\t\\t *   +---+---+---+\\n\\t\\t *   | D | E | F |\\n\\t\\t *   +---+---+---+\\n\\t\\t *\\n\\t\\t * then for each monitor you would call it like this\\n\\t\\t *\\n\\t\\t *   var w = 1920;\\n\\t\\t *   var h = 1080;\\n\\t\\t *   var fullWidth = w * 3;\\n\\t\\t *   var fullHeight = h * 2;\\n\\t\\t *\\n\\t\\t *   --A--\\n\\t\\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\\n\\t\\t *   --B--\\n\\t\\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\\n\\t\\t *   --C--\\n\\t\\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\\n\\t\\t *   --D--\\n\\t\\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\\n\\t\\t *   --E--\\n\\t\\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\\n\\t\\t *   --F--\\n\\t\\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\\n\\t\\t *\\n\\t\\t *   Note there is no reason monitors have to be the same size or in a grid.\\n\\t\\t */\\n\\t\\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\\n\\n\\t\\t\\tthis.aspect = fullWidth / fullHeight;\\n\\n\\t\\t\\tthis.view = {\\n\\t\\t\\t\\tfullWidth: fullWidth,\\n\\t\\t\\t\\tfullHeight: fullHeight,\\n\\t\\t\\t\\toffsetX: x,\\n\\t\\t\\t\\toffsetY: y,\\n\\t\\t\\t\\twidth: width,\\n\\t\\t\\t\\theight: height\\n\\t\\t\\t};\\n\\n\\t\\t\\tthis.updateProjectionMatrix();\\n\\n\\t\\t},\\n\\n\\t\\tclearViewOffset: function() {\\n\\n\\t\\t\\tthis.view = null;\\n\\t\\t\\tthis.updateProjectionMatrix();\\n\\n\\t\\t},\\n\\n\\t\\tupdateProjectionMatrix: function () {\\n\\n\\t\\t\\tvar near = this.near,\\n\\t\\t\\t\\ttop = near * Math.tan(\\n\\t\\t\\t\\t\\t\\tTHREE.Math.DEG2RAD * 0.5 * this.fov ) / this.zoom,\\n\\t\\t\\t\\theight = 2 * top,\\n\\t\\t\\t\\twidth = this.aspect * height,\\n\\t\\t\\t\\tleft = - 0.5 * width,\\n\\t\\t\\t\\tview = this.view;\\n\\n\\t\\t\\tif ( view !== null ) {\\n\\n\\t\\t\\t\\tvar fullWidth = view.fullWidth,\\n\\t\\t\\t\\t\\tfullHeight = view.fullHeight;\\n\\n\\t\\t\\t\\tleft += view.offsetX * width / fullWidth;\\n\\t\\t\\t\\ttop -= view.offsetY * height / fullHeight;\\n\\t\\t\\t\\twidth *= view.width / fullWidth;\\n\\t\\t\\t\\theight *= view.height / fullHeight;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar skew = this.filmOffset;\\n\\t\\t\\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\\n\\n\\t\\t\\tthis.projectionMatrix.makeFrustum(\\n\\t\\t\\t\\t\\tleft, left + width, top - height, top, near, this.far );\\n\\n\\t\\t},\\n\\n\\t\\ttoJSON: function ( meta ) {\\n\\n\\t\\t\\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\\n\\n\\t\\t\\tdata.object.fov = this.fov;\\n\\t\\t\\tdata.object.zoom = this.zoom;\\n\\n\\t\\t\\tdata.object.near = this.near;\\n\\t\\t\\tdata.object.far = this.far;\\n\\t\\t\\tdata.object.focus = this.focus;\\n\\n\\t\\t\\tdata.object.aspect = this.aspect;\\n\\n\\t\\t\\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\\n\\n\\t\\t\\tdata.object.filmGauge = this.filmGauge;\\n\\t\\t\\tdata.object.filmOffset = this.filmOffset;\\n\\n\\t\\t\\treturn data;\\n\\n\\t\\t}\\n\\n\\t} );\\n\\n\\t// File:src/cameras/StereoCamera.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t */\\n\\n\\tTHREE.StereoCamera = function () {\\n\\n\\t\\tthis.type = 'StereoCamera';\\n\\n\\t\\tthis.aspect = 1;\\n\\n\\t\\tthis.cameraL = new THREE.PerspectiveCamera();\\n\\t\\tthis.cameraL.layers.enable( 1 );\\n\\t\\tthis.cameraL.matrixAutoUpdate = false;\\n\\n\\t\\tthis.cameraR = new THREE.PerspectiveCamera();\\n\\t\\tthis.cameraR.layers.enable( 2 );\\n\\t\\tthis.cameraR.matrixAutoUpdate = false;\\n\\n\\t};\\n\\n\\tObject.assign( THREE.StereoCamera.prototype, {\\n\\n\\t\\tupdate: ( function () {\\n\\n\\t\\t\\tvar focus, fov, aspect, near, far;\\n\\n\\t\\t\\tvar eyeRight = new THREE.Matrix4();\\n\\t\\t\\tvar eyeLeft = new THREE.Matrix4();\\n\\n\\t\\t\\treturn function update( camera ) {\\n\\n\\t\\t\\t\\tvar needsUpdate = focus !== camera.focus || fov !== camera.fov ||\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taspect !== camera.aspect * this.aspect || near !== camera.near ||\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tfar !== camera.far;\\n\\n\\t\\t\\t\\tif ( needsUpdate ) {\\n\\n\\t\\t\\t\\t\\tfocus = camera.focus;\\n\\t\\t\\t\\t\\tfov = camera.fov;\\n\\t\\t\\t\\t\\taspect = camera.aspect * this.aspect;\\n\\t\\t\\t\\t\\tnear = camera.near;\\n\\t\\t\\t\\t\\tfar = camera.far;\\n\\n\\t\\t\\t\\t\\t// Off-axis stereoscopic effect based on\\n\\t\\t\\t\\t\\t// http://paulbourke.net/stereographics/stereorender/\\n\\n\\t\\t\\t\\t\\tvar projectionMatrix = camera.projectionMatrix.clone();\\n\\t\\t\\t\\t\\tvar eyeSep = 0.064 / 2;\\n\\t\\t\\t\\t\\tvar eyeSepOnProjection = eyeSep * near / focus;\\n\\t\\t\\t\\t\\tvar ymax = near * Math.tan( THREE.Math.DEG2RAD * fov * 0.5 );\\n\\t\\t\\t\\t\\tvar xmin, xmax;\\n\\n\\t\\t\\t\\t\\t// translate xOffset\\n\\n\\t\\t\\t\\t\\teyeLeft.elements[ 12 ] = - eyeSep;\\n\\t\\t\\t\\t\\teyeRight.elements[ 12 ] = eyeSep;\\n\\n\\t\\t\\t\\t\\t// for left eye\\n\\n\\t\\t\\t\\t\\txmin = - ymax * aspect + eyeSepOnProjection;\\n\\t\\t\\t\\t\\txmax = ymax * aspect + eyeSepOnProjection;\\n\\n\\t\\t\\t\\t\\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\\n\\t\\t\\t\\t\\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\\n\\n\\t\\t\\t\\t\\tthis.cameraL.projectionMatrix.copy( projectionMatrix );\\n\\n\\t\\t\\t\\t\\t// for right eye\\n\\n\\t\\t\\t\\t\\txmin = - ymax * aspect - eyeSepOnProjection;\\n\\t\\t\\t\\t\\txmax = ymax * aspect - eyeSepOnProjection;\\n\\n\\t\\t\\t\\t\\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\\n\\t\\t\\t\\t\\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\\n\\n\\t\\t\\t\\t\\tthis.cameraR.projectionMatrix.copy( projectionMatrix );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( eyeLeft );\\n\\t\\t\\t\\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( eyeRight );\\n\\n\\t\\t\\t};\\n\\n\\t\\t} )()\\n\\n\\t} );\\n\\n\\t// File:src/lights/Light.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t */\\n\\n\\tTHREE.Light = function ( color, intensity ) {\\n\\n\\t\\tTHREE.Object3D.call( this );\\n\\n\\t\\tthis.type = 'Light';\\n\\n\\t\\tthis.color = new THREE.Color( color );\\n\\t\\tthis.intensity = intensity !== undefined ? intensity : 1;\\n\\n\\t\\tthis.receiveShadow = undefined;\\n\\n\\t};\\n\\n\\tTHREE.Light.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\\n\\n\\t\\tconstructor: THREE.Light,\\n\\n\\t\\tcopy: function ( source ) {\\n\\n\\t\\t\\tTHREE.Object3D.prototype.copy.call( this, source );\\n\\n\\t\\t\\tthis.color.copy( source.color );\\n\\t\\t\\tthis.intensity = source.intensity;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\ttoJSON: function ( meta ) {\\n\\n\\t\\t\\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\\n\\n\\t\\t\\tdata.object.color = this.color.getHex();\\n\\t\\t\\tdata.object.intensity = this.intensity;\\n\\n\\t\\t\\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\\n\\n\\t\\t\\tif ( this.distance !== undefined ) data.object.distance = this.distance;\\n\\t\\t\\tif ( this.angle !== undefined ) data.object.angle = this.angle;\\n\\t\\t\\tif ( this.decay !== undefined ) data.object.decay = this.decay;\\n\\t\\t\\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\\n\\n\\t\\t\\treturn data;\\n\\n\\t\\t}\\n\\n\\t} );\\n\\n\\t// File:src/lights/LightShadow.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t */\\n\\n\\tTHREE.LightShadow = function ( camera ) {\\n\\n\\t\\tthis.camera = camera;\\n\\n\\t\\tthis.bias = 0;\\n\\t\\tthis.radius = 1;\\n\\n\\t\\tthis.mapSize = new THREE.Vector2( 512, 512 );\\n\\n\\t\\tthis.map = null;\\n\\t\\tthis.matrix = new THREE.Matrix4();\\n\\n\\t};\\n\\n\\tObject.assign( THREE.LightShadow.prototype, {\\n\\n\\t\\tcopy: function ( source ) {\\n\\n\\t\\t\\tthis.camera = source.camera.clone();\\n\\n\\t\\t\\tthis.bias = source.bias;\\n\\t\\t\\tthis.radius = source.radius;\\n\\n\\t\\t\\tthis.mapSize.copy( source.mapSize );\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tclone: function () {\\n\\n\\t\\t\\treturn new this.constructor().copy( this );\\n\\n\\t\\t}\\n\\n\\t} );\\n\\n\\t// File:src/lights/AmbientLight.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t */\\n\\n\\tTHREE.AmbientLight = function ( color, intensity ) {\\n\\n\\t\\tTHREE.Light.call( this, color, intensity );\\n\\n\\t\\tthis.type = 'AmbientLight';\\n\\n\\t\\tthis.castShadow = undefined;\\n\\n\\t};\\n\\n\\tTHREE.AmbientLight.prototype = Object.assign( Object.create( THREE.Light.prototype ), {\\n\\n\\t\\tconstructor: THREE.AmbientLight\\n\\n\\t} );\\n\\n\\t// File:src/lights/DirectionalLight.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t */\\n\\n\\tTHREE.DirectionalLight = function ( color, intensity ) {\\n\\n\\t\\tTHREE.Light.call( this, color, intensity );\\n\\n\\t\\tthis.type = 'DirectionalLight';\\n\\n\\t\\tthis.position.copy( THREE.Object3D.DefaultUp );\\n\\t\\tthis.updateMatrix();\\n\\n\\t\\tthis.target = new THREE.Object3D();\\n\\n\\t\\tthis.shadow = new THREE.DirectionalLightShadow();\\n\\n\\t};\\n\\n\\tTHREE.DirectionalLight.prototype = Object.assign( Object.create( THREE.Light.prototype ), {\\n\\n\\t\\tconstructor: THREE.DirectionalLight,\\n\\n\\t\\tcopy: function ( source ) {\\n\\n\\t\\t\\tTHREE.Light.prototype.copy.call( this, source );\\n\\n\\t\\t\\tthis.target = source.target.clone();\\n\\n\\t\\t\\tthis.shadow = source.shadow.clone();\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t}\\n\\n\\t} );\\n\\n\\t// File:src/lights/DirectionalLightShadow.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t */\\n\\n\\tTHREE.DirectionalLightShadow = function ( light ) {\\n\\n\\t\\tTHREE.LightShadow.call( this, new THREE.OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\\n\\n\\t};\\n\\n\\tTHREE.DirectionalLightShadow.prototype = Object.assign( Object.create( THREE.LightShadow.prototype ), {\\n\\n\\t\\tconstructor: THREE.DirectionalLightShadow\\n\\n\\t} );\\n\\n\\t// File:src/lights/HemisphereLight.js\\n\\n\\t/**\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t */\\n\\n\\tTHREE.HemisphereLight = function ( skyColor, groundColor, intensity ) {\\n\\n\\t\\tTHREE.Light.call( this, skyColor, intensity );\\n\\n\\t\\tthis.type = 'HemisphereLight';\\n\\n\\t\\tthis.castShadow = undefined;\\n\\n\\t\\tthis.position.copy( THREE.Object3D.DefaultUp );\\n\\t\\tthis.updateMatrix();\\n\\n\\t\\tthis.groundColor = new THREE.Color( groundColor );\\n\\n\\t};\\n\\n\\tTHREE.HemisphereLight.prototype = Object.assign( Object.create( THREE.Light.prototype ), {\\n\\n\\t\\tconstructor: THREE.HemisphereLight,\\n\\n\\t\\tcopy: function ( source ) {\\n\\n\\t\\t\\tTHREE.Light.prototype.copy.call( this, source );\\n\\n\\t\\t\\tthis.groundColor.copy( source.groundColor );\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t}\\n\\n\\t} );\\n\\n\\t// File:src/lights/PointLight.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t */\\n\\n\\n\\tTHREE.PointLight = function ( color, intensity, distance, decay ) {\\n\\n\\t\\tTHREE.Light.call( this, color, intensity );\\n\\n\\t\\tthis.type = 'PointLight';\\n\\n\\t\\tObject.defineProperty( this, 'power', {\\n\\t\\t\\tget: function () {\\n\\t\\t\\t\\t// intensity = power per solid angle.\\n\\t\\t\\t\\t// ref: equation (15) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\\n\\t\\t\\t\\treturn this.intensity * 4 * Math.PI;\\n\\n\\t\\t\\t},\\n\\t\\t\\tset: function ( power ) {\\n\\t\\t\\t\\t// intensity = power per solid angle.\\n\\t\\t\\t\\t// ref: equation (15) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\\n\\t\\t\\t\\tthis.intensity = power / ( 4 * Math.PI );\\n\\t\\t\\t}\\n\\t\\t} );\\n\\n\\t\\tthis.distance = ( distance !== undefined ) ? distance : 0;\\n\\t\\tthis.decay = ( decay !== undefined ) ? decay : 1;\\t// for physically correct lights, should be 2.\\n\\n\\t\\tthis.shadow = new THREE.LightShadow( new THREE.PerspectiveCamera( 90, 1, 0.5, 500 ) );\\n\\n\\t};\\n\\n\\tTHREE.PointLight.prototype = Object.assign( Object.create( THREE.Light.prototype ), {\\n\\n\\t\\tconstructor: THREE.PointLight,\\n\\n\\t\\tcopy: function ( source ) {\\n\\n\\t\\t\\tTHREE.Light.prototype.copy.call( this, source );\\n\\n\\t\\t\\tthis.distance = source.distance;\\n\\t\\t\\tthis.decay = source.decay;\\n\\n\\t\\t\\tthis.shadow = source.shadow.clone();\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t}\\n\\n\\t} );\\n\\n\\t// File:src/lights/SpotLight.js\\n\\n\\t/**\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t */\\n\\n\\tTHREE.SpotLight = function ( color, intensity, distance, angle, penumbra, decay ) {\\n\\n\\t\\tTHREE.Light.call( this, color, intensity );\\n\\n\\t\\tthis.type = 'SpotLight';\\n\\n\\t\\tthis.position.copy( THREE.Object3D.DefaultUp );\\n\\t\\tthis.updateMatrix();\\n\\n\\t\\tthis.target = new THREE.Object3D();\\n\\n\\t\\tObject.defineProperty( this, 'power', {\\n\\t\\t\\tget: function () {\\n\\t\\t\\t\\t// intensity = power per solid angle.\\n\\t\\t\\t\\t// ref: equation (17) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\\n\\t\\t\\t\\treturn this.intensity * Math.PI;\\n\\t\\t\\t},\\n\\t\\t\\tset: function ( power ) {\\n\\t\\t\\t\\t// intensity = power per solid angle.\\n\\t\\t\\t\\t// ref: equation (17) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\\n\\t\\t\\t\\tthis.intensity = power / Math.PI;\\n\\t\\t\\t}\\n\\t\\t} );\\n\\n\\t\\tthis.distance = ( distance !== undefined ) ? distance : 0;\\n\\t\\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\\n\\t\\tthis.penumbra = ( penumbra !== undefined ) ? penumbra : 0;\\n\\t\\tthis.decay = ( decay !== undefined ) ? decay : 1;\\t// for physically correct lights, should be 2.\\n\\n\\t\\tthis.shadow = new THREE.SpotLightShadow();\\n\\n\\t};\\n\\n\\tTHREE.SpotLight.prototype = Object.assign( Object.create( THREE.Light.prototype ), {\\n\\n\\t\\tconstructor: THREE.SpotLight,\\n\\n\\t\\tcopy: function ( source ) {\\n\\n\\t\\t\\tTHREE.Light.prototype.copy.call( this, source );\\n\\n\\t\\t\\tthis.distance = source.distance;\\n\\t\\t\\tthis.angle = source.angle;\\n\\t\\t\\tthis.penumbra = source.penumbra;\\n\\t\\t\\tthis.decay = source.decay;\\n\\n\\t\\t\\tthis.target = source.target.clone();\\n\\n\\t\\t\\tthis.shadow = source.shadow.clone();\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t}\\n\\n\\t} );\\n\\n\\t// File:src/lights/SpotLightShadow.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t */\\n\\n\\tTHREE.SpotLightShadow = function () {\\n\\n\\t\\tTHREE.LightShadow.call( this, new THREE.PerspectiveCamera( 50, 1, 0.5, 500 ) );\\n\\n\\t};\\n\\n\\tTHREE.SpotLightShadow.prototype = Object.assign( Object.create( THREE.LightShadow.prototype ), {\\n\\n\\t\\tconstructor: THREE.SpotLightShadow,\\n\\n\\t\\tupdate: function ( light ) {\\n\\n\\t\\t\\tvar fov = THREE.Math.RAD2DEG * 2 * light.angle;\\n\\t\\t\\tvar aspect = this.mapSize.width / this.mapSize.height;\\n\\t\\t\\tvar far = light.distance || 500;\\n\\n\\t\\t\\tvar camera = this.camera;\\n\\n\\t\\t\\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\\n\\n\\t\\t\\t\\tcamera.fov = fov;\\n\\t\\t\\t\\tcamera.aspect = aspect;\\n\\t\\t\\t\\tcamera.far = far;\\n\\t\\t\\t\\tcamera.updateProjectionMatrix();\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t} );\\n\\n\\t// File:src/loaders/AudioLoader.js\\n\\n\\t/**\\n\\t * @author Reece Aaron Lecrivain / http://reecenotes.com/\\n\\t */\\n\\n\\tTHREE.AudioLoader = function ( manager ) {\\n\\n\\t\\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\\n\\n\\t};\\n\\n\\tObject.assign( THREE.AudioLoader.prototype, {\\n\\n\\t\\tload: function ( url, onLoad, onProgress, onError ) {\\n\\n\\t\\t\\tvar loader = new THREE.XHRLoader( this.manager );\\n\\t\\t\\tloader.setResponseType( 'arraybuffer' );\\n\\t\\t\\tloader.load( url, function ( buffer ) {\\n\\n\\t\\t\\t\\tvar context = THREE.AudioContext;\\n\\n\\t\\t\\t\\tcontext.decodeAudioData( buffer, function ( audioBuffer ) {\\n\\n\\t\\t\\t\\t\\tonLoad( audioBuffer );\\n\\n\\t\\t\\t\\t} );\\n\\n\\t\\t\\t}, onProgress, onError );\\n\\n\\t\\t}\\n\\n\\t} );\\n\\n\\t// File:src/loaders/Cache.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t */\\n\\n\\tTHREE.Cache = {\\n\\n\\t\\tenabled: false,\\n\\n\\t\\tfiles: {},\\n\\n\\t\\tadd: function ( key, file ) {\\n\\n\\t\\t\\tif ( this.enabled === false ) return;\\n\\n\\t\\t\\t// console.log( 'THREE.Cache', 'Adding key:', key );\\n\\n\\t\\t\\tthis.files[ key ] = file;\\n\\n\\t\\t},\\n\\n\\t\\tget: function ( key ) {\\n\\n\\t\\t\\tif ( this.enabled === false ) return;\\n\\n\\t\\t\\t// console.log( 'THREE.Cache', 'Checking key:', key );\\n\\n\\t\\t\\treturn this.files[ key ];\\n\\n\\t\\t},\\n\\n\\t\\tremove: function ( key ) {\\n\\n\\t\\t\\tdelete this.files[ key ];\\n\\n\\t\\t},\\n\\n\\t\\tclear: function () {\\n\\n\\t\\t\\tthis.files = {};\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\t// File:src/loaders/Loader.js\\n\\n\\t/**\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t */\\n\\n\\tTHREE.Loader = function () {\\n\\n\\t\\tthis.onLoadStart = function () {};\\n\\t\\tthis.onLoadProgress = function () {};\\n\\t\\tthis.onLoadComplete = function () {};\\n\\n\\t};\\n\\n\\tTHREE.Loader.prototype = {\\n\\n\\t\\tconstructor: THREE.Loader,\\n\\n\\t\\tcrossOrigin: undefined,\\n\\n\\t\\textractUrlBase: function ( url ) {\\n\\n\\t\\t\\tvar parts = url.split( '/' );\\n\\n\\t\\t\\tif ( parts.length === 1 ) return './';\\n\\n\\t\\t\\tparts.pop();\\n\\n\\t\\t\\treturn parts.join( '/' ) + '/';\\n\\n\\t\\t},\\n\\n\\t\\tinitMaterials: function ( materials, texturePath, crossOrigin ) {\\n\\n\\t\\t\\tvar array = [];\\n\\n\\t\\t\\tfor ( var i = 0; i < materials.length; ++ i ) {\\n\\n\\t\\t\\t\\tarray[ i ] = this.createMaterial( materials[ i ], texturePath, crossOrigin );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn array;\\n\\n\\t\\t},\\n\\n\\t\\tcreateMaterial: ( function () {\\n\\n\\t\\t\\tvar color, textureLoader, materialLoader;\\n\\n\\t\\t\\treturn function createMaterial( m, texturePath, crossOrigin ) {\\n\\n\\t\\t\\t\\tif ( color === undefined ) color = new THREE.Color();\\n\\t\\t\\t\\tif ( textureLoader === undefined ) textureLoader = new THREE.TextureLoader();\\n\\t\\t\\t\\tif ( materialLoader === undefined ) materialLoader = new THREE.MaterialLoader();\\n\\n\\t\\t\\t\\t// convert from old material format\\n\\n\\t\\t\\t\\tvar textures = {};\\n\\n\\t\\t\\t\\tfunction loadTexture( path, repeat, offset, wrap, anisotropy ) {\\n\\n\\t\\t\\t\\t\\tvar fullPath = texturePath + path;\\n\\t\\t\\t\\t\\tvar loader = THREE.Loader.Handlers.get( fullPath );\\n\\n\\t\\t\\t\\t\\tvar texture;\\n\\n\\t\\t\\t\\t\\tif ( loader !== null ) {\\n\\n\\t\\t\\t\\t\\t\\ttexture = loader.load( fullPath );\\n\\n\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\ttextureLoader.setCrossOrigin( crossOrigin );\\n\\t\\t\\t\\t\\t\\ttexture = textureLoader.load( fullPath );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tif ( repeat !== undefined ) {\\n\\n\\t\\t\\t\\t\\t\\ttexture.repeat.fromArray( repeat );\\n\\n\\t\\t\\t\\t\\t\\tif ( repeat[ 0 ] !== 1 ) texture.wrapS = THREE.RepeatWrapping;\\n\\t\\t\\t\\t\\t\\tif ( repeat[ 1 ] !== 1 ) texture.wrapT = THREE.RepeatWrapping;\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tif ( offset !== undefined ) {\\n\\n\\t\\t\\t\\t\\t\\ttexture.offset.fromArray( offset );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tif ( wrap !== undefined ) {\\n\\n\\t\\t\\t\\t\\t\\tif ( wrap[ 0 ] === 'repeat' ) texture.wrapS = THREE.RepeatWrapping;\\n\\t\\t\\t\\t\\t\\tif ( wrap[ 0 ] === 'mirror' ) texture.wrapS = THREE.MirroredRepeatWrapping;\\n\\n\\t\\t\\t\\t\\t\\tif ( wrap[ 1 ] === 'repeat' ) texture.wrapT = THREE.RepeatWrapping;\\n\\t\\t\\t\\t\\t\\tif ( wrap[ 1 ] === 'mirror' ) texture.wrapT = THREE.MirroredRepeatWrapping;\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tif ( anisotropy !== undefined ) {\\n\\n\\t\\t\\t\\t\\t\\ttexture.anisotropy = anisotropy;\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tvar uuid = THREE.Math.generateUUID();\\n\\n\\t\\t\\t\\t\\ttextures[ uuid ] = texture;\\n\\n\\t\\t\\t\\t\\treturn uuid;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t//\\n\\n\\t\\t\\t\\tvar json = {\\n\\t\\t\\t\\t\\tuuid: THREE.Math.generateUUID(),\\n\\t\\t\\t\\t\\ttype: 'MeshLambertMaterial'\\n\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\tfor ( var name in m ) {\\n\\n\\t\\t\\t\\t\\tvar value = m[ name ];\\n\\n\\t\\t\\t\\t\\tswitch ( name ) {\\n\\t\\t\\t\\t\\t\\tcase 'DbgColor':\\n\\t\\t\\t\\t\\t\\tcase 'DbgIndex':\\n\\t\\t\\t\\t\\t\\tcase 'opticalDensity':\\n\\t\\t\\t\\t\\t\\tcase 'illumination':\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t\\tcase 'DbgName':\\n\\t\\t\\t\\t\\t\\t\\tjson.name = value;\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t\\tcase 'blending':\\n\\t\\t\\t\\t\\t\\t\\tjson.blending = THREE[ value ];\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t\\tcase 'colorAmbient':\\n\\t\\t\\t\\t\\t\\tcase 'mapAmbient':\\n\\t\\t\\t\\t\\t\\t\\tconsole.warn( 'THREE.Loader.createMaterial:', name, 'is no longer supported.' );\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t\\tcase 'colorDiffuse':\\n\\t\\t\\t\\t\\t\\t\\tjson.color = color.fromArray( value ).getHex();\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t\\tcase 'colorSpecular':\\n\\t\\t\\t\\t\\t\\t\\tjson.specular = color.fromArray( value ).getHex();\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t\\tcase 'colorEmissive':\\n\\t\\t\\t\\t\\t\\t\\tjson.emissive = color.fromArray( value ).getHex();\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t\\tcase 'specularCoef':\\n\\t\\t\\t\\t\\t\\t\\tjson.shininess = value;\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t\\tcase 'shading':\\n\\t\\t\\t\\t\\t\\t\\tif ( value.toLowerCase() === 'basic' ) json.type = 'MeshBasicMaterial';\\n\\t\\t\\t\\t\\t\\t\\tif ( value.toLowerCase() === 'phong' ) json.type = 'MeshPhongMaterial';\\n\\t\\t\\t\\t\\t\\t\\tif ( value.toLowerCase() === 'standard' ) json.type = 'MeshStandardMaterial';\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t\\tcase 'mapDiffuse':\\n\\t\\t\\t\\t\\t\\t\\tjson.map = loadTexture( value, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t\\tcase 'mapDiffuseRepeat':\\n\\t\\t\\t\\t\\t\\tcase 'mapDiffuseOffset':\\n\\t\\t\\t\\t\\t\\tcase 'mapDiffuseWrap':\\n\\t\\t\\t\\t\\t\\tcase 'mapDiffuseAnisotropy':\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t\\tcase 'mapEmissive':\\n\\t\\t\\t\\t\\t\\t\\tjson.emissiveMap = loadTexture( value, m.mapEmissiveRepeat, m.mapEmissiveOffset, m.mapEmissiveWrap, m.mapEmissiveAnisotropy );\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t\\tcase 'mapEmissiveRepeat':\\n\\t\\t\\t\\t\\t\\tcase 'mapEmissiveOffset':\\n\\t\\t\\t\\t\\t\\tcase 'mapEmissiveWrap':\\n\\t\\t\\t\\t\\t\\tcase 'mapEmissiveAnisotropy':\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t\\tcase 'mapLight':\\n\\t\\t\\t\\t\\t\\t\\tjson.lightMap = loadTexture( value, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t\\tcase 'mapLightRepeat':\\n\\t\\t\\t\\t\\t\\tcase 'mapLightOffset':\\n\\t\\t\\t\\t\\t\\tcase 'mapLightWrap':\\n\\t\\t\\t\\t\\t\\tcase 'mapLightAnisotropy':\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t\\tcase 'mapAO':\\n\\t\\t\\t\\t\\t\\t\\tjson.aoMap = loadTexture( value, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy );\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t\\tcase 'mapAORepeat':\\n\\t\\t\\t\\t\\t\\tcase 'mapAOOffset':\\n\\t\\t\\t\\t\\t\\tcase 'mapAOWrap':\\n\\t\\t\\t\\t\\t\\tcase 'mapAOAnisotropy':\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t\\tcase 'mapBump':\\n\\t\\t\\t\\t\\t\\t\\tjson.bumpMap = loadTexture( value, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t\\tcase 'mapBumpScale':\\n\\t\\t\\t\\t\\t\\t\\tjson.bumpScale = value;\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t\\tcase 'mapBumpRepeat':\\n\\t\\t\\t\\t\\t\\tcase 'mapBumpOffset':\\n\\t\\t\\t\\t\\t\\tcase 'mapBumpWrap':\\n\\t\\t\\t\\t\\t\\tcase 'mapBumpAnisotropy':\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t\\tcase 'mapNormal':\\n\\t\\t\\t\\t\\t\\t\\tjson.normalMap = loadTexture( value, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t\\tcase 'mapNormalFactor':\\n\\t\\t\\t\\t\\t\\t\\tjson.normalScale = [ value, value ];\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t\\tcase 'mapNormalRepeat':\\n\\t\\t\\t\\t\\t\\tcase 'mapNormalOffset':\\n\\t\\t\\t\\t\\t\\tcase 'mapNormalWrap':\\n\\t\\t\\t\\t\\t\\tcase 'mapNormalAnisotropy':\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t\\tcase 'mapSpecular':\\n\\t\\t\\t\\t\\t\\t\\tjson.specularMap = loadTexture( value, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t\\tcase 'mapSpecularRepeat':\\n\\t\\t\\t\\t\\t\\tcase 'mapSpecularOffset':\\n\\t\\t\\t\\t\\t\\tcase 'mapSpecularWrap':\\n\\t\\t\\t\\t\\t\\tcase 'mapSpecularAnisotropy':\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t\\tcase 'mapMetalness':\\n\\t\\t\\t\\t\\t\\t\\tjson.metalnessMap = loadTexture( value, m.mapMetalnessRepeat, m.mapMetalnessOffset, m.mapMetalnessWrap, m.mapMetalnessAnisotropy );\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t\\tcase 'mapMetalnessRepeat':\\n\\t\\t\\t\\t\\t\\tcase 'mapMetalnessOffset':\\n\\t\\t\\t\\t\\t\\tcase 'mapMetalnessWrap':\\n\\t\\t\\t\\t\\t\\tcase 'mapMetalnessAnisotropy':\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t\\tcase 'mapRoughness':\\n\\t\\t\\t\\t\\t\\t\\tjson.roughnessMap = loadTexture( value, m.mapRoughnessRepeat, m.mapRoughnessOffset, m.mapRoughnessWrap, m.mapRoughnessAnisotropy );\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t\\tcase 'mapRoughnessRepeat':\\n\\t\\t\\t\\t\\t\\tcase 'mapRoughnessOffset':\\n\\t\\t\\t\\t\\t\\tcase 'mapRoughnessWrap':\\n\\t\\t\\t\\t\\t\\tcase 'mapRoughnessAnisotropy':\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t\\tcase 'mapAlpha':\\n\\t\\t\\t\\t\\t\\t\\tjson.alphaMap = loadTexture( value, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy );\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t\\tcase 'mapAlphaRepeat':\\n\\t\\t\\t\\t\\t\\tcase 'mapAlphaOffset':\\n\\t\\t\\t\\t\\t\\tcase 'mapAlphaWrap':\\n\\t\\t\\t\\t\\t\\tcase 'mapAlphaAnisotropy':\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t\\tcase 'flipSided':\\n\\t\\t\\t\\t\\t\\t\\tjson.side = THREE.BackSide;\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t\\tcase 'doubleSided':\\n\\t\\t\\t\\t\\t\\t\\tjson.side = THREE.DoubleSide;\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t\\tcase 'transparency':\\n\\t\\t\\t\\t\\t\\t\\tconsole.warn( 'THREE.Loader.createMaterial: transparency has been renamed to opacity' );\\n\\t\\t\\t\\t\\t\\t\\tjson.opacity = value;\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t\\tcase 'depthTest':\\n\\t\\t\\t\\t\\t\\tcase 'depthWrite':\\n\\t\\t\\t\\t\\t\\tcase 'colorWrite':\\n\\t\\t\\t\\t\\t\\tcase 'opacity':\\n\\t\\t\\t\\t\\t\\tcase 'reflectivity':\\n\\t\\t\\t\\t\\t\\tcase 'transparent':\\n\\t\\t\\t\\t\\t\\tcase 'visible':\\n\\t\\t\\t\\t\\t\\tcase 'wireframe':\\n\\t\\t\\t\\t\\t\\t\\tjson[ name ] = value;\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t\\tcase 'vertexColors':\\n\\t\\t\\t\\t\\t\\t\\tif ( value === true ) json.vertexColors = THREE.VertexColors;\\n\\t\\t\\t\\t\\t\\t\\tif ( value === 'face' ) json.vertexColors = THREE.FaceColors;\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t\\tdefault:\\n\\t\\t\\t\\t\\t\\t\\tconsole.error( 'THREE.Loader.createMaterial: Unsupported', name, value );\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( json.type === 'MeshBasicMaterial' ) delete json.emissive;\\n\\t\\t\\t\\tif ( json.type !== 'MeshPhongMaterial' ) delete json.specular;\\n\\n\\t\\t\\t\\tif ( json.opacity < 1 ) json.transparent = true;\\n\\n\\t\\t\\t\\tmaterialLoader.setTextures( textures );\\n\\n\\t\\t\\t\\treturn materialLoader.parse( json );\\n\\n\\t\\t\\t};\\n\\n\\t\\t} )()\\n\\n\\t};\\n\\n\\tTHREE.Loader.Handlers = {\\n\\n\\t\\thandlers: [],\\n\\n\\t\\tadd: function ( regex, loader ) {\\n\\n\\t\\t\\tthis.handlers.push( regex, loader );\\n\\n\\t\\t},\\n\\n\\t\\tget: function ( file ) {\\n\\n\\t\\t\\tvar handlers = this.handlers;\\n\\n\\t\\t\\tfor ( var i = 0, l = handlers.length; i < l; i += 2 ) {\\n\\n\\t\\t\\t\\tvar regex = handlers[ i ];\\n\\t\\t\\t\\tvar loader  = handlers[ i + 1 ];\\n\\n\\t\\t\\t\\tif ( regex.test( file ) ) {\\n\\n\\t\\t\\t\\t\\treturn loader;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn null;\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\t// File:src/loaders/XHRLoader.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t */\\n\\n\\tTHREE.XHRLoader = function ( manager ) {\\n\\n\\t\\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\\n\\n\\t};\\n\\n\\tObject.assign( THREE.XHRLoader.prototype, {\\n\\n\\t\\tload: function ( url, onLoad, onProgress, onError ) {\\n\\n\\t\\t\\tif ( this.path !== undefined ) url = this.path + url;\\n\\n\\t\\t\\tvar scope = this;\\n\\n\\t\\t\\tvar cached = THREE.Cache.get( url );\\n\\n\\t\\t\\tif ( cached !== undefined ) {\\n\\n\\t\\t\\t\\tscope.manager.itemStart( url );\\n\\n\\t\\t\\t\\tsetTimeout( function () {\\n\\n\\t\\t\\t\\t\\tif ( onLoad ) onLoad( cached );\\n\\n\\t\\t\\t\\t\\tscope.manager.itemEnd( url );\\n\\n\\t\\t\\t\\t}, 0 );\\n\\n\\t\\t\\t\\treturn cached;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar request = new XMLHttpRequest();\\n\\t\\t\\trequest.overrideMimeType( 'text/plain' );\\n\\t\\t\\trequest.open( 'GET', url, true );\\n\\n\\t\\t\\trequest.addEventListener( 'load', function ( event ) {\\n\\n\\t\\t\\t\\tvar response = event.target.response;\\n\\n\\t\\t\\t\\tTHREE.Cache.add( url, response );\\n\\n\\t\\t\\t\\tif ( this.status === 200 ) {\\n\\n\\t\\t\\t\\t\\tif ( onLoad ) onLoad( response );\\n\\n\\t\\t\\t\\t\\tscope.manager.itemEnd( url );\\n\\n\\t\\t\\t\\t} else if ( this.status === 0 ) {\\n\\n\\t\\t\\t\\t\\t// Some browsers return HTTP Status 0 when using non-http protocol\\n\\t\\t\\t\\t\\t// e.g. 'file://' or 'data://'. Handle as success.\\n\\n\\t\\t\\t\\t\\tconsole.warn( 'THREE.XHRLoader: HTTP Status 0 received.' );\\n\\n\\t\\t\\t\\t\\tif ( onLoad ) onLoad( response );\\n\\n\\t\\t\\t\\t\\tscope.manager.itemEnd( url );\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\tif ( onError ) onError( event );\\n\\n\\t\\t\\t\\t\\tscope.manager.itemError( url );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}, false );\\n\\n\\t\\t\\tif ( onProgress !== undefined ) {\\n\\n\\t\\t\\t\\trequest.addEventListener( 'progress', function ( event ) {\\n\\n\\t\\t\\t\\t\\tonProgress( event );\\n\\n\\t\\t\\t\\t}, false );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\trequest.addEventListener( 'error', function ( event ) {\\n\\n\\t\\t\\t\\tif ( onError ) onError( event );\\n\\n\\t\\t\\t\\tscope.manager.itemError( url );\\n\\n\\t\\t\\t}, false );\\n\\n\\t\\t\\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\\n\\t\\t\\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\\n\\n\\t\\t\\trequest.send( null );\\n\\n\\t\\t\\tscope.manager.itemStart( url );\\n\\n\\t\\t\\treturn request;\\n\\n\\t\\t},\\n\\n\\t\\tsetPath: function ( value ) {\\n\\n\\t\\t\\tthis.path = value;\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tsetResponseType: function ( value ) {\\n\\n\\t\\t\\tthis.responseType = value;\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tsetWithCredentials: function ( value ) {\\n\\n\\t\\t\\tthis.withCredentials = value;\\n\\t\\t\\treturn this;\\n\\n\\t\\t}\\n\\n\\t} );\\n\\n\\t// File:src/loaders/FontLoader.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t */\\n\\n\\tTHREE.FontLoader = function ( manager ) {\\n\\n\\t\\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\\n\\n\\t};\\n\\n\\tObject.assign( THREE.FontLoader.prototype, {\\n\\n\\t\\tload: function ( url, onLoad, onProgress, onError ) {\\n\\n\\t\\t\\tvar scope = this;\\n\\n\\t\\t\\tvar loader = new THREE.XHRLoader( this.manager );\\n\\t\\t\\tloader.load( url, function ( text ) {\\n\\n\\t\\t\\t\\tvar json;\\n\\n\\t\\t\\t\\ttry {\\n\\n\\t\\t\\t\\t\\tjson = JSON.parse( text );\\n\\n\\t\\t\\t\\t} catch ( e ) {\\n\\n\\t\\t\\t\\t\\tconsole.warn( 'THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.' );\\n\\t\\t\\t\\t\\tjson = JSON.parse( text.substring( 65, text.length - 2 ) );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tvar font = scope.parse( json );\\n\\n\\t\\t\\t\\tif ( onLoad ) onLoad( font );\\n\\n\\t\\t\\t}, onProgress, onError );\\n\\n\\t\\t},\\n\\n\\t\\tparse: function ( json ) {\\n\\n\\t\\t\\treturn new THREE.Font( json );\\n\\n\\t\\t}\\n\\n\\t} );\\n\\n\\t// File:src/loaders/ImageLoader.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t */\\n\\n\\tTHREE.ImageLoader = function ( manager ) {\\n\\n\\t\\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\\n\\n\\t};\\n\\n\\tObject.assign( THREE.ImageLoader.prototype, {\\n\\n\\t\\tload: function ( url, onLoad, onProgress, onError ) {\\n\\n\\t\\t\\tvar scope = this;\\n\\n\\t\\t\\tvar image = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'img' );\\n\\t\\t\\timage.onload = function () {\\n\\n\\t\\t\\t\\tURL.revokeObjectURL( image.src );\\n\\n\\t\\t\\t\\tif ( onLoad ) onLoad( image );\\n\\n\\t\\t\\t\\tscope.manager.itemEnd( url );\\n\\n\\t\\t\\t};\\n\\n\\t\\t\\tif ( url.indexOf( 'data:' ) === 0 ) {\\n\\n\\t\\t\\t\\timage.src = url;\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\tvar loader = new THREE.XHRLoader();\\n\\t\\t\\t\\tloader.setPath( this.path );\\n\\t\\t\\t\\tloader.setResponseType( 'blob' );\\n\\t\\t\\t\\tloader.load( url, function ( blob ) {\\n\\n\\t\\t\\t\\t\\timage.src = URL.createObjectURL( blob );\\n\\n\\t\\t\\t\\t}, onProgress, onError );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tscope.manager.itemStart( url );\\n\\n\\t\\t\\treturn image;\\n\\n\\t\\t},\\n\\n\\t\\tsetCrossOrigin: function ( value ) {\\n\\n\\t\\t\\tthis.crossOrigin = value;\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tsetPath: function ( value ) {\\n\\n\\t\\t\\tthis.path = value;\\n\\t\\t\\treturn this;\\n\\n\\t\\t}\\n\\n\\t} );\\n\\n\\t// File:src/loaders/JSONLoader.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t */\\n\\n\\tTHREE.JSONLoader = function ( manager ) {\\n\\n\\t\\tif ( typeof manager === 'boolean' ) {\\n\\n\\t\\t\\tconsole.warn( 'THREE.JSONLoader: showStatus parameter has been removed from constructor.' );\\n\\t\\t\\tmanager = undefined;\\n\\n\\t\\t}\\n\\n\\t\\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\\n\\n\\t\\tthis.withCredentials = false;\\n\\n\\t};\\n\\n\\tObject.assign( THREE.JSONLoader.prototype, {\\n\\n\\t\\tload: function( url, onLoad, onProgress, onError ) {\\n\\n\\t\\t\\tvar scope = this;\\n\\n\\t\\t\\tvar texturePath = this.texturePath && ( typeof this.texturePath === \\\"string\\\" ) ? this.texturePath : THREE.Loader.prototype.extractUrlBase( url );\\n\\n\\t\\t\\tvar loader = new THREE.XHRLoader( this.manager );\\n\\t\\t\\tloader.setWithCredentials( this.withCredentials );\\n\\t\\t\\tloader.load( url, function ( text ) {\\n\\n\\t\\t\\t\\tvar json = JSON.parse( text );\\n\\t\\t\\t\\tvar metadata = json.metadata;\\n\\n\\t\\t\\t\\tif ( metadata !== undefined ) {\\n\\n\\t\\t\\t\\t\\tvar type = metadata.type;\\n\\n\\t\\t\\t\\t\\tif ( type !== undefined ) {\\n\\n\\t\\t\\t\\t\\t\\tif ( type.toLowerCase() === 'object' ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.' );\\n\\t\\t\\t\\t\\t\\t\\treturn;\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\tif ( type.toLowerCase() === 'scene' ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.SceneLoader instead.' );\\n\\t\\t\\t\\t\\t\\t\\treturn;\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tvar object = scope.parse( json, texturePath );\\n\\t\\t\\t\\tonLoad( object.geometry, object.materials );\\n\\n\\t\\t\\t}, onProgress, onError );\\n\\n\\t\\t},\\n\\n\\t\\tsetTexturePath: function ( value ) {\\n\\n\\t\\t\\tthis.texturePath = value;\\n\\n\\t\\t},\\n\\n\\t\\tparse: function ( json, texturePath ) {\\n\\n\\t\\t\\tvar geometry = new THREE.Geometry(),\\n\\t\\t\\tscale = ( json.scale !== undefined ) ? 1.0 / json.scale : 1.0;\\n\\n\\t\\t\\tparseModel( scale );\\n\\n\\t\\t\\tparseSkin();\\n\\t\\t\\tparseMorphing( scale );\\n\\t\\t\\tparseAnimations();\\n\\n\\t\\t\\tgeometry.computeFaceNormals();\\n\\t\\t\\tgeometry.computeBoundingSphere();\\n\\n\\t\\t\\tfunction parseModel( scale ) {\\n\\n\\t\\t\\t\\tfunction isBitSet( value, position ) {\\n\\n\\t\\t\\t\\t\\treturn value & ( 1 << position );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tvar i, j, fi,\\n\\n\\t\\t\\t\\toffset, zLength,\\n\\n\\t\\t\\tcolorIndex, normalIndex, uvIndex, materialIndex,\\n\\n\\t\\t\\t\\ttype,\\n\\t\\t\\t\\tisQuad,\\n\\t\\t\\t\\thasMaterial,\\n\\t\\t\\t\\thasFaceVertexUv,\\n\\t\\t\\t\\thasFaceNormal, hasFaceVertexNormal,\\n\\t\\t\\t\\thasFaceColor, hasFaceVertexColor,\\n\\n\\t\\t\\tvertex, face, faceA, faceB, hex, normal,\\n\\n\\t\\t\\t\\tuvLayer, uv, u, v,\\n\\n\\t\\t\\t\\tfaces = json.faces,\\n\\t\\t\\t\\tvertices = json.vertices,\\n\\t\\t\\t\\tnormals = json.normals,\\n\\t\\t\\t\\tcolors = json.colors,\\n\\n\\t\\t\\t\\tnUvLayers = 0;\\n\\n\\t\\t\\t\\tif ( json.uvs !== undefined ) {\\n\\n\\t\\t\\t\\t\\t// disregard empty arrays\\n\\n\\t\\t\\t\\t\\tfor ( i = 0; i < json.uvs.length; i ++ ) {\\n\\n\\t\\t\\t\\t\\t\\tif ( json.uvs[ i ].length ) nUvLayers ++;\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tfor ( i = 0; i < nUvLayers; i ++ ) {\\n\\n\\t\\t\\t\\t\\t\\tgeometry.faceVertexUvs[ i ] = [];\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\toffset = 0;\\n\\t\\t\\t\\tzLength = vertices.length;\\n\\n\\t\\t\\t\\twhile ( offset < zLength ) {\\n\\n\\t\\t\\t\\t\\tvertex = new THREE.Vector3();\\n\\n\\t\\t\\t\\t\\tvertex.x = vertices[ offset ++ ] * scale;\\n\\t\\t\\t\\t\\tvertex.y = vertices[ offset ++ ] * scale;\\n\\t\\t\\t\\t\\tvertex.z = vertices[ offset ++ ] * scale;\\n\\n\\t\\t\\t\\t\\tgeometry.vertices.push( vertex );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\toffset = 0;\\n\\t\\t\\t\\tzLength = faces.length;\\n\\n\\t\\t\\t\\twhile ( offset < zLength ) {\\n\\n\\t\\t\\t\\t\\ttype = faces[ offset ++ ];\\n\\n\\n\\t\\t\\t\\t\\tisQuad              = isBitSet( type, 0 );\\n\\t\\t\\t\\t\\thasMaterial         = isBitSet( type, 1 );\\n\\t\\t\\t\\t\\thasFaceVertexUv     = isBitSet( type, 3 );\\n\\t\\t\\t\\t\\thasFaceNormal       = isBitSet( type, 4 );\\n\\t\\t\\t\\t\\thasFaceVertexNormal = isBitSet( type, 5 );\\n\\t\\t\\t\\t\\thasFaceColor\\t     = isBitSet( type, 6 );\\n\\t\\t\\t\\t\\thasFaceVertexColor  = isBitSet( type, 7 );\\n\\n\\t\\t\\t\\t\\t// console.log(\\\"type\\\", type, \\\"bits\\\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\\n\\n\\t\\t\\t\\t\\tif ( isQuad ) {\\n\\n\\t\\t\\t\\t\\t\\tfaceA = new THREE.Face3();\\n\\t\\t\\t\\t\\t\\tfaceA.a = faces[ offset ];\\n\\t\\t\\t\\t\\t\\tfaceA.b = faces[ offset + 1 ];\\n\\t\\t\\t\\t\\t\\tfaceA.c = faces[ offset + 3 ];\\n\\n\\t\\t\\t\\t\\t\\tfaceB = new THREE.Face3();\\n\\t\\t\\t\\t\\t\\tfaceB.a = faces[ offset + 1 ];\\n\\t\\t\\t\\t\\t\\tfaceB.b = faces[ offset + 2 ];\\n\\t\\t\\t\\t\\t\\tfaceB.c = faces[ offset + 3 ];\\n\\n\\t\\t\\t\\t\\t\\toffset += 4;\\n\\n\\t\\t\\t\\t\\t\\tif ( hasMaterial ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tmaterialIndex = faces[ offset ++ ];\\n\\t\\t\\t\\t\\t\\t\\tfaceA.materialIndex = materialIndex;\\n\\t\\t\\t\\t\\t\\t\\tfaceB.materialIndex = materialIndex;\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t// to get face <=> uv index correspondence\\n\\n\\t\\t\\t\\t\\t\\tfi = geometry.faces.length;\\n\\n\\t\\t\\t\\t\\t\\tif ( hasFaceVertexUv ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tfor ( i = 0; i < nUvLayers; i ++ ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tuvLayer = json.uvs[ i ];\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tgeometry.faceVertexUvs[ i ][ fi ] = [];\\n\\t\\t\\t\\t\\t\\t\\t\\tgeometry.faceVertexUvs[ i ][ fi + 1 ] = [];\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tfor ( j = 0; j < 4; j ++ ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tuvIndex = faces[ offset ++ ];\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tu = uvLayer[ uvIndex * 2 ];\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tv = uvLayer[ uvIndex * 2 + 1 ];\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tuv = new THREE.Vector2( u, v );\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif ( j !== 2 ) geometry.faceVertexUvs[ i ][ fi ].push( uv );\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif ( j !== 0 ) geometry.faceVertexUvs[ i ][ fi + 1 ].push( uv );\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\tif ( hasFaceNormal ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tnormalIndex = faces[ offset ++ ] * 3;\\n\\n\\t\\t\\t\\t\\t\\t\\tfaceA.normal.set(\\n\\t\\t\\t\\t\\t\\t\\t\\tnormals[ normalIndex ++ ],\\n\\t\\t\\t\\t\\t\\t\\t\\tnormals[ normalIndex ++ ],\\n\\t\\t\\t\\t\\t\\t\\t\\tnormals[ normalIndex ]\\n\\t\\t\\t\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\t\\t\\t\\tfaceB.normal.copy( faceA.normal );\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\tif ( hasFaceVertexNormal ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tfor ( i = 0; i < 4; i ++ ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tnormalIndex = faces[ offset ++ ] * 3;\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tnormal = new THREE.Vector3(\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tnormals[ normalIndex ++ ],\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tnormals[ normalIndex ++ ],\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tnormals[ normalIndex ]\\n\\t\\t\\t\\t\\t\\t\\t\\t);\\n\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tif ( i !== 2 ) faceA.vertexNormals.push( normal );\\n\\t\\t\\t\\t\\t\\t\\t\\tif ( i !== 0 ) faceB.vertexNormals.push( normal );\\n\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\n\\t\\t\\t\\t\\t\\tif ( hasFaceColor ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tcolorIndex = faces[ offset ++ ];\\n\\t\\t\\t\\t\\t\\t\\thex = colors[ colorIndex ];\\n\\n\\t\\t\\t\\t\\t\\t\\tfaceA.color.setHex( hex );\\n\\t\\t\\t\\t\\t\\t\\tfaceB.color.setHex( hex );\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\n\\t\\t\\t\\t\\t\\tif ( hasFaceVertexColor ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tfor ( i = 0; i < 4; i ++ ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tcolorIndex = faces[ offset ++ ];\\n\\t\\t\\t\\t\\t\\t\\t\\thex = colors[ colorIndex ];\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tif ( i !== 2 ) faceA.vertexColors.push( new THREE.Color( hex ) );\\n\\t\\t\\t\\t\\t\\t\\t\\tif ( i !== 0 ) faceB.vertexColors.push( new THREE.Color( hex ) );\\n\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\tgeometry.faces.push( faceA );\\n\\t\\t\\t\\t\\t\\tgeometry.faces.push( faceB );\\n\\n\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\tface = new THREE.Face3();\\n\\t\\t\\t\\t\\t\\tface.a = faces[ offset ++ ];\\n\\t\\t\\t\\t\\t\\tface.b = faces[ offset ++ ];\\n\\t\\t\\t\\t\\t\\tface.c = faces[ offset ++ ];\\n\\n\\t\\t\\t\\t\\t\\tif ( hasMaterial ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tmaterialIndex = faces[ offset ++ ];\\n\\t\\t\\t\\t\\t\\t\\tface.materialIndex = materialIndex;\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t// to get face <=> uv index correspondence\\n\\n\\t\\t\\t\\t\\t\\tfi = geometry.faces.length;\\n\\n\\t\\t\\t\\t\\t\\tif ( hasFaceVertexUv ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tfor ( i = 0; i < nUvLayers; i ++ ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tuvLayer = json.uvs[ i ];\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tgeometry.faceVertexUvs[ i ][ fi ] = [];\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tfor ( j = 0; j < 3; j ++ ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tuvIndex = faces[ offset ++ ];\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tu = uvLayer[ uvIndex * 2 ];\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tv = uvLayer[ uvIndex * 2 + 1 ];\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tuv = new THREE.Vector2( u, v );\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tgeometry.faceVertexUvs[ i ][ fi ].push( uv );\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\tif ( hasFaceNormal ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tnormalIndex = faces[ offset ++ ] * 3;\\n\\n\\t\\t\\t\\t\\t\\t\\tface.normal.set(\\n\\t\\t\\t\\t\\t\\t\\t\\tnormals[ normalIndex ++ ],\\n\\t\\t\\t\\t\\t\\t\\t\\tnormals[ normalIndex ++ ],\\n\\t\\t\\t\\t\\t\\t\\t\\tnormals[ normalIndex ]\\n\\t\\t\\t\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\tif ( hasFaceVertexNormal ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tfor ( i = 0; i < 3; i ++ ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tnormalIndex = faces[ offset ++ ] * 3;\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tnormal = new THREE.Vector3(\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tnormals[ normalIndex ++ ],\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tnormals[ normalIndex ++ ],\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tnormals[ normalIndex ]\\n\\t\\t\\t\\t\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tface.vertexNormals.push( normal );\\n\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\n\\t\\t\\t\\t\\t\\tif ( hasFaceColor ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tcolorIndex = faces[ offset ++ ];\\n\\t\\t\\t\\t\\t\\t\\tface.color.setHex( colors[ colorIndex ] );\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\n\\t\\t\\t\\t\\t\\tif ( hasFaceVertexColor ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tfor ( i = 0; i < 3; i ++ ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tcolorIndex = faces[ offset ++ ];\\n\\t\\t\\t\\t\\t\\t\\t\\tface.vertexColors.push( new THREE.Color( colors[ colorIndex ] ) );\\n\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\tgeometry.faces.push( face );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tfunction parseSkin() {\\n\\n\\t\\t\\t\\tvar influencesPerVertex = ( json.influencesPerVertex !== undefined ) ? json.influencesPerVertex : 2;\\n\\n\\t\\t\\t\\tif ( json.skinWeights ) {\\n\\n\\t\\t\\t\\t\\tfor ( var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex ) {\\n\\n\\t\\t\\t\\t\\t\\tvar x =                               json.skinWeights[ i ];\\n\\t\\t\\t\\t\\t\\tvar y = ( influencesPerVertex > 1 ) ? json.skinWeights[ i + 1 ] : 0;\\n\\t\\t\\t\\t\\t\\tvar z = ( influencesPerVertex > 2 ) ? json.skinWeights[ i + 2 ] : 0;\\n\\t\\t\\t\\t\\t\\tvar w = ( influencesPerVertex > 3 ) ? json.skinWeights[ i + 3 ] : 0;\\n\\n\\t\\t\\t\\t\\t\\tgeometry.skinWeights.push( new THREE.Vector4( x, y, z, w ) );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( json.skinIndices ) {\\n\\n\\t\\t\\t\\t\\tfor ( var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex ) {\\n\\n\\t\\t\\t\\t\\t\\tvar a =                               json.skinIndices[ i ];\\n\\t\\t\\t\\t\\t\\tvar b = ( influencesPerVertex > 1 ) ? json.skinIndices[ i + 1 ] : 0;\\n\\t\\t\\t\\t\\t\\tvar c = ( influencesPerVertex > 2 ) ? json.skinIndices[ i + 2 ] : 0;\\n\\t\\t\\t\\t\\t\\tvar d = ( influencesPerVertex > 3 ) ? json.skinIndices[ i + 3 ] : 0;\\n\\n\\t\\t\\t\\t\\t\\tgeometry.skinIndices.push( new THREE.Vector4( a, b, c, d ) );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tgeometry.bones = json.bones;\\n\\n\\t\\t\\t\\tif ( geometry.bones && geometry.bones.length > 0 && ( geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length ) ) {\\n\\n\\t\\t\\t\\t\\tconsole.warn( 'When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' +\\n\\t\\t\\t\\t\\t\\tgeometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.' );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tfunction parseMorphing( scale ) {\\n\\n\\t\\t\\t\\tif ( json.morphTargets !== undefined ) {\\n\\n\\t\\t\\t\\t\\tfor ( var i = 0, l = json.morphTargets.length; i < l; i ++ ) {\\n\\n\\t\\t\\t\\t\\t\\tgeometry.morphTargets[ i ] = {};\\n\\t\\t\\t\\t\\t\\tgeometry.morphTargets[ i ].name = json.morphTargets[ i ].name;\\n\\t\\t\\t\\t\\t\\tgeometry.morphTargets[ i ].vertices = [];\\n\\n\\t\\t\\t\\t\\t\\tvar dstVertices = geometry.morphTargets[ i ].vertices;\\n\\t\\t\\t\\t\\t\\tvar srcVertices = json.morphTargets[ i ].vertices;\\n\\n\\t\\t\\t\\t\\t\\tfor ( var v = 0, vl = srcVertices.length; v < vl; v += 3 ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tvar vertex = new THREE.Vector3();\\n\\t\\t\\t\\t\\t\\t\\tvertex.x = srcVertices[ v ] * scale;\\n\\t\\t\\t\\t\\t\\t\\tvertex.y = srcVertices[ v + 1 ] * scale;\\n\\t\\t\\t\\t\\t\\t\\tvertex.z = srcVertices[ v + 2 ] * scale;\\n\\n\\t\\t\\t\\t\\t\\t\\tdstVertices.push( vertex );\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( json.morphColors !== undefined && json.morphColors.length > 0 ) {\\n\\n\\t\\t\\t\\t\\tconsole.warn( 'THREE.JSONLoader: \\\"morphColors\\\" no longer supported. Using them as face colors.' );\\n\\n\\t\\t\\t\\t\\tvar faces = geometry.faces;\\n\\t\\t\\t\\t\\tvar morphColors = json.morphColors[ 0 ].colors;\\n\\n\\t\\t\\t\\t\\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\\n\\n\\t\\t\\t\\t\\t\\tfaces[ i ].color.fromArray( morphColors, i * 3 );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tfunction parseAnimations() {\\n\\n\\t\\t\\t\\tvar outputAnimations = [];\\n\\n\\t\\t\\t\\t// parse old style Bone/Hierarchy animations\\n\\t\\t\\t\\tvar animations = [];\\n\\n\\t\\t\\t\\tif ( json.animation !== undefined ) {\\n\\n\\t\\t\\t\\t\\tanimations.push( json.animation );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( json.animations !== undefined ) {\\n\\n\\t\\t\\t\\t\\tif ( json.animations.length ) {\\n\\n\\t\\t\\t\\t\\t\\tanimations = animations.concat( json.animations );\\n\\n\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\tanimations.push( json.animations );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tfor ( var i = 0; i < animations.length; i ++ ) {\\n\\n\\t\\t\\t\\t\\tvar clip = THREE.AnimationClip.parseAnimation( animations[ i ], geometry.bones );\\n\\t\\t\\t\\t\\tif ( clip ) outputAnimations.push( clip );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// parse implicit morph animations\\n\\t\\t\\t\\tif ( geometry.morphTargets ) {\\n\\n\\t\\t\\t\\t\\t// TODO: Figure out what an appropraite FPS is for morph target animations -- defaulting to 10, but really it is completely arbitrary.\\n\\t\\t\\t\\t\\tvar morphAnimationClips = THREE.AnimationClip.CreateClipsFromMorphTargetSequences( geometry.morphTargets, 10 );\\n\\t\\t\\t\\t\\toutputAnimations = outputAnimations.concat( morphAnimationClips );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( outputAnimations.length > 0 ) geometry.animations = outputAnimations;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( json.materials === undefined || json.materials.length === 0 ) {\\n\\n\\t\\t\\t\\treturn { geometry: geometry };\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\tvar materials = THREE.Loader.prototype.initMaterials( json.materials, texturePath, this.crossOrigin );\\n\\n\\t\\t\\t\\treturn { geometry: geometry, materials: materials };\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t} );\\n\\n\\t// File:src/loaders/LoadingManager.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t */\\n\\n\\tTHREE.LoadingManager = function ( onLoad, onProgress, onError ) {\\n\\n\\t\\tvar scope = this;\\n\\n\\t\\tvar isLoading = false, itemsLoaded = 0, itemsTotal = 0;\\n\\n\\t\\tthis.onStart = undefined;\\n\\t\\tthis.onLoad = onLoad;\\n\\t\\tthis.onProgress = onProgress;\\n\\t\\tthis.onError = onError;\\n\\n\\t\\tthis.itemStart = function ( url ) {\\n\\n\\t\\t\\titemsTotal ++;\\n\\n\\t\\t\\tif ( isLoading === false ) {\\n\\n\\t\\t\\t\\tif ( scope.onStart !== undefined ) {\\n\\n\\t\\t\\t\\t\\tscope.onStart( url, itemsLoaded, itemsTotal );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tisLoading = true;\\n\\n\\t\\t};\\n\\n\\t\\tthis.itemEnd = function ( url ) {\\n\\n\\t\\t\\titemsLoaded ++;\\n\\n\\t\\t\\tif ( scope.onProgress !== undefined ) {\\n\\n\\t\\t\\t\\tscope.onProgress( url, itemsLoaded, itemsTotal );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( itemsLoaded === itemsTotal ) {\\n\\n\\t\\t\\t\\tisLoading = false;\\n\\n\\t\\t\\t\\tif ( scope.onLoad !== undefined ) {\\n\\n\\t\\t\\t\\t\\tscope.onLoad();\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t};\\n\\n\\t\\tthis.itemError = function ( url ) {\\n\\n\\t\\t\\tif ( scope.onError !== undefined ) {\\n\\n\\t\\t\\t\\tscope.onError( url );\\n\\n\\t\\t\\t}\\n\\n\\t\\t};\\n\\n\\t};\\n\\n\\tTHREE.DefaultLoadingManager = new THREE.LoadingManager();\\n\\n\\t// File:src/loaders/BufferGeometryLoader.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t */\\n\\n\\tTHREE.BufferGeometryLoader = function ( manager ) {\\n\\n\\t\\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\\n\\n\\t};\\n\\n\\tObject.assign( THREE.BufferGeometryLoader.prototype, {\\n\\n\\t\\tload: function ( url, onLoad, onProgress, onError ) {\\n\\n\\t\\t\\tvar scope = this;\\n\\n\\t\\t\\tvar loader = new THREE.XHRLoader( scope.manager );\\n\\t\\t\\tloader.load( url, function ( text ) {\\n\\n\\t\\t\\t\\tonLoad( scope.parse( JSON.parse( text ) ) );\\n\\n\\t\\t\\t}, onProgress, onError );\\n\\n\\t\\t},\\n\\n\\t\\tparse: function ( json ) {\\n\\n\\t\\t\\tvar geometry = new THREE.BufferGeometry();\\n\\n\\t\\t\\tvar index = json.data.index;\\n\\n\\t\\t\\tvar TYPED_ARRAYS = {\\n\\t\\t\\t\\t'Int8Array': Int8Array,\\n\\t\\t\\t\\t'Uint8Array': Uint8Array,\\n\\t\\t\\t\\t'Uint8ClampedArray': Uint8ClampedArray,\\n\\t\\t\\t\\t'Int16Array': Int16Array,\\n\\t\\t\\t\\t'Uint16Array': Uint16Array,\\n\\t\\t\\t\\t'Int32Array': Int32Array,\\n\\t\\t\\t\\t'Uint32Array': Uint32Array,\\n\\t\\t\\t\\t'Float32Array': Float32Array,\\n\\t\\t\\t\\t'Float64Array': Float64Array\\n\\t\\t\\t};\\n\\n\\t\\t\\tif ( index !== undefined ) {\\n\\n\\t\\t\\t\\tvar typedArray = new TYPED_ARRAYS[ index.type ]( index.array );\\n\\t\\t\\t\\tgeometry.setIndex( new THREE.BufferAttribute( typedArray, 1 ) );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar attributes = json.data.attributes;\\n\\n\\t\\t\\tfor ( var key in attributes ) {\\n\\n\\t\\t\\t\\tvar attribute = attributes[ key ];\\n\\t\\t\\t\\tvar typedArray = new TYPED_ARRAYS[ attribute.type ]( attribute.array );\\n\\n\\t\\t\\t\\tgeometry.addAttribute( key, new THREE.BufferAttribute( typedArray, attribute.itemSize, attribute.normalized ) );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar groups = json.data.groups || json.data.drawcalls || json.data.offsets;\\n\\n\\t\\t\\tif ( groups !== undefined ) {\\n\\n\\t\\t\\t\\tfor ( var i = 0, n = groups.length; i !== n; ++ i ) {\\n\\n\\t\\t\\t\\t\\tvar group = groups[ i ];\\n\\n\\t\\t\\t\\t\\tgeometry.addGroup( group.start, group.count, group.materialIndex );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar boundingSphere = json.data.boundingSphere;\\n\\n\\t\\t\\tif ( boundingSphere !== undefined ) {\\n\\n\\t\\t\\t\\tvar center = new THREE.Vector3();\\n\\n\\t\\t\\t\\tif ( boundingSphere.center !== undefined ) {\\n\\n\\t\\t\\t\\t\\tcenter.fromArray( boundingSphere.center );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tgeometry.boundingSphere = new THREE.Sphere( center, boundingSphere.radius );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn geometry;\\n\\n\\t\\t}\\n\\n\\t} );\\n\\n\\t// File:src/loaders/MaterialLoader.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t */\\n\\n\\tTHREE.MaterialLoader = function ( manager ) {\\n\\n\\t\\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\\n\\t\\tthis.textures = {};\\n\\n\\t};\\n\\n\\tObject.assign( THREE.MaterialLoader.prototype, {\\n\\n\\t\\tload: function ( url, onLoad, onProgress, onError ) {\\n\\n\\t\\t\\tvar scope = this;\\n\\n\\t\\t\\tvar loader = new THREE.XHRLoader( scope.manager );\\n\\t\\t\\tloader.load( url, function ( text ) {\\n\\n\\t\\t\\t\\tonLoad( scope.parse( JSON.parse( text ) ) );\\n\\n\\t\\t\\t}, onProgress, onError );\\n\\n\\t\\t},\\n\\n\\t\\tsetTextures: function ( value ) {\\n\\n\\t\\t\\tthis.textures = value;\\n\\n\\t\\t},\\n\\n\\t\\tgetTexture: function ( name ) {\\n\\n\\t\\t\\tvar textures = this.textures;\\n\\n\\t\\t\\tif ( textures[ name ] === undefined ) {\\n\\n\\t\\t\\t\\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn textures[ name ];\\n\\n\\t\\t},\\n\\n\\t\\tparse: function ( json ) {\\n\\n\\t\\t\\tvar material = new THREE[ json.type ];\\n\\n\\t\\t\\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\\n\\t\\t\\tif ( json.name !== undefined ) material.name = json.name;\\n\\t\\t\\tif ( json.color !== undefined ) material.color.setHex( json.color );\\n\\t\\t\\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\\n\\t\\t\\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\\n\\t\\t\\tif ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\\n\\t\\t\\tif ( json.specular !== undefined ) material.specular.setHex( json.specular );\\n\\t\\t\\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\\n\\t\\t\\tif ( json.uniforms !== undefined ) material.uniforms = json.uniforms;\\n\\t\\t\\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\\n\\t\\t\\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\\n\\t\\t\\tif ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\\n\\t\\t\\tif ( json.shading !== undefined ) material.shading = json.shading;\\n\\t\\t\\tif ( json.blending !== undefined ) material.blending = json.blending;\\n\\t\\t\\tif ( json.side !== undefined ) material.side = json.side;\\n\\t\\t\\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\\n\\t\\t\\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\\n\\t\\t\\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\\n\\t\\t\\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\\n\\t\\t\\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\\n\\t\\t\\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\\n\\t\\t\\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\\n\\t\\t\\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\\n\\n\\t\\t\\t// for PointsMaterial\\n\\t\\t\\tif ( json.size !== undefined ) material.size = json.size;\\n\\t\\t\\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\\n\\n\\t\\t\\t// maps\\n\\n\\t\\t\\tif ( json.map !== undefined ) material.map = this.getTexture( json.map );\\n\\n\\t\\t\\tif ( json.alphaMap !== undefined ) {\\n\\n\\t\\t\\t\\tmaterial.alphaMap = this.getTexture( json.alphaMap );\\n\\t\\t\\t\\tmaterial.transparent = true;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( json.bumpMap !== undefined ) material.bumpMap = this.getTexture( json.bumpMap );\\n\\t\\t\\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\\n\\n\\t\\t\\tif ( json.normalMap !== undefined ) material.normalMap = this.getTexture( json.normalMap );\\n\\t\\t\\tif ( json.normalScale !== undefined ) {\\n\\n\\t\\t\\t\\tvar normalScale = json.normalScale;\\n\\n\\t\\t\\t\\tif ( Array.isArray( normalScale ) === false ) {\\n\\n\\t\\t\\t\\t\\t// Blender exporter used to export a scalar. See #7459\\n\\n\\t\\t\\t\\t\\tnormalScale = [ normalScale, normalScale ];\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tmaterial.normalScale = new THREE.Vector2().fromArray( normalScale );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( json.displacementMap !== undefined ) material.displacementMap = this.getTexture( json.displacementMap );\\n\\t\\t\\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\\n\\t\\t\\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\\n\\n\\t\\t\\tif ( json.roughnessMap !== undefined ) material.roughnessMap = this.getTexture( json.roughnessMap );\\n\\t\\t\\tif ( json.metalnessMap !== undefined ) material.metalnessMap = this.getTexture( json.metalnessMap );\\n\\n\\t\\t\\tif ( json.emissiveMap !== undefined ) material.emissiveMap = this.getTexture( json.emissiveMap );\\n\\t\\t\\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\\n\\n\\t\\t\\tif ( json.specularMap !== undefined ) material.specularMap = this.getTexture( json.specularMap );\\n\\n\\t\\t\\tif ( json.envMap !== undefined ) {\\n\\n\\t\\t\\t\\tmaterial.envMap = this.getTexture( json.envMap );\\n\\t\\t\\t\\tmaterial.combine = THREE.MultiplyOperation;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\\n\\n\\t\\t\\tif ( json.lightMap !== undefined ) material.lightMap = this.getTexture( json.lightMap );\\n\\t\\t\\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\\n\\n\\t\\t\\tif ( json.aoMap !== undefined ) material.aoMap = this.getTexture( json.aoMap );\\n\\t\\t\\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\\n\\n\\t\\t\\t// MultiMaterial\\n\\n\\t\\t\\tif ( json.materials !== undefined ) {\\n\\n\\t\\t\\t\\tfor ( var i = 0, l = json.materials.length; i < l; i ++ ) {\\n\\n\\t\\t\\t\\t\\tmaterial.materials.push( this.parse( json.materials[ i ] ) );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn material;\\n\\n\\t\\t}\\n\\n\\t} );\\n\\n\\t// File:src/loaders/ObjectLoader.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t */\\n\\n\\tTHREE.ObjectLoader = function ( manager ) {\\n\\n\\t\\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\\n\\t\\tthis.texturePath = '';\\n\\n\\t};\\n\\n\\tObject.assign( THREE.ObjectLoader.prototype, {\\n\\n\\t\\tload: function ( url, onLoad, onProgress, onError ) {\\n\\n\\t\\t\\tif ( this.texturePath === '' ) {\\n\\n\\t\\t\\t\\tthis.texturePath = url.substring( 0, url.lastIndexOf( '/' ) + 1 );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar scope = this;\\n\\n\\t\\t\\tvar loader = new THREE.XHRLoader( scope.manager );\\n\\t\\t\\tloader.load( url, function ( text ) {\\n\\n\\t\\t\\t\\tscope.parse( JSON.parse( text ), onLoad );\\n\\n\\t\\t\\t}, onProgress, onError );\\n\\n\\t\\t},\\n\\n\\t\\tsetTexturePath: function ( value ) {\\n\\n\\t\\t\\tthis.texturePath = value;\\n\\n\\t\\t},\\n\\n\\t\\tsetCrossOrigin: function ( value ) {\\n\\n\\t\\t\\tthis.crossOrigin = value;\\n\\n\\t\\t},\\n\\n\\t\\tparse: function ( json, onLoad ) {\\n\\n\\t\\t\\tvar geometries = this.parseGeometries( json.geometries );\\n\\n\\t\\t\\tvar images = this.parseImages( json.images, function () {\\n\\n\\t\\t\\t\\tif ( onLoad !== undefined ) onLoad( object );\\n\\n\\t\\t\\t} );\\n\\n\\t\\t\\tvar textures  = this.parseTextures( json.textures, images );\\n\\t\\t\\tvar materials = this.parseMaterials( json.materials, textures );\\n\\n\\t\\t\\tvar object = this.parseObject( json.object, geometries, materials );\\n\\n\\t\\t\\tif ( json.animations ) {\\n\\n\\t\\t\\t\\tobject.animations = this.parseAnimations( json.animations );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( json.images === undefined || json.images.length === 0 ) {\\n\\n\\t\\t\\t\\tif ( onLoad !== undefined ) onLoad( object );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn object;\\n\\n\\t\\t},\\n\\n\\t\\tparseGeometries: function ( json ) {\\n\\n\\t\\t\\tvar geometries = {};\\n\\n\\t\\t\\tif ( json !== undefined ) {\\n\\n\\t\\t\\t\\tvar geometryLoader = new THREE.JSONLoader();\\n\\t\\t\\t\\tvar bufferGeometryLoader = new THREE.BufferGeometryLoader();\\n\\n\\t\\t\\t\\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\\n\\n\\t\\t\\t\\t\\tvar geometry;\\n\\t\\t\\t\\t\\tvar data = json[ i ];\\n\\n\\t\\t\\t\\t\\tswitch ( data.type ) {\\n\\n\\t\\t\\t\\t\\t\\tcase 'PlaneGeometry':\\n\\t\\t\\t\\t\\t\\tcase 'PlaneBufferGeometry':\\n\\n\\t\\t\\t\\t\\t\\t\\tgeometry = new THREE[ data.type ](\\n\\t\\t\\t\\t\\t\\t\\t\\tdata.width,\\n\\t\\t\\t\\t\\t\\t\\t\\tdata.height,\\n\\t\\t\\t\\t\\t\\t\\t\\tdata.widthSegments,\\n\\t\\t\\t\\t\\t\\t\\t\\tdata.heightSegments\\n\\t\\t\\t\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\t\\tcase 'BoxGeometry':\\n\\t\\t\\t\\t\\t\\tcase 'BoxBufferGeometry':\\n\\t\\t\\t\\t\\t\\tcase 'CubeGeometry': // backwards compatible\\n\\n\\t\\t\\t\\t\\t\\t\\tgeometry = new THREE[ data.type ](\\n\\t\\t\\t\\t\\t\\t\\t\\tdata.width,\\n\\t\\t\\t\\t\\t\\t\\t\\tdata.height,\\n\\t\\t\\t\\t\\t\\t\\t\\tdata.depth,\\n\\t\\t\\t\\t\\t\\t\\t\\tdata.widthSegments,\\n\\t\\t\\t\\t\\t\\t\\t\\tdata.heightSegments,\\n\\t\\t\\t\\t\\t\\t\\t\\tdata.depthSegments\\n\\t\\t\\t\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\t\\tcase 'CircleGeometry':\\n\\t\\t\\t\\t\\t\\tcase 'CircleBufferGeometry':\\n\\n\\t\\t\\t\\t\\t\\t\\tgeometry = new THREE[ data.type ](\\n\\t\\t\\t\\t\\t\\t\\t\\tdata.radius,\\n\\t\\t\\t\\t\\t\\t\\t\\tdata.segments,\\n\\t\\t\\t\\t\\t\\t\\t\\tdata.thetaStart,\\n\\t\\t\\t\\t\\t\\t\\t\\tdata.thetaLength\\n\\t\\t\\t\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\t\\tcase 'CylinderGeometry':\\n\\t\\t\\t\\t\\t\\tcase 'CylinderBufferGeometry':\\n\\n\\t\\t\\t\\t\\t\\t\\tgeometry = new THREE[ data.type ](\\n\\t\\t\\t\\t\\t\\t\\t\\tdata.radiusTop,\\n\\t\\t\\t\\t\\t\\t\\t\\tdata.radiusBottom,\\n\\t\\t\\t\\t\\t\\t\\t\\tdata.height,\\n\\t\\t\\t\\t\\t\\t\\t\\tdata.radialSegments,\\n\\t\\t\\t\\t\\t\\t\\t\\tdata.heightSegments,\\n\\t\\t\\t\\t\\t\\t\\t\\tdata.openEnded,\\n\\t\\t\\t\\t\\t\\t\\t\\tdata.thetaStart,\\n\\t\\t\\t\\t\\t\\t\\t\\tdata.thetaLength\\n\\t\\t\\t\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\t\\tcase 'ConeGeometry':\\n\\t\\t\\t\\t\\t\\tcase 'ConeBufferGeometry':\\n\\n\\t\\t\\t\\t\\t\\t\\tgeometry = new THREE [ data.type ](\\n\\t\\t\\t\\t\\t\\t\\t\\tdata.radius,\\n\\t\\t\\t\\t\\t\\t\\t\\tdata.height,\\n\\t\\t\\t\\t\\t\\t\\t\\tdata.radialSegments,\\n\\t\\t\\t\\t\\t\\t\\t\\tdata.heightSegments,\\n\\t\\t\\t\\t\\t\\t\\t\\tdata.openEnded,\\n\\t\\t\\t\\t\\t\\t\\t\\tdata.thetaStart,\\n\\t\\t\\t\\t\\t\\t\\t\\tdata.thetaLength\\n\\t\\t\\t\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\t\\tcase 'SphereGeometry':\\n\\t\\t\\t\\t\\t\\tcase 'SphereBufferGeometry':\\n\\n\\t\\t\\t\\t\\t\\t\\tgeometry = new THREE[ data.type ](\\n\\t\\t\\t\\t\\t\\t\\t\\tdata.radius,\\n\\t\\t\\t\\t\\t\\t\\t\\tdata.widthSegments,\\n\\t\\t\\t\\t\\t\\t\\t\\tdata.heightSegments,\\n\\t\\t\\t\\t\\t\\t\\t\\tdata.phiStart,\\n\\t\\t\\t\\t\\t\\t\\t\\tdata.phiLength,\\n\\t\\t\\t\\t\\t\\t\\t\\tdata.thetaStart,\\n\\t\\t\\t\\t\\t\\t\\t\\tdata.thetaLength\\n\\t\\t\\t\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\t\\tcase 'DodecahedronGeometry':\\n\\t\\t\\t\\t\\t\\tcase 'IcosahedronGeometry':\\n\\t\\t\\t\\t\\t\\tcase 'OctahedronGeometry':\\n\\t\\t\\t\\t\\t\\tcase 'TetrahedronGeometry':\\n\\n\\t\\t\\t\\t\\t\\t\\tgeometry = new THREE[ data.type ](\\n\\t\\t\\t\\t\\t\\t\\t\\tdata.radius,\\n\\t\\t\\t\\t\\t\\t\\t\\tdata.detail\\n\\t\\t\\t\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\t\\tcase 'RingGeometry':\\n\\t\\t\\t\\t\\t\\tcase 'RingBufferGeometry':\\n\\n\\t\\t\\t\\t\\t\\t\\tgeometry = new THREE[ data.type ](\\n\\t\\t\\t\\t\\t\\t\\t\\tdata.innerRadius,\\n\\t\\t\\t\\t\\t\\t\\t\\tdata.outerRadius,\\n\\t\\t\\t\\t\\t\\t\\t\\tdata.thetaSegments,\\n\\t\\t\\t\\t\\t\\t\\t\\tdata.phiSegments,\\n\\t\\t\\t\\t\\t\\t\\t\\tdata.thetaStart,\\n\\t\\t\\t\\t\\t\\t\\t\\tdata.thetaLength\\n\\t\\t\\t\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\t\\tcase 'TorusGeometry':\\n\\t\\t\\t\\t\\t\\tcase 'TorusBufferGeometry':\\n\\n\\t\\t\\t\\t\\t\\t\\tgeometry = new THREE[ data.type ](\\n\\t\\t\\t\\t\\t\\t\\t\\tdata.radius,\\n\\t\\t\\t\\t\\t\\t\\t\\tdata.tube,\\n\\t\\t\\t\\t\\t\\t\\t\\tdata.radialSegments,\\n\\t\\t\\t\\t\\t\\t\\t\\tdata.tubularSegments,\\n\\t\\t\\t\\t\\t\\t\\t\\tdata.arc\\n\\t\\t\\t\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\t\\tcase 'TorusKnotGeometry':\\n\\t\\t\\t\\t\\t\\tcase 'TorusKnotBufferGeometry':\\n\\n\\t\\t\\t\\t\\t\\t\\tgeometry = new THREE[ data.type ](\\n\\t\\t\\t\\t\\t\\t\\t\\tdata.radius,\\n\\t\\t\\t\\t\\t\\t\\t\\tdata.tube,\\n\\t\\t\\t\\t\\t\\t\\t\\tdata.tubularSegments,\\n\\t\\t\\t\\t\\t\\t\\t\\tdata.radialSegments,\\n\\t\\t\\t\\t\\t\\t\\t\\tdata.p,\\n\\t\\t\\t\\t\\t\\t\\t\\tdata.q\\n\\t\\t\\t\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\t\\tcase 'LatheGeometry':\\n\\t\\t\\t\\t\\t\\tcase 'LatheBufferGeometry':\\n\\n\\t\\t\\t\\t\\t\\t\\tgeometry = new THREE[ data.type ](\\n\\t\\t\\t\\t\\t\\t\\t\\tdata.points,\\n\\t\\t\\t\\t\\t\\t\\t\\tdata.segments,\\n\\t\\t\\t\\t\\t\\t\\t\\tdata.phiStart,\\n\\t\\t\\t\\t\\t\\t\\t\\tdata.phiLength\\n\\t\\t\\t\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\t\\tcase 'BufferGeometry':\\n\\n\\t\\t\\t\\t\\t\\t\\tgeometry = bufferGeometryLoader.parse( data );\\n\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\t\\tcase 'Geometry':\\n\\n\\t\\t\\t\\t\\t\\t\\tgeometry = geometryLoader.parse( data.data, this.texturePath ).geometry;\\n\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\t\\tdefault:\\n\\n\\t\\t\\t\\t\\t\\t\\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \\\"' + data.type + '\\\"' );\\n\\n\\t\\t\\t\\t\\t\\t\\tcontinue;\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tgeometry.uuid = data.uuid;\\n\\n\\t\\t\\t\\t\\tif ( data.name !== undefined ) geometry.name = data.name;\\n\\n\\t\\t\\t\\t\\tgeometries[ data.uuid ] = geometry;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn geometries;\\n\\n\\t\\t},\\n\\n\\t\\tparseMaterials: function ( json, textures ) {\\n\\n\\t\\t\\tvar materials = {};\\n\\n\\t\\t\\tif ( json !== undefined ) {\\n\\n\\t\\t\\t\\tvar loader = new THREE.MaterialLoader();\\n\\t\\t\\t\\tloader.setTextures( textures );\\n\\n\\t\\t\\t\\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\\n\\n\\t\\t\\t\\t\\tvar material = loader.parse( json[ i ] );\\n\\t\\t\\t\\t\\tmaterials[ material.uuid ] = material;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn materials;\\n\\n\\t\\t},\\n\\n\\t\\tparseAnimations: function ( json ) {\\n\\n\\t\\t\\tvar animations = [];\\n\\n\\t\\t\\tfor ( var i = 0; i < json.length; i ++ ) {\\n\\n\\t\\t\\t\\tvar clip = THREE.AnimationClip.parse( json[ i ] );\\n\\n\\t\\t\\t\\tanimations.push( clip );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn animations;\\n\\n\\t\\t},\\n\\n\\t\\tparseImages: function ( json, onLoad ) {\\n\\n\\t\\t\\tvar scope = this;\\n\\t\\t\\tvar images = {};\\n\\n\\t\\t\\tfunction loadImage( url ) {\\n\\n\\t\\t\\t\\tscope.manager.itemStart( url );\\n\\n\\t\\t\\t\\treturn loader.load( url, function () {\\n\\n\\t\\t\\t\\t\\tscope.manager.itemEnd( url );\\n\\n\\t\\t\\t\\t} );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( json !== undefined && json.length > 0 ) {\\n\\n\\t\\t\\t\\tvar manager = new THREE.LoadingManager( onLoad );\\n\\n\\t\\t\\t\\tvar loader = new THREE.ImageLoader( manager );\\n\\t\\t\\t\\tloader.setCrossOrigin( this.crossOrigin );\\n\\n\\t\\t\\t\\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\\n\\n\\t\\t\\t\\t\\tvar image = json[ i ];\\n\\t\\t\\t\\t\\tvar path = /^(\\\\/\\\\/)|([a-z]+:(\\\\/\\\\/)?)/i.test( image.url ) ? image.url : scope.texturePath + image.url;\\n\\n\\t\\t\\t\\t\\timages[ image.uuid ] = loadImage( path );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn images;\\n\\n\\t\\t},\\n\\n\\t\\tparseTextures: function ( json, images ) {\\n\\n\\t\\t\\tfunction parseConstant( value ) {\\n\\n\\t\\t\\t\\tif ( typeof( value ) === 'number' ) return value;\\n\\n\\t\\t\\t\\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\\n\\n\\t\\t\\t\\treturn THREE[ value ];\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar textures = {};\\n\\n\\t\\t\\tif ( json !== undefined ) {\\n\\n\\t\\t\\t\\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\\n\\n\\t\\t\\t\\t\\tvar data = json[ i ];\\n\\n\\t\\t\\t\\t\\tif ( data.image === undefined ) {\\n\\n\\t\\t\\t\\t\\t\\tconsole.warn( 'THREE.ObjectLoader: No \\\"image\\\" specified for', data.uuid );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tif ( images[ data.image ] === undefined ) {\\n\\n\\t\\t\\t\\t\\t\\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tvar texture = new THREE.Texture( images[ data.image ] );\\n\\t\\t\\t\\t\\ttexture.needsUpdate = true;\\n\\n\\t\\t\\t\\t\\ttexture.uuid = data.uuid;\\n\\n\\t\\t\\t\\t\\tif ( data.name !== undefined ) texture.name = data.name;\\n\\n\\t\\t\\t\\t\\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping );\\n\\n\\t\\t\\t\\t\\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\\n\\t\\t\\t\\t\\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\\n\\t\\t\\t\\t\\tif ( data.wrap !== undefined ) {\\n\\n\\t\\t\\t\\t\\t\\ttexture.wrapS = parseConstant( data.wrap[ 0 ] );\\n\\t\\t\\t\\t\\t\\ttexture.wrapT = parseConstant( data.wrap[ 1 ] );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter );\\n\\t\\t\\t\\t\\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter );\\n\\t\\t\\t\\t\\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\\n\\n\\t\\t\\t\\t\\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\\n\\n\\t\\t\\t\\t\\ttextures[ data.uuid ] = texture;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn textures;\\n\\n\\t\\t},\\n\\n\\t\\tparseObject: function () {\\n\\n\\t\\t\\tvar matrix = new THREE.Matrix4();\\n\\n\\t\\t\\treturn function parseObject( data, geometries, materials ) {\\n\\n\\t\\t\\t\\tvar object;\\n\\n\\t\\t\\t\\tfunction getGeometry( name ) {\\n\\n\\t\\t\\t\\t\\tif ( geometries[ name ] === undefined ) {\\n\\n\\t\\t\\t\\t\\t\\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\treturn geometries[ name ];\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tfunction getMaterial( name ) {\\n\\n\\t\\t\\t\\t\\tif ( name === undefined ) return undefined;\\n\\n\\t\\t\\t\\t\\tif ( materials[ name ] === undefined ) {\\n\\n\\t\\t\\t\\t\\t\\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\treturn materials[ name ];\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tswitch ( data.type ) {\\n\\n\\t\\t\\t\\t\\tcase 'Scene':\\n\\n\\t\\t\\t\\t\\t\\tobject = new THREE.Scene();\\n\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\tcase 'PerspectiveCamera':\\n\\n\\t\\t\\t\\t\\t\\tobject = new THREE.PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\\n\\n\\t\\t\\t\\t\\t\\tif ( data.focus !== undefined ) object.focus = data.focus;\\n\\t\\t\\t\\t\\t\\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\\n\\t\\t\\t\\t\\t\\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\\n\\t\\t\\t\\t\\t\\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\\n\\t\\t\\t\\t\\t\\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\\n\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\tcase 'OrthographicCamera':\\n\\n\\t\\t\\t\\t\\t\\tobject = new THREE.OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\\n\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\tcase 'AmbientLight':\\n\\n\\t\\t\\t\\t\\t\\tobject = new THREE.AmbientLight( data.color, data.intensity );\\n\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\tcase 'DirectionalLight':\\n\\n\\t\\t\\t\\t\\t\\tobject = new THREE.DirectionalLight( data.color, data.intensity );\\n\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\tcase 'PointLight':\\n\\n\\t\\t\\t\\t\\t\\tobject = new THREE.PointLight( data.color, data.intensity, data.distance, data.decay );\\n\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\tcase 'SpotLight':\\n\\n\\t\\t\\t\\t\\t\\tobject = new THREE.SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\\n\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\tcase 'HemisphereLight':\\n\\n\\t\\t\\t\\t\\t\\tobject = new THREE.HemisphereLight( data.color, data.groundColor, data.intensity );\\n\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\tcase 'Mesh':\\n\\n\\t\\t\\t\\t\\t\\tvar geometry = getGeometry( data.geometry );\\n\\t\\t\\t\\t\\t\\tvar material = getMaterial( data.material );\\n\\n\\t\\t\\t\\t\\t\\tif ( geometry.bones && geometry.bones.length > 0 ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tobject = new THREE.SkinnedMesh( geometry, material );\\n\\n\\t\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\t\\tobject = new THREE.Mesh( geometry, material );\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\tcase 'LOD':\\n\\n\\t\\t\\t\\t\\t\\tobject = new THREE.LOD();\\n\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\tcase 'Line':\\n\\n\\t\\t\\t\\t\\t\\tobject = new THREE.Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\\n\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\tcase 'PointCloud':\\n\\t\\t\\t\\t\\tcase 'Points':\\n\\n\\t\\t\\t\\t\\t\\tobject = new THREE.Points( getGeometry( data.geometry ), getMaterial( data.material ) );\\n\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\tcase 'Sprite':\\n\\n\\t\\t\\t\\t\\t\\tobject = new THREE.Sprite( getMaterial( data.material ) );\\n\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\tcase 'Group':\\n\\n\\t\\t\\t\\t\\t\\tobject = new THREE.Group();\\n\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\tdefault:\\n\\n\\t\\t\\t\\t\\t\\tobject = new THREE.Object3D();\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tobject.uuid = data.uuid;\\n\\n\\t\\t\\t\\tif ( data.name !== undefined ) object.name = data.name;\\n\\t\\t\\t\\tif ( data.matrix !== undefined ) {\\n\\n\\t\\t\\t\\t\\tmatrix.fromArray( data.matrix );\\n\\t\\t\\t\\t\\tmatrix.decompose( object.position, object.quaternion, object.scale );\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\tif ( data.position !== undefined ) object.position.fromArray( data.position );\\n\\t\\t\\t\\t\\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\\n\\t\\t\\t\\t\\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\\n\\t\\t\\t\\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\\n\\n\\t\\t\\t\\tif ( data.visible !== undefined ) object.visible = data.visible;\\n\\t\\t\\t\\tif ( data.userData !== undefined ) object.userData = data.userData;\\n\\n\\t\\t\\t\\tif ( data.children !== undefined ) {\\n\\n\\t\\t\\t\\t\\tfor ( var child in data.children ) {\\n\\n\\t\\t\\t\\t\\t\\tobject.add( this.parseObject( data.children[ child ], geometries, materials ) );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( data.type === 'LOD' ) {\\n\\n\\t\\t\\t\\t\\tvar levels = data.levels;\\n\\n\\t\\t\\t\\t\\tfor ( var l = 0; l < levels.length; l ++ ) {\\n\\n\\t\\t\\t\\t\\t\\tvar level = levels[ l ];\\n\\t\\t\\t\\t\\t\\tvar child = object.getObjectByProperty( 'uuid', level.object );\\n\\n\\t\\t\\t\\t\\t\\tif ( child !== undefined ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tobject.addLevel( child, level.distance );\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn object;\\n\\n\\t\\t\\t};\\n\\n\\t\\t}()\\n\\n\\t} );\\n\\n\\t// File:src/loaders/TextureLoader.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t */\\n\\n\\tTHREE.TextureLoader = function ( manager ) {\\n\\n\\t\\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\\n\\n\\t};\\n\\n\\tObject.assign( THREE.TextureLoader.prototype, {\\n\\n\\t\\tload: function ( url, onLoad, onProgress, onError ) {\\n\\n\\t\\t\\tvar texture = new THREE.Texture();\\n\\n\\t\\t\\tvar loader = new THREE.ImageLoader( this.manager );\\n\\t\\t\\tloader.setCrossOrigin( this.crossOrigin );\\n\\t\\t\\tloader.setPath( this.path );\\n\\t\\t\\tloader.load( url, function ( image ) {\\n\\n\\t\\t\\t\\t// JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\\n\\t\\t\\t\\tvar isJPEG = url.search( /\\\\.(jpg|jpeg)$/ ) > 0 || url.search( /^data\\\\:image\\\\/jpeg/ ) === 0;\\n\\n\\t\\t\\t\\ttexture.format = isJPEG ? THREE.RGBFormat : THREE.RGBAFormat;\\n\\t\\t\\t\\ttexture.image = image;\\n\\t\\t\\t\\ttexture.needsUpdate = true;\\n\\n\\t\\t\\t\\tif ( onLoad !== undefined ) {\\n\\n\\t\\t\\t\\t\\tonLoad( texture );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}, onProgress, onError );\\n\\n\\t\\t\\treturn texture;\\n\\n\\t\\t},\\n\\n\\t\\tsetCrossOrigin: function ( value ) {\\n\\n\\t\\t\\tthis.crossOrigin = value;\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tsetPath: function ( value ) {\\n\\n\\t\\t\\tthis.path = value;\\n\\t\\t\\treturn this;\\n\\n\\t\\t}\\n\\n\\t} );\\n\\n\\t// File:src/loaders/CubeTextureLoader.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t */\\n\\n\\tTHREE.CubeTextureLoader = function ( manager ) {\\n\\n\\t\\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\\n\\n\\t};\\n\\n\\tObject.assign( THREE.CubeTextureLoader.prototype, {\\n\\n\\t\\tload: function ( urls, onLoad, onProgress, onError ) {\\n\\n\\t\\t\\tvar texture = new THREE.CubeTexture();\\n\\n\\t\\t\\tvar loader = new THREE.ImageLoader( this.manager );\\n\\t\\t\\tloader.setCrossOrigin( this.crossOrigin );\\n\\t\\t\\tloader.setPath( this.path );\\n\\n\\t\\t\\tvar loaded = 0;\\n\\n\\t\\t\\tfunction loadTexture( i ) {\\n\\n\\t\\t\\t\\tloader.load( urls[ i ], function ( image ) {\\n\\n\\t\\t\\t\\t\\ttexture.images[ i ] = image;\\n\\n\\t\\t\\t\\t\\tloaded ++;\\n\\n\\t\\t\\t\\t\\tif ( loaded === 6 ) {\\n\\n\\t\\t\\t\\t\\t\\ttexture.needsUpdate = true;\\n\\n\\t\\t\\t\\t\\t\\tif ( onLoad ) onLoad( texture );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}, undefined, onError );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tfor ( var i = 0; i < urls.length; ++ i ) {\\n\\n\\t\\t\\t\\tloadTexture( i );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn texture;\\n\\n\\t\\t},\\n\\n\\t\\tsetCrossOrigin: function ( value ) {\\n\\n\\t\\t\\tthis.crossOrigin = value;\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tsetPath: function ( value ) {\\n\\n\\t\\t\\tthis.path = value;\\n\\t\\t\\treturn this;\\n\\n\\t\\t}\\n\\n\\t} );\\n\\n\\t// File:src/loaders/BinaryTextureLoader.js\\n\\n\\t/**\\n\\t * @author Nikos M. / https://github.com/foo123/\\n\\t *\\n\\t * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\\n\\t */\\n\\n\\tTHREE.DataTextureLoader = THREE.BinaryTextureLoader = function ( manager ) {\\n\\n\\t\\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\\n\\n\\t\\t// override in sub classes\\n\\t\\tthis._parser = null;\\n\\n\\t};\\n\\n\\tObject.assign( THREE.BinaryTextureLoader.prototype, {\\n\\n\\t\\tload: function ( url, onLoad, onProgress, onError ) {\\n\\n\\t\\t\\tvar scope = this;\\n\\n\\t\\t\\tvar texture = new THREE.DataTexture();\\n\\n\\t\\t\\tvar loader = new THREE.XHRLoader( this.manager );\\n\\t\\t\\tloader.setResponseType( 'arraybuffer' );\\n\\n\\t\\t\\tloader.load( url, function ( buffer ) {\\n\\n\\t\\t\\t\\tvar texData = scope._parser( buffer );\\n\\n\\t\\t\\t\\tif ( ! texData ) return;\\n\\n\\t\\t\\t\\tif ( undefined !== texData.image ) {\\n\\n\\t\\t\\t\\t\\ttexture.image = texData.image;\\n\\n\\t\\t\\t\\t} else if ( undefined !== texData.data ) {\\n\\n\\t\\t\\t\\t\\ttexture.image.width = texData.width;\\n\\t\\t\\t\\t\\ttexture.image.height = texData.height;\\n\\t\\t\\t\\t\\ttexture.image.data = texData.data;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\ttexture.wrapS = undefined !== texData.wrapS ? texData.wrapS : THREE.ClampToEdgeWrapping;\\n\\t\\t\\t\\ttexture.wrapT = undefined !== texData.wrapT ? texData.wrapT : THREE.ClampToEdgeWrapping;\\n\\n\\t\\t\\t\\ttexture.magFilter = undefined !== texData.magFilter ? texData.magFilter : THREE.LinearFilter;\\n\\t\\t\\t\\ttexture.minFilter = undefined !== texData.minFilter ? texData.minFilter : THREE.LinearMipMapLinearFilter;\\n\\n\\t\\t\\t\\ttexture.anisotropy = undefined !== texData.anisotropy ? texData.anisotropy : 1;\\n\\n\\t\\t\\t\\tif ( undefined !== texData.format ) {\\n\\n\\t\\t\\t\\t\\ttexture.format = texData.format;\\n\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tif ( undefined !== texData.type ) {\\n\\n\\t\\t\\t\\t\\ttexture.type = texData.type;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( undefined !== texData.mipmaps ) {\\n\\n\\t\\t\\t\\t\\ttexture.mipmaps = texData.mipmaps;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( 1 === texData.mipmapCount ) {\\n\\n\\t\\t\\t\\t\\ttexture.minFilter = THREE.LinearFilter;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\ttexture.needsUpdate = true;\\n\\n\\t\\t\\t\\tif ( onLoad ) onLoad( texture, texData );\\n\\n\\t\\t\\t}, onProgress, onError );\\n\\n\\n\\t\\t\\treturn texture;\\n\\n\\t\\t}\\n\\n\\t} );\\n\\n\\t// File:src/loaders/CompressedTextureLoader.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t *\\n\\t * Abstract Base class to block based textures loader (dds, pvr, ...)\\n\\t */\\n\\n\\tTHREE.CompressedTextureLoader = function ( manager ) {\\n\\n\\t\\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\\n\\n\\t\\t// override in sub classes\\n\\t\\tthis._parser = null;\\n\\n\\t};\\n\\n\\tObject.assign( THREE.CompressedTextureLoader.prototype, {\\n\\n\\t\\tload: function ( url, onLoad, onProgress, onError ) {\\n\\n\\t\\t\\tvar scope = this;\\n\\n\\t\\t\\tvar images = [];\\n\\n\\t\\t\\tvar texture = new THREE.CompressedTexture();\\n\\t\\t\\ttexture.image = images;\\n\\n\\t\\t\\tvar loader = new THREE.XHRLoader( this.manager );\\n\\t\\t\\tloader.setPath( this.path );\\n\\t\\t\\tloader.setResponseType( 'arraybuffer' );\\n\\n\\t\\t\\tfunction loadTexture( i ) {\\n\\n\\t\\t\\t\\tloader.load( url[ i ], function ( buffer ) {\\n\\n\\t\\t\\t\\t\\tvar texDatas = scope._parser( buffer, true );\\n\\n\\t\\t\\t\\t\\timages[ i ] = {\\n\\t\\t\\t\\t\\t\\twidth: texDatas.width,\\n\\t\\t\\t\\t\\t\\theight: texDatas.height,\\n\\t\\t\\t\\t\\t\\tformat: texDatas.format,\\n\\t\\t\\t\\t\\t\\tmipmaps: texDatas.mipmaps\\n\\t\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\t\\tloaded += 1;\\n\\n\\t\\t\\t\\t\\tif ( loaded === 6 ) {\\n\\n\\t\\t\\t\\t\\t\\tif ( texDatas.mipmapCount === 1 )\\n\\t\\t\\t\\t\\t\\t\\ttexture.minFilter = THREE.LinearFilter;\\n\\n\\t\\t\\t\\t\\t\\ttexture.format = texDatas.format;\\n\\t\\t\\t\\t\\t\\ttexture.needsUpdate = true;\\n\\n\\t\\t\\t\\t\\t\\tif ( onLoad ) onLoad( texture );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}, onProgress, onError );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( Array.isArray( url ) ) {\\n\\n\\t\\t\\t\\tvar loaded = 0;\\n\\n\\t\\t\\t\\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\\n\\n\\t\\t\\t\\t\\tloadTexture( i );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t// compressed cubemap texture stored in a single DDS file\\n\\n\\t\\t\\t\\tloader.load( url, function ( buffer ) {\\n\\n\\t\\t\\t\\t\\tvar texDatas = scope._parser( buffer, true );\\n\\n\\t\\t\\t\\t\\tif ( texDatas.isCubemap ) {\\n\\n\\t\\t\\t\\t\\t\\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\\n\\n\\t\\t\\t\\t\\t\\tfor ( var f = 0; f < faces; f ++ ) {\\n\\n\\t\\t\\t\\t\\t\\t\\timages[ f ] = { mipmaps : [] };\\n\\n\\t\\t\\t\\t\\t\\t\\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\\n\\t\\t\\t\\t\\t\\t\\t\\timages[ f ].format = texDatas.format;\\n\\t\\t\\t\\t\\t\\t\\t\\timages[ f ].width = texDatas.width;\\n\\t\\t\\t\\t\\t\\t\\t\\timages[ f ].height = texDatas.height;\\n\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\ttexture.image.width = texDatas.width;\\n\\t\\t\\t\\t\\t\\ttexture.image.height = texDatas.height;\\n\\t\\t\\t\\t\\t\\ttexture.mipmaps = texDatas.mipmaps;\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tif ( texDatas.mipmapCount === 1 ) {\\n\\n\\t\\t\\t\\t\\t\\ttexture.minFilter = THREE.LinearFilter;\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\ttexture.format = texDatas.format;\\n\\t\\t\\t\\t\\ttexture.needsUpdate = true;\\n\\n\\t\\t\\t\\t\\tif ( onLoad ) onLoad( texture );\\n\\n\\t\\t\\t\\t}, onProgress, onError );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn texture;\\n\\n\\t\\t},\\n\\n\\t\\tsetPath: function ( value ) {\\n\\n\\t\\t\\tthis.path = value;\\n\\t\\t\\treturn this;\\n\\n\\t\\t}\\n\\n\\t} );\\n\\n\\t// File:src/materials/Material.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t */\\n\\n\\tTHREE.Material = function () {\\n\\n\\t\\tObject.defineProperty( this, 'id', { value: THREE.MaterialIdCount ++ } );\\n\\n\\t\\tthis.uuid = THREE.Math.generateUUID();\\n\\n\\t\\tthis.name = '';\\n\\t\\tthis.type = 'Material';\\n\\n\\t\\tthis.fog = true;\\n\\t\\tthis.lights = true;\\n\\n\\t\\tthis.blending = THREE.NormalBlending;\\n\\t\\tthis.side = THREE.FrontSide;\\n\\t\\tthis.shading = THREE.SmoothShading; // THREE.FlatShading, THREE.SmoothShading\\n\\t\\tthis.vertexColors = THREE.NoColors; // THREE.NoColors, THREE.VertexColors, THREE.FaceColors\\n\\n\\t\\tthis.opacity = 1;\\n\\t\\tthis.transparent = false;\\n\\n\\t\\tthis.blendSrc = THREE.SrcAlphaFactor;\\n\\t\\tthis.blendDst = THREE.OneMinusSrcAlphaFactor;\\n\\t\\tthis.blendEquation = THREE.AddEquation;\\n\\t\\tthis.blendSrcAlpha = null;\\n\\t\\tthis.blendDstAlpha = null;\\n\\t\\tthis.blendEquationAlpha = null;\\n\\n\\t\\tthis.depthFunc = THREE.LessEqualDepth;\\n\\t\\tthis.depthTest = true;\\n\\t\\tthis.depthWrite = true;\\n\\n\\t\\tthis.clippingPlanes = null;\\n\\t\\tthis.clipShadows = false;\\n\\n\\t\\tthis.colorWrite = true;\\n\\n\\t\\tthis.precision = null; // override the renderer's default precision for this material\\n\\n\\t\\tthis.polygonOffset = false;\\n\\t\\tthis.polygonOffsetFactor = 0;\\n\\t\\tthis.polygonOffsetUnits = 0;\\n\\n\\t\\tthis.alphaTest = 0;\\n\\t\\tthis.premultipliedAlpha = false;\\n\\n\\t\\tthis.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\\n\\n\\t\\tthis.visible = true;\\n\\n\\t\\tthis._needsUpdate = true;\\n\\n\\t};\\n\\n\\tTHREE.Material.prototype = {\\n\\n\\t\\tconstructor: THREE.Material,\\n\\n\\t\\tget needsUpdate() {\\n\\n\\t\\t\\treturn this._needsUpdate;\\n\\n\\t\\t},\\n\\n\\t\\tset needsUpdate( value ) {\\n\\n\\t\\t\\tif ( value === true ) this.update();\\n\\t\\t\\tthis._needsUpdate = value;\\n\\n\\t\\t},\\n\\n\\t\\tsetValues: function ( values ) {\\n\\n\\t\\t\\tif ( values === undefined ) return;\\n\\n\\t\\t\\tfor ( var key in values ) {\\n\\n\\t\\t\\t\\tvar newValue = values[ key ];\\n\\n\\t\\t\\t\\tif ( newValue === undefined ) {\\n\\n\\t\\t\\t\\t\\tconsole.warn( \\\"THREE.Material: '\\\" + key + \\\"' parameter is undefined.\\\" );\\n\\t\\t\\t\\t\\tcontinue;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tvar currentValue = this[ key ];\\n\\n\\t\\t\\t\\tif ( currentValue === undefined ) {\\n\\n\\t\\t\\t\\t\\tconsole.warn( \\\"THREE.\\\" + this.type + \\\": '\\\" + key + \\\"' is not a property of this material.\\\" );\\n\\t\\t\\t\\t\\tcontinue;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( currentValue instanceof THREE.Color ) {\\n\\n\\t\\t\\t\\t\\tcurrentValue.set( newValue );\\n\\n\\t\\t\\t\\t} else if ( currentValue instanceof THREE.Vector3 && newValue instanceof THREE.Vector3 ) {\\n\\n\\t\\t\\t\\t\\tcurrentValue.copy( newValue );\\n\\n\\t\\t\\t\\t} else if ( key === 'overdraw' ) {\\n\\n\\t\\t\\t\\t\\t// ensure overdraw is backwards-compatible with legacy boolean type\\n\\t\\t\\t\\t\\tthis[ key ] = Number( newValue );\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\tthis[ key ] = newValue;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t},\\n\\n\\t\\ttoJSON: function ( meta ) {\\n\\n\\t\\t\\tvar isRoot = meta === undefined;\\n\\n\\t\\t\\tif ( isRoot ) {\\n\\n\\t\\t\\t\\tmeta = {\\n\\t\\t\\t\\t\\ttextures: {},\\n\\t\\t\\t\\t\\timages: {}\\n\\t\\t\\t\\t};\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar data = {\\n\\t\\t\\t\\tmetadata: {\\n\\t\\t\\t\\t\\tversion: 4.4,\\n\\t\\t\\t\\t\\ttype: 'Material',\\n\\t\\t\\t\\t\\tgenerator: 'Material.toJSON'\\n\\t\\t\\t\\t}\\n\\t\\t\\t};\\n\\n\\t\\t\\t// standard Material serialization\\n\\t\\t\\tdata.uuid = this.uuid;\\n\\t\\t\\tdata.type = this.type;\\n\\n\\t\\t\\tif ( this.name !== '' ) data.name = this.name;\\n\\n\\t\\t\\tif ( this.color instanceof THREE.Color ) data.color = this.color.getHex();\\n\\n\\t\\t\\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\\n\\t\\t\\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\\n\\n\\t\\t\\tif ( this.emissive instanceof THREE.Color ) data.emissive = this.emissive.getHex();\\n\\t\\t\\tif ( this.specular instanceof THREE.Color ) data.specular = this.specular.getHex();\\n\\t\\t\\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\\n\\n\\t\\t\\tif ( this.map instanceof THREE.Texture ) data.map = this.map.toJSON( meta ).uuid;\\n\\t\\t\\tif ( this.alphaMap instanceof THREE.Texture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\\n\\t\\t\\tif ( this.lightMap instanceof THREE.Texture ) data.lightMap = this.lightMap.toJSON( meta ).uuid;\\n\\t\\t\\tif ( this.bumpMap instanceof THREE.Texture ) {\\n\\n\\t\\t\\t\\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\\n\\t\\t\\t\\tdata.bumpScale = this.bumpScale;\\n\\n\\t\\t\\t}\\n\\t\\t\\tif ( this.normalMap instanceof THREE.Texture ) {\\n\\n\\t\\t\\t\\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\\n\\t\\t\\t\\tdata.normalScale = this.normalScale.toArray();\\n\\n\\t\\t\\t}\\n\\t\\t\\tif ( this.displacementMap instanceof THREE.Texture ) {\\n\\n\\t\\t\\t\\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\\n\\t\\t\\t\\tdata.displacementScale = this.displacementScale;\\n\\t\\t\\t\\tdata.displacementBias = this.displacementBias;\\n\\n\\t\\t\\t}\\n\\t\\t\\tif ( this.roughnessMap instanceof THREE.Texture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\\n\\t\\t\\tif ( this.metalnessMap instanceof THREE.Texture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\\n\\n\\t\\t\\tif ( this.emissiveMap instanceof THREE.Texture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\\n\\t\\t\\tif ( this.specularMap instanceof THREE.Texture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\\n\\n\\t\\t\\tif ( this.envMap instanceof THREE.Texture ) {\\n\\n\\t\\t\\t\\tdata.envMap = this.envMap.toJSON( meta ).uuid;\\n\\t\\t\\t\\tdata.reflectivity = this.reflectivity; // Scale behind envMap\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( this.size !== undefined ) data.size = this.size;\\n\\t\\t\\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\\n\\n\\t\\t\\tif ( this.blending !== THREE.NormalBlending ) data.blending = this.blending;\\n\\t\\t\\tif ( this.shading !== THREE.SmoothShading ) data.shading = this.shading;\\n\\t\\t\\tif ( this.side !== THREE.FrontSide ) data.side = this.side;\\n\\t\\t\\tif ( this.vertexColors !== THREE.NoColors ) data.vertexColors = this.vertexColors;\\n\\n\\t\\t\\tif ( this.opacity < 1 ) data.opacity = this.opacity;\\n\\t\\t\\tif ( this.transparent === true ) data.transparent = this.transparent;\\n\\t\\t\\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\\n\\t\\t\\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\\n\\t\\t\\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\\n\\t\\t\\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\\n\\n\\t\\t\\t// TODO: Copied from Object3D.toJSON\\n\\n\\t\\t\\tfunction extractFromCache ( cache ) {\\n\\n\\t\\t\\t\\tvar values = [];\\n\\n\\t\\t\\t\\tfor ( var key in cache ) {\\n\\n\\t\\t\\t\\t\\tvar data = cache[ key ];\\n\\t\\t\\t\\t\\tdelete data.metadata;\\n\\t\\t\\t\\t\\tvalues.push( data );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn values;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( isRoot ) {\\n\\n\\t\\t\\t\\tvar textures = extractFromCache( meta.textures );\\n\\t\\t\\t\\tvar images = extractFromCache( meta.images );\\n\\n\\t\\t\\t\\tif ( textures.length > 0 ) data.textures = textures;\\n\\t\\t\\t\\tif ( images.length > 0 ) data.images = images;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn data;\\n\\n\\t\\t},\\n\\n\\t\\tclone: function () {\\n\\n\\t\\t\\treturn new this.constructor().copy( this );\\n\\n\\t\\t},\\n\\n\\t\\tcopy: function ( source ) {\\n\\n\\t\\t\\tthis.name = source.name;\\n\\n\\t\\t\\tthis.fog = source.fog;\\n\\t\\t\\tthis.lights = source.lights;\\n\\n\\t\\t\\tthis.blending = source.blending;\\n\\t\\t\\tthis.side = source.side;\\n\\t\\t\\tthis.shading = source.shading;\\n\\t\\t\\tthis.vertexColors = source.vertexColors;\\n\\n\\t\\t\\tthis.opacity = source.opacity;\\n\\t\\t\\tthis.transparent = source.transparent;\\n\\n\\t\\t\\tthis.blendSrc = source.blendSrc;\\n\\t\\t\\tthis.blendDst = source.blendDst;\\n\\t\\t\\tthis.blendEquation = source.blendEquation;\\n\\t\\t\\tthis.blendSrcAlpha = source.blendSrcAlpha;\\n\\t\\t\\tthis.blendDstAlpha = source.blendDstAlpha;\\n\\t\\t\\tthis.blendEquationAlpha = source.blendEquationAlpha;\\n\\n\\t\\t\\tthis.depthFunc = source.depthFunc;\\n\\t\\t\\tthis.depthTest = source.depthTest;\\n\\t\\t\\tthis.depthWrite = source.depthWrite;\\n\\n\\t\\t\\tthis.colorWrite = source.colorWrite;\\n\\n\\t\\t\\tthis.precision = source.precision;\\n\\n\\t\\t\\tthis.polygonOffset = source.polygonOffset;\\n\\t\\t\\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\\n\\t\\t\\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\\n\\n\\t\\t\\tthis.alphaTest = source.alphaTest;\\n\\n\\t\\t\\tthis.premultipliedAlpha = source.premultipliedAlpha;\\n\\n\\t\\t\\tthis.overdraw = source.overdraw;\\n\\n\\t\\t\\tthis.visible = source.visible;\\n\\t\\t\\tthis.clipShadows = source.clipShadows;\\n\\n\\t\\t\\tvar srcPlanes = source.clippingPlanes,\\n\\t\\t\\t\\tdstPlanes = null;\\n\\n\\t\\t\\tif ( srcPlanes !== null ) {\\n\\n\\t\\t\\t\\tvar n = srcPlanes.length;\\n\\t\\t\\t\\tdstPlanes = new Array( n );\\n\\n\\t\\t\\t\\tfor ( var i = 0; i !== n; ++ i )\\n\\t\\t\\t\\t\\tdstPlanes[ i ] = srcPlanes[ i ].clone();\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.clippingPlanes = dstPlanes;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tupdate: function () {\\n\\n\\t\\t\\tthis.dispatchEvent( { type: 'update' } );\\n\\n\\t\\t},\\n\\n\\t\\tdispose: function () {\\n\\n\\t\\t\\tthis.dispatchEvent( { type: 'dispose' } );\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\tObject.assign( THREE.Material.prototype, THREE.EventDispatcher.prototype );\\n\\n\\tTHREE.MaterialIdCount = 0;\\n\\n\\t// File:src/materials/LineBasicMaterial.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t *\\n\\t * parameters = {\\n\\t *  color: <hex>,\\n\\t *  opacity: <float>,\\n\\t *\\n\\t *  linewidth: <float>,\\n\\t *  linecap: \\\"round\\\",\\n\\t *  linejoin: \\\"round\\\"\\n\\t * }\\n\\t */\\n\\n\\tTHREE.LineBasicMaterial = function ( parameters ) {\\n\\n\\t\\tTHREE.Material.call( this );\\n\\n\\t\\tthis.type = 'LineBasicMaterial';\\n\\n\\t\\tthis.color = new THREE.Color( 0xffffff );\\n\\n\\t\\tthis.linewidth = 1;\\n\\t\\tthis.linecap = 'round';\\n\\t\\tthis.linejoin = 'round';\\n\\n\\t\\tthis.lights = false;\\n\\n\\t\\tthis.setValues( parameters );\\n\\n\\t};\\n\\n\\tTHREE.LineBasicMaterial.prototype = Object.create( THREE.Material.prototype );\\n\\tTHREE.LineBasicMaterial.prototype.constructor = THREE.LineBasicMaterial;\\n\\n\\tTHREE.LineBasicMaterial.prototype.copy = function ( source ) {\\n\\n\\t\\tTHREE.Material.prototype.copy.call( this, source );\\n\\n\\t\\tthis.color.copy( source.color );\\n\\n\\t\\tthis.linewidth = source.linewidth;\\n\\t\\tthis.linecap = source.linecap;\\n\\t\\tthis.linejoin = source.linejoin;\\n\\n\\t\\treturn this;\\n\\n\\t};\\n\\n\\t// File:src/materials/LineDashedMaterial.js\\n\\n\\t/**\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t *\\n\\t * parameters = {\\n\\t *  color: <hex>,\\n\\t *  opacity: <float>,\\n\\t *\\n\\t *  linewidth: <float>,\\n\\t *\\n\\t *  scale: <float>,\\n\\t *  dashSize: <float>,\\n\\t *  gapSize: <float>\\n\\t * }\\n\\t */\\n\\n\\tTHREE.LineDashedMaterial = function ( parameters ) {\\n\\n\\t\\tTHREE.Material.call( this );\\n\\n\\t\\tthis.type = 'LineDashedMaterial';\\n\\n\\t\\tthis.color = new THREE.Color( 0xffffff );\\n\\n\\t\\tthis.linewidth = 1;\\n\\n\\t\\tthis.scale = 1;\\n\\t\\tthis.dashSize = 3;\\n\\t\\tthis.gapSize = 1;\\n\\n\\t\\tthis.lights = false;\\n\\n\\t\\tthis.setValues( parameters );\\n\\n\\t};\\n\\n\\tTHREE.LineDashedMaterial.prototype = Object.create( THREE.Material.prototype );\\n\\tTHREE.LineDashedMaterial.prototype.constructor = THREE.LineDashedMaterial;\\n\\n\\tTHREE.LineDashedMaterial.prototype.copy = function ( source ) {\\n\\n\\t\\tTHREE.Material.prototype.copy.call( this, source );\\n\\n\\t\\tthis.color.copy( source.color );\\n\\n\\t\\tthis.linewidth = source.linewidth;\\n\\n\\t\\tthis.scale = source.scale;\\n\\t\\tthis.dashSize = source.dashSize;\\n\\t\\tthis.gapSize = source.gapSize;\\n\\n\\t\\treturn this;\\n\\n\\t};\\n\\n\\t// File:src/materials/MeshBasicMaterial.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t *\\n\\t * parameters = {\\n\\t *  color: <hex>,\\n\\t *  opacity: <float>,\\n\\t *  map: new THREE.Texture( <Image> ),\\n\\t *\\n\\t *  aoMap: new THREE.Texture( <Image> ),\\n\\t *  aoMapIntensity: <float>\\n\\t *\\n\\t *  specularMap: new THREE.Texture( <Image> ),\\n\\t *\\n\\t *  alphaMap: new THREE.Texture( <Image> ),\\n\\t *\\n\\t *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\\n\\t *  combine: THREE.Multiply,\\n\\t *  reflectivity: <float>,\\n\\t *  refractionRatio: <float>,\\n\\t *\\n\\t *  shading: THREE.SmoothShading,\\n\\t *  depthTest: <bool>,\\n\\t *  depthWrite: <bool>,\\n\\t *\\n\\t *  wireframe: <boolean>,\\n\\t *  wireframeLinewidth: <float>,\\n\\t *\\n\\t *  skinning: <bool>,\\n\\t *  morphTargets: <bool>\\n\\t * }\\n\\t */\\n\\n\\tTHREE.MeshBasicMaterial = function ( parameters ) {\\n\\n\\t\\tTHREE.Material.call( this );\\n\\n\\t\\tthis.type = 'MeshBasicMaterial';\\n\\n\\t\\tthis.color = new THREE.Color( 0xffffff ); // emissive\\n\\n\\t\\tthis.map = null;\\n\\n\\t\\tthis.aoMap = null;\\n\\t\\tthis.aoMapIntensity = 1.0;\\n\\n\\t\\tthis.specularMap = null;\\n\\n\\t\\tthis.alphaMap = null;\\n\\n\\t\\tthis.envMap = null;\\n\\t\\tthis.combine = THREE.MultiplyOperation;\\n\\t\\tthis.reflectivity = 1;\\n\\t\\tthis.refractionRatio = 0.98;\\n\\n\\t\\tthis.wireframe = false;\\n\\t\\tthis.wireframeLinewidth = 1;\\n\\t\\tthis.wireframeLinecap = 'round';\\n\\t\\tthis.wireframeLinejoin = 'round';\\n\\n\\t\\tthis.skinning = false;\\n\\t\\tthis.morphTargets = false;\\n\\n\\t\\tthis.lights = false;\\n\\n\\t\\tthis.setValues( parameters );\\n\\n\\t};\\n\\n\\tTHREE.MeshBasicMaterial.prototype = Object.create( THREE.Material.prototype );\\n\\tTHREE.MeshBasicMaterial.prototype.constructor = THREE.MeshBasicMaterial;\\n\\n\\tTHREE.MeshBasicMaterial.prototype.copy = function ( source ) {\\n\\n\\t\\tTHREE.Material.prototype.copy.call( this, source );\\n\\n\\t\\tthis.color.copy( source.color );\\n\\n\\t\\tthis.map = source.map;\\n\\n\\t\\tthis.aoMap = source.aoMap;\\n\\t\\tthis.aoMapIntensity = source.aoMapIntensity;\\n\\n\\t\\tthis.specularMap = source.specularMap;\\n\\n\\t\\tthis.alphaMap = source.alphaMap;\\n\\n\\t\\tthis.envMap = source.envMap;\\n\\t\\tthis.combine = source.combine;\\n\\t\\tthis.reflectivity = source.reflectivity;\\n\\t\\tthis.refractionRatio = source.refractionRatio;\\n\\n\\t\\tthis.wireframe = source.wireframe;\\n\\t\\tthis.wireframeLinewidth = source.wireframeLinewidth;\\n\\t\\tthis.wireframeLinecap = source.wireframeLinecap;\\n\\t\\tthis.wireframeLinejoin = source.wireframeLinejoin;\\n\\n\\t\\tthis.skinning = source.skinning;\\n\\t\\tthis.morphTargets = source.morphTargets;\\n\\n\\t\\treturn this;\\n\\n\\t};\\n\\n\\t// File:src/materials/MeshDepthMaterial.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t * @author bhouston / https://clara.io\\n\\t * @author WestLangley / http://github.com/WestLangley\\n\\t *\\n\\t * parameters = {\\n\\t *\\n\\t *  opacity: <float>,\\n\\t *\\n\\t *  map: new THREE.Texture( <Image> ),\\n\\t *\\n\\t *  alphaMap: new THREE.Texture( <Image> ),\\n\\t *\\n\\t *  displacementMap: new THREE.Texture( <Image> ),\\n\\t *  displacementScale: <float>,\\n\\t *  displacementBias: <float>,\\n\\t *\\n\\t *  wireframe: <boolean>,\\n\\t *  wireframeLinewidth: <float>\\n\\t * }\\n\\t */\\n\\n\\tTHREE.MeshDepthMaterial = function ( parameters ) {\\n\\n\\t\\tTHREE.Material.call( this );\\n\\n\\t\\tthis.type = 'MeshDepthMaterial';\\n\\n\\t\\tthis.depthPacking = THREE.BasicDepthPacking;\\n\\n\\t\\tthis.skinning = false;\\n\\t\\tthis.morphTargets = false;\\n\\n\\t\\tthis.map = null;\\n\\n\\t\\tthis.alphaMap = null;\\n\\n\\t\\tthis.displacementMap = null;\\n\\t\\tthis.displacementScale = 1;\\n\\t\\tthis.displacementBias = 0;\\n\\n\\t\\tthis.wireframe = false;\\n\\t\\tthis.wireframeLinewidth = 1;\\n\\n\\t\\tthis.fog = false;\\n\\t\\tthis.lights = false;\\n\\n\\t\\tthis.setValues( parameters );\\n\\n\\t};\\n\\n\\tTHREE.MeshDepthMaterial.prototype = Object.create( THREE.Material.prototype );\\n\\tTHREE.MeshDepthMaterial.prototype.constructor = THREE.MeshDepthMaterial;\\n\\n\\tTHREE.MeshDepthMaterial.prototype.copy = function ( source ) {\\n\\n\\t\\tTHREE.Material.prototype.copy.call( this, source );\\n\\n\\t\\tthis.depthPacking = source.depthPacking;\\n\\n\\t\\tthis.skinning = source.skinning;\\n\\t\\tthis.morphTargets = source.morphTargets;\\n\\n\\t\\tthis.map = source.map;\\n\\n\\t\\tthis.alphaMap = source.alphaMap;\\n\\n\\t\\tthis.displacementMap = source.displacementMap;\\n\\t\\tthis.displacementScale = source.displacementScale;\\n\\t\\tthis.displacementBias = source.displacementBias;\\n\\n\\t\\tthis.wireframe = source.wireframe;\\n\\t\\tthis.wireframeLinewidth = source.wireframeLinewidth;\\n\\n\\t\\treturn this;\\n\\n\\t};\\n\\n\\t// File:src/materials/MeshLambertMaterial.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t *\\n\\t * parameters = {\\n\\t *  color: <hex>,\\n\\t *  opacity: <float>,\\n\\t *\\n\\t *  map: new THREE.Texture( <Image> ),\\n\\t *\\n\\t *  lightMap: new THREE.Texture( <Image> ),\\n\\t *  lightMapIntensity: <float>\\n\\t *\\n\\t *  aoMap: new THREE.Texture( <Image> ),\\n\\t *  aoMapIntensity: <float>\\n\\t *\\n\\t *  emissive: <hex>,\\n\\t *  emissiveIntensity: <float>\\n\\t *  emissiveMap: new THREE.Texture( <Image> ),\\n\\t *\\n\\t *  specularMap: new THREE.Texture( <Image> ),\\n\\t *\\n\\t *  alphaMap: new THREE.Texture( <Image> ),\\n\\t *\\n\\t *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\\n\\t *  combine: THREE.Multiply,\\n\\t *  reflectivity: <float>,\\n\\t *  refractionRatio: <float>,\\n\\t *\\n\\t *  wireframe: <boolean>,\\n\\t *  wireframeLinewidth: <float>,\\n\\t *\\n\\t *  skinning: <bool>,\\n\\t *  morphTargets: <bool>,\\n\\t *  morphNormals: <bool>\\n\\t * }\\n\\t */\\n\\n\\tTHREE.MeshLambertMaterial = function ( parameters ) {\\n\\n\\t\\tTHREE.Material.call( this );\\n\\n\\t\\tthis.type = 'MeshLambertMaterial';\\n\\n\\t\\tthis.color = new THREE.Color( 0xffffff ); // diffuse\\n\\n\\t\\tthis.map = null;\\n\\n\\t\\tthis.lightMap = null;\\n\\t\\tthis.lightMapIntensity = 1.0;\\n\\n\\t\\tthis.aoMap = null;\\n\\t\\tthis.aoMapIntensity = 1.0;\\n\\n\\t\\tthis.emissive = new THREE.Color( 0x000000 );\\n\\t\\tthis.emissiveIntensity = 1.0;\\n\\t\\tthis.emissiveMap = null;\\n\\n\\t\\tthis.specularMap = null;\\n\\n\\t\\tthis.alphaMap = null;\\n\\n\\t\\tthis.envMap = null;\\n\\t\\tthis.combine = THREE.MultiplyOperation;\\n\\t\\tthis.reflectivity = 1;\\n\\t\\tthis.refractionRatio = 0.98;\\n\\n\\t\\tthis.wireframe = false;\\n\\t\\tthis.wireframeLinewidth = 1;\\n\\t\\tthis.wireframeLinecap = 'round';\\n\\t\\tthis.wireframeLinejoin = 'round';\\n\\n\\t\\tthis.skinning = false;\\n\\t\\tthis.morphTargets = false;\\n\\t\\tthis.morphNormals = false;\\n\\n\\t\\tthis.setValues( parameters );\\n\\n\\t};\\n\\n\\tTHREE.MeshLambertMaterial.prototype = Object.create( THREE.Material.prototype );\\n\\tTHREE.MeshLambertMaterial.prototype.constructor = THREE.MeshLambertMaterial;\\n\\n\\tTHREE.MeshLambertMaterial.prototype.copy = function ( source ) {\\n\\n\\t\\tTHREE.Material.prototype.copy.call( this, source );\\n\\n\\t\\tthis.color.copy( source.color );\\n\\n\\t\\tthis.map = source.map;\\n\\n\\t\\tthis.lightMap = source.lightMap;\\n\\t\\tthis.lightMapIntensity = source.lightMapIntensity;\\n\\n\\t\\tthis.aoMap = source.aoMap;\\n\\t\\tthis.aoMapIntensity = source.aoMapIntensity;\\n\\n\\t\\tthis.emissive.copy( source.emissive );\\n\\t\\tthis.emissiveMap = source.emissiveMap;\\n\\t\\tthis.emissiveIntensity = source.emissiveIntensity;\\n\\n\\t\\tthis.specularMap = source.specularMap;\\n\\n\\t\\tthis.alphaMap = source.alphaMap;\\n\\n\\t\\tthis.envMap = source.envMap;\\n\\t\\tthis.combine = source.combine;\\n\\t\\tthis.reflectivity = source.reflectivity;\\n\\t\\tthis.refractionRatio = source.refractionRatio;\\n\\n\\t\\tthis.wireframe = source.wireframe;\\n\\t\\tthis.wireframeLinewidth = source.wireframeLinewidth;\\n\\t\\tthis.wireframeLinecap = source.wireframeLinecap;\\n\\t\\tthis.wireframeLinejoin = source.wireframeLinejoin;\\n\\n\\t\\tthis.skinning = source.skinning;\\n\\t\\tthis.morphTargets = source.morphTargets;\\n\\t\\tthis.morphNormals = source.morphNormals;\\n\\n\\t\\treturn this;\\n\\n\\t};\\n\\n\\t// File:src/materials/MeshNormalMaterial.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t *\\n\\t * parameters = {\\n\\t *  opacity: <float>,\\n\\t *\\n\\t *  wireframe: <boolean>,\\n\\t *  wireframeLinewidth: <float>\\n\\t * }\\n\\t */\\n\\n\\tTHREE.MeshNormalMaterial = function ( parameters ) {\\n\\n\\t\\tTHREE.Material.call( this, parameters );\\n\\n\\t\\tthis.type = 'MeshNormalMaterial';\\n\\n\\t\\tthis.wireframe = false;\\n\\t\\tthis.wireframeLinewidth = 1;\\n\\n\\t\\tthis.fog = false;\\n\\t\\tthis.lights = false;\\n\\t\\tthis.morphTargets = false;\\n\\n\\t\\tthis.setValues( parameters );\\n\\n\\t};\\n\\n\\tTHREE.MeshNormalMaterial.prototype = Object.create( THREE.Material.prototype );\\n\\tTHREE.MeshNormalMaterial.prototype.constructor = THREE.MeshNormalMaterial;\\n\\n\\tTHREE.MeshNormalMaterial.prototype.copy = function ( source ) {\\n\\n\\t\\tTHREE.Material.prototype.copy.call( this, source );\\n\\n\\t\\tthis.wireframe = source.wireframe;\\n\\t\\tthis.wireframeLinewidth = source.wireframeLinewidth;\\n\\n\\t\\treturn this;\\n\\n\\t};\\n\\n\\t// File:src/materials/MeshPhongMaterial.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t *\\n\\t * parameters = {\\n\\t *  color: <hex>,\\n\\t *  specular: <hex>,\\n\\t *  shininess: <float>,\\n\\t *  opacity: <float>,\\n\\t *\\n\\t *  map: new THREE.Texture( <Image> ),\\n\\t *\\n\\t *  lightMap: new THREE.Texture( <Image> ),\\n\\t *  lightMapIntensity: <float>\\n\\t *\\n\\t *  aoMap: new THREE.Texture( <Image> ),\\n\\t *  aoMapIntensity: <float>\\n\\t *\\n\\t *  emissive: <hex>,\\n\\t *  emissiveIntensity: <float>\\n\\t *  emissiveMap: new THREE.Texture( <Image> ),\\n\\t *\\n\\t *  bumpMap: new THREE.Texture( <Image> ),\\n\\t *  bumpScale: <float>,\\n\\t *\\n\\t *  normalMap: new THREE.Texture( <Image> ),\\n\\t *  normalScale: <Vector2>,\\n\\t *\\n\\t *  displacementMap: new THREE.Texture( <Image> ),\\n\\t *  displacementScale: <float>,\\n\\t *  displacementBias: <float>,\\n\\t *\\n\\t *  specularMap: new THREE.Texture( <Image> ),\\n\\t *\\n\\t *  alphaMap: new THREE.Texture( <Image> ),\\n\\t *\\n\\t *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\\n\\t *  combine: THREE.Multiply,\\n\\t *  reflectivity: <float>,\\n\\t *  refractionRatio: <float>,\\n\\t *\\n\\t *  wireframe: <boolean>,\\n\\t *  wireframeLinewidth: <float>,\\n\\t *\\n\\t *  skinning: <bool>,\\n\\t *  morphTargets: <bool>,\\n\\t *  morphNormals: <bool>\\n\\t * }\\n\\t */\\n\\n\\tTHREE.MeshPhongMaterial = function ( parameters ) {\\n\\n\\t\\tTHREE.Material.call( this );\\n\\n\\t\\tthis.type = 'MeshPhongMaterial';\\n\\n\\t\\tthis.color = new THREE.Color( 0xffffff ); // diffuse\\n\\t\\tthis.specular = new THREE.Color( 0x111111 );\\n\\t\\tthis.shininess = 30;\\n\\n\\t\\tthis.map = null;\\n\\n\\t\\tthis.lightMap = null;\\n\\t\\tthis.lightMapIntensity = 1.0;\\n\\n\\t\\tthis.aoMap = null;\\n\\t\\tthis.aoMapIntensity = 1.0;\\n\\n\\t\\tthis.emissive = new THREE.Color( 0x000000 );\\n\\t\\tthis.emissiveIntensity = 1.0;\\n\\t\\tthis.emissiveMap = null;\\n\\n\\t\\tthis.bumpMap = null;\\n\\t\\tthis.bumpScale = 1;\\n\\n\\t\\tthis.normalMap = null;\\n\\t\\tthis.normalScale = new THREE.Vector2( 1, 1 );\\n\\n\\t\\tthis.displacementMap = null;\\n\\t\\tthis.displacementScale = 1;\\n\\t\\tthis.displacementBias = 0;\\n\\n\\t\\tthis.specularMap = null;\\n\\n\\t\\tthis.alphaMap = null;\\n\\n\\t\\tthis.envMap = null;\\n\\t\\tthis.combine = THREE.MultiplyOperation;\\n\\t\\tthis.reflectivity = 1;\\n\\t\\tthis.refractionRatio = 0.98;\\n\\n\\t\\tthis.wireframe = false;\\n\\t\\tthis.wireframeLinewidth = 1;\\n\\t\\tthis.wireframeLinecap = 'round';\\n\\t\\tthis.wireframeLinejoin = 'round';\\n\\n\\t\\tthis.skinning = false;\\n\\t\\tthis.morphTargets = false;\\n\\t\\tthis.morphNormals = false;\\n\\n\\t\\tthis.setValues( parameters );\\n\\n\\t};\\n\\n\\tTHREE.MeshPhongMaterial.prototype = Object.create( THREE.Material.prototype );\\n\\tTHREE.MeshPhongMaterial.prototype.constructor = THREE.MeshPhongMaterial;\\n\\n\\tTHREE.MeshPhongMaterial.prototype.copy = function ( source ) {\\n\\n\\t\\tTHREE.Material.prototype.copy.call( this, source );\\n\\n\\t\\tthis.color.copy( source.color );\\n\\t\\tthis.specular.copy( source.specular );\\n\\t\\tthis.shininess = source.shininess;\\n\\n\\t\\tthis.map = source.map;\\n\\n\\t\\tthis.lightMap = source.lightMap;\\n\\t\\tthis.lightMapIntensity = source.lightMapIntensity;\\n\\n\\t\\tthis.aoMap = source.aoMap;\\n\\t\\tthis.aoMapIntensity = source.aoMapIntensity;\\n\\n\\t\\tthis.emissive.copy( source.emissive );\\n\\t\\tthis.emissiveMap = source.emissiveMap;\\n\\t\\tthis.emissiveIntensity = source.emissiveIntensity;\\n\\n\\t\\tthis.bumpMap = source.bumpMap;\\n\\t\\tthis.bumpScale = source.bumpScale;\\n\\n\\t\\tthis.normalMap = source.normalMap;\\n\\t\\tthis.normalScale.copy( source.normalScale );\\n\\n\\t\\tthis.displacementMap = source.displacementMap;\\n\\t\\tthis.displacementScale = source.displacementScale;\\n\\t\\tthis.displacementBias = source.displacementBias;\\n\\n\\t\\tthis.specularMap = source.specularMap;\\n\\n\\t\\tthis.alphaMap = source.alphaMap;\\n\\n\\t\\tthis.envMap = source.envMap;\\n\\t\\tthis.combine = source.combine;\\n\\t\\tthis.reflectivity = source.reflectivity;\\n\\t\\tthis.refractionRatio = source.refractionRatio;\\n\\n\\t\\tthis.wireframe = source.wireframe;\\n\\t\\tthis.wireframeLinewidth = source.wireframeLinewidth;\\n\\t\\tthis.wireframeLinecap = source.wireframeLinecap;\\n\\t\\tthis.wireframeLinejoin = source.wireframeLinejoin;\\n\\n\\t\\tthis.skinning = source.skinning;\\n\\t\\tthis.morphTargets = source.morphTargets;\\n\\t\\tthis.morphNormals = source.morphNormals;\\n\\n\\t\\treturn this;\\n\\n\\t};\\n\\n\\t// File:src/materials/MeshStandardMaterial.js\\n\\n\\t/**\\n\\t * @author WestLangley / http://github.com/WestLangley\\n\\t *\\n\\t * parameters = {\\n\\t *  color: <hex>,\\n\\t *  roughness: <float>,\\n\\t *  metalness: <float>,\\n\\t *  opacity: <float>,\\n\\t *\\n\\t *  map: new THREE.Texture( <Image> ),\\n\\t *\\n\\t *  lightMap: new THREE.Texture( <Image> ),\\n\\t *  lightMapIntensity: <float>\\n\\t *\\n\\t *  aoMap: new THREE.Texture( <Image> ),\\n\\t *  aoMapIntensity: <float>\\n\\t *\\n\\t *  emissive: <hex>,\\n\\t *  emissiveIntensity: <float>\\n\\t *  emissiveMap: new THREE.Texture( <Image> ),\\n\\t *\\n\\t *  bumpMap: new THREE.Texture( <Image> ),\\n\\t *  bumpScale: <float>,\\n\\t *\\n\\t *  normalMap: new THREE.Texture( <Image> ),\\n\\t *  normalScale: <Vector2>,\\n\\t *\\n\\t *  displacementMap: new THREE.Texture( <Image> ),\\n\\t *  displacementScale: <float>,\\n\\t *  displacementBias: <float>,\\n\\t *\\n\\t *  roughnessMap: new THREE.Texture( <Image> ),\\n\\t *\\n\\t *  metalnessMap: new THREE.Texture( <Image> ),\\n\\t *\\n\\t *  alphaMap: new THREE.Texture( <Image> ),\\n\\t *\\n\\t *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\\n\\t *  envMapIntensity: <float>\\n\\t *\\n\\t *  refractionRatio: <float>,\\n\\t *\\n\\t *  wireframe: <boolean>,\\n\\t *  wireframeLinewidth: <float>,\\n\\t *\\n\\t *  skinning: <bool>,\\n\\t *  morphTargets: <bool>,\\n\\t *  morphNormals: <bool>\\n\\t * }\\n\\t */\\n\\n\\tTHREE.MeshStandardMaterial = function ( parameters ) {\\n\\n\\t\\tTHREE.Material.call( this );\\n\\n\\t\\tthis.defines = { 'STANDARD': '' };\\n\\n\\t\\tthis.type = 'MeshStandardMaterial';\\n\\n\\t\\tthis.color = new THREE.Color( 0xffffff ); // diffuse\\n\\t\\tthis.roughness = 0.5;\\n\\t\\tthis.metalness = 0.5;\\n\\n\\t\\tthis.map = null;\\n\\n\\t\\tthis.lightMap = null;\\n\\t\\tthis.lightMapIntensity = 1.0;\\n\\n\\t\\tthis.aoMap = null;\\n\\t\\tthis.aoMapIntensity = 1.0;\\n\\n\\t\\tthis.emissive = new THREE.Color( 0x000000 );\\n\\t\\tthis.emissiveIntensity = 1.0;\\n\\t\\tthis.emissiveMap = null;\\n\\n\\t\\tthis.bumpMap = null;\\n\\t\\tthis.bumpScale = 1;\\n\\n\\t\\tthis.normalMap = null;\\n\\t\\tthis.normalScale = new THREE.Vector2( 1, 1 );\\n\\n\\t\\tthis.displacementMap = null;\\n\\t\\tthis.displacementScale = 1;\\n\\t\\tthis.displacementBias = 0;\\n\\n\\t\\tthis.roughnessMap = null;\\n\\n\\t\\tthis.metalnessMap = null;\\n\\n\\t\\tthis.alphaMap = null;\\n\\n\\t\\tthis.envMap = null;\\n\\t\\tthis.envMapIntensity = 1.0;\\n\\n\\t\\tthis.refractionRatio = 0.98;\\n\\n\\t\\tthis.wireframe = false;\\n\\t\\tthis.wireframeLinewidth = 1;\\n\\t\\tthis.wireframeLinecap = 'round';\\n\\t\\tthis.wireframeLinejoin = 'round';\\n\\n\\t\\tthis.skinning = false;\\n\\t\\tthis.morphTargets = false;\\n\\t\\tthis.morphNormals = false;\\n\\n\\t\\tthis.setValues( parameters );\\n\\n\\t};\\n\\n\\tTHREE.MeshStandardMaterial.prototype = Object.create( THREE.Material.prototype );\\n\\tTHREE.MeshStandardMaterial.prototype.constructor = THREE.MeshStandardMaterial;\\n\\n\\tTHREE.MeshStandardMaterial.prototype.copy = function ( source ) {\\n\\n\\t\\tTHREE.Material.prototype.copy.call( this, source );\\n\\n\\t\\tthis.defines = { 'STANDARD': '' };\\n\\n\\t\\tthis.color.copy( source.color );\\n\\t\\tthis.roughness = source.roughness;\\n\\t\\tthis.metalness = source.metalness;\\n\\n\\t\\tthis.map = source.map;\\n\\n\\t\\tthis.lightMap = source.lightMap;\\n\\t\\tthis.lightMapIntensity = source.lightMapIntensity;\\n\\n\\t\\tthis.aoMap = source.aoMap;\\n\\t\\tthis.aoMapIntensity = source.aoMapIntensity;\\n\\n\\t\\tthis.emissive.copy( source.emissive );\\n\\t\\tthis.emissiveMap = source.emissiveMap;\\n\\t\\tthis.emissiveIntensity = source.emissiveIntensity;\\n\\n\\t\\tthis.bumpMap = source.bumpMap;\\n\\t\\tthis.bumpScale = source.bumpScale;\\n\\n\\t\\tthis.normalMap = source.normalMap;\\n\\t\\tthis.normalScale.copy( source.normalScale );\\n\\n\\t\\tthis.displacementMap = source.displacementMap;\\n\\t\\tthis.displacementScale = source.displacementScale;\\n\\t\\tthis.displacementBias = source.displacementBias;\\n\\n\\t\\tthis.roughnessMap = source.roughnessMap;\\n\\n\\t\\tthis.metalnessMap = source.metalnessMap;\\n\\n\\t\\tthis.alphaMap = source.alphaMap;\\n\\n\\t\\tthis.envMap = source.envMap;\\n\\t\\tthis.envMapIntensity = source.envMapIntensity;\\n\\n\\t\\tthis.refractionRatio = source.refractionRatio;\\n\\n\\t\\tthis.wireframe = source.wireframe;\\n\\t\\tthis.wireframeLinewidth = source.wireframeLinewidth;\\n\\t\\tthis.wireframeLinecap = source.wireframeLinecap;\\n\\t\\tthis.wireframeLinejoin = source.wireframeLinejoin;\\n\\n\\t\\tthis.skinning = source.skinning;\\n\\t\\tthis.morphTargets = source.morphTargets;\\n\\t\\tthis.morphNormals = source.morphNormals;\\n\\n\\t\\treturn this;\\n\\n\\t};\\n\\n\\t// File:src/materials/MeshPhysicalMaterial.js\\n\\n\\t/**\\n\\t * @author WestLangley / http://github.com/WestLangley\\n\\t *\\n\\t * parameters = {\\n\\t *  reflectivity: <float>\\n\\t * }\\n\\t */\\n\\n\\tTHREE.MeshPhysicalMaterial = function ( parameters ) {\\n\\n\\t\\tTHREE.MeshStandardMaterial.call( this );\\n\\n\\t\\tthis.defines = { 'PHYSICAL': '' };\\n\\n\\t\\tthis.type = 'MeshPhysicalMaterial';\\n\\n\\t\\tthis.reflectivity = 0.5; // maps to F0 = 0.04\\n\\n\\t\\tthis.clearCoat = 0.0;\\n\\t\\tthis.clearCoatRoughness = 0.0;\\n\\n\\t\\tthis.setValues( parameters );\\n\\n\\t};\\n\\n\\tTHREE.MeshPhysicalMaterial.prototype = Object.create( THREE.MeshStandardMaterial.prototype );\\n\\tTHREE.MeshPhysicalMaterial.prototype.constructor = THREE.MeshPhysicalMaterial;\\n\\n\\tTHREE.MeshPhysicalMaterial.prototype.copy = function ( source ) {\\n\\n\\t\\tTHREE.MeshStandardMaterial.prototype.copy.call( this, source );\\n\\n\\t\\tthis.defines = { 'PHYSICAL': '' };\\n\\n\\t\\tthis.reflectivity = source.reflectivity;\\n\\n\\t\\tthis.clearCoat = source.clearCoat;\\n\\t\\tthis.clearCoatRoughness = source.clearCoatRoughness;\\n\\n\\t\\treturn this;\\n\\n\\t};\\n\\n\\t// File:src/materials/MultiMaterial.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t */\\n\\n\\tTHREE.MultiMaterial = function ( materials ) {\\n\\n\\t\\tthis.uuid = THREE.Math.generateUUID();\\n\\n\\t\\tthis.type = 'MultiMaterial';\\n\\n\\t\\tthis.materials = materials instanceof Array ? materials : [];\\n\\n\\t\\tthis.visible = true;\\n\\n\\t};\\n\\n\\tTHREE.MultiMaterial.prototype = {\\n\\n\\t\\tconstructor: THREE.MultiMaterial,\\n\\n\\t\\ttoJSON: function ( meta ) {\\n\\n\\t\\t\\tvar output = {\\n\\t\\t\\t\\tmetadata: {\\n\\t\\t\\t\\t\\tversion: 4.2,\\n\\t\\t\\t\\t\\ttype: 'material',\\n\\t\\t\\t\\t\\tgenerator: 'MaterialExporter'\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\tuuid: this.uuid,\\n\\t\\t\\t\\ttype: this.type,\\n\\t\\t\\t\\tmaterials: []\\n\\t\\t\\t};\\n\\n\\t\\t\\tvar materials = this.materials;\\n\\n\\t\\t\\tfor ( var i = 0, l = materials.length; i < l; i ++ ) {\\n\\n\\t\\t\\t\\tvar material = materials[ i ].toJSON( meta );\\n\\t\\t\\t\\tdelete material.metadata;\\n\\n\\t\\t\\t\\toutput.materials.push( material );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\toutput.visible = this.visible;\\n\\n\\t\\t\\treturn output;\\n\\n\\t\\t},\\n\\n\\t\\tclone: function () {\\n\\n\\t\\t\\tvar material = new this.constructor();\\n\\n\\t\\t\\tfor ( var i = 0; i < this.materials.length; i ++ ) {\\n\\n\\t\\t\\t\\tmaterial.materials.push( this.materials[ i ].clone() );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tmaterial.visible = this.visible;\\n\\n\\t\\t\\treturn material;\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\t// File:src/materials/PointsMaterial.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t *\\n\\t * parameters = {\\n\\t *  color: <hex>,\\n\\t *  opacity: <float>,\\n\\t *  map: new THREE.Texture( <Image> ),\\n\\t *\\n\\t *  size: <float>,\\n\\t *  sizeAttenuation: <bool>\\n\\t * }\\n\\t */\\n\\n\\tTHREE.PointsMaterial = function ( parameters ) {\\n\\n\\t\\tTHREE.Material.call( this );\\n\\n\\t\\tthis.type = 'PointsMaterial';\\n\\n\\t\\tthis.color = new THREE.Color( 0xffffff );\\n\\n\\t\\tthis.map = null;\\n\\n\\t\\tthis.size = 1;\\n\\t\\tthis.sizeAttenuation = true;\\n\\n\\t\\tthis.lights = false;\\n\\n\\t\\tthis.setValues( parameters );\\n\\n\\t};\\n\\n\\tTHREE.PointsMaterial.prototype = Object.create( THREE.Material.prototype );\\n\\tTHREE.PointsMaterial.prototype.constructor = THREE.PointsMaterial;\\n\\n\\tTHREE.PointsMaterial.prototype.copy = function ( source ) {\\n\\n\\t\\tTHREE.Material.prototype.copy.call( this, source );\\n\\n\\t\\tthis.color.copy( source.color );\\n\\n\\t\\tthis.map = source.map;\\n\\n\\t\\tthis.size = source.size;\\n\\t\\tthis.sizeAttenuation = source.sizeAttenuation;\\n\\n\\t\\treturn this;\\n\\n\\t};\\n\\n\\t// File:src/materials/ShaderMaterial.js\\n\\n\\t/**\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t *\\n\\t * parameters = {\\n\\t *  defines: { \\\"label\\\" : \\\"value\\\" },\\n\\t *  uniforms: { \\\"parameter1\\\": { value: 1.0 }, \\\"parameter2\\\": { value2: 2 } },\\n\\t *\\n\\t *  fragmentShader: <string>,\\n\\t *  vertexShader: <string>,\\n\\t *\\n\\t *  wireframe: <boolean>,\\n\\t *  wireframeLinewidth: <float>,\\n\\t *\\n\\t *  lights: <bool>,\\n\\t *\\n\\t *  skinning: <bool>,\\n\\t *  morphTargets: <bool>,\\n\\t *  morphNormals: <bool>\\n\\t * }\\n\\t */\\n\\n\\tTHREE.ShaderMaterial = function ( parameters ) {\\n\\n\\t\\tTHREE.Material.call( this );\\n\\n\\t\\tthis.type = 'ShaderMaterial';\\n\\n\\t\\tthis.defines = {};\\n\\t\\tthis.uniforms = {};\\n\\n\\t\\tthis.vertexShader = 'void main() {\\\\n\\\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\\\n}';\\n\\t\\tthis.fragmentShader = 'void main() {\\\\n\\\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\\\n}';\\n\\n\\t\\tthis.linewidth = 1;\\n\\n\\t\\tthis.wireframe = false;\\n\\t\\tthis.wireframeLinewidth = 1;\\n\\n\\t\\tthis.fog = false; // set to use scene fog\\n\\t\\tthis.lights = false; // set to use scene lights\\n\\t\\tthis.clipping = false; // set to use user-defined clipping planes\\n\\n\\t\\tthis.skinning = false; // set to use skinning attribute streams\\n\\t\\tthis.morphTargets = false; // set to use morph targets\\n\\t\\tthis.morphNormals = false; // set to use morph normals\\n\\n\\t\\tthis.extensions = {\\n\\t\\t\\tderivatives: false, // set to use derivatives\\n\\t\\t\\tfragDepth: false, // set to use fragment depth values\\n\\t\\t\\tdrawBuffers: false, // set to use draw buffers\\n\\t\\t\\tshaderTextureLOD: false // set to use shader texture LOD\\n\\t\\t};\\n\\n\\t\\t// When rendered geometry doesn't include these attributes but the material does,\\n\\t\\t// use these default values in WebGL. This avoids errors when buffer data is missing.\\n\\t\\tthis.defaultAttributeValues = {\\n\\t\\t\\t'color': [ 1, 1, 1 ],\\n\\t\\t\\t'uv': [ 0, 0 ],\\n\\t\\t\\t'uv2': [ 0, 0 ]\\n\\t\\t};\\n\\n\\t\\tthis.index0AttributeName = undefined;\\n\\n\\t\\tif ( parameters !== undefined ) {\\n\\n\\t\\t\\tif ( parameters.attributes !== undefined ) {\\n\\n\\t\\t\\t\\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.setValues( parameters );\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\tTHREE.ShaderMaterial.prototype = Object.create( THREE.Material.prototype );\\n\\tTHREE.ShaderMaterial.prototype.constructor = THREE.ShaderMaterial;\\n\\n\\tTHREE.ShaderMaterial.prototype.copy = function ( source ) {\\n\\n\\t\\tTHREE.Material.prototype.copy.call( this, source );\\n\\n\\t\\tthis.fragmentShader = source.fragmentShader;\\n\\t\\tthis.vertexShader = source.vertexShader;\\n\\n\\t\\tthis.uniforms = THREE.UniformsUtils.clone( source.uniforms );\\n\\n\\t\\tthis.defines = source.defines;\\n\\n\\t\\tthis.wireframe = source.wireframe;\\n\\t\\tthis.wireframeLinewidth = source.wireframeLinewidth;\\n\\n\\t\\tthis.lights = source.lights;\\n\\t\\tthis.clipping = source.clipping;\\n\\n\\t\\tthis.skinning = source.skinning;\\n\\n\\t\\tthis.morphTargets = source.morphTargets;\\n\\t\\tthis.morphNormals = source.morphNormals;\\n\\n\\t\\tthis.extensions = source.extensions;\\n\\n\\t\\treturn this;\\n\\n\\t};\\n\\n\\tTHREE.ShaderMaterial.prototype.toJSON = function ( meta ) {\\n\\n\\t\\tvar data = THREE.Material.prototype.toJSON.call( this, meta );\\n\\n\\t\\tdata.uniforms = this.uniforms;\\n\\t\\tdata.vertexShader = this.vertexShader;\\n\\t\\tdata.fragmentShader = this.fragmentShader;\\n\\n\\t\\treturn data;\\n\\n\\t};\\n\\n\\t// File:src/materials/RawShaderMaterial.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t */\\n\\n\\tTHREE.RawShaderMaterial = function ( parameters ) {\\n\\n\\t\\tTHREE.ShaderMaterial.call( this, parameters );\\n\\n\\t\\tthis.type = 'RawShaderMaterial';\\n\\n\\t};\\n\\n\\tTHREE.RawShaderMaterial.prototype = Object.create( THREE.ShaderMaterial.prototype );\\n\\tTHREE.RawShaderMaterial.prototype.constructor = THREE.RawShaderMaterial;\\n\\n\\t// File:src/materials/SpriteMaterial.js\\n\\n\\t/**\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t *\\n\\t * parameters = {\\n\\t *  color: <hex>,\\n\\t *  opacity: <float>,\\n\\t *  map: new THREE.Texture( <Image> ),\\n\\t *\\n\\t *\\tuvOffset: new THREE.Vector2(),\\n\\t *\\tuvScale: new THREE.Vector2()\\n\\t * }\\n\\t */\\n\\n\\tTHREE.SpriteMaterial = function ( parameters ) {\\n\\n\\t\\tTHREE.Material.call( this );\\n\\n\\t\\tthis.type = 'SpriteMaterial';\\n\\n\\t\\tthis.color = new THREE.Color( 0xffffff );\\n\\t\\tthis.map = null;\\n\\n\\t\\tthis.rotation = 0;\\n\\n\\t\\tthis.fog = false;\\n\\t\\tthis.lights = false;\\n\\n\\t\\tthis.setValues( parameters );\\n\\n\\t};\\n\\n\\tTHREE.SpriteMaterial.prototype = Object.create( THREE.Material.prototype );\\n\\tTHREE.SpriteMaterial.prototype.constructor = THREE.SpriteMaterial;\\n\\n\\tTHREE.SpriteMaterial.prototype.copy = function ( source ) {\\n\\n\\t\\tTHREE.Material.prototype.copy.call( this, source );\\n\\n\\t\\tthis.color.copy( source.color );\\n\\t\\tthis.map = source.map;\\n\\n\\t\\tthis.rotation = source.rotation;\\n\\n\\t\\treturn this;\\n\\n\\t};\\n\\n\\t// File:src/materials/ShadowMaterial.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t */\\n\\n\\tTHREE.ShadowMaterial = function () {\\n\\n\\t\\tTHREE.ShaderMaterial.call( this, {\\n\\t\\t\\tuniforms: THREE.UniformsUtils.merge( [\\n\\t\\t\\t\\tTHREE.UniformsLib[ \\\"lights\\\" ],\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\topacity: { value: 1.0 }\\n\\t\\t\\t\\t}\\n\\t\\t\\t] ),\\n\\t\\t\\tvertexShader: THREE.ShaderChunk[ 'shadow_vert' ],\\n\\t\\t\\tfragmentShader: THREE.ShaderChunk[ 'shadow_frag' ]\\n\\t\\t} );\\n\\n\\t\\tthis.lights = true;\\n\\t\\tthis.transparent = true;\\n\\n\\t\\tObject.defineProperties( this, {\\n\\t\\t\\topacity: {\\n\\t\\t\\t\\tenumerable: true,\\n\\t\\t\\t\\tget: function () {\\n\\t\\t\\t\\t\\treturn this.uniforms.opacity.value;\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\tset: function ( value ) {\\n\\t\\t\\t\\t\\tthis.uniforms.opacity.value = value;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t} );\\n\\n\\t};\\n\\n\\tTHREE.ShadowMaterial.prototype = Object.create( THREE.ShaderMaterial.prototype );\\n\\tTHREE.ShadowMaterial.prototype.constructor = THREE.ShadowMaterial;\\n\\n\\t// File:src/textures/Texture.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t * @author szimek / https://github.com/szimek/\\n\\t */\\n\\n\\tTHREE.Texture = function ( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\\n\\n\\t\\tObject.defineProperty( this, 'id', { value: THREE.TextureIdCount ++ } );\\n\\n\\t\\tthis.uuid = THREE.Math.generateUUID();\\n\\n\\t\\tthis.name = '';\\n\\t\\tthis.sourceFile = '';\\n\\n\\t\\tthis.image = image !== undefined ? image : THREE.Texture.DEFAULT_IMAGE;\\n\\t\\tthis.mipmaps = [];\\n\\n\\t\\tthis.mapping = mapping !== undefined ? mapping : THREE.Texture.DEFAULT_MAPPING;\\n\\n\\t\\tthis.wrapS = wrapS !== undefined ? wrapS : THREE.ClampToEdgeWrapping;\\n\\t\\tthis.wrapT = wrapT !== undefined ? wrapT : THREE.ClampToEdgeWrapping;\\n\\n\\t\\tthis.magFilter = magFilter !== undefined ? magFilter : THREE.LinearFilter;\\n\\t\\tthis.minFilter = minFilter !== undefined ? minFilter : THREE.LinearMipMapLinearFilter;\\n\\n\\t\\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\\n\\n\\t\\tthis.format = format !== undefined ? format : THREE.RGBAFormat;\\n\\t\\tthis.type = type !== undefined ? type : THREE.UnsignedByteType;\\n\\n\\t\\tthis.offset = new THREE.Vector2( 0, 0 );\\n\\t\\tthis.repeat = new THREE.Vector2( 1, 1 );\\n\\n\\t\\tthis.generateMipmaps = true;\\n\\t\\tthis.premultiplyAlpha = false;\\n\\t\\tthis.flipY = true;\\n\\t\\tthis.unpackAlignment = 4;\\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\\n\\n\\n\\t\\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\\n\\t\\t//\\n\\t\\t// Also changing the encoding after already used by a Material will not automatically make the Material\\n\\t\\t// update.  You need to explicitly call Material.needsUpdate to trigger it to recompile.\\n\\t\\tthis.encoding = encoding !== undefined ? encoding :  THREE.LinearEncoding;\\n\\n\\t\\tthis.version = 0;\\n\\t\\tthis.onUpdate = null;\\n\\n\\t};\\n\\n\\tTHREE.Texture.DEFAULT_IMAGE = undefined;\\n\\tTHREE.Texture.DEFAULT_MAPPING = THREE.UVMapping;\\n\\n\\tTHREE.Texture.prototype = {\\n\\n\\t\\tconstructor: THREE.Texture,\\n\\n\\t\\tset needsUpdate( value ) {\\n\\n\\t\\t\\tif ( value === true ) this.version ++;\\n\\n\\t\\t},\\n\\n\\t\\tclone: function () {\\n\\n\\t\\t\\treturn new this.constructor().copy( this );\\n\\n\\t\\t},\\n\\n\\t\\tcopy: function ( source ) {\\n\\n\\t\\t\\tthis.image = source.image;\\n\\t\\t\\tthis.mipmaps = source.mipmaps.slice( 0 );\\n\\n\\t\\t\\tthis.mapping = source.mapping;\\n\\n\\t\\t\\tthis.wrapS = source.wrapS;\\n\\t\\t\\tthis.wrapT = source.wrapT;\\n\\n\\t\\t\\tthis.magFilter = source.magFilter;\\n\\t\\t\\tthis.minFilter = source.minFilter;\\n\\n\\t\\t\\tthis.anisotropy = source.anisotropy;\\n\\n\\t\\t\\tthis.format = source.format;\\n\\t\\t\\tthis.type = source.type;\\n\\n\\t\\t\\tthis.offset.copy( source.offset );\\n\\t\\t\\tthis.repeat.copy( source.repeat );\\n\\n\\t\\t\\tthis.generateMipmaps = source.generateMipmaps;\\n\\t\\t\\tthis.premultiplyAlpha = source.premultiplyAlpha;\\n\\t\\t\\tthis.flipY = source.flipY;\\n\\t\\t\\tthis.unpackAlignment = source.unpackAlignment;\\n\\t\\t\\tthis.encoding = source.encoding;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\ttoJSON: function ( meta ) {\\n\\n\\t\\t\\tif ( meta.textures[ this.uuid ] !== undefined ) {\\n\\n\\t\\t\\t\\treturn meta.textures[ this.uuid ];\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tfunction getDataURL( image ) {\\n\\n\\t\\t\\t\\tvar canvas;\\n\\n\\t\\t\\t\\tif ( image.toDataURL !== undefined ) {\\n\\n\\t\\t\\t\\t\\tcanvas = image;\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\tcanvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\\n\\t\\t\\t\\t\\tcanvas.width = image.width;\\n\\t\\t\\t\\t\\tcanvas.height = image.height;\\n\\n\\t\\t\\t\\t\\tcanvas.getContext( '2d' ).drawImage( image, 0, 0, image.width, image.height );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\\n\\n\\t\\t\\t\\t\\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\treturn canvas.toDataURL( 'image/png' );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar output = {\\n\\t\\t\\t\\tmetadata: {\\n\\t\\t\\t\\t\\tversion: 4.4,\\n\\t\\t\\t\\t\\ttype: 'Texture',\\n\\t\\t\\t\\t\\tgenerator: 'Texture.toJSON'\\n\\t\\t\\t\\t},\\n\\n\\t\\t\\t\\tuuid: this.uuid,\\n\\t\\t\\t\\tname: this.name,\\n\\n\\t\\t\\t\\tmapping: this.mapping,\\n\\n\\t\\t\\t\\trepeat: [ this.repeat.x, this.repeat.y ],\\n\\t\\t\\t\\toffset: [ this.offset.x, this.offset.y ],\\n\\t\\t\\t\\twrap: [ this.wrapS, this.wrapT ],\\n\\n\\t\\t\\t\\tminFilter: this.minFilter,\\n\\t\\t\\t\\tmagFilter: this.magFilter,\\n\\t\\t\\t\\tanisotropy: this.anisotropy,\\n\\n\\t\\t\\t\\tflipY: this.flipY\\n\\t\\t\\t};\\n\\n\\t\\t\\tif ( this.image !== undefined ) {\\n\\n\\t\\t\\t\\t// TODO: Move to THREE.Image\\n\\n\\t\\t\\t\\tvar image = this.image;\\n\\n\\t\\t\\t\\tif ( image.uuid === undefined ) {\\n\\n\\t\\t\\t\\t\\timage.uuid = THREE.Math.generateUUID(); // UGH\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( meta.images[ image.uuid ] === undefined ) {\\n\\n\\t\\t\\t\\t\\tmeta.images[ image.uuid ] = {\\n\\t\\t\\t\\t\\t\\tuuid: image.uuid,\\n\\t\\t\\t\\t\\t\\turl: getDataURL( image )\\n\\t\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\toutput.image = image.uuid;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tmeta.textures[ this.uuid ] = output;\\n\\n\\t\\t\\treturn output;\\n\\n\\t\\t},\\n\\n\\t\\tdispose: function () {\\n\\n\\t\\t\\tthis.dispatchEvent( { type: 'dispose' } );\\n\\n\\t\\t},\\n\\n\\t\\ttransformUv: function ( uv ) {\\n\\n\\t\\t\\tif ( this.mapping !== THREE.UVMapping )  return;\\n\\n\\t\\t\\tuv.multiply( this.repeat );\\n\\t\\t\\tuv.add( this.offset );\\n\\n\\t\\t\\tif ( uv.x < 0 || uv.x > 1 ) {\\n\\n\\t\\t\\t\\tswitch ( this.wrapS ) {\\n\\n\\t\\t\\t\\t\\tcase THREE.RepeatWrapping:\\n\\n\\t\\t\\t\\t\\t\\tuv.x = uv.x - Math.floor( uv.x );\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\tcase THREE.ClampToEdgeWrapping:\\n\\n\\t\\t\\t\\t\\t\\tuv.x = uv.x < 0 ? 0 : 1;\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\tcase THREE.MirroredRepeatWrapping:\\n\\n\\t\\t\\t\\t\\t\\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tuv.x = Math.ceil( uv.x ) - uv.x;\\n\\n\\t\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\t\\tuv.x = uv.x - Math.floor( uv.x );\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( uv.y < 0 || uv.y > 1 ) {\\n\\n\\t\\t\\t\\tswitch ( this.wrapT ) {\\n\\n\\t\\t\\t\\t\\tcase THREE.RepeatWrapping:\\n\\n\\t\\t\\t\\t\\t\\tuv.y = uv.y - Math.floor( uv.y );\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\tcase THREE.ClampToEdgeWrapping:\\n\\n\\t\\t\\t\\t\\t\\tuv.y = uv.y < 0 ? 0 : 1;\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\tcase THREE.MirroredRepeatWrapping:\\n\\n\\t\\t\\t\\t\\t\\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tuv.y = Math.ceil( uv.y ) - uv.y;\\n\\n\\t\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\t\\tuv.y = uv.y - Math.floor( uv.y );\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( this.flipY ) {\\n\\n\\t\\t\\t\\tuv.y = 1 - uv.y;\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\tObject.assign( THREE.Texture.prototype, THREE.EventDispatcher.prototype );\\n\\n\\tTHREE.TextureIdCount = 0;\\n\\n\\t// File:src/textures/DepthTexture.js\\n\\n\\t/**\\n\\t * @author Matt DesLauriers / @mattdesl\\n\\t */\\n\\n\\tTHREE.DepthTexture = function ( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy ) {\\n\\n\\t  THREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, THREE.DepthFormat, type, anisotropy );\\n\\n\\t  this.image = { width: width, height: height };\\n\\n\\t  this.type = type !== undefined ? type : THREE.UnsignedShortType;\\n\\n\\t  this.magFilter = magFilter !== undefined ? magFilter : THREE.NearestFilter;\\n\\t  this.minFilter = minFilter !== undefined ? minFilter : THREE.NearestFilter;\\n\\n\\t  this.flipY = false;\\n\\t  this.generateMipmaps  = false;\\n\\n\\t};\\n\\n\\tTHREE.DepthTexture.prototype = Object.create( THREE.Texture.prototype );\\n\\tTHREE.DepthTexture.prototype.constructor = THREE.DepthTexture;\\n\\n\\t// File:src/textures/CanvasTexture.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t */\\n\\n\\tTHREE.CanvasTexture = function ( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\\n\\n\\t\\tTHREE.Texture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\\n\\n\\t\\tthis.needsUpdate = true;\\n\\n\\t};\\n\\n\\tTHREE.CanvasTexture.prototype = Object.create( THREE.Texture.prototype );\\n\\tTHREE.CanvasTexture.prototype.constructor = THREE.CanvasTexture;\\n\\n\\t// File:src/textures/CubeTexture.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t */\\n\\n\\tTHREE.CubeTexture = function ( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\\n\\n\\t\\timages = images !== undefined ? images : [];\\n\\t\\tmapping = mapping !== undefined ? mapping : THREE.CubeReflectionMapping;\\n\\n\\t\\tTHREE.Texture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\\n\\n\\t\\tthis.flipY = false;\\n\\n\\t};\\n\\n\\tTHREE.CubeTexture.prototype = Object.create( THREE.Texture.prototype );\\n\\tTHREE.CubeTexture.prototype.constructor = THREE.CubeTexture;\\n\\n\\tObject.defineProperty( THREE.CubeTexture.prototype, 'images', {\\n\\n\\t\\tget: function () {\\n\\n\\t\\t\\treturn this.image;\\n\\n\\t\\t},\\n\\n\\t\\tset: function ( value ) {\\n\\n\\t\\t\\tthis.image = value;\\n\\n\\t\\t}\\n\\n\\t} );\\n\\n\\t// File:src/textures/CompressedTexture.js\\n\\n\\t/**\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t */\\n\\n\\tTHREE.CompressedTexture = function ( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\\n\\n\\t\\tTHREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\\n\\n\\t\\tthis.image = { width: width, height: height };\\n\\t\\tthis.mipmaps = mipmaps;\\n\\n\\t\\t// no flipping for cube textures\\n\\t\\t// (also flipping doesn't work for compressed textures )\\n\\n\\t\\tthis.flipY = false;\\n\\n\\t\\t// can't generate mipmaps for compressed textures\\n\\t\\t// mips must be embedded in DDS files\\n\\n\\t\\tthis.generateMipmaps = false;\\n\\n\\t};\\n\\n\\tTHREE.CompressedTexture.prototype = Object.create( THREE.Texture.prototype );\\n\\tTHREE.CompressedTexture.prototype.constructor = THREE.CompressedTexture;\\n\\n\\t// File:src/textures/DataTexture.js\\n\\n\\t/**\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t */\\n\\n\\tTHREE.DataTexture = function ( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\\n\\n\\t\\tTHREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\\n\\n\\t\\tthis.image = { data: data, width: width, height: height };\\n\\n\\t\\tthis.magFilter = magFilter !== undefined ? magFilter : THREE.NearestFilter;\\n\\t\\tthis.minFilter = minFilter !== undefined ? minFilter : THREE.NearestFilter;\\n\\n\\t\\tthis.flipY = false;\\n\\t\\tthis.generateMipmaps  = false;\\n\\n\\t};\\n\\n\\tTHREE.DataTexture.prototype = Object.create( THREE.Texture.prototype );\\n\\tTHREE.DataTexture.prototype.constructor = THREE.DataTexture;\\n\\n\\t// File:src/textures/VideoTexture.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t */\\n\\n\\tTHREE.VideoTexture = function ( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\\n\\n\\t\\tTHREE.Texture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\\n\\n\\t\\tthis.generateMipmaps = false;\\n\\n\\t\\tvar scope = this;\\n\\n\\t\\tfunction update() {\\n\\n\\t\\t\\trequestAnimationFrame( update );\\n\\n\\t\\t\\tif ( video.readyState >= video.HAVE_CURRENT_DATA ) {\\n\\n\\t\\t\\t\\tscope.needsUpdate = true;\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tupdate();\\n\\n\\t};\\n\\n\\tTHREE.VideoTexture.prototype = Object.create( THREE.Texture.prototype );\\n\\tTHREE.VideoTexture.prototype.constructor = THREE.VideoTexture;\\n\\n\\t// File:src/objects/Group.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t */\\n\\n\\tTHREE.Group = function () {\\n\\n\\t\\tTHREE.Object3D.call( this );\\n\\n\\t\\tthis.type = 'Group';\\n\\n\\t};\\n\\n\\tTHREE.Group.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\\n\\n\\t\\tconstructor: THREE.Group\\n\\n\\t} );\\n\\n\\t// File:src/objects/Points.js\\n\\n\\t/**\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t */\\n\\n\\tTHREE.Points = function ( geometry, material ) {\\n\\n\\t\\tTHREE.Object3D.call( this );\\n\\n\\t\\tthis.type = 'Points';\\n\\n\\t\\tthis.geometry = geometry !== undefined ? geometry : new THREE.BufferGeometry();\\n\\t\\tthis.material = material !== undefined ? material : new THREE.PointsMaterial( { color: Math.random() * 0xffffff } );\\n\\n\\t};\\n\\n\\tTHREE.Points.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\\n\\n\\t\\tconstructor: THREE.Points,\\n\\n\\t\\traycast: ( function () {\\n\\n\\t\\t\\tvar inverseMatrix = new THREE.Matrix4();\\n\\t\\t\\tvar ray = new THREE.Ray();\\n\\t\\t\\tvar sphere = new THREE.Sphere();\\n\\n\\t\\t\\treturn function raycast( raycaster, intersects ) {\\n\\n\\t\\t\\t\\tvar object = this;\\n\\t\\t\\t\\tvar geometry = this.geometry;\\n\\t\\t\\t\\tvar matrixWorld = this.matrixWorld;\\n\\t\\t\\t\\tvar threshold = raycaster.params.Points.threshold;\\n\\n\\t\\t\\t\\t// Checking boundingSphere distance to ray\\n\\n\\t\\t\\t\\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\\n\\n\\t\\t\\t\\tsphere.copy( geometry.boundingSphere );\\n\\t\\t\\t\\tsphere.applyMatrix4( matrixWorld );\\n\\n\\t\\t\\t\\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\\n\\n\\t\\t\\t\\t//\\n\\n\\t\\t\\t\\tinverseMatrix.getInverse( matrixWorld );\\n\\t\\t\\t\\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\\n\\n\\t\\t\\t\\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\\n\\t\\t\\t\\tvar localThresholdSq = localThreshold * localThreshold;\\n\\t\\t\\t\\tvar position = new THREE.Vector3();\\n\\n\\t\\t\\t\\tfunction testPoint( point, index ) {\\n\\n\\t\\t\\t\\t\\tvar rayPointDistanceSq = ray.distanceSqToPoint( point );\\n\\n\\t\\t\\t\\t\\tif ( rayPointDistanceSq < localThresholdSq ) {\\n\\n\\t\\t\\t\\t\\t\\tvar intersectPoint = ray.closestPointToPoint( point );\\n\\t\\t\\t\\t\\t\\tintersectPoint.applyMatrix4( matrixWorld );\\n\\n\\t\\t\\t\\t\\t\\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\\n\\n\\t\\t\\t\\t\\t\\tif ( distance < raycaster.near || distance > raycaster.far ) return;\\n\\n\\t\\t\\t\\t\\t\\tintersects.push( {\\n\\n\\t\\t\\t\\t\\t\\t\\tdistance: distance,\\n\\t\\t\\t\\t\\t\\t\\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\\n\\t\\t\\t\\t\\t\\t\\tpoint: intersectPoint.clone(),\\n\\t\\t\\t\\t\\t\\t\\tindex: index,\\n\\t\\t\\t\\t\\t\\t\\tface: null,\\n\\t\\t\\t\\t\\t\\t\\tobject: object\\n\\n\\t\\t\\t\\t\\t\\t} );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( geometry instanceof THREE.BufferGeometry ) {\\n\\n\\t\\t\\t\\t\\tvar index = geometry.index;\\n\\t\\t\\t\\t\\tvar attributes = geometry.attributes;\\n\\t\\t\\t\\t\\tvar positions = attributes.position.array;\\n\\n\\t\\t\\t\\t\\tif ( index !== null ) {\\n\\n\\t\\t\\t\\t\\t\\tvar indices = index.array;\\n\\n\\t\\t\\t\\t\\t\\tfor ( var i = 0, il = indices.length; i < il; i ++ ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tvar a = indices[ i ];\\n\\n\\t\\t\\t\\t\\t\\t\\tposition.fromArray( positions, a * 3 );\\n\\n\\t\\t\\t\\t\\t\\t\\ttestPoint( position, a );\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\tfor ( var i = 0, l = positions.length / 3; i < l; i ++ ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tposition.fromArray( positions, i * 3 );\\n\\n\\t\\t\\t\\t\\t\\t\\ttestPoint( position, i );\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\tvar vertices = geometry.vertices;\\n\\n\\t\\t\\t\\t\\tfor ( var i = 0, l = vertices.length; i < l; i ++ ) {\\n\\n\\t\\t\\t\\t\\t\\ttestPoint( vertices[ i ], i );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t};\\n\\n\\t\\t}() ),\\n\\n\\t\\tclone: function () {\\n\\n\\t\\t\\treturn new this.constructor( this.geometry, this.material ).copy( this );\\n\\n\\t\\t}\\n\\n\\t} );\\n\\n\\t// File:src/objects/Line.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t */\\n\\n\\tTHREE.Line = function ( geometry, material, mode ) {\\n\\n\\t\\tif ( mode === 1 ) {\\n\\n\\t\\t\\tconsole.warn( 'THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.' );\\n\\t\\t\\treturn new THREE.LineSegments( geometry, material );\\n\\n\\t\\t}\\n\\n\\t\\tTHREE.Object3D.call( this );\\n\\n\\t\\tthis.type = 'Line';\\n\\n\\t\\tthis.geometry = geometry !== undefined ? geometry : new THREE.BufferGeometry();\\n\\t\\tthis.material = material !== undefined ? material : new THREE.LineBasicMaterial( { color: Math.random() * 0xffffff } );\\n\\n\\t};\\n\\n\\tTHREE.Line.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\\n\\n\\t\\tconstructor: THREE.Line,\\n\\n\\t\\traycast: ( function () {\\n\\n\\t\\t\\tvar inverseMatrix = new THREE.Matrix4();\\n\\t\\t\\tvar ray = new THREE.Ray();\\n\\t\\t\\tvar sphere = new THREE.Sphere();\\n\\n\\t\\t\\treturn function raycast( raycaster, intersects ) {\\n\\n\\t\\t\\t\\tvar precision = raycaster.linePrecision;\\n\\t\\t\\t\\tvar precisionSq = precision * precision;\\n\\n\\t\\t\\t\\tvar geometry = this.geometry;\\n\\t\\t\\t\\tvar matrixWorld = this.matrixWorld;\\n\\n\\t\\t\\t\\t// Checking boundingSphere distance to ray\\n\\n\\t\\t\\t\\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\\n\\n\\t\\t\\t\\tsphere.copy( geometry.boundingSphere );\\n\\t\\t\\t\\tsphere.applyMatrix4( matrixWorld );\\n\\n\\t\\t\\t\\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\\n\\n\\t\\t\\t\\t//\\n\\n\\t\\t\\t\\tinverseMatrix.getInverse( matrixWorld );\\n\\t\\t\\t\\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\\n\\n\\t\\t\\t\\tvar vStart = new THREE.Vector3();\\n\\t\\t\\t\\tvar vEnd = new THREE.Vector3();\\n\\t\\t\\t\\tvar interSegment = new THREE.Vector3();\\n\\t\\t\\t\\tvar interRay = new THREE.Vector3();\\n\\t\\t\\t\\tvar step = this instanceof THREE.LineSegments ? 2 : 1;\\n\\n\\t\\t\\t\\tif ( geometry instanceof THREE.BufferGeometry ) {\\n\\n\\t\\t\\t\\t\\tvar index = geometry.index;\\n\\t\\t\\t\\t\\tvar attributes = geometry.attributes;\\n\\t\\t\\t\\t\\tvar positions = attributes.position.array;\\n\\n\\t\\t\\t\\t\\tif ( index !== null ) {\\n\\n\\t\\t\\t\\t\\t\\tvar indices = index.array;\\n\\n\\t\\t\\t\\t\\t\\tfor ( var i = 0, l = indices.length - 1; i < l; i += step ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tvar a = indices[ i ];\\n\\t\\t\\t\\t\\t\\t\\tvar b = indices[ i + 1 ];\\n\\n\\t\\t\\t\\t\\t\\t\\tvStart.fromArray( positions, a * 3 );\\n\\t\\t\\t\\t\\t\\t\\tvEnd.fromArray( positions, b * 3 );\\n\\n\\t\\t\\t\\t\\t\\t\\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\\n\\n\\t\\t\\t\\t\\t\\t\\tif ( distSq > precisionSq ) continue;\\n\\n\\t\\t\\t\\t\\t\\t\\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\\n\\n\\t\\t\\t\\t\\t\\t\\tvar distance = raycaster.ray.origin.distanceTo( interRay );\\n\\n\\t\\t\\t\\t\\t\\t\\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\\n\\n\\t\\t\\t\\t\\t\\t\\tintersects.push( {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tdistance: distance,\\n\\t\\t\\t\\t\\t\\t\\t\\t// What do we want? intersection point on the ray or on the segment??\\n\\t\\t\\t\\t\\t\\t\\t\\t// point: raycaster.ray.at( distance ),\\n\\t\\t\\t\\t\\t\\t\\t\\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\\n\\t\\t\\t\\t\\t\\t\\t\\tindex: i,\\n\\t\\t\\t\\t\\t\\t\\t\\tface: null,\\n\\t\\t\\t\\t\\t\\t\\t\\tfaceIndex: null,\\n\\t\\t\\t\\t\\t\\t\\t\\tobject: this\\n\\n\\t\\t\\t\\t\\t\\t\\t} );\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\tfor ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tvStart.fromArray( positions, 3 * i );\\n\\t\\t\\t\\t\\t\\t\\tvEnd.fromArray( positions, 3 * i + 3 );\\n\\n\\t\\t\\t\\t\\t\\t\\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\\n\\n\\t\\t\\t\\t\\t\\t\\tif ( distSq > precisionSq ) continue;\\n\\n\\t\\t\\t\\t\\t\\t\\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\\n\\n\\t\\t\\t\\t\\t\\t\\tvar distance = raycaster.ray.origin.distanceTo( interRay );\\n\\n\\t\\t\\t\\t\\t\\t\\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\\n\\n\\t\\t\\t\\t\\t\\t\\tintersects.push( {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tdistance: distance,\\n\\t\\t\\t\\t\\t\\t\\t\\t// What do we want? intersection point on the ray or on the segment??\\n\\t\\t\\t\\t\\t\\t\\t\\t// point: raycaster.ray.at( distance ),\\n\\t\\t\\t\\t\\t\\t\\t\\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\\n\\t\\t\\t\\t\\t\\t\\t\\tindex: i,\\n\\t\\t\\t\\t\\t\\t\\t\\tface: null,\\n\\t\\t\\t\\t\\t\\t\\t\\tfaceIndex: null,\\n\\t\\t\\t\\t\\t\\t\\t\\tobject: this\\n\\n\\t\\t\\t\\t\\t\\t\\t} );\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t} else if ( geometry instanceof THREE.Geometry ) {\\n\\n\\t\\t\\t\\t\\tvar vertices = geometry.vertices;\\n\\t\\t\\t\\t\\tvar nbVertices = vertices.length;\\n\\n\\t\\t\\t\\t\\tfor ( var i = 0; i < nbVertices - 1; i += step ) {\\n\\n\\t\\t\\t\\t\\t\\tvar distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\\n\\n\\t\\t\\t\\t\\t\\tif ( distSq > precisionSq ) continue;\\n\\n\\t\\t\\t\\t\\t\\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\\n\\n\\t\\t\\t\\t\\t\\tvar distance = raycaster.ray.origin.distanceTo( interRay );\\n\\n\\t\\t\\t\\t\\t\\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\\n\\n\\t\\t\\t\\t\\t\\tintersects.push( {\\n\\n\\t\\t\\t\\t\\t\\t\\tdistance: distance,\\n\\t\\t\\t\\t\\t\\t\\t// What do we want? intersection point on the ray or on the segment??\\n\\t\\t\\t\\t\\t\\t\\t// point: raycaster.ray.at( distance ),\\n\\t\\t\\t\\t\\t\\t\\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\\n\\t\\t\\t\\t\\t\\t\\tindex: i,\\n\\t\\t\\t\\t\\t\\t\\tface: null,\\n\\t\\t\\t\\t\\t\\t\\tfaceIndex: null,\\n\\t\\t\\t\\t\\t\\t\\tobject: this\\n\\n\\t\\t\\t\\t\\t\\t} );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t};\\n\\n\\t\\t}() ),\\n\\n\\t\\tclone: function () {\\n\\n\\t\\t\\treturn new this.constructor( this.geometry, this.material ).copy( this );\\n\\n\\t\\t}\\n\\n\\t} );\\n\\n\\t// File:src/objects/LineSegments.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t */\\n\\n\\tTHREE.LineSegments = function ( geometry, material ) {\\n\\n\\t\\tTHREE.Line.call( this, geometry, material );\\n\\n\\t\\tthis.type = 'LineSegments';\\n\\n\\t};\\n\\n\\tTHREE.LineSegments.prototype = Object.assign( Object.create( THREE.Line.prototype ), {\\n\\n\\t\\tconstructor: THREE.LineSegments\\n\\n\\t} );\\n\\n\\t// File:src/objects/Mesh.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t * @author mikael emtinger / http://gomo.se/\\n\\t * @author jonobr1 / http://jonobr1.com/\\n\\t */\\n\\n\\tTHREE.Mesh = function ( geometry, material ) {\\n\\n\\t\\tTHREE.Object3D.call( this );\\n\\n\\t\\tthis.type = 'Mesh';\\n\\n\\t\\tthis.geometry = geometry !== undefined ? geometry : new THREE.BufferGeometry();\\n\\t\\tthis.material = material !== undefined ? material : new THREE.MeshBasicMaterial( { color: Math.random() * 0xffffff } );\\n\\n\\t\\tthis.drawMode = THREE.TrianglesDrawMode;\\n\\n\\t\\tthis.updateMorphTargets();\\n\\n\\t};\\n\\n\\tTHREE.Mesh.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\\n\\n\\t\\tconstructor: THREE.Mesh,\\n\\n\\t\\tsetDrawMode: function ( value ) {\\n\\n\\t\\t\\tthis.drawMode = value;\\n\\n\\t\\t},\\n\\n\\t\\tcopy: function ( source ) {\\n\\n\\t\\t\\tTHREE.Object3D.prototype.copy.call( this, source );\\n\\n\\t\\t\\tthis.drawMode = source.drawMode;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tupdateMorphTargets: function () {\\n\\n\\t\\t\\tif ( this.geometry.morphTargets !== undefined && this.geometry.morphTargets.length > 0 ) {\\n\\n\\t\\t\\t\\tthis.morphTargetBase = - 1;\\n\\t\\t\\t\\tthis.morphTargetInfluences = [];\\n\\t\\t\\t\\tthis.morphTargetDictionary = {};\\n\\n\\t\\t\\t\\tfor ( var m = 0, ml = this.geometry.morphTargets.length; m < ml; m ++ ) {\\n\\n\\t\\t\\t\\t\\tthis.morphTargetInfluences.push( 0 );\\n\\t\\t\\t\\t\\tthis.morphTargetDictionary[ this.geometry.morphTargets[ m ].name ] = m;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t},\\n\\n\\t\\tgetMorphTargetIndexByName: function ( name ) {\\n\\n\\t\\t\\tif ( this.morphTargetDictionary[ name ] !== undefined ) {\\n\\n\\t\\t\\t\\treturn this.morphTargetDictionary[ name ];\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tconsole.warn( 'THREE.Mesh.getMorphTargetIndexByName: morph target ' + name + ' does not exist. Returning 0.' );\\n\\n\\t\\t\\treturn 0;\\n\\n\\t\\t},\\n\\n\\t\\traycast: ( function () {\\n\\n\\t\\t\\tvar inverseMatrix = new THREE.Matrix4();\\n\\t\\t\\tvar ray = new THREE.Ray();\\n\\t\\t\\tvar sphere = new THREE.Sphere();\\n\\n\\t\\t\\tvar vA = new THREE.Vector3();\\n\\t\\t\\tvar vB = new THREE.Vector3();\\n\\t\\t\\tvar vC = new THREE.Vector3();\\n\\n\\t\\t\\tvar tempA = new THREE.Vector3();\\n\\t\\t\\tvar tempB = new THREE.Vector3();\\n\\t\\t\\tvar tempC = new THREE.Vector3();\\n\\n\\t\\t\\tvar uvA = new THREE.Vector2();\\n\\t\\t\\tvar uvB = new THREE.Vector2();\\n\\t\\t\\tvar uvC = new THREE.Vector2();\\n\\n\\t\\t\\tvar barycoord = new THREE.Vector3();\\n\\n\\t\\t\\tvar intersectionPoint = new THREE.Vector3();\\n\\t\\t\\tvar intersectionPointWorld = new THREE.Vector3();\\n\\n\\t\\t\\tfunction uvIntersection( point, p1, p2, p3, uv1, uv2, uv3 ) {\\n\\n\\t\\t\\t\\tTHREE.Triangle.barycoordFromPoint( point, p1, p2, p3, barycoord );\\n\\n\\t\\t\\t\\tuv1.multiplyScalar( barycoord.x );\\n\\t\\t\\t\\tuv2.multiplyScalar( barycoord.y );\\n\\t\\t\\t\\tuv3.multiplyScalar( barycoord.z );\\n\\n\\t\\t\\t\\tuv1.add( uv2 ).add( uv3 );\\n\\n\\t\\t\\t\\treturn uv1.clone();\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tfunction checkIntersection( object, raycaster, ray, pA, pB, pC, point ) {\\n\\n\\t\\t\\t\\tvar intersect;\\n\\t\\t\\t\\tvar material = object.material;\\n\\n\\t\\t\\t\\tif ( material.side === THREE.BackSide ) {\\n\\n\\t\\t\\t\\t\\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== THREE.DoubleSide, point );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( intersect === null ) return null;\\n\\n\\t\\t\\t\\tintersectionPointWorld.copy( point );\\n\\t\\t\\t\\tintersectionPointWorld.applyMatrix4( object.matrixWorld );\\n\\n\\t\\t\\t\\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\\n\\n\\t\\t\\t\\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\\n\\n\\t\\t\\t\\treturn {\\n\\t\\t\\t\\t\\tdistance: distance,\\n\\t\\t\\t\\t\\tpoint: intersectionPointWorld.clone(),\\n\\t\\t\\t\\t\\tobject: object\\n\\t\\t\\t\\t};\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tfunction checkBufferGeometryIntersection( object, raycaster, ray, positions, uvs, a, b, c ) {\\n\\n\\t\\t\\t\\tvA.fromArray( positions, a * 3 );\\n\\t\\t\\t\\tvB.fromArray( positions, b * 3 );\\n\\t\\t\\t\\tvC.fromArray( positions, c * 3 );\\n\\n\\t\\t\\t\\tvar intersection = checkIntersection( object, raycaster, ray, vA, vB, vC, intersectionPoint );\\n\\n\\t\\t\\t\\tif ( intersection ) {\\n\\n\\t\\t\\t\\t\\tif ( uvs ) {\\n\\n\\t\\t\\t\\t\\t\\tuvA.fromArray( uvs, a * 2 );\\n\\t\\t\\t\\t\\t\\tuvB.fromArray( uvs, b * 2 );\\n\\t\\t\\t\\t\\t\\tuvC.fromArray( uvs, c * 2 );\\n\\n\\t\\t\\t\\t\\t\\tintersection.uv = uvIntersection( intersectionPoint,  vA, vB, vC,  uvA, uvB, uvC );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tintersection.face = new THREE.Face3( a, b, c, THREE.Triangle.normal( vA, vB, vC ) );\\n\\t\\t\\t\\t\\tintersection.faceIndex = a;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn intersection;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn function raycast( raycaster, intersects ) {\\n\\n\\t\\t\\t\\tvar geometry = this.geometry;\\n\\t\\t\\t\\tvar material = this.material;\\n\\t\\t\\t\\tvar matrixWorld = this.matrixWorld;\\n\\n\\t\\t\\t\\tif ( material === undefined ) return;\\n\\n\\t\\t\\t\\t// Checking boundingSphere distance to ray\\n\\n\\t\\t\\t\\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\\n\\n\\t\\t\\t\\tsphere.copy( geometry.boundingSphere );\\n\\t\\t\\t\\tsphere.applyMatrix4( matrixWorld );\\n\\n\\t\\t\\t\\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\\n\\n\\t\\t\\t\\t//\\n\\n\\t\\t\\t\\tinverseMatrix.getInverse( matrixWorld );\\n\\t\\t\\t\\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\\n\\n\\t\\t\\t\\t// Check boundingBox before continuing\\n\\n\\t\\t\\t\\tif ( geometry.boundingBox !== null ) {\\n\\n\\t\\t\\t\\t\\tif ( ray.intersectsBox( geometry.boundingBox ) === false ) return;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tvar uvs, intersection;\\n\\n\\t\\t\\t\\tif ( geometry instanceof THREE.BufferGeometry ) {\\n\\n\\t\\t\\t\\t\\tvar a, b, c;\\n\\t\\t\\t\\t\\tvar index = geometry.index;\\n\\t\\t\\t\\t\\tvar attributes = geometry.attributes;\\n\\t\\t\\t\\t\\tvar positions = attributes.position.array;\\n\\n\\t\\t\\t\\t\\tif ( attributes.uv !== undefined ) {\\n\\n\\t\\t\\t\\t\\t\\tuvs = attributes.uv.array;\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tif ( index !== null ) {\\n\\n\\t\\t\\t\\t\\t\\tvar indices = index.array;\\n\\n\\t\\t\\t\\t\\t\\tfor ( var i = 0, l = indices.length; i < l; i += 3 ) {\\n\\n\\t\\t\\t\\t\\t\\t\\ta = indices[ i ];\\n\\t\\t\\t\\t\\t\\t\\tb = indices[ i + 1 ];\\n\\t\\t\\t\\t\\t\\t\\tc = indices[ i + 2 ];\\n\\n\\t\\t\\t\\t\\t\\t\\tintersection = checkBufferGeometryIntersection( this, raycaster, ray, positions, uvs, a, b, c );\\n\\n\\t\\t\\t\\t\\t\\t\\tif ( intersection ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indices buffer semantics\\n\\t\\t\\t\\t\\t\\t\\t\\tintersects.push( intersection );\\n\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t} else {\\n\\n\\n\\t\\t\\t\\t\\t\\tfor ( var i = 0, l = positions.length; i < l; i += 9 ) {\\n\\n\\t\\t\\t\\t\\t\\t\\ta = i / 3;\\n\\t\\t\\t\\t\\t\\t\\tb = a + 1;\\n\\t\\t\\t\\t\\t\\t\\tc = a + 2;\\n\\n\\t\\t\\t\\t\\t\\t\\tintersection = checkBufferGeometryIntersection( this, raycaster, ray, positions, uvs, a, b, c );\\n\\n\\t\\t\\t\\t\\t\\t\\tif ( intersection ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tintersection.index = a; // triangle number in positions buffer semantics\\n\\t\\t\\t\\t\\t\\t\\t\\tintersects.push( intersection );\\n\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t} else if ( geometry instanceof THREE.Geometry ) {\\n\\n\\t\\t\\t\\t\\tvar fvA, fvB, fvC;\\n\\t\\t\\t\\t\\tvar isFaceMaterial = material instanceof THREE.MultiMaterial;\\n\\t\\t\\t\\t\\tvar materials = isFaceMaterial === true ? material.materials : null;\\n\\n\\t\\t\\t\\t\\tvar vertices = geometry.vertices;\\n\\t\\t\\t\\t\\tvar faces = geometry.faces;\\n\\t\\t\\t\\t\\tvar faceVertexUvs = geometry.faceVertexUvs[ 0 ];\\n\\t\\t\\t\\t\\tif ( faceVertexUvs.length > 0 ) uvs = faceVertexUvs;\\n\\n\\t\\t\\t\\t\\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\\n\\n\\t\\t\\t\\t\\t\\tvar face = faces[ f ];\\n\\t\\t\\t\\t\\t\\tvar faceMaterial = isFaceMaterial === true ? materials[ face.materialIndex ] : material;\\n\\n\\t\\t\\t\\t\\t\\tif ( faceMaterial === undefined ) continue;\\n\\n\\t\\t\\t\\t\\t\\tfvA = vertices[ face.a ];\\n\\t\\t\\t\\t\\t\\tfvB = vertices[ face.b ];\\n\\t\\t\\t\\t\\t\\tfvC = vertices[ face.c ];\\n\\n\\t\\t\\t\\t\\t\\tif ( faceMaterial.morphTargets === true ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tvar morphTargets = geometry.morphTargets;\\n\\t\\t\\t\\t\\t\\t\\tvar morphInfluences = this.morphTargetInfluences;\\n\\n\\t\\t\\t\\t\\t\\t\\tvA.set( 0, 0, 0 );\\n\\t\\t\\t\\t\\t\\t\\tvB.set( 0, 0, 0 );\\n\\t\\t\\t\\t\\t\\t\\tvC.set( 0, 0, 0 );\\n\\n\\t\\t\\t\\t\\t\\t\\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tvar influence = morphInfluences[ t ];\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tif ( influence === 0 ) continue;\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tvar targets = morphTargets[ t ].vertices;\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tvA.addScaledVector( tempA.subVectors( targets[ face.a ], fvA ), influence );\\n\\t\\t\\t\\t\\t\\t\\t\\tvB.addScaledVector( tempB.subVectors( targets[ face.b ], fvB ), influence );\\n\\t\\t\\t\\t\\t\\t\\t\\tvC.addScaledVector( tempC.subVectors( targets[ face.c ], fvC ), influence );\\n\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\tvA.add( fvA );\\n\\t\\t\\t\\t\\t\\t\\tvB.add( fvB );\\n\\t\\t\\t\\t\\t\\t\\tvC.add( fvC );\\n\\n\\t\\t\\t\\t\\t\\t\\tfvA = vA;\\n\\t\\t\\t\\t\\t\\t\\tfvB = vB;\\n\\t\\t\\t\\t\\t\\t\\tfvC = vC;\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\tintersection = checkIntersection( this, raycaster, ray, fvA, fvB, fvC, intersectionPoint );\\n\\n\\t\\t\\t\\t\\t\\tif ( intersection ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tif ( uvs ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tvar uvs_f = uvs[ f ];\\n\\t\\t\\t\\t\\t\\t\\t\\tuvA.copy( uvs_f[ 0 ] );\\n\\t\\t\\t\\t\\t\\t\\t\\tuvB.copy( uvs_f[ 1 ] );\\n\\t\\t\\t\\t\\t\\t\\t\\tuvC.copy( uvs_f[ 2 ] );\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tintersection.uv = uvIntersection( intersectionPoint, fvA, fvB, fvC, uvA, uvB, uvC );\\n\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\tintersection.face = face;\\n\\t\\t\\t\\t\\t\\t\\tintersection.faceIndex = f;\\n\\t\\t\\t\\t\\t\\t\\tintersects.push( intersection );\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t};\\n\\n\\t\\t}() ),\\n\\n\\t\\tclone: function () {\\n\\n\\t\\t\\treturn new this.constructor( this.geometry, this.material ).copy( this );\\n\\n\\t\\t}\\n\\n\\t} );\\n\\n\\t// File:src/objects/Bone.js\\n\\n\\t/**\\n\\t * @author mikael emtinger / http://gomo.se/\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t * @author ikerr / http://verold.com\\n\\t */\\n\\n\\tTHREE.Bone = function ( skin ) {\\n\\n\\t\\tTHREE.Object3D.call( this );\\n\\n\\t\\tthis.type = 'Bone';\\n\\n\\t\\tthis.skin = skin;\\n\\n\\t};\\n\\n\\tTHREE.Bone.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\\n\\n\\t\\tconstructor: THREE.Bone,\\n\\n\\t\\tcopy: function ( source ) {\\n\\n\\t\\t\\tTHREE.Object3D.prototype.copy.call( this, source );\\n\\n\\t\\t\\tthis.skin = source.skin;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t}\\n\\n\\t} );\\n\\n\\t// File:src/objects/Skeleton.js\\n\\n\\t/**\\n\\t * @author mikael emtinger / http://gomo.se/\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t * @author michael guerrero / http://realitymeltdown.com\\n\\t * @author ikerr / http://verold.com\\n\\t */\\n\\n\\tTHREE.Skeleton = function ( bones, boneInverses, useVertexTexture ) {\\n\\n\\t\\tthis.useVertexTexture = useVertexTexture !== undefined ? useVertexTexture : true;\\n\\n\\t\\tthis.identityMatrix = new THREE.Matrix4();\\n\\n\\t\\t// copy the bone array\\n\\n\\t\\tbones = bones || [];\\n\\n\\t\\tthis.bones = bones.slice( 0 );\\n\\n\\t\\t// create a bone texture or an array of floats\\n\\n\\t\\tif ( this.useVertexTexture ) {\\n\\n\\t\\t\\t// layout (1 matrix = 4 pixels)\\n\\t\\t\\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\\n\\t\\t\\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\\n\\t\\t\\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\\n\\t\\t\\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\\n\\t\\t\\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\\n\\n\\n\\t\\t\\tvar size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\\n\\t\\t\\tsize = THREE.Math.nextPowerOfTwo( Math.ceil( size ) );\\n\\t\\t\\tsize = Math.max( size, 4 );\\n\\n\\t\\t\\tthis.boneTextureWidth = size;\\n\\t\\t\\tthis.boneTextureHeight = size;\\n\\n\\t\\t\\tthis.boneMatrices = new Float32Array( this.boneTextureWidth * this.boneTextureHeight * 4 ); // 4 floats per RGBA pixel\\n\\t\\t\\tthis.boneTexture = new THREE.DataTexture( this.boneMatrices, this.boneTextureWidth, this.boneTextureHeight, THREE.RGBAFormat, THREE.FloatType );\\n\\n\\t\\t} else {\\n\\n\\t\\t\\tthis.boneMatrices = new Float32Array( 16 * this.bones.length );\\n\\n\\t\\t}\\n\\n\\t\\t// use the supplied bone inverses or calculate the inverses\\n\\n\\t\\tif ( boneInverses === undefined ) {\\n\\n\\t\\t\\tthis.calculateInverses();\\n\\n\\t\\t} else {\\n\\n\\t\\t\\tif ( this.bones.length === boneInverses.length ) {\\n\\n\\t\\t\\t\\tthis.boneInverses = boneInverses.slice( 0 );\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\tconsole.warn( 'THREE.Skeleton bonInverses is the wrong length.' );\\n\\n\\t\\t\\t\\tthis.boneInverses = [];\\n\\n\\t\\t\\t\\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\\n\\n\\t\\t\\t\\t\\tthis.boneInverses.push( new THREE.Matrix4() );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\tObject.assign( THREE.Skeleton.prototype, {\\n\\n\\t\\tcalculateInverses: function () {\\n\\n\\t\\t\\tthis.boneInverses = [];\\n\\n\\t\\t\\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\\n\\n\\t\\t\\t\\tvar inverse = new THREE.Matrix4();\\n\\n\\t\\t\\t\\tif ( this.bones[ b ] ) {\\n\\n\\t\\t\\t\\t\\tinverse.getInverse( this.bones[ b ].matrixWorld );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tthis.boneInverses.push( inverse );\\n\\n\\t\\t\\t}\\n\\n\\t\\t},\\n\\n\\t\\tpose: function () {\\n\\n\\t\\t\\tvar bone;\\n\\n\\t\\t\\t// recover the bind-time world matrices\\n\\n\\t\\t\\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\\n\\n\\t\\t\\t\\tbone = this.bones[ b ];\\n\\n\\t\\t\\t\\tif ( bone ) {\\n\\n\\t\\t\\t\\t\\tbone.matrixWorld.getInverse( this.boneInverses[ b ] );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t// compute the local matrices, positions, rotations and scales\\n\\n\\t\\t\\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\\n\\n\\t\\t\\t\\tbone = this.bones[ b ];\\n\\n\\t\\t\\t\\tif ( bone ) {\\n\\n\\t\\t\\t\\t\\tif ( bone.parent instanceof THREE.Bone ) {\\n\\n\\t\\t\\t\\t\\t\\tbone.matrix.getInverse( bone.parent.matrixWorld );\\n\\t\\t\\t\\t\\t\\tbone.matrix.multiply( bone.matrixWorld );\\n\\n\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\tbone.matrix.copy( bone.matrixWorld );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t},\\n\\n\\t\\tupdate: ( function () {\\n\\n\\t\\t\\tvar offsetMatrix = new THREE.Matrix4();\\n\\n\\t\\t\\treturn function update() {\\n\\n\\t\\t\\t\\t// flatten bone matrices to array\\n\\n\\t\\t\\t\\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\\n\\n\\t\\t\\t\\t\\t// compute the offset between the current and the original transform\\n\\n\\t\\t\\t\\t\\tvar matrix = this.bones[ b ] ? this.bones[ b ].matrixWorld : this.identityMatrix;\\n\\n\\t\\t\\t\\t\\toffsetMatrix.multiplyMatrices( matrix, this.boneInverses[ b ] );\\n\\t\\t\\t\\t\\toffsetMatrix.toArray( this.boneMatrices, b * 16 );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( this.useVertexTexture ) {\\n\\n\\t\\t\\t\\t\\tthis.boneTexture.needsUpdate = true;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t};\\n\\n\\t\\t} )(),\\n\\n\\t\\tclone: function () {\\n\\n\\t\\t\\treturn new THREE.Skeleton( this.bones, this.boneInverses, this.useVertexTexture );\\n\\n\\t\\t}\\n\\n\\t} );\\n\\n\\t// File:src/objects/SkinnedMesh.js\\n\\n\\t/**\\n\\t * @author mikael emtinger / http://gomo.se/\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t * @author ikerr / http://verold.com\\n\\t */\\n\\n\\tTHREE.SkinnedMesh = function ( geometry, material, useVertexTexture ) {\\n\\n\\t\\tTHREE.Mesh.call( this, geometry, material );\\n\\n\\t\\tthis.type = 'SkinnedMesh';\\n\\n\\t\\tthis.bindMode = \\\"attached\\\";\\n\\t\\tthis.bindMatrix = new THREE.Matrix4();\\n\\t\\tthis.bindMatrixInverse = new THREE.Matrix4();\\n\\n\\t\\t// init bones\\n\\n\\t\\t// TODO: remove bone creation as there is no reason (other than\\n\\t\\t// convenience) for THREE.SkinnedMesh to do this.\\n\\n\\t\\tvar bones = [];\\n\\n\\t\\tif ( this.geometry && this.geometry.bones !== undefined ) {\\n\\n\\t\\t\\tvar bone, gbone;\\n\\n\\t\\t\\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++ b ) {\\n\\n\\t\\t\\t\\tgbone = this.geometry.bones[ b ];\\n\\n\\t\\t\\t\\tbone = new THREE.Bone( this );\\n\\t\\t\\t\\tbones.push( bone );\\n\\n\\t\\t\\t\\tbone.name = gbone.name;\\n\\t\\t\\t\\tbone.position.fromArray( gbone.pos );\\n\\t\\t\\t\\tbone.quaternion.fromArray( gbone.rotq );\\n\\t\\t\\t\\tif ( gbone.scl !== undefined ) bone.scale.fromArray( gbone.scl );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++ b ) {\\n\\n\\t\\t\\t\\tgbone = this.geometry.bones[ b ];\\n\\n\\t\\t\\t\\tif ( gbone.parent !== - 1 && gbone.parent !== null &&\\n\\t\\t\\t\\t\\t\\tbones[ gbone.parent ] !== undefined ) {\\n\\n\\t\\t\\t\\t\\tbones[ gbone.parent ].add( bones[ b ] );\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\tthis.add( bones[ b ] );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tthis.normalizeSkinWeights();\\n\\n\\t\\tthis.updateMatrixWorld( true );\\n\\t\\tthis.bind( new THREE.Skeleton( bones, undefined, useVertexTexture ), this.matrixWorld );\\n\\n\\t};\\n\\n\\n\\tTHREE.SkinnedMesh.prototype = Object.assign( Object.create( THREE.Mesh.prototype ), {\\n\\n\\t\\tconstructor: THREE.SkinnedMesh,\\n\\n\\t\\tbind: function( skeleton, bindMatrix ) {\\n\\n\\t\\t\\tthis.skeleton = skeleton;\\n\\n\\t\\t\\tif ( bindMatrix === undefined ) {\\n\\n\\t\\t\\t\\tthis.updateMatrixWorld( true );\\n\\n\\t\\t\\t\\tthis.skeleton.calculateInverses();\\n\\n\\t\\t\\t\\tbindMatrix = this.matrixWorld;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.bindMatrix.copy( bindMatrix );\\n\\t\\t\\tthis.bindMatrixInverse.getInverse( bindMatrix );\\n\\n\\t\\t},\\n\\n\\t\\tpose: function () {\\n\\n\\t\\t\\tthis.skeleton.pose();\\n\\n\\t\\t},\\n\\n\\t\\tnormalizeSkinWeights: function () {\\n\\n\\t\\t\\tif ( this.geometry instanceof THREE.Geometry ) {\\n\\n\\t\\t\\t\\tfor ( var i = 0; i < this.geometry.skinWeights.length; i ++ ) {\\n\\n\\t\\t\\t\\t\\tvar sw = this.geometry.skinWeights[ i ];\\n\\n\\t\\t\\t\\t\\tvar scale = 1.0 / sw.lengthManhattan();\\n\\n\\t\\t\\t\\t\\tif ( scale !== Infinity ) {\\n\\n\\t\\t\\t\\t\\t\\tsw.multiplyScalar( scale );\\n\\n\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\tsw.set( 1, 0, 0, 0 ); // do something reasonable\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t} else if ( this.geometry instanceof THREE.BufferGeometry ) {\\n\\n\\t\\t\\t\\tvar vec = new THREE.Vector4();\\n\\n\\t\\t\\t\\tvar skinWeight = this.geometry.attributes.skinWeight;\\n\\n\\t\\t\\t\\tfor ( var i = 0; i < skinWeight.count; i ++ ) {\\n\\n\\t\\t\\t\\t\\tvec.x = skinWeight.getX( i );\\n\\t\\t\\t\\t\\tvec.y = skinWeight.getY( i );\\n\\t\\t\\t\\t\\tvec.z = skinWeight.getZ( i );\\n\\t\\t\\t\\t\\tvec.w = skinWeight.getW( i );\\n\\n\\t\\t\\t\\t\\tvar scale = 1.0 / vec.lengthManhattan();\\n\\n\\t\\t\\t\\t\\tif ( scale !== Infinity ) {\\n\\n\\t\\t\\t\\t\\t\\tvec.multiplyScalar( scale );\\n\\n\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\tvec.set( 1, 0, 0, 0 ); // do something reasonable\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tskinWeight.setXYZW( i, vec.x, vec.y, vec.z, vec.w );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t},\\n\\n\\t\\tupdateMatrixWorld: function( force ) {\\n\\n\\t\\t\\tTHREE.Mesh.prototype.updateMatrixWorld.call( this, true );\\n\\n\\t\\t\\tif ( this.bindMode === \\\"attached\\\" ) {\\n\\n\\t\\t\\t\\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\\n\\n\\t\\t\\t} else if ( this.bindMode === \\\"detached\\\" ) {\\n\\n\\t\\t\\t\\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\tconsole.warn( 'THREE.SkinnedMesh unrecognized bindMode: ' + this.bindMode );\\n\\n\\t\\t\\t}\\n\\n\\t\\t},\\n\\n\\t\\tclone: function() {\\n\\n\\t\\t\\treturn new this.constructor( this.geometry, this.material, this.skeleton.useVertexTexture ).copy( this );\\n\\n\\t\\t}\\n\\n\\t} );\\n\\n\\t// File:src/objects/LOD.js\\n\\n\\t/**\\n\\t * @author mikael emtinger / http://gomo.se/\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t */\\n\\n\\tTHREE.LOD = function () {\\n\\n\\t\\tTHREE.Object3D.call( this );\\n\\n\\t\\tthis.type = 'LOD';\\n\\n\\t\\tObject.defineProperties( this, {\\n\\t\\t\\tlevels: {\\n\\t\\t\\t\\tenumerable: true,\\n\\t\\t\\t\\tvalue: []\\n\\t\\t\\t}\\n\\t\\t} );\\n\\n\\t};\\n\\n\\n\\tTHREE.LOD.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\\n\\n\\t\\tconstructor: THREE.LOD,\\n\\n\\t\\tcopy: function ( source ) {\\n\\n\\t\\t\\tTHREE.Object3D.prototype.copy.call( this, source, false );\\n\\n\\t\\t\\tvar levels = source.levels;\\n\\n\\t\\t\\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\\n\\n\\t\\t\\t\\tvar level = levels[ i ];\\n\\n\\t\\t\\t\\tthis.addLevel( level.object.clone(), level.distance );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\taddLevel: function ( object, distance ) {\\n\\n\\t\\t\\tif ( distance === undefined ) distance = 0;\\n\\n\\t\\t\\tdistance = Math.abs( distance );\\n\\n\\t\\t\\tvar levels = this.levels;\\n\\n\\t\\t\\tfor ( var l = 0; l < levels.length; l ++ ) {\\n\\n\\t\\t\\t\\tif ( distance < levels[ l ].distance ) {\\n\\n\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tlevels.splice( l, 0, { distance: distance, object: object } );\\n\\n\\t\\t\\tthis.add( object );\\n\\n\\t\\t},\\n\\n\\t\\tgetObjectForDistance: function ( distance ) {\\n\\n\\t\\t\\tvar levels = this.levels;\\n\\n\\t\\t\\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\\n\\n\\t\\t\\t\\tif ( distance < levels[ i ].distance ) {\\n\\n\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn levels[ i - 1 ].object;\\n\\n\\t\\t},\\n\\n\\t\\traycast: ( function () {\\n\\n\\t\\t\\tvar matrixPosition = new THREE.Vector3();\\n\\n\\t\\t\\treturn function raycast( raycaster, intersects ) {\\n\\n\\t\\t\\t\\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\\n\\n\\t\\t\\t\\tvar distance = raycaster.ray.origin.distanceTo( matrixPosition );\\n\\n\\t\\t\\t\\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\\n\\n\\t\\t\\t};\\n\\n\\t\\t}() ),\\n\\n\\t\\tupdate: function () {\\n\\n\\t\\t\\tvar v1 = new THREE.Vector3();\\n\\t\\t\\tvar v2 = new THREE.Vector3();\\n\\n\\t\\t\\treturn function update( camera ) {\\n\\n\\t\\t\\t\\tvar levels = this.levels;\\n\\n\\t\\t\\t\\tif ( levels.length > 1 ) {\\n\\n\\t\\t\\t\\t\\tv1.setFromMatrixPosition( camera.matrixWorld );\\n\\t\\t\\t\\t\\tv2.setFromMatrixPosition( this.matrixWorld );\\n\\n\\t\\t\\t\\t\\tvar distance = v1.distanceTo( v2 );\\n\\n\\t\\t\\t\\t\\tlevels[ 0 ].object.visible = true;\\n\\n\\t\\t\\t\\t\\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\\n\\n\\t\\t\\t\\t\\t\\tif ( distance >= levels[ i ].distance ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tlevels[ i - 1 ].object.visible = false;\\n\\t\\t\\t\\t\\t\\t\\tlevels[ i ].object.visible = true;\\n\\n\\t\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tfor ( ; i < l; i ++ ) {\\n\\n\\t\\t\\t\\t\\t\\tlevels[ i ].object.visible = false;\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t};\\n\\n\\t\\t}(),\\n\\n\\t\\ttoJSON: function ( meta ) {\\n\\n\\t\\t\\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\\n\\n\\t\\t\\tdata.object.levels = [];\\n\\n\\t\\t\\tvar levels = this.levels;\\n\\n\\t\\t\\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\\n\\n\\t\\t\\t\\tvar level = levels[ i ];\\n\\n\\t\\t\\t\\tdata.object.levels.push( {\\n\\t\\t\\t\\t\\tobject: level.object.uuid,\\n\\t\\t\\t\\t\\tdistance: level.distance\\n\\t\\t\\t\\t} );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn data;\\n\\n\\t\\t}\\n\\n\\t} );\\n\\n\\t// File:src/objects/Sprite.js\\n\\n\\t/**\\n\\t * @author mikael emtinger / http://gomo.se/\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t */\\n\\n\\tTHREE.Sprite = function ( material ) {\\n\\n\\t\\tTHREE.Object3D.call( this );\\n\\n\\t\\tthis.type = 'Sprite';\\n\\n\\t\\tthis.material = ( material !== undefined ) ? material : new THREE.SpriteMaterial();\\n\\n\\t};\\n\\n\\tTHREE.Sprite.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\\n\\n\\t\\tconstructor: THREE.Sprite,\\n\\n\\t\\traycast: ( function () {\\n\\n\\t\\t\\tvar matrixPosition = new THREE.Vector3();\\n\\n\\t\\t\\treturn function raycast( raycaster, intersects ) {\\n\\n\\t\\t\\t\\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\\n\\n\\t\\t\\t\\tvar distanceSq = raycaster.ray.distanceSqToPoint( matrixPosition );\\n\\t\\t\\t\\tvar guessSizeSq = this.scale.x * this.scale.y / 4;\\n\\n\\t\\t\\t\\tif ( distanceSq > guessSizeSq ) {\\n\\n\\t\\t\\t\\t\\treturn;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tintersects.push( {\\n\\n\\t\\t\\t\\t\\tdistance: Math.sqrt( distanceSq ),\\n\\t\\t\\t\\t\\tpoint: this.position,\\n\\t\\t\\t\\t\\tface: null,\\n\\t\\t\\t\\t\\tobject: this\\n\\n\\t\\t\\t\\t} );\\n\\n\\t\\t\\t};\\n\\n\\t\\t}() ),\\n\\n\\t\\tclone: function () {\\n\\n\\t\\t\\treturn new this.constructor( this.material ).copy( this );\\n\\n\\t\\t}\\n\\n\\t} );\\n\\n\\t// File:src/objects/LensFlare.js\\n\\n\\t/**\\n\\t * @author mikael emtinger / http://gomo.se/\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t */\\n\\n\\tTHREE.LensFlare = function ( texture, size, distance, blending, color ) {\\n\\n\\t\\tTHREE.Object3D.call( this );\\n\\n\\t\\tthis.lensFlares = [];\\n\\n\\t\\tthis.positionScreen = new THREE.Vector3();\\n\\t\\tthis.customUpdateCallback = undefined;\\n\\n\\t\\tif ( texture !== undefined ) {\\n\\n\\t\\t\\tthis.add( texture, size, distance, blending, color );\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\tTHREE.LensFlare.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\\n\\n\\t\\tconstructor: THREE.LensFlare,\\n\\n\\t\\tcopy: function ( source ) {\\n\\n\\t\\t\\tTHREE.Object3D.prototype.copy.call( this, source );\\n\\n\\t\\t\\tthis.positionScreen.copy( source.positionScreen );\\n\\t\\t\\tthis.customUpdateCallback = source.customUpdateCallback;\\n\\n\\t\\t\\tfor ( var i = 0, l = source.lensFlares.length; i < l; i ++ ) {\\n\\n\\t\\t\\t\\tthis.lensFlares.push( source.lensFlares[ i ] );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tadd: function ( texture, size, distance, blending, color, opacity ) {\\n\\n\\t\\t\\tif ( size === undefined ) size = - 1;\\n\\t\\t\\tif ( distance === undefined ) distance = 0;\\n\\t\\t\\tif ( opacity === undefined ) opacity = 1;\\n\\t\\t\\tif ( color === undefined ) color = new THREE.Color( 0xffffff );\\n\\t\\t\\tif ( blending === undefined ) blending = THREE.NormalBlending;\\n\\n\\t\\t\\tdistance = Math.min( distance, Math.max( 0, distance ) );\\n\\n\\t\\t\\tthis.lensFlares.push( {\\n\\t\\t\\t\\ttexture: texture,\\t// THREE.Texture\\n\\t\\t\\t\\tsize: size, \\t\\t// size in pixels (-1 = use texture.width)\\n\\t\\t\\t\\tdistance: distance, \\t// distance (0-1) from light source (0=at light source)\\n\\t\\t\\t\\tx: 0, y: 0, z: 0,\\t// screen position (-1 => 1) z = 0 is in front z = 1 is back\\n\\t\\t\\t\\tscale: 1, \\t\\t// scale\\n\\t\\t\\t\\trotation: 0, \\t\\t// rotation\\n\\t\\t\\t\\topacity: opacity,\\t// opacity\\n\\t\\t\\t\\tcolor: color,\\t\\t// color\\n\\t\\t\\t\\tblending: blending\\t// blending\\n\\t\\t\\t} );\\n\\n\\t\\t},\\n\\n\\t\\t/*\\n\\t\\t * Update lens flares update positions on all flares based on the screen position\\n\\t\\t * Set myLensFlare.customUpdateCallback to alter the flares in your project specific way.\\n\\t\\t */\\n\\n\\t\\tupdateLensFlares: function () {\\n\\n\\t\\t\\tvar f, fl = this.lensFlares.length;\\n\\t\\t\\tvar flare;\\n\\t\\t\\tvar vecX = - this.positionScreen.x * 2;\\n\\t\\t\\tvar vecY = - this.positionScreen.y * 2;\\n\\n\\t\\t\\tfor ( f = 0; f < fl; f ++ ) {\\n\\n\\t\\t\\t\\tflare = this.lensFlares[ f ];\\n\\n\\t\\t\\t\\tflare.x = this.positionScreen.x + vecX * flare.distance;\\n\\t\\t\\t\\tflare.y = this.positionScreen.y + vecY * flare.distance;\\n\\n\\t\\t\\t\\tflare.wantedRotation = flare.x * Math.PI * 0.25;\\n\\t\\t\\t\\tflare.rotation += ( flare.wantedRotation - flare.rotation ) * 0.25;\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t} );\\n\\n\\t// File:src/scenes/Scene.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t */\\n\\n\\tTHREE.Scene = function () {\\n\\n\\t\\tTHREE.Object3D.call( this );\\n\\n\\t\\tthis.type = 'Scene';\\n\\n\\t\\tthis.background = null;\\n\\t\\tthis.fog = null;\\n\\t\\tthis.overrideMaterial = null;\\n\\n\\t\\tthis.autoUpdate = true; // checked by the renderer\\n\\n\\t};\\n\\n\\tTHREE.Scene.prototype = Object.create( THREE.Object3D.prototype );\\n\\tTHREE.Scene.prototype.constructor = THREE.Scene;\\n\\n\\tTHREE.Scene.prototype.copy = function ( source, recursive ) {\\n\\n\\t\\tTHREE.Object3D.prototype.copy.call( this, source, recursive );\\n\\n\\t\\tif ( source.background !== null ) this.background = source.background.clone();\\n\\t\\tif ( source.fog !== null ) this.fog = source.fog.clone();\\n\\t\\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\\n\\n\\t\\tthis.autoUpdate = source.autoUpdate;\\n\\t\\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\\n\\n\\t\\treturn this;\\n\\n\\t};\\n\\n\\t// File:src/scenes/Fog.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t */\\n\\n\\tTHREE.Fog = function ( color, near, far ) {\\n\\n\\t\\tthis.name = '';\\n\\n\\t\\tthis.color = new THREE.Color( color );\\n\\n\\t\\tthis.near = ( near !== undefined ) ? near : 1;\\n\\t\\tthis.far = ( far !== undefined ) ? far : 1000;\\n\\n\\t};\\n\\n\\tTHREE.Fog.prototype.clone = function () {\\n\\n\\t\\treturn new THREE.Fog( this.color.getHex(), this.near, this.far );\\n\\n\\t};\\n\\n\\t// File:src/scenes/FogExp2.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t */\\n\\n\\tTHREE.FogExp2 = function ( color, density ) {\\n\\n\\t\\tthis.name = '';\\n\\n\\t\\tthis.color = new THREE.Color( color );\\n\\t\\tthis.density = ( density !== undefined ) ? density : 0.00025;\\n\\n\\t};\\n\\n\\tTHREE.FogExp2.prototype.clone = function () {\\n\\n\\t\\treturn new THREE.FogExp2( this.color.getHex(), this.density );\\n\\n\\t};\\n\\n\\t// File:src/renderers/shaders/ShaderChunk.js\\n\\n\\tTHREE.ShaderChunk = {};\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/alphamap_fragment.glsl\\n\\n\\tTHREE.ShaderChunk[ 'alphamap_fragment' ] = \\\"#ifdef USE_ALPHAMAP\\\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\\\n#endif\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/alphamap_pars_fragment.glsl\\n\\n\\tTHREE.ShaderChunk[ 'alphamap_pars_fragment' ] = \\\"#ifdef USE_ALPHAMAP\\\\n\\tuniform sampler2D alphaMap;\\\\n#endif\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/alphatest_fragment.glsl\\n\\n\\tTHREE.ShaderChunk[ 'alphatest_fragment' ] = \\\"#ifdef ALPHATEST\\\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\\\n#endif\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/aomap_fragment.glsl\\n\\n\\tTHREE.ShaderChunk[ 'aomap_fragment' ] = \\\"#ifdef USE_AOMAP\\\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\\\n\\t#endif\\\\n#endif\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/aomap_pars_fragment.glsl\\n\\n\\tTHREE.ShaderChunk[ 'aomap_pars_fragment' ] = \\\"#ifdef USE_AOMAP\\\\n\\tuniform sampler2D aoMap;\\\\n\\tuniform float aoMapIntensity;\\\\n#endif\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/begin_vertex.glsl\\n\\n\\tTHREE.ShaderChunk[ 'begin_vertex' ] = \\\"\\\\nvec3 transformed = vec3( position );\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/beginnormal_vertex.glsl\\n\\n\\tTHREE.ShaderChunk[ 'beginnormal_vertex' ] = \\\"\\\\nvec3 objectNormal = vec3( normal );\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/bsdfs.glsl\\n\\n\\tTHREE.ShaderChunk[ 'bsdfs' ] = \\\"bool testLightInRange( const in float lightDistance, const in float cutoffDistance ) {\\\\n\\treturn any( bvec2( cutoffDistance == 0.0, lightDistance < cutoffDistance ) );\\\\n}\\\\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\\\n\\t\\tif( decayExponent > 0.0 ) {\\\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\\\n\\t\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\\\n\\t\\t\\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\\\n\\t\\t\\treturn distanceFalloff * maxDistanceCutoffFactor;\\\\n#else\\\\n\\t\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\\\n#endif\\\\n\\t\\t}\\\\n\\t\\treturn 1.0;\\\\n}\\\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\\\n\\treturn RECIPROCAL_PI * diffuseColor;\\\\n}\\\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\\\n}\\\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\\\n\\tfloat a2 = pow2( alpha );\\\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\\\n\\treturn 1.0 / ( gl * gv );\\\\n}\\\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\\\n\\tfloat a2 = pow2( alpha );\\\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\\\n}\\\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\\\n\\tfloat a2 = pow2( alpha );\\\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\\\n}\\\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\\\n\\tfloat alpha = pow2( roughness );\\\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\\\n\\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\\\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\\\n\\tfloat D = D_GGX( alpha, dotNH );\\\\n\\treturn F * ( G * D );\\\\n}\\\\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\\\n\\tvec4 r = roughness * c0 + c1;\\\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\\\n\\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\\\\n\\treturn specularColor * AB.x + AB.y;\\\\n}\\\\nfloat G_BlinnPhong_Implicit( ) {\\\\n\\treturn 0.25;\\\\n}\\\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\\\n}\\\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\\\n\\tfloat G = G_BlinnPhong_Implicit( );\\\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\\\n\\treturn F * ( G * D );\\\\n}\\\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\\\n}\\\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\\\n}\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/bumpmap_pars_fragment.glsl\\n\\n\\tTHREE.ShaderChunk[ 'bumpmap_pars_fragment' ] = \\\"#ifdef USE_BUMPMAP\\\\n\\tuniform sampler2D bumpMap;\\\\n\\tuniform float bumpScale;\\\\n\\tvec2 dHdxy_fwd() {\\\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\\\n\\t\\treturn vec2( dBx, dBy );\\\\n\\t}\\\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\\\n\\t\\tvec3 vSigmaX = dFdx( surf_pos );\\\\n\\t\\tvec3 vSigmaY = dFdy( surf_pos );\\\\n\\t\\tvec3 vN = surf_norm;\\\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\\\n\\t}\\\\n#endif\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/clipping_planes_fragment.glsl\\n\\n\\tTHREE.ShaderChunk[ 'clipping_planes_fragment' ] = \\\"#if NUM_CLIPPING_PLANES > 0\\\\n\\tfor ( int i = 0; i < NUM_CLIPPING_PLANES; ++ i ) {\\\\n\\t\\tvec4 plane = clippingPlanes[ i ];\\\\n\\t\\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\\\\n\\t}\\\\n#endif\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/clipping_planes_pars_fragment.glsl\\n\\n\\tTHREE.ShaderChunk[ 'clipping_planes_pars_fragment' ] = \\\"#if NUM_CLIPPING_PLANES > 0\\\\n\\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\\\\n\\t\\tvarying vec3 vViewPosition;\\\\n\\t#endif\\\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\\\n#endif\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/clipping_planes_pars_vertex.glsl\\n\\n\\tTHREE.ShaderChunk[ 'clipping_planes_pars_vertex' ] = \\\"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\\\n\\tvarying vec3 vViewPosition;\\\\n#endif\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/clipping_planes_vertex.glsl\\n\\n\\tTHREE.ShaderChunk[ 'clipping_planes_vertex' ] = \\\"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\\\n\\tvViewPosition = - mvPosition.xyz;\\\\n#endif\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/color_fragment.glsl\\n\\n\\tTHREE.ShaderChunk[ 'color_fragment' ] = \\\"#ifdef USE_COLOR\\\\n\\tdiffuseColor.rgb *= vColor;\\\\n#endif\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/color_pars_fragment.glsl\\n\\n\\tTHREE.ShaderChunk[ 'color_pars_fragment' ] = \\\"#ifdef USE_COLOR\\\\n\\tvarying vec3 vColor;\\\\n#endif\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/color_pars_vertex.glsl\\n\\n\\tTHREE.ShaderChunk[ 'color_pars_vertex' ] = \\\"#ifdef USE_COLOR\\\\n\\tvarying vec3 vColor;\\\\n#endif\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/color_vertex.glsl\\n\\n\\tTHREE.ShaderChunk[ 'color_vertex' ] = \\\"#ifdef USE_COLOR\\\\n\\tvColor.xyz = color.xyz;\\\\n#endif\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/common.glsl\\n\\n\\tTHREE.ShaderChunk[ 'common' ] = \\\"#define PI 3.14159265359\\\\n#define PI2 6.28318530718\\\\n#define RECIPROCAL_PI 0.31830988618\\\\n#define RECIPROCAL_PI2 0.15915494\\\\n#define LOG2 1.442695\\\\n#define EPSILON 1e-6\\\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\\\nfloat pow2( const in float x ) { return x*x; }\\\\nfloat pow3( const in float x ) { return x*x*x; }\\\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\\\nhighp float rand( const in vec2 uv ) {\\\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\\\n\\treturn fract(sin(sn) * c);\\\\n}\\\\nstruct IncidentLight {\\\\n\\tvec3 color;\\\\n\\tvec3 direction;\\\\n\\tbool visible;\\\\n};\\\\nstruct ReflectedLight {\\\\n\\tvec3 directDiffuse;\\\\n\\tvec3 directSpecular;\\\\n\\tvec3 indirectDiffuse;\\\\n\\tvec3 indirectSpecular;\\\\n};\\\\nstruct GeometricContext {\\\\n\\tvec3 position;\\\\n\\tvec3 normal;\\\\n\\tvec3 viewDir;\\\\n};\\\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\\\n}\\\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\\\n}\\\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\\\n\\treturn - distance * planeNormal + point;\\\\n}\\\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\\\n}\\\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\\\n}\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/cube_uv_reflection_fragment.glsl\\n\\n\\tTHREE.ShaderChunk[ 'cube_uv_reflection_fragment' ] = \\\"#ifdef ENVMAP_TYPE_CUBE_UV\\\\n#define cubeUV_textureSize (1024.0)\\\\nint getFaceFromDirection(vec3 direction) {\\\\n\\tvec3 absDirection = abs(direction);\\\\n\\tint face = -1;\\\\n\\tif( absDirection.x > absDirection.z ) {\\\\n\\t\\tif(absDirection.x > absDirection.y )\\\\n\\t\\t\\tface = direction.x > 0.0 ? 0 : 3;\\\\n\\t\\telse\\\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\\\n\\t}\\\\n\\telse {\\\\n\\t\\tif(absDirection.z > absDirection.y )\\\\n\\t\\t\\tface = direction.z > 0.0 ? 2 : 5;\\\\n\\t\\telse\\\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\\\n\\t}\\\\n\\treturn face;\\\\n}\\\\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\\\\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\\\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\\\n\\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\\\n\\tfloat dxRoughness = dFdx(roughness);\\\\n\\tfloat dyRoughness = dFdy(roughness);\\\\n\\tvec3 dx = dFdx( vec * scale * dxRoughness );\\\\n\\tvec3 dy = dFdy( vec * scale * dyRoughness );\\\\n\\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\\\\n\\td = clamp(d, 1.0, cubeUV_rangeClamp);\\\\n\\tfloat mipLevel = 0.5 * log2(d);\\\\n\\treturn vec2(floor(mipLevel), fract(mipLevel));\\\\n}\\\\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\\\\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\\\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\\\n\\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\\\n\\tfloat a = 16.0 * cubeUV_rcpTextureSize;\\\\n\\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\\\n\\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\\\\n\\tfloat powScale = exp2_packed.x * exp2_packed.y;\\\\n\\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\\\n\\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\\\n\\tbool bRes = mipLevel == 0.0;\\\\n\\tscale =  bRes && (scale < a) ? a : scale;\\\\n\\tvec3 r;\\\\n\\tvec2 offset;\\\\n\\tint face = getFaceFromDirection(direction);\\\\n\\tfloat rcpPowScale = 1.0 / powScale;\\\\n\\tif( face == 0) {\\\\n\\t\\tr = vec3(direction.x, -direction.z, direction.y);\\\\n\\t\\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\\\\n\\t}\\\\n\\telse if( face == 1) {\\\\n\\t\\tr = vec3(direction.y, direction.x, direction.z);\\\\n\\t\\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\\\\n\\t}\\\\n\\telse if( face == 2) {\\\\n\\t\\tr = vec3(direction.z, direction.x, direction.y);\\\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\\\\n\\t}\\\\n\\telse if( face == 3) {\\\\n\\t\\tr = vec3(direction.x, direction.z, direction.y);\\\\n\\t\\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\\\\n\\t}\\\\n\\telse if( face == 4) {\\\\n\\t\\tr = vec3(direction.y, direction.x, -direction.z);\\\\n\\t\\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\\\\n\\t}\\\\n\\telse {\\\\n\\t\\tr = vec3(direction.z, -direction.x, direction.y);\\\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\\\\n\\t}\\\\n\\tr = normalize(r);\\\\n\\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\\\\n\\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\\\n\\tvec2 base = offset + vec2( texelOffset );\\\\n\\treturn base + s * ( scale - 2.0 * texelOffset );\\\\n}\\\\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\\\\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\\\\n\\tfloat roughnessVal = roughness* cubeUV_maxLods3;\\\\n\\tfloat r1 = floor(roughnessVal);\\\\n\\tfloat r2 = r1 + 1.0;\\\\n\\tfloat t = fract(roughnessVal);\\\\n\\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\\\n\\tfloat s = mipInfo.y;\\\\n\\tfloat level0 = mipInfo.x;\\\\n\\tfloat level1 = level0 + 1.0;\\\\n\\tlevel1 = level1 > 5.0 ? 5.0 : level1;\\\\n\\tlevel0 += min( floor( s + 0.5 ), 5.0 );\\\\n\\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\\\n\\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\\\n\\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\\\n\\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\\\n\\tvec4 result = mix(color10, color20, t);\\\\n\\treturn vec4(result.rgb, 1.0);\\\\n}\\\\n#endif\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/defaultnormal_vertex.glsl\\n\\n\\tTHREE.ShaderChunk[ 'defaultnormal_vertex' ] = \\\"#ifdef FLIP_SIDED\\\\n\\tobjectNormal = -objectNormal;\\\\n#endif\\\\nvec3 transformedNormal = normalMatrix * objectNormal;\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/displacementmap_vertex.glsl\\n\\n\\tTHREE.ShaderChunk[ 'displacementmap_vertex' ] = \\\"#ifdef USE_DISPLACEMENTMAP\\\\n\\ttransformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\\\n#endif\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/displacementmap_pars_vertex.glsl\\n\\n\\tTHREE.ShaderChunk[ 'displacementmap_pars_vertex' ] = \\\"#ifdef USE_DISPLACEMENTMAP\\\\n\\tuniform sampler2D displacementMap;\\\\n\\tuniform float displacementScale;\\\\n\\tuniform float displacementBias;\\\\n#endif\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/emissivemap_fragment.glsl\\n\\n\\tTHREE.ShaderChunk[ 'emissivemap_fragment' ] = \\\"#ifdef USE_EMISSIVEMAP\\\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\\\n#endif\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/emissivemap_pars_fragment.glsl\\n\\n\\tTHREE.ShaderChunk[ 'emissivemap_pars_fragment' ] = \\\"#ifdef USE_EMISSIVEMAP\\\\n\\tuniform sampler2D emissiveMap;\\\\n#endif\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/encodings_pars_fragment.glsl\\n\\n\\tTHREE.ShaderChunk[ 'encodings_pars_fragment' ] = \\\"\\\\nvec4 LinearToLinear( in vec4 value ) {\\\\n  return value;\\\\n}\\\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\\\n  return vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\\\\n}\\\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\\\n  return vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\\\\n}\\\\nvec4 sRGBToLinear( in vec4 value ) {\\\\n  return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\\\\n}\\\\nvec4 LinearTosRGB( in vec4 value ) {\\\\n  return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\\\\n}\\\\nvec4 RGBEToLinear( in vec4 value ) {\\\\n  return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\\\n}\\\\nvec4 LinearToRGBE( in vec4 value ) {\\\\n  float maxComponent = max( max( value.r, value.g ), value.b );\\\\n  float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\\\n  return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\\\n}\\\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\\\n  return vec4( value.xyz * value.w * maxRange, 1.0 );\\\\n}\\\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\\\n  float maxRGB = max( value.x, max( value.g, value.b ) );\\\\n  float M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\\\\n  M            = ceil( M * 255.0 ) / 255.0;\\\\n  return vec4( value.rgb / ( M * maxRange ), M );\\\\n}\\\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\\\n    return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\\\n}\\\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\\\n    float maxRGB = max( value.x, max( value.g, value.b ) );\\\\n    float D      = max( maxRange / maxRGB, 1.0 );\\\\n    D            = min( floor( D ) / 255.0, 1.0 );\\\\n    return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\\\n}\\\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\\\nvec4 LinearToLogLuv( in vec4 value )  {\\\\n  vec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\\\\n  Xp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\\\\n  vec4 vResult;\\\\n  vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\\\n  float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\\\n  vResult.w = fract(Le);\\\\n  vResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\\\\n  return vResult;\\\\n}\\\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\\\nvec4 LogLuvToLinear( in vec4 value ) {\\\\n  float Le = value.z * 255.0 + value.w;\\\\n  vec3 Xp_Y_XYZp;\\\\n  Xp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\\\\n  Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\\\n  Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\\\n  vec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\\\\n  return vec4( max(vRGB, 0.0), 1.0 );\\\\n}\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/encodings_fragment.glsl\\n\\n\\tTHREE.ShaderChunk[ 'encodings_fragment' ] = \\\"  gl_FragColor = linearToOutputTexel( gl_FragColor );\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/envmap_fragment.glsl\\n\\n\\tTHREE.ShaderChunk[ 'envmap_fragment' ] = \\\"#ifdef USE_ENVMAP\\\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\\\n\\t\\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\\\n\\t\\t#else\\\\n\\t\\t\\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\\\n\\t\\t#endif\\\\n\\t#else\\\\n\\t\\tvec3 reflectVec = vReflect;\\\\n\\t#endif\\\\n\\t#ifdef ENVMAP_TYPE_CUBE\\\\n\\t\\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\\\n\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\\\n\\t\\tvec2 sampleUV;\\\\n\\t\\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\\\n\\t\\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\\\n\\t\\tvec4 envColor = texture2D( envMap, sampleUV );\\\\n\\t#elif defined( ENVMAP_TYPE_SPHERE )\\\\n\\t\\tvec3 reflectView = flipNormal * normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\\\\n\\t\\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\\\n\\t#endif\\\\n\\tenvColor = envMapTexelToLinear( envColor );\\\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\\\n\\t#endif\\\\n#endif\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/envmap_pars_fragment.glsl\\n\\n\\tTHREE.ShaderChunk[ 'envmap_pars_fragment' ] = \\\"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\\\\n\\tuniform float reflectivity;\\\\n\\tuniform float envMapIntenstiy;\\\\n#endif\\\\n#ifdef USE_ENVMAP\\\\n\\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\\\\n\\t\\tvarying vec3 vWorldPosition;\\\\n\\t#endif\\\\n\\t#ifdef ENVMAP_TYPE_CUBE\\\\n\\t\\tuniform samplerCube envMap;\\\\n\\t#else\\\\n\\t\\tuniform sampler2D envMap;\\\\n\\t#endif\\\\n\\tuniform float flipEnvMap;\\\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\\\\n\\t\\tuniform float refractionRatio;\\\\n\\t#else\\\\n\\t\\tvarying vec3 vReflect;\\\\n\\t#endif\\\\n#endif\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/envmap_pars_vertex.glsl\\n\\n\\tTHREE.ShaderChunk[ 'envmap_pars_vertex' ] = \\\"#ifdef USE_ENVMAP\\\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\\\n\\t\\tvarying vec3 vWorldPosition;\\\\n\\t#else\\\\n\\t\\tvarying vec3 vReflect;\\\\n\\t\\tuniform float refractionRatio;\\\\n\\t#endif\\\\n#endif\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/envmap_vertex.glsl\\n\\n\\tTHREE.ShaderChunk[ 'envmap_vertex' ] = \\\"#ifdef USE_ENVMAP\\\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\\\n\\t\\tvWorldPosition = worldPosition.xyz;\\\\n\\t#else\\\\n\\t\\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\\\n\\t\\t#else\\\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\\\n\\t\\t#endif\\\\n\\t#endif\\\\n#endif\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/fog_fragment.glsl\\n\\n\\tTHREE.ShaderChunk[ 'fog_fragment' ] = \\\"#ifdef USE_FOG\\\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\\\n\\t\\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\\\\n\\t#else\\\\n\\t\\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\\\n\\t#endif\\\\n\\t#ifdef FOG_EXP2\\\\n\\t\\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );\\\\n\\t#else\\\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\\\\n\\t#endif\\\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\\\n#endif\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/fog_pars_fragment.glsl\\n\\n\\tTHREE.ShaderChunk[ 'fog_pars_fragment' ] = \\\"#ifdef USE_FOG\\\\n\\tuniform vec3 fogColor;\\\\n\\t#ifdef FOG_EXP2\\\\n\\t\\tuniform float fogDensity;\\\\n\\t#else\\\\n\\t\\tuniform float fogNear;\\\\n\\t\\tuniform float fogFar;\\\\n\\t#endif\\\\n#endif\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/lightmap_fragment.glsl\\n\\n\\tTHREE.ShaderChunk[ 'lightmap_fragment' ] = \\\"#ifdef USE_LIGHTMAP\\\\n\\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\\\n#endif\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/lightmap_pars_fragment.glsl\\n\\n\\tTHREE.ShaderChunk[ 'lightmap_pars_fragment' ] = \\\"#ifdef USE_LIGHTMAP\\\\n\\tuniform sampler2D lightMap;\\\\n\\tuniform float lightMapIntensity;\\\\n#endif\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/lights_lambert_vertex.glsl\\n\\n\\tTHREE.ShaderChunk[ 'lights_lambert_vertex' ] = \\\"vec3 diffuse = vec3( 1.0 );\\\\nGeometricContext geometry;\\\\ngeometry.position = mvPosition.xyz;\\\\ngeometry.normal = normalize( transformedNormal );\\\\ngeometry.viewDir = normalize( -mvPosition.xyz );\\\\nGeometricContext backGeometry;\\\\nbackGeometry.position = geometry.position;\\\\nbackGeometry.normal = -geometry.normal;\\\\nbackGeometry.viewDir = geometry.viewDir;\\\\nvLightFront = vec3( 0.0 );\\\\n#ifdef DOUBLE_SIDED\\\\n\\tvLightBack = vec3( 0.0 );\\\\n#endif\\\\nIncidentLight directLight;\\\\nfloat dotNL;\\\\nvec3 directLightColor_Diffuse;\\\\n#if NUM_POINT_LIGHTS > 0\\\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\\\n\\t\\t#ifdef DOUBLE_SIDED\\\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\\\n\\t\\t#endif\\\\n\\t}\\\\n#endif\\\\n#if NUM_SPOT_LIGHTS > 0\\\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\\\n\\t\\t#ifdef DOUBLE_SIDED\\\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\\\n\\t\\t#endif\\\\n\\t}\\\\n#endif\\\\n#if NUM_DIR_LIGHTS > 0\\\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\\\n\\t\\t#ifdef DOUBLE_SIDED\\\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\\\n\\t\\t#endif\\\\n\\t}\\\\n#endif\\\\n#if NUM_HEMI_LIGHTS > 0\\\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\\\n\\t\\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\\\n\\t\\t#ifdef DOUBLE_SIDED\\\\n\\t\\t\\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\\\n\\t\\t#endif\\\\n\\t}\\\\n#endif\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/lights_pars.glsl\\n\\n\\tTHREE.ShaderChunk[ 'lights_pars' ] = \\\"uniform vec3 ambientLightColor;\\\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\\\n\\tvec3 irradiance = ambientLightColor;\\\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\\\n\\t\\tirradiance *= PI;\\\\n\\t#endif\\\\n\\treturn irradiance;\\\\n}\\\\n#if NUM_DIR_LIGHTS > 0\\\\n\\tstruct DirectionalLight {\\\\n\\t\\tvec3 direction;\\\\n\\t\\tvec3 color;\\\\n\\t\\tint shadow;\\\\n\\t\\tfloat shadowBias;\\\\n\\t\\tfloat shadowRadius;\\\\n\\t\\tvec2 shadowMapSize;\\\\n\\t};\\\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\\\n\\t\\tdirectLight.color = directionalLight.color;\\\\n\\t\\tdirectLight.direction = directionalLight.direction;\\\\n\\t\\tdirectLight.visible = true;\\\\n\\t}\\\\n#endif\\\\n#if NUM_POINT_LIGHTS > 0\\\\n\\tstruct PointLight {\\\\n\\t\\tvec3 position;\\\\n\\t\\tvec3 color;\\\\n\\t\\tfloat distance;\\\\n\\t\\tfloat decay;\\\\n\\t\\tint shadow;\\\\n\\t\\tfloat shadowBias;\\\\n\\t\\tfloat shadowRadius;\\\\n\\t\\tvec2 shadowMapSize;\\\\n\\t};\\\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\\\n\\t\\tdirectLight.direction = normalize( lVector );\\\\n\\t\\tfloat lightDistance = length( lVector );\\\\n\\t\\tif ( testLightInRange( lightDistance, pointLight.distance ) ) {\\\\n\\t\\t\\tdirectLight.color = pointLight.color;\\\\n\\t\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\\\n\\t\\t\\tdirectLight.visible = true;\\\\n\\t\\t} else {\\\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\\\n\\t\\t\\tdirectLight.visible = false;\\\\n\\t\\t}\\\\n\\t}\\\\n#endif\\\\n#if NUM_SPOT_LIGHTS > 0\\\\n\\tstruct SpotLight {\\\\n\\t\\tvec3 position;\\\\n\\t\\tvec3 direction;\\\\n\\t\\tvec3 color;\\\\n\\t\\tfloat distance;\\\\n\\t\\tfloat decay;\\\\n\\t\\tfloat coneCos;\\\\n\\t\\tfloat penumbraCos;\\\\n\\t\\tint shadow;\\\\n\\t\\tfloat shadowBias;\\\\n\\t\\tfloat shadowRadius;\\\\n\\t\\tvec2 shadowMapSize;\\\\n\\t};\\\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\\\n\\t\\tdirectLight.direction = normalize( lVector );\\\\n\\t\\tfloat lightDistance = length( lVector );\\\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\\\n\\t\\tif ( all( bvec2( angleCos > spotLight.coneCos, testLightInRange( lightDistance, spotLight.distance ) ) ) ) {\\\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\\\n\\t\\t\\tdirectLight.color = spotLight.color;\\\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\\\n\\t\\t\\tdirectLight.visible = true;\\\\n\\t\\t} else {\\\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\\\n\\t\\t\\tdirectLight.visible = false;\\\\n\\t\\t}\\\\n\\t}\\\\n#endif\\\\n#if NUM_HEMI_LIGHTS > 0\\\\n\\tstruct HemisphereLight {\\\\n\\t\\tvec3 direction;\\\\n\\t\\tvec3 skyColor;\\\\n\\t\\tvec3 groundColor;\\\\n\\t};\\\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\\\n\\t\\t\\tirradiance *= PI;\\\\n\\t\\t#endif\\\\n\\t\\treturn irradiance;\\\\n\\t}\\\\n#endif\\\\n#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\\\n\\t\\t#include <normal_flip>\\\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\\\n\\t\\t\\tvec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\\\n\\t\\t\\t#else\\\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\\\n\\t\\t\\t#endif\\\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\\\n\\t\\t\\tvec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\\\\n\\t\\t#else\\\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\\\n\\t\\t#endif\\\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\\\n\\t}\\\\n\\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\\\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\\\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\\\n\\t}\\\\n\\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\\\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\\\n\\t\\t\\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\\\\n\\t\\t#else\\\\n\\t\\t\\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\\\\n\\t\\t#endif\\\\n\\t\\t#include <normal_flip>\\\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\\\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\\\n\\t\\t\\tvec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\\\n\\t\\t\\t#else\\\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\\\n\\t\\t\\t#endif\\\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\\\n\\t\\t\\tvec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\\\n\\t\\t\\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\\\\n\\t\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\\\n\\t\\t\\tvec2 sampleUV;\\\\n\\t\\t\\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\\\n\\t\\t\\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\\\n\\t\\t\\t#else\\\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\\\n\\t\\t\\t#endif\\\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\\\n\\t\\t#elif defined( ENVMAP_TYPE_SPHERE )\\\\n\\t\\t\\tvec3 reflectView = flipNormal * normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\\\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\\\n\\t\\t\\t#else\\\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\\\n\\t\\t\\t#endif\\\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\\\n\\t\\t#endif\\\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\\\n\\t}\\\\n#endif\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/lights_phong_fragment.glsl\\n\\n\\tTHREE.ShaderChunk[ 'lights_phong_fragment' ] = \\\"BlinnPhongMaterial material;\\\\nmaterial.diffuseColor = diffuseColor.rgb;\\\\nmaterial.specularColor = specular;\\\\nmaterial.specularShininess = shininess;\\\\nmaterial.specularStrength = specularStrength;\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/lights_phong_pars_fragment.glsl\\n\\n\\tTHREE.ShaderChunk[ 'lights_phong_pars_fragment' ] = \\\"varying vec3 vViewPosition;\\\\n#ifndef FLAT_SHADED\\\\n\\tvarying vec3 vNormal;\\\\n#endif\\\\nstruct BlinnPhongMaterial {\\\\n\\tvec3\\tdiffuseColor;\\\\n\\tvec3\\tspecularColor;\\\\n\\tfloat\\tspecularShininess;\\\\n\\tfloat\\tspecularStrength;\\\\n};\\\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\\\n\\tvec3 irradiance = dotNL * directLight.color;\\\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\\\n\\t\\tirradiance *= PI;\\\\n\\t#endif\\\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\\\n}\\\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\\\n}\\\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\\\n#define Material_LightProbeLOD( material )\\t(0)\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/lights_physical_fragment.glsl\\n\\n\\tTHREE.ShaderChunk[ 'lights_physical_fragment' ] = \\\"PhysicalMaterial material;\\\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\\\n#ifdef STANDARD\\\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\\\n#else\\\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\\\n\\tmaterial.clearCoat = saturate( clearCoat );\\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\\\\n#endif\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/lights_physical_pars_fragment.glsl\\n\\n\\tTHREE.ShaderChunk[ 'lights_physical_pars_fragment' ] = \\\"struct PhysicalMaterial {\\\\n\\tvec3\\tdiffuseColor;\\\\n\\tfloat\\tspecularRoughness;\\\\n\\tvec3\\tspecularColor;\\\\n\\t#ifndef STANDARD\\\\n\\t\\tfloat clearCoat;\\\\n\\t\\tfloat clearCoatRoughness;\\\\n\\t#endif\\\\n};\\\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\\\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\\\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\\\n}\\\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\\\n\\tvec3 irradiance = dotNL * directLight.color;\\\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\\\n\\t\\tirradiance *= PI;\\\\n\\t#endif\\\\n\\t#ifndef STANDARD\\\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\\\n\\t#else\\\\n\\t\\tfloat clearCoatDHR = 0.0;\\\\n\\t#endif\\\\n\\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\\\\n\\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\\\n\\t#ifndef STANDARD\\\\n\\t\\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\\\n\\t#endif\\\\n}\\\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\\\n}\\\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\\\n\\t#ifndef STANDARD\\\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\\\n\\t\\tfloat dotNL = dotNV;\\\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\\\n\\t#else\\\\n\\t\\tfloat clearCoatDHR = 0.0;\\\\n\\t#endif\\\\n\\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\\\\n\\t#ifndef STANDARD\\\\n\\t\\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\\\n\\t#endif\\\\n}\\\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\\\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\\\\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\\\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\\\n}\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/lights_template.glsl\\n\\n\\tTHREE.ShaderChunk[ 'lights_template' ] = \\\"\\\\nGeometricContext geometry;\\\\ngeometry.position = - vViewPosition;\\\\ngeometry.normal = normal;\\\\ngeometry.viewDir = normalize( vViewPosition );\\\\nIncidentLight directLight;\\\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\\\n\\tPointLight pointLight;\\\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\\\n\\t\\tpointLight = pointLights[ i ];\\\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\\\n\\t\\t#ifdef USE_SHADOWMAP\\\\n\\t\\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\\\\n\\t\\t#endif\\\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\\\n\\t}\\\\n#endif\\\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\\\n\\tSpotLight spotLight;\\\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\\\n\\t\\tspotLight = spotLights[ i ];\\\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\\\n\\t\\t#ifdef USE_SHADOWMAP\\\\n\\t\\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\\\n\\t\\t#endif\\\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\\\n\\t}\\\\n#endif\\\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\\\n\\tDirectionalLight directionalLight;\\\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\\\n\\t\\tdirectionalLight = directionalLights[ i ];\\\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\\\n\\t\\t#ifdef USE_SHADOWMAP\\\\n\\t\\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\\\n\\t\\t#endif\\\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\\\n\\t}\\\\n#endif\\\\n#if defined( RE_IndirectDiffuse )\\\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\\\n\\t#ifdef USE_LIGHTMAP\\\\n\\t\\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\\\n\\t\\t\\tlightMapIrradiance *= PI;\\\\n\\t\\t#endif\\\\n\\t\\tirradiance += lightMapIrradiance;\\\\n\\t#endif\\\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\\\n\\t\\t}\\\\n\\t#endif\\\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\\\\n\\t \\tirradiance += getLightProbeIndirectIrradiance( geometry, 8 );\\\\n\\t#endif\\\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\\\n#endif\\\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\\\n\\tvec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\\\\n\\t#ifndef STANDARD\\\\n\\t\\tvec3 clearCoatRadiance = getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), 8 );\\\\n\\t#else\\\\n\\t\\tvec3 clearCoatRadiance = vec3( 0.0 );\\\\n\\t#endif\\\\n\\t\\t\\\\n\\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\\\\n#endif\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/logdepthbuf_fragment.glsl\\n\\n\\tTHREE.ShaderChunk[ 'logdepthbuf_fragment' ] = \\\"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\\\\n\\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\\\\n#endif\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_fragment.glsl\\n\\n\\tTHREE.ShaderChunk[ 'logdepthbuf_pars_fragment' ] = \\\"#ifdef USE_LOGDEPTHBUF\\\\n\\tuniform float logDepthBufFC;\\\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\\\n\\t\\tvarying float vFragDepth;\\\\n\\t#endif\\\\n#endif\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_vertex.glsl\\n\\n\\tTHREE.ShaderChunk[ 'logdepthbuf_pars_vertex' ] = \\\"#ifdef USE_LOGDEPTHBUF\\\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\\\n\\t\\tvarying float vFragDepth;\\\\n\\t#endif\\\\n\\tuniform float logDepthBufFC;\\\\n#endif\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/logdepthbuf_vertex.glsl\\n\\n\\tTHREE.ShaderChunk[ 'logdepthbuf_vertex' ] = \\\"#ifdef USE_LOGDEPTHBUF\\\\n\\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\\\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\\\n\\t#else\\\\n\\t\\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\\\\n\\t#endif\\\\n#endif\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/map_fragment.glsl\\n\\n\\tTHREE.ShaderChunk[ 'map_fragment' ] = \\\"#ifdef USE_MAP\\\\n\\tvec4 texelColor = texture2D( map, vUv );\\\\n\\ttexelColor = mapTexelToLinear( texelColor );\\\\n\\tdiffuseColor *= texelColor;\\\\n#endif\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/map_pars_fragment.glsl\\n\\n\\tTHREE.ShaderChunk[ 'map_pars_fragment' ] = \\\"#ifdef USE_MAP\\\\n\\tuniform sampler2D map;\\\\n#endif\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/map_particle_fragment.glsl\\n\\n\\tTHREE.ShaderChunk[ 'map_particle_fragment' ] = \\\"#ifdef USE_MAP\\\\n\\tvec4 mapTexel = texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\\\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\\\n#endif\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/map_particle_pars_fragment.glsl\\n\\n\\tTHREE.ShaderChunk[ 'map_particle_pars_fragment' ] = \\\"#ifdef USE_MAP\\\\n\\tuniform vec4 offsetRepeat;\\\\n\\tuniform sampler2D map;\\\\n#endif\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/metalnessmap_fragment.glsl\\n\\n\\tTHREE.ShaderChunk[ 'metalnessmap_fragment' ] = \\\"float metalnessFactor = metalness;\\\\n#ifdef USE_METALNESSMAP\\\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\\\n\\tmetalnessFactor *= texelMetalness.r;\\\\n#endif\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/metalnessmap_pars_fragment.glsl\\n\\n\\tTHREE.ShaderChunk[ 'metalnessmap_pars_fragment' ] = \\\"#ifdef USE_METALNESSMAP\\\\n\\tuniform sampler2D metalnessMap;\\\\n#endif\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/morphnormal_vertex.glsl\\n\\n\\tTHREE.ShaderChunk[ 'morphnormal_vertex' ] = \\\"#ifdef USE_MORPHNORMALS\\\\n\\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\\\n\\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\\\n\\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\\\n\\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\\\n#endif\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/morphtarget_pars_vertex.glsl\\n\\n\\tTHREE.ShaderChunk[ 'morphtarget_pars_vertex' ] = \\\"#ifdef USE_MORPHTARGETS\\\\n\\t#ifndef USE_MORPHNORMALS\\\\n\\tuniform float morphTargetInfluences[ 8 ];\\\\n\\t#else\\\\n\\tuniform float morphTargetInfluences[ 4 ];\\\\n\\t#endif\\\\n#endif\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/morphtarget_vertex.glsl\\n\\n\\tTHREE.ShaderChunk[ 'morphtarget_vertex' ] = \\\"#ifdef USE_MORPHTARGETS\\\\n\\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\\\n\\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\\\n\\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\\\n\\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\\\n\\t#ifndef USE_MORPHNORMALS\\\\n\\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\\\n\\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\\\n\\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\\\n\\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\\\n\\t#endif\\\\n#endif\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/normal_flip.glsl\\n\\n\\tTHREE.ShaderChunk[ 'normal_flip' ] = \\\"#ifdef DOUBLE_SIDED\\\\n\\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\\\n#else\\\\n\\tfloat flipNormal = 1.0;\\\\n#endif\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/normal_fragment.glsl\\n\\n\\tTHREE.ShaderChunk[ 'normal_fragment' ] = \\\"#ifdef FLAT_SHADED\\\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\\\n#else\\\\n\\tvec3 normal = normalize( vNormal ) * flipNormal;\\\\n#endif\\\\n#ifdef USE_NORMALMAP\\\\n\\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\\\n#elif defined( USE_BUMPMAP )\\\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\\\n#endif\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/normalmap_pars_fragment.glsl\\n\\n\\tTHREE.ShaderChunk[ 'normalmap_pars_fragment' ] = \\\"#ifdef USE_NORMALMAP\\\\n\\tuniform sampler2D normalMap;\\\\n\\tuniform vec2 normalScale;\\\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\\\n\\t\\tvec3 q0 = dFdx( eye_pos.xyz );\\\\n\\t\\tvec3 q1 = dFdy( eye_pos.xyz );\\\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\\\n\\t\\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\\\\n\\t\\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\\\\n\\t\\tvec3 N = normalize( surf_norm );\\\\n\\t\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\\\n\\t\\tmapN.xy = normalScale * mapN.xy;\\\\n\\t\\tmat3 tsn = mat3( S, T, N );\\\\n\\t\\treturn normalize( tsn * mapN );\\\\n\\t}\\\\n#endif\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/packing.glsl\\n\\n\\tTHREE.ShaderChunk[ 'packing' ] = \\\"vec3 packNormalToRGB( const in vec3 normal ) {\\\\n  return normalize( normal ) * 0.5 + 0.5;\\\\n}\\\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\\\n  return 1.0 - 2.0 * rgb.xyz;\\\\n}\\\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\\\nconst float ShiftRight8 = 1. / 256.;\\\\nvec4 packDepthToRGBA( const in float v ) {\\\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\\\n}\\\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\\\n\\treturn dot( v, UnpackFactors );\\\\n}\\\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\\\n  return ( viewZ + near ) / ( near - far );\\\\n}\\\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\\\n  return linearClipZ * ( near - far ) - near;\\\\n}\\\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\\\n  return (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\\\n}\\\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\\\n  return ( near * far ) / ( ( far - near ) * invClipZ - far );\\\\n}\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/premultiplied_alpha_fragment.glsl\\n\\n\\tTHREE.ShaderChunk[ 'premultiplied_alpha_fragment' ] = \\\"#ifdef PREMULTIPLIED_ALPHA\\\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\\\n#endif\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/project_vertex.glsl\\n\\n\\tTHREE.ShaderChunk[ 'project_vertex' ] = \\\"#ifdef USE_SKINNING\\\\n\\tvec4 mvPosition = modelViewMatrix * skinned;\\\\n#else\\\\n\\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\\\n#endif\\\\ngl_Position = projectionMatrix * mvPosition;\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/roughnessmap_fragment.glsl\\n\\n\\tTHREE.ShaderChunk[ 'roughnessmap_fragment' ] = \\\"float roughnessFactor = roughness;\\\\n#ifdef USE_ROUGHNESSMAP\\\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\\\n\\troughnessFactor *= texelRoughness.r;\\\\n#endif\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/roughnessmap_pars_fragment.glsl\\n\\n\\tTHREE.ShaderChunk[ 'roughnessmap_pars_fragment' ] = \\\"#ifdef USE_ROUGHNESSMAP\\\\n\\tuniform sampler2D roughnessMap;\\\\n#endif\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/shadowmap_pars_fragment.glsl\\n\\n\\tTHREE.ShaderChunk[ 'shadowmap_pars_fragment' ] = \\\"#ifdef USE_SHADOWMAP\\\\n\\t#if NUM_DIR_LIGHTS > 0\\\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\\\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\\\n\\t#endif\\\\n\\t#if NUM_SPOT_LIGHTS > 0\\\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\\\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\\\n\\t#endif\\\\n\\t#if NUM_POINT_LIGHTS > 0\\\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\\\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\\\n\\t#endif\\\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\\\n\\t}\\\\n\\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\\\n\\t\\tconst vec2 offset = vec2( 0.0, 1.0 );\\\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / size;\\\\n\\t\\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\\\\n\\t\\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\\\n\\t\\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\\\n\\t\\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\\\n\\t\\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\\\n\\t\\tvec2 f = fract( uv * size + 0.5 );\\\\n\\t\\tfloat a = mix( lb, lt, f.y );\\\\n\\t\\tfloat b = mix( rb, rt, f.y );\\\\n\\t\\tfloat c = mix( a, b, f.x );\\\\n\\t\\treturn c;\\\\n\\t}\\\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\\\n\\t\\tshadowCoord.z += shadowBias;\\\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\\\n\\t\\tbool inFrustum = all( inFrustumVec );\\\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\\\n\\t\\tbool frustumTest = all( frustumTestVec );\\\\n\\t\\tif ( frustumTest ) {\\\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\\\n\\t\\t\\treturn (\\\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\\\n\\t\\t\\treturn (\\\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\\\n\\t\\t#else\\\\n\\t\\t\\treturn texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\\\n\\t\\t#endif\\\\n\\t\\t}\\\\n\\t\\treturn 1.0;\\\\n\\t}\\\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\\\n\\t\\tvec3 absV = abs( v );\\\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\\\n\\t\\tabsV *= scaleToCube;\\\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\\\n\\t\\tvec2 planar = v.xy;\\\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\\\n\\t\\tif ( absV.z >= almostOne ) {\\\\n\\t\\t\\tif ( v.z > 0.0 )\\\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\\\n\\t\\t} else if ( absV.x >= almostOne ) {\\\\n\\t\\t\\tfloat signX = sign( v.x );\\\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\\\n\\t\\t} else if ( absV.y >= almostOne ) {\\\\n\\t\\t\\tfloat signY = sign( v.y );\\\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\\\n\\t\\t}\\\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\\\n\\t}\\\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowBias ) / 1000.0;\\\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\\\n\\t\\t\\treturn (\\\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\\\n\\t\\t#else\\\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\\\n\\t\\t#endif\\\\n\\t}\\\\n#endif\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/shadowmap_pars_vertex.glsl\\n\\n\\tTHREE.ShaderChunk[ 'shadowmap_pars_vertex' ] = \\\"#ifdef USE_SHADOWMAP\\\\n\\t#if NUM_DIR_LIGHTS > 0\\\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\\\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\\\n\\t#endif\\\\n\\t#if NUM_SPOT_LIGHTS > 0\\\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\\\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\\\n\\t#endif\\\\n\\t#if NUM_POINT_LIGHTS > 0\\\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\\\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\\\n\\t#endif\\\\n#endif\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/shadowmap_vertex.glsl\\n\\n\\tTHREE.ShaderChunk[ 'shadowmap_vertex' ] = \\\"#ifdef USE_SHADOWMAP\\\\n\\t#if NUM_DIR_LIGHTS > 0\\\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\\\n\\t}\\\\n\\t#endif\\\\n\\t#if NUM_SPOT_LIGHTS > 0\\\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\\\n\\t}\\\\n\\t#endif\\\\n\\t#if NUM_POINT_LIGHTS > 0\\\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\\\n\\t}\\\\n\\t#endif\\\\n#endif\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/shadowmask_pars_fragment.glsl\\n\\n\\tTHREE.ShaderChunk[ 'shadowmask_pars_fragment' ] = \\\"float getShadowMask() {\\\\n\\tfloat shadow = 1.0;\\\\n\\t#ifdef USE_SHADOWMAP\\\\n\\t#if NUM_DIR_LIGHTS > 0\\\\n\\tDirectionalLight directionalLight;\\\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\\\n\\t\\tdirectionalLight = directionalLights[ i ];\\\\n\\t\\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\\\n\\t}\\\\n\\t#endif\\\\n\\t#if NUM_SPOT_LIGHTS > 0\\\\n\\tSpotLight spotLight;\\\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\\\n\\t\\tspotLight = spotLights[ i ];\\\\n\\t\\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\\\n\\t}\\\\n\\t#endif\\\\n\\t#if NUM_POINT_LIGHTS > 0\\\\n\\tPointLight pointLight;\\\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\\\n\\t\\tpointLight = pointLights[ i ];\\\\n\\t\\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\\\\n\\t}\\\\n\\t#endif\\\\n\\t#endif\\\\n\\treturn shadow;\\\\n}\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/skinbase_vertex.glsl\\n\\n\\tTHREE.ShaderChunk[ 'skinbase_vertex' ] = \\\"#ifdef USE_SKINNING\\\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\\\n#endif\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/skinning_pars_vertex.glsl\\n\\n\\tTHREE.ShaderChunk[ 'skinning_pars_vertex' ] = \\\"#ifdef USE_SKINNING\\\\n\\tuniform mat4 bindMatrix;\\\\n\\tuniform mat4 bindMatrixInverse;\\\\n\\t#ifdef BONE_TEXTURE\\\\n\\t\\tuniform sampler2D boneTexture;\\\\n\\t\\tuniform int boneTextureWidth;\\\\n\\t\\tuniform int boneTextureHeight;\\\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\\\n\\t\\t\\tfloat j = i * 4.0;\\\\n\\t\\t\\tfloat x = mod( j, float( boneTextureWidth ) );\\\\n\\t\\t\\tfloat y = floor( j / float( boneTextureWidth ) );\\\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureWidth );\\\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureHeight );\\\\n\\t\\t\\ty = dy * ( y + 0.5 );\\\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\\\n\\t\\t\\treturn bone;\\\\n\\t\\t}\\\\n\\t#else\\\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\\\n\\t\\t\\treturn bone;\\\\n\\t\\t}\\\\n\\t#endif\\\\n#endif\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/skinning_vertex.glsl\\n\\n\\tTHREE.ShaderChunk[ 'skinning_vertex' ] = \\\"#ifdef USE_SKINNING\\\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\\\n\\tvec4 skinned = vec4( 0.0 );\\\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\\\n\\tskinned  = bindMatrixInverse * skinned;\\\\n#endif\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/skinnormal_vertex.glsl\\n\\n\\tTHREE.ShaderChunk[ 'skinnormal_vertex' ] = \\\"#ifdef USE_SKINNING\\\\n\\tmat4 skinMatrix = mat4( 0.0 );\\\\n\\tskinMatrix += skinWeight.x * boneMatX;\\\\n\\tskinMatrix += skinWeight.y * boneMatY;\\\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\\\n\\tskinMatrix += skinWeight.w * boneMatW;\\\\n\\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\\\n#endif\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/specularmap_fragment.glsl\\n\\n\\tTHREE.ShaderChunk[ 'specularmap_fragment' ] = \\\"float specularStrength;\\\\n#ifdef USE_SPECULARMAP\\\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\\\n\\tspecularStrength = texelSpecular.r;\\\\n#else\\\\n\\tspecularStrength = 1.0;\\\\n#endif\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/specularmap_pars_fragment.glsl\\n\\n\\tTHREE.ShaderChunk[ 'specularmap_pars_fragment' ] = \\\"#ifdef USE_SPECULARMAP\\\\n\\tuniform sampler2D specularMap;\\\\n#endif\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/tonemapping_fragment.glsl\\n\\n\\tTHREE.ShaderChunk[ 'tonemapping_fragment' ] = \\\"#if defined( TONE_MAPPING )\\\\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\\\n#endif\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/tonemapping_pars_fragment.glsl\\n\\n\\tTHREE.ShaderChunk[ 'tonemapping_pars_fragment' ] = \\\"#define saturate(a) clamp( a, 0.0, 1.0 )\\\\nuniform float toneMappingExposure;\\\\nuniform float toneMappingWhitePoint;\\\\nvec3 LinearToneMapping( vec3 color ) {\\\\n  return toneMappingExposure * color;\\\\n}\\\\nvec3 ReinhardToneMapping( vec3 color ) {\\\\n  color *= toneMappingExposure;\\\\n  return saturate( color / ( vec3( 1.0 ) + color ) );\\\\n}\\\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\\\n  color *= toneMappingExposure;\\\\n  return saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\\\n}\\\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\\\n  color *= toneMappingExposure;\\\\n  color = max( vec3( 0.0 ), color - 0.004 );\\\\n  return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\\\n}\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/uv2_pars_fragment.glsl\\n\\n\\tTHREE.ShaderChunk[ 'uv2_pars_fragment' ] = \\\"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\\\n\\tvarying vec2 vUv2;\\\\n#endif\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/uv2_pars_vertex.glsl\\n\\n\\tTHREE.ShaderChunk[ 'uv2_pars_vertex' ] = \\\"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\\\n\\tattribute vec2 uv2;\\\\n\\tvarying vec2 vUv2;\\\\n#endif\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/uv2_vertex.glsl\\n\\n\\tTHREE.ShaderChunk[ 'uv2_vertex' ] = \\\"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\\\n\\tvUv2 = uv2;\\\\n#endif\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/uv_pars_fragment.glsl\\n\\n\\tTHREE.ShaderChunk[ 'uv_pars_fragment' ] = \\\"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\\\n\\tvarying vec2 vUv;\\\\n#endif\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/uv_pars_vertex.glsl\\n\\n\\tTHREE.ShaderChunk[ 'uv_pars_vertex' ] = \\\"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\\\n\\tvarying vec2 vUv;\\\\n\\tuniform vec4 offsetRepeat;\\\\n#endif\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/uv_vertex.glsl\\n\\n\\tTHREE.ShaderChunk[ 'uv_vertex' ] = \\\"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\\\n\\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\\\\n#endif\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderChunk/worldpos_vertex.glsl\\n\\n\\tTHREE.ShaderChunk[ 'worldpos_vertex' ] = \\\"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( PHYSICAL ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\\\\n\\t#ifdef USE_SKINNING\\\\n\\t\\tvec4 worldPosition = modelMatrix * skinned;\\\\n\\t#else\\\\n\\t\\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\\\n\\t#endif\\\\n#endif\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/UniformsUtils.js\\n\\n\\t/**\\n\\t * Uniform Utilities\\n\\t */\\n\\n\\tTHREE.UniformsUtils = {\\n\\n\\t\\tmerge: function ( uniforms ) {\\n\\n\\t\\t\\tvar merged = {};\\n\\n\\t\\t\\tfor ( var u = 0; u < uniforms.length; u ++ ) {\\n\\n\\t\\t\\t\\tvar tmp = this.clone( uniforms[ u ] );\\n\\n\\t\\t\\t\\tfor ( var p in tmp ) {\\n\\n\\t\\t\\t\\t\\tmerged[ p ] = tmp[ p ];\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn merged;\\n\\n\\t\\t},\\n\\n\\t\\tclone: function ( uniforms_src ) {\\n\\n\\t\\t\\tvar uniforms_dst = {};\\n\\n\\t\\t\\tfor ( var u in uniforms_src ) {\\n\\n\\t\\t\\t\\tuniforms_dst[ u ] = {};\\n\\n\\t\\t\\t\\tfor ( var p in uniforms_src[ u ] ) {\\n\\n\\t\\t\\t\\t\\tvar parameter_src = uniforms_src[ u ][ p ];\\n\\n\\t\\t\\t\\t\\tif ( parameter_src instanceof THREE.Color ||\\n\\t\\t\\t\\t\\t\\t parameter_src instanceof THREE.Vector2 ||\\n\\t\\t\\t\\t\\t\\t parameter_src instanceof THREE.Vector3 ||\\n\\t\\t\\t\\t\\t\\t parameter_src instanceof THREE.Vector4 ||\\n\\t\\t\\t\\t\\t\\t parameter_src instanceof THREE.Matrix3 ||\\n\\t\\t\\t\\t\\t\\t parameter_src instanceof THREE.Matrix4 ||\\n\\t\\t\\t\\t\\t\\t parameter_src instanceof THREE.Texture ) {\\n\\n\\t\\t\\t\\t\\t\\tuniforms_dst[ u ][ p ] = parameter_src.clone();\\n\\n\\t\\t\\t\\t\\t} else if ( Array.isArray( parameter_src ) ) {\\n\\n\\t\\t\\t\\t\\t\\tuniforms_dst[ u ][ p ] = parameter_src.slice();\\n\\n\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\tuniforms_dst[ u ][ p ] = parameter_src;\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn uniforms_dst;\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\t// File:src/renderers/shaders/UniformsLib.js\\n\\n\\t/**\\n\\t * Uniforms library for shared webgl shaders\\n\\t */\\n\\n\\tTHREE.UniformsLib = {\\n\\n\\t\\tcommon: {\\n\\n\\t\\t\\t\\\"diffuse\\\": { value: new THREE.Color( 0xeeeeee ) },\\n\\t\\t\\t\\\"opacity\\\": { value: 1.0 },\\n\\n\\t\\t\\t\\\"map\\\": { value: null },\\n\\t\\t\\t\\\"offsetRepeat\\\": { value: new THREE.Vector4( 0, 0, 1, 1 ) },\\n\\n\\t\\t\\t\\\"specularMap\\\": { value: null },\\n\\t\\t\\t\\\"alphaMap\\\": { value: null },\\n\\n\\t\\t\\t\\\"envMap\\\": { value: null },\\n\\t\\t\\t\\\"flipEnvMap\\\": { value: - 1 },\\n\\t\\t\\t\\\"reflectivity\\\": { value: 1.0 },\\n\\t\\t\\t\\\"refractionRatio\\\": { value: 0.98 }\\n\\n\\t\\t},\\n\\n\\t\\taomap: {\\n\\n\\t\\t\\t\\\"aoMap\\\": { value: null },\\n\\t\\t\\t\\\"aoMapIntensity\\\": { value: 1 }\\n\\n\\t\\t},\\n\\n\\t\\tlightmap: {\\n\\n\\t\\t\\t\\\"lightMap\\\": { value: null },\\n\\t\\t\\t\\\"lightMapIntensity\\\": { value: 1 }\\n\\n\\t\\t},\\n\\n\\t\\temissivemap: {\\n\\n\\t\\t\\t\\\"emissiveMap\\\": { value: null }\\n\\n\\t\\t},\\n\\n\\t\\tbumpmap: {\\n\\n\\t\\t\\t\\\"bumpMap\\\": { value: null },\\n\\t\\t\\t\\\"bumpScale\\\": { value: 1 }\\n\\n\\t\\t},\\n\\n\\t\\tnormalmap: {\\n\\n\\t\\t\\t\\\"normalMap\\\": { value: null },\\n\\t\\t\\t\\\"normalScale\\\": { value: new THREE.Vector2( 1, 1 ) }\\n\\n\\t\\t},\\n\\n\\t\\tdisplacementmap: {\\n\\n\\t\\t\\t\\\"displacementMap\\\": { value: null },\\n\\t\\t\\t\\\"displacementScale\\\": { value: 1 },\\n\\t\\t\\t\\\"displacementBias\\\": { value: 0 }\\n\\n\\t\\t},\\n\\n\\t\\troughnessmap: {\\n\\n\\t\\t\\t\\\"roughnessMap\\\": { value: null }\\n\\n\\t\\t},\\n\\n\\t\\tmetalnessmap: {\\n\\n\\t\\t\\t\\\"metalnessMap\\\": { value: null }\\n\\n\\t\\t},\\n\\n\\t\\tfog: {\\n\\n\\t\\t\\t\\\"fogDensity\\\": { value: 0.00025 },\\n\\t\\t\\t\\\"fogNear\\\": { value: 1 },\\n\\t\\t\\t\\\"fogFar\\\": { value: 2000 },\\n\\t\\t\\t\\\"fogColor\\\": { value: new THREE.Color( 0xffffff ) }\\n\\n\\t\\t},\\n\\n\\t\\tlights: {\\n\\n\\t\\t\\t\\\"ambientLightColor\\\": { value: [] },\\n\\n\\t\\t\\t\\\"directionalLights\\\": { value: [], properties: {\\n\\t\\t\\t\\t\\\"direction\\\": {},\\n\\t\\t\\t\\t\\\"color\\\": {},\\n\\n\\t\\t\\t\\t\\\"shadow\\\": {},\\n\\t\\t\\t\\t\\\"shadowBias\\\": {},\\n\\t\\t\\t\\t\\\"shadowRadius\\\": {},\\n\\t\\t\\t\\t\\\"shadowMapSize\\\": {}\\n\\t\\t\\t} },\\n\\n\\t\\t\\t\\\"directionalShadowMap\\\": { value: [] },\\n\\t\\t\\t\\\"directionalShadowMatrix\\\": { value: [] },\\n\\n\\t\\t\\t\\\"spotLights\\\": { value: [], properties: {\\n\\t\\t\\t\\t\\\"color\\\": {},\\n\\t\\t\\t\\t\\\"position\\\": {},\\n\\t\\t\\t\\t\\\"direction\\\": {},\\n\\t\\t\\t\\t\\\"distance\\\": {},\\n\\t\\t\\t\\t\\\"coneCos\\\": {},\\n\\t\\t\\t\\t\\\"penumbraCos\\\": {},\\n\\t\\t\\t\\t\\\"decay\\\": {},\\n\\n\\t\\t\\t\\t\\\"shadow\\\": {},\\n\\t\\t\\t\\t\\\"shadowBias\\\": {},\\n\\t\\t\\t\\t\\\"shadowRadius\\\": {},\\n\\t\\t\\t\\t\\\"shadowMapSize\\\": {}\\n\\t\\t\\t} },\\n\\n\\t\\t\\t\\\"spotShadowMap\\\": { value: [] },\\n\\t\\t\\t\\\"spotShadowMatrix\\\": { value: [] },\\n\\n\\t\\t\\t\\\"pointLights\\\": { value: [], properties: {\\n\\t\\t\\t\\t\\\"color\\\": {},\\n\\t\\t\\t\\t\\\"position\\\": {},\\n\\t\\t\\t\\t\\\"decay\\\": {},\\n\\t\\t\\t\\t\\\"distance\\\": {},\\n\\n\\t\\t\\t\\t\\\"shadow\\\": {},\\n\\t\\t\\t\\t\\\"shadowBias\\\": {},\\n\\t\\t\\t\\t\\\"shadowRadius\\\": {},\\n\\t\\t\\t\\t\\\"shadowMapSize\\\": {}\\n\\t\\t\\t} },\\n\\n\\t\\t\\t\\\"pointShadowMap\\\": { value: [] },\\n\\t\\t\\t\\\"pointShadowMatrix\\\": { value: [] },\\n\\n\\t\\t\\t\\\"hemisphereLights\\\": { value: [], properties: {\\n\\t\\t\\t\\t\\\"direction\\\": {},\\n\\t\\t\\t\\t\\\"skyColor\\\": {},\\n\\t\\t\\t\\t\\\"groundColor\\\": {}\\n\\t\\t\\t} }\\n\\n\\t\\t},\\n\\n\\t\\tpoints: {\\n\\n\\t\\t\\t\\\"diffuse\\\": { value: new THREE.Color( 0xeeeeee ) },\\n\\t\\t\\t\\\"opacity\\\": { value: 1.0 },\\n\\t\\t\\t\\\"size\\\": { value: 1.0 },\\n\\t\\t\\t\\\"scale\\\": { value: 1.0 },\\n\\t\\t\\t\\\"map\\\": { value: null },\\n\\t\\t\\t\\\"offsetRepeat\\\": { value: new THREE.Vector4( 0, 0, 1, 1 ) }\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\t// File:src/renderers/shaders/ShaderLib/cube_frag.glsl\\n\\n\\tTHREE.ShaderChunk[ 'cube_frag' ] = \\\"uniform samplerCube tCube;\\\\nuniform float tFlip;\\\\nuniform float opacity;\\\\nvarying vec3 vWorldPosition;\\\\n#include <common>\\\\nvoid main() {\\\\n\\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\\\\n\\tgl_FragColor.a *= opacity;\\\\n}\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderLib/cube_vert.glsl\\n\\n\\tTHREE.ShaderChunk[ 'cube_vert' ] = \\\"varying vec3 vWorldPosition;\\\\n#include <common>\\\\nvoid main() {\\\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\\\n\\t#include <begin_vertex>\\\\n\\t#include <project_vertex>\\\\n}\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderLib/depth_frag.glsl\\n\\n\\tTHREE.ShaderChunk[ 'depth_frag' ] = \\\"#if DEPTH_PACKING == 3200\\\\n\\tuniform float opacity;\\\\n#endif\\\\n#include <common>\\\\n#include <packing>\\\\n#include <uv_pars_fragment>\\\\n#include <map_pars_fragment>\\\\n#include <alphamap_pars_fragment>\\\\n#include <logdepthbuf_pars_fragment>\\\\n#include <clipping_planes_pars_fragment>\\\\nvoid main() {\\\\n\\t#include <clipping_planes_fragment>\\\\n\\tvec4 diffuseColor = vec4( 1.0 );\\\\n\\t#if DEPTH_PACKING == 3200\\\\n\\t\\tdiffuseColor.a = opacity;\\\\n\\t#endif\\\\n\\t#include <map_fragment>\\\\n\\t#include <alphamap_fragment>\\\\n\\t#include <alphatest_fragment>\\\\n\\t#include <logdepthbuf_fragment>\\\\n\\t#if DEPTH_PACKING == 3200\\\\n\\t\\tgl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );\\\\n\\t#elif DEPTH_PACKING == 3201\\\\n\\t\\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\\\n\\t#endif\\\\n}\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderLib/depth_vert.glsl\\n\\n\\tTHREE.ShaderChunk[ 'depth_vert' ] = \\\"#include <common>\\\\n#include <uv_pars_vertex>\\\\n#include <displacementmap_pars_vertex>\\\\n#include <morphtarget_pars_vertex>\\\\n#include <skinning_pars_vertex>\\\\n#include <logdepthbuf_pars_vertex>\\\\n#include <clipping_planes_pars_vertex>\\\\nvoid main() {\\\\n\\t#include <uv_vertex>\\\\n\\t#include <skinbase_vertex>\\\\n\\t#include <begin_vertex>\\\\n\\t#include <displacementmap_vertex>\\\\n\\t#include <morphtarget_vertex>\\\\n\\t#include <skinning_vertex>\\\\n\\t#include <project_vertex>\\\\n\\t#include <logdepthbuf_vertex>\\\\n\\t#include <clipping_planes_vertex>\\\\n}\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderLib/distanceRGBA_frag.glsl\\n\\n\\tTHREE.ShaderChunk[ 'distanceRGBA_frag' ] = \\\"uniform vec3 lightPos;\\\\nvarying vec4 vWorldPosition;\\\\n#include <common>\\\\n#include <packing>\\\\n#include <clipping_planes_pars_fragment>\\\\nvoid main () {\\\\n\\t#include <clipping_planes_fragment>\\\\n\\tgl_FragColor = packDepthToRGBA( length( vWorldPosition.xyz - lightPos.xyz ) / 1000.0 );\\\\n}\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderLib/distanceRGBA_vert.glsl\\n\\n\\tTHREE.ShaderChunk[ 'distanceRGBA_vert' ] = \\\"varying vec4 vWorldPosition;\\\\n#include <common>\\\\n#include <morphtarget_pars_vertex>\\\\n#include <skinning_pars_vertex>\\\\n#include <clipping_planes_pars_vertex>\\\\nvoid main() {\\\\n\\t#include <skinbase_vertex>\\\\n\\t#include <begin_vertex>\\\\n\\t#include <morphtarget_vertex>\\\\n\\t#include <skinning_vertex>\\\\n\\t#include <project_vertex>\\\\n\\t#include <worldpos_vertex>\\\\n\\t#include <clipping_planes_vertex>\\\\n\\tvWorldPosition = worldPosition;\\\\n}\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderLib/equirect_frag.glsl\\n\\n\\tTHREE.ShaderChunk[ 'equirect_frag' ] = \\\"uniform sampler2D tEquirect;\\\\nuniform float tFlip;\\\\nvarying vec3 vWorldPosition;\\\\n#include <common>\\\\nvoid main() {\\\\n\\tvec3 direction = normalize( vWorldPosition );\\\\n\\tvec2 sampleUV;\\\\n\\tsampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\\\\n\\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\\\n}\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderLib/equirect_vert.glsl\\n\\n\\tTHREE.ShaderChunk[ 'equirect_vert' ] = \\\"varying vec3 vWorldPosition;\\\\n#include <common>\\\\nvoid main() {\\\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\\\n\\t#include <begin_vertex>\\\\n\\t#include <project_vertex>\\\\n}\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderLib/linedashed_frag.glsl\\n\\n\\tTHREE.ShaderChunk[ 'linedashed_frag' ] = \\\"uniform vec3 diffuse;\\\\nuniform float opacity;\\\\nuniform float dashSize;\\\\nuniform float totalSize;\\\\nvarying float vLineDistance;\\\\n#include <common>\\\\n#include <color_pars_fragment>\\\\n#include <fog_pars_fragment>\\\\n#include <logdepthbuf_pars_fragment>\\\\n#include <clipping_planes_pars_fragment>\\\\nvoid main() {\\\\n\\t#include <clipping_planes_fragment>\\\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\\\n\\t\\tdiscard;\\\\n\\t}\\\\n\\tvec3 outgoingLight = vec3( 0.0 );\\\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\\\n\\t#include <logdepthbuf_fragment>\\\\n\\t#include <color_fragment>\\\\n\\toutgoingLight = diffuseColor.rgb;\\\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\\\n\\t#include <premultiplied_alpha_fragment>\\\\n\\t#include <tonemapping_fragment>\\\\n\\t#include <encodings_fragment>\\\\n\\t#include <fog_fragment>\\\\n}\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderLib/linedashed_vert.glsl\\n\\n\\tTHREE.ShaderChunk[ 'linedashed_vert' ] = \\\"uniform float scale;\\\\nattribute float lineDistance;\\\\nvarying float vLineDistance;\\\\n#include <common>\\\\n#include <color_pars_vertex>\\\\n#include <logdepthbuf_pars_vertex>\\\\n#include <clipping_planes_pars_vertex>\\\\nvoid main() {\\\\n\\t#include <color_vertex>\\\\n\\tvLineDistance = scale * lineDistance;\\\\n\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\\\n\\tgl_Position = projectionMatrix * mvPosition;\\\\n\\t#include <logdepthbuf_vertex>\\\\n\\t#include <clipping_planes_vertex>\\\\n}\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderLib/meshbasic_frag.glsl\\n\\n\\tTHREE.ShaderChunk[ 'meshbasic_frag' ] = \\\"uniform vec3 diffuse;\\\\nuniform float opacity;\\\\n#ifndef FLAT_SHADED\\\\n\\tvarying vec3 vNormal;\\\\n#endif\\\\n#include <common>\\\\n#include <color_pars_fragment>\\\\n#include <uv_pars_fragment>\\\\n#include <uv2_pars_fragment>\\\\n#include <map_pars_fragment>\\\\n#include <alphamap_pars_fragment>\\\\n#include <aomap_pars_fragment>\\\\n#include <envmap_pars_fragment>\\\\n#include <fog_pars_fragment>\\\\n#include <specularmap_pars_fragment>\\\\n#include <logdepthbuf_pars_fragment>\\\\n#include <clipping_planes_pars_fragment>\\\\nvoid main() {\\\\n\\t#include <clipping_planes_fragment>\\\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\\\n\\t#include <logdepthbuf_fragment>\\\\n\\t#include <map_fragment>\\\\n\\t#include <color_fragment>\\\\n\\t#include <alphamap_fragment>\\\\n\\t#include <alphatest_fragment>\\\\n\\t#include <specularmap_fragment>\\\\n\\tReflectedLight reflectedLight;\\\\n\\treflectedLight.directDiffuse = vec3( 0.0 );\\\\n\\treflectedLight.directSpecular = vec3( 0.0 );\\\\n\\treflectedLight.indirectDiffuse = diffuseColor.rgb;\\\\n\\treflectedLight.indirectSpecular = vec3( 0.0 );\\\\n\\t#include <aomap_fragment>\\\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\\\n\\t#include <normal_flip>\\\\n\\t#include <envmap_fragment>\\\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\\\n\\t#include <premultiplied_alpha_fragment>\\\\n\\t#include <tonemapping_fragment>\\\\n\\t#include <encodings_fragment>\\\\n\\t#include <fog_fragment>\\\\n}\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderLib/meshbasic_vert.glsl\\n\\n\\tTHREE.ShaderChunk[ 'meshbasic_vert' ] = \\\"#include <common>\\\\n#include <uv_pars_vertex>\\\\n#include <uv2_pars_vertex>\\\\n#include <envmap_pars_vertex>\\\\n#include <color_pars_vertex>\\\\n#include <morphtarget_pars_vertex>\\\\n#include <skinning_pars_vertex>\\\\n#include <logdepthbuf_pars_vertex>\\\\n#include <clipping_planes_pars_vertex>\\\\nvoid main() {\\\\n\\t#include <uv_vertex>\\\\n\\t#include <uv2_vertex>\\\\n\\t#include <color_vertex>\\\\n\\t#include <skinbase_vertex>\\\\n\\t#ifdef USE_ENVMAP\\\\n\\t#include <beginnormal_vertex>\\\\n\\t#include <morphnormal_vertex>\\\\n\\t#include <skinnormal_vertex>\\\\n\\t#include <defaultnormal_vertex>\\\\n\\t#endif\\\\n\\t#include <begin_vertex>\\\\n\\t#include <morphtarget_vertex>\\\\n\\t#include <skinning_vertex>\\\\n\\t#include <project_vertex>\\\\n\\t#include <logdepthbuf_vertex>\\\\n\\t#include <worldpos_vertex>\\\\n\\t#include <clipping_planes_vertex>\\\\n\\t#include <envmap_vertex>\\\\n}\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderLib/meshlambert_frag.glsl\\n\\n\\tTHREE.ShaderChunk[ 'meshlambert_frag' ] = \\\"uniform vec3 diffuse;\\\\nuniform vec3 emissive;\\\\nuniform float opacity;\\\\nvarying vec3 vLightFront;\\\\n#ifdef DOUBLE_SIDED\\\\n\\tvarying vec3 vLightBack;\\\\n#endif\\\\n#include <common>\\\\n#include <packing>\\\\n#include <color_pars_fragment>\\\\n#include <uv_pars_fragment>\\\\n#include <uv2_pars_fragment>\\\\n#include <map_pars_fragment>\\\\n#include <alphamap_pars_fragment>\\\\n#include <aomap_pars_fragment>\\\\n#include <lightmap_pars_fragment>\\\\n#include <emissivemap_pars_fragment>\\\\n#include <envmap_pars_fragment>\\\\n#include <bsdfs>\\\\n#include <lights_pars>\\\\n#include <fog_pars_fragment>\\\\n#include <shadowmap_pars_fragment>\\\\n#include <shadowmask_pars_fragment>\\\\n#include <specularmap_pars_fragment>\\\\n#include <logdepthbuf_pars_fragment>\\\\n#include <clipping_planes_pars_fragment>\\\\nvoid main() {\\\\n\\t#include <clipping_planes_fragment>\\\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\\\n\\tvec3 totalEmissiveRadiance = emissive;\\\\n\\t#include <logdepthbuf_fragment>\\\\n\\t#include <map_fragment>\\\\n\\t#include <color_fragment>\\\\n\\t#include <alphamap_fragment>\\\\n\\t#include <alphatest_fragment>\\\\n\\t#include <specularmap_fragment>\\\\n\\t#include <emissivemap_fragment>\\\\n\\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\\\n\\t#include <lightmap_fragment>\\\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\\\n\\t#ifdef DOUBLE_SIDED\\\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\\\n\\t#else\\\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\\\n\\t#endif\\\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\\\n\\t#include <aomap_fragment>\\\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\\\n\\t#include <normal_flip>\\\\n\\t#include <envmap_fragment>\\\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\\\n\\t#include <premultiplied_alpha_fragment>\\\\n\\t#include <tonemapping_fragment>\\\\n\\t#include <encodings_fragment>\\\\n\\t#include <fog_fragment>\\\\n}\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderLib/meshlambert_vert.glsl\\n\\n\\tTHREE.ShaderChunk[ 'meshlambert_vert' ] = \\\"#define LAMBERT\\\\nvarying vec3 vLightFront;\\\\n#ifdef DOUBLE_SIDED\\\\n\\tvarying vec3 vLightBack;\\\\n#endif\\\\n#include <common>\\\\n#include <uv_pars_vertex>\\\\n#include <uv2_pars_vertex>\\\\n#include <envmap_pars_vertex>\\\\n#include <bsdfs>\\\\n#include <lights_pars>\\\\n#include <color_pars_vertex>\\\\n#include <morphtarget_pars_vertex>\\\\n#include <skinning_pars_vertex>\\\\n#include <shadowmap_pars_vertex>\\\\n#include <logdepthbuf_pars_vertex>\\\\n#include <clipping_planes_pars_vertex>\\\\nvoid main() {\\\\n\\t#include <uv_vertex>\\\\n\\t#include <uv2_vertex>\\\\n\\t#include <color_vertex>\\\\n\\t#include <beginnormal_vertex>\\\\n\\t#include <morphnormal_vertex>\\\\n\\t#include <skinbase_vertex>\\\\n\\t#include <skinnormal_vertex>\\\\n\\t#include <defaultnormal_vertex>\\\\n\\t#include <begin_vertex>\\\\n\\t#include <morphtarget_vertex>\\\\n\\t#include <skinning_vertex>\\\\n\\t#include <project_vertex>\\\\n\\t#include <logdepthbuf_vertex>\\\\n\\t#include <clipping_planes_vertex>\\\\n\\t#include <worldpos_vertex>\\\\n\\t#include <envmap_vertex>\\\\n\\t#include <lights_lambert_vertex>\\\\n\\t#include <shadowmap_vertex>\\\\n}\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderLib/meshphong_frag.glsl\\n\\n\\tTHREE.ShaderChunk[ 'meshphong_frag' ] = \\\"#define PHONG\\\\nuniform vec3 diffuse;\\\\nuniform vec3 emissive;\\\\nuniform vec3 specular;\\\\nuniform float shininess;\\\\nuniform float opacity;\\\\n#include <common>\\\\n#include <packing>\\\\n#include <color_pars_fragment>\\\\n#include <uv_pars_fragment>\\\\n#include <uv2_pars_fragment>\\\\n#include <map_pars_fragment>\\\\n#include <alphamap_pars_fragment>\\\\n#include <aomap_pars_fragment>\\\\n#include <lightmap_pars_fragment>\\\\n#include <emissivemap_pars_fragment>\\\\n#include <envmap_pars_fragment>\\\\n#include <fog_pars_fragment>\\\\n#include <bsdfs>\\\\n#include <lights_pars>\\\\n#include <lights_phong_pars_fragment>\\\\n#include <shadowmap_pars_fragment>\\\\n#include <bumpmap_pars_fragment>\\\\n#include <normalmap_pars_fragment>\\\\n#include <specularmap_pars_fragment>\\\\n#include <logdepthbuf_pars_fragment>\\\\n#include <clipping_planes_pars_fragment>\\\\nvoid main() {\\\\n\\t#include <clipping_planes_fragment>\\\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\\\n\\tvec3 totalEmissiveRadiance = emissive;\\\\n\\t#include <logdepthbuf_fragment>\\\\n\\t#include <map_fragment>\\\\n\\t#include <color_fragment>\\\\n\\t#include <alphamap_fragment>\\\\n\\t#include <alphatest_fragment>\\\\n\\t#include <specularmap_fragment>\\\\n\\t#include <normal_flip>\\\\n\\t#include <normal_fragment>\\\\n\\t#include <emissivemap_fragment>\\\\n\\t#include <lights_phong_fragment>\\\\n\\t#include <lights_template>\\\\n\\t#include <aomap_fragment>\\\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\\\n\\t#include <envmap_fragment>\\\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\\\n\\t#include <premultiplied_alpha_fragment>\\\\n\\t#include <tonemapping_fragment>\\\\n\\t#include <encodings_fragment>\\\\n\\t#include <fog_fragment>\\\\n}\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderLib/meshphong_vert.glsl\\n\\n\\tTHREE.ShaderChunk[ 'meshphong_vert' ] = \\\"#define PHONG\\\\nvarying vec3 vViewPosition;\\\\n#ifndef FLAT_SHADED\\\\n\\tvarying vec3 vNormal;\\\\n#endif\\\\n#include <common>\\\\n#include <uv_pars_vertex>\\\\n#include <uv2_pars_vertex>\\\\n#include <displacementmap_pars_vertex>\\\\n#include <envmap_pars_vertex>\\\\n#include <color_pars_vertex>\\\\n#include <morphtarget_pars_vertex>\\\\n#include <skinning_pars_vertex>\\\\n#include <shadowmap_pars_vertex>\\\\n#include <logdepthbuf_pars_vertex>\\\\n#include <clipping_planes_pars_vertex>\\\\nvoid main() {\\\\n\\t#include <uv_vertex>\\\\n\\t#include <uv2_vertex>\\\\n\\t#include <color_vertex>\\\\n\\t#include <beginnormal_vertex>\\\\n\\t#include <morphnormal_vertex>\\\\n\\t#include <skinbase_vertex>\\\\n\\t#include <skinnormal_vertex>\\\\n\\t#include <defaultnormal_vertex>\\\\n#ifndef FLAT_SHADED\\\\n\\tvNormal = normalize( transformedNormal );\\\\n#endif\\\\n\\t#include <begin_vertex>\\\\n\\t#include <displacementmap_vertex>\\\\n\\t#include <morphtarget_vertex>\\\\n\\t#include <skinning_vertex>\\\\n\\t#include <project_vertex>\\\\n\\t#include <logdepthbuf_vertex>\\\\n\\t#include <clipping_planes_vertex>\\\\n\\tvViewPosition = - mvPosition.xyz;\\\\n\\t#include <worldpos_vertex>\\\\n\\t#include <envmap_vertex>\\\\n\\t#include <shadowmap_vertex>\\\\n}\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderLib/meshphysical_frag.glsl\\n\\n\\tTHREE.ShaderChunk[ 'meshphysical_frag' ] = \\\"#define PHYSICAL\\\\nuniform vec3 diffuse;\\\\nuniform vec3 emissive;\\\\nuniform float roughness;\\\\nuniform float metalness;\\\\nuniform float opacity;\\\\n#ifndef STANDARD\\\\n\\tuniform float clearCoat;\\\\n\\tuniform float clearCoatRoughness;\\\\n#endif\\\\nuniform float envMapIntensity;\\\\nvarying vec3 vViewPosition;\\\\n#ifndef FLAT_SHADED\\\\n\\tvarying vec3 vNormal;\\\\n#endif\\\\n#include <common>\\\\n#include <packing>\\\\n#include <color_pars_fragment>\\\\n#include <uv_pars_fragment>\\\\n#include <uv2_pars_fragment>\\\\n#include <map_pars_fragment>\\\\n#include <alphamap_pars_fragment>\\\\n#include <aomap_pars_fragment>\\\\n#include <lightmap_pars_fragment>\\\\n#include <emissivemap_pars_fragment>\\\\n#include <envmap_pars_fragment>\\\\n#include <fog_pars_fragment>\\\\n#include <bsdfs>\\\\n#include <cube_uv_reflection_fragment>\\\\n#include <lights_pars>\\\\n#include <lights_physical_pars_fragment>\\\\n#include <shadowmap_pars_fragment>\\\\n#include <bumpmap_pars_fragment>\\\\n#include <normalmap_pars_fragment>\\\\n#include <roughnessmap_pars_fragment>\\\\n#include <metalnessmap_pars_fragment>\\\\n#include <logdepthbuf_pars_fragment>\\\\n#include <clipping_planes_pars_fragment>\\\\nvoid main() {\\\\n\\t#include <clipping_planes_fragment>\\\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\\\n\\tvec3 totalEmissiveRadiance = emissive;\\\\n\\t#include <logdepthbuf_fragment>\\\\n\\t#include <map_fragment>\\\\n\\t#include <color_fragment>\\\\n\\t#include <alphamap_fragment>\\\\n\\t#include <alphatest_fragment>\\\\n\\t#include <specularmap_fragment>\\\\n\\t#include <roughnessmap_fragment>\\\\n\\t#include <metalnessmap_fragment>\\\\n\\t#include <normal_flip>\\\\n\\t#include <normal_fragment>\\\\n\\t#include <emissivemap_fragment>\\\\n\\t#include <lights_physical_fragment>\\\\n\\t#include <lights_template>\\\\n\\t#include <aomap_fragment>\\\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\\\n\\t#include <premultiplied_alpha_fragment>\\\\n\\t#include <tonemapping_fragment>\\\\n\\t#include <encodings_fragment>\\\\n\\t#include <fog_fragment>\\\\n}\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderLib/meshphysical_vert.glsl\\n\\n\\tTHREE.ShaderChunk[ 'meshphysical_vert' ] = \\\"#define PHYSICAL\\\\nvarying vec3 vViewPosition;\\\\n#ifndef FLAT_SHADED\\\\n\\tvarying vec3 vNormal;\\\\n#endif\\\\n#include <common>\\\\n#include <uv_pars_vertex>\\\\n#include <uv2_pars_vertex>\\\\n#include <displacementmap_pars_vertex>\\\\n#include <color_pars_vertex>\\\\n#include <morphtarget_pars_vertex>\\\\n#include <skinning_pars_vertex>\\\\n#include <shadowmap_pars_vertex>\\\\n#include <specularmap_pars_fragment>\\\\n#include <logdepthbuf_pars_vertex>\\\\n#include <clipping_planes_pars_vertex>\\\\nvoid main() {\\\\n\\t#include <uv_vertex>\\\\n\\t#include <uv2_vertex>\\\\n\\t#include <color_vertex>\\\\n\\t#include <beginnormal_vertex>\\\\n\\t#include <morphnormal_vertex>\\\\n\\t#include <skinbase_vertex>\\\\n\\t#include <skinnormal_vertex>\\\\n\\t#include <defaultnormal_vertex>\\\\n#ifndef FLAT_SHADED\\\\n\\tvNormal = normalize( transformedNormal );\\\\n#endif\\\\n\\t#include <begin_vertex>\\\\n\\t#include <displacementmap_vertex>\\\\n\\t#include <morphtarget_vertex>\\\\n\\t#include <skinning_vertex>\\\\n\\t#include <project_vertex>\\\\n\\t#include <logdepthbuf_vertex>\\\\n\\t#include <clipping_planes_vertex>\\\\n\\tvViewPosition = - mvPosition.xyz;\\\\n\\t#include <worldpos_vertex>\\\\n\\t#include <shadowmap_vertex>\\\\n}\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderLib/normal_frag.glsl\\n\\n\\tTHREE.ShaderChunk[ 'normal_frag' ] = \\\"uniform float opacity;\\\\nvarying vec3 vNormal;\\\\n#include <common>\\\\n#include <packing>\\\\n#include <logdepthbuf_pars_fragment>\\\\n#include <clipping_planes_pars_fragment>\\\\nvoid main() {\\\\n\\t#include <clipping_planes_fragment>\\\\n\\tgl_FragColor = vec4( packNormalToRGB( vNormal ), opacity );\\\\n\\t#include <logdepthbuf_fragment>\\\\n}\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderLib/normal_vert.glsl\\n\\n\\tTHREE.ShaderChunk[ 'normal_vert' ] = \\\"varying vec3 vNormal;\\\\n#include <common>\\\\n#include <morphtarget_pars_vertex>\\\\n#include <logdepthbuf_pars_vertex>\\\\n#include <clipping_planes_pars_vertex>\\\\nvoid main() {\\\\n\\tvNormal = normalize( normalMatrix * normal );\\\\n\\t#include <begin_vertex>\\\\n\\t#include <morphtarget_vertex>\\\\n\\t#include <project_vertex>\\\\n\\t#include <logdepthbuf_vertex>\\\\n\\t#include <clipping_planes_vertex>\\\\n}\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderLib/points_frag.glsl\\n\\n\\tTHREE.ShaderChunk[ 'points_frag' ] = \\\"uniform vec3 diffuse;\\\\nuniform float opacity;\\\\n#include <common>\\\\n#include <color_pars_fragment>\\\\n#include <map_particle_pars_fragment>\\\\n#include <fog_pars_fragment>\\\\n#include <shadowmap_pars_fragment>\\\\n#include <logdepthbuf_pars_fragment>\\\\n#include <clipping_planes_pars_fragment>\\\\nvoid main() {\\\\n\\t#include <clipping_planes_fragment>\\\\n\\tvec3 outgoingLight = vec3( 0.0 );\\\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\\\n\\t#include <logdepthbuf_fragment>\\\\n\\t#include <map_particle_fragment>\\\\n\\t#include <color_fragment>\\\\n\\t#include <alphatest_fragment>\\\\n\\toutgoingLight = diffuseColor.rgb;\\\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\\\n\\t#include <premultiplied_alpha_fragment>\\\\n\\t#include <tonemapping_fragment>\\\\n\\t#include <encodings_fragment>\\\\n\\t#include <fog_fragment>\\\\n}\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderLib/points_vert.glsl\\n\\n\\tTHREE.ShaderChunk[ 'points_vert' ] = \\\"uniform float size;\\\\nuniform float scale;\\\\n#include <common>\\\\n#include <color_pars_vertex>\\\\n#include <shadowmap_pars_vertex>\\\\n#include <logdepthbuf_pars_vertex>\\\\n#include <clipping_planes_pars_vertex>\\\\nvoid main() {\\\\n\\t#include <color_vertex>\\\\n\\t#include <begin_vertex>\\\\n\\t#include <project_vertex>\\\\n\\t#ifdef USE_SIZEATTENUATION\\\\n\\t\\tgl_PointSize = size * ( scale / - mvPosition.z );\\\\n\\t#else\\\\n\\t\\tgl_PointSize = size;\\\\n\\t#endif\\\\n\\t#include <logdepthbuf_vertex>\\\\n\\t#include <clipping_planes_vertex>\\\\n\\t#include <worldpos_vertex>\\\\n\\t#include <shadowmap_vertex>\\\\n}\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderLib/shadow_frag.glsl\\n\\n\\tTHREE.ShaderChunk[ 'shadow_frag' ] = \\\"uniform float opacity;\\\\n#include <common>\\\\n#include <packing>\\\\n#include <bsdfs>\\\\n#include <lights_pars>\\\\n#include <shadowmap_pars_fragment>\\\\n#include <shadowmask_pars_fragment>\\\\nvoid main() {\\\\n\\tgl_FragColor = vec4( 0.0, 0.0, 0.0, opacity * ( 1.0  - getShadowMask() ) );\\\\n}\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderLib/shadow_vert.glsl\\n\\n\\tTHREE.ShaderChunk[ 'shadow_vert' ] = \\\"#include <shadowmap_pars_vertex>\\\\nvoid main() {\\\\n\\t#include <begin_vertex>\\\\n\\t#include <project_vertex>\\\\n\\t#include <worldpos_vertex>\\\\n\\t#include <shadowmap_vertex>\\\\n}\\\\n\\\";\\n\\n\\t// File:src/renderers/shaders/ShaderLib.js\\n\\n\\t/**\\n\\t * Webgl Shader Library for three.js\\n\\t *\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t * @author mikael emtinger / http://gomo.se/\\n\\t */\\n\\n\\n\\tTHREE.ShaderLib = {\\n\\n\\t\\t'basic': {\\n\\n\\t\\t\\tuniforms: THREE.UniformsUtils.merge( [\\n\\n\\t\\t\\t\\tTHREE.UniformsLib[ 'common' ],\\n\\t\\t\\t\\tTHREE.UniformsLib[ 'aomap' ],\\n\\t\\t\\t\\tTHREE.UniformsLib[ 'fog' ]\\n\\n\\t\\t\\t] ),\\n\\n\\t\\t\\tvertexShader: THREE.ShaderChunk[ 'meshbasic_vert' ],\\n\\t\\t\\tfragmentShader: THREE.ShaderChunk[ 'meshbasic_frag' ]\\n\\n\\t\\t},\\n\\n\\t\\t'lambert': {\\n\\n\\t\\t\\tuniforms: THREE.UniformsUtils.merge( [\\n\\n\\t\\t\\t\\tTHREE.UniformsLib[ 'common' ],\\n\\t\\t\\t\\tTHREE.UniformsLib[ 'aomap' ],\\n\\t\\t\\t\\tTHREE.UniformsLib[ 'lightmap' ],\\n\\t\\t\\t\\tTHREE.UniformsLib[ 'emissivemap' ],\\n\\t\\t\\t\\tTHREE.UniformsLib[ 'fog' ],\\n\\t\\t\\t\\tTHREE.UniformsLib[ 'lights' ],\\n\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"emissive\\\" : { value: new THREE.Color( 0x000000 ) }\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t] ),\\n\\n\\t\\t\\tvertexShader: THREE.ShaderChunk[ 'meshlambert_vert' ],\\n\\t\\t\\tfragmentShader: THREE.ShaderChunk[ 'meshlambert_frag' ]\\n\\n\\t\\t},\\n\\n\\t\\t'phong': {\\n\\n\\t\\t\\tuniforms: THREE.UniformsUtils.merge( [\\n\\n\\t\\t\\t\\tTHREE.UniformsLib[ 'common' ],\\n\\t\\t\\t\\tTHREE.UniformsLib[ 'aomap' ],\\n\\t\\t\\t\\tTHREE.UniformsLib[ 'lightmap' ],\\n\\t\\t\\t\\tTHREE.UniformsLib[ 'emissivemap' ],\\n\\t\\t\\t\\tTHREE.UniformsLib[ 'bumpmap' ],\\n\\t\\t\\t\\tTHREE.UniformsLib[ 'normalmap' ],\\n\\t\\t\\t\\tTHREE.UniformsLib[ 'displacementmap' ],\\n\\t\\t\\t\\tTHREE.UniformsLib[ 'fog' ],\\n\\t\\t\\t\\tTHREE.UniformsLib[ 'lights' ],\\n\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"emissive\\\" : { value: new THREE.Color( 0x000000 ) },\\n\\t\\t\\t\\t\\t\\\"specular\\\" : { value: new THREE.Color( 0x111111 ) },\\n\\t\\t\\t\\t\\t\\\"shininess\\\": { value: 30 }\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t] ),\\n\\n\\t\\t\\tvertexShader: THREE.ShaderChunk[ 'meshphong_vert' ],\\n\\t\\t\\tfragmentShader: THREE.ShaderChunk[ 'meshphong_frag' ]\\n\\n\\t\\t},\\n\\n\\t\\t'standard': {\\n\\n\\t\\t\\tuniforms: THREE.UniformsUtils.merge( [\\n\\n\\t\\t\\t\\tTHREE.UniformsLib[ 'common' ],\\n\\t\\t\\t\\tTHREE.UniformsLib[ 'aomap' ],\\n\\t\\t\\t\\tTHREE.UniformsLib[ 'lightmap' ],\\n\\t\\t\\t\\tTHREE.UniformsLib[ 'emissivemap' ],\\n\\t\\t\\t\\tTHREE.UniformsLib[ 'bumpmap' ],\\n\\t\\t\\t\\tTHREE.UniformsLib[ 'normalmap' ],\\n\\t\\t\\t\\tTHREE.UniformsLib[ 'displacementmap' ],\\n\\t\\t\\t\\tTHREE.UniformsLib[ 'roughnessmap' ],\\n\\t\\t\\t\\tTHREE.UniformsLib[ 'metalnessmap' ],\\n\\t\\t\\t\\tTHREE.UniformsLib[ 'fog' ],\\n\\t\\t\\t\\tTHREE.UniformsLib[ 'lights' ],\\n\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"emissive\\\" : { value: new THREE.Color( 0x000000 ) },\\n\\t\\t\\t\\t\\t\\\"roughness\\\": { value: 0.5 },\\n\\t\\t\\t\\t\\t\\\"metalness\\\": { value: 0 },\\n\\t\\t\\t\\t\\t\\\"envMapIntensity\\\" : { value: 1 }, // temporary\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t] ),\\n\\n\\t\\t\\tvertexShader: THREE.ShaderChunk[ 'meshphysical_vert' ],\\n\\t\\t\\tfragmentShader: THREE.ShaderChunk[ 'meshphysical_frag' ]\\n\\n\\t\\t},\\n\\n\\t\\t'points': {\\n\\n\\t\\t\\tuniforms: THREE.UniformsUtils.merge( [\\n\\n\\t\\t\\t\\tTHREE.UniformsLib[ 'points' ],\\n\\t\\t\\t\\tTHREE.UniformsLib[ 'fog' ]\\n\\n\\t\\t\\t] ),\\n\\n\\t\\t\\tvertexShader: THREE.ShaderChunk[ 'points_vert' ],\\n\\t\\t\\tfragmentShader: THREE.ShaderChunk[ 'points_frag' ]\\n\\n\\t\\t},\\n\\n\\t\\t'dashed': {\\n\\n\\t\\t\\tuniforms: THREE.UniformsUtils.merge( [\\n\\n\\t\\t\\t\\tTHREE.UniformsLib[ 'common' ],\\n\\t\\t\\t\\tTHREE.UniformsLib[ 'fog' ],\\n\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"scale\\\"    : { value: 1 },\\n\\t\\t\\t\\t\\t\\\"dashSize\\\" : { value: 1 },\\n\\t\\t\\t\\t\\t\\\"totalSize\\\": { value: 2 }\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t] ),\\n\\n\\t\\t\\tvertexShader: THREE.ShaderChunk[ 'linedashed_vert' ],\\n\\t\\t\\tfragmentShader: THREE.ShaderChunk[ 'linedashed_frag' ]\\n\\n\\t\\t},\\n\\n\\t\\t'depth': {\\n\\n\\t\\t\\tuniforms: THREE.UniformsUtils.merge( [\\n\\n\\t\\t\\t\\tTHREE.UniformsLib[ 'common' ],\\n\\t\\t\\t\\tTHREE.UniformsLib[ 'displacementmap' ]\\n\\n\\t\\t\\t] ),\\n\\n\\t\\t\\tvertexShader: THREE.ShaderChunk[ 'depth_vert' ],\\n\\t\\t\\tfragmentShader: THREE.ShaderChunk[ 'depth_frag' ]\\n\\n\\t\\t},\\n\\n\\t\\t'normal': {\\n\\n\\t\\t\\tuniforms: {\\n\\n\\t\\t\\t\\t\\\"opacity\\\" : { value: 1.0 }\\n\\n\\t\\t\\t},\\n\\n\\t\\t\\tvertexShader: THREE.ShaderChunk[ 'normal_vert' ],\\n\\t\\t\\tfragmentShader: THREE.ShaderChunk[ 'normal_frag' ]\\n\\n\\t\\t},\\n\\n\\t\\t/* -------------------------------------------------------------------------\\n\\t\\t//\\tCube map shader\\n\\t\\t ------------------------------------------------------------------------- */\\n\\n\\t\\t'cube': {\\n\\n\\t\\t\\tuniforms: {\\n\\t\\t\\t\\t\\\"tCube\\\": { value: null },\\n\\t\\t\\t\\t\\\"tFlip\\\": { value: - 1 },\\n\\t\\t\\t\\t\\\"opacity\\\": { value: 1.0 }\\n\\t\\t\\t},\\n\\n\\t\\t\\tvertexShader: THREE.ShaderChunk[ 'cube_vert' ],\\n\\t\\t\\tfragmentShader: THREE.ShaderChunk[ 'cube_frag' ]\\n\\n\\t\\t},\\n\\n\\t\\t/* -------------------------------------------------------------------------\\n\\t\\t//\\tCube map shader\\n\\t\\t ------------------------------------------------------------------------- */\\n\\n\\t\\t'equirect': {\\n\\n\\t\\t\\tuniforms: {\\n\\t\\t\\t\\t\\\"tEquirect\\\": { value: null },\\n\\t\\t\\t\\t\\\"tFlip\\\": { value: - 1 }\\n\\t\\t\\t},\\n\\n\\t\\t\\tvertexShader: THREE.ShaderChunk[ 'equirect_vert' ],\\n\\t\\t\\tfragmentShader: THREE.ShaderChunk[ 'equirect_frag' ]\\n\\n\\t\\t},\\n\\n\\t\\t'distanceRGBA': {\\n\\n\\t\\t\\tuniforms: {\\n\\n\\t\\t\\t\\t\\\"lightPos\\\": { value: new THREE.Vector3() }\\n\\n\\t\\t\\t},\\n\\n\\t\\t\\tvertexShader: THREE.ShaderChunk[ 'distanceRGBA_vert' ],\\n\\t\\t\\tfragmentShader: THREE.ShaderChunk[ 'distanceRGBA_frag' ]\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\tTHREE.ShaderLib[ 'physical' ] = {\\n\\n\\t\\tuniforms: THREE.UniformsUtils.merge( [\\n\\n\\t\\t\\tTHREE.ShaderLib[ 'standard' ].uniforms,\\n\\n\\t\\t\\t{\\n\\t\\t\\t\\t\\\"clearCoat\\\": { value: 0 },\\n\\t\\t\\t\\t\\\"clearCoatRoughness\\\": { value: 0 }\\n\\t\\t\\t}\\n\\n\\t\\t] ),\\n\\n\\t\\tvertexShader: THREE.ShaderChunk[ 'meshphysical_vert' ],\\n\\t\\tfragmentShader: THREE.ShaderChunk[ 'meshphysical_frag' ]\\n\\n\\t};\\n\\n\\t// File:src/renderers/WebGLRenderer.js\\n\\n\\t/**\\n\\t * @author supereggbert / http://www.paulbrunt.co.uk/\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t * @author szimek / https://github.com/szimek/\\n\\t * @author tschw\\n\\t */\\n\\n\\tTHREE.WebGLRenderer = function ( parameters ) {\\n\\n\\t\\tconsole.log( 'THREE.WebGLRenderer', THREE.REVISION );\\n\\n\\t\\tparameters = parameters || {};\\n\\n\\t\\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' ),\\n\\t\\t_context = parameters.context !== undefined ? parameters.context : null,\\n\\n\\t\\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\\n\\t\\t_depth = parameters.depth !== undefined ? parameters.depth : true,\\n\\t\\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\\n\\t\\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\\n\\t\\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\\n\\t\\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false;\\n\\n\\t\\tvar lights = [];\\n\\n\\t\\tvar opaqueObjects = [];\\n\\t\\tvar opaqueObjectsLastIndex = - 1;\\n\\t\\tvar transparentObjects = [];\\n\\t\\tvar transparentObjectsLastIndex = - 1;\\n\\n\\t\\tvar morphInfluences = new Float32Array( 8 );\\n\\n\\t\\tvar sprites = [];\\n\\t\\tvar lensFlares = [];\\n\\n\\t\\t// public properties\\n\\n\\t\\tthis.domElement = _canvas;\\n\\t\\tthis.context = null;\\n\\n\\t\\t// clearing\\n\\n\\t\\tthis.autoClear = true;\\n\\t\\tthis.autoClearColor = true;\\n\\t\\tthis.autoClearDepth = true;\\n\\t\\tthis.autoClearStencil = true;\\n\\n\\t\\t// scene graph\\n\\n\\t\\tthis.sortObjects = true;\\n\\n\\t\\t// user-defined clipping\\n\\n\\t\\tthis.clippingPlanes = [];\\n\\t\\tthis.localClippingEnabled = false;\\n\\n\\t\\t// physically based shading\\n\\n\\t\\tthis.gammaFactor = 2.0;\\t// for backwards compatibility\\n\\t\\tthis.gammaInput = false;\\n\\t\\tthis.gammaOutput = false;\\n\\n\\t\\t// physical lights\\n\\n\\t\\tthis.physicallyCorrectLights = false;\\n\\n\\t\\t// tone mapping\\n\\n\\t\\tthis.toneMapping = THREE.LinearToneMapping;\\n\\t\\tthis.toneMappingExposure = 1.0;\\n\\t\\tthis.toneMappingWhitePoint = 1.0;\\n\\n\\t\\t// morphs\\n\\n\\t\\tthis.maxMorphTargets = 8;\\n\\t\\tthis.maxMorphNormals = 4;\\n\\n\\t\\t// internal properties\\n\\n\\t\\tvar _this = this,\\n\\n\\t\\t// internal state cache\\n\\n\\t\\t_currentProgram = null,\\n\\t\\t_currentRenderTarget = null,\\n\\t\\t_currentFramebuffer = null,\\n\\t\\t_currentMaterialId = - 1,\\n\\t\\t_currentGeometryProgram = '',\\n\\t\\t_currentCamera = null,\\n\\n\\t\\t_currentScissor = new THREE.Vector4(),\\n\\t\\t_currentScissorTest = null,\\n\\n\\t\\t_currentViewport = new THREE.Vector4(),\\n\\n\\t\\t//\\n\\n\\t\\t_usedTextureUnits = 0,\\n\\n\\t\\t//\\n\\n\\t\\t_clearColor = new THREE.Color( 0x000000 ),\\n\\t\\t_clearAlpha = 0,\\n\\n\\t\\t_width = _canvas.width,\\n\\t\\t_height = _canvas.height,\\n\\n\\t\\t_pixelRatio = 1,\\n\\n\\t\\t_scissor = new THREE.Vector4( 0, 0, _width, _height ),\\n\\t\\t_scissorTest = false,\\n\\n\\t\\t_viewport = new THREE.Vector4( 0, 0, _width, _height ),\\n\\n\\t\\t// frustum\\n\\n\\t\\t_frustum = new THREE.Frustum(),\\n\\n\\t\\t// clipping\\n\\n\\t\\t_clipping = new THREE.WebGLClipping(),\\n\\t\\t_clippingEnabled = false,\\n\\t\\t_localClippingEnabled = false,\\n\\n\\t\\t_sphere = new THREE.Sphere(),\\n\\n\\t\\t// camera matrices cache\\n\\n\\t\\t_projScreenMatrix = new THREE.Matrix4(),\\n\\n\\t\\t_vector3 = new THREE.Vector3(),\\n\\n\\t\\t// light arrays cache\\n\\n\\t\\t_lights = {\\n\\n\\t\\t\\thash: '',\\n\\n\\t\\t\\tambient: [ 0, 0, 0 ],\\n\\t\\t\\tdirectional: [],\\n\\t\\t\\tdirectionalShadowMap: [],\\n\\t\\t\\tdirectionalShadowMatrix: [],\\n\\t\\t\\tspot: [],\\n\\t\\t\\tspotShadowMap: [],\\n\\t\\t\\tspotShadowMatrix: [],\\n\\t\\t\\tpoint: [],\\n\\t\\t\\tpointShadowMap: [],\\n\\t\\t\\tpointShadowMatrix: [],\\n\\t\\t\\themi: [],\\n\\n\\t\\t\\tshadows: []\\n\\n\\t\\t},\\n\\n\\t\\t// info\\n\\n\\t\\t_infoRender = {\\n\\n\\t\\t\\tcalls: 0,\\n\\t\\t\\tvertices: 0,\\n\\t\\t\\tfaces: 0,\\n\\t\\t\\tpoints: 0\\n\\n\\t\\t};\\n\\n\\t\\tthis.info = {\\n\\n\\t\\t\\trender: _infoRender,\\n\\t\\t\\tmemory: {\\n\\n\\t\\t\\t\\tgeometries: 0,\\n\\t\\t\\t\\ttextures: 0\\n\\n\\t\\t\\t},\\n\\t\\t\\tprograms: null\\n\\n\\t\\t};\\n\\n\\n\\t\\t// initialize\\n\\n\\t\\tvar _gl;\\n\\n\\t\\ttry {\\n\\n\\t\\t\\tvar attributes = {\\n\\t\\t\\t\\talpha: _alpha,\\n\\t\\t\\t\\tdepth: _depth,\\n\\t\\t\\t\\tstencil: _stencil,\\n\\t\\t\\t\\tantialias: _antialias,\\n\\t\\t\\t\\tpremultipliedAlpha: _premultipliedAlpha,\\n\\t\\t\\t\\tpreserveDrawingBuffer: _preserveDrawingBuffer\\n\\t\\t\\t};\\n\\n\\t\\t\\t_gl = _context || _canvas.getContext( 'webgl', attributes ) || _canvas.getContext( 'experimental-webgl', attributes );\\n\\n\\t\\t\\tif ( _gl === null ) {\\n\\n\\t\\t\\t\\tif ( _canvas.getContext( 'webgl' ) !== null ) {\\n\\n\\t\\t\\t\\t\\tthrow 'Error creating WebGL context with your selected attributes.';\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\tthrow 'Error creating WebGL context.';\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\\n\\n\\t\\t\\tif ( _gl.getShaderPrecisionFormat === undefined ) {\\n\\n\\t\\t\\t\\t_gl.getShaderPrecisionFormat = function () {\\n\\n\\t\\t\\t\\t\\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\\n\\n\\t\\t\\t\\t};\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\\n\\n\\t\\t} catch ( error ) {\\n\\n\\t\\t\\tconsole.error( 'THREE.WebGLRenderer: ' + error );\\n\\n\\t\\t}\\n\\n\\t\\tvar extensions = new THREE.WebGLExtensions( _gl );\\n\\n\\t\\textensions.get( 'WEBGL_depth_texture' );\\n\\t\\textensions.get( 'OES_texture_float' );\\n\\t\\textensions.get( 'OES_texture_float_linear' );\\n\\t\\textensions.get( 'OES_texture_half_float' );\\n\\t\\textensions.get( 'OES_texture_half_float_linear' );\\n\\t\\textensions.get( 'OES_standard_derivatives' );\\n\\t\\textensions.get( 'ANGLE_instanced_arrays' );\\n\\n\\t\\tif ( extensions.get( 'OES_element_index_uint' ) ) {\\n\\n\\t\\t\\tTHREE.BufferGeometry.MaxIndex = 4294967296;\\n\\n\\t\\t}\\n\\n\\t\\tvar capabilities = new THREE.WebGLCapabilities( _gl, extensions, parameters );\\n\\n\\t\\tvar state = new THREE.WebGLState( _gl, extensions, paramThreeToGL );\\n\\t\\tvar properties = new THREE.WebGLProperties();\\n\\t\\tvar textures = new THREE.WebGLTextures( _gl, extensions, state, properties, capabilities, paramThreeToGL, this.info );\\n\\t\\tvar objects = new THREE.WebGLObjects( _gl, properties, this.info );\\n\\t\\tvar programCache = new THREE.WebGLPrograms( this, capabilities );\\n\\t\\tvar lightCache = new THREE.WebGLLights();\\n\\n\\t\\tthis.info.programs = programCache.programs;\\n\\n\\t\\tvar bufferRenderer = new THREE.WebGLBufferRenderer( _gl, extensions, _infoRender );\\n\\t\\tvar indexedBufferRenderer = new THREE.WebGLIndexedBufferRenderer( _gl, extensions, _infoRender );\\n\\n\\t\\t//\\n\\n\\t\\tvar backgroundCamera = new THREE.OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\\n\\t\\tvar backgroundCamera2 = new THREE.PerspectiveCamera();\\n\\t\\tvar backgroundPlaneMesh = new THREE.Mesh(\\n\\t\\t\\tnew THREE.PlaneBufferGeometry( 2, 2 ),\\n\\t\\t\\tnew THREE.MeshBasicMaterial( { depthTest: false, depthWrite: false, fog: false } )\\n\\t\\t);\\n\\t\\tvar backgroundBoxShader = THREE.ShaderLib[ 'cube' ];\\n\\t\\tvar backgroundBoxMesh = new THREE.Mesh(\\n\\t\\t\\tnew THREE.BoxBufferGeometry( 5, 5, 5 ),\\n\\t\\t\\tnew THREE.ShaderMaterial( {\\n\\t\\t\\t\\tuniforms: backgroundBoxShader.uniforms,\\n\\t\\t\\t\\tvertexShader: backgroundBoxShader.vertexShader,\\n\\t\\t\\t\\tfragmentShader: backgroundBoxShader.fragmentShader,\\n\\t\\t\\t\\tside: THREE.BackSide,\\n\\t\\t\\t\\tdepthTest: false,\\n\\t\\t\\t\\tdepthWrite: false,\\n\\t\\t\\t\\tfog: false\\n\\t\\t\\t} )\\n\\t\\t);\\n\\n\\t\\t//\\n\\n\\t\\tfunction getTargetPixelRatio() {\\n\\n\\t\\t\\treturn _currentRenderTarget === null ? _pixelRatio : 1;\\n\\n\\t\\t}\\n\\n\\t\\tfunction glClearColor( r, g, b, a ) {\\n\\n\\t\\t\\tif ( _premultipliedAlpha === true ) {\\n\\n\\t\\t\\t\\tr *= a; g *= a; b *= a;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tstate.clearColor( r, g, b, a );\\n\\n\\t\\t}\\n\\n\\t\\tfunction setDefaultGLState() {\\n\\n\\t\\t\\tstate.init();\\n\\n\\t\\t\\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\\n\\t\\t\\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\\n\\n\\t\\t\\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\\n\\n\\t\\t}\\n\\n\\t\\tfunction resetGLState() {\\n\\n\\t\\t\\t_currentProgram = null;\\n\\t\\t\\t_currentCamera = null;\\n\\n\\t\\t\\t_currentGeometryProgram = '';\\n\\t\\t\\t_currentMaterialId = - 1;\\n\\n\\t\\t\\tstate.reset();\\n\\n\\t\\t}\\n\\n\\t\\tsetDefaultGLState();\\n\\n\\t\\tthis.context = _gl;\\n\\t\\tthis.capabilities = capabilities;\\n\\t\\tthis.extensions = extensions;\\n\\t\\tthis.properties = properties;\\n\\t\\tthis.state = state;\\n\\n\\t\\t// shadow map\\n\\n\\t\\tvar shadowMap = new THREE.WebGLShadowMap( this, _lights, objects, capabilities );\\n\\n\\t\\tthis.shadowMap = shadowMap;\\n\\n\\n\\t\\t// Plugins\\n\\n\\t\\tvar spritePlugin = new THREE.SpritePlugin( this, sprites );\\n\\t\\tvar lensFlarePlugin = new THREE.LensFlarePlugin( this, lensFlares );\\n\\n\\t\\t// API\\n\\n\\t\\tthis.getContext = function () {\\n\\n\\t\\t\\treturn _gl;\\n\\n\\t\\t};\\n\\n\\t\\tthis.getContextAttributes = function () {\\n\\n\\t\\t\\treturn _gl.getContextAttributes();\\n\\n\\t\\t};\\n\\n\\t\\tthis.forceContextLoss = function () {\\n\\n\\t\\t\\textensions.get( 'WEBGL_lose_context' ).loseContext();\\n\\n\\t\\t};\\n\\n\\t\\tthis.getMaxAnisotropy = function () {\\n\\n\\t\\t\\treturn capabilities.getMaxAnisotropy();\\n\\n\\t\\t};\\n\\n\\t\\tthis.getPrecision = function () {\\n\\n\\t\\t\\treturn capabilities.precision;\\n\\n\\t\\t};\\n\\n\\t\\tthis.getPixelRatio = function () {\\n\\n\\t\\t\\treturn _pixelRatio;\\n\\n\\t\\t};\\n\\n\\t\\tthis.setPixelRatio = function ( value ) {\\n\\n\\t\\t\\tif ( value === undefined ) return;\\n\\n\\t\\t\\t_pixelRatio = value;\\n\\n\\t\\t\\tthis.setSize( _viewport.z, _viewport.w, false );\\n\\n\\t\\t};\\n\\n\\t\\tthis.getSize = function () {\\n\\n\\t\\t\\treturn {\\n\\t\\t\\t\\twidth: _width,\\n\\t\\t\\t\\theight: _height\\n\\t\\t\\t};\\n\\n\\t\\t};\\n\\n\\t\\tthis.setSize = function ( width, height, updateStyle ) {\\n\\n\\t\\t\\t_width = width;\\n\\t\\t\\t_height = height;\\n\\n\\t\\t\\t_canvas.width = width * _pixelRatio;\\n\\t\\t\\t_canvas.height = height * _pixelRatio;\\n\\n\\t\\t\\tif ( updateStyle !== false ) {\\n\\n\\t\\t\\t\\t_canvas.style.width = width + 'px';\\n\\t\\t\\t\\t_canvas.style.height = height + 'px';\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.setViewport( 0, 0, width, height );\\n\\n\\t\\t};\\n\\n\\t\\tthis.setViewport = function ( x, y, width, height ) {\\n\\n\\t\\t\\tstate.viewport( _viewport.set( x, y, width, height ) );\\n\\n\\t\\t};\\n\\n\\t\\tthis.setScissor = function ( x, y, width, height ) {\\n\\n\\t\\t\\tstate.scissor( _scissor.set( x, y, width, height ) );\\n\\n\\t\\t};\\n\\n\\t\\tthis.setScissorTest = function ( boolean ) {\\n\\n\\t\\t\\tstate.setScissorTest( _scissorTest = boolean );\\n\\n\\t\\t};\\n\\n\\t\\t// Clearing\\n\\n\\t\\tthis.getClearColor = function () {\\n\\n\\t\\t\\treturn _clearColor;\\n\\n\\t\\t};\\n\\n\\t\\tthis.setClearColor = function ( color, alpha ) {\\n\\n\\t\\t\\t_clearColor.set( color );\\n\\n\\t\\t\\t_clearAlpha = alpha !== undefined ? alpha : 1;\\n\\n\\t\\t\\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\\n\\n\\t\\t};\\n\\n\\t\\tthis.getClearAlpha = function () {\\n\\n\\t\\t\\treturn _clearAlpha;\\n\\n\\t\\t};\\n\\n\\t\\tthis.setClearAlpha = function ( alpha ) {\\n\\n\\t\\t\\t_clearAlpha = alpha;\\n\\n\\t\\t\\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\\n\\n\\t\\t};\\n\\n\\t\\tthis.clear = function ( color, depth, stencil ) {\\n\\n\\t\\t\\tvar bits = 0;\\n\\n\\t\\t\\tif ( color === undefined || color ) bits |= _gl.COLOR_BUFFER_BIT;\\n\\t\\t\\tif ( depth === undefined || depth ) bits |= _gl.DEPTH_BUFFER_BIT;\\n\\t\\t\\tif ( stencil === undefined || stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\\n\\n\\t\\t\\t_gl.clear( bits );\\n\\n\\t\\t};\\n\\n\\t\\tthis.clearColor = function () {\\n\\n\\t\\t\\tthis.clear( true, false, false );\\n\\n\\t\\t};\\n\\n\\t\\tthis.clearDepth = function () {\\n\\n\\t\\t\\tthis.clear( false, true, false );\\n\\n\\t\\t};\\n\\n\\t\\tthis.clearStencil = function () {\\n\\n\\t\\t\\tthis.clear( false, false, true );\\n\\n\\t\\t};\\n\\n\\t\\tthis.clearTarget = function ( renderTarget, color, depth, stencil ) {\\n\\n\\t\\t\\tthis.setRenderTarget( renderTarget );\\n\\t\\t\\tthis.clear( color, depth, stencil );\\n\\n\\t\\t};\\n\\n\\t\\t// Reset\\n\\n\\t\\tthis.resetGLState = resetGLState;\\n\\n\\t\\tthis.dispose = function() {\\n\\n\\t\\t\\ttransparentObjects = [];\\n\\t\\t\\ttransparentObjectsLastIndex = -1;\\n\\t\\t\\topaqueObjects = [];\\n\\t\\t\\topaqueObjectsLastIndex = -1;\\n\\n\\t\\t\\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\\n\\n\\t\\t};\\n\\n\\t\\t// Events\\n\\n\\t\\tfunction onContextLost( event ) {\\n\\n\\t\\t\\tevent.preventDefault();\\n\\n\\t\\t\\tresetGLState();\\n\\t\\t\\tsetDefaultGLState();\\n\\n\\t\\t\\tproperties.clear();\\n\\n\\t\\t}\\n\\n\\t\\tfunction onMaterialDispose( event ) {\\n\\n\\t\\t\\tvar material = event.target;\\n\\n\\t\\t\\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\\n\\n\\t\\t\\tdeallocateMaterial( material );\\n\\n\\t\\t}\\n\\n\\t\\t// Buffer deallocation\\n\\n\\t\\tfunction deallocateMaterial( material ) {\\n\\n\\t\\t\\treleaseMaterialProgramReference( material );\\n\\n\\t\\t\\tproperties.delete( material );\\n\\n\\t\\t}\\n\\n\\n\\t\\tfunction releaseMaterialProgramReference( material ) {\\n\\n\\t\\t\\tvar programInfo = properties.get( material ).program;\\n\\n\\t\\t\\tmaterial.program = undefined;\\n\\n\\t\\t\\tif ( programInfo !== undefined ) {\\n\\n\\t\\t\\t\\tprogramCache.releaseProgram( programInfo );\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\t// Buffer rendering\\n\\n\\t\\tthis.renderBufferImmediate = function ( object, program, material ) {\\n\\n\\t\\t\\tstate.initAttributes();\\n\\n\\t\\t\\tvar buffers = properties.get( object );\\n\\n\\t\\t\\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\\n\\t\\t\\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\\n\\t\\t\\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\\n\\t\\t\\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\\n\\n\\t\\t\\tvar attributes = program.getAttributes();\\n\\n\\t\\t\\tif ( object.hasPositions ) {\\n\\n\\t\\t\\t\\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.position );\\n\\t\\t\\t\\t_gl.bufferData( _gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW );\\n\\n\\t\\t\\t\\tstate.enableAttribute( attributes.position );\\n\\t\\t\\t\\t_gl.vertexAttribPointer( attributes.position, 3, _gl.FLOAT, false, 0, 0 );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( object.hasNormals ) {\\n\\n\\t\\t\\t\\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.normal );\\n\\n\\t\\t\\t\\tif ( material.type !== 'MeshPhongMaterial' && material.type !== 'MeshStandardMaterial' && material.type !== 'MeshPhysicalMaterial' && material.shading === THREE.FlatShading ) {\\n\\n\\t\\t\\t\\t\\tfor ( var i = 0, l = object.count * 3; i < l; i += 9 ) {\\n\\n\\t\\t\\t\\t\\t\\tvar array = object.normalArray;\\n\\n\\t\\t\\t\\t\\t\\tvar nx = ( array[ i + 0 ] + array[ i + 3 ] + array[ i + 6 ] ) / 3;\\n\\t\\t\\t\\t\\t\\tvar ny = ( array[ i + 1 ] + array[ i + 4 ] + array[ i + 7 ] ) / 3;\\n\\t\\t\\t\\t\\t\\tvar nz = ( array[ i + 2 ] + array[ i + 5 ] + array[ i + 8 ] ) / 3;\\n\\n\\t\\t\\t\\t\\t\\tarray[ i + 0 ] = nx;\\n\\t\\t\\t\\t\\t\\tarray[ i + 1 ] = ny;\\n\\t\\t\\t\\t\\t\\tarray[ i + 2 ] = nz;\\n\\n\\t\\t\\t\\t\\t\\tarray[ i + 3 ] = nx;\\n\\t\\t\\t\\t\\t\\tarray[ i + 4 ] = ny;\\n\\t\\t\\t\\t\\t\\tarray[ i + 5 ] = nz;\\n\\n\\t\\t\\t\\t\\t\\tarray[ i + 6 ] = nx;\\n\\t\\t\\t\\t\\t\\tarray[ i + 7 ] = ny;\\n\\t\\t\\t\\t\\t\\tarray[ i + 8 ] = nz;\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t_gl.bufferData( _gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW );\\n\\n\\t\\t\\t\\tstate.enableAttribute( attributes.normal );\\n\\n\\t\\t\\t\\t_gl.vertexAttribPointer( attributes.normal, 3, _gl.FLOAT, false, 0, 0 );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( object.hasUvs && material.map ) {\\n\\n\\t\\t\\t\\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.uv );\\n\\t\\t\\t\\t_gl.bufferData( _gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW );\\n\\n\\t\\t\\t\\tstate.enableAttribute( attributes.uv );\\n\\n\\t\\t\\t\\t_gl.vertexAttribPointer( attributes.uv, 2, _gl.FLOAT, false, 0, 0 );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( object.hasColors && material.vertexColors !== THREE.NoColors ) {\\n\\n\\t\\t\\t\\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.color );\\n\\t\\t\\t\\t_gl.bufferData( _gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW );\\n\\n\\t\\t\\t\\tstate.enableAttribute( attributes.color );\\n\\n\\t\\t\\t\\t_gl.vertexAttribPointer( attributes.color, 3, _gl.FLOAT, false, 0, 0 );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tstate.disableUnusedAttributes();\\n\\n\\t\\t\\t_gl.drawArrays( _gl.TRIANGLES, 0, object.count );\\n\\n\\t\\t\\tobject.count = 0;\\n\\n\\t\\t};\\n\\n\\t\\tthis.renderBufferDirect = function ( camera, fog, geometry, material, object, group ) {\\n\\n\\t\\t\\tsetMaterial( material );\\n\\n\\t\\t\\tvar program = setProgram( camera, fog, material, object );\\n\\n\\t\\t\\tvar updateBuffers = false;\\n\\t\\t\\tvar geometryProgram = geometry.id + '_' + program.id + '_' + material.wireframe;\\n\\n\\t\\t\\tif ( geometryProgram !== _currentGeometryProgram ) {\\n\\n\\t\\t\\t\\t_currentGeometryProgram = geometryProgram;\\n\\t\\t\\t\\tupdateBuffers = true;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t// morph targets\\n\\n\\t\\t\\tvar morphTargetInfluences = object.morphTargetInfluences;\\n\\n\\t\\t\\tif ( morphTargetInfluences !== undefined ) {\\n\\n\\t\\t\\t\\tvar activeInfluences = [];\\n\\n\\t\\t\\t\\tfor ( var i = 0, l = morphTargetInfluences.length; i < l; i ++ ) {\\n\\n\\t\\t\\t\\t\\tvar influence = morphTargetInfluences[ i ];\\n\\t\\t\\t\\t\\tactiveInfluences.push( [ influence, i ] );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tactiveInfluences.sort( absNumericalSort );\\n\\n\\t\\t\\t\\tif ( activeInfluences.length > 8 ) {\\n\\n\\t\\t\\t\\t\\tactiveInfluences.length = 8;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tvar morphAttributes = geometry.morphAttributes;\\n\\n\\t\\t\\t\\tfor ( var i = 0, l = activeInfluences.length; i < l; i ++ ) {\\n\\n\\t\\t\\t\\t\\tvar influence = activeInfluences[ i ];\\n\\t\\t\\t\\t\\tmorphInfluences[ i ] = influence[ 0 ];\\n\\n\\t\\t\\t\\t\\tif ( influence[ 0 ] !== 0 ) {\\n\\n\\t\\t\\t\\t\\t\\tvar index = influence[ 1 ];\\n\\n\\t\\t\\t\\t\\t\\tif ( material.morphTargets === true && morphAttributes.position ) geometry.addAttribute( 'morphTarget' + i, morphAttributes.position[ index ] );\\n\\t\\t\\t\\t\\t\\tif ( material.morphNormals === true && morphAttributes.normal ) geometry.addAttribute( 'morphNormal' + i, morphAttributes.normal[ index ] );\\n\\n\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\tif ( material.morphTargets === true ) geometry.removeAttribute( 'morphTarget' + i );\\n\\t\\t\\t\\t\\t\\tif ( material.morphNormals === true ) geometry.removeAttribute( 'morphNormal' + i );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tprogram.getUniforms().setValue(\\n\\t\\t\\t\\t\\t\\t_gl, 'morphTargetInfluences', morphInfluences );\\n\\n\\t\\t\\t\\tupdateBuffers = true;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t//\\n\\n\\t\\t\\tvar index = geometry.index;\\n\\t\\t\\tvar position = geometry.attributes.position;\\n\\n\\t\\t\\tif ( material.wireframe === true ) {\\n\\n\\t\\t\\t\\tindex = objects.getWireframeAttribute( geometry );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar renderer;\\n\\n\\t\\t\\tif ( index !== null ) {\\n\\n\\t\\t\\t\\trenderer = indexedBufferRenderer;\\n\\t\\t\\t\\trenderer.setIndex( index );\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\trenderer = bufferRenderer;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( updateBuffers ) {\\n\\n\\t\\t\\t\\tsetupVertexAttributes( material, program, geometry );\\n\\n\\t\\t\\t\\tif ( index !== null ) {\\n\\n\\t\\t\\t\\t\\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, objects.getAttributeBuffer( index ) );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t//\\n\\n\\t\\t\\tvar dataStart = 0;\\n\\t\\t\\tvar dataCount = Infinity;\\n\\n\\t\\t\\tif ( index !== null ) {\\n\\n\\t\\t\\t\\tdataCount = index.count;\\n\\n\\t\\t\\t} else if ( position !== undefined ) {\\n\\n\\t\\t\\t\\tdataCount = position.count;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar rangeStart = geometry.drawRange.start;\\n\\t\\t\\tvar rangeCount = geometry.drawRange.count;\\n\\n\\t\\t\\tvar groupStart = group !== null ? group.start : 0;\\n\\t\\t\\tvar groupCount = group !== null ? group.count : Infinity;\\n\\n\\t\\t\\tvar drawStart = Math.max( dataStart, rangeStart, groupStart );\\n\\t\\t\\tvar drawEnd = Math.min( dataStart + dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\\n\\n\\t\\t\\tvar drawCount = Math.max( 0, drawEnd - drawStart + 1 );\\n\\n\\t\\t\\t//\\n\\n\\t\\t\\tif ( object instanceof THREE.Mesh ) {\\n\\n\\t\\t\\t\\tif ( material.wireframe === true ) {\\n\\n\\t\\t\\t\\t\\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\\n\\t\\t\\t\\t\\trenderer.setMode( _gl.LINES );\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\tswitch ( object.drawMode ) {\\n\\n\\t\\t\\t\\t\\t\\tcase THREE.TrianglesDrawMode:\\n\\t\\t\\t\\t\\t\\t\\trenderer.setMode( _gl.TRIANGLES );\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\t\\tcase THREE.TriangleStripDrawMode:\\n\\t\\t\\t\\t\\t\\t\\trenderer.setMode( _gl.TRIANGLE_STRIP );\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\t\\tcase THREE.TriangleFanDrawMode:\\n\\t\\t\\t\\t\\t\\t\\trenderer.setMode( _gl.TRIANGLE_FAN );\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\n\\t\\t\\t} else if ( object instanceof THREE.Line ) {\\n\\n\\t\\t\\t\\tvar lineWidth = material.linewidth;\\n\\n\\t\\t\\t\\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\\n\\n\\t\\t\\t\\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\\n\\n\\t\\t\\t\\tif ( object instanceof THREE.LineSegments ) {\\n\\n\\t\\t\\t\\t\\trenderer.setMode( _gl.LINES );\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\trenderer.setMode( _gl.LINE_STRIP );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t} else if ( object instanceof THREE.Points ) {\\n\\n\\t\\t\\t\\trenderer.setMode( _gl.POINTS );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( geometry instanceof THREE.InstancedBufferGeometry ) {\\n\\n\\t\\t\\t\\tif ( geometry.maxInstancedCount > 0 ) {\\n\\n\\t\\t\\t\\t\\trenderer.renderInstances( geometry, drawStart, drawCount );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\trenderer.render( drawStart, drawCount );\\n\\n\\t\\t\\t}\\n\\n\\t\\t};\\n\\n\\t\\tfunction setupVertexAttributes( material, program, geometry, startIndex ) {\\n\\n\\t\\t\\tvar extension;\\n\\n\\t\\t\\tif ( geometry instanceof THREE.InstancedBufferGeometry ) {\\n\\n\\t\\t\\t\\textension = extensions.get( 'ANGLE_instanced_arrays' );\\n\\n\\t\\t\\t\\tif ( extension === null ) {\\n\\n\\t\\t\\t\\t\\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\\n\\t\\t\\t\\t\\treturn;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( startIndex === undefined ) startIndex = 0;\\n\\n\\t\\t\\tstate.initAttributes();\\n\\n\\t\\t\\tvar geometryAttributes = geometry.attributes;\\n\\n\\t\\t\\tvar programAttributes = program.getAttributes();\\n\\n\\t\\t\\tvar materialDefaultAttributeValues = material.defaultAttributeValues;\\n\\n\\t\\t\\tfor ( var name in programAttributes ) {\\n\\n\\t\\t\\t\\tvar programAttribute = programAttributes[ name ];\\n\\n\\t\\t\\t\\tif ( programAttribute >= 0 ) {\\n\\n\\t\\t\\t\\t\\tvar geometryAttribute = geometryAttributes[ name ];\\n\\n\\t\\t\\t\\t\\tif ( geometryAttribute !== undefined ) {\\n\\n\\t\\t\\t\\t\\t\\tvar type = _gl.FLOAT;\\n\\t\\t\\t\\t\\t\\tvar array = geometryAttribute.array;\\n\\t\\t\\t\\t\\t\\tvar normalized = geometryAttribute.normalized;\\n\\n\\t\\t\\t\\t\\t\\tif ( array instanceof Float32Array ) {\\n\\n\\t\\t\\t\\t\\t\\t\\ttype = _gl.FLOAT;\\n\\n\\t\\t\\t\\t\\t\\t} else if ( array instanceof Float64Array ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tconsole.warn(\\\"Unsupported data buffer format: Float64Array\\\");\\n\\n\\t\\t\\t\\t\\t\\t} else if ( array instanceof Uint16Array ) {\\n\\n\\t\\t\\t\\t\\t\\t\\ttype = _gl.UNSIGNED_SHORT;\\n\\n\\t\\t\\t\\t\\t\\t} else if ( array instanceof Int16Array ) {\\n\\n\\t\\t\\t\\t\\t\\t\\ttype = _gl.SHORT;\\n\\n\\t\\t\\t\\t\\t\\t} else if ( array instanceof Uint32Array ) {\\n\\n\\t\\t\\t\\t\\t\\t\\ttype = _gl.UNSIGNED_INT;\\n\\n\\t\\t\\t\\t\\t\\t} else if ( array instanceof Int32Array ) {\\n\\n\\t\\t\\t\\t\\t\\t\\ttype = _gl.INT;\\n\\n\\t\\t\\t\\t\\t\\t} else if ( array instanceof Int8Array ) {\\n\\n\\t\\t\\t\\t\\t\\t\\ttype = _gl.BYTE;\\n\\n\\t\\t\\t\\t\\t\\t} else if ( array instanceof Uint8Array ) {\\n\\n\\t\\t\\t\\t\\t\\t\\ttype = _gl.UNSIGNED_BYTE;\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\tvar size = geometryAttribute.itemSize;\\n\\t\\t\\t\\t\\t\\tvar buffer = objects.getAttributeBuffer( geometryAttribute );\\n\\n\\t\\t\\t\\t\\t\\tif ( geometryAttribute instanceof THREE.InterleavedBufferAttribute ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tvar data = geometryAttribute.data;\\n\\t\\t\\t\\t\\t\\t\\tvar stride = data.stride;\\n\\t\\t\\t\\t\\t\\t\\tvar offset = geometryAttribute.offset;\\n\\n\\t\\t\\t\\t\\t\\t\\tif ( data instanceof THREE.InstancedInterleavedBuffer ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tstate.enableAttributeAndDivisor( programAttribute, data.meshPerAttribute, extension );\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tif ( geometry.maxInstancedCount === undefined ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tgeometry.maxInstancedCount = data.meshPerAttribute * data.count;\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tstate.enableAttribute( programAttribute );\\n\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\\n\\t\\t\\t\\t\\t\\t\\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, stride * data.array.BYTES_PER_ELEMENT, ( startIndex * stride + offset ) * data.array.BYTES_PER_ELEMENT );\\n\\n\\t\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\t\\tif ( geometryAttribute instanceof THREE.InstancedBufferAttribute ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tstate.enableAttributeAndDivisor( programAttribute, geometryAttribute.meshPerAttribute, extension );\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tif ( geometry.maxInstancedCount === undefined ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tgeometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tstate.enableAttribute( programAttribute );\\n\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\\n\\t\\t\\t\\t\\t\\t\\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, 0, startIndex * size * geometryAttribute.array.BYTES_PER_ELEMENT );\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t} else if ( materialDefaultAttributeValues !== undefined ) {\\n\\n\\t\\t\\t\\t\\t\\tvar value = materialDefaultAttributeValues[ name ];\\n\\n\\t\\t\\t\\t\\t\\tif ( value !== undefined ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tswitch ( value.length ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tcase 2:\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t_gl.vertexAttrib2fv( programAttribute, value );\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tcase 3:\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t_gl.vertexAttrib3fv( programAttribute, value );\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tcase 4:\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t_gl.vertexAttrib4fv( programAttribute, value );\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tdefault:\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t_gl.vertexAttrib1fv( programAttribute, value );\\n\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tstate.disableUnusedAttributes();\\n\\n\\t\\t}\\n\\n\\t\\t// Sorting\\n\\n\\t\\tfunction absNumericalSort( a, b ) {\\n\\n\\t\\t\\treturn Math.abs( b[ 0 ] ) - Math.abs( a[ 0 ] );\\n\\n\\t\\t}\\n\\n\\t\\tfunction painterSortStable ( a, b ) {\\n\\n\\t\\t\\tif ( a.object.renderOrder !== b.object.renderOrder ) {\\n\\n\\t\\t\\t\\treturn a.object.renderOrder - b.object.renderOrder;\\n\\n\\t\\t\\t} else if ( a.material.program && b.material.program && a.material.program !== b.material.program ) {\\n\\n\\t\\t\\t\\treturn a.material.program.id - b.material.program.id;\\n\\n\\t\\t\\t} else if ( a.material.id !== b.material.id ) {\\n\\n\\t\\t\\t\\treturn a.material.id - b.material.id;\\n\\n\\t\\t\\t} else if ( a.z !== b.z ) {\\n\\n\\t\\t\\t\\treturn a.z - b.z;\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\treturn a.id - b.id;\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tfunction reversePainterSortStable ( a, b ) {\\n\\n\\t\\t\\tif ( a.object.renderOrder !== b.object.renderOrder ) {\\n\\n\\t\\t\\t\\treturn a.object.renderOrder - b.object.renderOrder;\\n\\n\\t\\t\\t} if ( a.z !== b.z ) {\\n\\n\\t\\t\\t\\treturn b.z - a.z;\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\treturn a.id - b.id;\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\t// Rendering\\n\\n\\t\\tthis.render = function ( scene, camera, renderTarget, forceClear ) {\\n\\n\\t\\t\\tif ( camera instanceof THREE.Camera === false ) {\\n\\n\\t\\t\\t\\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\\n\\t\\t\\t\\treturn;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar fog = scene.fog;\\n\\n\\t\\t\\t// reset caching for this frame\\n\\n\\t\\t\\t_currentGeometryProgram = '';\\n\\t\\t\\t_currentMaterialId = - 1;\\n\\t\\t\\t_currentCamera = null;\\n\\n\\t\\t\\t// update scene graph\\n\\n\\t\\t\\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\\n\\n\\t\\t\\t// update camera matrices and frustum\\n\\n\\t\\t\\tif ( camera.parent === null ) camera.updateMatrixWorld();\\n\\n\\t\\t\\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\\n\\n\\t\\t\\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\\n\\t\\t\\t_frustum.setFromMatrix( _projScreenMatrix );\\n\\n\\t\\t\\tlights.length = 0;\\n\\n\\t\\t\\topaqueObjectsLastIndex = - 1;\\n\\t\\t\\ttransparentObjectsLastIndex = - 1;\\n\\n\\t\\t\\tsprites.length = 0;\\n\\t\\t\\tlensFlares.length = 0;\\n\\n\\t\\t\\t_localClippingEnabled = this.localClippingEnabled;\\n\\t\\t\\t_clippingEnabled = _clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\\n\\n\\t\\t\\tprojectObject( scene, camera );\\n\\n\\t\\t\\topaqueObjects.length = opaqueObjectsLastIndex + 1;\\n\\t\\t\\ttransparentObjects.length = transparentObjectsLastIndex + 1;\\n\\n\\t\\t\\tif ( _this.sortObjects === true ) {\\n\\n\\t\\t\\t\\topaqueObjects.sort( painterSortStable );\\n\\t\\t\\t\\ttransparentObjects.sort( reversePainterSortStable );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t//\\n\\n\\t\\t\\tif ( _clippingEnabled ) _clipping.beginShadows();\\n\\n\\t\\t\\tsetupShadows( lights );\\n\\n\\t\\t\\tshadowMap.render( scene, camera );\\n\\n\\t\\t\\tsetupLights( lights, camera );\\n\\n\\t\\t\\tif ( _clippingEnabled ) _clipping.endShadows();\\n\\n\\t\\t\\t//\\n\\n\\t\\t\\t_infoRender.calls = 0;\\n\\t\\t\\t_infoRender.vertices = 0;\\n\\t\\t\\t_infoRender.faces = 0;\\n\\t\\t\\t_infoRender.points = 0;\\n\\n\\t\\t\\tif ( renderTarget === undefined ) {\\n\\n\\t\\t\\t\\trenderTarget = null;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.setRenderTarget( renderTarget );\\n\\n\\t\\t\\t//\\n\\n\\t\\t\\tvar background = scene.background;\\n\\n\\t\\t\\tif ( background === null ) {\\n\\n\\t\\t\\t\\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\\n\\n\\t\\t\\t} else if ( background instanceof THREE.Color ) {\\n\\n\\t\\t\\t\\tglClearColor( background.r, background.g, background.b, 1 );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( this.autoClear || forceClear ) {\\n\\n\\t\\t\\t\\tthis.clear( this.autoClearColor, this.autoClearDepth, this.autoClearStencil );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( background instanceof THREE.CubeTexture ) {\\n\\n\\t\\t\\t\\tbackgroundCamera2.projectionMatrix.copy( camera.projectionMatrix );\\n\\n\\t\\t\\t\\tbackgroundCamera2.matrixWorld.extractRotation( camera.matrixWorld );\\n\\t\\t\\t\\tbackgroundCamera2.matrixWorldInverse.getInverse( backgroundCamera2.matrixWorld );\\n\\n\\t\\t\\t\\tbackgroundBoxMesh.material.uniforms[ \\\"tCube\\\" ].value = background;\\n\\t\\t\\t\\tbackgroundBoxMesh.modelViewMatrix.multiplyMatrices( backgroundCamera2.matrixWorldInverse, backgroundBoxMesh.matrixWorld );\\n\\n\\t\\t\\t\\tobjects.update( backgroundBoxMesh );\\n\\n\\t\\t\\t\\t_this.renderBufferDirect( backgroundCamera2, null, backgroundBoxMesh.geometry, backgroundBoxMesh.material, backgroundBoxMesh, null );\\n\\n\\t\\t\\t} else if ( background instanceof THREE.Texture ) {\\n\\n\\t\\t\\t\\tbackgroundPlaneMesh.material.map = background;\\n\\n\\t\\t\\t\\tobjects.update( backgroundPlaneMesh );\\n\\n\\t\\t\\t\\t_this.renderBufferDirect( backgroundCamera, null, backgroundPlaneMesh.geometry, backgroundPlaneMesh.material, backgroundPlaneMesh, null );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t//\\n\\n\\t\\t\\tif ( scene.overrideMaterial ) {\\n\\n\\t\\t\\t\\tvar overrideMaterial = scene.overrideMaterial;\\n\\n\\t\\t\\t\\trenderObjects( opaqueObjects, camera, fog, overrideMaterial );\\n\\t\\t\\t\\trenderObjects( transparentObjects, camera, fog, overrideMaterial );\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t// opaque pass (front-to-back order)\\n\\n\\t\\t\\t\\tstate.setBlending( THREE.NoBlending );\\n\\t\\t\\t\\trenderObjects( opaqueObjects, camera, fog );\\n\\n\\t\\t\\t\\t// transparent pass (back-to-front order)\\n\\n\\t\\t\\t\\trenderObjects( transparentObjects, camera, fog );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t// custom render plugins (post pass)\\n\\n\\t\\t\\tspritePlugin.render( scene, camera );\\n\\t\\t\\tlensFlarePlugin.render( scene, camera, _currentViewport );\\n\\n\\t\\t\\t// Generate mipmap if we're using any kind of mipmap filtering\\n\\n\\t\\t\\tif ( renderTarget ) {\\n\\n\\t\\t\\t\\ttextures.updateRenderTargetMipmap( renderTarget );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Ensure depth buffer writing is enabled so it can be cleared on next render\\n\\n\\t\\t\\tstate.setDepthTest( true );\\n\\t\\t\\tstate.setDepthWrite( true );\\n\\t\\t\\tstate.setColorWrite( true );\\n\\n\\t\\t\\t// _gl.finish();\\n\\n\\t\\t};\\n\\n\\t\\tfunction pushRenderItem( object, geometry, material, z, group ) {\\n\\n\\t\\t\\tvar array, index;\\n\\n\\t\\t\\t// allocate the next position in the appropriate array\\n\\n\\t\\t\\tif ( material.transparent ) {\\n\\n\\t\\t\\t\\tarray = transparentObjects;\\n\\t\\t\\t\\tindex = ++ transparentObjectsLastIndex;\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\tarray = opaqueObjects;\\n\\t\\t\\t\\tindex = ++ opaqueObjectsLastIndex;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t// recycle existing render item or grow the array\\n\\n\\t\\t\\tvar renderItem = array[ index ];\\n\\n\\t\\t\\tif ( renderItem !== undefined ) {\\n\\n\\t\\t\\t\\trenderItem.id = object.id;\\n\\t\\t\\t\\trenderItem.object = object;\\n\\t\\t\\t\\trenderItem.geometry = geometry;\\n\\t\\t\\t\\trenderItem.material = material;\\n\\t\\t\\t\\trenderItem.z = _vector3.z;\\n\\t\\t\\t\\trenderItem.group = group;\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\trenderItem = {\\n\\t\\t\\t\\t\\tid: object.id,\\n\\t\\t\\t\\t\\tobject: object,\\n\\t\\t\\t\\t\\tgeometry: geometry,\\n\\t\\t\\t\\t\\tmaterial: material,\\n\\t\\t\\t\\t\\tz: _vector3.z,\\n\\t\\t\\t\\t\\tgroup: group\\n\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\t// assert( index === array.length );\\n\\t\\t\\t\\tarray.push( renderItem );\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\t// TODO Duplicated code (Frustum)\\n\\n\\t\\tfunction isObjectViewable( object ) {\\n\\n\\t\\t\\tvar geometry = object.geometry;\\n\\n\\t\\t\\tif ( geometry.boundingSphere === null )\\n\\t\\t\\t\\tgeometry.computeBoundingSphere();\\n\\n\\t\\t\\t_sphere.copy( geometry.boundingSphere ).\\n\\t\\t\\t\\tapplyMatrix4( object.matrixWorld );\\n\\n\\t\\t\\treturn isSphereViewable( _sphere );\\n\\n\\t\\t}\\n\\n\\t\\tfunction isSpriteViewable( sprite ) {\\n\\n\\t\\t\\t_sphere.center.set( 0, 0, 0 );\\n\\t\\t\\t_sphere.radius = 0.7071067811865476;\\n\\t\\t\\t_sphere.applyMatrix4( sprite.matrixWorld );\\n\\n\\t\\t\\treturn isSphereViewable( _sphere );\\n\\n\\t\\t}\\n\\n\\t\\tfunction isSphereViewable( sphere ) {\\n\\n\\t\\t\\tif ( ! _frustum.intersectsSphere( sphere ) ) return false;\\n\\n\\t\\t\\tvar numPlanes = _clipping.numPlanes;\\n\\n\\t\\t\\tif ( numPlanes === 0 ) return true;\\n\\n\\t\\t\\tvar planes = _this.clippingPlanes,\\n\\n\\t\\t\\t\\tcenter = sphere.center,\\n\\t\\t\\t\\tnegRad = - sphere.radius,\\n\\t\\t\\t\\ti = 0;\\n\\n\\t\\t\\tdo {\\n\\n\\t\\t\\t\\t// out when deeper than radius in the negative halfspace\\n\\t\\t\\t\\tif ( planes[ i ].distanceToPoint( center ) < negRad ) return false;\\n\\n\\t\\t\\t} while ( ++ i !== numPlanes );\\n\\n\\t\\t\\treturn true;\\n\\n\\t\\t}\\n\\n\\t\\tfunction projectObject( object, camera ) {\\n\\n\\t\\t\\tif ( object.visible === false ) return;\\n\\n\\t\\t\\tif ( object.layers.test( camera.layers ) ) {\\n\\n\\t\\t\\t\\tif ( object instanceof THREE.Light ) {\\n\\n\\t\\t\\t\\t\\tlights.push( object );\\n\\n\\t\\t\\t\\t} else if ( object instanceof THREE.Sprite ) {\\n\\n\\t\\t\\t\\t\\tif ( object.frustumCulled === false || isSpriteViewable( object ) === true ) {\\n\\n\\t\\t\\t\\t\\t\\tsprites.push( object );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t} else if ( object instanceof THREE.LensFlare ) {\\n\\n\\t\\t\\t\\t\\tlensFlares.push( object );\\n\\n\\t\\t\\t\\t} else if ( object instanceof THREE.ImmediateRenderObject ) {\\n\\n\\t\\t\\t\\t\\tif ( _this.sortObjects === true ) {\\n\\n\\t\\t\\t\\t\\t\\t_vector3.setFromMatrixPosition( object.matrixWorld );\\n\\t\\t\\t\\t\\t\\t_vector3.applyProjection( _projScreenMatrix );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tpushRenderItem( object, null, object.material, _vector3.z, null );\\n\\n\\t\\t\\t\\t} else if ( object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Points ) {\\n\\n\\t\\t\\t\\t\\tif ( object instanceof THREE.SkinnedMesh ) {\\n\\n\\t\\t\\t\\t\\t\\tobject.skeleton.update();\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tif ( object.frustumCulled === false || isObjectViewable( object ) === true ) {\\n\\n\\t\\t\\t\\t\\t\\tvar material = object.material;\\n\\n\\t\\t\\t\\t\\t\\tif ( material.visible === true ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tif ( _this.sortObjects === true ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t_vector3.setFromMatrixPosition( object.matrixWorld );\\n\\t\\t\\t\\t\\t\\t\\t\\t_vector3.applyProjection( _projScreenMatrix );\\n\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\tvar geometry = objects.update( object );\\n\\n\\t\\t\\t\\t\\t\\t\\tif ( material instanceof THREE.MultiMaterial ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tvar groups = geometry.groups;\\n\\t\\t\\t\\t\\t\\t\\t\\tvar materials = material.materials;\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tvar group = groups[ i ];\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tvar groupMaterial = materials[ group.materialIndex ];\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif ( groupMaterial.visible === true ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tpushRenderItem( object, geometry, groupMaterial, _vector3.z, group );\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tpushRenderItem( object, geometry, material, _vector3.z, null );\\n\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar children = object.children;\\n\\n\\t\\t\\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\\n\\n\\t\\t\\t\\tprojectObject( children[ i ], camera );\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tfunction renderObjects( renderList, camera, fog, overrideMaterial ) {\\n\\n\\t\\t\\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\\n\\n\\t\\t\\t\\tvar renderItem = renderList[ i ];\\n\\n\\t\\t\\t\\tvar object = renderItem.object;\\n\\t\\t\\t\\tvar geometry = renderItem.geometry;\\n\\t\\t\\t\\tvar material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\\n\\t\\t\\t\\tvar group = renderItem.group;\\n\\n\\t\\t\\t\\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\\n\\t\\t\\t\\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\\n\\n\\t\\t\\t\\tif ( object instanceof THREE.ImmediateRenderObject ) {\\n\\n\\t\\t\\t\\t\\tsetMaterial( material );\\n\\n\\t\\t\\t\\t\\tvar program = setProgram( camera, fog, material, object );\\n\\n\\t\\t\\t\\t\\t_currentGeometryProgram = '';\\n\\n\\t\\t\\t\\t\\tobject.render( function ( object ) {\\n\\n\\t\\t\\t\\t\\t\\t_this.renderBufferImmediate( object, program, material );\\n\\n\\t\\t\\t\\t\\t} );\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t_this.renderBufferDirect( camera, fog, geometry, material, object, group );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tfunction initMaterial( material, fog, object ) {\\n\\n\\t\\t\\tvar materialProperties = properties.get( material );\\n\\n\\t\\t\\tvar parameters = programCache.getParameters(\\n\\t\\t\\t\\t\\tmaterial, _lights, fog, _clipping.numPlanes, object );\\n\\n\\t\\t\\tvar code = programCache.getProgramCode( material, parameters );\\n\\n\\t\\t\\tvar program = materialProperties.program;\\n\\t\\t\\tvar programChange = true;\\n\\n\\t\\t\\tif ( program === undefined ) {\\n\\n\\t\\t\\t\\t// new material\\n\\t\\t\\t\\tmaterial.addEventListener( 'dispose', onMaterialDispose );\\n\\n\\t\\t\\t} else if ( program.code !== code ) {\\n\\n\\t\\t\\t\\t// changed glsl or parameters\\n\\t\\t\\t\\treleaseMaterialProgramReference( material );\\n\\n\\t\\t\\t} else if ( parameters.shaderID !== undefined ) {\\n\\n\\t\\t\\t\\t// same glsl and uniform list\\n\\t\\t\\t\\treturn;\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t// only rebuild uniform list\\n\\t\\t\\t\\tprogramChange = false;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( programChange ) {\\n\\n\\t\\t\\t\\tif ( parameters.shaderID ) {\\n\\n\\t\\t\\t\\t\\tvar shader = THREE.ShaderLib[ parameters.shaderID ];\\n\\n\\t\\t\\t\\t\\tmaterialProperties.__webglShader = {\\n\\t\\t\\t\\t\\t\\tname: material.type,\\n\\t\\t\\t\\t\\t\\tuniforms: THREE.UniformsUtils.clone( shader.uniforms ),\\n\\t\\t\\t\\t\\t\\tvertexShader: shader.vertexShader,\\n\\t\\t\\t\\t\\t\\tfragmentShader: shader.fragmentShader\\n\\t\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\tmaterialProperties.__webglShader = {\\n\\t\\t\\t\\t\\t\\tname: material.type,\\n\\t\\t\\t\\t\\t\\tuniforms: material.uniforms,\\n\\t\\t\\t\\t\\t\\tvertexShader: material.vertexShader,\\n\\t\\t\\t\\t\\t\\tfragmentShader: material.fragmentShader\\n\\t\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tmaterial.__webglShader = materialProperties.__webglShader;\\n\\n\\t\\t\\t\\tprogram = programCache.acquireProgram( material, parameters, code );\\n\\n\\t\\t\\t\\tmaterialProperties.program = program;\\n\\t\\t\\t\\tmaterial.program = program;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar attributes = program.getAttributes();\\n\\n\\t\\t\\tif ( material.morphTargets ) {\\n\\n\\t\\t\\t\\tmaterial.numSupportedMorphTargets = 0;\\n\\n\\t\\t\\t\\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\\n\\n\\t\\t\\t\\t\\tif ( attributes[ 'morphTarget' + i ] >= 0 ) {\\n\\n\\t\\t\\t\\t\\t\\tmaterial.numSupportedMorphTargets ++;\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( material.morphNormals ) {\\n\\n\\t\\t\\t\\tmaterial.numSupportedMorphNormals = 0;\\n\\n\\t\\t\\t\\tfor ( var i = 0; i < _this.maxMorphNormals; i ++ ) {\\n\\n\\t\\t\\t\\t\\tif ( attributes[ 'morphNormal' + i ] >= 0 ) {\\n\\n\\t\\t\\t\\t\\t\\tmaterial.numSupportedMorphNormals ++;\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar uniforms = materialProperties.__webglShader.uniforms;\\n\\n\\t\\t\\tif ( ! ( material instanceof THREE.ShaderMaterial ) &&\\n\\t\\t\\t\\t\\t! ( material instanceof THREE.RawShaderMaterial ) ||\\n\\t\\t\\t\\t\\tmaterial.clipping === true ) {\\n\\n\\t\\t\\t\\tmaterialProperties.numClippingPlanes = _clipping.numPlanes;\\n\\t\\t\\t\\tuniforms.clippingPlanes = _clipping.uniform;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( material.lights ) {\\n\\n\\t\\t\\t\\t// store the light setup it was created for\\n\\n\\t\\t\\t\\tmaterialProperties.lightsHash = _lights.hash;\\n\\n\\t\\t\\t\\t// wire up the material to this renderer's lighting state\\n\\n\\t\\t\\t\\tuniforms.ambientLightColor.value = _lights.ambient;\\n\\t\\t\\t\\tuniforms.directionalLights.value = _lights.directional;\\n\\t\\t\\t\\tuniforms.spotLights.value = _lights.spot;\\n\\t\\t\\t\\tuniforms.pointLights.value = _lights.point;\\n\\t\\t\\t\\tuniforms.hemisphereLights.value = _lights.hemi;\\n\\n\\t\\t\\t\\tuniforms.directionalShadowMap.value = _lights.directionalShadowMap;\\n\\t\\t\\t\\tuniforms.directionalShadowMatrix.value = _lights.directionalShadowMatrix;\\n\\t\\t\\t\\tuniforms.spotShadowMap.value = _lights.spotShadowMap;\\n\\t\\t\\t\\tuniforms.spotShadowMatrix.value = _lights.spotShadowMatrix;\\n\\t\\t\\t\\tuniforms.pointShadowMap.value = _lights.pointShadowMap;\\n\\t\\t\\t\\tuniforms.pointShadowMatrix.value = _lights.pointShadowMatrix;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar progUniforms = materialProperties.program.getUniforms(),\\n\\t\\t\\t\\tuniformsList =\\n\\t\\t\\t\\t\\t\\tTHREE.WebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\\n\\n\\t\\t\\tmaterialProperties.uniformsList = uniformsList;\\n\\t\\t\\tmaterialProperties.dynamicUniforms =\\n\\t\\t\\t\\t\\tTHREE.WebGLUniforms.splitDynamic( uniformsList, uniforms );\\n\\n\\t\\t}\\n\\n\\t\\tfunction setMaterial( material ) {\\n\\n\\t\\t\\tif ( material.side !== THREE.DoubleSide )\\n\\t\\t\\t\\tstate.enable( _gl.CULL_FACE );\\n\\t\\t\\telse\\n\\t\\t\\t\\tstate.disable( _gl.CULL_FACE );\\n\\n\\t\\t\\tstate.setFlipSided( material.side === THREE.BackSide );\\n\\n\\t\\t\\tif ( material.transparent === true ) {\\n\\n\\t\\t\\t\\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\tstate.setBlending( THREE.NoBlending );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tstate.setDepthFunc( material.depthFunc );\\n\\t\\t\\tstate.setDepthTest( material.depthTest );\\n\\t\\t\\tstate.setDepthWrite( material.depthWrite );\\n\\t\\t\\tstate.setColorWrite( material.colorWrite );\\n\\t\\t\\tstate.setPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\\n\\n\\t\\t}\\n\\n\\t\\tfunction setProgram( camera, fog, material, object ) {\\n\\n\\t\\t\\t_usedTextureUnits = 0;\\n\\n\\t\\t\\tvar materialProperties = properties.get( material );\\n\\n\\t\\t\\tif ( _clippingEnabled ) {\\n\\n\\t\\t\\t\\tif ( _localClippingEnabled || camera !== _currentCamera ) {\\n\\n\\t\\t\\t\\t\\tvar useCache =\\n\\t\\t\\t\\t\\t\\t\\tcamera === _currentCamera &&\\n\\t\\t\\t\\t\\t\\t\\tmaterial.id === _currentMaterialId;\\n\\n\\t\\t\\t\\t\\t// we might want to call this function with some ClippingGroup\\n\\t\\t\\t\\t\\t// object instead of the material, once it becomes feasible\\n\\t\\t\\t\\t\\t// (#8465, #8379)\\n\\t\\t\\t\\t\\t_clipping.setState(\\n\\t\\t\\t\\t\\t\\t\\tmaterial.clippingPlanes, material.clipShadows,\\n\\t\\t\\t\\t\\t\\t\\tcamera, materialProperties, useCache );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( materialProperties.numClippingPlanes !== undefined &&\\n\\t\\t\\t\\t\\tmaterialProperties.numClippingPlanes !== _clipping.numPlanes ) {\\n\\n\\t\\t\\t\\t\\tmaterial.needsUpdate = true;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( materialProperties.program === undefined ) {\\n\\n\\t\\t\\t\\tmaterial.needsUpdate = true;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( materialProperties.lightsHash !== undefined &&\\n\\t\\t\\t\\tmaterialProperties.lightsHash !== _lights.hash ) {\\n\\n\\t\\t\\t\\tmaterial.needsUpdate = true;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( material.needsUpdate ) {\\n\\n\\t\\t\\t\\tinitMaterial( material, fog, object );\\n\\t\\t\\t\\tmaterial.needsUpdate = false;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar refreshProgram = false;\\n\\t\\t\\tvar refreshMaterial = false;\\n\\t\\t\\tvar refreshLights = false;\\n\\n\\t\\t\\tvar program = materialProperties.program,\\n\\t\\t\\t\\tp_uniforms = program.getUniforms(),\\n\\t\\t\\t\\tm_uniforms = materialProperties.__webglShader.uniforms;\\n\\n\\t\\t\\tif ( program.id !== _currentProgram ) {\\n\\n\\t\\t\\t\\t_gl.useProgram( program.program );\\n\\t\\t\\t\\t_currentProgram = program.id;\\n\\n\\t\\t\\t\\trefreshProgram = true;\\n\\t\\t\\t\\trefreshMaterial = true;\\n\\t\\t\\t\\trefreshLights = true;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( material.id !== _currentMaterialId ) {\\n\\n\\t\\t\\t\\t_currentMaterialId = material.id;\\n\\n\\t\\t\\t\\trefreshMaterial = true;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( refreshProgram || camera !== _currentCamera ) {\\n\\n\\t\\t\\t\\tp_uniforms.set( _gl, camera, 'projectionMatrix' );\\n\\n\\t\\t\\t\\tif ( capabilities.logarithmicDepthBuffer ) {\\n\\n\\t\\t\\t\\t\\tp_uniforms.setValue( _gl, 'logDepthBufFC',\\n\\t\\t\\t\\t\\t\\t\\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\\n\\n\\t\\t\\t\\t}\\n\\n\\n\\t\\t\\t\\tif ( camera !== _currentCamera ) {\\n\\n\\t\\t\\t\\t\\t_currentCamera = camera;\\n\\n\\t\\t\\t\\t\\t// lighting uniforms depend on the camera so enforce an update\\n\\t\\t\\t\\t\\t// now, in case this material supports lights - or later, when\\n\\t\\t\\t\\t\\t// the next material that does gets activated:\\n\\n\\t\\t\\t\\t\\trefreshMaterial = true;\\t\\t// set to true on material change\\n\\t\\t\\t\\t\\trefreshLights = true;\\t\\t// remains set until update done\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// load material specific uniforms\\n\\t\\t\\t\\t// (shader material also gets them for the sake of genericity)\\n\\n\\t\\t\\t\\tif ( material instanceof THREE.ShaderMaterial ||\\n\\t\\t\\t\\t\\t material instanceof THREE.MeshPhongMaterial ||\\n\\t\\t\\t\\t\\t material instanceof THREE.MeshStandardMaterial ||\\n\\t\\t\\t\\t\\t material.envMap ) {\\n\\n\\t\\t\\t\\t\\tvar uCamPos = p_uniforms.map.cameraPosition;\\n\\n\\t\\t\\t\\t\\tif ( uCamPos !== undefined ) {\\n\\n\\t\\t\\t\\t\\t\\tuCamPos.setValue( _gl,\\n\\t\\t\\t\\t\\t\\t\\t\\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( material instanceof THREE.MeshPhongMaterial ||\\n\\t\\t\\t\\t\\t material instanceof THREE.MeshLambertMaterial ||\\n\\t\\t\\t\\t\\t material instanceof THREE.MeshBasicMaterial ||\\n\\t\\t\\t\\t\\t material instanceof THREE.MeshStandardMaterial ||\\n\\t\\t\\t\\t\\t material instanceof THREE.ShaderMaterial ||\\n\\t\\t\\t\\t\\t material.skinning ) {\\n\\n\\t\\t\\t\\t\\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tp_uniforms.set( _gl, _this, 'toneMappingExposure' );\\n\\t\\t\\t\\tp_uniforms.set( _gl, _this, 'toneMappingWhitePoint' );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t// skinning uniforms must be set even if material didn't change\\n\\t\\t\\t// auto-setting of texture unit for bone texture must go before other textures\\n\\t\\t\\t// not sure why, but otherwise weird things happen\\n\\n\\t\\t\\tif ( material.skinning ) {\\n\\n\\t\\t\\t\\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\\n\\t\\t\\t\\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\\n\\n\\t\\t\\t\\tvar skeleton = object.skeleton;\\n\\n\\t\\t\\t\\tif ( skeleton ) {\\n\\n\\t\\t\\t\\t\\tif ( capabilities.floatVertexTextures && skeleton.useVertexTexture ) {\\n\\n\\t\\t\\t\\t\\t\\tp_uniforms.set( _gl, skeleton, 'boneTexture' );\\n\\t\\t\\t\\t\\t\\tp_uniforms.set( _gl, skeleton, 'boneTextureWidth' );\\n\\t\\t\\t\\t\\t\\tp_uniforms.set( _gl, skeleton, 'boneTextureHeight' );\\n\\n\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\tp_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( refreshMaterial ) {\\n\\n\\t\\t\\t\\tif ( material.lights ) {\\n\\n\\t\\t\\t\\t\\t// the current material requires lighting info\\n\\n\\t\\t\\t\\t\\t// note: all lighting uniforms are always set correctly\\n\\t\\t\\t\\t\\t// they simply reference the renderer's state for their\\n\\t\\t\\t\\t\\t// values\\n\\t\\t\\t\\t\\t//\\n\\t\\t\\t\\t\\t// use the current material's .needsUpdate flags to set\\n\\t\\t\\t\\t\\t// the GL state when required\\n\\n\\t\\t\\t\\t\\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// refresh uniforms common to several materials\\n\\n\\t\\t\\t\\tif ( fog && material.fog ) {\\n\\n\\t\\t\\t\\t\\trefreshUniformsFog( m_uniforms, fog );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( material instanceof THREE.MeshBasicMaterial ||\\n\\t\\t\\t\\t\\t material instanceof THREE.MeshLambertMaterial ||\\n\\t\\t\\t\\t\\t material instanceof THREE.MeshPhongMaterial ||\\n\\t\\t\\t\\t\\t material instanceof THREE.MeshStandardMaterial ||\\n\\t\\t\\t\\t\\t material instanceof THREE.MeshDepthMaterial ) {\\n\\n\\t\\t\\t\\t\\trefreshUniformsCommon( m_uniforms, material );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// refresh single material specific uniforms\\n\\n\\t\\t\\t\\tif ( material instanceof THREE.LineBasicMaterial ) {\\n\\n\\t\\t\\t\\t\\trefreshUniformsLine( m_uniforms, material );\\n\\n\\t\\t\\t\\t} else if ( material instanceof THREE.LineDashedMaterial ) {\\n\\n\\t\\t\\t\\t\\trefreshUniformsLine( m_uniforms, material );\\n\\t\\t\\t\\t\\trefreshUniformsDash( m_uniforms, material );\\n\\n\\t\\t\\t\\t} else if ( material instanceof THREE.PointsMaterial ) {\\n\\n\\t\\t\\t\\t\\trefreshUniformsPoints( m_uniforms, material );\\n\\n\\t\\t\\t\\t} else if ( material instanceof THREE.MeshLambertMaterial ) {\\n\\n\\t\\t\\t\\t\\trefreshUniformsLambert( m_uniforms, material );\\n\\n\\t\\t\\t\\t} else if ( material instanceof THREE.MeshPhongMaterial ) {\\n\\n\\t\\t\\t\\t\\trefreshUniformsPhong( m_uniforms, material );\\n\\n\\t\\t\\t\\t} else if ( material instanceof THREE.MeshPhysicalMaterial ) {\\n\\n\\t\\t\\t\\t\\trefreshUniformsPhysical( m_uniforms, material );\\n\\n\\t\\t\\t\\t} else if ( material instanceof THREE.MeshStandardMaterial ) {\\n\\n\\t\\t\\t\\t\\trefreshUniformsStandard( m_uniforms, material );\\n\\n\\t\\t\\t\\t} else if ( material instanceof THREE.MeshDepthMaterial ) {\\n\\n\\t\\t\\t\\t\\tif ( material.displacementMap ) {\\n\\n\\t\\t\\t\\t\\t\\tm_uniforms.displacementMap.value = material.displacementMap;\\n\\t\\t\\t\\t\\t\\tm_uniforms.displacementScale.value = material.displacementScale;\\n\\t\\t\\t\\t\\t\\tm_uniforms.displacementBias.value = material.displacementBias;\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t} else if ( material instanceof THREE.MeshNormalMaterial ) {\\n\\n\\t\\t\\t\\t\\tm_uniforms.opacity.value = material.opacity;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tTHREE.WebGLUniforms.upload(\\n\\t\\t\\t\\t\\t\\t_gl, materialProperties.uniformsList, m_uniforms, _this );\\n\\n\\t\\t\\t}\\n\\n\\n\\t\\t\\t// common matrices\\n\\n\\t\\t\\tp_uniforms.set( _gl, object, 'modelViewMatrix' );\\n\\t\\t\\tp_uniforms.set( _gl, object, 'normalMatrix' );\\n\\t\\t\\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\\n\\n\\n\\t\\t\\t// dynamic uniforms\\n\\n\\t\\t\\tvar dynUniforms = materialProperties.dynamicUniforms;\\n\\n\\t\\t\\tif ( dynUniforms !== null ) {\\n\\n\\t\\t\\t\\tTHREE.WebGLUniforms.evalDynamic(\\n\\t\\t\\t\\t\\t\\tdynUniforms, m_uniforms, object, camera );\\n\\n\\t\\t\\t\\tTHREE.WebGLUniforms.upload( _gl, dynUniforms, m_uniforms, _this );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn program;\\n\\n\\t\\t}\\n\\n\\t\\t// Uniforms (refresh uniforms objects)\\n\\n\\t\\tfunction refreshUniformsCommon ( uniforms, material ) {\\n\\n\\t\\t\\tuniforms.opacity.value = material.opacity;\\n\\n\\t\\t\\tuniforms.diffuse.value = material.color;\\n\\n\\t\\t\\tif ( material.emissive ) {\\n\\n\\t\\t\\t\\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tuniforms.map.value = material.map;\\n\\t\\t\\tuniforms.specularMap.value = material.specularMap;\\n\\t\\t\\tuniforms.alphaMap.value = material.alphaMap;\\n\\n\\t\\t\\tif ( material.aoMap ) {\\n\\n\\t\\t\\t\\tuniforms.aoMap.value = material.aoMap;\\n\\t\\t\\t\\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t// uv repeat and offset setting priorities\\n\\t\\t\\t// 1. color map\\n\\t\\t\\t// 2. specular map\\n\\t\\t\\t// 3. normal map\\n\\t\\t\\t// 4. bump map\\n\\t\\t\\t// 5. alpha map\\n\\t\\t\\t// 6. emissive map\\n\\n\\t\\t\\tvar uvScaleMap;\\n\\n\\t\\t\\tif ( material.map ) {\\n\\n\\t\\t\\t\\tuvScaleMap = material.map;\\n\\n\\t\\t\\t} else if ( material.specularMap ) {\\n\\n\\t\\t\\t\\tuvScaleMap = material.specularMap;\\n\\n\\t\\t\\t} else if ( material.displacementMap ) {\\n\\n\\t\\t\\t\\tuvScaleMap = material.displacementMap;\\n\\n\\t\\t\\t} else if ( material.normalMap ) {\\n\\n\\t\\t\\t\\tuvScaleMap = material.normalMap;\\n\\n\\t\\t\\t} else if ( material.bumpMap ) {\\n\\n\\t\\t\\t\\tuvScaleMap = material.bumpMap;\\n\\n\\t\\t\\t} else if ( material.roughnessMap ) {\\n\\n\\t\\t\\t\\tuvScaleMap = material.roughnessMap;\\n\\n\\t\\t\\t} else if ( material.metalnessMap ) {\\n\\n\\t\\t\\t\\tuvScaleMap = material.metalnessMap;\\n\\n\\t\\t\\t} else if ( material.alphaMap ) {\\n\\n\\t\\t\\t\\tuvScaleMap = material.alphaMap;\\n\\n\\t\\t\\t} else if ( material.emissiveMap ) {\\n\\n\\t\\t\\t\\tuvScaleMap = material.emissiveMap;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( uvScaleMap !== undefined ) {\\n\\n\\t\\t\\t\\t// backwards compatibility\\n\\t\\t\\t\\tif ( uvScaleMap instanceof THREE.WebGLRenderTarget ) {\\n\\n\\t\\t\\t\\t\\tuvScaleMap = uvScaleMap.texture;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tvar offset = uvScaleMap.offset;\\n\\t\\t\\t\\tvar repeat = uvScaleMap.repeat;\\n\\n\\t\\t\\t\\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tuniforms.envMap.value = material.envMap;\\n\\n\\t\\t\\t// don't flip CubeTexture envMaps, flip everything else:\\n\\t\\t\\t//  WebGLRenderTargetCube will be flipped for backwards compatibility\\n\\t\\t\\t//  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture\\n\\t\\t\\t// this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future\\n\\t\\t\\tuniforms.flipEnvMap.value = ( ! ( material.envMap instanceof THREE.CubeTexture ) ) ? 1 : - 1;\\n\\n\\t\\t\\tuniforms.reflectivity.value = material.reflectivity;\\n\\t\\t\\tuniforms.refractionRatio.value = material.refractionRatio;\\n\\n\\t\\t}\\n\\n\\t\\tfunction refreshUniformsLine ( uniforms, material ) {\\n\\n\\t\\t\\tuniforms.diffuse.value = material.color;\\n\\t\\t\\tuniforms.opacity.value = material.opacity;\\n\\n\\t\\t}\\n\\n\\t\\tfunction refreshUniformsDash ( uniforms, material ) {\\n\\n\\t\\t\\tuniforms.dashSize.value = material.dashSize;\\n\\t\\t\\tuniforms.totalSize.value = material.dashSize + material.gapSize;\\n\\t\\t\\tuniforms.scale.value = material.scale;\\n\\n\\t\\t}\\n\\n\\t\\tfunction refreshUniformsPoints ( uniforms, material ) {\\n\\n\\t\\t\\tuniforms.diffuse.value = material.color;\\n\\t\\t\\tuniforms.opacity.value = material.opacity;\\n\\t\\t\\tuniforms.size.value = material.size * _pixelRatio;\\n\\t\\t\\tuniforms.scale.value = _canvas.clientHeight * 0.5;\\n\\n\\t\\t\\tuniforms.map.value = material.map;\\n\\n\\t\\t\\tif ( material.map !== null ) {\\n\\n\\t\\t\\t\\tvar offset = material.map.offset;\\n\\t\\t\\t\\tvar repeat = material.map.repeat;\\n\\n\\t\\t\\t\\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tfunction refreshUniformsFog ( uniforms, fog ) {\\n\\n\\t\\t\\tuniforms.fogColor.value = fog.color;\\n\\n\\t\\t\\tif ( fog instanceof THREE.Fog ) {\\n\\n\\t\\t\\t\\tuniforms.fogNear.value = fog.near;\\n\\t\\t\\t\\tuniforms.fogFar.value = fog.far;\\n\\n\\t\\t\\t} else if ( fog instanceof THREE.FogExp2 ) {\\n\\n\\t\\t\\t\\tuniforms.fogDensity.value = fog.density;\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tfunction refreshUniformsLambert ( uniforms, material ) {\\n\\n\\t\\t\\tif ( material.lightMap ) {\\n\\n\\t\\t\\t\\tuniforms.lightMap.value = material.lightMap;\\n\\t\\t\\t\\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( material.emissiveMap ) {\\n\\n\\t\\t\\t\\tuniforms.emissiveMap.value = material.emissiveMap;\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tfunction refreshUniformsPhong ( uniforms, material ) {\\n\\n\\t\\t\\tuniforms.specular.value = material.specular;\\n\\t\\t\\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\\n\\n\\t\\t\\tif ( material.lightMap ) {\\n\\n\\t\\t\\t\\tuniforms.lightMap.value = material.lightMap;\\n\\t\\t\\t\\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( material.emissiveMap ) {\\n\\n\\t\\t\\t\\tuniforms.emissiveMap.value = material.emissiveMap;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( material.bumpMap ) {\\n\\n\\t\\t\\t\\tuniforms.bumpMap.value = material.bumpMap;\\n\\t\\t\\t\\tuniforms.bumpScale.value = material.bumpScale;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( material.normalMap ) {\\n\\n\\t\\t\\t\\tuniforms.normalMap.value = material.normalMap;\\n\\t\\t\\t\\tuniforms.normalScale.value.copy( material.normalScale );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( material.displacementMap ) {\\n\\n\\t\\t\\t\\tuniforms.displacementMap.value = material.displacementMap;\\n\\t\\t\\t\\tuniforms.displacementScale.value = material.displacementScale;\\n\\t\\t\\t\\tuniforms.displacementBias.value = material.displacementBias;\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tfunction refreshUniformsStandard ( uniforms, material ) {\\n\\n\\t\\t\\tuniforms.roughness.value = material.roughness;\\n\\t\\t\\tuniforms.metalness.value = material.metalness;\\n\\n\\t\\t\\tif ( material.roughnessMap ) {\\n\\n\\t\\t\\t\\tuniforms.roughnessMap.value = material.roughnessMap;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( material.metalnessMap ) {\\n\\n\\t\\t\\t\\tuniforms.metalnessMap.value = material.metalnessMap;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( material.lightMap ) {\\n\\n\\t\\t\\t\\tuniforms.lightMap.value = material.lightMap;\\n\\t\\t\\t\\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( material.emissiveMap ) {\\n\\n\\t\\t\\t\\tuniforms.emissiveMap.value = material.emissiveMap;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( material.bumpMap ) {\\n\\n\\t\\t\\t\\tuniforms.bumpMap.value = material.bumpMap;\\n\\t\\t\\t\\tuniforms.bumpScale.value = material.bumpScale;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( material.normalMap ) {\\n\\n\\t\\t\\t\\tuniforms.normalMap.value = material.normalMap;\\n\\t\\t\\t\\tuniforms.normalScale.value.copy( material.normalScale );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( material.displacementMap ) {\\n\\n\\t\\t\\t\\tuniforms.displacementMap.value = material.displacementMap;\\n\\t\\t\\t\\tuniforms.displacementScale.value = material.displacementScale;\\n\\t\\t\\t\\tuniforms.displacementBias.value = material.displacementBias;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( material.envMap ) {\\n\\n\\t\\t\\t\\t//uniforms.envMap.value = material.envMap; // part of uniforms common\\n\\t\\t\\t\\tuniforms.envMapIntensity.value = material.envMapIntensity;\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tfunction refreshUniformsPhysical ( uniforms, material ) {\\n\\n\\t\\t\\tuniforms.clearCoat.value = material.clearCoat;\\n\\t\\t\\tuniforms.clearCoatRoughness.value = material.clearCoatRoughness;\\n\\n\\t\\t\\trefreshUniformsStandard( uniforms, material );\\n\\n\\t\\t}\\n\\n\\t\\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\\n\\n\\t\\tfunction markUniformsLightsNeedsUpdate ( uniforms, value ) {\\n\\n\\t\\t\\tuniforms.ambientLightColor.needsUpdate = value;\\n\\n\\t\\t\\tuniforms.directionalLights.needsUpdate = value;\\n\\t\\t\\tuniforms.pointLights.needsUpdate = value;\\n\\t\\t\\tuniforms.spotLights.needsUpdate = value;\\n\\t\\t\\tuniforms.hemisphereLights.needsUpdate = value;\\n\\n\\t\\t}\\n\\n\\t\\t// Lighting\\n\\n\\t\\tfunction setupShadows ( lights ) {\\n\\n\\t\\t\\tvar lightShadowsLength = 0;\\n\\n\\t\\t\\tfor ( var i = 0, l = lights.length; i < l; i ++ ) {\\n\\n\\t\\t\\t\\tvar light = lights[ i ];\\n\\n\\t\\t\\t\\tif ( light.castShadow ) {\\n\\n\\t\\t\\t\\t\\t_lights.shadows[ lightShadowsLength ++ ] = light;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t_lights.shadows.length = lightShadowsLength;\\n\\n\\t\\t}\\n\\n\\t\\tfunction setupLights ( lights, camera ) {\\n\\n\\t\\t\\tvar l, ll, light,\\n\\t\\t\\tr = 0, g = 0, b = 0,\\n\\t\\t\\tcolor,\\n\\t\\t\\tintensity,\\n\\t\\t\\tdistance,\\n\\t\\t\\tshadowMap,\\n\\n\\t\\t\\tviewMatrix = camera.matrixWorldInverse,\\n\\n\\t\\t\\tdirectionalLength = 0,\\n\\t\\t\\tpointLength = 0,\\n\\t\\t\\tspotLength = 0,\\n\\t\\t\\themiLength = 0;\\n\\n\\t\\t\\tfor ( l = 0, ll = lights.length; l < ll; l ++ ) {\\n\\n\\t\\t\\t\\tlight = lights[ l ];\\n\\n\\t\\t\\t\\tcolor = light.color;\\n\\t\\t\\t\\tintensity = light.intensity;\\n\\t\\t\\t\\tdistance = light.distance;\\n\\n\\t\\t\\t\\tshadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\\n\\n\\t\\t\\t\\tif ( light instanceof THREE.AmbientLight ) {\\n\\n\\t\\t\\t\\t\\tr += color.r * intensity;\\n\\t\\t\\t\\t\\tg += color.g * intensity;\\n\\t\\t\\t\\t\\tb += color.b * intensity;\\n\\n\\t\\t\\t\\t} else if ( light instanceof THREE.DirectionalLight ) {\\n\\n\\t\\t\\t\\t\\tvar uniforms = lightCache.get( light );\\n\\n\\t\\t\\t\\t\\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\\n\\t\\t\\t\\t\\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\\n\\t\\t\\t\\t\\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\\n\\t\\t\\t\\t\\tuniforms.direction.sub( _vector3 );\\n\\t\\t\\t\\t\\tuniforms.direction.transformDirection( viewMatrix );\\n\\n\\t\\t\\t\\t\\tuniforms.shadow = light.castShadow;\\n\\n\\t\\t\\t\\t\\tif ( light.castShadow ) {\\n\\n\\t\\t\\t\\t\\t\\tuniforms.shadowBias = light.shadow.bias;\\n\\t\\t\\t\\t\\t\\tuniforms.shadowRadius = light.shadow.radius;\\n\\t\\t\\t\\t\\t\\tuniforms.shadowMapSize = light.shadow.mapSize;\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t_lights.directionalShadowMap[ directionalLength ] = shadowMap;\\n\\t\\t\\t\\t\\t_lights.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\\n\\t\\t\\t\\t\\t_lights.directional[ directionalLength ++ ] = uniforms;\\n\\n\\t\\t\\t\\t} else if ( light instanceof THREE.SpotLight ) {\\n\\n\\t\\t\\t\\t\\tvar uniforms = lightCache.get( light );\\n\\n\\t\\t\\t\\t\\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\\n\\t\\t\\t\\t\\tuniforms.position.applyMatrix4( viewMatrix );\\n\\n\\t\\t\\t\\t\\tuniforms.color.copy( color ).multiplyScalar( intensity );\\n\\t\\t\\t\\t\\tuniforms.distance = distance;\\n\\n\\t\\t\\t\\t\\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\\n\\t\\t\\t\\t\\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\\n\\t\\t\\t\\t\\tuniforms.direction.sub( _vector3 );\\n\\t\\t\\t\\t\\tuniforms.direction.transformDirection( viewMatrix );\\n\\n\\t\\t\\t\\t\\tuniforms.coneCos = Math.cos( light.angle );\\n\\t\\t\\t\\t\\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\\n\\t\\t\\t\\t\\tuniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;\\n\\n\\t\\t\\t\\t\\tuniforms.shadow = light.castShadow;\\n\\n\\t\\t\\t\\t\\tif ( light.castShadow ) {\\n\\n\\t\\t\\t\\t\\t\\tuniforms.shadowBias = light.shadow.bias;\\n\\t\\t\\t\\t\\t\\tuniforms.shadowRadius = light.shadow.radius;\\n\\t\\t\\t\\t\\t\\tuniforms.shadowMapSize = light.shadow.mapSize;\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t_lights.spotShadowMap[ spotLength ] = shadowMap;\\n\\t\\t\\t\\t\\t_lights.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\\n\\t\\t\\t\\t\\t_lights.spot[ spotLength ++ ] = uniforms;\\n\\n\\t\\t\\t\\t} else if ( light instanceof THREE.PointLight ) {\\n\\n\\t\\t\\t\\t\\tvar uniforms = lightCache.get( light );\\n\\n\\t\\t\\t\\t\\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\\n\\t\\t\\t\\t\\tuniforms.position.applyMatrix4( viewMatrix );\\n\\n\\t\\t\\t\\t\\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\\n\\t\\t\\t\\t\\tuniforms.distance = light.distance;\\n\\t\\t\\t\\t\\tuniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;\\n\\n\\t\\t\\t\\t\\tuniforms.shadow = light.castShadow;\\n\\n\\t\\t\\t\\t\\tif ( light.castShadow ) {\\n\\n\\t\\t\\t\\t\\t\\tuniforms.shadowBias = light.shadow.bias;\\n\\t\\t\\t\\t\\t\\tuniforms.shadowRadius = light.shadow.radius;\\n\\t\\t\\t\\t\\t\\tuniforms.shadowMapSize = light.shadow.mapSize;\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t_lights.pointShadowMap[ pointLength ] = shadowMap;\\n\\n\\t\\t\\t\\t\\tif ( _lights.pointShadowMatrix[ pointLength ] === undefined ) {\\n\\n\\t\\t\\t\\t\\t\\t_lights.pointShadowMatrix[ pointLength ] = new THREE.Matrix4();\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t// for point lights we set the shadow matrix to be a translation-only matrix\\n\\t\\t\\t\\t\\t// equal to inverse of the light's position\\n\\t\\t\\t\\t\\t_vector3.setFromMatrixPosition( light.matrixWorld ).negate();\\n\\t\\t\\t\\t\\t_lights.pointShadowMatrix[ pointLength ].identity().setPosition( _vector3 );\\n\\n\\t\\t\\t\\t\\t_lights.point[ pointLength ++ ] = uniforms;\\n\\n\\t\\t\\t\\t} else if ( light instanceof THREE.HemisphereLight ) {\\n\\n\\t\\t\\t\\t\\tvar uniforms = lightCache.get( light );\\n\\n\\t\\t\\t\\t\\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\\n\\t\\t\\t\\t\\tuniforms.direction.transformDirection( viewMatrix );\\n\\t\\t\\t\\t\\tuniforms.direction.normalize();\\n\\n\\t\\t\\t\\t\\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\\n\\t\\t\\t\\t\\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\\n\\n\\t\\t\\t\\t\\t_lights.hemi[ hemiLength ++ ] = uniforms;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t_lights.ambient[ 0 ] = r;\\n\\t\\t\\t_lights.ambient[ 1 ] = g;\\n\\t\\t\\t_lights.ambient[ 2 ] = b;\\n\\n\\t\\t\\t_lights.directional.length = directionalLength;\\n\\t\\t\\t_lights.spot.length = spotLength;\\n\\t\\t\\t_lights.point.length = pointLength;\\n\\t\\t\\t_lights.hemi.length = hemiLength;\\n\\n\\t\\t\\t_lights.hash = directionalLength + ',' + pointLength + ',' + spotLength + ',' + hemiLength + ',' + _lights.shadows.length;\\n\\n\\t\\t}\\n\\n\\t\\t// GL state setting\\n\\n\\t\\tthis.setFaceCulling = function ( cullFace, frontFaceDirection ) {\\n\\n\\t\\t\\tstate.setCullFace( cullFace );\\n\\t\\t\\tstate.setFlipSided( frontFaceDirection === THREE.FrontFaceDirectionCW );\\n\\n\\t\\t};\\n\\n\\t\\t// Textures\\n\\n\\t\\tfunction allocTextureUnit() {\\n\\n\\t\\t\\tvar textureUnit = _usedTextureUnits;\\n\\n\\t\\t\\tif ( textureUnit >= capabilities.maxTextures ) {\\n\\n\\t\\t\\t\\tconsole.warn( 'WebGLRenderer: trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t_usedTextureUnits += 1;\\n\\n\\t\\t\\treturn textureUnit;\\n\\n\\t\\t}\\n\\n\\t\\tthis.allocTextureUnit = allocTextureUnit;\\n\\n\\t\\t// this.setTexture2D = setTexture2D;\\n\\t\\tthis.setTexture2D = ( function() {\\n\\n\\t\\t\\tvar warned = false;\\n\\n\\t\\t\\t// backwards compatibility: peel texture.texture\\n\\t\\t\\treturn function setTexture2D( texture, slot ) {\\n\\n\\t\\t\\t\\tif ( texture instanceof THREE.WebGLRenderTarget ) {\\n\\n\\t\\t\\t\\t\\tif ( ! warned ) {\\n\\n\\t\\t\\t\\t\\t\\tconsole.warn( \\\"THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead.\\\" );\\n\\t\\t\\t\\t\\t\\twarned = true;\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\ttexture = texture.texture;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\ttextures.setTexture2D( texture, slot );\\n\\n\\t\\t\\t};\\n\\n\\t\\t}() );\\n\\n\\t\\tthis.setTexture = ( function() {\\n\\n\\t\\t\\tvar warned = false;\\n\\n\\t\\t\\treturn function setTexture( texture, slot ) {\\n\\n\\t\\t\\t\\tif ( ! warned ) {\\n\\n\\t\\t\\t\\t\\tconsole.warn( \\\"THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead.\\\" );\\n\\t\\t\\t\\t\\twarned = true;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\ttextures.setTexture2D( texture, slot );\\n\\n\\t\\t\\t};\\n\\n\\t\\t}() );\\n\\n\\t\\tthis.setTextureCube = ( function() {\\n\\n\\t\\t\\tvar warned = false;\\n\\n\\t\\t\\treturn function setTextureCube( texture, slot ) {\\n\\n\\t\\t\\t\\t// backwards compatibility: peel texture.texture\\n\\t\\t\\t\\tif ( texture instanceof THREE.WebGLRenderTargetCube ) {\\n\\n\\t\\t\\t\\t\\tif ( ! warned ) {\\n\\n\\t\\t\\t\\t\\t\\tconsole.warn( \\\"THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead.\\\" );\\n\\t\\t\\t\\t\\t\\twarned = true;\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\ttexture = texture.texture;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// currently relying on the fact that WebGLRenderTargetCube.texture is a Texture and NOT a CubeTexture\\n\\t\\t\\t\\t// TODO: unify these code paths\\n\\t\\t\\t\\tif ( texture instanceof THREE.CubeTexture ||\\n\\t\\t\\t\\t\\t ( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\\n\\n\\t\\t\\t\\t\\t// CompressedTexture can have Array in image :/\\n\\n\\t\\t\\t\\t\\t// this function alone should take care of cube textures\\n\\t\\t\\t\\t\\ttextures.setTextureCube( texture, slot );\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t// assumed: texture property of THREE.WebGLRenderTargetCube\\n\\n\\t\\t\\t\\t\\ttextures.setTextureCubeDynamic( texture, slot );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t};\\n\\n\\t\\t}() );\\n\\n\\t\\tthis.getCurrentRenderTarget = function() {\\n\\n\\t\\t\\treturn _currentRenderTarget;\\n\\n\\t\\t};\\n\\n\\t\\tthis.setRenderTarget = function ( renderTarget ) {\\n\\n\\t\\t\\t_currentRenderTarget = renderTarget;\\n\\n\\t\\t\\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\\n\\n\\t\\t\\t\\ttextures.setupRenderTarget( renderTarget );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar isCube = ( renderTarget instanceof THREE.WebGLRenderTargetCube );\\n\\t\\t\\tvar framebuffer;\\n\\n\\t\\t\\tif ( renderTarget ) {\\n\\n\\t\\t\\t\\tvar renderTargetProperties = properties.get( renderTarget );\\n\\n\\t\\t\\t\\tif ( isCube ) {\\n\\n\\t\\t\\t\\t\\tframebuffer = renderTargetProperties.__webglFramebuffer[ renderTarget.activeCubeFace ];\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\tframebuffer = renderTargetProperties.__webglFramebuffer;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t_currentScissor.copy( renderTarget.scissor );\\n\\t\\t\\t\\t_currentScissorTest = renderTarget.scissorTest;\\n\\n\\t\\t\\t\\t_currentViewport.copy( renderTarget.viewport );\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\tframebuffer = null;\\n\\n\\t\\t\\t\\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio );\\n\\t\\t\\t\\t_currentScissorTest = _scissorTest;\\n\\n\\t\\t\\t\\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( _currentFramebuffer !== framebuffer ) {\\n\\n\\t\\t\\t\\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\\n\\t\\t\\t\\t_currentFramebuffer = framebuffer;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tstate.scissor( _currentScissor );\\n\\t\\t\\tstate.setScissorTest( _currentScissorTest );\\n\\n\\t\\t\\tstate.viewport( _currentViewport );\\n\\n\\t\\t\\tif ( isCube ) {\\n\\n\\t\\t\\t\\tvar textureProperties = properties.get( renderTarget.texture );\\n\\t\\t\\t\\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + renderTarget.activeCubeFace, textureProperties.__webglTexture, renderTarget.activeMipMapLevel );\\n\\n\\t\\t\\t}\\n\\n\\t\\t};\\n\\n\\t\\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer ) {\\n\\n\\t\\t\\tif ( renderTarget instanceof THREE.WebGLRenderTarget === false ) {\\n\\n\\t\\t\\t\\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\\n\\t\\t\\t\\treturn;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar framebuffer = properties.get( renderTarget ).__webglFramebuffer;\\n\\n\\t\\t\\tif ( framebuffer ) {\\n\\n\\t\\t\\t\\tvar restore = false;\\n\\n\\t\\t\\t\\tif ( framebuffer !== _currentFramebuffer ) {\\n\\n\\t\\t\\t\\t\\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\\n\\n\\t\\t\\t\\t\\trestore = true;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\ttry {\\n\\n\\t\\t\\t\\t\\tvar texture = renderTarget.texture;\\n\\n\\t\\t\\t\\t\\tif ( texture.format !== THREE.RGBAFormat && paramThreeToGL( texture.format ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\\n\\n\\t\\t\\t\\t\\t\\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\\n\\t\\t\\t\\t\\t\\treturn;\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tif ( texture.type !== THREE.UnsignedByteType &&\\n\\t\\t\\t\\t\\t     paramThreeToGL( texture.type ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_TYPE ) &&\\n\\t\\t\\t\\t\\t     ! ( texture.type === THREE.FloatType && extensions.get( 'WEBGL_color_buffer_float' ) ) &&\\n\\t\\t\\t\\t\\t     ! ( texture.type === THREE.HalfFloatType && extensions.get( 'EXT_color_buffer_half_float' ) ) ) {\\n\\n\\t\\t\\t\\t\\t\\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\\n\\t\\t\\t\\t\\t\\treturn;\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tif ( _gl.checkFramebufferStatus( _gl.FRAMEBUFFER ) === _gl.FRAMEBUFFER_COMPLETE ) {\\n\\n\\t\\t\\t\\t\\t\\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\\n\\n\\t\\t\\t\\t\\t\\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t_gl.readPixels( x, y, width, height, paramThreeToGL( texture.format ), paramThreeToGL( texture.type ), buffer );\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t} finally {\\n\\n\\t\\t\\t\\t\\tif ( restore ) {\\n\\n\\t\\t\\t\\t\\t\\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, _currentFramebuffer );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t};\\n\\n\\t\\t// Map three.js constants to WebGL constants\\n\\n\\t\\tfunction paramThreeToGL ( p ) {\\n\\n\\t\\t\\tvar extension;\\n\\n\\t\\t\\tif ( p === THREE.RepeatWrapping ) return _gl.REPEAT;\\n\\t\\t\\tif ( p === THREE.ClampToEdgeWrapping ) return _gl.CLAMP_TO_EDGE;\\n\\t\\t\\tif ( p === THREE.MirroredRepeatWrapping ) return _gl.MIRRORED_REPEAT;\\n\\n\\t\\t\\tif ( p === THREE.NearestFilter ) return _gl.NEAREST;\\n\\t\\t\\tif ( p === THREE.NearestMipMapNearestFilter ) return _gl.NEAREST_MIPMAP_NEAREST;\\n\\t\\t\\tif ( p === THREE.NearestMipMapLinearFilter ) return _gl.NEAREST_MIPMAP_LINEAR;\\n\\n\\t\\t\\tif ( p === THREE.LinearFilter ) return _gl.LINEAR;\\n\\t\\t\\tif ( p === THREE.LinearMipMapNearestFilter ) return _gl.LINEAR_MIPMAP_NEAREST;\\n\\t\\t\\tif ( p === THREE.LinearMipMapLinearFilter ) return _gl.LINEAR_MIPMAP_LINEAR;\\n\\n\\t\\t\\tif ( p === THREE.UnsignedByteType ) return _gl.UNSIGNED_BYTE;\\n\\t\\t\\tif ( p === THREE.UnsignedShort4444Type ) return _gl.UNSIGNED_SHORT_4_4_4_4;\\n\\t\\t\\tif ( p === THREE.UnsignedShort5551Type ) return _gl.UNSIGNED_SHORT_5_5_5_1;\\n\\t\\t\\tif ( p === THREE.UnsignedShort565Type ) return _gl.UNSIGNED_SHORT_5_6_5;\\n\\n\\t\\t\\tif ( p === THREE.ByteType ) return _gl.BYTE;\\n\\t\\t\\tif ( p === THREE.ShortType ) return _gl.SHORT;\\n\\t\\t\\tif ( p === THREE.UnsignedShortType ) return _gl.UNSIGNED_SHORT;\\n\\t\\t\\tif ( p === THREE.IntType ) return _gl.INT;\\n\\t\\t\\tif ( p === THREE.UnsignedIntType ) return _gl.UNSIGNED_INT;\\n\\t\\t\\tif ( p === THREE.FloatType ) return _gl.FLOAT;\\n\\n\\t\\t\\textension = extensions.get( 'OES_texture_half_float' );\\n\\n\\t\\t\\tif ( extension !== null ) {\\n\\n\\t\\t\\t\\tif ( p === THREE.HalfFloatType ) return extension.HALF_FLOAT_OES;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( p === THREE.AlphaFormat ) return _gl.ALPHA;\\n\\t\\t\\tif ( p === THREE.RGBFormat ) return _gl.RGB;\\n\\t\\t\\tif ( p === THREE.RGBAFormat ) return _gl.RGBA;\\n\\t\\t\\tif ( p === THREE.LuminanceFormat ) return _gl.LUMINANCE;\\n\\t\\t\\tif ( p === THREE.LuminanceAlphaFormat ) return _gl.LUMINANCE_ALPHA;\\n\\t\\t\\tif ( p === THREE.DepthFormat ) return _gl.DEPTH_COMPONENT;\\n\\n\\t\\t\\tif ( p === THREE.AddEquation ) return _gl.FUNC_ADD;\\n\\t\\t\\tif ( p === THREE.SubtractEquation ) return _gl.FUNC_SUBTRACT;\\n\\t\\t\\tif ( p === THREE.ReverseSubtractEquation ) return _gl.FUNC_REVERSE_SUBTRACT;\\n\\n\\t\\t\\tif ( p === THREE.ZeroFactor ) return _gl.ZERO;\\n\\t\\t\\tif ( p === THREE.OneFactor ) return _gl.ONE;\\n\\t\\t\\tif ( p === THREE.SrcColorFactor ) return _gl.SRC_COLOR;\\n\\t\\t\\tif ( p === THREE.OneMinusSrcColorFactor ) return _gl.ONE_MINUS_SRC_COLOR;\\n\\t\\t\\tif ( p === THREE.SrcAlphaFactor ) return _gl.SRC_ALPHA;\\n\\t\\t\\tif ( p === THREE.OneMinusSrcAlphaFactor ) return _gl.ONE_MINUS_SRC_ALPHA;\\n\\t\\t\\tif ( p === THREE.DstAlphaFactor ) return _gl.DST_ALPHA;\\n\\t\\t\\tif ( p === THREE.OneMinusDstAlphaFactor ) return _gl.ONE_MINUS_DST_ALPHA;\\n\\n\\t\\t\\tif ( p === THREE.DstColorFactor ) return _gl.DST_COLOR;\\n\\t\\t\\tif ( p === THREE.OneMinusDstColorFactor ) return _gl.ONE_MINUS_DST_COLOR;\\n\\t\\t\\tif ( p === THREE.SrcAlphaSaturateFactor ) return _gl.SRC_ALPHA_SATURATE;\\n\\n\\t\\t\\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\\n\\n\\t\\t\\tif ( extension !== null ) {\\n\\n\\t\\t\\t\\tif ( p === THREE.RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\\n\\t\\t\\t\\tif ( p === THREE.RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\\n\\t\\t\\t\\tif ( p === THREE.RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\\n\\t\\t\\t\\tif ( p === THREE.RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\\n\\n\\t\\t\\tif ( extension !== null ) {\\n\\n\\t\\t\\t\\tif ( p === THREE.RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\\n\\t\\t\\t\\tif ( p === THREE.RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\\n\\t\\t\\t\\tif ( p === THREE.RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\\n\\t\\t\\t\\tif ( p === THREE.RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\\n\\n\\t\\t\\tif ( extension !== null ) {\\n\\n\\t\\t\\t\\tif ( p === THREE.RGB_ETC1_Format ) return extension.COMPRESSED_RGB_ETC1_WEBGL;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\textension = extensions.get( 'EXT_blend_minmax' );\\n\\n\\t\\t\\tif ( extension !== null ) {\\n\\n\\t\\t\\t\\tif ( p === THREE.MinEquation ) return extension.MIN_EXT;\\n\\t\\t\\t\\tif ( p === THREE.MaxEquation ) return extension.MAX_EXT;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn 0;\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\t// File:src/renderers/WebGLRenderTarget.js\\n\\n\\t/**\\n\\t * @author szimek / https://github.com/szimek/\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t * @author Marius Kintel / https://github.com/kintel\\n\\t */\\n\\n\\t/*\\n\\t In options, we can specify:\\n\\t * Texture parameters for an auto-generated target texture\\n\\t * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\\n\\t*/\\n\\tTHREE.WebGLRenderTarget = function ( width, height, options ) {\\n\\n\\t\\tthis.uuid = THREE.Math.generateUUID();\\n\\n\\t\\tthis.width = width;\\n\\t\\tthis.height = height;\\n\\n\\t\\tthis.scissor = new THREE.Vector4( 0, 0, width, height );\\n\\t\\tthis.scissorTest = false;\\n\\n\\t\\tthis.viewport = new THREE.Vector4( 0, 0, width, height );\\n\\n\\t\\toptions = options || {};\\n\\n\\t\\tif ( options.minFilter === undefined ) options.minFilter = THREE.LinearFilter;\\n\\n\\t\\tthis.texture = new THREE.Texture( undefined, undefined, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\\n\\n\\t\\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\\n\\t\\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\\n\\t\\tthis.depthTexture = null;\\n\\n\\t};\\n\\n\\tObject.assign( THREE.WebGLRenderTarget.prototype, THREE.EventDispatcher.prototype, {\\n\\n\\t\\tsetSize: function ( width, height ) {\\n\\n\\t\\t\\tif ( this.width !== width || this.height !== height ) {\\n\\n\\t\\t\\t\\tthis.width = width;\\n\\t\\t\\t\\tthis.height = height;\\n\\n\\t\\t\\t\\tthis.dispose();\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.viewport.set( 0, 0, width, height );\\n\\t\\t\\tthis.scissor.set( 0, 0, width, height );\\n\\n\\t\\t},\\n\\n\\t\\tclone: function () {\\n\\n\\t\\t\\treturn new this.constructor().copy( this );\\n\\n\\t\\t},\\n\\n\\t\\tcopy: function ( source ) {\\n\\n\\t\\t\\tthis.width = source.width;\\n\\t\\t\\tthis.height = source.height;\\n\\n\\t\\t\\tthis.viewport.copy( source.viewport );\\n\\n\\t\\t\\tthis.texture = source.texture.clone();\\n\\n\\t\\t\\tthis.depthBuffer = source.depthBuffer;\\n\\t\\t\\tthis.stencilBuffer = source.stencilBuffer;\\n\\t\\t\\tthis.depthTexture = source.depthTexture;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t},\\n\\n\\t\\tdispose: function () {\\n\\n\\t\\t\\tthis.dispatchEvent( { type: 'dispose' } );\\n\\n\\t\\t}\\n\\n\\t} );\\n\\n\\t// File:src/renderers/WebGLRenderTargetCube.js\\n\\n\\t/**\\n\\t * @author alteredq / http://alteredqualia.com\\n\\t */\\n\\n\\tTHREE.WebGLRenderTargetCube = function ( width, height, options ) {\\n\\n\\t\\tTHREE.WebGLRenderTarget.call( this, width, height, options );\\n\\n\\t\\tthis.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\\n\\t\\tthis.activeMipMapLevel = 0;\\n\\n\\t};\\n\\n\\tTHREE.WebGLRenderTargetCube.prototype = Object.create( THREE.WebGLRenderTarget.prototype );\\n\\tTHREE.WebGLRenderTargetCube.prototype.constructor = THREE.WebGLRenderTargetCube;\\n\\n\\t// File:src/renderers/webgl/WebGLBufferRenderer.js\\n\\n\\t/**\\n\\t* @author mrdoob / http://mrdoob.com/\\n\\t*/\\n\\n\\tTHREE.WebGLBufferRenderer = function ( _gl, extensions, _infoRender ) {\\n\\n\\t\\tvar mode;\\n\\n\\t\\tfunction setMode( value ) {\\n\\n\\t\\t\\tmode = value;\\n\\n\\t\\t}\\n\\n\\t\\tfunction render( start, count ) {\\n\\n\\t\\t\\t_gl.drawArrays( mode, start, count );\\n\\n\\t\\t\\t_infoRender.calls ++;\\n\\t\\t\\t_infoRender.vertices += count;\\n\\t\\t\\tif ( mode === _gl.TRIANGLES ) _infoRender.faces += count / 3;\\n\\n\\t\\t}\\n\\n\\t\\tfunction renderInstances( geometry ) {\\n\\n\\t\\t\\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\\n\\n\\t\\t\\tif ( extension === null ) {\\n\\n\\t\\t\\t\\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\\n\\t\\t\\t\\treturn;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar position = geometry.attributes.position;\\n\\n\\t\\t\\tvar count = 0;\\n\\n\\t\\t\\tif ( position instanceof THREE.InterleavedBufferAttribute ) {\\n\\n\\t\\t\\t\\tcount = position.data.count;\\n\\n\\t\\t\\t\\textension.drawArraysInstancedANGLE( mode, 0, count, geometry.maxInstancedCount );\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\tcount = position.count;\\n\\n\\t\\t\\t\\textension.drawArraysInstancedANGLE( mode, 0, count, geometry.maxInstancedCount );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t_infoRender.calls ++;\\n\\t\\t\\t_infoRender.vertices += count * geometry.maxInstancedCount;\\n\\t\\t\\tif ( mode === _gl.TRIANGLES ) _infoRender.faces += geometry.maxInstancedCount * count / 3;\\n\\n\\t\\t}\\n\\n\\t\\tthis.setMode = setMode;\\n\\t\\tthis.render = render;\\n\\t\\tthis.renderInstances = renderInstances;\\n\\n\\t};\\n\\n\\t// File:src/renderers/webgl/WebGLClipping.js\\n\\n\\tTHREE.WebGLClipping = function() {\\n\\n\\t\\tvar scope = this,\\n\\n\\t\\t\\tglobalState = null,\\n\\t\\t\\tnumGlobalPlanes = 0,\\n\\t\\t\\tlocalClippingEnabled = false,\\n\\t\\t\\trenderingShadows = false,\\n\\n\\t\\t\\tplane = new THREE.Plane(),\\n\\t\\t\\tviewNormalMatrix = new THREE.Matrix3(),\\n\\n\\t\\t\\tuniform = { value: null, needsUpdate: false };\\n\\n\\t\\tthis.uniform = uniform;\\n\\t\\tthis.numPlanes = 0;\\n\\n\\t\\tthis.init = function( planes, enableLocalClipping, camera ) {\\n\\n\\t\\t\\tvar enabled =\\n\\t\\t\\t\\tplanes.length !== 0 ||\\n\\t\\t\\t\\tenableLocalClipping ||\\n\\t\\t\\t\\t// enable state of previous frame - the clipping code has to\\n\\t\\t\\t\\t// run another frame in order to reset the state:\\n\\t\\t\\t\\tnumGlobalPlanes !== 0 ||\\n\\t\\t\\t\\tlocalClippingEnabled;\\n\\n\\t\\t\\tlocalClippingEnabled = enableLocalClipping;\\n\\n\\t\\t\\tglobalState = projectPlanes( planes, camera, 0 );\\n\\t\\t\\tnumGlobalPlanes = planes.length;\\n\\n\\t\\t\\treturn enabled;\\n\\n\\t\\t};\\n\\n\\t\\tthis.beginShadows = function() {\\n\\n\\t\\t\\trenderingShadows = true;\\n\\t\\t\\tprojectPlanes( null );\\n\\n\\t\\t};\\n\\n\\t\\tthis.endShadows = function() {\\n\\n\\t\\t\\trenderingShadows = false;\\n\\t\\t\\tresetGlobalState();\\n\\n\\t\\t};\\n\\n\\t\\tthis.setState = function( planes, clipShadows, camera, cache, fromCache ) {\\n\\n\\t\\t\\tif ( ! localClippingEnabled ||\\n\\t\\t\\t\\t\\tplanes === null || planes.length === 0 ||\\n\\t\\t\\t\\t\\trenderingShadows && ! clipShadows ) {\\n\\t\\t\\t\\t// there's no local clipping\\n\\n\\t\\t\\t\\tif ( renderingShadows ) {\\n\\t\\t\\t\\t\\t// there's no global clipping\\n\\n\\t\\t\\t\\t\\tprojectPlanes( null );\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\tresetGlobalState();\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\tvar nGlobal = renderingShadows ? 0 : numGlobalPlanes,\\n\\t\\t\\t\\t\\tlGlobal = nGlobal * 4,\\n\\n\\t\\t\\t\\t\\tdstArray = cache.clippingState || null;\\n\\n\\t\\t\\t\\tuniform.value = dstArray; // ensure unique state\\n\\n\\t\\t\\t\\tdstArray = projectPlanes( planes, camera, lGlobal, fromCache );\\n\\n\\t\\t\\t\\tfor ( var i = 0; i !== lGlobal; ++ i ) {\\n\\n\\t\\t\\t\\t\\tdstArray[ i ] = globalState[ i ];\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tcache.clippingState = dstArray;\\n\\t\\t\\t\\tthis.numPlanes += nGlobal;\\n\\n\\t\\t\\t}\\n\\n\\n\\t\\t};\\n\\n\\t\\tfunction resetGlobalState() {\\n\\n\\t\\t\\tif ( uniform.value !== globalState ) {\\n\\n\\t\\t\\t\\tuniform.value = globalState;\\n\\t\\t\\t\\tuniform.needsUpdate = numGlobalPlanes > 0;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tscope.numPlanes = numGlobalPlanes;\\n\\n\\t\\t}\\n\\n\\t\\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\\n\\n\\t\\t\\tvar nPlanes = planes !== null ? planes.length : 0,\\n\\t\\t\\t\\tdstArray = null;\\n\\n\\t\\t\\tif ( nPlanes !== 0 ) {\\n\\n\\t\\t\\t\\tdstArray = uniform.value;\\n\\n\\t\\t\\t\\tif ( skipTransform !== true || dstArray === null ) {\\n\\n\\t\\t\\t\\t\\tvar flatSize = dstOffset + nPlanes * 4,\\n\\t\\t\\t\\t\\t\\tviewMatrix = camera.matrixWorldInverse;\\n\\n\\t\\t\\t\\t\\tviewNormalMatrix.getNormalMatrix( viewMatrix );\\n\\n\\t\\t\\t\\t\\tif ( dstArray === null || dstArray.length < flatSize ) {\\n\\n\\t\\t\\t\\t\\t\\tdstArray = new Float32Array( flatSize );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tfor ( var i = 0, i4 = dstOffset;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ti !== nPlanes; ++ i, i4 += 4 ) {\\n\\n\\t\\t\\t\\t\\t\\tplane.copy( planes[ i ] ).\\n\\t\\t\\t\\t\\t\\t\\t\\tapplyMatrix4( viewMatrix, viewNormalMatrix );\\n\\n\\t\\t\\t\\t\\t\\tplane.normal.toArray( dstArray, i4 );\\n\\t\\t\\t\\t\\t\\tdstArray[ i4 + 3 ] = plane.constant;\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tuniform.value = dstArray;\\n\\t\\t\\t\\tuniform.needsUpdate = true;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tscope.numPlanes = nPlanes;\\n\\t\\t\\treturn dstArray;\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\n\\t// File:src/renderers/webgl/WebGLIndexedBufferRenderer.js\\n\\n\\t/**\\n\\t* @author mrdoob / http://mrdoob.com/\\n\\t*/\\n\\n\\tTHREE.WebGLIndexedBufferRenderer = function ( _gl, extensions, _infoRender ) {\\n\\n\\t\\tvar mode;\\n\\n\\t\\tfunction setMode( value ) {\\n\\n\\t\\t\\tmode = value;\\n\\n\\t\\t}\\n\\n\\t\\tvar type, size;\\n\\n\\t\\tfunction setIndex( index ) {\\n\\n\\t\\t\\tif ( index.array instanceof Uint32Array && extensions.get( 'OES_element_index_uint' ) ) {\\n\\n\\t\\t\\t\\ttype = _gl.UNSIGNED_INT;\\n\\t\\t\\t\\tsize = 4;\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\ttype = _gl.UNSIGNED_SHORT;\\n\\t\\t\\t\\tsize = 2;\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tfunction render( start, count ) {\\n\\n\\t\\t\\t_gl.drawElements( mode, count, type, start * size );\\n\\n\\t\\t\\t_infoRender.calls ++;\\n\\t\\t\\t_infoRender.vertices += count;\\n\\t\\t\\tif ( mode === _gl.TRIANGLES ) _infoRender.faces += count / 3;\\n\\n\\t\\t}\\n\\n\\t\\tfunction renderInstances( geometry, start, count ) {\\n\\n\\t\\t\\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\\n\\n\\t\\t\\tif ( extension === null ) {\\n\\n\\t\\t\\t\\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\\n\\t\\t\\t\\treturn;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\textension.drawElementsInstancedANGLE( mode, count, type, start * size, geometry.maxInstancedCount );\\n\\n\\t\\t\\t_infoRender.calls ++;\\n\\t\\t\\t_infoRender.vertices += count * geometry.maxInstancedCount;\\n\\t\\t\\tif ( mode === _gl.TRIANGLES ) _infoRender.faces += geometry.maxInstancedCount * count / 3;\\n\\t\\t}\\n\\n\\t\\tthis.setMode = setMode;\\n\\t\\tthis.setIndex = setIndex;\\n\\t\\tthis.render = render;\\n\\t\\tthis.renderInstances = renderInstances;\\n\\n\\t};\\n\\n\\t// File:src/renderers/webgl/WebGLExtensions.js\\n\\n\\t/**\\n\\t* @author mrdoob / http://mrdoob.com/\\n\\t*/\\n\\n\\tTHREE.WebGLExtensions = function ( gl ) {\\n\\n\\t\\tvar extensions = {};\\n\\n\\t\\tthis.get = function ( name ) {\\n\\n\\t\\t\\tif ( extensions[ name ] !== undefined ) {\\n\\n\\t\\t\\t\\treturn extensions[ name ];\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar extension;\\n\\n\\t\\t\\tswitch ( name ) {\\n\\n\\t\\t\\t\\tcase 'WEBGL_depth_texture':\\n\\t\\t\\t\\t\\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\\n\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\tcase 'EXT_texture_filter_anisotropic':\\n\\t\\t\\t\\t\\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\\n\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\tcase 'WEBGL_compressed_texture_s3tc':\\n\\t\\t\\t\\t\\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\\n\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\tcase 'WEBGL_compressed_texture_pvrtc':\\n\\t\\t\\t\\t\\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\\n\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\tcase 'WEBGL_compressed_texture_etc1':\\n\\t\\t\\t\\t\\textension = gl.getExtension( 'WEBGL_compressed_texture_etc1' );\\n\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\tdefault:\\n\\t\\t\\t\\t\\textension = gl.getExtension( name );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( extension === null ) {\\n\\n\\t\\t\\t\\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\textensions[ name ] = extension;\\n\\n\\t\\t\\treturn extension;\\n\\n\\t\\t};\\n\\n\\t};\\n\\n\\t// File:src/renderers/webgl/WebGLCapabilities.js\\n\\n\\tTHREE.WebGLCapabilities = function ( gl, extensions, parameters ) {\\n\\n\\t\\tvar maxAnisotropy;\\n\\n\\t\\tfunction getMaxAnisotropy() {\\n\\n\\t\\t\\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\\n\\n\\t\\t\\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\\n\\n\\t\\t\\tif ( extension !== null ) {\\n\\n\\t\\t\\t\\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\tmaxAnisotropy = 0;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn maxAnisotropy;\\n\\n\\t\\t}\\n\\n\\t\\tfunction getMaxPrecision( precision ) {\\n\\n\\t\\t\\tif ( precision === 'highp' ) {\\n\\n\\t\\t\\t\\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\\n\\t\\t\\t\\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\\n\\n\\t\\t\\t\\t\\treturn 'highp';\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tprecision = 'mediump';\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( precision === 'mediump' ) {\\n\\n\\t\\t\\t\\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\\n\\t\\t\\t\\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\\n\\n\\t\\t\\t\\t\\treturn 'mediump';\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn 'lowp';\\n\\n\\t\\t}\\n\\n\\t\\tthis.getMaxAnisotropy = getMaxAnisotropy;\\n\\t\\tthis.getMaxPrecision = getMaxPrecision;\\n\\n\\t\\tthis.precision = parameters.precision !== undefined ? parameters.precision : 'highp';\\n\\t\\tthis.logarithmicDepthBuffer = parameters.logarithmicDepthBuffer !== undefined ? parameters.logarithmicDepthBuffer : false;\\n\\n\\t\\tthis.maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\\n\\t\\tthis.maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\\n\\t\\tthis.maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\\n\\t\\tthis.maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\\n\\n\\t\\tthis.maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\\n\\t\\tthis.maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\\n\\t\\tthis.maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\\n\\t\\tthis.maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\\n\\n\\t\\tthis.vertexTextures = this.maxVertexTextures > 0;\\n\\t\\tthis.floatFragmentTextures = !! extensions.get( 'OES_texture_float' );\\n\\t\\tthis.floatVertexTextures = this.vertexTextures && this.floatFragmentTextures;\\n\\n\\t\\tvar _maxPrecision = getMaxPrecision( this.precision );\\n\\n\\t\\tif ( _maxPrecision !== this.precision ) {\\n\\n\\t\\t\\tconsole.warn( 'THREE.WebGLRenderer:', this.precision, 'not supported, using', _maxPrecision, 'instead.' );\\n\\t\\t\\tthis.precision = _maxPrecision;\\n\\n\\t\\t}\\n\\n\\t\\tif ( this.logarithmicDepthBuffer ) {\\n\\n\\t\\t\\tthis.logarithmicDepthBuffer = !! extensions.get( 'EXT_frag_depth' );\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\t// File:src/renderers/webgl/WebGLGeometries.js\\n\\n\\t/**\\n\\t* @author mrdoob / http://mrdoob.com/\\n\\t*/\\n\\n\\tTHREE.WebGLGeometries = function ( gl, properties, info ) {\\n\\n\\t\\tvar geometries = {};\\n\\n\\t\\tfunction get( object ) {\\n\\n\\t\\t\\tvar geometry = object.geometry;\\n\\n\\t\\t\\tif ( geometries[ geometry.id ] !== undefined ) {\\n\\n\\t\\t\\t\\treturn geometries[ geometry.id ];\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tgeometry.addEventListener( 'dispose', onGeometryDispose );\\n\\n\\t\\t\\tvar buffergeometry;\\n\\n\\t\\t\\tif ( geometry instanceof THREE.BufferGeometry ) {\\n\\n\\t\\t\\t\\tbuffergeometry = geometry;\\n\\n\\t\\t\\t} else if ( geometry instanceof THREE.Geometry ) {\\n\\n\\t\\t\\t\\tif ( geometry._bufferGeometry === undefined ) {\\n\\n\\t\\t\\t\\t\\tgeometry._bufferGeometry = new THREE.BufferGeometry().setFromObject( object );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tbuffergeometry = geometry._bufferGeometry;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tgeometries[ geometry.id ] = buffergeometry;\\n\\n\\t\\t\\tinfo.memory.geometries ++;\\n\\n\\t\\t\\treturn buffergeometry;\\n\\n\\t\\t}\\n\\n\\t\\tfunction onGeometryDispose( event ) {\\n\\n\\t\\t\\tvar geometry = event.target;\\n\\t\\t\\tvar buffergeometry = geometries[ geometry.id ];\\n\\n\\t\\t\\tif ( buffergeometry.index !== null ) {\\n\\n\\t\\t\\t\\tdeleteAttribute( buffergeometry.index );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tdeleteAttributes( buffergeometry.attributes );\\n\\n\\t\\t\\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\\n\\n\\t\\t\\tdelete geometries[ geometry.id ];\\n\\n\\t\\t\\t// TODO\\n\\n\\t\\t\\tvar property = properties.get( geometry );\\n\\n\\t\\t\\tif ( property.wireframe ) {\\n\\n\\t\\t\\t\\tdeleteAttribute( property.wireframe );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tproperties.delete( geometry );\\n\\n\\t\\t\\tvar bufferproperty = properties.get( buffergeometry );\\n\\n\\t\\t\\tif ( bufferproperty.wireframe ) {\\n\\n\\t\\t\\t\\tdeleteAttribute( bufferproperty.wireframe );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tproperties.delete( buffergeometry );\\n\\n\\t\\t\\t//\\n\\n\\t\\t\\tinfo.memory.geometries --;\\n\\n\\t\\t}\\n\\n\\t\\tfunction getAttributeBuffer( attribute ) {\\n\\n\\t\\t\\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\\n\\n\\t\\t\\t\\treturn properties.get( attribute.data ).__webglBuffer;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn properties.get( attribute ).__webglBuffer;\\n\\n\\t\\t}\\n\\n\\t\\tfunction deleteAttribute( attribute ) {\\n\\n\\t\\t\\tvar buffer = getAttributeBuffer( attribute );\\n\\n\\t\\t\\tif ( buffer !== undefined ) {\\n\\n\\t\\t\\t\\tgl.deleteBuffer( buffer );\\n\\t\\t\\t\\tremoveAttributeBuffer( attribute );\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tfunction deleteAttributes( attributes ) {\\n\\n\\t\\t\\tfor ( var name in attributes ) {\\n\\n\\t\\t\\t\\tdeleteAttribute( attributes[ name ] );\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tfunction removeAttributeBuffer( attribute ) {\\n\\n\\t\\t\\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\\n\\n\\t\\t\\t\\tproperties.delete( attribute.data );\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\tproperties.delete( attribute );\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tthis.get = get;\\n\\n\\t};\\n\\n\\t// File:src/renderers/webgl/WebGLLights.js\\n\\n\\t/**\\n\\t* @author mrdoob / http://mrdoob.com/\\n\\t*/\\n\\n\\tTHREE.WebGLLights = function () {\\n\\n\\t\\tvar lights = {};\\n\\n\\t\\tthis.get = function ( light ) {\\n\\n\\t\\t\\tif ( lights[ light.id ] !== undefined ) {\\n\\n\\t\\t\\t\\treturn lights[ light.id ];\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar uniforms;\\n\\n\\t\\t\\tswitch ( light.type ) {\\n\\n\\t\\t\\t\\tcase 'DirectionalLight':\\n\\t\\t\\t\\t\\tuniforms = {\\n\\t\\t\\t\\t\\t\\tdirection: new THREE.Vector3(),\\n\\t\\t\\t\\t\\t\\tcolor: new THREE.Color(),\\n\\n\\t\\t\\t\\t\\t\\tshadow: false,\\n\\t\\t\\t\\t\\t\\tshadowBias: 0,\\n\\t\\t\\t\\t\\t\\tshadowRadius: 1,\\n\\t\\t\\t\\t\\t\\tshadowMapSize: new THREE.Vector2()\\n\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\tcase 'SpotLight':\\n\\t\\t\\t\\t\\tuniforms = {\\n\\t\\t\\t\\t\\t\\tposition: new THREE.Vector3(),\\n\\t\\t\\t\\t\\t\\tdirection: new THREE.Vector3(),\\n\\t\\t\\t\\t\\t\\tcolor: new THREE.Color(),\\n\\t\\t\\t\\t\\t\\tdistance: 0,\\n\\t\\t\\t\\t\\t\\tconeCos: 0,\\n\\t\\t\\t\\t\\t\\tpenumbraCos: 0,\\n\\t\\t\\t\\t\\t\\tdecay: 0,\\n\\n\\t\\t\\t\\t\\t\\tshadow: false,\\n\\t\\t\\t\\t\\t\\tshadowBias: 0,\\n\\t\\t\\t\\t\\t\\tshadowRadius: 1,\\n\\t\\t\\t\\t\\t\\tshadowMapSize: new THREE.Vector2()\\n\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\tcase 'PointLight':\\n\\t\\t\\t\\t\\tuniforms = {\\n\\t\\t\\t\\t\\t\\tposition: new THREE.Vector3(),\\n\\t\\t\\t\\t\\t\\tcolor: new THREE.Color(),\\n\\t\\t\\t\\t\\t\\tdistance: 0,\\n\\t\\t\\t\\t\\t\\tdecay: 0,\\n\\n\\t\\t\\t\\t\\t\\tshadow: false,\\n\\t\\t\\t\\t\\t\\tshadowBias: 0,\\n\\t\\t\\t\\t\\t\\tshadowRadius: 1,\\n\\t\\t\\t\\t\\t\\tshadowMapSize: new THREE.Vector2()\\n\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\tcase 'HemisphereLight':\\n\\t\\t\\t\\t\\tuniforms = {\\n\\t\\t\\t\\t\\t\\tdirection: new THREE.Vector3(),\\n\\t\\t\\t\\t\\t\\tskyColor: new THREE.Color(),\\n\\t\\t\\t\\t\\t\\tgroundColor: new THREE.Color()\\n\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tlights[ light.id ] = uniforms;\\n\\n\\t\\t\\treturn uniforms;\\n\\n\\t\\t};\\n\\n\\t};\\n\\n\\t// File:src/renderers/webgl/WebGLObjects.js\\n\\n\\t/**\\n\\t* @author mrdoob / http://mrdoob.com/\\n\\t*/\\n\\n\\tTHREE.WebGLObjects = function ( gl, properties, info ) {\\n\\n\\t\\tvar geometries = new THREE.WebGLGeometries( gl, properties, info );\\n\\n\\t\\t//\\n\\n\\t\\tfunction update( object ) {\\n\\n\\t\\t\\t// TODO: Avoid updating twice (when using shadowMap). Maybe add frame counter.\\n\\n\\t\\t\\tvar geometry = geometries.get( object );\\n\\n\\t\\t\\tif ( object.geometry instanceof THREE.Geometry ) {\\n\\n\\t\\t\\t\\tgeometry.updateFromObject( object );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar index = geometry.index;\\n\\t\\t\\tvar attributes = geometry.attributes;\\n\\n\\t\\t\\tif ( index !== null ) {\\n\\n\\t\\t\\t\\tupdateAttribute( index, gl.ELEMENT_ARRAY_BUFFER );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tfor ( var name in attributes ) {\\n\\n\\t\\t\\t\\tupdateAttribute( attributes[ name ], gl.ARRAY_BUFFER );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t// morph targets\\n\\n\\t\\t\\tvar morphAttributes = geometry.morphAttributes;\\n\\n\\t\\t\\tfor ( var name in morphAttributes ) {\\n\\n\\t\\t\\t\\tvar array = morphAttributes[ name ];\\n\\n\\t\\t\\t\\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\\n\\n\\t\\t\\t\\t\\tupdateAttribute( array[ i ], gl.ARRAY_BUFFER );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn geometry;\\n\\n\\t\\t}\\n\\n\\t\\tfunction updateAttribute( attribute, bufferType ) {\\n\\n\\t\\t\\tvar data = ( attribute instanceof THREE.InterleavedBufferAttribute ) ? attribute.data : attribute;\\n\\n\\t\\t\\tvar attributeProperties = properties.get( data );\\n\\n\\t\\t\\tif ( attributeProperties.__webglBuffer === undefined ) {\\n\\n\\t\\t\\t\\tcreateBuffer( attributeProperties, data, bufferType );\\n\\n\\t\\t\\t} else if ( attributeProperties.version !== data.version ) {\\n\\n\\t\\t\\t\\tupdateBuffer( attributeProperties, data, bufferType );\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tfunction createBuffer( attributeProperties, data, bufferType ) {\\n\\n\\t\\t\\tattributeProperties.__webglBuffer = gl.createBuffer();\\n\\t\\t\\tgl.bindBuffer( bufferType, attributeProperties.__webglBuffer );\\n\\n\\t\\t\\tvar usage = data.dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\\n\\n\\t\\t\\tgl.bufferData( bufferType, data.array, usage );\\n\\n\\t\\t\\tattributeProperties.version = data.version;\\n\\n\\t\\t}\\n\\n\\t\\tfunction updateBuffer( attributeProperties, data, bufferType ) {\\n\\n\\t\\t\\tgl.bindBuffer( bufferType, attributeProperties.__webglBuffer );\\n\\n\\t\\t\\tif ( data.dynamic === false || data.updateRange.count === - 1 ) {\\n\\n\\t\\t\\t\\t// Not using update ranges\\n\\n\\t\\t\\t\\tgl.bufferSubData( bufferType, 0, data.array );\\n\\n\\t\\t\\t} else if ( data.updateRange.count === 0 ) {\\n\\n\\t\\t\\t\\tconsole.error( 'THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.' );\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\tgl.bufferSubData( bufferType, data.updateRange.offset * data.array.BYTES_PER_ELEMENT,\\n\\t\\t\\t\\t\\t\\t\\t\\t  data.array.subarray( data.updateRange.offset, data.updateRange.offset + data.updateRange.count ) );\\n\\n\\t\\t\\t\\tdata.updateRange.count = 0; // reset range\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tattributeProperties.version = data.version;\\n\\n\\t\\t}\\n\\n\\t\\tfunction getAttributeBuffer( attribute ) {\\n\\n\\t\\t\\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\\n\\n\\t\\t\\t\\treturn properties.get( attribute.data ).__webglBuffer;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn properties.get( attribute ).__webglBuffer;\\n\\n\\t\\t}\\n\\n\\t\\tfunction getWireframeAttribute( geometry ) {\\n\\n\\t\\t\\tvar property = properties.get( geometry );\\n\\n\\t\\t\\tif ( property.wireframe !== undefined ) {\\n\\n\\t\\t\\t\\treturn property.wireframe;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar indices = [];\\n\\n\\t\\t\\tvar index = geometry.index;\\n\\t\\t\\tvar attributes = geometry.attributes;\\n\\t\\t\\tvar position = attributes.position;\\n\\n\\t\\t\\t// console.time( 'wireframe' );\\n\\n\\t\\t\\tif ( index !== null ) {\\n\\n\\t\\t\\t\\tvar edges = {};\\n\\t\\t\\t\\tvar array = index.array;\\n\\n\\t\\t\\t\\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\\n\\n\\t\\t\\t\\t\\tvar a = array[ i + 0 ];\\n\\t\\t\\t\\t\\tvar b = array[ i + 1 ];\\n\\t\\t\\t\\t\\tvar c = array[ i + 2 ];\\n\\n\\t\\t\\t\\t\\tif ( checkEdge( edges, a, b ) ) indices.push( a, b );\\n\\t\\t\\t\\t\\tif ( checkEdge( edges, b, c ) ) indices.push( b, c );\\n\\t\\t\\t\\t\\tif ( checkEdge( edges, c, a ) ) indices.push( c, a );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\tvar array = attributes.position.array;\\n\\n\\t\\t\\t\\tfor ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\\n\\n\\t\\t\\t\\t\\tvar a = i + 0;\\n\\t\\t\\t\\t\\tvar b = i + 1;\\n\\t\\t\\t\\t\\tvar c = i + 2;\\n\\n\\t\\t\\t\\t\\tindices.push( a, b, b, c, c, a );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t// console.timeEnd( 'wireframe' );\\n\\n\\t\\t\\tvar TypeArray = position.count > 65535 ? Uint32Array : Uint16Array;\\n\\t\\t\\tvar attribute = new THREE.BufferAttribute( new TypeArray( indices ), 1 );\\n\\n\\t\\t\\tupdateAttribute( attribute, gl.ELEMENT_ARRAY_BUFFER );\\n\\n\\t\\t\\tproperty.wireframe = attribute;\\n\\n\\t\\t\\treturn attribute;\\n\\n\\t\\t}\\n\\n\\t\\tfunction checkEdge( edges, a, b ) {\\n\\n\\t\\t\\tif ( a > b ) {\\n\\n\\t\\t\\t\\tvar tmp = a;\\n\\t\\t\\t\\ta = b;\\n\\t\\t\\t\\tb = tmp;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar list = edges[ a ];\\n\\n\\t\\t\\tif ( list === undefined ) {\\n\\n\\t\\t\\t\\tedges[ a ] = [ b ];\\n\\t\\t\\t\\treturn true;\\n\\n\\t\\t\\t} else if ( list.indexOf( b ) === -1 ) {\\n\\n\\t\\t\\t\\tlist.push( b );\\n\\t\\t\\t\\treturn true;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn false;\\n\\n\\t\\t}\\n\\n\\t\\tthis.getAttributeBuffer = getAttributeBuffer;\\n\\t\\tthis.getWireframeAttribute = getWireframeAttribute;\\n\\n\\t\\tthis.update = update;\\n\\n\\t};\\n\\n\\t// File:src/renderers/webgl/WebGLProgram.js\\n\\n\\tTHREE.WebGLProgram = ( function () {\\n\\n\\t\\tvar programIdCount = 0;\\n\\n\\t\\tfunction getEncodingComponents( encoding ) {\\n\\n\\t\\t\\tswitch ( encoding ) {\\n\\n\\t\\t\\t\\tcase THREE.LinearEncoding:\\n\\t\\t\\t\\t\\treturn [ 'Linear','( value )' ];\\n\\t\\t\\t\\tcase THREE.sRGBEncoding:\\n\\t\\t\\t\\t\\treturn [ 'sRGB','( value )' ];\\n\\t\\t\\t\\tcase THREE.RGBEEncoding:\\n\\t\\t\\t\\t\\treturn [ 'RGBE','( value )' ];\\n\\t\\t\\t\\tcase THREE.RGBM7Encoding:\\n\\t\\t\\t\\t\\treturn [ 'RGBM','( value, 7.0 )' ];\\n\\t\\t\\t\\tcase THREE.RGBM16Encoding:\\n\\t\\t\\t\\t\\treturn [ 'RGBM','( value, 16.0 )' ];\\n\\t\\t\\t\\tcase THREE.RGBDEncoding:\\n\\t\\t\\t\\t\\treturn [ 'RGBD','( value, 256.0 )' ];\\n\\t\\t\\t\\tcase THREE.GammaEncoding:\\n\\t\\t\\t\\t\\treturn [ 'Gamma','( value, float( GAMMA_FACTOR ) )' ];\\n\\t\\t\\t\\tdefault:\\n\\t\\t\\t\\t\\tthrow new Error( 'unsupported encoding: ' + encoding );\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tfunction getTexelDecodingFunction( functionName, encoding ) {\\n\\n\\t\\t\\tvar components = getEncodingComponents( encoding );\\n\\t\\t\\treturn \\\"vec4 \\\" + functionName + \\\"( vec4 value ) { return \\\" + components[ 0 ] + \\\"ToLinear\\\" + components[ 1 ] + \\\"; }\\\";\\n\\n\\t\\t}\\n\\n\\t\\tfunction getTexelEncodingFunction( functionName, encoding ) {\\n\\n\\t\\t\\tvar components = getEncodingComponents( encoding );\\n\\t\\t\\treturn \\\"vec4 \\\" + functionName + \\\"( vec4 value ) { return LinearTo\\\" + components[ 0 ] + components[ 1 ] + \\\"; }\\\";\\n\\n\\t\\t}\\n\\n\\t\\tfunction getToneMappingFunction( functionName, toneMapping ) {\\n\\n\\t\\t\\tvar toneMappingName;\\n\\n\\t\\t\\tswitch ( toneMapping ) {\\n\\n\\t\\t\\t\\tcase THREE.LinearToneMapping:\\n\\t\\t\\t\\t\\ttoneMappingName = \\\"Linear\\\";\\n\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\tcase THREE.ReinhardToneMapping:\\n\\t\\t\\t\\t\\ttoneMappingName = \\\"Reinhard\\\";\\n\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\tcase THREE.Uncharted2ToneMapping:\\n\\t\\t\\t\\t\\ttoneMappingName = \\\"Uncharted2\\\";\\n\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\tcase THREE.CineonToneMapping:\\n\\t\\t\\t\\t\\ttoneMappingName = \\\"OptimizedCineon\\\";\\n\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\tdefault:\\n\\t\\t\\t\\t\\tthrow new Error( 'unsupported toneMapping: ' + toneMapping );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn \\\"vec3 \\\" + functionName + \\\"( vec3 color ) { return \\\" + toneMappingName + \\\"ToneMapping( color ); }\\\";\\n\\n\\t\\t}\\n\\n\\t\\tfunction generateExtensions( extensions, parameters, rendererExtensions ) {\\n\\n\\t\\t\\textensions = extensions || {};\\n\\n\\t\\t\\tvar chunks = [\\n\\t\\t\\t\\t( extensions.derivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.normalMap || parameters.flatShading ) ? '#extension GL_OES_standard_derivatives : enable' : '',\\n\\t\\t\\t\\t( extensions.fragDepth || parameters.logarithmicDepthBuffer ) && rendererExtensions.get( 'EXT_frag_depth' ) ? '#extension GL_EXT_frag_depth : enable' : '',\\n\\t\\t\\t\\t( extensions.drawBuffers ) && rendererExtensions.get( 'WEBGL_draw_buffers' ) ? '#extension GL_EXT_draw_buffers : require' : '',\\n\\t\\t\\t\\t( extensions.shaderTextureLOD || parameters.envMap ) && rendererExtensions.get( 'EXT_shader_texture_lod' ) ? '#extension GL_EXT_shader_texture_lod : enable' : '',\\n\\t\\t\\t];\\n\\n\\t\\t\\treturn chunks.filter( filterEmptyLine ).join( '\\\\n' );\\n\\n\\t\\t}\\n\\n\\t\\tfunction generateDefines( defines ) {\\n\\n\\t\\t\\tvar chunks = [];\\n\\n\\t\\t\\tfor ( var name in defines ) {\\n\\n\\t\\t\\t\\tvar value = defines[ name ];\\n\\n\\t\\t\\t\\tif ( value === false ) continue;\\n\\n\\t\\t\\t\\tchunks.push( '#define ' + name + ' ' + value );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn chunks.join( '\\\\n' );\\n\\n\\t\\t}\\n\\n\\t\\tfunction fetchAttributeLocations( gl, program, identifiers ) {\\n\\n\\t\\t\\tvar attributes = {};\\n\\n\\t\\t\\tvar n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\\n\\n\\t\\t\\tfor ( var i = 0; i < n; i ++ ) {\\n\\n\\t\\t\\t\\tvar info = gl.getActiveAttrib( program, i );\\n\\t\\t\\t\\tvar name = info.name;\\n\\n\\t\\t\\t\\t// console.log(\\\"THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:\\\", name, i );\\n\\n\\t\\t\\t\\tattributes[ name ] = gl.getAttribLocation( program, name );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn attributes;\\n\\n\\t\\t}\\n\\n\\t\\tfunction filterEmptyLine( string ) {\\n\\n\\t\\t\\treturn string !== '';\\n\\n\\t\\t}\\n\\n\\t\\tfunction replaceLightNums( string, parameters ) {\\n\\n\\t\\t\\treturn string\\n\\t\\t\\t\\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\\n\\t\\t\\t\\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\\n\\t\\t\\t\\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\\n\\t\\t\\t\\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights );\\n\\n\\t\\t}\\n\\n\\t\\tfunction parseIncludes( string ) {\\n\\n\\t\\t\\tvar pattern = /#include +<([\\\\w\\\\d.]+)>/g;\\n\\n\\t\\t\\tfunction replace( match, include ) {\\n\\n\\t\\t\\t\\tvar replace = THREE.ShaderChunk[ include ];\\n\\n\\t\\t\\t\\tif ( replace === undefined ) {\\n\\n\\t\\t\\t\\t\\tthrow new Error( 'Can not resolve #include <' + include + '>' );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn parseIncludes( replace );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn string.replace( pattern, replace );\\n\\n\\t\\t}\\n\\n\\t\\tfunction unrollLoops( string ) {\\n\\n\\t\\t\\tvar pattern = /for \\\\( int i \\\\= (\\\\d+)\\\\; i < (\\\\d+)\\\\; i \\\\+\\\\+ \\\\) \\\\{([\\\\s\\\\S]+?)(?=\\\\})\\\\}/g;\\n\\n\\t\\t\\tfunction replace( match, start, end, snippet ) {\\n\\n\\t\\t\\t\\tvar unroll = '';\\n\\n\\t\\t\\t\\tfor ( var i = parseInt( start ); i < parseInt( end ); i ++ ) {\\n\\n\\t\\t\\t\\t\\tunroll += snippet.replace( /\\\\[ i \\\\]/g, '[ ' + i + ' ]' );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn unroll;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn string.replace( pattern, replace );\\n\\n\\t\\t}\\n\\n\\t\\treturn function WebGLProgram( renderer, code, material, parameters ) {\\n\\n\\t\\t\\tvar gl = renderer.context;\\n\\n\\t\\t\\tvar extensions = material.extensions;\\n\\t\\t\\tvar defines = material.defines;\\n\\n\\t\\t\\tvar vertexShader = material.__webglShader.vertexShader;\\n\\t\\t\\tvar fragmentShader = material.__webglShader.fragmentShader;\\n\\n\\t\\t\\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\\n\\n\\t\\t\\tif ( parameters.shadowMapType === THREE.PCFShadowMap ) {\\n\\n\\t\\t\\t\\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\\n\\n\\t\\t\\t} else if ( parameters.shadowMapType === THREE.PCFSoftShadowMap ) {\\n\\n\\t\\t\\t\\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\\n\\t\\t\\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\\n\\t\\t\\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\\n\\n\\t\\t\\tif ( parameters.envMap ) {\\n\\n\\t\\t\\t\\tswitch ( material.envMap.mapping ) {\\n\\n\\t\\t\\t\\t\\tcase THREE.CubeReflectionMapping:\\n\\t\\t\\t\\t\\tcase THREE.CubeRefractionMapping:\\n\\t\\t\\t\\t\\t\\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\tcase THREE.CubeUVReflectionMapping:\\n\\t\\t\\t\\t\\tcase THREE.CubeUVRefractionMapping:\\n\\t\\t\\t\\t\\t\\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\tcase THREE.EquirectangularReflectionMapping:\\n\\t\\t\\t\\t\\tcase THREE.EquirectangularRefractionMapping:\\n\\t\\t\\t\\t\\t\\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\tcase THREE.SphericalReflectionMapping:\\n\\t\\t\\t\\t\\t\\tenvMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tswitch ( material.envMap.mapping ) {\\n\\n\\t\\t\\t\\t\\tcase THREE.CubeRefractionMapping:\\n\\t\\t\\t\\t\\tcase THREE.EquirectangularRefractionMapping:\\n\\t\\t\\t\\t\\t\\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tswitch ( material.combine ) {\\n\\n\\t\\t\\t\\t\\tcase THREE.MultiplyOperation:\\n\\t\\t\\t\\t\\t\\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\tcase THREE.MixOperation:\\n\\t\\t\\t\\t\\t\\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\tcase THREE.AddOperation:\\n\\t\\t\\t\\t\\t\\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\\n\\n\\t\\t\\t// console.log( 'building new program ' );\\n\\n\\t\\t\\t//\\n\\n\\t\\t\\tvar customExtensions = generateExtensions( extensions, parameters, renderer.extensions );\\n\\n\\t\\t\\tvar customDefines = generateDefines( defines );\\n\\n\\t\\t\\t//\\n\\n\\t\\t\\tvar program = gl.createProgram();\\n\\n\\t\\t\\tvar prefixVertex, prefixFragment;\\n\\n\\t\\t\\tif ( material instanceof THREE.RawShaderMaterial ) {\\n\\n\\t\\t\\t\\tprefixVertex = [\\n\\n\\t\\t\\t\\t\\tcustomDefines\\n\\n\\t\\t\\t\\t].filter( filterEmptyLine ).join( '\\\\n' );\\n\\n\\t\\t\\t\\tprefixFragment = [\\n\\n\\t\\t\\t\\t\\tcustomDefines\\n\\n\\t\\t\\t\\t].filter( filterEmptyLine ).join( '\\\\n' );\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\tprefixVertex = [\\n\\n\\t\\t\\t\\t\\t'precision ' + parameters.precision + ' float;',\\n\\t\\t\\t\\t\\t'precision ' + parameters.precision + ' int;',\\n\\n\\t\\t\\t\\t\\t'#define SHADER_NAME ' + material.__webglShader.name,\\n\\n\\t\\t\\t\\t\\tcustomDefines,\\n\\n\\t\\t\\t\\t\\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\\n\\n\\t\\t\\t\\t\\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\\n\\n\\t\\t\\t\\t\\t'#define MAX_BONES ' + parameters.maxBones,\\n\\n\\t\\t\\t\\t\\tparameters.map ? '#define USE_MAP' : '',\\n\\t\\t\\t\\t\\tparameters.envMap ? '#define USE_ENVMAP' : '',\\n\\t\\t\\t\\t\\tparameters.envMap ? '#define ' + envMapModeDefine : '',\\n\\t\\t\\t\\t\\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\\n\\t\\t\\t\\t\\tparameters.aoMap ? '#define USE_AOMAP' : '',\\n\\t\\t\\t\\t\\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\\n\\t\\t\\t\\t\\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\\n\\t\\t\\t\\t\\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\\n\\t\\t\\t\\t\\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\\n\\t\\t\\t\\t\\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\\n\\t\\t\\t\\t\\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\\n\\t\\t\\t\\t\\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\\n\\t\\t\\t\\t\\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\\n\\t\\t\\t\\t\\tparameters.vertexColors ? '#define USE_COLOR' : '',\\n\\n\\t\\t\\t\\t\\tparameters.flatShading ? '#define FLAT_SHADED' : '',\\n\\n\\t\\t\\t\\t\\tparameters.skinning ? '#define USE_SKINNING' : '',\\n\\t\\t\\t\\t\\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\\n\\n\\t\\t\\t\\t\\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\\n\\t\\t\\t\\t\\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\\n\\t\\t\\t\\t\\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\\n\\t\\t\\t\\t\\tparameters.flipSided ? '#define FLIP_SIDED' : '',\\n\\n\\t\\t\\t\\t\\t'#define NUM_CLIPPING_PLANES ' + parameters.numClippingPlanes,\\n\\n\\t\\t\\t\\t\\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\\n\\t\\t\\t\\t\\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\\n\\n\\t\\t\\t\\t\\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\\n\\n\\t\\t\\t\\t\\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\\n\\t\\t\\t\\t\\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\\n\\n\\t\\t\\t\\t\\t'uniform mat4 modelMatrix;',\\n\\t\\t\\t\\t\\t'uniform mat4 modelViewMatrix;',\\n\\t\\t\\t\\t\\t'uniform mat4 projectionMatrix;',\\n\\t\\t\\t\\t\\t'uniform mat4 viewMatrix;',\\n\\t\\t\\t\\t\\t'uniform mat3 normalMatrix;',\\n\\t\\t\\t\\t\\t'uniform vec3 cameraPosition;',\\n\\n\\t\\t\\t\\t\\t'attribute vec3 position;',\\n\\t\\t\\t\\t\\t'attribute vec3 normal;',\\n\\t\\t\\t\\t\\t'attribute vec2 uv;',\\n\\n\\t\\t\\t\\t\\t'#ifdef USE_COLOR',\\n\\n\\t\\t\\t\\t\\t'\\tattribute vec3 color;',\\n\\n\\t\\t\\t\\t\\t'#endif',\\n\\n\\t\\t\\t\\t\\t'#ifdef USE_MORPHTARGETS',\\n\\n\\t\\t\\t\\t\\t'\\tattribute vec3 morphTarget0;',\\n\\t\\t\\t\\t\\t'\\tattribute vec3 morphTarget1;',\\n\\t\\t\\t\\t\\t'\\tattribute vec3 morphTarget2;',\\n\\t\\t\\t\\t\\t'\\tattribute vec3 morphTarget3;',\\n\\n\\t\\t\\t\\t\\t'\\t#ifdef USE_MORPHNORMALS',\\n\\n\\t\\t\\t\\t\\t'\\t\\tattribute vec3 morphNormal0;',\\n\\t\\t\\t\\t\\t'\\t\\tattribute vec3 morphNormal1;',\\n\\t\\t\\t\\t\\t'\\t\\tattribute vec3 morphNormal2;',\\n\\t\\t\\t\\t\\t'\\t\\tattribute vec3 morphNormal3;',\\n\\n\\t\\t\\t\\t\\t'\\t#else',\\n\\n\\t\\t\\t\\t\\t'\\t\\tattribute vec3 morphTarget4;',\\n\\t\\t\\t\\t\\t'\\t\\tattribute vec3 morphTarget5;',\\n\\t\\t\\t\\t\\t'\\t\\tattribute vec3 morphTarget6;',\\n\\t\\t\\t\\t\\t'\\t\\tattribute vec3 morphTarget7;',\\n\\n\\t\\t\\t\\t\\t'\\t#endif',\\n\\n\\t\\t\\t\\t\\t'#endif',\\n\\n\\t\\t\\t\\t\\t'#ifdef USE_SKINNING',\\n\\n\\t\\t\\t\\t\\t'\\tattribute vec4 skinIndex;',\\n\\t\\t\\t\\t\\t'\\tattribute vec4 skinWeight;',\\n\\n\\t\\t\\t\\t\\t'#endif',\\n\\n\\t\\t\\t\\t\\t'\\\\n'\\n\\n\\t\\t\\t\\t].filter( filterEmptyLine ).join( '\\\\n' );\\n\\n\\t\\t\\t\\tprefixFragment = [\\n\\n\\t\\t\\t\\t\\tcustomExtensions,\\n\\n\\t\\t\\t\\t\\t'precision ' + parameters.precision + ' float;',\\n\\t\\t\\t\\t\\t'precision ' + parameters.precision + ' int;',\\n\\n\\t\\t\\t\\t\\t'#define SHADER_NAME ' + material.__webglShader.name,\\n\\n\\t\\t\\t\\t\\tcustomDefines,\\n\\n\\t\\t\\t\\t\\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest : '',\\n\\n\\t\\t\\t\\t\\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\\n\\n\\t\\t\\t\\t\\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\\n\\t\\t\\t\\t\\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\\n\\n\\t\\t\\t\\t\\tparameters.map ? '#define USE_MAP' : '',\\n\\t\\t\\t\\t\\tparameters.envMap ? '#define USE_ENVMAP' : '',\\n\\t\\t\\t\\t\\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\\n\\t\\t\\t\\t\\tparameters.envMap ? '#define ' + envMapModeDefine : '',\\n\\t\\t\\t\\t\\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\\n\\t\\t\\t\\t\\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\\n\\t\\t\\t\\t\\tparameters.aoMap ? '#define USE_AOMAP' : '',\\n\\t\\t\\t\\t\\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\\n\\t\\t\\t\\t\\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\\n\\t\\t\\t\\t\\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\\n\\t\\t\\t\\t\\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\\n\\t\\t\\t\\t\\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\\n\\t\\t\\t\\t\\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\\n\\t\\t\\t\\t\\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\\n\\t\\t\\t\\t\\tparameters.vertexColors ? '#define USE_COLOR' : '',\\n\\n\\t\\t\\t\\t\\tparameters.flatShading ? '#define FLAT_SHADED' : '',\\n\\n\\t\\t\\t\\t\\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\\n\\t\\t\\t\\t\\tparameters.flipSided ? '#define FLIP_SIDED' : '',\\n\\n\\t\\t\\t\\t\\t'#define NUM_CLIPPING_PLANES ' + parameters.numClippingPlanes,\\n\\n\\t\\t\\t\\t\\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\\n\\t\\t\\t\\t\\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\\n\\n\\t\\t\\t\\t\\tparameters.premultipliedAlpha ? \\\"#define PREMULTIPLIED_ALPHA\\\" : '',\\n\\n\\t\\t\\t\\t\\tparameters.physicallyCorrectLights ? \\\"#define PHYSICALLY_CORRECT_LIGHTS\\\" : '',\\n\\n\\t\\t\\t\\t\\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\\n\\t\\t\\t\\t\\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\\n\\n\\t\\t\\t\\t\\tparameters.envMap && renderer.extensions.get( 'EXT_shader_texture_lod' ) ? '#define TEXTURE_LOD_EXT' : '',\\n\\n\\t\\t\\t\\t\\t'uniform mat4 viewMatrix;',\\n\\t\\t\\t\\t\\t'uniform vec3 cameraPosition;',\\n\\n\\t\\t\\t\\t\\t( parameters.toneMapping !== THREE.NoToneMapping ) ? \\\"#define TONE_MAPPING\\\" : '',\\n\\t\\t\\t\\t\\t( parameters.toneMapping !== THREE.NoToneMapping ) ? THREE.ShaderChunk[ 'tonemapping_pars_fragment' ] : '',  // this code is required here because it is used by the toneMapping() function defined below\\n\\t\\t\\t\\t\\t( parameters.toneMapping !== THREE.NoToneMapping ) ? getToneMappingFunction( \\\"toneMapping\\\", parameters.toneMapping ) : '',\\n\\n\\t\\t\\t\\t\\t( parameters.outputEncoding || parameters.mapEncoding || parameters.envMapEncoding || parameters.emissiveMapEncoding ) ? THREE.ShaderChunk[ 'encodings_pars_fragment' ] : '', // this code is required here because it is used by the various encoding/decoding function defined below\\n\\t\\t\\t\\t\\tparameters.mapEncoding ? getTexelDecodingFunction( 'mapTexelToLinear', parameters.mapEncoding ) : '',\\n\\t\\t\\t\\t\\tparameters.envMapEncoding ? getTexelDecodingFunction( 'envMapTexelToLinear', parameters.envMapEncoding ) : '',\\n\\t\\t\\t\\t\\tparameters.emissiveMapEncoding ? getTexelDecodingFunction( 'emissiveMapTexelToLinear', parameters.emissiveMapEncoding ) : '',\\n\\t\\t\\t\\t\\tparameters.outputEncoding ? getTexelEncodingFunction( \\\"linearToOutputTexel\\\", parameters.outputEncoding ) : '',\\n\\n\\t\\t\\t\\t\\tparameters.depthPacking ? \\\"#define DEPTH_PACKING \\\" + material.depthPacking : '',\\n\\n\\t\\t\\t\\t\\t'\\\\n'\\n\\n\\t\\t\\t\\t].filter( filterEmptyLine ).join( '\\\\n' );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvertexShader = parseIncludes( vertexShader, parameters );\\n\\t\\t\\tvertexShader = replaceLightNums( vertexShader, parameters );\\n\\n\\t\\t\\tfragmentShader = parseIncludes( fragmentShader, parameters );\\n\\t\\t\\tfragmentShader = replaceLightNums( fragmentShader, parameters );\\n\\n\\t\\t\\tif ( material instanceof THREE.ShaderMaterial === false ) {\\n\\n\\t\\t\\t\\tvertexShader = unrollLoops( vertexShader );\\n\\t\\t\\t\\tfragmentShader = unrollLoops( fragmentShader );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar vertexGlsl = prefixVertex + vertexShader;\\n\\t\\t\\tvar fragmentGlsl = prefixFragment + fragmentShader;\\n\\n\\t\\t\\t// console.log( '*VERTEX*', vertexGlsl );\\n\\t\\t\\t// console.log( '*FRAGMENT*', fragmentGlsl );\\n\\n\\t\\t\\tvar glVertexShader = THREE.WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\\n\\t\\t\\tvar glFragmentShader = THREE.WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\\n\\n\\t\\t\\tgl.attachShader( program, glVertexShader );\\n\\t\\t\\tgl.attachShader( program, glFragmentShader );\\n\\n\\t\\t\\t// Force a particular attribute to index 0.\\n\\n\\t\\t\\tif ( material.index0AttributeName !== undefined ) {\\n\\n\\t\\t\\t\\tgl.bindAttribLocation( program, 0, material.index0AttributeName );\\n\\n\\t\\t\\t} else if ( parameters.morphTargets === true ) {\\n\\n\\t\\t\\t\\t// programs with morphTargets displace position out of attribute 0\\n\\t\\t\\t\\tgl.bindAttribLocation( program, 0, 'position' );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tgl.linkProgram( program );\\n\\n\\t\\t\\tvar programLog = gl.getProgramInfoLog( program );\\n\\t\\t\\tvar vertexLog = gl.getShaderInfoLog( glVertexShader );\\n\\t\\t\\tvar fragmentLog = gl.getShaderInfoLog( glFragmentShader );\\n\\n\\t\\t\\tvar runnable = true;\\n\\t\\t\\tvar haveDiagnostics = true;\\n\\n\\t\\t\\t// console.log( '**VERTEX**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glVertexShader ) );\\n\\t\\t\\t// console.log( '**FRAGMENT**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glFragmentShader ) );\\n\\n\\t\\t\\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\\n\\n\\t\\t\\t\\trunnable = false;\\n\\n\\t\\t\\t\\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter( program, gl.VALIDATE_STATUS ), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog );\\n\\n\\t\\t\\t} else if ( programLog !== '' ) {\\n\\n\\t\\t\\t\\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\\n\\n\\t\\t\\t} else if ( vertexLog === '' || fragmentLog === '' ) {\\n\\n\\t\\t\\t\\thaveDiagnostics = false;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( haveDiagnostics ) {\\n\\n\\t\\t\\t\\tthis.diagnostics = {\\n\\n\\t\\t\\t\\t\\trunnable: runnable,\\n\\t\\t\\t\\t\\tmaterial: material,\\n\\n\\t\\t\\t\\t\\tprogramLog: programLog,\\n\\n\\t\\t\\t\\t\\tvertexShader: {\\n\\n\\t\\t\\t\\t\\t\\tlog: vertexLog,\\n\\t\\t\\t\\t\\t\\tprefix: prefixVertex\\n\\n\\t\\t\\t\\t\\t},\\n\\n\\t\\t\\t\\t\\tfragmentShader: {\\n\\n\\t\\t\\t\\t\\t\\tlog: fragmentLog,\\n\\t\\t\\t\\t\\t\\tprefix: prefixFragment\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t};\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t// clean up\\n\\n\\t\\t\\tgl.deleteShader( glVertexShader );\\n\\t\\t\\tgl.deleteShader( glFragmentShader );\\n\\n\\t\\t\\t// set up caching for uniform locations\\n\\n\\t\\t\\tvar cachedUniforms;\\n\\n\\t\\t\\tthis.getUniforms = function() {\\n\\n\\t\\t\\t\\tif ( cachedUniforms === undefined ) {\\n\\n\\t\\t\\t\\t\\tcachedUniforms =\\n\\t\\t\\t\\t\\t\\t\\tnew THREE.WebGLUniforms( gl, program, renderer );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn cachedUniforms;\\n\\n\\t\\t\\t};\\n\\n\\t\\t\\t// set up caching for attribute locations\\n\\n\\t\\t\\tvar cachedAttributes;\\n\\n\\t\\t\\tthis.getAttributes = function() {\\n\\n\\t\\t\\t\\tif ( cachedAttributes === undefined ) {\\n\\n\\t\\t\\t\\t\\tcachedAttributes = fetchAttributeLocations( gl, program );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn cachedAttributes;\\n\\n\\t\\t\\t};\\n\\n\\t\\t\\t// free resource\\n\\n\\t\\t\\tthis.destroy = function() {\\n\\n\\t\\t\\t\\tgl.deleteProgram( program );\\n\\t\\t\\t\\tthis.program = undefined;\\n\\n\\t\\t\\t};\\n\\n\\t\\t\\t// DEPRECATED\\n\\n\\t\\t\\tObject.defineProperties( this, {\\n\\n\\t\\t\\t\\tuniforms: {\\n\\t\\t\\t\\t\\tget: function() {\\n\\n\\t\\t\\t\\t\\t\\tconsole.warn( 'THREE.WebGLProgram: .uniforms is now .getUniforms().' );\\n\\t\\t\\t\\t\\t\\treturn this.getUniforms();\\n\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t},\\n\\n\\t\\t\\t\\tattributes: {\\n\\t\\t\\t\\t\\tget: function() {\\n\\n\\t\\t\\t\\t\\t\\tconsole.warn( 'THREE.WebGLProgram: .attributes is now .getAttributes().' );\\n\\t\\t\\t\\t\\t\\treturn this.getAttributes();\\n\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t} );\\n\\n\\n\\t\\t\\t//\\n\\n\\t\\t\\tthis.id = programIdCount ++;\\n\\t\\t\\tthis.code = code;\\n\\t\\t\\tthis.usedTimes = 1;\\n\\t\\t\\tthis.program = program;\\n\\t\\t\\tthis.vertexShader = glVertexShader;\\n\\t\\t\\tthis.fragmentShader = glFragmentShader;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t};\\n\\n\\t} )();\\n\\n\\t// File:src/renderers/webgl/WebGLPrograms.js\\n\\n\\tTHREE.WebGLPrograms = function ( renderer, capabilities ) {\\n\\n\\t\\tvar programs = [];\\n\\n\\t\\tvar shaderIDs = {\\n\\t\\t\\tMeshDepthMaterial: 'depth',\\n\\t\\t\\tMeshNormalMaterial: 'normal',\\n\\t\\t\\tMeshBasicMaterial: 'basic',\\n\\t\\t\\tMeshLambertMaterial: 'lambert',\\n\\t\\t\\tMeshPhongMaterial: 'phong',\\n\\t\\t\\tMeshStandardMaterial: 'physical',\\n\\t\\t\\tMeshPhysicalMaterial: 'physical',\\n\\t\\t\\tLineBasicMaterial: 'basic',\\n\\t\\t\\tLineDashedMaterial: 'dashed',\\n\\t\\t\\tPointsMaterial: 'points'\\n\\t\\t};\\n\\n\\t\\tvar parameterNames = [\\n\\t\\t\\t\\\"precision\\\", \\\"supportsVertexTextures\\\", \\\"map\\\", \\\"mapEncoding\\\", \\\"envMap\\\", \\\"envMapMode\\\", \\\"envMapEncoding\\\",\\n\\t\\t\\t\\\"lightMap\\\", \\\"aoMap\\\", \\\"emissiveMap\\\", \\\"emissiveMapEncoding\\\", \\\"bumpMap\\\", \\\"normalMap\\\", \\\"displacementMap\\\", \\\"specularMap\\\",\\n\\t\\t\\t\\\"roughnessMap\\\", \\\"metalnessMap\\\",\\n\\t\\t\\t\\\"alphaMap\\\", \\\"combine\\\", \\\"vertexColors\\\", \\\"fog\\\", \\\"useFog\\\", \\\"fogExp\\\",\\n\\t\\t\\t\\\"flatShading\\\", \\\"sizeAttenuation\\\", \\\"logarithmicDepthBuffer\\\", \\\"skinning\\\",\\n\\t\\t\\t\\\"maxBones\\\", \\\"useVertexTexture\\\", \\\"morphTargets\\\", \\\"morphNormals\\\",\\n\\t\\t\\t\\\"maxMorphTargets\\\", \\\"maxMorphNormals\\\", \\\"premultipliedAlpha\\\",\\n\\t\\t\\t\\\"numDirLights\\\", \\\"numPointLights\\\", \\\"numSpotLights\\\", \\\"numHemiLights\\\",\\n\\t\\t\\t\\\"shadowMapEnabled\\\", \\\"shadowMapType\\\", \\\"toneMapping\\\", 'physicallyCorrectLights',\\n\\t\\t\\t\\\"alphaTest\\\", \\\"doubleSided\\\", \\\"flipSided\\\", \\\"numClippingPlanes\\\", \\\"depthPacking\\\"\\n\\t\\t];\\n\\n\\n\\t\\tfunction allocateBones ( object ) {\\n\\n\\t\\t\\tif ( capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture ) {\\n\\n\\t\\t\\t\\treturn 1024;\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t// default for when object is not specified\\n\\t\\t\\t\\t// ( for example when prebuilding shader to be used with multiple objects )\\n\\t\\t\\t\\t//\\n\\t\\t\\t\\t//  - leave some extra space for other uniforms\\n\\t\\t\\t\\t//  - limit here is ANGLE's 254 max uniform vectors\\n\\t\\t\\t\\t//    (up to 54 should be safe)\\n\\n\\t\\t\\t\\tvar nVertexUniforms = capabilities.maxVertexUniforms;\\n\\t\\t\\t\\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\\n\\n\\t\\t\\t\\tvar maxBones = nVertexMatrices;\\n\\n\\t\\t\\t\\tif ( object !== undefined && object instanceof THREE.SkinnedMesh ) {\\n\\n\\t\\t\\t\\t\\tmaxBones = Math.min( object.skeleton.bones.length, maxBones );\\n\\n\\t\\t\\t\\t\\tif ( maxBones < object.skeleton.bones.length ) {\\n\\n\\t\\t\\t\\t\\t\\tconsole.warn( 'WebGLRenderer: too many bones - ' + object.skeleton.bones.length + ', this GPU supports just ' + maxBones + ' (try OpenGL instead of ANGLE)' );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn maxBones;\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tfunction getTextureEncodingFromMap( map, gammaOverrideLinear ) {\\n\\n\\t\\t\\tvar encoding;\\n\\n\\t\\t\\tif ( ! map ) {\\n\\n\\t\\t\\t\\tencoding = THREE.LinearEncoding;\\n\\n\\t\\t\\t} else if ( map instanceof THREE.Texture ) {\\n\\n\\t\\t\\t\\tencoding = map.encoding;\\n\\n\\t\\t\\t} else if ( map instanceof THREE.WebGLRenderTarget ) {\\n\\n\\t\\t\\t\\tconsole.warn( \\\"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\\\" );\\n\\t\\t\\t\\tencoding = map.texture.encoding;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t// add backwards compatibility for WebGLRenderer.gammaInput/gammaOutput parameter, should probably be removed at some point.\\n\\t\\t\\tif ( encoding === THREE.LinearEncoding && gammaOverrideLinear ) {\\n\\n\\t\\t\\t\\tencoding = THREE.GammaEncoding;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn encoding;\\n\\n\\t\\t}\\n\\n\\t\\tthis.getParameters = function ( material, lights, fog, nClipPlanes, object ) {\\n\\n\\t\\t\\tvar shaderID = shaderIDs[ material.type ];\\n\\n\\t\\t\\t// heuristics to create shader parameters according to lights in the scene\\n\\t\\t\\t// (not to blow over maxLights budget)\\n\\n\\t\\t\\tvar maxBones = allocateBones( object );\\n\\t\\t\\tvar precision = renderer.getPrecision();\\n\\n\\t\\t\\tif ( material.precision !== null ) {\\n\\n\\t\\t\\t\\tprecision = capabilities.getMaxPrecision( material.precision );\\n\\n\\t\\t\\t\\tif ( precision !== material.precision ) {\\n\\n\\t\\t\\t\\t\\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar currentRenderTarget = renderer.getCurrentRenderTarget();\\n\\n\\t\\t\\tvar parameters = {\\n\\n\\t\\t\\t\\tshaderID: shaderID,\\n\\n\\t\\t\\t\\tprecision: precision,\\n\\t\\t\\t\\tsupportsVertexTextures: capabilities.vertexTextures,\\n\\t\\t\\t\\toutputEncoding: getTextureEncodingFromMap( ( ! currentRenderTarget ) ? null : currentRenderTarget.texture, renderer.gammaOutput ),\\n\\t\\t\\t\\tmap: !! material.map,\\n\\t\\t\\t\\tmapEncoding: getTextureEncodingFromMap( material.map, renderer.gammaInput ),\\n\\t\\t\\t\\tenvMap: !! material.envMap,\\n\\t\\t\\t\\tenvMapMode: material.envMap && material.envMap.mapping,\\n\\t\\t\\t\\tenvMapEncoding: getTextureEncodingFromMap( material.envMap, renderer.gammaInput ),\\n\\t\\t\\t\\tenvMapCubeUV: ( !! material.envMap ) && ( ( material.envMap.mapping === THREE.CubeUVReflectionMapping ) || ( material.envMap.mapping === THREE.CubeUVRefractionMapping ) ),\\n\\t\\t\\t\\tlightMap: !! material.lightMap,\\n\\t\\t\\t\\taoMap: !! material.aoMap,\\n\\t\\t\\t\\temissiveMap: !! material.emissiveMap,\\n\\t\\t\\t\\temissiveMapEncoding: getTextureEncodingFromMap( material.emissiveMap, renderer.gammaInput ),\\n\\t\\t\\t\\tbumpMap: !! material.bumpMap,\\n\\t\\t\\t\\tnormalMap: !! material.normalMap,\\n\\t\\t\\t\\tdisplacementMap: !! material.displacementMap,\\n\\t\\t\\t\\troughnessMap: !! material.roughnessMap,\\n\\t\\t\\t\\tmetalnessMap: !! material.metalnessMap,\\n\\t\\t\\t\\tspecularMap: !! material.specularMap,\\n\\t\\t\\t\\talphaMap: !! material.alphaMap,\\n\\n\\t\\t\\t\\tcombine: material.combine,\\n\\n\\t\\t\\t\\tvertexColors: material.vertexColors,\\n\\n\\t\\t\\t\\tfog: !! fog,\\n\\t\\t\\t\\tuseFog: material.fog,\\n\\t\\t\\t\\tfogExp: fog instanceof THREE.FogExp2,\\n\\n\\t\\t\\t\\tflatShading: material.shading === THREE.FlatShading,\\n\\n\\t\\t\\t\\tsizeAttenuation: material.sizeAttenuation,\\n\\t\\t\\t\\tlogarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\\n\\n\\t\\t\\t\\tskinning: material.skinning,\\n\\t\\t\\t\\tmaxBones: maxBones,\\n\\t\\t\\t\\tuseVertexTexture: capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture,\\n\\n\\t\\t\\t\\tmorphTargets: material.morphTargets,\\n\\t\\t\\t\\tmorphNormals: material.morphNormals,\\n\\t\\t\\t\\tmaxMorphTargets: renderer.maxMorphTargets,\\n\\t\\t\\t\\tmaxMorphNormals: renderer.maxMorphNormals,\\n\\n\\t\\t\\t\\tnumDirLights: lights.directional.length,\\n\\t\\t\\t\\tnumPointLights: lights.point.length,\\n\\t\\t\\t\\tnumSpotLights: lights.spot.length,\\n\\t\\t\\t\\tnumHemiLights: lights.hemi.length,\\n\\n\\t\\t\\t\\tnumClippingPlanes: nClipPlanes,\\n\\n\\t\\t\\t\\tshadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && lights.shadows.length > 0,\\n\\t\\t\\t\\tshadowMapType: renderer.shadowMap.type,\\n\\n\\t\\t\\t\\ttoneMapping: renderer.toneMapping,\\n\\t\\t\\t\\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\\n\\n\\t\\t\\t\\tpremultipliedAlpha: material.premultipliedAlpha,\\n\\n\\t\\t\\t\\talphaTest: material.alphaTest,\\n\\t\\t\\t\\tdoubleSided: material.side === THREE.DoubleSide,\\n\\t\\t\\t\\tflipSided: material.side === THREE.BackSide,\\n\\n\\t\\t\\t\\tdepthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false\\n\\n\\t\\t\\t};\\n\\n\\t\\t\\treturn parameters;\\n\\n\\t\\t};\\n\\n\\t\\tthis.getProgramCode = function ( material, parameters ) {\\n\\n\\t\\t\\tvar array = [];\\n\\n\\t\\t\\tif ( parameters.shaderID ) {\\n\\n\\t\\t\\t\\tarray.push( parameters.shaderID );\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\tarray.push( material.fragmentShader );\\n\\t\\t\\t\\tarray.push( material.vertexShader );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( material.defines !== undefined ) {\\n\\n\\t\\t\\t\\tfor ( var name in material.defines ) {\\n\\n\\t\\t\\t\\t\\tarray.push( name );\\n\\t\\t\\t\\t\\tarray.push( material.defines[ name ] );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tfor ( var i = 0; i < parameterNames.length; i ++ ) {\\n\\n\\t\\t\\t\\tarray.push( parameters[ parameterNames[ i ] ] );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn array.join();\\n\\n\\t\\t};\\n\\n\\t\\tthis.acquireProgram = function ( material, parameters, code ) {\\n\\n\\t\\t\\tvar program;\\n\\n\\t\\t\\t// Check if code has been already compiled\\n\\t\\t\\tfor ( var p = 0, pl = programs.length; p < pl; p ++ ) {\\n\\n\\t\\t\\t\\tvar programInfo = programs[ p ];\\n\\n\\t\\t\\t\\tif ( programInfo.code === code ) {\\n\\n\\t\\t\\t\\t\\tprogram = programInfo;\\n\\t\\t\\t\\t\\t++ program.usedTimes;\\n\\n\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( program === undefined ) {\\n\\n\\t\\t\\t\\tprogram = new THREE.WebGLProgram( renderer, code, material, parameters );\\n\\t\\t\\t\\tprograms.push( program );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn program;\\n\\n\\t\\t};\\n\\n\\t\\tthis.releaseProgram = function( program ) {\\n\\n\\t\\t\\tif ( -- program.usedTimes === 0 ) {\\n\\n\\t\\t\\t\\t// Remove from unordered set\\n\\t\\t\\t\\tvar i = programs.indexOf( program );\\n\\t\\t\\t\\tprograms[ i ] = programs[ programs.length - 1 ];\\n\\t\\t\\t\\tprograms.pop();\\n\\n\\t\\t\\t\\t// Free WebGL resources\\n\\t\\t\\t\\tprogram.destroy();\\n\\n\\t\\t\\t}\\n\\n\\t\\t};\\n\\n\\t\\t// Exposed for resource monitoring & error feedback via renderer.info:\\n\\t\\tthis.programs = programs;\\n\\n\\t};\\n\\n\\t// File:src/renderers/webgl/WebGLProperties.js\\n\\n\\t/**\\n\\t* @author fordacious / fordacious.github.io\\n\\t*/\\n\\n\\tTHREE.WebGLProperties = function () {\\n\\n\\t\\tvar properties = {};\\n\\n\\t\\tthis.get = function ( object ) {\\n\\n\\t\\t\\tvar uuid = object.uuid;\\n\\t\\t\\tvar map = properties[ uuid ];\\n\\n\\t\\t\\tif ( map === undefined ) {\\n\\n\\t\\t\\t\\tmap = {};\\n\\t\\t\\t\\tproperties[ uuid ] = map;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn map;\\n\\n\\t\\t};\\n\\n\\t\\tthis.delete = function ( object ) {\\n\\n\\t\\t\\tdelete properties[ object.uuid ];\\n\\n\\t\\t};\\n\\n\\t\\tthis.clear = function () {\\n\\n\\t\\t\\tproperties = {};\\n\\n\\t\\t};\\n\\n\\t};\\n\\n\\t// File:src/renderers/webgl/WebGLShader.js\\n\\n\\tTHREE.WebGLShader = ( function () {\\n\\n\\t\\tfunction addLineNumbers( string ) {\\n\\n\\t\\t\\tvar lines = string.split( '\\\\n' );\\n\\n\\t\\t\\tfor ( var i = 0; i < lines.length; i ++ ) {\\n\\n\\t\\t\\t\\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn lines.join( '\\\\n' );\\n\\n\\t\\t}\\n\\n\\t\\treturn function WebGLShader( gl, type, string ) {\\n\\n\\t\\t\\tvar shader = gl.createShader( type );\\n\\n\\t\\t\\tgl.shaderSource( shader, string );\\n\\t\\t\\tgl.compileShader( shader );\\n\\n\\t\\t\\tif ( gl.getShaderParameter( shader, gl.COMPILE_STATUS ) === false ) {\\n\\n\\t\\t\\t\\tconsole.error( 'THREE.WebGLShader: Shader couldn\\\\'t compile.' );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( gl.getShaderInfoLog( shader ) !== '' ) {\\n\\n\\t\\t\\t\\tconsole.warn( 'THREE.WebGLShader: gl.getShaderInfoLog()', type === gl.VERTEX_SHADER ? 'vertex' : 'fragment', gl.getShaderInfoLog( shader ), addLineNumbers( string ) );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t// --enable-privileged-webgl-extension\\n\\t\\t\\t// console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\\n\\n\\t\\t\\treturn shader;\\n\\n\\t\\t};\\n\\n\\t} )();\\n\\n\\t// File:src/renderers/webgl/WebGLShadowMap.js\\n\\n\\t/**\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t */\\n\\n\\tTHREE.WebGLShadowMap = function ( _renderer, _lights, _objects, capabilities ) {\\n\\n\\t\\tvar _gl = _renderer.context,\\n\\t\\t_state = _renderer.state,\\n\\t\\t_frustum = new THREE.Frustum(),\\n\\t\\t_projScreenMatrix = new THREE.Matrix4(),\\n\\n\\t\\t_lightShadows = _lights.shadows,\\n\\n\\t\\t_shadowMapSize = new THREE.Vector2(),\\n\\t\\t_maxShadowMapSize = new THREE.Vector2( capabilities.maxTextureSize, capabilities.maxTextureSize ),\\n\\n\\t\\t_lookTarget = new THREE.Vector3(),\\n\\t\\t_lightPositionWorld = new THREE.Vector3(),\\n\\n\\t\\t_renderList = [],\\n\\n\\t\\t_MorphingFlag = 1,\\n\\t\\t_SkinningFlag = 2,\\n\\n\\t\\t_NumberOfMaterialVariants = ( _MorphingFlag | _SkinningFlag ) + 1,\\n\\n\\t\\t_depthMaterials = new Array( _NumberOfMaterialVariants ),\\n\\t\\t_distanceMaterials = new Array( _NumberOfMaterialVariants ),\\n\\n\\t\\t_materialCache = {};\\n\\n\\t\\tvar cubeDirections = [\\n\\t\\t\\tnew THREE.Vector3( 1, 0, 0 ), new THREE.Vector3( - 1, 0, 0 ), new THREE.Vector3( 0, 0, 1 ),\\n\\t\\t\\tnew THREE.Vector3( 0, 0, - 1 ), new THREE.Vector3( 0, 1, 0 ), new THREE.Vector3( 0, - 1, 0 )\\n\\t\\t];\\n\\n\\t\\tvar cubeUps = [\\n\\t\\t\\tnew THREE.Vector3( 0, 1, 0 ), new THREE.Vector3( 0, 1, 0 ), new THREE.Vector3( 0, 1, 0 ),\\n\\t\\t\\tnew THREE.Vector3( 0, 1, 0 ), new THREE.Vector3( 0, 0, 1 ),\\tnew THREE.Vector3( 0, 0, - 1 )\\n\\t\\t];\\n\\n\\t\\tvar cube2DViewPorts = [\\n\\t\\t\\tnew THREE.Vector4(), new THREE.Vector4(), new THREE.Vector4(),\\n\\t\\t\\tnew THREE.Vector4(), new THREE.Vector4(), new THREE.Vector4()\\n\\t\\t];\\n\\n\\t\\t// init\\n\\n\\t\\tvar depthMaterialTemplate = new THREE.MeshDepthMaterial();\\n\\t\\tdepthMaterialTemplate.depthPacking = THREE.RGBADepthPacking;\\n\\t\\tdepthMaterialTemplate.clipping = true;\\n\\n\\t\\tvar distanceShader = THREE.ShaderLib[ \\\"distanceRGBA\\\" ];\\n\\t\\tvar distanceUniforms = THREE.UniformsUtils.clone( distanceShader.uniforms );\\n\\n\\t\\tfor ( var i = 0; i !== _NumberOfMaterialVariants; ++ i ) {\\n\\n\\t\\t\\tvar useMorphing = ( i & _MorphingFlag ) !== 0;\\n\\t\\t\\tvar useSkinning = ( i & _SkinningFlag ) !== 0;\\n\\n\\t\\t\\tvar depthMaterial = depthMaterialTemplate.clone();\\n\\t\\t\\tdepthMaterial.morphTargets = useMorphing;\\n\\t\\t\\tdepthMaterial.skinning = useSkinning;\\n\\n\\t\\t\\t_depthMaterials[ i ] = depthMaterial;\\n\\n\\t\\t\\tvar distanceMaterial = new THREE.ShaderMaterial( {\\n\\t\\t\\t\\tdefines: {\\n\\t\\t\\t\\t\\t'USE_SHADOWMAP': ''\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\tuniforms: distanceUniforms,\\n\\t\\t\\t\\tvertexShader: distanceShader.vertexShader,\\n\\t\\t\\t\\tfragmentShader: distanceShader.fragmentShader,\\n\\t\\t\\t\\tmorphTargets: useMorphing,\\n\\t\\t\\t\\tskinning: useSkinning,\\n\\t\\t\\t\\tclipping: true\\n\\t\\t\\t} );\\n\\n\\t\\t\\t_distanceMaterials[ i ] = distanceMaterial;\\n\\n\\t\\t}\\n\\n\\t\\t//\\n\\n\\t\\tvar scope = this;\\n\\n\\t\\tthis.enabled = false;\\n\\n\\t\\tthis.autoUpdate = true;\\n\\t\\tthis.needsUpdate = false;\\n\\n\\t\\tthis.type = THREE.PCFShadowMap;\\n\\n\\t\\tthis.renderReverseSided = true;\\n\\t\\tthis.renderSingleSided = true;\\n\\n\\t\\tthis.render = function ( scene, camera ) {\\n\\n\\t\\t\\tif ( scope.enabled === false ) return;\\n\\t\\t\\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\\n\\n\\t\\t\\tif ( _lightShadows.length === 0 ) return;\\n\\n\\t\\t\\t// Set GL state for depth map.\\n\\t\\t\\t_state.clearColor( 1, 1, 1, 1 );\\n\\t\\t\\t_state.disable( _gl.BLEND );\\n\\t\\t\\t_state.setDepthTest( true );\\n\\t\\t\\t_state.setScissorTest( false );\\n\\n\\t\\t\\t// render depth map\\n\\n\\t\\t\\tvar faceCount, isPointLight;\\n\\n\\t\\t\\tfor ( var i = 0, il = _lightShadows.length; i < il; i ++ ) {\\n\\n\\t\\t\\t\\tvar light = _lightShadows[ i ];\\n\\t\\t\\t\\tvar shadow = light.shadow;\\n\\n\\t\\t\\t\\tif ( shadow === undefined ) {\\n\\n\\t\\t\\t\\t\\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\\n\\t\\t\\t\\t\\tcontinue;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tvar shadowCamera = shadow.camera;\\n\\n\\t\\t\\t\\t_shadowMapSize.copy( shadow.mapSize );\\n\\t\\t\\t\\t_shadowMapSize.min( _maxShadowMapSize );\\n\\n\\t\\t\\t\\tif ( light instanceof THREE.PointLight ) {\\n\\n\\t\\t\\t\\t\\tfaceCount = 6;\\n\\t\\t\\t\\t\\tisPointLight = true;\\n\\n\\t\\t\\t\\t\\tvar vpWidth = _shadowMapSize.x;\\n\\t\\t\\t\\t\\tvar vpHeight = _shadowMapSize.y;\\n\\n\\t\\t\\t\\t\\t// These viewports map a cube-map onto a 2D texture with the\\n\\t\\t\\t\\t\\t// following orientation:\\n\\t\\t\\t\\t\\t//\\n\\t\\t\\t\\t\\t//  xzXZ\\n\\t\\t\\t\\t\\t//   y Y\\n\\t\\t\\t\\t\\t//\\n\\t\\t\\t\\t\\t// X - Positive x direction\\n\\t\\t\\t\\t\\t// x - Negative x direction\\n\\t\\t\\t\\t\\t// Y - Positive y direction\\n\\t\\t\\t\\t\\t// y - Negative y direction\\n\\t\\t\\t\\t\\t// Z - Positive z direction\\n\\t\\t\\t\\t\\t// z - Negative z direction\\n\\n\\t\\t\\t\\t\\t// positive X\\n\\t\\t\\t\\t\\tcube2DViewPorts[ 0 ].set( vpWidth * 2, vpHeight, vpWidth, vpHeight );\\n\\t\\t\\t\\t\\t// negative X\\n\\t\\t\\t\\t\\tcube2DViewPorts[ 1 ].set( 0, vpHeight, vpWidth, vpHeight );\\n\\t\\t\\t\\t\\t// positive Z\\n\\t\\t\\t\\t\\tcube2DViewPorts[ 2 ].set( vpWidth * 3, vpHeight, vpWidth, vpHeight );\\n\\t\\t\\t\\t\\t// negative Z\\n\\t\\t\\t\\t\\tcube2DViewPorts[ 3 ].set( vpWidth, vpHeight, vpWidth, vpHeight );\\n\\t\\t\\t\\t\\t// positive Y\\n\\t\\t\\t\\t\\tcube2DViewPorts[ 4 ].set( vpWidth * 3, 0, vpWidth, vpHeight );\\n\\t\\t\\t\\t\\t// negative Y\\n\\t\\t\\t\\t\\tcube2DViewPorts[ 5 ].set( vpWidth, 0, vpWidth, vpHeight );\\n\\n\\t\\t\\t\\t\\t_shadowMapSize.x *= 4.0;\\n\\t\\t\\t\\t\\t_shadowMapSize.y *= 2.0;\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\tfaceCount = 1;\\n\\t\\t\\t\\t\\tisPointLight = false;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( shadow.map === null ) {\\n\\n\\t\\t\\t\\t\\tvar pars = { minFilter: THREE.NearestFilter, magFilter: THREE.NearestFilter, format: THREE.RGBAFormat };\\n\\n\\t\\t\\t\\t\\tshadow.map = new THREE.WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\\n\\n\\t\\t\\t\\t\\tshadowCamera.updateProjectionMatrix();\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( shadow instanceof THREE.SpotLightShadow ) {\\n\\n\\t\\t\\t\\t\\tshadow.update( light );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tvar shadowMap = shadow.map;\\n\\t\\t\\t\\tvar shadowMatrix = shadow.matrix;\\n\\n\\t\\t\\t\\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\\n\\t\\t\\t\\tshadowCamera.position.copy( _lightPositionWorld );\\n\\n\\t\\t\\t\\t_renderer.setRenderTarget( shadowMap );\\n\\t\\t\\t\\t_renderer.clear();\\n\\n\\t\\t\\t\\t// render shadow map for each cube face (if omni-directional) or\\n\\t\\t\\t\\t// run a single pass if not\\n\\n\\t\\t\\t\\tfor ( var face = 0; face < faceCount; face ++ ) {\\n\\n\\t\\t\\t\\t\\tif ( isPointLight ) {\\n\\n\\t\\t\\t\\t\\t\\t_lookTarget.copy( shadowCamera.position );\\n\\t\\t\\t\\t\\t\\t_lookTarget.add( cubeDirections[ face ] );\\n\\t\\t\\t\\t\\t\\tshadowCamera.up.copy( cubeUps[ face ] );\\n\\t\\t\\t\\t\\t\\tshadowCamera.lookAt( _lookTarget );\\n\\n\\t\\t\\t\\t\\t\\tvar vpDimensions = cube2DViewPorts[ face ];\\n\\t\\t\\t\\t\\t\\t_state.viewport( vpDimensions );\\n\\n\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\t_lookTarget.setFromMatrixPosition( light.target.matrixWorld );\\n\\t\\t\\t\\t\\t\\tshadowCamera.lookAt( _lookTarget );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tshadowCamera.updateMatrixWorld();\\n\\t\\t\\t\\t\\tshadowCamera.matrixWorldInverse.getInverse( shadowCamera.matrixWorld );\\n\\n\\t\\t\\t\\t\\t// compute shadow matrix\\n\\n\\t\\t\\t\\t\\tshadowMatrix.set(\\n\\t\\t\\t\\t\\t\\t0.5, 0.0, 0.0, 0.5,\\n\\t\\t\\t\\t\\t\\t0.0, 0.5, 0.0, 0.5,\\n\\t\\t\\t\\t\\t\\t0.0, 0.0, 0.5, 0.5,\\n\\t\\t\\t\\t\\t\\t0.0, 0.0, 0.0, 1.0\\n\\t\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\t\\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\\n\\t\\t\\t\\t\\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\\n\\n\\t\\t\\t\\t\\t// update camera matrices and frustum\\n\\n\\t\\t\\t\\t\\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\\n\\t\\t\\t\\t\\t_frustum.setFromMatrix( _projScreenMatrix );\\n\\n\\t\\t\\t\\t\\t// set object matrices & frustum culling\\n\\n\\t\\t\\t\\t\\t_renderList.length = 0;\\n\\n\\t\\t\\t\\t\\tprojectObject( scene, camera, shadowCamera );\\n\\n\\t\\t\\t\\t\\t// render shadow map\\n\\t\\t\\t\\t\\t// render regular objects\\n\\n\\t\\t\\t\\t\\tfor ( var j = 0, jl = _renderList.length; j < jl; j ++ ) {\\n\\n\\t\\t\\t\\t\\t\\tvar object = _renderList[ j ];\\n\\t\\t\\t\\t\\t\\tvar geometry = _objects.update( object );\\n\\t\\t\\t\\t\\t\\tvar material = object.material;\\n\\n\\t\\t\\t\\t\\t\\tif ( material instanceof THREE.MultiMaterial ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tvar groups = geometry.groups;\\n\\t\\t\\t\\t\\t\\t\\tvar materials = material.materials;\\n\\n\\t\\t\\t\\t\\t\\t\\tfor ( var k = 0, kl = groups.length; k < kl; k ++ ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tvar group = groups[ k ];\\n\\t\\t\\t\\t\\t\\t\\t\\tvar groupMaterial = materials[ group.materialIndex ];\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tif ( groupMaterial.visible === true ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tvar depthMaterial = getDepthMaterial( object, groupMaterial, isPointLight, _lightPositionWorld );\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\t\\tvar depthMaterial = getDepthMaterial( object, material, isPointLight, _lightPositionWorld );\\n\\t\\t\\t\\t\\t\\t\\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Restore GL state.\\n\\t\\t\\tvar clearColor = _renderer.getClearColor(),\\n\\t\\t\\tclearAlpha = _renderer.getClearAlpha();\\n\\t\\t\\t_renderer.setClearColor( clearColor, clearAlpha );\\n\\n\\t\\t\\tscope.needsUpdate = false;\\n\\n\\t\\t};\\n\\n\\t\\tfunction getDepthMaterial( object, material, isPointLight, lightPositionWorld ) {\\n\\n\\t\\t\\tvar geometry = object.geometry;\\n\\n\\t\\t\\tvar result = null;\\n\\n\\t\\t\\tvar materialVariants = _depthMaterials;\\n\\t\\t\\tvar customMaterial = object.customDepthMaterial;\\n\\n\\t\\t\\tif ( isPointLight ) {\\n\\n\\t\\t\\t\\tmaterialVariants = _distanceMaterials;\\n\\t\\t\\t\\tcustomMaterial = object.customDistanceMaterial;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( ! customMaterial ) {\\n\\n\\t\\t\\t\\tvar useMorphing = false;\\n\\n\\t\\t\\t\\tif ( material.morphTargets ) {\\n\\n\\t\\t\\t\\t\\tif ( geometry instanceof THREE.BufferGeometry ) {\\n\\n\\t\\t\\t\\t\\t\\tuseMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;\\n\\n\\t\\t\\t\\t\\t} else if ( geometry instanceof THREE.Geometry ) {\\n\\n\\t\\t\\t\\t\\t\\tuseMorphing = geometry.morphTargets && geometry.morphTargets.length > 0;\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tvar useSkinning = object instanceof THREE.SkinnedMesh && material.skinning;\\n\\n\\t\\t\\t\\tvar variantIndex = 0;\\n\\n\\t\\t\\t\\tif ( useMorphing ) variantIndex |= _MorphingFlag;\\n\\t\\t\\t\\tif ( useSkinning ) variantIndex |= _SkinningFlag;\\n\\n\\t\\t\\t\\tresult = materialVariants[ variantIndex ];\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\tresult = customMaterial;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( _renderer.localClippingEnabled &&\\n\\t\\t\\t\\t material.clipShadows === true &&\\n\\t\\t\\t\\t\\tmaterial.clippingPlanes.length !== 0 ) {\\n\\n\\t\\t\\t\\t// in this case we need a unique material instance reflecting the\\n\\t\\t\\t\\t// appropriate state\\n\\n\\t\\t\\t\\tvar keyA = result.uuid, keyB = material.uuid;\\n\\n\\t\\t\\t\\tvar materialsForVariant = _materialCache[ keyA ];\\n\\n\\t\\t\\t\\tif ( materialsForVariant === undefined ) {\\n\\n\\t\\t\\t\\t\\tmaterialsForVariant = {};\\n\\t\\t\\t\\t\\t_materialCache[ keyA ] = materialsForVariant;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tvar cachedMaterial = materialsForVariant[ keyB ];\\n\\n\\t\\t\\t\\tif ( cachedMaterial === undefined ) {\\n\\n\\t\\t\\t\\t\\tcachedMaterial = result.clone();\\n\\t\\t\\t\\t\\tmaterialsForVariant[ keyB ] = cachedMaterial;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tresult = cachedMaterial;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tresult.visible = material.visible;\\n\\t\\t\\tresult.wireframe = material.wireframe;\\n\\n\\t\\t\\tvar side = material.side;\\n\\n\\t\\t\\tif ( scope.renderSingleSided && side == THREE.DoubleSide ) {\\n\\n\\t\\t\\t\\tside = THREE.FrontSide;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( scope.renderReverseSided ) {\\n\\n\\t\\t\\t\\tif ( side === THREE.FrontSide ) side = THREE.BackSide;\\n\\t\\t\\t\\telse if ( side === THREE.BackSide ) side = THREE.FrontSide;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tresult.side = side;\\n\\n\\t\\t\\tresult.clipShadows = material.clipShadows;\\n\\t\\t\\tresult.clippingPlanes = material.clippingPlanes;\\n\\n\\t\\t\\tresult.wireframeLinewidth = material.wireframeLinewidth;\\n\\t\\t\\tresult.linewidth = material.linewidth;\\n\\n\\t\\t\\tif ( isPointLight && result.uniforms.lightPos !== undefined ) {\\n\\n\\t\\t\\t\\tresult.uniforms.lightPos.value.copy( lightPositionWorld );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn result;\\n\\n\\t\\t}\\n\\n\\t\\tfunction projectObject( object, camera, shadowCamera ) {\\n\\n\\t\\t\\tif ( object.visible === false ) return;\\n\\n\\t\\t\\tif ( object.layers.test( camera.layers ) && ( object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Points ) ) {\\n\\n\\t\\t\\t\\tif ( object.castShadow && ( object.frustumCulled === false || _frustum.intersectsObject( object ) === true ) ) {\\n\\n\\t\\t\\t\\t\\tvar material = object.material;\\n\\n\\t\\t\\t\\t\\tif ( material.visible === true ) {\\n\\n\\t\\t\\t\\t\\t\\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\\n\\t\\t\\t\\t\\t\\t_renderList.push( object );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar children = object.children;\\n\\n\\t\\t\\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\\n\\n\\t\\t\\t\\tprojectObject( children[ i ], camera, shadowCamera );\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\t// File:src/renderers/webgl/WebGLState.js\\n\\n\\t/**\\n\\t* @author mrdoob / http://mrdoob.com/\\n\\t*/\\n\\n\\tTHREE.WebGLState = function ( gl, extensions, paramThreeToGL ) {\\n\\n\\t\\tvar _this = this;\\n\\n\\t\\tthis.buffers = {\\n\\t\\t\\tcolor: new THREE.WebGLColorBuffer( gl, this ),\\n\\t\\t\\tdepth: new THREE.WebGLDepthBuffer( gl, this ),\\n\\t\\t\\tstencil: new THREE.WebGLStencilBuffer( gl, this )\\n\\t\\t};\\n\\n\\t\\tvar maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\\n\\t\\tvar newAttributes = new Uint8Array( maxVertexAttributes );\\n\\t\\tvar enabledAttributes = new Uint8Array( maxVertexAttributes );\\n\\t\\tvar attributeDivisors = new Uint8Array( maxVertexAttributes );\\n\\n\\t\\tvar capabilities = {};\\n\\n\\t\\tvar compressedTextureFormats = null;\\n\\n\\t\\tvar currentBlending = null;\\n\\t\\tvar currentBlendEquation = null;\\n\\t\\tvar currentBlendSrc = null;\\n\\t\\tvar currentBlendDst = null;\\n\\t\\tvar currentBlendEquationAlpha = null;\\n\\t\\tvar currentBlendSrcAlpha = null;\\n\\t\\tvar currentBlendDstAlpha = null;\\n\\t\\tvar currentPremultipledAlpha = false;\\n\\n\\t\\tvar currentFlipSided = null;\\n\\t\\tvar currentCullFace = null;\\n\\n\\t\\tvar currentLineWidth = null;\\n\\n\\t\\tvar currentPolygonOffsetFactor = null;\\n\\t\\tvar currentPolygonOffsetUnits = null;\\n\\n\\t\\tvar currentScissorTest = null;\\n\\n\\t\\tvar maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\\n\\n\\t\\tvar currentTextureSlot = null;\\n\\t\\tvar currentBoundTextures = {};\\n\\n\\t\\tvar currentScissor = new THREE.Vector4();\\n\\t\\tvar currentViewport = new THREE.Vector4();\\n\\n\\t\\tfunction createTexture( type, target, count ) {\\n\\n\\t\\t\\tvar data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\\n\\t\\t\\tvar texture = gl.createTexture();\\n\\n\\t\\t\\tgl.bindTexture( type, texture );\\n\\t\\t\\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\\n\\t\\t\\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\\n\\n\\t\\t\\tfor ( var i = 0; i < count; i ++ ) {\\n\\n\\t\\t\\t\\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn texture;\\n\\n\\t\\t}\\n\\n\\t\\tvar emptyTextures = {};\\n\\t\\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\\n\\t\\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\\n\\n\\t\\t//\\n\\n\\t\\tthis.init = function () {\\n\\n\\t\\t\\tthis.clearColor( 0, 0, 0, 1 );\\n\\t\\t\\tthis.clearDepth( 1 );\\n\\t\\t\\tthis.clearStencil( 0 );\\n\\n\\t\\t\\tthis.enable( gl.DEPTH_TEST );\\n\\t\\t\\tthis.setDepthFunc( THREE.LessEqualDepth );\\n\\n\\t\\t\\tthis.setFlipSided( false );\\n\\t\\t\\tthis.setCullFace( THREE.CullFaceBack );\\n\\t\\t\\tthis.enable( gl.CULL_FACE );\\n\\n\\t\\t\\tthis.enable( gl.BLEND );\\n\\t\\t\\tthis.setBlending( THREE.NormalBlending );\\n\\n\\t\\t};\\n\\n\\t\\tthis.initAttributes = function () {\\n\\n\\t\\t\\tfor ( var i = 0, l = newAttributes.length; i < l; i ++ ) {\\n\\n\\t\\t\\t\\tnewAttributes[ i ] = 0;\\n\\n\\t\\t\\t}\\n\\n\\t\\t};\\n\\n\\t\\tthis.enableAttribute = function ( attribute ) {\\n\\n\\t\\t\\tnewAttributes[ attribute ] = 1;\\n\\n\\t\\t\\tif ( enabledAttributes[ attribute ] === 0 ) {\\n\\n\\t\\t\\t\\tgl.enableVertexAttribArray( attribute );\\n\\t\\t\\t\\tenabledAttributes[ attribute ] = 1;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( attributeDivisors[ attribute ] !== 0 ) {\\n\\n\\t\\t\\t\\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\\n\\n\\t\\t\\t\\textension.vertexAttribDivisorANGLE( attribute, 0 );\\n\\t\\t\\t\\tattributeDivisors[ attribute ] = 0;\\n\\n\\t\\t\\t}\\n\\n\\t\\t};\\n\\n\\t\\tthis.enableAttributeAndDivisor = function ( attribute, meshPerAttribute, extension ) {\\n\\n\\t\\t\\tnewAttributes[ attribute ] = 1;\\n\\n\\t\\t\\tif ( enabledAttributes[ attribute ] === 0 ) {\\n\\n\\t\\t\\t\\tgl.enableVertexAttribArray( attribute );\\n\\t\\t\\t\\tenabledAttributes[ attribute ] = 1;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\\n\\n\\t\\t\\t\\textension.vertexAttribDivisorANGLE( attribute, meshPerAttribute );\\n\\t\\t\\t\\tattributeDivisors[ attribute ] = meshPerAttribute;\\n\\n\\t\\t\\t}\\n\\n\\t\\t};\\n\\n\\t\\tthis.disableUnusedAttributes = function () {\\n\\n\\t\\t\\tfor ( var i = 0, l = enabledAttributes.length; i !== l; ++ i ) {\\n\\n\\t\\t\\t\\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\\n\\n\\t\\t\\t\\t\\tgl.disableVertexAttribArray( i );\\n\\t\\t\\t\\t\\tenabledAttributes[ i ] = 0;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t};\\n\\n\\t\\tthis.enable = function ( id ) {\\n\\n\\t\\t\\tif ( capabilities[ id ] !== true ) {\\n\\n\\t\\t\\t\\tgl.enable( id );\\n\\t\\t\\t\\tcapabilities[ id ] = true;\\n\\n\\t\\t\\t}\\n\\n\\t\\t};\\n\\n\\t\\tthis.disable = function ( id ) {\\n\\n\\t\\t\\tif ( capabilities[ id ] !== false ) {\\n\\n\\t\\t\\t\\tgl.disable( id );\\n\\t\\t\\t\\tcapabilities[ id ] = false;\\n\\n\\t\\t\\t}\\n\\n\\t\\t};\\n\\n\\t\\tthis.getCompressedTextureFormats = function () {\\n\\n\\t\\t\\tif ( compressedTextureFormats === null ) {\\n\\n\\t\\t\\t\\tcompressedTextureFormats = [];\\n\\n\\t\\t\\t\\tif ( extensions.get( 'WEBGL_compressed_texture_pvrtc' ) ||\\n\\t\\t\\t\\t     extensions.get( 'WEBGL_compressed_texture_s3tc' ) ||\\n\\t\\t\\t\\t     extensions.get( 'WEBGL_compressed_texture_etc1' ) ) {\\n\\n\\t\\t\\t\\t\\tvar formats = gl.getParameter( gl.COMPRESSED_TEXTURE_FORMATS );\\n\\n\\t\\t\\t\\t\\tfor ( var i = 0; i < formats.length; i ++ ) {\\n\\n\\t\\t\\t\\t\\t\\tcompressedTextureFormats.push( formats[ i ] );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn compressedTextureFormats;\\n\\n\\t\\t};\\n\\n\\t\\tthis.setBlending = function ( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\\n\\n\\t\\t\\tif ( blending !== THREE.NoBlending ) {\\n\\n\\t\\t\\t\\tthis.enable( gl.BLEND );\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\tthis.disable( gl.BLEND );\\n\\t\\t\\t\\tcurrentBlending = blending; // no blending, that is\\n\\t\\t\\t\\treturn;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\\n\\n\\t\\t\\t\\tif ( blending === THREE.AdditiveBlending ) {\\n\\n\\t\\t\\t\\t\\tif ( premultipliedAlpha ) {\\n\\n\\t\\t\\t\\t\\t\\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\\n\\t\\t\\t\\t\\t\\tgl.blendFuncSeparate( gl.ONE, gl.ONE, gl.ONE, gl.ONE );\\n\\n\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\tgl.blendEquation( gl.FUNC_ADD );\\n\\t\\t\\t\\t\\t\\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t} else if ( blending === THREE.SubtractiveBlending ) {\\n\\n\\t\\t\\t\\t\\tif ( premultipliedAlpha ) {\\n\\n\\t\\t\\t\\t\\t\\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\\n\\t\\t\\t\\t\\t\\tgl.blendFuncSeparate( gl.ZERO, gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ONE_MINUS_SRC_ALPHA );\\n\\n\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\tgl.blendEquation( gl.FUNC_ADD );\\n\\t\\t\\t\\t\\t\\tgl.blendFunc( gl.ZERO, gl.ONE_MINUS_SRC_COLOR );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t} else if ( blending === THREE.MultiplyBlending ) {\\n\\n\\t\\t\\t\\t\\tif ( premultipliedAlpha ) {\\n\\n\\t\\t\\t\\t\\t\\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\\n\\t\\t\\t\\t\\t\\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\\n\\n\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\tgl.blendEquation( gl.FUNC_ADD );\\n\\t\\t\\t\\t\\t\\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\tif ( premultipliedAlpha ) {\\n\\n\\t\\t\\t\\t\\t\\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\\n\\t\\t\\t\\t\\t\\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\\n\\n\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\\n\\t\\t\\t\\t\\t\\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tcurrentBlending = blending;\\n\\t\\t\\t\\tcurrentPremultipledAlpha = premultipliedAlpha;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( blending === THREE.CustomBlending ) {\\n\\n\\t\\t\\t\\tblendEquationAlpha = blendEquationAlpha || blendEquation;\\n\\t\\t\\t\\tblendSrcAlpha = blendSrcAlpha || blendSrc;\\n\\t\\t\\t\\tblendDstAlpha = blendDstAlpha || blendDst;\\n\\n\\t\\t\\t\\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\\n\\n\\t\\t\\t\\t\\tgl.blendEquationSeparate( paramThreeToGL( blendEquation ), paramThreeToGL( blendEquationAlpha ) );\\n\\n\\t\\t\\t\\t\\tcurrentBlendEquation = blendEquation;\\n\\t\\t\\t\\t\\tcurrentBlendEquationAlpha = blendEquationAlpha;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\\n\\n\\t\\t\\t\\t\\tgl.blendFuncSeparate( paramThreeToGL( blendSrc ), paramThreeToGL( blendDst ), paramThreeToGL( blendSrcAlpha ), paramThreeToGL( blendDstAlpha ) );\\n\\n\\t\\t\\t\\t\\tcurrentBlendSrc = blendSrc;\\n\\t\\t\\t\\t\\tcurrentBlendDst = blendDst;\\n\\t\\t\\t\\t\\tcurrentBlendSrcAlpha = blendSrcAlpha;\\n\\t\\t\\t\\t\\tcurrentBlendDstAlpha = blendDstAlpha;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\tcurrentBlendEquation = null;\\n\\t\\t\\t\\tcurrentBlendSrc = null;\\n\\t\\t\\t\\tcurrentBlendDst = null;\\n\\t\\t\\t\\tcurrentBlendEquationAlpha = null;\\n\\t\\t\\t\\tcurrentBlendSrcAlpha = null;\\n\\t\\t\\t\\tcurrentBlendDstAlpha = null;\\n\\n\\t\\t\\t}\\n\\n\\t\\t};\\n\\n\\t\\t// TODO Deprecate\\n\\n\\t\\tthis.setColorWrite = function ( colorWrite ) {\\n\\n\\t\\t\\tthis.buffers.color.setMask( colorWrite );\\n\\n\\t\\t};\\n\\n\\t\\tthis.setDepthTest = function ( depthTest ) {\\n\\n\\t\\t\\tthis.buffers.depth.setTest( depthTest );\\n\\n\\t\\t};\\n\\n\\t\\tthis.setDepthWrite = function ( depthWrite ) {\\n\\n\\t\\t\\tthis.buffers.depth.setMask( depthWrite );\\n\\n\\t\\t};\\n\\n\\t\\tthis.setDepthFunc = function ( depthFunc ) {\\n\\n\\t\\t\\tthis.buffers.depth.setFunc( depthFunc );\\n\\n\\t\\t};\\n\\n\\t\\tthis.setStencilTest = function ( stencilTest ) {\\n\\n\\t\\t\\tthis.buffers.stencil.setTest( stencilTest );\\n\\n\\t\\t};\\n\\n\\t\\tthis.setStencilWrite = function ( stencilWrite ) {\\n\\n\\t\\t\\tthis.buffers.stencil.setMask( stencilWrite );\\n\\n\\t\\t};\\n\\n\\t\\tthis.setStencilFunc = function ( stencilFunc, stencilRef, stencilMask ) {\\n\\n\\t\\t\\tthis.buffers.stencil.setFunc( stencilFunc, stencilRef, stencilMask );\\n\\n\\t\\t};\\n\\n\\t\\tthis.setStencilOp = function ( stencilFail, stencilZFail, stencilZPass ) {\\n\\n\\t\\t\\tthis.buffers.stencil.setOp( stencilFail, stencilZFail, stencilZPass );\\n\\n\\t\\t};\\n\\n\\t\\t//\\n\\n\\t\\tthis.setFlipSided = function ( flipSided ) {\\n\\n\\t\\t\\tif ( currentFlipSided !== flipSided ) {\\n\\n\\t\\t\\t\\tif ( flipSided ) {\\n\\n\\t\\t\\t\\t\\tgl.frontFace( gl.CW );\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\tgl.frontFace( gl.CCW );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tcurrentFlipSided = flipSided;\\n\\n\\t\\t\\t}\\n\\n\\t\\t};\\n\\n\\t\\tthis.setCullFace = function ( cullFace ) {\\n\\n\\t\\t\\tif ( cullFace !== THREE.CullFaceNone ) {\\n\\n\\t\\t\\t\\tthis.enable( gl.CULL_FACE );\\n\\n\\t\\t\\t\\tif ( cullFace !== currentCullFace ) {\\n\\n\\t\\t\\t\\t\\tif ( cullFace === THREE.CullFaceBack ) {\\n\\n\\t\\t\\t\\t\\t\\tgl.cullFace( gl.BACK );\\n\\n\\t\\t\\t\\t\\t} else if ( cullFace === THREE.CullFaceFront ) {\\n\\n\\t\\t\\t\\t\\t\\tgl.cullFace( gl.FRONT );\\n\\n\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\tgl.cullFace( gl.FRONT_AND_BACK );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\tthis.disable( gl.CULL_FACE );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tcurrentCullFace = cullFace;\\n\\n\\t\\t};\\n\\n\\t\\tthis.setLineWidth = function ( width ) {\\n\\n\\t\\t\\tif ( width !== currentLineWidth ) {\\n\\n\\t\\t\\t\\tgl.lineWidth( width );\\n\\n\\t\\t\\t\\tcurrentLineWidth = width;\\n\\n\\t\\t\\t}\\n\\n\\t\\t};\\n\\n\\t\\tthis.setPolygonOffset = function ( polygonOffset, factor, units ) {\\n\\n\\t\\t\\tif ( polygonOffset ) {\\n\\n\\t\\t\\t\\tthis.enable( gl.POLYGON_OFFSET_FILL );\\n\\n\\t\\t\\t\\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\\n\\n\\t\\t\\t\\t\\tgl.polygonOffset( factor, units );\\n\\n\\t\\t\\t\\t\\tcurrentPolygonOffsetFactor = factor;\\n\\t\\t\\t\\t\\tcurrentPolygonOffsetUnits = units;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\tthis.disable( gl.POLYGON_OFFSET_FILL );\\n\\n\\t\\t\\t}\\n\\n\\t\\t};\\n\\n\\t\\tthis.getScissorTest = function () {\\n\\n\\t\\t\\treturn currentScissorTest;\\n\\n\\t\\t};\\n\\n\\t\\tthis.setScissorTest = function ( scissorTest ) {\\n\\n\\t\\t\\tcurrentScissorTest = scissorTest;\\n\\n\\t\\t\\tif ( scissorTest ) {\\n\\n\\t\\t\\t\\tthis.enable( gl.SCISSOR_TEST );\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\tthis.disable( gl.SCISSOR_TEST );\\n\\n\\t\\t\\t}\\n\\n\\t\\t};\\n\\n\\t\\t// texture\\n\\n\\t\\tthis.activeTexture = function ( webglSlot ) {\\n\\n\\t\\t\\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\\n\\n\\t\\t\\tif ( currentTextureSlot !== webglSlot ) {\\n\\n\\t\\t\\t\\tgl.activeTexture( webglSlot );\\n\\t\\t\\t\\tcurrentTextureSlot = webglSlot;\\n\\n\\t\\t\\t}\\n\\n\\t\\t};\\n\\n\\t\\tthis.bindTexture = function ( webglType, webglTexture ) {\\n\\n\\t\\t\\tif ( currentTextureSlot === null ) {\\n\\n\\t\\t\\t\\t_this.activeTexture();\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\\n\\n\\t\\t\\tif ( boundTexture === undefined ) {\\n\\n\\t\\t\\t\\tboundTexture = { type: undefined, texture: undefined };\\n\\t\\t\\t\\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\\n\\n\\t\\t\\t\\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\\n\\n\\t\\t\\t\\tboundTexture.type = webglType;\\n\\t\\t\\t\\tboundTexture.texture = webglTexture;\\n\\n\\t\\t\\t}\\n\\n\\t\\t};\\n\\n\\t\\tthis.compressedTexImage2D = function () {\\n\\n\\t\\t\\ttry {\\n\\n\\t\\t\\t\\tgl.compressedTexImage2D.apply( gl, arguments );\\n\\n\\t\\t\\t} catch ( error ) {\\n\\n\\t\\t\\t\\tconsole.error( error );\\n\\n\\t\\t\\t}\\n\\n\\t\\t};\\n\\n\\t\\tthis.texImage2D = function () {\\n\\n\\t\\t\\ttry {\\n\\n\\t\\t\\t\\tgl.texImage2D.apply( gl, arguments );\\n\\n\\t\\t\\t} catch ( error ) {\\n\\n\\t\\t\\t\\tconsole.error( error );\\n\\n\\t\\t\\t}\\n\\n\\t\\t};\\n\\n\\t\\t// TODO Deprecate\\n\\n\\t\\tthis.clearColor = function ( r, g, b, a ) {\\n\\n\\t\\t\\tthis.buffers.color.setClear( r, g, b, a );\\n\\n\\t\\t};\\n\\n\\t\\tthis.clearDepth = function ( depth ) {\\n\\n\\t\\t\\tthis.buffers.depth.setClear( depth );\\n\\n\\t\\t};\\n\\n\\t\\tthis.clearStencil = function ( stencil ) {\\n\\n\\t\\t\\tthis.buffers.stencil.setClear( stencil );\\n\\n\\t\\t};\\n\\n\\t\\t//\\n\\n\\t\\tthis.scissor = function ( scissor ) {\\n\\n\\t\\t\\tif ( currentScissor.equals( scissor ) === false ) {\\n\\n\\t\\t\\t\\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\\n\\t\\t\\t\\tcurrentScissor.copy( scissor );\\n\\n\\t\\t\\t}\\n\\n\\t\\t};\\n\\n\\t\\tthis.viewport = function ( viewport ) {\\n\\n\\t\\t\\tif ( currentViewport.equals( viewport ) === false ) {\\n\\n\\t\\t\\t\\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\\n\\t\\t\\t\\tcurrentViewport.copy( viewport );\\n\\n\\t\\t\\t}\\n\\n\\t\\t};\\n\\n\\t\\t//\\n\\n\\t\\tthis.reset = function () {\\n\\n\\t\\t\\tfor ( var i = 0; i < enabledAttributes.length; i ++ ) {\\n\\n\\t\\t\\t\\tif ( enabledAttributes[ i ] === 1 ) {\\n\\n\\t\\t\\t\\t\\tgl.disableVertexAttribArray( i );\\n\\t\\t\\t\\t\\tenabledAttributes[ i ] = 0;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tcapabilities = {};\\n\\n\\t\\t\\tcompressedTextureFormats = null;\\n\\n\\t\\t\\tcurrentTextureSlot = null;\\n\\t\\t\\tcurrentBoundTextures = {};\\n\\n\\t\\t\\tcurrentBlending = null;\\n\\n\\t\\t\\tcurrentFlipSided = null;\\n\\t\\t\\tcurrentCullFace = null;\\n\\n\\t\\t\\tthis.buffers.color.reset();\\n\\t\\t\\tthis.buffers.depth.reset();\\n\\t\\t\\tthis.buffers.stencil.reset();\\n\\n\\t\\t};\\n\\n\\t};\\n\\n\\tTHREE.WebGLColorBuffer = function ( gl, state ) {\\n\\n\\t\\tvar locked = false;\\n\\n\\t\\tvar color = new THREE.Vector4();\\n\\t\\tvar currentColorMask = null;\\n\\t\\tvar currentColorClear = new THREE.Vector4();\\n\\n\\t\\tthis.setMask = function ( colorMask ) {\\n\\n\\t\\t\\tif ( currentColorMask !== colorMask && ! locked ) {\\n\\n\\t\\t\\t\\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\\n\\t\\t\\t\\tcurrentColorMask = colorMask;\\n\\n\\t\\t\\t}\\n\\n\\t\\t};\\n\\n\\t\\tthis.setLocked = function ( lock ) {\\n\\n\\t\\t\\tlocked = lock;\\n\\n\\t\\t};\\n\\n\\t\\tthis.setClear = function ( r, g, b, a ) {\\n\\n\\t\\t\\tcolor.set( r, g, b, a );\\n\\n\\t\\t\\tif ( currentColorClear.equals( color ) === false ) {\\n\\n\\t\\t\\t\\tgl.clearColor( r, g, b, a );\\n\\t\\t\\t\\tcurrentColorClear.copy( color );\\n\\n\\t\\t\\t}\\n\\n\\t\\t};\\n\\n\\t\\tthis.reset = function () {\\n\\n\\t\\t\\tlocked = false;\\n\\n\\t\\t\\tcurrentColorMask = null;\\n\\t\\t\\tcurrentColorClear = new THREE.Vector4();\\n\\n\\t\\t};\\n\\n\\t};\\n\\n\\tTHREE.WebGLDepthBuffer = function( gl, state ) {\\n\\n\\t\\tvar locked = false;\\n\\n\\t\\tvar currentDepthMask = null;\\n\\t\\tvar currentDepthFunc = null;\\n\\t\\tvar currentDepthClear = null;\\n\\n\\t\\tthis.setTest = function ( depthTest ) {\\n\\n\\t\\t\\tif ( depthTest ) {\\n\\n\\t\\t\\t\\tstate.enable( gl.DEPTH_TEST );\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\tstate.disable( gl.DEPTH_TEST );\\n\\n\\t\\t\\t}\\n\\n\\t\\t};\\n\\n\\t\\tthis.setMask = function( depthMask ){\\n\\n\\t\\t\\tif ( currentDepthMask !== depthMask && ! locked ) {\\n\\n\\t\\t\\t\\tgl.depthMask( depthMask );\\n\\t\\t\\t\\tcurrentDepthMask = depthMask;\\n\\n\\t\\t\\t}\\n\\n\\t\\t};\\n\\n\\t\\tthis.setFunc = function ( depthFunc ) {\\n\\n\\t\\t\\tif ( currentDepthFunc !== depthFunc ) {\\n\\n\\t\\t\\t\\tif ( depthFunc ) {\\n\\n\\t\\t\\t\\t\\tswitch ( depthFunc ) {\\n\\n\\t\\t\\t\\t\\t\\tcase THREE.NeverDepth:\\n\\n\\t\\t\\t\\t\\t\\t\\tgl.depthFunc( gl.NEVER );\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\t\\tcase THREE.AlwaysDepth:\\n\\n\\t\\t\\t\\t\\t\\t\\tgl.depthFunc( gl.ALWAYS );\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\t\\tcase THREE.LessDepth:\\n\\n\\t\\t\\t\\t\\t\\t\\tgl.depthFunc( gl.LESS );\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\t\\tcase THREE.LessEqualDepth:\\n\\n\\t\\t\\t\\t\\t\\t\\tgl.depthFunc( gl.LEQUAL );\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\t\\tcase THREE.EqualDepth:\\n\\n\\t\\t\\t\\t\\t\\t\\tgl.depthFunc( gl.EQUAL );\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\t\\tcase THREE.GreaterEqualDepth:\\n\\n\\t\\t\\t\\t\\t\\t\\tgl.depthFunc( gl.GEQUAL );\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\t\\tcase THREE.GreaterDepth:\\n\\n\\t\\t\\t\\t\\t\\t\\tgl.depthFunc( gl.GREATER );\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\t\\tcase THREE.NotEqualDepth:\\n\\n\\t\\t\\t\\t\\t\\t\\tgl.depthFunc( gl.NOTEQUAL );\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\t\\tdefault:\\n\\n\\t\\t\\t\\t\\t\\t\\tgl.depthFunc( gl.LEQUAL );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\tgl.depthFunc( gl.LEQUAL );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tcurrentDepthFunc = depthFunc;\\n\\n\\t\\t\\t}\\n\\n\\t\\t};\\n\\n\\t\\tthis.setLocked = function ( lock ) {\\n\\n\\t\\t\\tlocked = lock;\\n\\n\\t\\t};\\n\\n\\t\\tthis.setClear = function ( depth ) {\\n\\n\\t\\t\\tif ( currentDepthClear !== depth ) {\\n\\n\\t\\t\\t\\tgl.clearDepth( depth );\\n\\t\\t\\t\\tcurrentDepthClear = depth;\\n\\n\\t\\t\\t}\\n\\n\\t\\t};\\n\\n\\t\\tthis.reset = function () {\\n\\n\\t\\t\\tlocked = false;\\n\\n\\t\\t\\tcurrentDepthMask = null;\\n\\t\\t\\tcurrentDepthFunc = null;\\n\\t\\t\\tcurrentDepthClear = null;\\n\\n\\t\\t};\\n\\n\\t};\\n\\n\\tTHREE.WebGLStencilBuffer = function ( gl, state ) {\\n\\n\\t\\tvar locked = false;\\n\\n\\t\\tvar currentStencilMask = null;\\n\\t\\tvar currentStencilFunc = null;\\n\\t\\tvar currentStencilRef = null;\\n\\t\\tvar currentStencilFuncMask = null;\\n\\t\\tvar currentStencilFail  = null;\\n\\t\\tvar currentStencilZFail = null;\\n\\t\\tvar currentStencilZPass = null;\\n\\t\\tvar currentStencilClear = null;\\n\\n\\t\\tthis.setTest = function ( stencilTest ) {\\n\\n\\t\\t\\tif ( stencilTest ) {\\n\\n\\t\\t\\t\\tstate.enable( gl.STENCIL_TEST );\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\tstate.disable( gl.STENCIL_TEST );\\n\\n\\t\\t\\t}\\n\\n\\t\\t};\\n\\n\\t\\tthis.setMask = function ( stencilMask ) {\\n\\n\\t\\t\\tif ( currentStencilMask !== stencilMask && ! locked ) {\\n\\n\\t\\t\\t\\tgl.stencilMask( stencilMask );\\n\\t\\t\\t\\tcurrentStencilMask = stencilMask;\\n\\n\\t\\t\\t}\\n\\n\\t\\t};\\n\\n\\t\\tthis.setFunc = function ( stencilFunc, stencilRef, stencilMask ) {\\n\\n\\t\\t\\tif ( currentStencilFunc !== stencilFunc ||\\n\\t\\t\\t     currentStencilRef \\t!== stencilRef \\t||\\n\\t\\t\\t     currentStencilFuncMask !== stencilMask ) {\\n\\n\\t\\t\\t\\tgl.stencilFunc( stencilFunc,  stencilRef, stencilMask );\\n\\n\\t\\t\\t\\tcurrentStencilFunc = stencilFunc;\\n\\t\\t\\t\\tcurrentStencilRef  = stencilRef;\\n\\t\\t\\t\\tcurrentStencilFuncMask = stencilMask;\\n\\n\\t\\t\\t}\\n\\n\\t\\t};\\n\\n\\t\\tthis.setOp\\t = function ( stencilFail, stencilZFail, stencilZPass ) {\\n\\n\\t\\t\\tif ( currentStencilFail\\t !== stencilFail \\t||\\n\\t\\t\\t     currentStencilZFail !== stencilZFail ||\\n\\t\\t\\t     currentStencilZPass !== stencilZPass ) {\\n\\n\\t\\t\\t\\tgl.stencilOp( stencilFail,  stencilZFail, stencilZPass );\\n\\n\\t\\t\\t\\tcurrentStencilFail  = stencilFail;\\n\\t\\t\\t\\tcurrentStencilZFail = stencilZFail;\\n\\t\\t\\t\\tcurrentStencilZPass = stencilZPass;\\n\\n\\t\\t\\t}\\n\\n\\t\\t};\\n\\n\\t\\tthis.setLocked = function ( lock ) {\\n\\n\\t\\t\\tlocked = lock;\\n\\n\\t\\t};\\n\\n\\t\\tthis.setClear = function ( stencil ) {\\n\\n\\t\\t\\tif ( currentStencilClear !== stencil ) {\\n\\n\\t\\t\\t\\tgl.clearStencil( stencil );\\n\\t\\t\\t\\tcurrentStencilClear = stencil;\\n\\n\\t\\t\\t}\\n\\n\\t\\t};\\n\\n\\t\\tthis.reset = function () {\\n\\n\\t\\t\\tlocked = false;\\n\\n\\t\\t\\tcurrentStencilMask = null;\\n\\t\\t\\tcurrentStencilFunc = null;\\n\\t\\t\\tcurrentStencilRef = null;\\n\\t\\t\\tcurrentStencilFuncMask = null;\\n\\t\\t\\tcurrentStencilFail = null;\\n\\t\\t\\tcurrentStencilZFail = null;\\n\\t\\t\\tcurrentStencilZPass = null;\\n\\t\\t\\tcurrentStencilClear = null;\\n\\n\\t\\t};\\n\\n\\t};\\n\\n\\t// File:src/renderers/webgl/WebGLTextures.js\\n\\n\\t/**\\n\\t* @author mrdoob / http://mrdoob.com/\\n\\t*/\\n\\n\\tTHREE.WebGLTextures = function ( _gl, extensions, state, properties, capabilities, paramThreeToGL, info ) {\\n\\n\\t\\tvar _infoMemory = info.memory;\\n\\t\\tvar _isWebGL2 = ( typeof WebGL2RenderingContext !== 'undefined' && _gl instanceof WebGL2RenderingContext );\\n\\n\\t\\t//\\n\\n\\t\\tfunction clampToMaxSize ( image, maxSize ) {\\n\\n\\t\\t\\tif ( image.width > maxSize || image.height > maxSize ) {\\n\\n\\t\\t\\t\\t// Warning: Scaling through the canvas will only work with images that use\\n\\t\\t\\t\\t// premultiplied alpha.\\n\\n\\t\\t\\t\\tvar scale = maxSize / Math.max( image.width, image.height );\\n\\n\\t\\t\\t\\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\\n\\t\\t\\t\\tcanvas.width = Math.floor( image.width * scale );\\n\\t\\t\\t\\tcanvas.height = Math.floor( image.height * scale );\\n\\n\\t\\t\\t\\tvar context = canvas.getContext( '2d' );\\n\\t\\t\\t\\tcontext.drawImage( image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height );\\n\\n\\t\\t\\t\\tconsole.warn( 'THREE.WebGLRenderer: image is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\\n\\n\\t\\t\\t\\treturn canvas;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn image;\\n\\n\\t\\t}\\n\\n\\t\\tfunction isPowerOfTwo( image ) {\\n\\n\\t\\t\\treturn THREE.Math.isPowerOfTwo( image.width ) && THREE.Math.isPowerOfTwo( image.height );\\n\\n\\t\\t}\\n\\n\\t\\tfunction makePowerOfTwo( image ) {\\n\\n\\t\\t\\tif ( image instanceof HTMLImageElement || image instanceof HTMLCanvasElement ) {\\n\\n\\t\\t\\t\\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\\n\\t\\t\\t\\tcanvas.width = THREE.Math.nearestPowerOfTwo( image.width );\\n\\t\\t\\t\\tcanvas.height = THREE.Math.nearestPowerOfTwo( image.height );\\n\\n\\t\\t\\t\\tvar context = canvas.getContext( '2d' );\\n\\t\\t\\t\\tcontext.drawImage( image, 0, 0, canvas.width, canvas.height );\\n\\n\\t\\t\\t\\tconsole.warn( 'THREE.WebGLRenderer: image is not power of two (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\\n\\n\\t\\t\\t\\treturn canvas;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn image;\\n\\n\\t\\t}\\n\\n\\t\\tfunction textureNeedsPowerOfTwo( texture ) {\\n\\n\\t\\t\\tif ( texture.wrapS !== THREE.ClampToEdgeWrapping || texture.wrapT !== THREE.ClampToEdgeWrapping ) return true;\\n\\t\\t\\tif ( texture.minFilter !== THREE.NearestFilter && texture.minFilter !== THREE.LinearFilter ) return true;\\n\\n\\t\\t\\treturn false;\\n\\n\\t\\t}\\n\\n\\t\\t// Fallback filters for non-power-of-2 textures\\n\\n\\t\\tfunction filterFallback ( f ) {\\n\\n\\t\\t\\tif ( f === THREE.NearestFilter || f === THREE.NearestMipMapNearestFilter || f === THREE.NearestMipMapLinearFilter ) {\\n\\n\\t\\t\\t\\treturn _gl.NEAREST;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn _gl.LINEAR;\\n\\n\\t\\t}\\n\\n\\t\\t//\\n\\n\\t\\tfunction onTextureDispose( event ) {\\n\\n\\t\\t\\tvar texture = event.target;\\n\\n\\t\\t\\ttexture.removeEventListener( 'dispose', onTextureDispose );\\n\\n\\t\\t\\tdeallocateTexture( texture );\\n\\n\\t\\t\\t_infoMemory.textures --;\\n\\n\\n\\t\\t}\\n\\n\\t\\tfunction onRenderTargetDispose( event ) {\\n\\n\\t\\t\\tvar renderTarget = event.target;\\n\\n\\t\\t\\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\\n\\n\\t\\t\\tdeallocateRenderTarget( renderTarget );\\n\\n\\t\\t\\t_infoMemory.textures --;\\n\\n\\t\\t}\\n\\n\\t\\t//\\n\\n\\t\\tfunction deallocateTexture( texture ) {\\n\\n\\t\\t\\tvar textureProperties = properties.get( texture );\\n\\n\\t\\t\\tif ( texture.image && textureProperties.__image__webglTextureCube ) {\\n\\n\\t\\t\\t\\t// cube texture\\n\\n\\t\\t\\t\\t_gl.deleteTexture( textureProperties.__image__webglTextureCube );\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t// 2D texture\\n\\n\\t\\t\\t\\tif ( textureProperties.__webglInit === undefined ) return;\\n\\n\\t\\t\\t\\t_gl.deleteTexture( textureProperties.__webglTexture );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t// remove all webgl properties\\n\\t\\t\\tproperties.delete( texture );\\n\\n\\t\\t}\\n\\n\\t\\tfunction deallocateRenderTarget( renderTarget ) {\\n\\n\\t\\t\\tvar renderTargetProperties = properties.get( renderTarget );\\n\\t\\t\\tvar textureProperties = properties.get( renderTarget.texture );\\n\\n\\t\\t\\tif ( ! renderTarget ) return;\\n\\n\\t\\t\\tif ( textureProperties.__webglTexture !== undefined ) {\\n\\n\\t\\t\\t\\t_gl.deleteTexture( textureProperties.__webglTexture );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( renderTarget.depthTexture ) {\\n\\n\\t\\t\\t\\trenderTarget.depthTexture.dispose();\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( renderTarget instanceof THREE.WebGLRenderTargetCube ) {\\n\\n\\t\\t\\t\\tfor ( var i = 0; i < 6; i ++ ) {\\n\\n\\t\\t\\t\\t\\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\\n\\t\\t\\t\\t\\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\\n\\t\\t\\t\\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tproperties.delete( renderTarget.texture );\\n\\t\\t\\tproperties.delete( renderTarget );\\n\\n\\t\\t}\\n\\n\\t\\t//\\n\\n\\n\\n\\t\\tfunction setTexture2D( texture, slot ) {\\n\\n\\t\\t\\tvar textureProperties = properties.get( texture );\\n\\n\\t\\t\\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\\n\\n\\t\\t\\t\\tvar image = texture.image;\\n\\n\\t\\t\\t\\tif ( image === undefined ) {\\n\\n\\t\\t\\t\\t\\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined', texture );\\n\\n\\t\\t\\t\\t} else if ( image.complete === false ) {\\n\\n\\t\\t\\t\\t\\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete', texture );\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\tuploadTexture( textureProperties, texture, slot );\\n\\t\\t\\t\\t\\treturn;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tstate.activeTexture( _gl.TEXTURE0 + slot );\\n\\t\\t\\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\\n\\n\\t\\t}\\n\\n\\t\\tfunction setTextureCube ( texture, slot ) {\\n\\n\\t\\t\\tvar textureProperties = properties.get( texture );\\n\\n\\t\\t\\tif ( texture.image.length === 6 ) {\\n\\n\\t\\t\\t\\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\\n\\n\\t\\t\\t\\t\\tif ( ! textureProperties.__image__webglTextureCube ) {\\n\\n\\t\\t\\t\\t\\t\\ttexture.addEventListener( 'dispose', onTextureDispose );\\n\\n\\t\\t\\t\\t\\t\\ttextureProperties.__image__webglTextureCube = _gl.createTexture();\\n\\n\\t\\t\\t\\t\\t\\t_infoMemory.textures ++;\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tstate.activeTexture( _gl.TEXTURE0 + slot );\\n\\t\\t\\t\\t\\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\\n\\n\\t\\t\\t\\t\\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\\n\\n\\t\\t\\t\\t\\tvar isCompressed = texture instanceof THREE.CompressedTexture;\\n\\t\\t\\t\\t\\tvar isDataTexture = texture.image[ 0 ] instanceof THREE.DataTexture;\\n\\n\\t\\t\\t\\t\\tvar cubeImage = [];\\n\\n\\t\\t\\t\\t\\tfor ( var i = 0; i < 6; i ++ ) {\\n\\n\\t\\t\\t\\t\\t\\tif ( ! isCompressed && ! isDataTexture ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tcubeImage[ i ] = clampToMaxSize( texture.image[ i ], capabilities.maxCubemapSize );\\n\\n\\t\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\t\\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tvar image = cubeImage[ 0 ],\\n\\t\\t\\t\\t\\tisPowerOfTwoImage = isPowerOfTwo( image ),\\n\\t\\t\\t\\t\\tglFormat = paramThreeToGL( texture.format ),\\n\\t\\t\\t\\t\\tglType = paramThreeToGL( texture.type );\\n\\n\\t\\t\\t\\t\\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, isPowerOfTwoImage );\\n\\n\\t\\t\\t\\t\\tfor ( var i = 0; i < 6; i ++ ) {\\n\\n\\t\\t\\t\\t\\t\\tif ( ! isCompressed ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tif ( isDataTexture ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\\n\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, glFormat, glType, cubeImage[ i ] );\\n\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\t\\tvar mipmap, mipmaps = cubeImage[ i ].mipmaps;\\n\\n\\t\\t\\t\\t\\t\\t\\tfor ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tmipmap = mipmaps[ j ];\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tif ( texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tconsole.warn( \\\"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()\\\" );\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tif ( texture.generateMipmaps && isPowerOfTwoImage ) {\\n\\n\\t\\t\\t\\t\\t\\t_gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\ttextureProperties.__version = texture.version;\\n\\n\\t\\t\\t\\t\\tif ( texture.onUpdate ) texture.onUpdate( texture );\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\tstate.activeTexture( _gl.TEXTURE0 + slot );\\n\\t\\t\\t\\t\\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tfunction setTextureCubeDynamic ( texture, slot ) {\\n\\n\\t\\t\\tstate.activeTexture( _gl.TEXTURE0 + slot );\\n\\t\\t\\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( texture ).__webglTexture );\\n\\n\\t\\t}\\n\\n\\t\\tfunction setTextureParameters ( textureType, texture, isPowerOfTwoImage ) {\\n\\n\\t\\t\\tvar extension;\\n\\n\\t\\t\\tif ( isPowerOfTwoImage ) {\\n\\n\\t\\t\\t\\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, paramThreeToGL( texture.wrapS ) );\\n\\t\\t\\t\\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, paramThreeToGL( texture.wrapT ) );\\n\\n\\t\\t\\t\\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, paramThreeToGL( texture.magFilter ) );\\n\\t\\t\\t\\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, paramThreeToGL( texture.minFilter ) );\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\\n\\t\\t\\t\\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\\n\\n\\t\\t\\t\\tif ( texture.wrapS !== THREE.ClampToEdgeWrapping || texture.wrapT !== THREE.ClampToEdgeWrapping ) {\\n\\n\\t\\t\\t\\t\\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.', texture );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\\n\\t\\t\\t\\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\\n\\n\\t\\t\\t\\tif ( texture.minFilter !== THREE.NearestFilter && texture.minFilter !== THREE.LinearFilter ) {\\n\\n\\t\\t\\t\\t\\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.', texture );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\textension = extensions.get( 'EXT_texture_filter_anisotropic' );\\n\\n\\t\\t\\tif ( extension ) {\\n\\n\\t\\t\\t\\tif ( texture.type === THREE.FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;\\n\\t\\t\\t\\tif ( texture.type === THREE.HalfFloatType && extensions.get( 'OES_texture_half_float_linear' ) === null ) return;\\n\\n\\t\\t\\t\\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\\n\\n\\t\\t\\t\\t\\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\\n\\t\\t\\t\\t\\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tfunction uploadTexture( textureProperties, texture, slot ) {\\n\\n\\t\\t\\tif ( textureProperties.__webglInit === undefined ) {\\n\\n\\t\\t\\t\\ttextureProperties.__webglInit = true;\\n\\n\\t\\t\\t\\ttexture.addEventListener( 'dispose', onTextureDispose );\\n\\n\\t\\t\\t\\ttextureProperties.__webglTexture = _gl.createTexture();\\n\\n\\t\\t\\t\\t_infoMemory.textures ++;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tstate.activeTexture( _gl.TEXTURE0 + slot );\\n\\t\\t\\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\\n\\n\\t\\t\\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\\n\\t\\t\\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\\n\\t\\t\\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\\n\\n\\t\\t\\tvar image = clampToMaxSize( texture.image, capabilities.maxTextureSize );\\n\\n\\t\\t\\tif ( textureNeedsPowerOfTwo( texture ) && isPowerOfTwo( image ) === false ) {\\n\\n\\t\\t\\t\\timage = makePowerOfTwo( image );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar isPowerOfTwoImage = isPowerOfTwo( image ),\\n\\t\\t\\tglFormat = paramThreeToGL( texture.format ),\\n\\t\\t\\tglType = paramThreeToGL( texture.type );\\n\\n\\t\\t\\tsetTextureParameters( _gl.TEXTURE_2D, texture, isPowerOfTwoImage );\\n\\n\\t\\t\\tvar mipmap, mipmaps = texture.mipmaps;\\n\\n\\t\\t\\tif ( texture instanceof THREE.DepthTexture ) {\\n\\n\\t\\t\\t\\t// populate depth texture with dummy data\\n\\n\\t\\t\\t\\tvar internalFormat = _gl.DEPTH_COMPONENT;\\n\\n\\t\\t\\t\\tif ( texture.type === THREE.FloatType ) {\\n\\n\\t\\t\\t\\t\\tif ( !_isWebGL2 ) throw new Error('Float Depth Texture only supported in WebGL2.0');\\n\\t\\t\\t\\t\\tinternalFormat = _gl.DEPTH_COMPONENT32F;\\n\\n\\t\\t\\t\\t} else if ( _isWebGL2 ) {\\n\\n\\t\\t\\t\\t\\t// WebGL 2.0 requires signed internalformat for glTexImage2D\\n\\t\\t\\t\\t\\tinternalFormat = _gl.DEPTH_COMPONENT16;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tstate.texImage2D( _gl.TEXTURE_2D, 0, internalFormat, image.width, image.height, 0, glFormat, glType, null );\\n\\n\\t\\t\\t} else if ( texture instanceof THREE.DataTexture ) {\\n\\n\\t\\t\\t\\t// use manually created mipmaps if available\\n\\t\\t\\t\\t// if there are no manual mipmaps\\n\\t\\t\\t\\t// set 0 level mipmap and then use GL to generate other mipmap levels\\n\\n\\t\\t\\t\\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\\n\\n\\t\\t\\t\\t\\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\\n\\n\\t\\t\\t\\t\\t\\tmipmap = mipmaps[ i ];\\n\\t\\t\\t\\t\\t\\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\ttexture.generateMipmaps = false;\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, image.width, image.height, 0, glFormat, glType, image.data );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t} else if ( texture instanceof THREE.CompressedTexture ) {\\n\\n\\t\\t\\t\\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\\n\\n\\t\\t\\t\\t\\tmipmap = mipmaps[ i ];\\n\\n\\t\\t\\t\\t\\tif ( texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat ) {\\n\\n\\t\\t\\t\\t\\t\\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\\n\\n\\t\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\t\\tconsole.warn( \\\"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()\\\" );\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t// regular Texture (image, video, canvas)\\n\\n\\t\\t\\t\\t// use manually created mipmaps if available\\n\\t\\t\\t\\t// if there are no manual mipmaps\\n\\t\\t\\t\\t// set 0 level mipmap and then use GL to generate other mipmap levels\\n\\n\\t\\t\\t\\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\\n\\n\\t\\t\\t\\t\\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\\n\\n\\t\\t\\t\\t\\t\\tmipmap = mipmaps[ i ];\\n\\t\\t\\t\\t\\t\\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, glFormat, glType, mipmap );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\ttexture.generateMipmaps = false;\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, glFormat, glType, image );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( texture.generateMipmaps && isPowerOfTwoImage ) _gl.generateMipmap( _gl.TEXTURE_2D );\\n\\n\\t\\t\\ttextureProperties.__version = texture.version;\\n\\n\\t\\t\\tif ( texture.onUpdate ) texture.onUpdate( texture );\\n\\n\\t\\t}\\n\\n\\t\\t// Render targets\\n\\n\\t\\t// Setup storage for target texture and bind it to correct framebuffer\\n\\t\\tfunction setupFrameBufferTexture ( framebuffer, renderTarget, attachment, textureTarget ) {\\n\\n\\t\\t\\tvar glFormat = paramThreeToGL( renderTarget.texture.format );\\n\\t\\t\\tvar glType = paramThreeToGL( renderTarget.texture.type );\\n\\t\\t\\tstate.texImage2D( textureTarget, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\\n\\t\\t\\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\\n\\t\\t\\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( renderTarget.texture ).__webglTexture, 0 );\\n\\t\\t\\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\\n\\n\\t\\t}\\n\\n\\t\\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\\n\\t\\tfunction setupRenderBufferStorage ( renderbuffer, renderTarget ) {\\n\\n\\t\\t\\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\\n\\n\\t\\t\\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\\n\\n\\t\\t\\t\\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height );\\n\\t\\t\\t\\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\\n\\n\\t\\t\\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\\n\\n\\t\\t\\t\\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\\n\\t\\t\\t\\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t// FIXME: We don't support !depth !stencil\\n\\t\\t\\t\\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\\n\\n\\t\\t}\\n\\n\\t\\t// Setup resources for a Depth Texture for a FBO (needs an extension)\\n\\t\\tfunction setupDepthTexture ( framebuffer, renderTarget ) {\\n\\n\\t\\t\\tvar isCube = ( renderTarget instanceof THREE.WebGLRenderTargetCube );\\n\\t\\t\\tif ( isCube ) throw new Error('Depth Texture with cube render targets is not supported!');\\n\\n\\t\\t\\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\\n\\n\\t\\t\\tif ( !( renderTarget.depthTexture instanceof THREE.DepthTexture ) ) {\\n\\n\\t\\t\\t\\tthrow new Error('renderTarget.depthTexture must be an instance of THREE.DepthTexture');\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t// upload an empty depth texture with framebuffer size\\n\\t\\t\\tif ( !properties.get( renderTarget.depthTexture ).__webglTexture ||\\n\\t\\t\\t\\t\\trenderTarget.depthTexture.image.width !== renderTarget.width ||\\n\\t\\t\\t\\t\\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\\n\\t\\t\\t\\trenderTarget.depthTexture.image.width = renderTarget.width;\\n\\t\\t\\t\\trenderTarget.depthTexture.image.height = renderTarget.height;\\n\\t\\t\\t\\trenderTarget.depthTexture.needsUpdate = true;\\n\\t\\t\\t}\\n\\n\\t\\t\\tsetTexture2D( renderTarget.depthTexture, 0 );\\n\\n\\t\\t\\tvar webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\\n\\t\\t\\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\\n\\n\\t\\t}\\n\\n\\t\\t// Setup GL resources for a non-texture depth buffer\\n\\t\\tfunction setupDepthRenderbuffer( renderTarget ) {\\n\\n\\t\\t\\tvar renderTargetProperties = properties.get( renderTarget );\\n\\n\\t\\t\\tvar isCube = ( renderTarget instanceof THREE.WebGLRenderTargetCube );\\n\\n\\t\\t\\tif ( renderTarget.depthTexture ) {\\n\\n\\t\\t\\t\\tif ( isCube ) throw new Error('target.depthTexture not supported in Cube render targets');\\n\\n\\t\\t\\t\\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\tif ( isCube ) {\\n\\n\\t\\t\\t\\t\\trenderTargetProperties.__webglDepthbuffer = [];\\n\\n\\t\\t\\t\\t\\tfor ( var i = 0; i < 6; i ++ ) {\\n\\n\\t\\t\\t\\t\\t\\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\\n\\t\\t\\t\\t\\t\\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\\n\\t\\t\\t\\t\\t\\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\\n\\t\\t\\t\\t\\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\\n\\t\\t\\t\\t\\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\\n\\n\\t\\t}\\n\\n\\t\\t// Set up GL resources for the render target\\n\\t\\tfunction setupRenderTarget( renderTarget ) {\\n\\n\\t\\t\\tvar renderTargetProperties = properties.get( renderTarget );\\n\\t\\t\\tvar textureProperties = properties.get( renderTarget.texture );\\n\\n\\t\\t\\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\\n\\n\\t\\t\\ttextureProperties.__webglTexture = _gl.createTexture();\\n\\n\\t\\t\\t_infoMemory.textures ++;\\n\\n\\t\\t\\tvar isCube = ( renderTarget instanceof THREE.WebGLRenderTargetCube );\\n\\t\\t\\tvar isTargetPowerOfTwo = isPowerOfTwo( renderTarget );\\n\\n\\t\\t\\t// Setup framebuffer\\n\\n\\t\\t\\tif ( isCube ) {\\n\\n\\t\\t\\t\\trenderTargetProperties.__webglFramebuffer = [];\\n\\n\\t\\t\\t\\tfor ( var i = 0; i < 6; i ++ ) {\\n\\n\\t\\t\\t\\t\\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Setup color buffer\\n\\n\\t\\t\\tif ( isCube ) {\\n\\n\\t\\t\\t\\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\\n\\t\\t\\t\\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, renderTarget.texture, isTargetPowerOfTwo );\\n\\n\\t\\t\\t\\tfor ( var i = 0; i < 6; i ++ ) {\\n\\n\\t\\t\\t\\t\\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( renderTarget.texture.generateMipmaps && isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\\n\\t\\t\\t\\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\\n\\t\\t\\t\\tsetTextureParameters( _gl.TEXTURE_2D, renderTarget.texture, isTargetPowerOfTwo );\\n\\t\\t\\t\\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D );\\n\\n\\t\\t\\t\\tif ( renderTarget.texture.generateMipmaps && isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_2D );\\n\\t\\t\\t\\tstate.bindTexture( _gl.TEXTURE_2D, null );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Setup depth and stencil buffers\\n\\n\\t\\t\\tif ( renderTarget.depthBuffer ) {\\n\\n\\t\\t\\t\\tsetupDepthRenderbuffer( renderTarget );\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tfunction updateRenderTargetMipmap( renderTarget ) {\\n\\n\\t\\t\\tvar texture = renderTarget.texture;\\n\\n\\t\\t\\tif ( texture.generateMipmaps && isPowerOfTwo( renderTarget ) &&\\n\\t\\t\\t\\t\\ttexture.minFilter !== THREE.NearestFilter &&\\n\\t\\t\\t\\t\\ttexture.minFilter !== THREE.LinearFilter ) {\\n\\n\\t\\t\\t\\tvar target = renderTarget instanceof THREE.WebGLRenderTargetCube ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\\n\\t\\t\\t\\tvar webglTexture = properties.get( texture ).__webglTexture;\\n\\n\\t\\t\\t\\tstate.bindTexture( target, webglTexture );\\n\\t\\t\\t\\t_gl.generateMipmap( target );\\n\\t\\t\\t\\tstate.bindTexture( target, null );\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tthis.setTexture2D = setTexture2D;\\n\\t\\tthis.setTextureCube = setTextureCube;\\n\\t\\tthis.setTextureCubeDynamic = setTextureCubeDynamic;\\n\\t\\tthis.setupRenderTarget = setupRenderTarget;\\n\\t\\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\\n\\n\\t};\\n\\n\\t// File:src/renderers/webgl/WebGLUniforms.js\\n\\n\\t/**\\n\\t *\\n\\t * Uniforms of a program.\\n\\t * Those form a tree structure with a special top-level container for the root,\\n\\t * which you get by calling 'new WebGLUniforms( gl, program, renderer )'.\\n\\t *\\n\\t *\\n\\t * Properties of inner nodes including the top-level container:\\n\\t *\\n\\t * .seq - array of nested uniforms\\n\\t * .map - nested uniforms by name\\n\\t *\\n\\t *\\n\\t * Methods of all nodes except the top-level container:\\n\\t *\\n\\t * .setValue( gl, value, [renderer] )\\n\\t *\\n\\t * \\t\\tuploads a uniform value(s)\\n\\t *  \\tthe 'renderer' parameter is needed for sampler uniforms\\n\\t *\\n\\t *\\n\\t * Static methods of the top-level container (renderer factorizations):\\n\\t *\\n\\t * .upload( gl, seq, values, renderer )\\n\\t *\\n\\t * \\t\\tsets uniforms in 'seq' to 'values[id].value'\\n\\t *\\n\\t * .seqWithValue( seq, values ) : filteredSeq\\n\\t *\\n\\t * \\t\\tfilters 'seq' entries with corresponding entry in values\\n\\t *\\n\\t * .splitDynamic( seq, values ) : filteredSeq\\n\\t *\\n\\t * \\t\\tfilters 'seq' entries with dynamic entry and removes them from 'seq'\\n\\t *\\n\\t *\\n\\t * Methods of the top-level container (renderer factorizations):\\n\\t *\\n\\t * .setValue( gl, name, value )\\n\\t *\\n\\t * \\t\\tsets uniform with  name 'name' to 'value'\\n\\t *\\n\\t * .set( gl, obj, prop )\\n\\t *\\n\\t * \\t\\tsets uniform from object and property with same name than uniform\\n\\t *\\n\\t * .setOptional( gl, obj, prop )\\n\\t *\\n\\t * \\t\\tlike .set for an optional property of the object\\n\\t *\\n\\t *\\n\\t * @author tschw\\n\\t *\\n\\t */\\n\\n\\tTHREE.WebGLUniforms = ( function() { // scope\\n\\n\\t\\tvar emptyTexture = new THREE.Texture();\\n\\t\\tvar emptyCubeTexture = new THREE.CubeTexture();\\n\\n\\t\\t// --- Base for inner nodes (including the root) ---\\n\\n\\t\\tvar UniformContainer = function() {\\n\\n\\t\\t\\t\\tthis.seq = [];\\n\\t\\t\\t\\tthis.map = {};\\n\\n\\t\\t\\t},\\n\\n\\t\\t// --- Utilities ---\\n\\n\\t\\t// Array Caches (provide typed arrays for temporary by size)\\n\\n\\t\\t\\tarrayCacheF32 = [],\\n\\t\\t\\tarrayCacheI32 = [],\\n\\n\\t\\t\\tuncacheTemporaryArrays = function() {\\n\\n\\t\\t\\t\\tarrayCacheF32.length = 0;\\n\\t\\t\\t\\tarrayCacheI32.length = 0;\\n\\n\\t\\t\\t},\\n\\n\\t\\t// Flattening for arrays of vectors and matrices\\n\\n\\t\\t\\tflatten = function( array, nBlocks, blockSize ) {\\n\\n\\t\\t\\t\\tvar firstElem = array[ 0 ];\\n\\n\\t\\t\\t\\tif ( firstElem <= 0 || firstElem > 0 ) return array;\\n\\t\\t\\t\\t// unoptimized: ! isNaN( firstElem )\\n\\t\\t\\t\\t// see http://jacksondunstan.com/articles/983\\n\\n\\t\\t\\t\\tvar n = nBlocks * blockSize,\\n\\t\\t\\t\\t\\tr = arrayCacheF32[ n ];\\n\\n\\t\\t\\t\\tif ( r === undefined ) {\\n\\n\\t\\t\\t\\t\\tr = new Float32Array( n );\\n\\t\\t\\t\\t\\tarrayCacheF32[ n ] = r;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( nBlocks !== 0 ) {\\n\\n\\t\\t\\t\\t\\tfirstElem.toArray( r, 0 );\\n\\n\\t\\t\\t\\t\\tfor ( var i = 1, offset = 0; i !== nBlocks; ++ i ) {\\n\\n\\t\\t\\t\\t\\t\\toffset += blockSize;\\n\\t\\t\\t\\t\\t\\tarray[ i ].toArray( r, offset );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn r;\\n\\n\\t\\t\\t},\\n\\n\\t\\t// Texture unit allocation\\n\\n\\t\\t\\tallocTexUnits = function( renderer, n ) {\\n\\n\\t\\t\\t\\tvar r = arrayCacheI32[ n ];\\n\\n\\t\\t\\t\\tif ( r === undefined ) {\\n\\n\\t\\t\\t\\t\\tr = new Int32Array( n );\\n\\t\\t\\t\\t\\tarrayCacheI32[ n ] = r;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tfor ( var i = 0; i !== n; ++ i )\\n\\t\\t\\t\\t\\tr[ i ] = renderer.allocTextureUnit();\\n\\n\\t\\t\\t\\treturn r;\\n\\n\\t\\t\\t},\\n\\n\\t\\t// --- Setters ---\\n\\n\\t\\t// Note: Defining these methods externally, because they come in a bunch\\n\\t\\t// and this way their names minify.\\n\\n\\t\\t\\t// Single scalar\\n\\n\\t\\t\\tsetValue1f = function( gl, v ) { gl.uniform1f( this.addr, v ); },\\n\\t\\t\\tsetValue1i = function( gl, v ) { gl.uniform1i( this.addr, v ); },\\n\\n\\t\\t\\t// Single float vector (from flat array or THREE.VectorN)\\n\\n\\t\\t\\tsetValue2fv = function( gl, v ) {\\n\\n\\t\\t\\t\\tif ( v.x === undefined ) gl.uniform2fv( this.addr, v );\\n\\t\\t\\t\\telse gl.uniform2f( this.addr, v.x, v.y );\\n\\n\\t\\t\\t},\\n\\n\\t\\t\\tsetValue3fv = function( gl, v ) {\\n\\n\\t\\t\\t\\tif ( v.x !== undefined )\\n\\t\\t\\t\\t\\tgl.uniform3f( this.addr, v.x, v.y, v.z );\\n\\t\\t\\t\\telse if ( v.r !== undefined )\\n\\t\\t\\t\\t\\tgl.uniform3f( this.addr, v.r, v.g, v.b );\\n\\t\\t\\t\\telse\\n\\t\\t\\t\\t\\tgl.uniform3fv( this.addr, v );\\n\\n\\t\\t\\t},\\n\\n\\t\\t\\tsetValue4fv = function( gl, v ) {\\n\\n\\t\\t\\t\\tif ( v.x === undefined ) gl.uniform4fv( this.addr, v );\\n\\t\\t\\t\\telse gl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\\n\\n\\t\\t\\t},\\n\\n\\t\\t\\t// Single matrix (from flat array or MatrixN)\\n\\n\\t\\t\\tsetValue2fm = function( gl, v ) {\\n\\n\\t\\t\\t\\tgl.uniformMatrix2fv( this.addr, false, v.elements || v );\\n\\n\\t\\t\\t},\\n\\n\\t\\t\\tsetValue3fm = function( gl, v ) {\\n\\n\\t\\t\\t\\tgl.uniformMatrix3fv( this.addr, false, v.elements || v );\\n\\n\\t\\t\\t},\\n\\n\\t\\t\\tsetValue4fm = function( gl, v ) {\\n\\n\\t\\t\\t\\tgl.uniformMatrix4fv( this.addr, false, v.elements || v );\\n\\n\\t\\t\\t},\\n\\n\\t\\t\\t// Single texture (2D / Cube)\\n\\n\\t\\t\\tsetValueT1 = function( gl, v, renderer ) {\\n\\n\\t\\t\\t\\tvar unit = renderer.allocTextureUnit();\\n\\t\\t\\t\\tgl.uniform1i( this.addr, unit );\\n\\t\\t\\t\\trenderer.setTexture2D( v || emptyTexture, unit );\\n\\n\\t\\t\\t},\\n\\n\\t\\t\\tsetValueT6 = function( gl, v, renderer ) {\\n\\n\\t\\t\\t\\tvar unit = renderer.allocTextureUnit();\\n\\t\\t\\t\\tgl.uniform1i( this.addr, unit );\\n\\t\\t\\t\\trenderer.setTextureCube( v || emptyCubeTexture, unit );\\n\\n\\t\\t\\t},\\n\\n\\t\\t\\t// Integer / Boolean vectors or arrays thereof (always flat arrays)\\n\\n\\t\\t\\tsetValue2iv = function( gl, v ) { gl.uniform2iv( this.addr, v ); },\\n\\t\\t\\tsetValue3iv = function( gl, v ) { gl.uniform3iv( this.addr, v ); },\\n\\t\\t\\tsetValue4iv = function( gl, v ) { gl.uniform4iv( this.addr, v ); },\\n\\n\\t\\t\\t// Helper to pick the right setter for the singular case\\n\\n\\t\\t\\tgetSingularSetter = function( type ) {\\n\\n\\t\\t\\t\\tswitch ( type ) {\\n\\n\\t\\t\\t\\t\\tcase 0x1406: return setValue1f; // FLOAT\\n\\t\\t\\t\\t\\tcase 0x8b50: return setValue2fv; // _VEC2\\n\\t\\t\\t\\t\\tcase 0x8b51: return setValue3fv; // _VEC3\\n\\t\\t\\t\\t\\tcase 0x8b52: return setValue4fv; // _VEC4\\n\\n\\t\\t\\t\\t\\tcase 0x8b5a: return setValue2fm; // _MAT2\\n\\t\\t\\t\\t\\tcase 0x8b5b: return setValue3fm; // _MAT3\\n\\t\\t\\t\\t\\tcase 0x8b5c: return setValue4fm; // _MAT4\\n\\n\\t\\t\\t\\t\\tcase 0x8b5e: return setValueT1; // SAMPLER_2D\\n\\t\\t\\t\\t\\tcase 0x8b60: return setValueT6; // SAMPLER_CUBE\\n\\n\\t\\t\\t\\t\\tcase 0x1404: case 0x8b56: return setValue1i; // INT, BOOL\\n\\t\\t\\t\\t\\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\\n\\t\\t\\t\\t\\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\\n\\t\\t\\t\\t\\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t},\\n\\n\\t\\t\\t// Array of scalars\\n\\n\\t\\t\\tsetValue1fv = function( gl, v ) { gl.uniform1fv( this.addr, v ); },\\n\\t\\t\\tsetValue1iv = function( gl, v ) { gl.uniform1iv( this.addr, v ); },\\n\\n\\t\\t\\t// Array of vectors (flat or from THREE classes)\\n\\n\\t\\t\\tsetValueV2a = function( gl, v ) {\\n\\n\\t\\t\\t\\tgl.uniform2fv( this.addr, flatten( v, this.size, 2 ) );\\n\\n\\t\\t\\t},\\n\\n\\t\\t\\tsetValueV3a = function( gl, v ) {\\n\\n\\t\\t\\t\\tgl.uniform3fv( this.addr, flatten( v, this.size, 3 ) );\\n\\n\\t\\t\\t},\\n\\n\\t\\t\\tsetValueV4a = function( gl, v ) {\\n\\n\\t\\t\\t\\tgl.uniform4fv( this.addr, flatten( v, this.size, 4 ) );\\n\\n\\t\\t\\t},\\n\\n\\t\\t\\t// Array of matrices (flat or from THREE clases)\\n\\n\\t\\t\\tsetValueM2a = function( gl, v ) {\\n\\n\\t\\t\\t\\tgl.uniformMatrix2fv( this.addr, false, flatten( v, this.size, 4 ) );\\n\\n\\t\\t\\t},\\n\\n\\t\\t\\tsetValueM3a = function( gl, v ) {\\n\\n\\t\\t\\t\\tgl.uniformMatrix3fv( this.addr, false, flatten( v, this.size, 9 ) );\\n\\n\\t\\t\\t},\\n\\n\\t\\t\\tsetValueM4a = function( gl, v ) {\\n\\n\\t\\t\\t\\tgl.uniformMatrix4fv( this.addr, false, flatten( v, this.size, 16 ) );\\n\\n\\t\\t\\t},\\n\\n\\t\\t\\t// Array of textures (2D / Cube)\\n\\n\\t\\t\\tsetValueT1a = function( gl, v, renderer ) {\\n\\n\\t\\t\\t\\tvar n = v.length,\\n\\t\\t\\t\\t\\tunits = allocTexUnits( renderer, n );\\n\\n\\t\\t\\t\\tgl.uniform1iv( this.addr, units );\\n\\n\\t\\t\\t\\tfor ( var i = 0; i !== n; ++ i ) {\\n\\n\\t\\t\\t\\t\\trenderer.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t},\\n\\n\\t\\t\\tsetValueT6a = function( gl, v, renderer ) {\\n\\n\\t\\t\\t\\tvar n = v.length,\\n\\t\\t\\t\\t\\tunits = allocTexUnits( renderer, n );\\n\\n\\t\\t\\t\\tgl.uniform1iv( this.addr, units );\\n\\n\\t\\t\\t\\tfor ( var i = 0; i !== n; ++ i ) {\\n\\n\\t\\t\\t\\t\\trenderer.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t},\\n\\n\\n\\t\\t\\t// Helper to pick the right setter for a pure (bottom-level) array\\n\\n\\t\\t\\tgetPureArraySetter = function( type ) {\\n\\n\\t\\t\\t\\tswitch ( type ) {\\n\\n\\t\\t\\t\\t\\tcase 0x1406: return setValue1fv; // FLOAT\\n\\t\\t\\t\\t\\tcase 0x8b50: return setValueV2a; // _VEC2\\n\\t\\t\\t\\t\\tcase 0x8b51: return setValueV3a; // _VEC3\\n\\t\\t\\t\\t\\tcase 0x8b52: return setValueV4a; // _VEC4\\n\\n\\t\\t\\t\\t\\tcase 0x8b5a: return setValueM2a; // _MAT2\\n\\t\\t\\t\\t\\tcase 0x8b5b: return setValueM3a; // _MAT3\\n\\t\\t\\t\\t\\tcase 0x8b5c: return setValueM4a; // _MAT4\\n\\n\\t\\t\\t\\t\\tcase 0x8b5e: return setValueT1a; // SAMPLER_2D\\n\\t\\t\\t\\t\\tcase 0x8b60: return setValueT6a; // SAMPLER_CUBE\\n\\n\\t\\t\\t\\t\\tcase 0x1404: case 0x8b56: return setValue1iv; // INT, BOOL\\n\\t\\t\\t\\t\\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\\n\\t\\t\\t\\t\\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\\n\\t\\t\\t\\t\\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t},\\n\\n\\t\\t// --- Uniform Classes ---\\n\\n\\t\\t\\tSingleUniform = function SingleUniform( id, activeInfo, addr ) {\\n\\n\\t\\t\\t\\tthis.id = id;\\n\\t\\t\\t\\tthis.addr = addr;\\n\\t\\t\\t\\tthis.setValue = getSingularSetter( activeInfo.type );\\n\\n\\t\\t\\t\\t// this.path = activeInfo.name; // DEBUG\\n\\n\\t\\t\\t},\\n\\n\\t\\t\\tPureArrayUniform = function( id, activeInfo, addr ) {\\n\\n\\t\\t\\t\\tthis.id = id;\\n\\t\\t\\t\\tthis.addr = addr;\\n\\t\\t\\t\\tthis.size = activeInfo.size;\\n\\t\\t\\t\\tthis.setValue = getPureArraySetter( activeInfo.type );\\n\\n\\t\\t\\t\\t// this.path = activeInfo.name; // DEBUG\\n\\n\\t\\t\\t},\\n\\n\\t\\t\\tStructuredUniform = function( id ) {\\n\\n\\t\\t\\t\\tthis.id = id;\\n\\n\\t\\t\\t\\tUniformContainer.call( this ); // mix-in\\n\\n\\t\\t\\t};\\n\\n\\t\\tStructuredUniform.prototype.setValue = function( gl, value ) {\\n\\n\\t\\t\\t// Note: Don't need an extra 'renderer' parameter, since samplers\\n\\t\\t\\t// are not allowed in structured uniforms.\\n\\n\\t\\t\\tvar seq = this.seq;\\n\\n\\t\\t\\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\\n\\n\\t\\t\\t\\tvar u = seq[ i ];\\n\\t\\t\\t\\tu.setValue( gl, value[ u.id ] );\\n\\n\\t\\t\\t}\\n\\n\\t\\t};\\n\\n\\t\\t// --- Top-level ---\\n\\n\\t\\t// Parser - builds up the property tree from the path strings\\n\\n\\t\\tvar RePathPart = /([\\\\w\\\\d_]+)(\\\\])?(\\\\[|\\\\.)?/g,\\n\\t\\t\\t// extracts\\n\\t\\t\\t// \\t- the identifier (member name or array index)\\n\\t\\t\\t//  - followed by an optional right bracket (found when array index)\\n\\t\\t\\t//  - followed by an optional left bracket or dot (type of subscript)\\n\\t\\t\\t//\\n\\t\\t\\t// Note: These portions can be read in a non-overlapping fashion and\\n\\t\\t\\t// allow straightforward parsing of the hierarchy that WebGL encodes\\n\\t\\t\\t// in the uniform names.\\n\\n\\t\\t\\taddUniform = function( container, uniformObject ) {\\n\\n\\t\\t\\t\\tcontainer.seq.push( uniformObject );\\n\\t\\t\\t\\tcontainer.map[ uniformObject.id ] = uniformObject;\\n\\n\\t\\t\\t},\\n\\n\\t\\t\\tparseUniform = function( activeInfo, addr, container ) {\\n\\n\\t\\t\\t\\tvar path = activeInfo.name,\\n\\t\\t\\t\\t\\tpathLength = path.length;\\n\\n\\t\\t\\t\\t// reset RegExp object, because of the early exit of a previous run\\n\\t\\t\\t\\tRePathPart.lastIndex = 0;\\n\\n\\t\\t\\t\\tfor (; ;) {\\n\\n\\t\\t\\t\\t\\tvar match = RePathPart.exec( path ),\\n\\t\\t\\t\\t\\t\\tmatchEnd = RePathPart.lastIndex,\\n\\n\\t\\t\\t\\t\\t\\tid = match[ 1 ],\\n\\t\\t\\t\\t\\t\\tidIsIndex = match[ 2 ] === ']',\\n\\t\\t\\t\\t\\t\\tsubscript = match[ 3 ];\\n\\n\\t\\t\\t\\t\\tif ( idIsIndex ) id = id | 0; // convert to integer\\n\\n\\t\\t\\t\\t\\tif ( subscript === undefined ||\\n\\t\\t\\t\\t\\t\\t\\tsubscript === '[' && matchEnd + 2 === pathLength ) {\\n\\t\\t\\t\\t\\t\\t// bare name or \\\"pure\\\" bottom-level array \\\"[0]\\\" suffix\\n\\n\\t\\t\\t\\t\\t\\taddUniform( container, subscript === undefined ?\\n\\t\\t\\t\\t\\t\\t\\t\\tnew SingleUniform( id, activeInfo, addr ) :\\n\\t\\t\\t\\t\\t\\t\\t\\tnew PureArrayUniform( id, activeInfo, addr ) );\\n\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t// step into inner node / create it in case it doesn't exist\\n\\n\\t\\t\\t\\t\\t\\tvar map = container.map,\\n\\t\\t\\t\\t\\t\\t\\tnext = map[ id ];\\n\\n\\t\\t\\t\\t\\t\\tif ( next === undefined ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tnext = new StructuredUniform( id );\\n\\t\\t\\t\\t\\t\\t\\taddUniform( container, next );\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\tcontainer = next;\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t},\\n\\n\\t\\t// Root Container\\n\\n\\t\\t\\tWebGLUniforms = function WebGLUniforms( gl, program, renderer ) {\\n\\n\\t\\t\\t\\tUniformContainer.call( this );\\n\\n\\t\\t\\t\\tthis.renderer = renderer;\\n\\n\\t\\t\\t\\tvar n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\\n\\n\\t\\t\\t\\tfor ( var i = 0; i !== n; ++ i ) {\\n\\n\\t\\t\\t\\t\\tvar info = gl.getActiveUniform( program, i ),\\n\\t\\t\\t\\t\\t\\tpath = info.name,\\n\\t\\t\\t\\t\\t\\taddr = gl.getUniformLocation( program, path );\\n\\n\\t\\t\\t\\t\\tparseUniform( info, addr, this );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t};\\n\\n\\n\\t\\tWebGLUniforms.prototype.setValue = function( gl, name, value ) {\\n\\n\\t\\t\\tvar u = this.map[ name ];\\n\\n\\t\\t\\tif ( u !== undefined ) u.setValue( gl, value, this.renderer );\\n\\n\\t\\t};\\n\\n\\t\\tWebGLUniforms.prototype.set = function( gl, object, name ) {\\n\\n\\t\\t\\tvar u = this.map[ name ];\\n\\n\\t\\t\\tif ( u !== undefined ) u.setValue( gl, object[ name ], this.renderer );\\n\\n\\t\\t};\\n\\n\\t\\tWebGLUniforms.prototype.setOptional = function( gl, object, name ) {\\n\\n\\t\\t\\tvar v = object[ name ];\\n\\n\\t\\t\\tif ( v !== undefined ) this.setValue( gl, name, v );\\n\\n\\t\\t};\\n\\n\\n\\t\\t// Static interface\\n\\n\\t\\tWebGLUniforms.upload = function( gl, seq, values, renderer ) {\\n\\n\\t\\t\\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\\n\\n\\t\\t\\t\\tvar u = seq[ i ],\\n\\t\\t\\t\\t\\tv = values[ u.id ];\\n\\n\\t\\t\\t\\tif ( v.needsUpdate !== false ) {\\n\\t\\t\\t\\t\\t// note: always updating when .needsUpdate is undefined\\n\\n\\t\\t\\t\\t\\tu.setValue( gl, v.value, renderer );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t};\\n\\n\\t\\tWebGLUniforms.seqWithValue = function( seq, values ) {\\n\\n\\t\\t\\tvar r = [];\\n\\n\\t\\t\\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\\n\\n\\t\\t\\t\\tvar u = seq[ i ];\\n\\t\\t\\t\\tif ( u.id in values ) r.push( u );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn r;\\n\\n\\t\\t};\\n\\n\\t\\tWebGLUniforms.splitDynamic = function( seq, values ) {\\n\\n\\t\\t\\tvar r = null,\\n\\t\\t\\t\\tn = seq.length,\\n\\t\\t\\t\\tw = 0;\\n\\n\\t\\t\\tfor ( var i = 0; i !== n; ++ i ) {\\n\\n\\t\\t\\t\\tvar u = seq[ i ],\\n\\t\\t\\t\\t\\tv = values[ u.id ];\\n\\n\\t\\t\\t\\tif ( v && v.dynamic === true ) {\\n\\n\\t\\t\\t\\t\\tif ( r === null ) r = [];\\n\\t\\t\\t\\t\\tr.push( u );\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t// in-place compact 'seq', removing the matches\\n\\t\\t\\t\\t\\tif ( w < i ) seq[ w ] = u;\\n\\t\\t\\t\\t\\t++ w;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( w < n ) seq.length = w;\\n\\n\\t\\t\\treturn r;\\n\\n\\t\\t};\\n\\n\\t\\tWebGLUniforms.evalDynamic = function( seq, values, object, camera ) {\\n\\n\\t\\t\\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\\n\\n\\t\\t\\t\\tvar v = values[ seq[ i ].id ],\\n\\t\\t\\t\\t\\tf = v.onUpdateCallback;\\n\\n\\t\\t\\t\\tif ( f !== undefined ) f.call( v, object, camera );\\n\\n\\t\\t\\t}\\n\\n\\t\\t};\\n\\n\\t\\treturn WebGLUniforms;\\n\\n\\t} )();\\n\\n\\t// File:src/renderers/webgl/plugins/LensFlarePlugin.js\\n\\n\\t/**\\n\\t * @author mikael emtinger / http://gomo.se/\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t */\\n\\n\\tTHREE.LensFlarePlugin = function ( renderer, flares ) {\\n\\n\\t\\tvar gl = renderer.context;\\n\\t\\tvar state = renderer.state;\\n\\n\\t\\tvar vertexBuffer, elementBuffer;\\n\\t\\tvar shader, program, attributes, uniforms;\\n\\n\\t\\tvar tempTexture, occlusionTexture;\\n\\n\\t\\tfunction init() {\\n\\n\\t\\t\\tvar vertices = new Float32Array( [\\n\\t\\t\\t\\t- 1, - 1,  0, 0,\\n\\t\\t\\t\\t 1, - 1,  1, 0,\\n\\t\\t\\t\\t 1,  1,  1, 1,\\n\\t\\t\\t\\t- 1,  1,  0, 1\\n\\t\\t\\t] );\\n\\n\\t\\t\\tvar faces = new Uint16Array( [\\n\\t\\t\\t\\t0, 1, 2,\\n\\t\\t\\t\\t0, 2, 3\\n\\t\\t\\t] );\\n\\n\\t\\t\\t// buffers\\n\\n\\t\\t\\tvertexBuffer     = gl.createBuffer();\\n\\t\\t\\telementBuffer    = gl.createBuffer();\\n\\n\\t\\t\\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\\n\\t\\t\\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\\n\\n\\t\\t\\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\\n\\t\\t\\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\\n\\n\\t\\t\\t// textures\\n\\n\\t\\t\\ttempTexture      = gl.createTexture();\\n\\t\\t\\tocclusionTexture = gl.createTexture();\\n\\n\\t\\t\\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\\n\\t\\t\\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGB, 16, 16, 0, gl.RGB, gl.UNSIGNED_BYTE, null );\\n\\t\\t\\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\\n\\t\\t\\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\\n\\t\\t\\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\\n\\t\\t\\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\\n\\n\\t\\t\\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\\n\\t\\t\\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGBA, 16, 16, 0, gl.RGBA, gl.UNSIGNED_BYTE, null );\\n\\t\\t\\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\\n\\t\\t\\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\\n\\t\\t\\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\\n\\t\\t\\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\\n\\n\\t\\t\\tshader = {\\n\\n\\t\\t\\t\\tvertexShader: [\\n\\n\\t\\t\\t\\t\\t\\\"uniform lowp int renderType;\\\",\\n\\n\\t\\t\\t\\t\\t\\\"uniform vec3 screenPosition;\\\",\\n\\t\\t\\t\\t\\t\\\"uniform vec2 scale;\\\",\\n\\t\\t\\t\\t\\t\\\"uniform float rotation;\\\",\\n\\n\\t\\t\\t\\t\\t\\\"uniform sampler2D occlusionMap;\\\",\\n\\n\\t\\t\\t\\t\\t\\\"attribute vec2 position;\\\",\\n\\t\\t\\t\\t\\t\\\"attribute vec2 uv;\\\",\\n\\n\\t\\t\\t\\t\\t\\\"varying vec2 vUV;\\\",\\n\\t\\t\\t\\t\\t\\\"varying float vVisibility;\\\",\\n\\n\\t\\t\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t\\t\\t\\\"vUV = uv;\\\",\\n\\n\\t\\t\\t\\t\\t\\t\\\"vec2 pos = position;\\\",\\n\\n\\t\\t\\t\\t\\t\\t\\\"if ( renderType == 2 ) {\\\",\\n\\n\\t\\t\\t\\t\\t\\t\\t\\\"vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\\\",\\n\\n\\t\\t\\t\\t\\t\\t\\t\\\"vVisibility =        visibility.r / 9.0;\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"vVisibility *= 1.0 - visibility.g / 9.0;\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"vVisibility *=       visibility.b / 9.0;\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"vVisibility *= 1.0 - visibility.a / 9.0;\\\",\\n\\n\\t\\t\\t\\t\\t\\t\\t\\\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\\\",\\n\\n\\t\\t\\t\\t\\t\\t\\\"}\\\",\\n\\n\\t\\t\\t\\t\\t\\t\\\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\\\",\\n\\n\\t\\t\\t\\t\\t\\\"}\\\"\\n\\n\\t\\t\\t\\t].join( \\\"\\\\n\\\" ),\\n\\n\\t\\t\\t\\tfragmentShader: [\\n\\n\\t\\t\\t\\t\\t\\\"uniform lowp int renderType;\\\",\\n\\n\\t\\t\\t\\t\\t\\\"uniform sampler2D map;\\\",\\n\\t\\t\\t\\t\\t\\\"uniform float opacity;\\\",\\n\\t\\t\\t\\t\\t\\\"uniform vec3 color;\\\",\\n\\n\\t\\t\\t\\t\\t\\\"varying vec2 vUV;\\\",\\n\\t\\t\\t\\t\\t\\\"varying float vVisibility;\\\",\\n\\n\\t\\t\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t\\t\\t// pink square\\n\\n\\t\\t\\t\\t\\t\\t\\\"if ( renderType == 0 ) {\\\",\\n\\n\\t\\t\\t\\t\\t\\t\\t\\\"gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\\\",\\n\\n\\t\\t\\t\\t\\t\\t// restore\\n\\n\\t\\t\\t\\t\\t\\t\\\"} else if ( renderType == 1 ) {\\\",\\n\\n\\t\\t\\t\\t\\t\\t\\t\\\"gl_FragColor = texture2D( map, vUV );\\\",\\n\\n\\t\\t\\t\\t\\t\\t// flare\\n\\n\\t\\t\\t\\t\\t\\t\\\"} else {\\\",\\n\\n\\t\\t\\t\\t\\t\\t\\t\\\"vec4 texture = texture2D( map, vUV );\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"texture.a *= opacity * vVisibility;\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"gl_FragColor = texture;\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"gl_FragColor.rgb *= color;\\\",\\n\\n\\t\\t\\t\\t\\t\\t\\\"}\\\",\\n\\n\\t\\t\\t\\t\\t\\\"}\\\"\\n\\n\\t\\t\\t\\t].join( \\\"\\\\n\\\" )\\n\\n\\t\\t\\t};\\n\\n\\t\\t\\tprogram = createProgram( shader );\\n\\n\\t\\t\\tattributes = {\\n\\t\\t\\t\\tvertex: gl.getAttribLocation ( program, \\\"position\\\" ),\\n\\t\\t\\t\\tuv:     gl.getAttribLocation ( program, \\\"uv\\\" )\\n\\t\\t\\t};\\n\\n\\t\\t\\tuniforms = {\\n\\t\\t\\t\\trenderType:     gl.getUniformLocation( program, \\\"renderType\\\" ),\\n\\t\\t\\t\\tmap:            gl.getUniformLocation( program, \\\"map\\\" ),\\n\\t\\t\\t\\tocclusionMap:   gl.getUniformLocation( program, \\\"occlusionMap\\\" ),\\n\\t\\t\\t\\topacity:        gl.getUniformLocation( program, \\\"opacity\\\" ),\\n\\t\\t\\t\\tcolor:          gl.getUniformLocation( program, \\\"color\\\" ),\\n\\t\\t\\t\\tscale:          gl.getUniformLocation( program, \\\"scale\\\" ),\\n\\t\\t\\t\\trotation:       gl.getUniformLocation( program, \\\"rotation\\\" ),\\n\\t\\t\\t\\tscreenPosition: gl.getUniformLocation( program, \\\"screenPosition\\\" )\\n\\t\\t\\t};\\n\\n\\t\\t}\\n\\n\\t\\t/*\\n\\t\\t * Render lens flares\\n\\t\\t * Method: renders 16x16 0xff00ff-colored points scattered over the light source area,\\n\\t\\t *         reads these back and calculates occlusion.\\n\\t\\t */\\n\\n\\t\\tthis.render = function ( scene, camera, viewport ) {\\n\\n\\t\\t\\tif ( flares.length === 0 ) return;\\n\\n\\t\\t\\tvar tempPosition = new THREE.Vector3();\\n\\n\\t\\t\\tvar invAspect = viewport.w / viewport.z,\\n\\t\\t\\t\\thalfViewportWidth = viewport.z * 0.5,\\n\\t\\t\\t\\thalfViewportHeight = viewport.w * 0.5;\\n\\n\\t\\t\\tvar size = 16 / viewport.w,\\n\\t\\t\\t\\tscale = new THREE.Vector2( size * invAspect, size );\\n\\n\\t\\t\\tvar screenPosition = new THREE.Vector3( 1, 1, 0 ),\\n\\t\\t\\t\\tscreenPositionPixels = new THREE.Vector2( 1, 1 );\\n\\n\\t\\t\\tvar validArea = new THREE.Box2();\\n\\n\\t\\t\\tvalidArea.min.set( 0, 0 );\\n\\t\\t\\tvalidArea.max.set( viewport.z - 16, viewport.w - 16 );\\n\\n\\t\\t\\tif ( program === undefined ) {\\n\\n\\t\\t\\t\\tinit();\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tgl.useProgram( program );\\n\\n\\t\\t\\tstate.initAttributes();\\n\\t\\t\\tstate.enableAttribute( attributes.vertex );\\n\\t\\t\\tstate.enableAttribute( attributes.uv );\\n\\t\\t\\tstate.disableUnusedAttributes();\\n\\n\\t\\t\\t// loop through all lens flares to update their occlusion and positions\\n\\t\\t\\t// setup gl and common used attribs/uniforms\\n\\n\\t\\t\\tgl.uniform1i( uniforms.occlusionMap, 0 );\\n\\t\\t\\tgl.uniform1i( uniforms.map, 1 );\\n\\n\\t\\t\\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\\n\\t\\t\\tgl.vertexAttribPointer( attributes.vertex, 2, gl.FLOAT, false, 2 * 8, 0 );\\n\\t\\t\\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\\n\\n\\t\\t\\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\\n\\n\\t\\t\\tstate.disable( gl.CULL_FACE );\\n\\t\\t\\tstate.setDepthWrite( false );\\n\\n\\t\\t\\tfor ( var i = 0, l = flares.length; i < l; i ++ ) {\\n\\n\\t\\t\\t\\tsize = 16 / viewport.w;\\n\\t\\t\\t\\tscale.set( size * invAspect, size );\\n\\n\\t\\t\\t\\t// calc object screen position\\n\\n\\t\\t\\t\\tvar flare = flares[ i ];\\n\\n\\t\\t\\t\\ttempPosition.set( flare.matrixWorld.elements[ 12 ], flare.matrixWorld.elements[ 13 ], flare.matrixWorld.elements[ 14 ] );\\n\\n\\t\\t\\t\\ttempPosition.applyMatrix4( camera.matrixWorldInverse );\\n\\t\\t\\t\\ttempPosition.applyProjection( camera.projectionMatrix );\\n\\n\\t\\t\\t\\t// setup arrays for gl programs\\n\\n\\t\\t\\t\\tscreenPosition.copy( tempPosition );\\n\\n\\t\\t\\t\\t// horizontal and vertical coordinate of the lower left corner of the pixels to copy\\n\\n\\t\\t\\t\\tscreenPositionPixels.x = viewport.x + ( screenPosition.x * halfViewportWidth ) + halfViewportWidth - 8;\\n\\t\\t\\t\\tscreenPositionPixels.y = viewport.y + ( screenPosition.y * halfViewportHeight ) + halfViewportHeight - 8;\\n\\n\\t\\t\\t\\t// screen cull\\n\\n\\t\\t\\t\\tif ( validArea.containsPoint( screenPositionPixels ) === true ) {\\n\\n\\t\\t\\t\\t\\t// save current RGB to temp texture\\n\\n\\t\\t\\t\\t\\tstate.activeTexture( gl.TEXTURE0 );\\n\\t\\t\\t\\t\\tstate.bindTexture( gl.TEXTURE_2D, null );\\n\\t\\t\\t\\t\\tstate.activeTexture( gl.TEXTURE1 );\\n\\t\\t\\t\\t\\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\\n\\t\\t\\t\\t\\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGB, screenPositionPixels.x, screenPositionPixels.y, 16, 16, 0 );\\n\\n\\n\\t\\t\\t\\t\\t// render pink quad\\n\\n\\t\\t\\t\\t\\tgl.uniform1i( uniforms.renderType, 0 );\\n\\t\\t\\t\\t\\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\\n\\t\\t\\t\\t\\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\\n\\n\\t\\t\\t\\t\\tstate.disable( gl.BLEND );\\n\\t\\t\\t\\t\\tstate.enable( gl.DEPTH_TEST );\\n\\n\\t\\t\\t\\t\\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\\n\\n\\n\\t\\t\\t\\t\\t// copy result to occlusionMap\\n\\n\\t\\t\\t\\t\\tstate.activeTexture( gl.TEXTURE0 );\\n\\t\\t\\t\\t\\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\\n\\t\\t\\t\\t\\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGBA, screenPositionPixels.x, screenPositionPixels.y, 16, 16, 0 );\\n\\n\\n\\t\\t\\t\\t\\t// restore graphics\\n\\n\\t\\t\\t\\t\\tgl.uniform1i( uniforms.renderType, 1 );\\n\\t\\t\\t\\t\\tstate.disable( gl.DEPTH_TEST );\\n\\n\\t\\t\\t\\t\\tstate.activeTexture( gl.TEXTURE1 );\\n\\t\\t\\t\\t\\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\\n\\t\\t\\t\\t\\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\\n\\n\\n\\t\\t\\t\\t\\t// update object positions\\n\\n\\t\\t\\t\\t\\tflare.positionScreen.copy( screenPosition );\\n\\n\\t\\t\\t\\t\\tif ( flare.customUpdateCallback ) {\\n\\n\\t\\t\\t\\t\\t\\tflare.customUpdateCallback( flare );\\n\\n\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\tflare.updateLensFlares();\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t// render flares\\n\\n\\t\\t\\t\\t\\tgl.uniform1i( uniforms.renderType, 2 );\\n\\t\\t\\t\\t\\tstate.enable( gl.BLEND );\\n\\n\\t\\t\\t\\t\\tfor ( var j = 0, jl = flare.lensFlares.length; j < jl; j ++ ) {\\n\\n\\t\\t\\t\\t\\t\\tvar sprite = flare.lensFlares[ j ];\\n\\n\\t\\t\\t\\t\\t\\tif ( sprite.opacity > 0.001 && sprite.scale > 0.001 ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tscreenPosition.x = sprite.x;\\n\\t\\t\\t\\t\\t\\t\\tscreenPosition.y = sprite.y;\\n\\t\\t\\t\\t\\t\\t\\tscreenPosition.z = sprite.z;\\n\\n\\t\\t\\t\\t\\t\\t\\tsize = sprite.size * sprite.scale / viewport.w;\\n\\n\\t\\t\\t\\t\\t\\t\\tscale.x = size * invAspect;\\n\\t\\t\\t\\t\\t\\t\\tscale.y = size;\\n\\n\\t\\t\\t\\t\\t\\t\\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\\n\\t\\t\\t\\t\\t\\t\\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\\n\\t\\t\\t\\t\\t\\t\\tgl.uniform1f( uniforms.rotation, sprite.rotation );\\n\\n\\t\\t\\t\\t\\t\\t\\tgl.uniform1f( uniforms.opacity, sprite.opacity );\\n\\t\\t\\t\\t\\t\\t\\tgl.uniform3f( uniforms.color, sprite.color.r, sprite.color.g, sprite.color.b );\\n\\n\\t\\t\\t\\t\\t\\t\\tstate.setBlending( sprite.blending, sprite.blendEquation, sprite.blendSrc, sprite.blendDst );\\n\\t\\t\\t\\t\\t\\t\\trenderer.setTexture2D( sprite.texture, 1 );\\n\\n\\t\\t\\t\\t\\t\\t\\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t// restore gl\\n\\n\\t\\t\\tstate.enable( gl.CULL_FACE );\\n\\t\\t\\tstate.enable( gl.DEPTH_TEST );\\n\\t\\t\\tstate.setDepthWrite( true );\\n\\n\\t\\t\\trenderer.resetGLState();\\n\\n\\t\\t};\\n\\n\\t\\tfunction createProgram ( shader ) {\\n\\n\\t\\t\\tvar program = gl.createProgram();\\n\\n\\t\\t\\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\\n\\t\\t\\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\\n\\n\\t\\t\\tvar prefix = \\\"precision \\\" + renderer.getPrecision() + \\\" float;\\\\n\\\";\\n\\n\\t\\t\\tgl.shaderSource( fragmentShader, prefix + shader.fragmentShader );\\n\\t\\t\\tgl.shaderSource( vertexShader, prefix + shader.vertexShader );\\n\\n\\t\\t\\tgl.compileShader( fragmentShader );\\n\\t\\t\\tgl.compileShader( vertexShader );\\n\\n\\t\\t\\tgl.attachShader( program, fragmentShader );\\n\\t\\t\\tgl.attachShader( program, vertexShader );\\n\\n\\t\\t\\tgl.linkProgram( program );\\n\\n\\t\\t\\treturn program;\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\t// File:src/renderers/webgl/plugins/SpritePlugin.js\\n\\n\\t/**\\n\\t * @author mikael emtinger / http://gomo.se/\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t */\\n\\n\\tTHREE.SpritePlugin = function ( renderer, sprites ) {\\n\\n\\t\\tvar gl = renderer.context;\\n\\t\\tvar state = renderer.state;\\n\\n\\t\\tvar vertexBuffer, elementBuffer;\\n\\t\\tvar program, attributes, uniforms;\\n\\n\\t\\tvar texture;\\n\\n\\t\\t// decompose matrixWorld\\n\\n\\t\\tvar spritePosition = new THREE.Vector3();\\n\\t\\tvar spriteRotation = new THREE.Quaternion();\\n\\t\\tvar spriteScale = new THREE.Vector3();\\n\\n\\t\\tfunction init() {\\n\\n\\t\\t\\tvar vertices = new Float32Array( [\\n\\t\\t\\t\\t- 0.5, - 0.5,  0, 0,\\n\\t\\t\\t\\t  0.5, - 0.5,  1, 0,\\n\\t\\t\\t\\t  0.5,   0.5,  1, 1,\\n\\t\\t\\t\\t- 0.5,   0.5,  0, 1\\n\\t\\t\\t] );\\n\\n\\t\\t\\tvar faces = new Uint16Array( [\\n\\t\\t\\t\\t0, 1, 2,\\n\\t\\t\\t\\t0, 2, 3\\n\\t\\t\\t] );\\n\\n\\t\\t\\tvertexBuffer  = gl.createBuffer();\\n\\t\\t\\telementBuffer = gl.createBuffer();\\n\\n\\t\\t\\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\\n\\t\\t\\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\\n\\n\\t\\t\\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\\n\\t\\t\\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\\n\\n\\t\\t\\tprogram = createProgram();\\n\\n\\t\\t\\tattributes = {\\n\\t\\t\\t\\tposition:\\t\\t\\tgl.getAttribLocation ( program, 'position' ),\\n\\t\\t\\t\\tuv:\\t\\t\\t\\t\\tgl.getAttribLocation ( program, 'uv' )\\n\\t\\t\\t};\\n\\n\\t\\t\\tuniforms = {\\n\\t\\t\\t\\tuvOffset:\\t\\t\\tgl.getUniformLocation( program, 'uvOffset' ),\\n\\t\\t\\t\\tuvScale:\\t\\t\\tgl.getUniformLocation( program, 'uvScale' ),\\n\\n\\t\\t\\t\\trotation:\\t\\t\\tgl.getUniformLocation( program, 'rotation' ),\\n\\t\\t\\t\\tscale:\\t\\t\\t\\tgl.getUniformLocation( program, 'scale' ),\\n\\n\\t\\t\\t\\tcolor:\\t\\t\\t\\tgl.getUniformLocation( program, 'color' ),\\n\\t\\t\\t\\tmap:\\t\\t\\t\\tgl.getUniformLocation( program, 'map' ),\\n\\t\\t\\t\\topacity:\\t\\t\\tgl.getUniformLocation( program, 'opacity' ),\\n\\n\\t\\t\\t\\tmodelViewMatrix: \\tgl.getUniformLocation( program, 'modelViewMatrix' ),\\n\\t\\t\\t\\tprojectionMatrix:\\tgl.getUniformLocation( program, 'projectionMatrix' ),\\n\\n\\t\\t\\t\\tfogType:\\t\\t\\tgl.getUniformLocation( program, 'fogType' ),\\n\\t\\t\\t\\tfogDensity:\\t\\t\\tgl.getUniformLocation( program, 'fogDensity' ),\\n\\t\\t\\t\\tfogNear:\\t\\t\\tgl.getUniformLocation( program, 'fogNear' ),\\n\\t\\t\\t\\tfogFar:\\t\\t\\t\\tgl.getUniformLocation( program, 'fogFar' ),\\n\\t\\t\\t\\tfogColor:\\t\\t\\tgl.getUniformLocation( program, 'fogColor' ),\\n\\n\\t\\t\\t\\talphaTest:\\t\\t\\tgl.getUniformLocation( program, 'alphaTest' )\\n\\t\\t\\t};\\n\\n\\t\\t\\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\\n\\t\\t\\tcanvas.width = 8;\\n\\t\\t\\tcanvas.height = 8;\\n\\n\\t\\t\\tvar context = canvas.getContext( '2d' );\\n\\t\\t\\tcontext.fillStyle = 'white';\\n\\t\\t\\tcontext.fillRect( 0, 0, 8, 8 );\\n\\n\\t\\t\\ttexture = new THREE.Texture( canvas );\\n\\t\\t\\ttexture.needsUpdate = true;\\n\\n\\t\\t}\\n\\n\\t\\tthis.render = function ( scene, camera ) {\\n\\n\\t\\t\\tif ( sprites.length === 0 ) return;\\n\\n\\t\\t\\t// setup gl\\n\\n\\t\\t\\tif ( program === undefined ) {\\n\\n\\t\\t\\t\\tinit();\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tgl.useProgram( program );\\n\\n\\t\\t\\tstate.initAttributes();\\n\\t\\t\\tstate.enableAttribute( attributes.position );\\n\\t\\t\\tstate.enableAttribute( attributes.uv );\\n\\t\\t\\tstate.disableUnusedAttributes();\\n\\n\\t\\t\\tstate.disable( gl.CULL_FACE );\\n\\t\\t\\tstate.enable( gl.BLEND );\\n\\n\\t\\t\\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\\n\\t\\t\\tgl.vertexAttribPointer( attributes.position, 2, gl.FLOAT, false, 2 * 8, 0 );\\n\\t\\t\\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\\n\\n\\t\\t\\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\\n\\n\\t\\t\\tgl.uniformMatrix4fv( uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\\n\\n\\t\\t\\tstate.activeTexture( gl.TEXTURE0 );\\n\\t\\t\\tgl.uniform1i( uniforms.map, 0 );\\n\\n\\t\\t\\tvar oldFogType = 0;\\n\\t\\t\\tvar sceneFogType = 0;\\n\\t\\t\\tvar fog = scene.fog;\\n\\n\\t\\t\\tif ( fog ) {\\n\\n\\t\\t\\t\\tgl.uniform3f( uniforms.fogColor, fog.color.r, fog.color.g, fog.color.b );\\n\\n\\t\\t\\t\\tif ( fog instanceof THREE.Fog ) {\\n\\n\\t\\t\\t\\t\\tgl.uniform1f( uniforms.fogNear, fog.near );\\n\\t\\t\\t\\t\\tgl.uniform1f( uniforms.fogFar, fog.far );\\n\\n\\t\\t\\t\\t\\tgl.uniform1i( uniforms.fogType, 1 );\\n\\t\\t\\t\\t\\toldFogType = 1;\\n\\t\\t\\t\\t\\tsceneFogType = 1;\\n\\n\\t\\t\\t\\t} else if ( fog instanceof THREE.FogExp2 ) {\\n\\n\\t\\t\\t\\t\\tgl.uniform1f( uniforms.fogDensity, fog.density );\\n\\n\\t\\t\\t\\t\\tgl.uniform1i( uniforms.fogType, 2 );\\n\\t\\t\\t\\t\\toldFogType = 2;\\n\\t\\t\\t\\t\\tsceneFogType = 2;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\tgl.uniform1i( uniforms.fogType, 0 );\\n\\t\\t\\t\\toldFogType = 0;\\n\\t\\t\\t\\tsceneFogType = 0;\\n\\n\\t\\t\\t}\\n\\n\\n\\t\\t\\t// update positions and sort\\n\\n\\t\\t\\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\\n\\n\\t\\t\\t\\tvar sprite = sprites[ i ];\\n\\n\\t\\t\\t\\tsprite.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, sprite.matrixWorld );\\n\\t\\t\\t\\tsprite.z = - sprite.modelViewMatrix.elements[ 14 ];\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tsprites.sort( painterSortStable );\\n\\n\\t\\t\\t// render all sprites\\n\\n\\t\\t\\tvar scale = [];\\n\\n\\t\\t\\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\\n\\n\\t\\t\\t\\tvar sprite = sprites[ i ];\\n\\t\\t\\t\\tvar material = sprite.material;\\n\\n\\t\\t\\t\\tif ( material.visible === false ) continue;\\n\\n\\t\\t\\t\\tgl.uniform1f( uniforms.alphaTest, material.alphaTest );\\n\\t\\t\\t\\tgl.uniformMatrix4fv( uniforms.modelViewMatrix, false, sprite.modelViewMatrix.elements );\\n\\n\\t\\t\\t\\tsprite.matrixWorld.decompose( spritePosition, spriteRotation, spriteScale );\\n\\n\\t\\t\\t\\tscale[ 0 ] = spriteScale.x;\\n\\t\\t\\t\\tscale[ 1 ] = spriteScale.y;\\n\\n\\t\\t\\t\\tvar fogType = 0;\\n\\n\\t\\t\\t\\tif ( scene.fog && material.fog ) {\\n\\n\\t\\t\\t\\t\\tfogType = sceneFogType;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( oldFogType !== fogType ) {\\n\\n\\t\\t\\t\\t\\tgl.uniform1i( uniforms.fogType, fogType );\\n\\t\\t\\t\\t\\toldFogType = fogType;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( material.map !== null ) {\\n\\n\\t\\t\\t\\t\\tgl.uniform2f( uniforms.uvOffset, material.map.offset.x, material.map.offset.y );\\n\\t\\t\\t\\t\\tgl.uniform2f( uniforms.uvScale, material.map.repeat.x, material.map.repeat.y );\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\tgl.uniform2f( uniforms.uvOffset, 0, 0 );\\n\\t\\t\\t\\t\\tgl.uniform2f( uniforms.uvScale, 1, 1 );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tgl.uniform1f( uniforms.opacity, material.opacity );\\n\\t\\t\\t\\tgl.uniform3f( uniforms.color, material.color.r, material.color.g, material.color.b );\\n\\n\\t\\t\\t\\tgl.uniform1f( uniforms.rotation, material.rotation );\\n\\t\\t\\t\\tgl.uniform2fv( uniforms.scale, scale );\\n\\n\\t\\t\\t\\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst );\\n\\t\\t\\t\\tstate.setDepthTest( material.depthTest );\\n\\t\\t\\t\\tstate.setDepthWrite( material.depthWrite );\\n\\n\\t\\t\\t\\tif ( material.map ) {\\n\\n\\t\\t\\t\\t\\trenderer.setTexture2D( material.map, 0 );\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\trenderer.setTexture2D( texture, 0 );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t// restore gl\\n\\n\\t\\t\\tstate.enable( gl.CULL_FACE );\\n\\n\\t\\t\\trenderer.resetGLState();\\n\\n\\t\\t};\\n\\n\\t\\tfunction createProgram () {\\n\\n\\t\\t\\tvar program = gl.createProgram();\\n\\n\\t\\t\\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\\n\\t\\t\\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\\n\\n\\t\\t\\tgl.shaderSource( vertexShader, [\\n\\n\\t\\t\\t\\t'precision ' + renderer.getPrecision() + ' float;',\\n\\n\\t\\t\\t\\t'uniform mat4 modelViewMatrix;',\\n\\t\\t\\t\\t'uniform mat4 projectionMatrix;',\\n\\t\\t\\t\\t'uniform float rotation;',\\n\\t\\t\\t\\t'uniform vec2 scale;',\\n\\t\\t\\t\\t'uniform vec2 uvOffset;',\\n\\t\\t\\t\\t'uniform vec2 uvScale;',\\n\\n\\t\\t\\t\\t'attribute vec2 position;',\\n\\t\\t\\t\\t'attribute vec2 uv;',\\n\\n\\t\\t\\t\\t'varying vec2 vUV;',\\n\\n\\t\\t\\t\\t'void main() {',\\n\\n\\t\\t\\t\\t\\t'vUV = uvOffset + uv * uvScale;',\\n\\n\\t\\t\\t\\t\\t'vec2 alignedPosition = position * scale;',\\n\\n\\t\\t\\t\\t\\t'vec2 rotatedPosition;',\\n\\t\\t\\t\\t\\t'rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;',\\n\\t\\t\\t\\t\\t'rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;',\\n\\n\\t\\t\\t\\t\\t'vec4 finalPosition;',\\n\\n\\t\\t\\t\\t\\t'finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );',\\n\\t\\t\\t\\t\\t'finalPosition.xy += rotatedPosition;',\\n\\t\\t\\t\\t\\t'finalPosition = projectionMatrix * finalPosition;',\\n\\n\\t\\t\\t\\t\\t'gl_Position = finalPosition;',\\n\\n\\t\\t\\t\\t'}'\\n\\n\\t\\t\\t].join( '\\\\n' ) );\\n\\n\\t\\t\\tgl.shaderSource( fragmentShader, [\\n\\n\\t\\t\\t\\t'precision ' + renderer.getPrecision() + ' float;',\\n\\n\\t\\t\\t\\t'uniform vec3 color;',\\n\\t\\t\\t\\t'uniform sampler2D map;',\\n\\t\\t\\t\\t'uniform float opacity;',\\n\\n\\t\\t\\t\\t'uniform int fogType;',\\n\\t\\t\\t\\t'uniform vec3 fogColor;',\\n\\t\\t\\t\\t'uniform float fogDensity;',\\n\\t\\t\\t\\t'uniform float fogNear;',\\n\\t\\t\\t\\t'uniform float fogFar;',\\n\\t\\t\\t\\t'uniform float alphaTest;',\\n\\n\\t\\t\\t\\t'varying vec2 vUV;',\\n\\n\\t\\t\\t\\t'void main() {',\\n\\n\\t\\t\\t\\t\\t'vec4 texture = texture2D( map, vUV );',\\n\\n\\t\\t\\t\\t\\t'if ( texture.a < alphaTest ) discard;',\\n\\n\\t\\t\\t\\t\\t'gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );',\\n\\n\\t\\t\\t\\t\\t'if ( fogType > 0 ) {',\\n\\n\\t\\t\\t\\t\\t\\t'float depth = gl_FragCoord.z / gl_FragCoord.w;',\\n\\t\\t\\t\\t\\t\\t'float fogFactor = 0.0;',\\n\\n\\t\\t\\t\\t\\t\\t'if ( fogType == 1 ) {',\\n\\n\\t\\t\\t\\t\\t\\t\\t'fogFactor = smoothstep( fogNear, fogFar, depth );',\\n\\n\\t\\t\\t\\t\\t\\t'} else {',\\n\\n\\t\\t\\t\\t\\t\\t\\t'const float LOG2 = 1.442695;',\\n\\t\\t\\t\\t\\t\\t\\t'fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );',\\n\\t\\t\\t\\t\\t\\t\\t'fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );',\\n\\n\\t\\t\\t\\t\\t\\t'}',\\n\\n\\t\\t\\t\\t\\t\\t'gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );',\\n\\n\\t\\t\\t\\t\\t'}',\\n\\n\\t\\t\\t\\t'}'\\n\\n\\t\\t\\t].join( '\\\\n' ) );\\n\\n\\t\\t\\tgl.compileShader( vertexShader );\\n\\t\\t\\tgl.compileShader( fragmentShader );\\n\\n\\t\\t\\tgl.attachShader( program, vertexShader );\\n\\t\\t\\tgl.attachShader( program, fragmentShader );\\n\\n\\t\\t\\tgl.linkProgram( program );\\n\\n\\t\\t\\treturn program;\\n\\n\\t\\t}\\n\\n\\t\\tfunction painterSortStable ( a, b ) {\\n\\n\\t\\t\\tif ( a.renderOrder !== b.renderOrder ) {\\n\\n\\t\\t\\t\\treturn a.renderOrder - b.renderOrder;\\n\\n\\t\\t\\t} else if ( a.z !== b.z ) {\\n\\n\\t\\t\\t\\treturn b.z - a.z;\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\treturn b.id - a.id;\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\t// File:src/Three.Legacy.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t */\\n\\n\\tObject.assign( THREE, {\\n\\t\\tFace4: function ( a, b, c, d, normal, color, materialIndex ) {\\n\\t\\t\\tconsole.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );\\n\\t\\t\\treturn new THREE.Face3( a, b, c, normal, color, materialIndex );\\n\\t\\t},\\n\\t\\tLineStrip: 0,\\n\\t\\tLinePieces: 1,\\n\\t\\tMeshFaceMaterial: THREE.MultiMaterial,\\n\\t\\tPointCloud: function ( geometry, material ) {\\n\\t\\t\\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\\n\\t\\t\\treturn new THREE.Points( geometry, material );\\n\\t\\t},\\n\\t\\tParticle: THREE.Sprite,\\n\\t\\tParticleSystem: function ( geometry, material ) {\\n\\t\\t\\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\\n\\t\\t\\treturn new THREE.Points( geometry, material );\\n\\t\\t},\\n\\t\\tPointCloudMaterial: function ( parameters ) {\\n\\t\\t\\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\\n\\t\\t\\treturn new THREE.PointsMaterial( parameters );\\n\\t\\t},\\n\\t\\tParticleBasicMaterial: function ( parameters ) {\\n\\t\\t\\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\\n\\t\\t\\treturn new THREE.PointsMaterial( parameters );\\n\\t\\t},\\n\\t\\tParticleSystemMaterial: function ( parameters ) {\\n\\t\\t\\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\\n\\t\\t\\treturn new THREE.PointsMaterial( parameters );\\n\\t\\t},\\n\\t\\tVertex: function ( x, y, z ) {\\n\\t\\t\\tconsole.warn( 'THREE.Vertex has been removed. Use THREE.Vector3 instead.' );\\n\\t\\t\\treturn new THREE.Vector3( x, y, z );\\n\\t\\t}\\n\\t} );\\n\\n\\t//\\n\\n\\tObject.assign( THREE.Box2.prototype, {\\n\\t\\tempty: function () {\\n\\t\\t\\tconsole.warn( 'THREE.Box2: .empty() has been renamed to .isEmpty().' );\\n\\t\\t\\treturn this.isEmpty();\\n\\t\\t},\\n\\t\\tisIntersectionBox: function ( box ) {\\n\\t\\t\\tconsole.warn( 'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().' );\\n\\t\\t\\treturn this.intersectsBox( box );\\n\\t\\t}\\n\\t} );\\n\\n\\tObject.assign( THREE.Box3.prototype, {\\n\\t\\tempty: function () {\\n\\t\\t\\tconsole.warn( 'THREE.Box3: .empty() has been renamed to .isEmpty().' );\\n\\t\\t\\treturn this.isEmpty();\\n\\t\\t},\\n\\t\\tisIntersectionBox: function ( box ) {\\n\\t\\t\\tconsole.warn( 'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().' );\\n\\t\\t\\treturn this.intersectsBox( box );\\n\\t\\t},\\n\\t\\tisIntersectionSphere: function ( sphere ) {\\n\\t\\t\\tconsole.warn( 'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\\n\\t\\t\\treturn this.intersectsSphere( sphere );\\n\\t\\t}\\n\\t} );\\n\\n\\tObject.assign( THREE.Matrix3.prototype, {\\n\\t\\tmultiplyVector3: function ( vector ) {\\n\\t\\t\\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\\n\\t\\t\\treturn vector.applyMatrix3( this );\\n\\t\\t},\\n\\t\\tmultiplyVector3Array: function ( a ) {\\n\\t\\t\\tconsole.warn( 'THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\\n\\t\\t\\treturn this.applyToVector3Array( a );\\n\\t\\t}\\n\\t} );\\n\\n\\tObject.assign( THREE.Matrix4.prototype, {\\n\\t\\textractPosition: function ( m ) {\\n\\t\\t\\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\\n\\t\\t\\treturn this.copyPosition( m );\\n\\t\\t},\\n\\t\\tsetRotationFromQuaternion: function ( q ) {\\n\\t\\t\\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\\n\\t\\t\\treturn this.makeRotationFromQuaternion( q );\\n\\t\\t},\\n\\t\\tmultiplyVector3: function ( vector ) {\\n\\t\\t\\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.' );\\n\\t\\t\\treturn vector.applyProjection( this );\\n\\t\\t},\\n\\t\\tmultiplyVector4: function ( vector ) {\\n\\t\\t\\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\\n\\t\\t\\treturn vector.applyMatrix4( this );\\n\\t\\t},\\n\\t\\tmultiplyVector3Array: function ( a ) {\\n\\t\\t\\tconsole.warn( 'THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\\n\\t\\t\\treturn this.applyToVector3Array( a );\\n\\t\\t},\\n\\t\\trotateAxis: function ( v ) {\\n\\t\\t\\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\\n\\t\\t\\tv.transformDirection( this );\\n\\t\\t},\\n\\t\\tcrossVector: function ( vector ) {\\n\\t\\t\\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\\n\\t\\t\\treturn vector.applyMatrix4( this );\\n\\t\\t},\\n\\t\\ttranslate: function ( v ) {\\n\\t\\t\\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\\n\\t\\t},\\n\\t\\trotateX: function ( angle ) {\\n\\t\\t\\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\\n\\t\\t},\\n\\t\\trotateY: function ( angle ) {\\n\\t\\t\\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\\n\\t\\t},\\n\\t\\trotateZ: function ( angle ) {\\n\\t\\t\\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\\n\\t\\t},\\n\\t\\trotateByAxis: function ( axis, angle ) {\\n\\t\\t\\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\\n\\t\\t}\\n\\t} );\\n\\n\\tObject.assign( THREE.Plane.prototype, {\\n\\t\\tisIntersectionLine: function ( line ) {\\n\\t\\t\\tconsole.warn( 'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().' );\\n\\t\\t\\treturn this.intersectsLine( line );\\n\\t\\t}\\n\\t} );\\n\\n\\tObject.assign( THREE.Quaternion.prototype, {\\n\\t\\tmultiplyVector3: function ( vector ) {\\n\\t\\t\\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\\n\\t\\t\\treturn vector.applyQuaternion( this );\\n\\t\\t}\\n\\t} );\\n\\n\\tObject.assign( THREE.Ray.prototype, {\\n\\t\\tisIntersectionBox: function ( box ) {\\n\\t\\t\\tconsole.warn( 'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().' );\\n\\t\\t\\treturn this.intersectsBox( box );\\n\\t\\t},\\n\\t\\tisIntersectionPlane: function ( plane ) {\\n\\t\\t\\tconsole.warn( 'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().' );\\n\\t\\t\\treturn this.intersectsPlane( plane );\\n\\t\\t},\\n\\t\\tisIntersectionSphere: function ( sphere ) {\\n\\t\\t\\tconsole.warn( 'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\\n\\t\\t\\treturn this.intersectsSphere( sphere );\\n\\t\\t}\\n\\t} );\\n\\n\\tObject.assign( THREE.Vector3.prototype, {\\n\\t\\tsetEulerFromRotationMatrix: function () {\\n\\t\\t\\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\\n\\t\\t},\\n\\t\\tsetEulerFromQuaternion: function () {\\n\\t\\t\\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\\n\\t\\t},\\n\\t\\tgetPositionFromMatrix: function ( m ) {\\n\\t\\t\\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\\n\\t\\t\\treturn this.setFromMatrixPosition( m );\\n\\t\\t},\\n\\t\\tgetScaleFromMatrix: function ( m ) {\\n\\t\\t\\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\\n\\t\\t\\treturn this.setFromMatrixScale( m );\\n\\t\\t},\\n\\t\\tgetColumnFromMatrix: function ( index, matrix ) {\\n\\t\\t\\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\\n\\t\\t\\treturn this.setFromMatrixColumn( matrix, index );\\n\\t\\t}\\n\\t} );\\n\\n\\t//\\n\\n\\tObject.assign( THREE.Object3D.prototype, {\\n\\t\\tgetChildByName: function ( name ) {\\n\\t\\t\\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\\n\\t\\t\\treturn this.getObjectByName( name );\\n\\t\\t},\\n\\t\\trenderDepth: function ( value ) {\\n\\t\\t\\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\\n\\t\\t},\\n\\t\\ttranslate: function ( distance, axis ) {\\n\\t\\t\\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\\n\\t\\t\\treturn this.translateOnAxis( axis, distance );\\n\\t\\t}\\n\\t} );\\n\\n\\tObject.defineProperties( THREE.Object3D.prototype, {\\n\\t\\teulerOrder: {\\n\\t\\t\\tget: function () {\\n\\t\\t\\t\\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\\n\\t\\t\\t\\treturn this.rotation.order;\\n\\t\\t\\t},\\n\\t\\t\\tset: function ( value ) {\\n\\t\\t\\t\\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\\n\\t\\t\\t\\tthis.rotation.order = value;\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\tuseQuaternion: {\\n\\t\\t\\tget: function () {\\n\\t\\t\\t\\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\\n\\t\\t\\t},\\n\\t\\t\\tset: function ( value ) {\\n\\t\\t\\t\\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\\n\\t\\t\\t}\\n\\t\\t}\\n\\t} );\\n\\n\\tObject.defineProperties( THREE.LOD.prototype, {\\n\\t\\tobjects: {\\n\\t\\t\\tget: function () {\\n\\t\\t\\t\\tconsole.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\\n\\t\\t\\t\\treturn this.levels;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t} );\\n\\n\\t//\\n\\n\\tTHREE.PerspectiveCamera.prototype.setLens = function ( focalLength, filmGauge ) {\\n\\n\\t\\tconsole.warn( \\\"THREE.PerspectiveCamera.setLens is deprecated. \\\" +\\n\\t\\t\\t\\t\\\"Use .setFocalLength and .filmGauge for a photographic setup.\\\" );\\n\\n\\t\\tif ( filmGauge !== undefined ) this.filmGauge = filmGauge;\\n\\t\\tthis.setFocalLength( focalLength );\\n\\n\\t};\\n\\n\\t//\\n\\n\\tObject.defineProperties( THREE.Light.prototype, {\\n\\t\\tonlyShadow: {\\n\\t\\t\\tset: function ( value ) {\\n\\t\\t\\t\\tconsole.warn( 'THREE.Light: .onlyShadow has been removed.' );\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\tshadowCameraFov: {\\n\\t\\t\\tset: function ( value ) {\\n\\t\\t\\t\\tconsole.warn( 'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.' );\\n\\t\\t\\t\\tthis.shadow.camera.fov = value;\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\tshadowCameraLeft: {\\n\\t\\t\\tset: function ( value ) {\\n\\t\\t\\t\\tconsole.warn( 'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.' );\\n\\t\\t\\t\\tthis.shadow.camera.left = value;\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\tshadowCameraRight: {\\n\\t\\t\\tset: function ( value ) {\\n\\t\\t\\t\\tconsole.warn( 'THREE.Light: .shadowCameraRight is now .shadow.camera.right.' );\\n\\t\\t\\t\\tthis.shadow.camera.right = value;\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\tshadowCameraTop: {\\n\\t\\t\\tset: function ( value ) {\\n\\t\\t\\t\\tconsole.warn( 'THREE.Light: .shadowCameraTop is now .shadow.camera.top.' );\\n\\t\\t\\t\\tthis.shadow.camera.top = value;\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\tshadowCameraBottom: {\\n\\t\\t\\tset: function ( value ) {\\n\\t\\t\\t\\tconsole.warn( 'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.' );\\n\\t\\t\\t\\tthis.shadow.camera.bottom = value;\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\tshadowCameraNear: {\\n\\t\\t\\tset: function ( value ) {\\n\\t\\t\\t\\tconsole.warn( 'THREE.Light: .shadowCameraNear is now .shadow.camera.near.' );\\n\\t\\t\\t\\tthis.shadow.camera.near = value;\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\tshadowCameraFar: {\\n\\t\\t\\tset: function ( value ) {\\n\\t\\t\\t\\tconsole.warn( 'THREE.Light: .shadowCameraFar is now .shadow.camera.far.' );\\n\\t\\t\\t\\tthis.shadow.camera.far = value;\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\tshadowCameraVisible: {\\n\\t\\t\\tset: function ( value ) {\\n\\t\\t\\t\\tconsole.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.' );\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\tshadowBias: {\\n\\t\\t\\tset: function ( value ) {\\n\\t\\t\\t\\tconsole.warn( 'THREE.Light: .shadowBias is now .shadow.bias.' );\\n\\t\\t\\t\\tthis.shadow.bias = value;\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\tshadowDarkness: {\\n\\t\\t\\tset: function ( value ) {\\n\\t\\t\\t\\tconsole.warn( 'THREE.Light: .shadowDarkness has been removed.' );\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\tshadowMapWidth: {\\n\\t\\t\\tset: function ( value ) {\\n\\t\\t\\t\\tconsole.warn( 'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.' );\\n\\t\\t\\t\\tthis.shadow.mapSize.width = value;\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\tshadowMapHeight: {\\n\\t\\t\\tset: function ( value ) {\\n\\t\\t\\t\\tconsole.warn( 'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.' );\\n\\t\\t\\t\\tthis.shadow.mapSize.height = value;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t} );\\n\\n\\t//\\n\\n\\tObject.defineProperties( THREE.BufferAttribute.prototype, {\\n\\t\\tlength: {\\n\\t\\t\\tget: function () {\\n\\t\\t\\t\\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Please use .count.' );\\n\\t\\t\\t\\treturn this.array.length;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t} );\\n\\n\\tObject.assign( THREE.BufferGeometry.prototype, {\\n\\t\\taddIndex: function ( index ) {\\n\\t\\t\\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\\n\\t\\t\\tthis.setIndex( index );\\n\\t\\t},\\n\\t\\taddDrawCall: function ( start, count, indexOffset ) {\\n\\t\\t\\tif ( indexOffset !== undefined ) {\\n\\t\\t\\t\\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\\n\\t\\t\\t}\\n\\t\\t\\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\\n\\t\\t\\tthis.addGroup( start, count );\\n\\t\\t},\\n\\t\\tclearDrawCalls: function () {\\n\\t\\t\\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\\n\\t\\t\\tthis.clearGroups();\\n\\t\\t},\\n\\t\\tcomputeTangents: function () {\\n\\t\\t\\tconsole.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );\\n\\t\\t},\\n\\t\\tcomputeOffsets: function () {\\n\\t\\t\\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.' );\\n\\t\\t}\\n\\t} );\\n\\n\\tObject.defineProperties( THREE.BufferGeometry.prototype, {\\n\\t\\tdrawcalls: {\\n\\t\\t\\tget: function () {\\n\\t\\t\\t\\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\\n\\t\\t\\t\\treturn this.groups;\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\toffsets: {\\n\\t\\t\\tget: function () {\\n\\t\\t\\t\\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\\n\\t\\t\\t\\treturn this.groups;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t} );\\n\\n\\t//\\n\\n\\tObject.defineProperties( THREE.Material.prototype, {\\n\\t\\twrapAround: {\\n\\t\\t\\tget: function () {\\n\\t\\t\\t\\tconsole.warn( 'THREE.' + this.type + ': .wrapAround has been removed.' );\\n\\t\\t\\t},\\n\\t\\t\\tset: function ( value ) {\\n\\t\\t\\t\\tconsole.warn( 'THREE.' + this.type + ': .wrapAround has been removed.' );\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\twrapRGB: {\\n\\t\\t\\tget: function () {\\n\\t\\t\\t\\tconsole.warn( 'THREE.' + this.type + ': .wrapRGB has been removed.' );\\n\\t\\t\\t\\treturn new THREE.Color();\\n\\t\\t\\t}\\n\\t\\t}\\n\\t} );\\n\\n\\tObject.defineProperties( THREE.MeshPhongMaterial.prototype, {\\n\\t\\tmetal: {\\n\\t\\t\\tget: function () {\\n\\t\\t\\t\\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.' );\\n\\t\\t\\t\\treturn false;\\n\\t\\t\\t},\\n\\t\\t\\tset: function ( value ) {\\n\\t\\t\\t\\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead' );\\n\\t\\t\\t}\\n\\t\\t}\\n\\t} );\\n\\n\\tObject.defineProperties( THREE.ShaderMaterial.prototype, {\\n\\t\\tderivatives: {\\n\\t\\t\\tget: function () {\\n\\t\\t\\t\\tconsole.warn( 'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\\n\\t\\t\\t\\treturn this.extensions.derivatives;\\n\\t\\t\\t},\\n\\t\\t\\tset: function ( value ) {\\n\\t\\t\\t\\tconsole.warn( 'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\\n\\t\\t\\t\\tthis.extensions.derivatives = value;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t} );\\n\\n\\t//\\n\\n\\tTHREE.EventDispatcher.prototype = Object.assign( Object.create( {\\n\\n\\t\\t// Note: Extra base ensures these properties are not 'assign'ed.\\n\\n\\t\\tconstructor: THREE.EventDispatcher,\\n\\n\\t\\tapply: function ( target ) {\\n\\n\\t\\t\\tconsole.warn( \\\"THREE.EventDispatcher: .apply is deprecated, \\\" +\\n\\t\\t\\t\\t\\t\\\"just inherit or Object.assign the prototype to mix-in.\\\" );\\n\\n\\t\\t\\tObject.assign( target, this );\\n\\n\\t\\t}\\n\\n\\t} ), THREE.EventDispatcher.prototype );\\n\\n\\t//\\n\\n\\tObject.assign( THREE.WebGLRenderer.prototype, {\\n\\t\\tsupportsFloatTextures: function () {\\n\\t\\t\\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\\\'OES_texture_float\\\\' ).' );\\n\\t\\t\\treturn this.extensions.get( 'OES_texture_float' );\\n\\t\\t},\\n\\t\\tsupportsHalfFloatTextures: function () {\\n\\t\\t\\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\\\'OES_texture_half_float\\\\' ).' );\\n\\t\\t\\treturn this.extensions.get( 'OES_texture_half_float' );\\n\\t\\t},\\n\\t\\tsupportsStandardDerivatives: function () {\\n\\t\\t\\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\\\'OES_standard_derivatives\\\\' ).' );\\n\\t\\t\\treturn this.extensions.get( 'OES_standard_derivatives' );\\n\\t\\t},\\n\\t\\tsupportsCompressedTextureS3TC: function () {\\n\\t\\t\\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\\\'WEBGL_compressed_texture_s3tc\\\\' ).' );\\n\\t\\t\\treturn this.extensions.get( 'WEBGL_compressed_texture_s3tc' );\\n\\t\\t},\\n\\t\\tsupportsCompressedTexturePVRTC: function () {\\n\\t\\t\\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\\\'WEBGL_compressed_texture_pvrtc\\\\' ).' );\\n\\t\\t\\treturn this.extensions.get( 'WEBGL_compressed_texture_pvrtc' );\\n\\t\\t},\\n\\t\\tsupportsBlendMinMax: function () {\\n\\t\\t\\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\\\'EXT_blend_minmax\\\\' ).' );\\n\\t\\t\\treturn this.extensions.get( 'EXT_blend_minmax' );\\n\\t\\t},\\n\\t\\tsupportsVertexTextures: function () {\\n\\t\\t\\treturn this.capabilities.vertexTextures;\\n\\t\\t},\\n\\t\\tsupportsInstancedArrays: function () {\\n\\t\\t\\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\\\'ANGLE_instanced_arrays\\\\' ).' );\\n\\t\\t\\treturn this.extensions.get( 'ANGLE_instanced_arrays' );\\n\\t\\t},\\n\\t\\tenableScissorTest: function ( boolean ) {\\n\\t\\t\\tconsole.warn( 'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().' );\\n\\t\\t\\tthis.setScissorTest( boolean );\\n\\t\\t},\\n\\t\\tinitMaterial: function () {\\n\\t\\t\\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\\n\\t\\t},\\n\\t\\taddPrePlugin: function () {\\n\\t\\t\\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\\n\\t\\t},\\n\\t\\taddPostPlugin: function () {\\n\\t\\t\\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\\n\\t\\t},\\n\\t\\tupdateShadowMap: function () {\\n\\t\\t\\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\\n\\t\\t}\\n\\t} );\\n\\n\\tObject.defineProperties( THREE.WebGLRenderer.prototype, {\\n\\t\\tshadowMapEnabled: {\\n\\t\\t\\tget: function () {\\n\\t\\t\\t\\treturn this.shadowMap.enabled;\\n\\t\\t\\t},\\n\\t\\t\\tset: function ( value ) {\\n\\t\\t\\t\\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\\n\\t\\t\\t\\tthis.shadowMap.enabled = value;\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\tshadowMapType: {\\n\\t\\t\\tget: function () {\\n\\t\\t\\t\\treturn this.shadowMap.type;\\n\\t\\t\\t},\\n\\t\\t\\tset: function ( value ) {\\n\\t\\t\\t\\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\\n\\t\\t\\t\\tthis.shadowMap.type = value;\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\tshadowMapCullFace: {\\n\\t\\t\\tget: function () {\\n\\t\\t\\t\\treturn this.shadowMap.cullFace;\\n\\t\\t\\t},\\n\\t\\t\\tset: function ( value ) {\\n\\t\\t\\t\\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace.' );\\n\\t\\t\\t\\tthis.shadowMap.cullFace = value;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t} );\\n\\n\\tObject.defineProperties( THREE.WebGLShadowMap.prototype, {\\n\\t\\tcullFace: {\\n\\t\\t\\tget: function () {\\n\\t\\t\\t\\treturn this.renderReverseSided ? THREE.CullFaceFront : THREE.CullFaceBack;\\n\\t\\t\\t},\\n\\t\\t\\tset: function ( cullFace ) {\\n\\t\\t\\t\\tvar value = ( cullFace !== THREE.CullFaceBack );\\n\\t\\t\\t\\tconsole.warn( \\\"WebGLRenderer: .shadowMap.cullFace is deprecated. Set .shadowMap.renderReverseSided to \\\" + value + \\\".\\\" );\\n\\t\\t\\t\\tthis.renderReverseSided = value;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t} );\\n\\n\\t//\\n\\n\\tObject.defineProperties( THREE.WebGLRenderTarget.prototype, {\\n\\t\\twrapS: {\\n\\t\\t\\tget: function () {\\n\\t\\t\\t\\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\\n\\t\\t\\t\\treturn this.texture.wrapS;\\n\\t\\t\\t},\\n\\t\\t\\tset: function ( value ) {\\n\\t\\t\\t\\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\\n\\t\\t\\t\\tthis.texture.wrapS = value;\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\twrapT: {\\n\\t\\t\\tget: function () {\\n\\t\\t\\t\\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\\n\\t\\t\\t\\treturn this.texture.wrapT;\\n\\t\\t\\t},\\n\\t\\t\\tset: function ( value ) {\\n\\t\\t\\t\\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\\n\\t\\t\\t\\tthis.texture.wrapT = value;\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\tmagFilter: {\\n\\t\\t\\tget: function () {\\n\\t\\t\\t\\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\\n\\t\\t\\t\\treturn this.texture.magFilter;\\n\\t\\t\\t},\\n\\t\\t\\tset: function ( value ) {\\n\\t\\t\\t\\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\\n\\t\\t\\t\\tthis.texture.magFilter = value;\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\tminFilter: {\\n\\t\\t\\tget: function () {\\n\\t\\t\\t\\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\\n\\t\\t\\t\\treturn this.texture.minFilter;\\n\\t\\t\\t},\\n\\t\\t\\tset: function ( value ) {\\n\\t\\t\\t\\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\\n\\t\\t\\t\\tthis.texture.minFilter = value;\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\tanisotropy: {\\n\\t\\t\\tget: function () {\\n\\t\\t\\t\\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\\n\\t\\t\\t\\treturn this.texture.anisotropy;\\n\\t\\t\\t},\\n\\t\\t\\tset: function ( value ) {\\n\\t\\t\\t\\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\\n\\t\\t\\t\\tthis.texture.anisotropy = value;\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\toffset: {\\n\\t\\t\\tget: function () {\\n\\t\\t\\t\\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\\n\\t\\t\\t\\treturn this.texture.offset;\\n\\t\\t\\t},\\n\\t\\t\\tset: function ( value ) {\\n\\t\\t\\t\\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\\n\\t\\t\\t\\tthis.texture.offset = value;\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\trepeat: {\\n\\t\\t\\tget: function () {\\n\\t\\t\\t\\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\\n\\t\\t\\t\\treturn this.texture.repeat;\\n\\t\\t\\t},\\n\\t\\t\\tset: function ( value ) {\\n\\t\\t\\t\\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\\n\\t\\t\\t\\tthis.texture.repeat = value;\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\tformat: {\\n\\t\\t\\tget: function () {\\n\\t\\t\\t\\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\\n\\t\\t\\t\\treturn this.texture.format;\\n\\t\\t\\t},\\n\\t\\t\\tset: function ( value ) {\\n\\t\\t\\t\\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\\n\\t\\t\\t\\tthis.texture.format = value;\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\ttype: {\\n\\t\\t\\tget: function () {\\n\\t\\t\\t\\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\\n\\t\\t\\t\\treturn this.texture.type;\\n\\t\\t\\t},\\n\\t\\t\\tset: function ( value ) {\\n\\t\\t\\t\\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\\n\\t\\t\\t\\tthis.texture.type = value;\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\tgenerateMipmaps: {\\n\\t\\t\\tget: function () {\\n\\t\\t\\t\\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\\n\\t\\t\\t\\treturn this.texture.generateMipmaps;\\n\\t\\t\\t},\\n\\t\\t\\tset: function ( value ) {\\n\\t\\t\\t\\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\\n\\t\\t\\t\\tthis.texture.generateMipmaps = value;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t} );\\n\\n\\t//\\n\\n\\tObject.assign( THREE.Audio.prototype, {\\n\\t\\tload: function ( file ) {\\n\\t\\t\\tconsole.warn( 'THREE.Audio: .load has been deprecated. Please use THREE.AudioLoader.' );\\n\\t\\t\\tvar scope = this;\\n\\t\\t\\tvar audioLoader = new THREE.AudioLoader();\\n\\t\\t\\taudioLoader.load( file, function ( buffer ) {\\n\\t\\t\\t\\tscope.setBuffer( buffer );\\n\\t\\t\\t} );\\n\\t\\t\\treturn this;\\n\\t\\t}\\n\\t} );\\n\\n\\tObject.assign( THREE.AudioAnalyser.prototype, {\\n\\t\\tgetData: function ( file ) {\\n\\t\\t\\tconsole.warn( 'THREE.AudioAnalyser: .getData() is now .getFrequencyData().' );\\n\\t\\t\\treturn this.getFrequencyData();\\n\\t\\t}\\n\\t} );\\n\\n\\t//\\n\\n\\tTHREE.GeometryUtils = {\\n\\n\\t\\tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\\n\\n\\t\\t\\tconsole.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\\n\\n\\t\\t\\tvar matrix;\\n\\n\\t\\t\\tif ( geometry2 instanceof THREE.Mesh ) {\\n\\n\\t\\t\\t\\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\\n\\n\\t\\t\\t\\tmatrix = geometry2.matrix;\\n\\t\\t\\t\\tgeometry2 = geometry2.geometry;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\\n\\n\\t\\t},\\n\\n\\t\\tcenter: function ( geometry ) {\\n\\n\\t\\t\\tconsole.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\\n\\t\\t\\treturn geometry.center();\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\tTHREE.ImageUtils = {\\n\\n\\t\\tcrossOrigin: undefined,\\n\\n\\t\\tloadTexture: function ( url, mapping, onLoad, onError ) {\\n\\n\\t\\t\\tconsole.warn( 'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.' );\\n\\n\\t\\t\\tvar loader = new THREE.TextureLoader();\\n\\t\\t\\tloader.setCrossOrigin( this.crossOrigin );\\n\\n\\t\\t\\tvar texture = loader.load( url, onLoad, undefined, onError );\\n\\n\\t\\t\\tif ( mapping ) texture.mapping = mapping;\\n\\n\\t\\t\\treturn texture;\\n\\n\\t\\t},\\n\\n\\t\\tloadTextureCube: function ( urls, mapping, onLoad, onError ) {\\n\\n\\t\\t\\tconsole.warn( 'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.' );\\n\\n\\t\\t\\tvar loader = new THREE.CubeTextureLoader();\\n\\t\\t\\tloader.setCrossOrigin( this.crossOrigin );\\n\\n\\t\\t\\tvar texture = loader.load( urls, onLoad, undefined, onError );\\n\\n\\t\\t\\tif ( mapping ) texture.mapping = mapping;\\n\\n\\t\\t\\treturn texture;\\n\\n\\t\\t},\\n\\n\\t\\tloadCompressedTexture: function () {\\n\\n\\t\\t\\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' );\\n\\n\\t\\t},\\n\\n\\t\\tloadCompressedTextureCube: function () {\\n\\n\\t\\t\\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' );\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\t//\\n\\n\\tTHREE.Projector = function () {\\n\\n\\t\\tconsole.error( 'THREE.Projector has been moved to /examples/js/renderers/Projector.js.' );\\n\\n\\t\\tthis.projectVector = function ( vector, camera ) {\\n\\n\\t\\t\\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\\n\\t\\t\\tvector.project( camera );\\n\\n\\t\\t};\\n\\n\\t\\tthis.unprojectVector = function ( vector, camera ) {\\n\\n\\t\\t\\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\\n\\t\\t\\tvector.unproject( camera );\\n\\n\\t\\t};\\n\\n\\t\\tthis.pickingRay = function ( vector, camera ) {\\n\\n\\t\\t\\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\\n\\n\\t\\t};\\n\\n\\t};\\n\\n\\t//\\n\\n\\tTHREE.CanvasRenderer = function () {\\n\\n\\t\\tconsole.error( 'THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js' );\\n\\n\\t\\tthis.domElement = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\\n\\t\\tthis.clear = function () {};\\n\\t\\tthis.render = function () {};\\n\\t\\tthis.setClearColor = function () {};\\n\\t\\tthis.setSize = function () {};\\n\\n\\t};\\n\\n\\t// File:src/extras/CurveUtils.js\\n\\n\\t/**\\n\\t * @author zz85 / http://www.lab4games.net/zz85/blog\\n\\t */\\n\\n\\tTHREE.CurveUtils = {\\n\\n\\t\\ttangentQuadraticBezier: function ( t, p0, p1, p2 ) {\\n\\n\\t\\t\\treturn 2 * ( 1 - t ) * ( p1 - p0 ) + 2 * t * ( p2 - p1 );\\n\\n\\t\\t},\\n\\n\\t\\t// Puay Bing, thanks for helping with this derivative!\\n\\n\\t\\ttangentCubicBezier: function ( t, p0, p1, p2, p3 ) {\\n\\n\\t\\t\\treturn - 3 * p0 * ( 1 - t ) * ( 1 - t )  +\\n\\t\\t\\t\\t3 * p1 * ( 1 - t ) * ( 1 - t ) - 6 * t * p1 * ( 1 - t ) +\\n\\t\\t\\t\\t6 * t *  p2 * ( 1 - t ) - 3 * t * t * p2 +\\n\\t\\t\\t\\t3 * t * t * p3;\\n\\n\\t\\t},\\n\\n\\t\\ttangentSpline: function ( t, p0, p1, p2, p3 ) {\\n\\n\\t\\t\\t// To check if my formulas are correct\\n\\n\\t\\t\\tvar h00 = 6 * t * t - 6 * t; \\t// derived from 2t^3 − 3t^2 + 1\\n\\t\\t\\tvar h10 = 3 * t * t - 4 * t + 1; // t^3 − 2t^2 + t\\n\\t\\t\\tvar h01 = - 6 * t * t + 6 * t; \\t// − 2t3 + 3t2\\n\\t\\t\\tvar h11 = 3 * t * t - 2 * t;\\t// t3 − t2\\n\\n\\t\\t\\treturn h00 + h10 + h01 + h11;\\n\\n\\t\\t},\\n\\n\\t\\t// Catmull-Rom\\n\\n\\t\\tinterpolate: function( p0, p1, p2, p3, t ) {\\n\\n\\t\\t\\tvar v0 = ( p2 - p0 ) * 0.5;\\n\\t\\t\\tvar v1 = ( p3 - p1 ) * 0.5;\\n\\t\\t\\tvar t2 = t * t;\\n\\t\\t\\tvar t3 = t * t2;\\n\\t\\t\\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\t// File:src/extras/SceneUtils.js\\n\\n\\t/**\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t */\\n\\n\\tTHREE.SceneUtils = {\\n\\n\\t\\tcreateMultiMaterialObject: function ( geometry, materials ) {\\n\\n\\t\\t\\tvar group = new THREE.Group();\\n\\n\\t\\t\\tfor ( var i = 0, l = materials.length; i < l; i ++ ) {\\n\\n\\t\\t\\t\\tgroup.add( new THREE.Mesh( geometry, materials[ i ] ) );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn group;\\n\\n\\t\\t},\\n\\n\\t\\tdetach: function ( child, parent, scene ) {\\n\\n\\t\\t\\tchild.applyMatrix( parent.matrixWorld );\\n\\t\\t\\tparent.remove( child );\\n\\t\\t\\tscene.add( child );\\n\\n\\t\\t},\\n\\n\\t\\tattach: function ( child, scene, parent ) {\\n\\n\\t\\t\\tvar matrixWorldInverse = new THREE.Matrix4();\\n\\t\\t\\tmatrixWorldInverse.getInverse( parent.matrixWorld );\\n\\t\\t\\tchild.applyMatrix( matrixWorldInverse );\\n\\n\\t\\t\\tscene.remove( child );\\n\\t\\t\\tparent.add( child );\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\t// File:src/extras/ShapeUtils.js\\n\\n\\t/**\\n\\t * @author zz85 / http://www.lab4games.net/zz85/blog\\n\\t */\\n\\n\\tTHREE.ShapeUtils = {\\n\\n\\t\\t// calculate area of the contour polygon\\n\\n\\t\\tarea: function ( contour ) {\\n\\n\\t\\t\\tvar n = contour.length;\\n\\t\\t\\tvar a = 0.0;\\n\\n\\t\\t\\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\\n\\n\\t\\t\\t\\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn a * 0.5;\\n\\n\\t\\t},\\n\\n\\t\\ttriangulate: ( function () {\\n\\n\\t\\t\\t/**\\n\\t\\t\\t * This code is a quick port of code written in C++ which was submitted to\\n\\t\\t\\t * flipcode.com by John W. Ratcliff  // July 22, 2000\\n\\t\\t\\t * See original code and more information here:\\n\\t\\t\\t * http://www.flipcode.com/archives/Efficient_Polygon_Triangulation.shtml\\n\\t\\t\\t *\\n\\t\\t\\t * ported to actionscript by Zevan Rosser\\n\\t\\t\\t * www.actionsnippet.com\\n\\t\\t\\t *\\n\\t\\t\\t * ported to javascript by Joshua Koo\\n\\t\\t\\t * http://www.lab4games.net/zz85/blog\\n\\t\\t\\t *\\n\\t\\t\\t */\\n\\n\\t\\t\\tfunction snip( contour, u, v, w, n, verts ) {\\n\\n\\t\\t\\t\\tvar p;\\n\\t\\t\\t\\tvar ax, ay, bx, by;\\n\\t\\t\\t\\tvar cx, cy, px, py;\\n\\n\\t\\t\\t\\tax = contour[ verts[ u ] ].x;\\n\\t\\t\\t\\tay = contour[ verts[ u ] ].y;\\n\\n\\t\\t\\t\\tbx = contour[ verts[ v ] ].x;\\n\\t\\t\\t\\tby = contour[ verts[ v ] ].y;\\n\\n\\t\\t\\t\\tcx = contour[ verts[ w ] ].x;\\n\\t\\t\\t\\tcy = contour[ verts[ w ] ].y;\\n\\n\\t\\t\\t\\tif ( Number.EPSILON > ( ( ( bx - ax ) * ( cy - ay ) ) - ( ( by - ay ) * ( cx - ax ) ) ) ) return false;\\n\\n\\t\\t\\t\\tvar aX, aY, bX, bY, cX, cY;\\n\\t\\t\\t\\tvar apx, apy, bpx, bpy, cpx, cpy;\\n\\t\\t\\t\\tvar cCROSSap, bCROSScp, aCROSSbp;\\n\\n\\t\\t\\t\\taX = cx - bx;  aY = cy - by;\\n\\t\\t\\t\\tbX = ax - cx;  bY = ay - cy;\\n\\t\\t\\t\\tcX = bx - ax;  cY = by - ay;\\n\\n\\t\\t\\t\\tfor ( p = 0; p < n; p ++ ) {\\n\\n\\t\\t\\t\\t\\tpx = contour[ verts[ p ] ].x;\\n\\t\\t\\t\\t\\tpy = contour[ verts[ p ] ].y;\\n\\n\\t\\t\\t\\t\\tif ( ( ( px === ax ) && ( py === ay ) ) ||\\n\\t\\t\\t\\t\\t\\t ( ( px === bx ) && ( py === by ) ) ||\\n\\t\\t\\t\\t\\t\\t ( ( px === cx ) && ( py === cy ) ) )\\tcontinue;\\n\\n\\t\\t\\t\\t\\tapx = px - ax;  apy = py - ay;\\n\\t\\t\\t\\t\\tbpx = px - bx;  bpy = py - by;\\n\\t\\t\\t\\t\\tcpx = px - cx;  cpy = py - cy;\\n\\n\\t\\t\\t\\t\\t// see if p is inside triangle abc\\n\\n\\t\\t\\t\\t\\taCROSSbp = aX * bpy - aY * bpx;\\n\\t\\t\\t\\t\\tcCROSSap = cX * apy - cY * apx;\\n\\t\\t\\t\\t\\tbCROSScp = bX * cpy - bY * cpx;\\n\\n\\t\\t\\t\\t\\tif ( ( aCROSSbp >= - Number.EPSILON ) && ( bCROSScp >= - Number.EPSILON ) && ( cCROSSap >= - Number.EPSILON ) ) return false;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn true;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t// takes in an contour array and returns\\n\\n\\t\\t\\treturn function triangulate( contour, indices ) {\\n\\n\\t\\t\\t\\tvar n = contour.length;\\n\\n\\t\\t\\t\\tif ( n < 3 ) return null;\\n\\n\\t\\t\\t\\tvar result = [],\\n\\t\\t\\t\\t\\tverts = [],\\n\\t\\t\\t\\t\\tvertIndices = [];\\n\\n\\t\\t\\t\\t/* we want a counter-clockwise polygon in verts */\\n\\n\\t\\t\\t\\tvar u, v, w;\\n\\n\\t\\t\\t\\tif ( THREE.ShapeUtils.area( contour ) > 0.0 ) {\\n\\n\\t\\t\\t\\t\\tfor ( v = 0; v < n; v ++ ) verts[ v ] = v;\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\tfor ( v = 0; v < n; v ++ ) verts[ v ] = ( n - 1 ) - v;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tvar nv = n;\\n\\n\\t\\t\\t\\t/*  remove nv - 2 vertices, creating 1 triangle every time */\\n\\n\\t\\t\\t\\tvar count = 2 * nv;   /* error detection */\\n\\n\\t\\t\\t\\tfor ( v = nv - 1; nv > 2; ) {\\n\\n\\t\\t\\t\\t\\t/* if we loop, it is probably a non-simple polygon */\\n\\n\\t\\t\\t\\t\\tif ( ( count -- ) <= 0 ) {\\n\\n\\t\\t\\t\\t\\t\\t//** Triangulate: ERROR - probable bad polygon!\\n\\n\\t\\t\\t\\t\\t\\t//throw ( \\\"Warning, unable to triangulate polygon!\\\" );\\n\\t\\t\\t\\t\\t\\t//return null;\\n\\t\\t\\t\\t\\t\\t// Sometimes warning is fine, especially polygons are triangulated in reverse.\\n\\t\\t\\t\\t\\t\\tconsole.warn( 'THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()' );\\n\\n\\t\\t\\t\\t\\t\\tif ( indices ) return vertIndices;\\n\\t\\t\\t\\t\\t\\treturn result;\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t/* three consecutive vertices in current polygon, <u,v,w> */\\n\\n\\t\\t\\t\\t\\tu = v; \\t \\tif ( nv <= u ) u = 0;     /* previous */\\n\\t\\t\\t\\t\\tv = u + 1;  if ( nv <= v ) v = 0;     /* new v    */\\n\\t\\t\\t\\t\\tw = v + 1;  if ( nv <= w ) w = 0;     /* next     */\\n\\n\\t\\t\\t\\t\\tif ( snip( contour, u, v, w, nv, verts ) ) {\\n\\n\\t\\t\\t\\t\\t\\tvar a, b, c, s, t;\\n\\n\\t\\t\\t\\t\\t\\t/* true names of the vertices */\\n\\n\\t\\t\\t\\t\\t\\ta = verts[ u ];\\n\\t\\t\\t\\t\\t\\tb = verts[ v ];\\n\\t\\t\\t\\t\\t\\tc = verts[ w ];\\n\\n\\t\\t\\t\\t\\t\\t/* output Triangle */\\n\\n\\t\\t\\t\\t\\t\\tresult.push( [ contour[ a ],\\n\\t\\t\\t\\t\\t\\t\\tcontour[ b ],\\n\\t\\t\\t\\t\\t\\t\\tcontour[ c ] ] );\\n\\n\\n\\t\\t\\t\\t\\t\\tvertIndices.push( [ verts[ u ], verts[ v ], verts[ w ] ] );\\n\\n\\t\\t\\t\\t\\t\\t/* remove v from the remaining polygon */\\n\\n\\t\\t\\t\\t\\t\\tfor ( s = v, t = v + 1; t < nv; s ++, t ++ ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tverts[ s ] = verts[ t ];\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\tnv --;\\n\\n\\t\\t\\t\\t\\t\\t/* reset error detection counter */\\n\\n\\t\\t\\t\\t\\t\\tcount = 2 * nv;\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( indices ) return vertIndices;\\n\\t\\t\\t\\treturn result;\\n\\n\\t\\t\\t}\\n\\n\\t\\t} )(),\\n\\n\\t\\ttriangulateShape: function ( contour, holes ) {\\n\\n\\t\\t\\tfunction removeDupEndPts(points) {\\n\\n\\t\\t\\t\\tvar l = points.length;\\n\\n\\t\\t\\t\\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\\n\\n\\t\\t\\t\\t\\tpoints.pop();\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tremoveDupEndPts( contour );\\n\\t\\t\\tholes.forEach( removeDupEndPts );\\n\\n\\t\\t\\tfunction point_in_segment_2D_colin( inSegPt1, inSegPt2, inOtherPt ) {\\n\\n\\t\\t\\t\\t// inOtherPt needs to be collinear to the inSegment\\n\\t\\t\\t\\tif ( inSegPt1.x !== inSegPt2.x ) {\\n\\n\\t\\t\\t\\t\\tif ( inSegPt1.x < inSegPt2.x ) {\\n\\n\\t\\t\\t\\t\\t\\treturn\\t( ( inSegPt1.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt2.x ) );\\n\\n\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\treturn\\t( ( inSegPt2.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt1.x ) );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\tif ( inSegPt1.y < inSegPt2.y ) {\\n\\n\\t\\t\\t\\t\\t\\treturn\\t( ( inSegPt1.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt2.y ) );\\n\\n\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\treturn\\t( ( inSegPt2.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt1.y ) );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tfunction intersect_segments_2D( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1, inSeg2Pt2, inExcludeAdjacentSegs ) {\\n\\n\\t\\t\\t\\tvar seg1dx = inSeg1Pt2.x - inSeg1Pt1.x,   seg1dy = inSeg1Pt2.y - inSeg1Pt1.y;\\n\\t\\t\\t\\tvar seg2dx = inSeg2Pt2.x - inSeg2Pt1.x,   seg2dy = inSeg2Pt2.y - inSeg2Pt1.y;\\n\\n\\t\\t\\t\\tvar seg1seg2dx = inSeg1Pt1.x - inSeg2Pt1.x;\\n\\t\\t\\t\\tvar seg1seg2dy = inSeg1Pt1.y - inSeg2Pt1.y;\\n\\n\\t\\t\\t\\tvar limit\\t\\t= seg1dy * seg2dx - seg1dx * seg2dy;\\n\\t\\t\\t\\tvar perpSeg1\\t= seg1dy * seg1seg2dx - seg1dx * seg1seg2dy;\\n\\n\\t\\t\\t\\tif ( Math.abs( limit ) > Number.EPSILON ) {\\n\\n\\t\\t\\t\\t\\t// not parallel\\n\\n\\t\\t\\t\\t\\tvar perpSeg2;\\n\\t\\t\\t\\t\\tif ( limit > 0 ) {\\n\\n\\t\\t\\t\\t\\t\\tif ( ( perpSeg1 < 0 ) || ( perpSeg1 > limit ) ) \\t\\treturn [];\\n\\t\\t\\t\\t\\t\\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\\n\\t\\t\\t\\t\\t\\tif ( ( perpSeg2 < 0 ) || ( perpSeg2 > limit ) ) \\t\\treturn [];\\n\\n\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\tif ( ( perpSeg1 > 0 ) || ( perpSeg1 < limit ) ) \\t\\treturn [];\\n\\t\\t\\t\\t\\t\\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\\n\\t\\t\\t\\t\\t\\tif ( ( perpSeg2 > 0 ) || ( perpSeg2 < limit ) ) \\t\\treturn [];\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t// i.e. to reduce rounding errors\\n\\t\\t\\t\\t\\t// intersection at endpoint of segment#1?\\n\\t\\t\\t\\t\\tif ( perpSeg2 === 0 ) {\\n\\n\\t\\t\\t\\t\\t\\tif ( ( inExcludeAdjacentSegs ) &&\\n\\t\\t\\t\\t\\t\\t\\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\\t\\treturn [];\\n\\t\\t\\t\\t\\t\\treturn [ inSeg1Pt1 ];\\n\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tif ( perpSeg2 === limit ) {\\n\\n\\t\\t\\t\\t\\t\\tif ( ( inExcludeAdjacentSegs ) &&\\n\\t\\t\\t\\t\\t\\t\\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\\t\\treturn [];\\n\\t\\t\\t\\t\\t\\treturn [ inSeg1Pt2 ];\\n\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t// intersection at endpoint of segment#2?\\n\\t\\t\\t\\t\\tif ( perpSeg1 === 0 )\\t\\treturn [ inSeg2Pt1 ];\\n\\t\\t\\t\\t\\tif ( perpSeg1 === limit )\\treturn [ inSeg2Pt2 ];\\n\\n\\t\\t\\t\\t\\t// return real intersection point\\n\\t\\t\\t\\t\\tvar factorSeg1 = perpSeg2 / limit;\\n\\t\\t\\t\\t\\treturn\\t[ { x: inSeg1Pt1.x + factorSeg1 * seg1dx,\\n\\t\\t\\t\\t\\t\\t\\t\\ty: inSeg1Pt1.y + factorSeg1 * seg1dy } ];\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t// parallel or collinear\\n\\t\\t\\t\\t\\tif ( ( perpSeg1 !== 0 ) ||\\n\\t\\t\\t\\t\\t\\t ( seg2dy * seg1seg2dx !== seg2dx * seg1seg2dy ) ) \\t\\t\\treturn [];\\n\\n\\t\\t\\t\\t\\t// they are collinear or degenerate\\n\\t\\t\\t\\t\\tvar seg1Pt = ( ( seg1dx === 0 ) && ( seg1dy === 0 ) );\\t// segment1 is just a point?\\n\\t\\t\\t\\t\\tvar seg2Pt = ( ( seg2dx === 0 ) && ( seg2dy === 0 ) );\\t// segment2 is just a point?\\n\\t\\t\\t\\t\\t// both segments are points\\n\\t\\t\\t\\t\\tif ( seg1Pt && seg2Pt ) {\\n\\n\\t\\t\\t\\t\\t\\tif ( ( inSeg1Pt1.x !== inSeg2Pt1.x ) ||\\n\\t\\t\\t\\t\\t\\t\\t ( inSeg1Pt1.y !== inSeg2Pt1.y ) )\\t\\treturn [];\\t// they are distinct  points\\n\\t\\t\\t\\t\\t\\treturn [ inSeg1Pt1 ];                 \\t\\t\\t\\t\\t\\t// they are the same point\\n\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t// segment#1  is a single point\\n\\t\\t\\t\\t\\tif ( seg1Pt ) {\\n\\n\\t\\t\\t\\t\\t\\tif ( ! point_in_segment_2D_colin( inSeg2Pt1, inSeg2Pt2, inSeg1Pt1 ) )\\t\\treturn [];\\t\\t// but not in segment#2\\n\\t\\t\\t\\t\\t\\treturn [ inSeg1Pt1 ];\\n\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t// segment#2  is a single point\\n\\t\\t\\t\\t\\tif ( seg2Pt ) {\\n\\n\\t\\t\\t\\t\\t\\tif ( ! point_in_segment_2D_colin( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1 ) )\\t\\treturn [];\\t\\t// but not in segment#1\\n\\t\\t\\t\\t\\t\\treturn [ inSeg2Pt1 ];\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t// they are collinear segments, which might overlap\\n\\t\\t\\t\\t\\tvar seg1min, seg1max, seg1minVal, seg1maxVal;\\n\\t\\t\\t\\t\\tvar seg2min, seg2max, seg2minVal, seg2maxVal;\\n\\t\\t\\t\\t\\tif ( seg1dx !== 0 ) {\\n\\n\\t\\t\\t\\t\\t\\t// the segments are NOT on a vertical line\\n\\t\\t\\t\\t\\t\\tif ( inSeg1Pt1.x < inSeg1Pt2.x ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.x;\\n\\t\\t\\t\\t\\t\\t\\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.x;\\n\\n\\t\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\t\\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.x;\\n\\t\\t\\t\\t\\t\\t\\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.x;\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tif ( inSeg2Pt1.x < inSeg2Pt2.x ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.x;\\n\\t\\t\\t\\t\\t\\t\\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.x;\\n\\n\\t\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\t\\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.x;\\n\\t\\t\\t\\t\\t\\t\\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.x;\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\t// the segments are on a vertical line\\n\\t\\t\\t\\t\\t\\tif ( inSeg1Pt1.y < inSeg1Pt2.y ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.y;\\n\\t\\t\\t\\t\\t\\t\\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.y;\\n\\n\\t\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\t\\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.y;\\n\\t\\t\\t\\t\\t\\t\\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.y;\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tif ( inSeg2Pt1.y < inSeg2Pt2.y ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.y;\\n\\t\\t\\t\\t\\t\\t\\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.y;\\n\\n\\t\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\t\\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.y;\\n\\t\\t\\t\\t\\t\\t\\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.y;\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tif ( seg1minVal <= seg2minVal ) {\\n\\n\\t\\t\\t\\t\\t\\tif ( seg1maxVal <  seg2minVal )\\treturn [];\\n\\t\\t\\t\\t\\t\\tif ( seg1maxVal === seg2minVal )\\t{\\n\\n\\t\\t\\t\\t\\t\\t\\tif ( inExcludeAdjacentSegs )\\t\\treturn [];\\n\\t\\t\\t\\t\\t\\t\\treturn [ seg2min ];\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tif ( seg1maxVal <= seg2maxVal )\\treturn [ seg2min, seg1max ];\\n\\t\\t\\t\\t\\t\\treturn\\t[ seg2min, seg2max ];\\n\\n\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\tif ( seg1minVal >  seg2maxVal )\\treturn [];\\n\\t\\t\\t\\t\\t\\tif ( seg1minVal === seg2maxVal )\\t{\\n\\n\\t\\t\\t\\t\\t\\t\\tif ( inExcludeAdjacentSegs )\\t\\treturn [];\\n\\t\\t\\t\\t\\t\\t\\treturn [ seg1min ];\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tif ( seg1maxVal <= seg2maxVal )\\treturn [ seg1min, seg1max ];\\n\\t\\t\\t\\t\\t\\treturn\\t[ seg1min, seg2max ];\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tfunction isPointInsideAngle( inVertex, inLegFromPt, inLegToPt, inOtherPt ) {\\n\\n\\t\\t\\t\\t// The order of legs is important\\n\\n\\t\\t\\t\\t// translation of all points, so that Vertex is at (0,0)\\n\\t\\t\\t\\tvar legFromPtX\\t= inLegFromPt.x - inVertex.x,  legFromPtY\\t= inLegFromPt.y - inVertex.y;\\n\\t\\t\\t\\tvar legToPtX\\t= inLegToPt.x\\t- inVertex.x,  legToPtY\\t\\t= inLegToPt.y\\t- inVertex.y;\\n\\t\\t\\t\\tvar otherPtX\\t= inOtherPt.x\\t- inVertex.x,  otherPtY\\t\\t= inOtherPt.y\\t- inVertex.y;\\n\\n\\t\\t\\t\\t// main angle >0: < 180 deg.; 0: 180 deg.; <0: > 180 deg.\\n\\t\\t\\t\\tvar from2toAngle\\t= legFromPtX * legToPtY - legFromPtY * legToPtX;\\n\\t\\t\\t\\tvar from2otherAngle\\t= legFromPtX * otherPtY - legFromPtY * otherPtX;\\n\\n\\t\\t\\t\\tif ( Math.abs( from2toAngle ) > Number.EPSILON ) {\\n\\n\\t\\t\\t\\t\\t// angle != 180 deg.\\n\\n\\t\\t\\t\\t\\tvar other2toAngle\\t\\t= otherPtX * legToPtY - otherPtY * legToPtX;\\n\\t\\t\\t\\t\\t// console.log( \\\"from2to: \\\" + from2toAngle + \\\", from2other: \\\" + from2otherAngle + \\\", other2to: \\\" + other2toAngle );\\n\\n\\t\\t\\t\\t\\tif ( from2toAngle > 0 ) {\\n\\n\\t\\t\\t\\t\\t\\t// main angle < 180 deg.\\n\\t\\t\\t\\t\\t\\treturn\\t( ( from2otherAngle >= 0 ) && ( other2toAngle >= 0 ) );\\n\\n\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\t// main angle > 180 deg.\\n\\t\\t\\t\\t\\t\\treturn\\t( ( from2otherAngle >= 0 ) || ( other2toAngle >= 0 ) );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t// angle == 180 deg.\\n\\t\\t\\t\\t\\t// console.log( \\\"from2to: 180 deg., from2other: \\\" + from2otherAngle  );\\n\\t\\t\\t\\t\\treturn\\t( from2otherAngle > 0 );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\n\\t\\t\\tfunction removeHoles( contour, holes ) {\\n\\n\\t\\t\\t\\tvar shape = contour.concat(); // work on this shape\\n\\t\\t\\t\\tvar hole;\\n\\n\\t\\t\\t\\tfunction isCutLineInsideAngles( inShapeIdx, inHoleIdx ) {\\n\\n\\t\\t\\t\\t\\t// Check if hole point lies within angle around shape point\\n\\t\\t\\t\\t\\tvar lastShapeIdx = shape.length - 1;\\n\\n\\t\\t\\t\\t\\tvar prevShapeIdx = inShapeIdx - 1;\\n\\t\\t\\t\\t\\tif ( prevShapeIdx < 0 )\\t\\t\\tprevShapeIdx = lastShapeIdx;\\n\\n\\t\\t\\t\\t\\tvar nextShapeIdx = inShapeIdx + 1;\\n\\t\\t\\t\\t\\tif ( nextShapeIdx > lastShapeIdx )\\tnextShapeIdx = 0;\\n\\n\\t\\t\\t\\t\\tvar insideAngle = isPointInsideAngle( shape[ inShapeIdx ], shape[ prevShapeIdx ], shape[ nextShapeIdx ], hole[ inHoleIdx ] );\\n\\t\\t\\t\\t\\tif ( ! insideAngle ) {\\n\\n\\t\\t\\t\\t\\t\\t// console.log( \\\"Vertex (Shape): \\\" + inShapeIdx + \\\", Point: \\\" + hole[inHoleIdx].x + \\\"/\\\" + hole[inHoleIdx].y );\\n\\t\\t\\t\\t\\t\\treturn\\tfalse;\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t// Check if shape point lies within angle around hole point\\n\\t\\t\\t\\t\\tvar lastHoleIdx = hole.length - 1;\\n\\n\\t\\t\\t\\t\\tvar prevHoleIdx = inHoleIdx - 1;\\n\\t\\t\\t\\t\\tif ( prevHoleIdx < 0 )\\t\\t\\tprevHoleIdx = lastHoleIdx;\\n\\n\\t\\t\\t\\t\\tvar nextHoleIdx = inHoleIdx + 1;\\n\\t\\t\\t\\t\\tif ( nextHoleIdx > lastHoleIdx )\\tnextHoleIdx = 0;\\n\\n\\t\\t\\t\\t\\tinsideAngle = isPointInsideAngle( hole[ inHoleIdx ], hole[ prevHoleIdx ], hole[ nextHoleIdx ], shape[ inShapeIdx ] );\\n\\t\\t\\t\\t\\tif ( ! insideAngle ) {\\n\\n\\t\\t\\t\\t\\t\\t// console.log( \\\"Vertex (Hole): \\\" + inHoleIdx + \\\", Point: \\\" + shape[inShapeIdx].x + \\\"/\\\" + shape[inShapeIdx].y );\\n\\t\\t\\t\\t\\t\\treturn\\tfalse;\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\treturn\\ttrue;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tfunction intersectsShapeEdge( inShapePt, inHolePt ) {\\n\\n\\t\\t\\t\\t\\t// checks for intersections with shape edges\\n\\t\\t\\t\\t\\tvar sIdx, nextIdx, intersection;\\n\\t\\t\\t\\t\\tfor ( sIdx = 0; sIdx < shape.length; sIdx ++ ) {\\n\\n\\t\\t\\t\\t\\t\\tnextIdx = sIdx + 1; nextIdx %= shape.length;\\n\\t\\t\\t\\t\\t\\tintersection = intersect_segments_2D( inShapePt, inHolePt, shape[ sIdx ], shape[ nextIdx ], true );\\n\\t\\t\\t\\t\\t\\tif ( intersection.length > 0 )\\t\\treturn\\ttrue;\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\treturn\\tfalse;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tvar indepHoles = [];\\n\\n\\t\\t\\t\\tfunction intersectsHoleEdge( inShapePt, inHolePt ) {\\n\\n\\t\\t\\t\\t\\t// checks for intersections with hole edges\\n\\t\\t\\t\\t\\tvar ihIdx, chkHole,\\n\\t\\t\\t\\t\\t\\thIdx, nextIdx, intersection;\\n\\t\\t\\t\\t\\tfor ( ihIdx = 0; ihIdx < indepHoles.length; ihIdx ++ ) {\\n\\n\\t\\t\\t\\t\\t\\tchkHole = holes[ indepHoles[ ihIdx ]];\\n\\t\\t\\t\\t\\t\\tfor ( hIdx = 0; hIdx < chkHole.length; hIdx ++ ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tnextIdx = hIdx + 1; nextIdx %= chkHole.length;\\n\\t\\t\\t\\t\\t\\t\\tintersection = intersect_segments_2D( inShapePt, inHolePt, chkHole[ hIdx ], chkHole[ nextIdx ], true );\\n\\t\\t\\t\\t\\t\\t\\tif ( intersection.length > 0 )\\t\\treturn\\ttrue;\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\treturn\\tfalse;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tvar holeIndex, shapeIndex,\\n\\t\\t\\t\\t\\tshapePt, holePt,\\n\\t\\t\\t\\t\\tholeIdx, cutKey, failedCuts = [],\\n\\t\\t\\t\\t\\ttmpShape1, tmpShape2,\\n\\t\\t\\t\\t\\ttmpHole1, tmpHole2;\\n\\n\\t\\t\\t\\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\\n\\n\\t\\t\\t\\t\\tindepHoles.push( h );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tvar minShapeIndex = 0;\\n\\t\\t\\t\\tvar counter = indepHoles.length * 2;\\n\\t\\t\\t\\twhile ( indepHoles.length > 0 ) {\\n\\n\\t\\t\\t\\t\\tcounter --;\\n\\t\\t\\t\\t\\tif ( counter < 0 ) {\\n\\n\\t\\t\\t\\t\\t\\tconsole.log( \\\"Infinite Loop! Holes left:\\\" + indepHoles.length + \\\", Probably Hole outside Shape!\\\" );\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t// search for shape-vertex and hole-vertex,\\n\\t\\t\\t\\t\\t// which can be connected without intersections\\n\\t\\t\\t\\t\\tfor ( shapeIndex = minShapeIndex; shapeIndex < shape.length; shapeIndex ++ ) {\\n\\n\\t\\t\\t\\t\\t\\tshapePt = shape[ shapeIndex ];\\n\\t\\t\\t\\t\\t\\tholeIndex\\t= - 1;\\n\\n\\t\\t\\t\\t\\t\\t// search for hole which can be reached without intersections\\n\\t\\t\\t\\t\\t\\tfor ( var h = 0; h < indepHoles.length; h ++ ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tholeIdx = indepHoles[ h ];\\n\\n\\t\\t\\t\\t\\t\\t\\t// prevent multiple checks\\n\\t\\t\\t\\t\\t\\t\\tcutKey = shapePt.x + \\\":\\\" + shapePt.y + \\\":\\\" + holeIdx;\\n\\t\\t\\t\\t\\t\\t\\tif ( failedCuts[ cutKey ] !== undefined )\\t\\t\\tcontinue;\\n\\n\\t\\t\\t\\t\\t\\t\\thole = holes[ holeIdx ];\\n\\t\\t\\t\\t\\t\\t\\tfor ( var h2 = 0; h2 < hole.length; h2 ++ ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tholePt = hole[ h2 ];\\n\\t\\t\\t\\t\\t\\t\\t\\tif ( ! isCutLineInsideAngles( shapeIndex, h2 ) )\\t\\tcontinue;\\n\\t\\t\\t\\t\\t\\t\\t\\tif ( intersectsShapeEdge( shapePt, holePt ) )\\t\\tcontinue;\\n\\t\\t\\t\\t\\t\\t\\t\\tif ( intersectsHoleEdge( shapePt, holePt ) )\\t\\tcontinue;\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tholeIndex = h2;\\n\\t\\t\\t\\t\\t\\t\\t\\tindepHoles.splice( h, 1 );\\n\\n\\t\\t\\t\\t\\t\\t\\t\\ttmpShape1 = shape.slice( 0, shapeIndex + 1 );\\n\\t\\t\\t\\t\\t\\t\\t\\ttmpShape2 = shape.slice( shapeIndex );\\n\\t\\t\\t\\t\\t\\t\\t\\ttmpHole1 = hole.slice( holeIndex );\\n\\t\\t\\t\\t\\t\\t\\t\\ttmpHole2 = hole.slice( 0, holeIndex + 1 );\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tshape = tmpShape1.concat( tmpHole1 ).concat( tmpHole2 ).concat( tmpShape2 );\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tminShapeIndex = shapeIndex;\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t// Debug only, to show the selected cuts\\n\\t\\t\\t\\t\\t\\t\\t\\t// glob_CutLines.push( [ shapePt, holePt ] );\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\tif ( holeIndex >= 0 )\\tbreak;\\t\\t// hole-vertex found\\n\\n\\t\\t\\t\\t\\t\\t\\tfailedCuts[ cutKey ] = true;\\t\\t\\t// remember failure\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tif ( holeIndex >= 0 )\\tbreak;\\t\\t// hole-vertex found\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn shape; \\t\\t\\t/* shape with no holes */\\n\\n\\t\\t\\t}\\n\\n\\n\\t\\t\\tvar i, il, f, face,\\n\\t\\t\\t\\tkey, index,\\n\\t\\t\\t\\tallPointsMap = {};\\n\\n\\t\\t\\t// To maintain reference to old shape, one must match coordinates, or offset the indices from original arrays. It's probably easier to do the first.\\n\\n\\t\\t\\tvar allpoints = contour.concat();\\n\\n\\t\\t\\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\\n\\n\\t\\t\\t\\tArray.prototype.push.apply( allpoints, holes[ h ] );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t//console.log( \\\"allpoints\\\",allpoints, allpoints.length );\\n\\n\\t\\t\\t// prepare all points map\\n\\n\\t\\t\\tfor ( i = 0, il = allpoints.length; i < il; i ++ ) {\\n\\n\\t\\t\\t\\tkey = allpoints[ i ].x + \\\":\\\" + allpoints[ i ].y;\\n\\n\\t\\t\\t\\tif ( allPointsMap[ key ] !== undefined ) {\\n\\n\\t\\t\\t\\t\\tconsole.warn( \\\"THREE.ShapeUtils: Duplicate point\\\", key, i );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tallPointsMap[ key ] = i;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t// remove holes by cutting paths to holes and adding them to the shape\\n\\t\\t\\tvar shapeWithoutHoles = removeHoles( contour, holes );\\n\\n\\t\\t\\tvar triangles = THREE.ShapeUtils.triangulate( shapeWithoutHoles, false ); // True returns indices for points of spooled shape\\n\\t\\t\\t//console.log( \\\"triangles\\\",triangles, triangles.length );\\n\\n\\t\\t\\t// check all face vertices against all points map\\n\\n\\t\\t\\tfor ( i = 0, il = triangles.length; i < il; i ++ ) {\\n\\n\\t\\t\\t\\tface = triangles[ i ];\\n\\n\\t\\t\\t\\tfor ( f = 0; f < 3; f ++ ) {\\n\\n\\t\\t\\t\\t\\tkey = face[ f ].x + \\\":\\\" + face[ f ].y;\\n\\n\\t\\t\\t\\t\\tindex = allPointsMap[ key ];\\n\\n\\t\\t\\t\\t\\tif ( index !== undefined ) {\\n\\n\\t\\t\\t\\t\\t\\tface[ f ] = index;\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn triangles.concat();\\n\\n\\t\\t},\\n\\n\\t\\tisClockWise: function ( pts ) {\\n\\n\\t\\t\\treturn THREE.ShapeUtils.area( pts ) < 0;\\n\\n\\t\\t},\\n\\n\\t\\t// Bezier Curves formulas obtained from\\n\\t\\t// http://en.wikipedia.org/wiki/B%C3%A9zier_curve\\n\\n\\t\\t// Quad Bezier Functions\\n\\n\\t\\tb2: ( function () {\\n\\n\\t\\t\\tfunction b2p0( t, p ) {\\n\\n\\t\\t\\t\\tvar k = 1 - t;\\n\\t\\t\\t\\treturn k * k * p;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tfunction b2p1( t, p ) {\\n\\n\\t\\t\\t\\treturn 2 * ( 1 - t ) * t * p;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tfunction b2p2( t, p ) {\\n\\n\\t\\t\\t\\treturn t * t * p;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn function b2( t, p0, p1, p2 ) {\\n\\n\\t\\t\\t\\treturn b2p0( t, p0 ) + b2p1( t, p1 ) + b2p2( t, p2 );\\n\\n\\t\\t\\t};\\n\\n\\t\\t} )(),\\n\\n\\t\\t// Cubic Bezier Functions\\n\\n\\t\\tb3: ( function () {\\n\\n\\t\\t\\tfunction b3p0( t, p ) {\\n\\n\\t\\t\\t\\tvar k = 1 - t;\\n\\t\\t\\t\\treturn k * k * k * p;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tfunction b3p1( t, p ) {\\n\\n\\t\\t\\t\\tvar k = 1 - t;\\n\\t\\t\\t\\treturn 3 * k * k * t * p;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tfunction b3p2( t, p ) {\\n\\n\\t\\t\\t\\tvar k = 1 - t;\\n\\t\\t\\t\\treturn 3 * k * t * t * p;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tfunction b3p3( t, p ) {\\n\\n\\t\\t\\t\\treturn t * t * t * p;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn function b3( t, p0, p1, p2, p3 ) {\\n\\n\\t\\t\\t\\treturn b3p0( t, p0 ) + b3p1( t, p1 ) + b3p2( t, p2 ) + b3p3( t, p3 );\\n\\n\\t\\t\\t};\\n\\n\\t\\t} )()\\n\\n\\t};\\n\\n\\t// File:src/extras/core/Curve.js\\n\\n\\t/**\\n\\t * @author zz85 / http://www.lab4games.net/zz85/blog\\n\\t * Extensible curve object\\n\\t *\\n\\t * Some common of Curve methods\\n\\t * .getPoint(t), getTangent(t)\\n\\t * .getPointAt(u), getTagentAt(u)\\n\\t * .getPoints(), .getSpacedPoints()\\n\\t * .getLength()\\n\\t * .updateArcLengths()\\n\\t *\\n\\t * This following classes subclasses THREE.Curve:\\n\\t *\\n\\t * -- 2d classes --\\n\\t * THREE.LineCurve\\n\\t * THREE.QuadraticBezierCurve\\n\\t * THREE.CubicBezierCurve\\n\\t * THREE.SplineCurve\\n\\t * THREE.ArcCurve\\n\\t * THREE.EllipseCurve\\n\\t *\\n\\t * -- 3d classes --\\n\\t * THREE.LineCurve3\\n\\t * THREE.QuadraticBezierCurve3\\n\\t * THREE.CubicBezierCurve3\\n\\t * THREE.SplineCurve3\\n\\t *\\n\\t * A series of curves can be represented as a THREE.CurvePath\\n\\t *\\n\\t **/\\n\\n\\t/**************************************************************\\n\\t *\\tAbstract Curve base class\\n\\t **************************************************************/\\n\\n\\tTHREE.Curve = function () {\\n\\n\\t};\\n\\n\\tTHREE.Curve.prototype = {\\n\\n\\t\\tconstructor: THREE.Curve,\\n\\n\\t\\t// Virtual base class method to overwrite and implement in subclasses\\n\\t\\t//\\t- t [0 .. 1]\\n\\n\\t\\tgetPoint: function ( t ) {\\n\\n\\t\\t\\tconsole.warn( \\\"THREE.Curve: Warning, getPoint() not implemented!\\\" );\\n\\t\\t\\treturn null;\\n\\n\\t\\t},\\n\\n\\t\\t// Get point at relative position in curve according to arc length\\n\\t\\t// - u [0 .. 1]\\n\\n\\t\\tgetPointAt: function ( u ) {\\n\\n\\t\\t\\tvar t = this.getUtoTmapping( u );\\n\\t\\t\\treturn this.getPoint( t );\\n\\n\\t\\t},\\n\\n\\t\\t// Get sequence of points using getPoint( t )\\n\\n\\t\\tgetPoints: function ( divisions ) {\\n\\n\\t\\t\\tif ( ! divisions ) divisions = 5;\\n\\n\\t\\t\\tvar points = [];\\n\\n\\t\\t\\tfor ( var d = 0; d <= divisions; d ++ ) {\\n\\n\\t\\t\\t\\tpoints.push( this.getPoint( d / divisions ) );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn points;\\n\\n\\t\\t},\\n\\n\\t\\t// Get sequence of points using getPointAt( u )\\n\\n\\t\\tgetSpacedPoints: function ( divisions ) {\\n\\n\\t\\t\\tif ( ! divisions ) divisions = 5;\\n\\n\\t\\t\\tvar points = [];\\n\\n\\t\\t\\tfor ( var d = 0; d <= divisions; d ++ ) {\\n\\n\\t\\t\\t\\tpoints.push( this.getPointAt( d / divisions ) );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn points;\\n\\n\\t\\t},\\n\\n\\t\\t// Get total curve arc length\\n\\n\\t\\tgetLength: function () {\\n\\n\\t\\t\\tvar lengths = this.getLengths();\\n\\t\\t\\treturn lengths[ lengths.length - 1 ];\\n\\n\\t\\t},\\n\\n\\t\\t// Get list of cumulative segment lengths\\n\\n\\t\\tgetLengths: function ( divisions ) {\\n\\n\\t\\t\\tif ( ! divisions ) divisions = ( this.__arcLengthDivisions ) ? ( this.__arcLengthDivisions ) : 200;\\n\\n\\t\\t\\tif ( this.cacheArcLengths\\n\\t\\t\\t\\t&& ( this.cacheArcLengths.length === divisions + 1 )\\n\\t\\t\\t\\t&& ! this.needsUpdate ) {\\n\\n\\t\\t\\t\\t//console.log( \\\"cached\\\", this.cacheArcLengths );\\n\\t\\t\\t\\treturn this.cacheArcLengths;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.needsUpdate = false;\\n\\n\\t\\t\\tvar cache = [];\\n\\t\\t\\tvar current, last = this.getPoint( 0 );\\n\\t\\t\\tvar p, sum = 0;\\n\\n\\t\\t\\tcache.push( 0 );\\n\\n\\t\\t\\tfor ( p = 1; p <= divisions; p ++ ) {\\n\\n\\t\\t\\t\\tcurrent = this.getPoint ( p / divisions );\\n\\t\\t\\t\\tsum += current.distanceTo( last );\\n\\t\\t\\t\\tcache.push( sum );\\n\\t\\t\\t\\tlast = current;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.cacheArcLengths = cache;\\n\\n\\t\\t\\treturn cache; // { sums: cache, sum:sum }; Sum is in the last element.\\n\\n\\t\\t},\\n\\n\\t\\tupdateArcLengths: function() {\\n\\n\\t\\t\\tthis.needsUpdate = true;\\n\\t\\t\\tthis.getLengths();\\n\\n\\t\\t},\\n\\n\\t\\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\\n\\n\\t\\tgetUtoTmapping: function ( u, distance ) {\\n\\n\\t\\t\\tvar arcLengths = this.getLengths();\\n\\n\\t\\t\\tvar i = 0, il = arcLengths.length;\\n\\n\\t\\t\\tvar targetArcLength; // The targeted u distance value to get\\n\\n\\t\\t\\tif ( distance ) {\\n\\n\\t\\t\\t\\ttargetArcLength = distance;\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\ttargetArcLength = u * arcLengths[ il - 1 ];\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t//var time = Date.now();\\n\\n\\t\\t\\t// binary search for the index with largest value smaller than target u distance\\n\\n\\t\\t\\tvar low = 0, high = il - 1, comparison;\\n\\n\\t\\t\\twhile ( low <= high ) {\\n\\n\\t\\t\\t\\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\\n\\n\\t\\t\\t\\tcomparison = arcLengths[ i ] - targetArcLength;\\n\\n\\t\\t\\t\\tif ( comparison < 0 ) {\\n\\n\\t\\t\\t\\t\\tlow = i + 1;\\n\\n\\t\\t\\t\\t} else if ( comparison > 0 ) {\\n\\n\\t\\t\\t\\t\\thigh = i - 1;\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\thigh = i;\\n\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\t// DONE\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\ti = high;\\n\\n\\t\\t\\t//console.log('b' , i, low, high, Date.now()- time);\\n\\n\\t\\t\\tif ( arcLengths[ i ] === targetArcLength ) {\\n\\n\\t\\t\\t\\tvar t = i / ( il - 1 );\\n\\t\\t\\t\\treturn t;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t// we could get finer grain at lengths, or use simple interpolation between two points\\n\\n\\t\\t\\tvar lengthBefore = arcLengths[ i ];\\n\\t\\t\\tvar lengthAfter = arcLengths[ i + 1 ];\\n\\n\\t\\t\\tvar segmentLength = lengthAfter - lengthBefore;\\n\\n\\t\\t\\t// determine where we are between the 'before' and 'after' points\\n\\n\\t\\t\\tvar segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\\n\\n\\t\\t\\t// add that fractional amount to t\\n\\n\\t\\t\\tvar t = ( i + segmentFraction ) / ( il - 1 );\\n\\n\\t\\t\\treturn t;\\n\\n\\t\\t},\\n\\n\\t\\t// Returns a unit vector tangent at t\\n\\t\\t// In case any sub curve does not implement its tangent derivation,\\n\\t\\t// 2 points a small delta apart will be used to find its gradient\\n\\t\\t// which seems to give a reasonable approximation\\n\\n\\t\\tgetTangent: function( t ) {\\n\\n\\t\\t\\tvar delta = 0.0001;\\n\\t\\t\\tvar t1 = t - delta;\\n\\t\\t\\tvar t2 = t + delta;\\n\\n\\t\\t\\t// Capping in case of danger\\n\\n\\t\\t\\tif ( t1 < 0 ) t1 = 0;\\n\\t\\t\\tif ( t2 > 1 ) t2 = 1;\\n\\n\\t\\t\\tvar pt1 = this.getPoint( t1 );\\n\\t\\t\\tvar pt2 = this.getPoint( t2 );\\n\\n\\t\\t\\tvar vec = pt2.clone().sub( pt1 );\\n\\t\\t\\treturn vec.normalize();\\n\\n\\t\\t},\\n\\n\\t\\tgetTangentAt: function ( u ) {\\n\\n\\t\\t\\tvar t = this.getUtoTmapping( u );\\n\\t\\t\\treturn this.getTangent( t );\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\t// TODO: Transformation for Curves?\\n\\n\\t/**************************************************************\\n\\t *\\t3D Curves\\n\\t **************************************************************/\\n\\n\\t// A Factory method for creating new curve subclasses\\n\\n\\tTHREE.Curve.create = function ( constructor, getPointFunc ) {\\n\\n\\t\\tconstructor.prototype = Object.create( THREE.Curve.prototype );\\n\\t\\tconstructor.prototype.constructor = constructor;\\n\\t\\tconstructor.prototype.getPoint = getPointFunc;\\n\\n\\t\\treturn constructor;\\n\\n\\t};\\n\\n\\t// File:src/extras/core/CurvePath.js\\n\\n\\t/**\\n\\t * @author zz85 / http://www.lab4games.net/zz85/blog\\n\\t *\\n\\t **/\\n\\n\\t/**************************************************************\\n\\t *\\tCurved Path - a curve path is simply a array of connected\\n\\t *  curves, but retains the api of a curve\\n\\t **************************************************************/\\n\\n\\tTHREE.CurvePath = function () {\\n\\n\\t\\tthis.curves = [];\\n\\n\\t\\tthis.autoClose = false; // Automatically closes the path\\n\\n\\t};\\n\\n\\tTHREE.CurvePath.prototype = Object.assign( Object.create( THREE.Curve.prototype ), {\\n\\n\\t\\tconstructor: THREE.CurvePath,\\n\\n\\t\\tadd: function ( curve ) {\\n\\n\\t\\t\\tthis.curves.push( curve );\\n\\n\\t\\t},\\n\\n\\t\\tclosePath: function () {\\n\\n\\t\\t\\t// Add a line curve if start and end of lines are not connected\\n\\t\\t\\tvar startPoint = this.curves[ 0 ].getPoint( 0 );\\n\\t\\t\\tvar endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\\n\\n\\t\\t\\tif ( ! startPoint.equals( endPoint ) ) {\\n\\n\\t\\t\\t\\tthis.curves.push( new THREE.LineCurve( endPoint, startPoint ) );\\n\\n\\t\\t\\t}\\n\\n\\t\\t},\\n\\n\\t\\t// To get accurate point with reference to\\n\\t\\t// entire path distance at time t,\\n\\t\\t// following has to be done:\\n\\n\\t\\t// 1. Length of each sub path have to be known\\n\\t\\t// 2. Locate and identify type of curve\\n\\t\\t// 3. Get t for the curve\\n\\t\\t// 4. Return curve.getPointAt(t')\\n\\n\\t\\tgetPoint: function ( t ) {\\n\\n\\t\\t\\tvar d = t * this.getLength();\\n\\t\\t\\tvar curveLengths = this.getCurveLengths();\\n\\t\\t\\tvar i = 0;\\n\\n\\t\\t\\t// To think about boundaries points.\\n\\n\\t\\t\\twhile ( i < curveLengths.length ) {\\n\\n\\t\\t\\t\\tif ( curveLengths[ i ] >= d ) {\\n\\n\\t\\t\\t\\t\\tvar diff = curveLengths[ i ] - d;\\n\\t\\t\\t\\t\\tvar curve = this.curves[ i ];\\n\\n\\t\\t\\t\\t\\tvar segmentLength = curve.getLength();\\n\\t\\t\\t\\t\\tvar u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\\n\\n\\t\\t\\t\\t\\treturn curve.getPointAt( u );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\ti ++;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn null;\\n\\n\\t\\t\\t// loop where sum != 0, sum > d , sum+1 <d\\n\\n\\t\\t},\\n\\n\\t\\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\\n\\t\\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\\n\\t\\t// getPoint() depends on getLength\\n\\n\\t\\tgetLength: function () {\\n\\n\\t\\t\\tvar lens = this.getCurveLengths();\\n\\t\\t\\treturn lens[ lens.length - 1 ];\\n\\n\\t\\t},\\n\\n\\t\\t// cacheLengths must be recalculated.\\n\\t\\tupdateArcLengths: function () {\\n\\n\\t\\t\\tthis.needsUpdate = true;\\n\\t\\t\\tthis.cacheLengths = null;\\n\\t\\t\\tthis.getLengths();\\n\\n\\t\\t},\\n\\n\\t\\t// Compute lengths and cache them\\n\\t\\t// We cannot overwrite getLengths() because UtoT mapping uses it.\\n\\n\\t\\tgetCurveLengths: function () {\\n\\n\\t\\t\\t// We use cache values if curves and cache array are same length\\n\\n\\t\\t\\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\\n\\n\\t\\t\\t\\treturn this.cacheLengths;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Get length of sub-curve\\n\\t\\t\\t// Push sums into cached array\\n\\n\\t\\t\\tvar lengths = [], sums = 0;\\n\\n\\t\\t\\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\\n\\n\\t\\t\\t\\tsums += this.curves[ i ].getLength();\\n\\t\\t\\t\\tlengths.push( sums );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.cacheLengths = lengths;\\n\\n\\t\\t\\treturn lengths;\\n\\n\\t\\t},\\n\\n\\t\\tgetSpacedPoints: function ( divisions ) {\\n\\n\\t\\t\\tif ( ! divisions ) divisions = 40;\\n\\n\\t\\t\\tvar points = [];\\n\\n\\t\\t\\tfor ( var i = 0; i <= divisions; i ++ ) {\\n\\n\\t\\t\\t\\tpoints.push( this.getPoint( i / divisions ) );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( this.autoClose ) {\\n\\n\\t\\t\\t\\tpoints.push( points[ 0 ] );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn points;\\n\\n\\t\\t},\\n\\n\\t\\tgetPoints: function ( divisions ) {\\n\\n\\t\\t\\tdivisions = divisions || 12;\\n\\n\\t\\t\\tvar points = [], last;\\n\\n\\t\\t\\tfor ( var i = 0, curves = this.curves; i < curves.length; i ++ ) {\\n\\n\\t\\t\\t\\tvar curve = curves[ i ];\\n\\t\\t\\t\\tvar resolution = curve instanceof THREE.EllipseCurve ? divisions * 2\\n\\t\\t\\t\\t\\t: curve instanceof THREE.LineCurve ? 1\\n\\t\\t\\t\\t\\t: curve instanceof THREE.SplineCurve ? divisions * curve.points.length\\n\\t\\t\\t\\t\\t: divisions;\\n\\n\\t\\t\\t\\tvar pts = curve.getPoints( resolution );\\n\\n\\t\\t\\t\\tfor ( var j = 0; j < pts.length; j++ ) {\\n\\n\\t\\t\\t\\t\\tvar point = pts[ j ];\\n\\n\\t\\t\\t\\t\\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\\n\\n\\t\\t\\t\\t\\tpoints.push( point );\\n\\t\\t\\t\\t\\tlast = point;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( this.autoClose && points.length > 1 && !points[ points.length - 1 ].equals( points[ 0 ] ) ) {\\n\\n\\t\\t\\t\\tpoints.push( points[ 0 ] );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn points;\\n\\n\\t\\t},\\n\\n\\t\\t/**************************************************************\\n\\t\\t *\\tCreate Geometries Helpers\\n\\t\\t **************************************************************/\\n\\n\\t\\t/// Generate geometry from path points (for Line or Points objects)\\n\\n\\t\\tcreatePointsGeometry: function ( divisions ) {\\n\\n\\t\\t\\tvar pts = this.getPoints( divisions );\\n\\t\\t\\treturn this.createGeometry( pts );\\n\\n\\t\\t},\\n\\n\\t\\t// Generate geometry from equidistant sampling along the path\\n\\n\\t\\tcreateSpacedPointsGeometry: function ( divisions ) {\\n\\n\\t\\t\\tvar pts = this.getSpacedPoints( divisions );\\n\\t\\t\\treturn this.createGeometry( pts );\\n\\n\\t\\t},\\n\\n\\t\\tcreateGeometry: function ( points ) {\\n\\n\\t\\t\\tvar geometry = new THREE.Geometry();\\n\\n\\t\\t\\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\\n\\n\\t\\t\\t\\tvar point = points[ i ];\\n\\t\\t\\t\\tgeometry.vertices.push( new THREE.Vector3( point.x, point.y, point.z || 0 ) );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn geometry;\\n\\n\\t\\t}\\n\\n\\t} );\\n\\n\\t// File:src/extras/core/Font.js\\n\\n\\t/**\\n\\t * @author zz85 / http://www.lab4games.net/zz85/blog\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t */\\n\\n\\tTHREE.Font = function ( data ) {\\n\\n\\t\\tthis.data = data;\\n\\n\\t};\\n\\n\\tObject.assign( THREE.Font.prototype, {\\n\\n\\t\\tgenerateShapes: function ( text, size, divisions ) {\\n\\n\\t\\t\\tfunction createPaths( text ) {\\n\\n\\t\\t\\t\\tvar chars = String( text ).split( '' );\\n\\t\\t\\t\\tvar scale = size / data.resolution;\\n\\t\\t\\t\\tvar offset = 0;\\n\\n\\t\\t\\t\\tvar paths = [];\\n\\n\\t\\t\\t\\tfor ( var i = 0; i < chars.length; i ++ ) {\\n\\n\\t\\t\\t\\t\\tvar ret = createPath( chars[ i ], scale, offset );\\n\\t\\t\\t\\t\\toffset += ret.offset;\\n\\n\\t\\t\\t\\t\\tpaths.push( ret.path );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn paths;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tfunction createPath( c, scale, offset ) {\\n\\n\\t\\t\\t\\tvar glyph = data.glyphs[ c ] || data.glyphs[ '?' ];\\n\\n\\t\\t\\t\\tif ( ! glyph ) return;\\n\\n\\t\\t\\t\\tvar path = new THREE.ShapePath();\\n\\n\\t\\t\\t\\tvar pts = [], b2 = THREE.ShapeUtils.b2, b3 = THREE.ShapeUtils.b3;\\n\\t\\t\\t\\tvar x, y, cpx, cpy, cpx0, cpy0, cpx1, cpy1, cpx2, cpy2, laste;\\n\\n\\t\\t\\t\\tif ( glyph.o ) {\\n\\n\\t\\t\\t\\t\\tvar outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\\n\\n\\t\\t\\t\\t\\tfor ( var i = 0, l = outline.length; i < l; ) {\\n\\n\\t\\t\\t\\t\\t\\tvar action = outline[ i ++ ];\\n\\n\\t\\t\\t\\t\\t\\tswitch ( action ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tcase 'm': // moveTo\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tx = outline[ i ++ ] * scale + offset;\\n\\t\\t\\t\\t\\t\\t\\t\\ty = outline[ i ++ ] * scale;\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tpath.moveTo( x, y );\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\t\\t\\tcase 'l': // lineTo\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tx = outline[ i ++ ] * scale + offset;\\n\\t\\t\\t\\t\\t\\t\\t\\ty = outline[ i ++ ] * scale;\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tpath.lineTo( x, y );\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\t\\t\\tcase 'q': // quadraticCurveTo\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tcpx  = outline[ i ++ ] * scale + offset;\\n\\t\\t\\t\\t\\t\\t\\t\\tcpy  = outline[ i ++ ] * scale;\\n\\t\\t\\t\\t\\t\\t\\t\\tcpx1 = outline[ i ++ ] * scale + offset;\\n\\t\\t\\t\\t\\t\\t\\t\\tcpy1 = outline[ i ++ ] * scale;\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tlaste = pts[ pts.length - 1 ];\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tif ( laste ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tcpx0 = laste.x;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tcpy0 = laste.y;\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tfor ( var i2 = 1; i2 <= divisions; i2 ++ ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tvar t = i2 / divisions;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tb2( t, cpx0, cpx1, cpx );\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tb2( t, cpy0, cpy1, cpy );\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\t\\t\\tcase 'b': // bezierCurveTo\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tcpx  = outline[ i ++ ] * scale + offset;\\n\\t\\t\\t\\t\\t\\t\\t\\tcpy  = outline[ i ++ ] * scale;\\n\\t\\t\\t\\t\\t\\t\\t\\tcpx1 = outline[ i ++ ] * scale + offset;\\n\\t\\t\\t\\t\\t\\t\\t\\tcpy1 = outline[ i ++ ] * scale;\\n\\t\\t\\t\\t\\t\\t\\t\\tcpx2 = outline[ i ++ ] * scale + offset;\\n\\t\\t\\t\\t\\t\\t\\t\\tcpy2 = outline[ i ++ ] * scale;\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tlaste = pts[ pts.length - 1 ];\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tif ( laste ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tcpx0 = laste.x;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tcpy0 = laste.y;\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tfor ( var i2 = 1; i2 <= divisions; i2 ++ ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tvar t = i2 / divisions;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tb3( t, cpx0, cpx1, cpx2, cpx );\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tb3( t, cpy0, cpy1, cpy2, cpy );\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn { offset: glyph.ha * scale, path: path };\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t//\\n\\n\\t\\t\\tif ( size === undefined ) size = 100;\\n\\t\\t\\tif ( divisions === undefined ) divisions = 4;\\n\\n\\t\\t\\tvar data = this.data;\\n\\n\\t\\t\\tvar paths = createPaths( text );\\n\\t\\t\\tvar shapes = [];\\n\\n\\t\\t\\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\\n\\n\\t\\t\\t\\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn shapes;\\n\\n\\t\\t}\\n\\n\\t} );\\n\\n\\t// File:src/extras/core/Path.js\\n\\n\\t/**\\n\\t * @author zz85 / http://www.lab4games.net/zz85/blog\\n\\t * Creates free form 2d path using series of points, lines or curves.\\n\\t *\\n\\t **/\\n\\n\\tTHREE.Path = function ( points ) {\\n\\n\\t\\tTHREE.CurvePath.call( this );\\n\\t\\tthis.currentPoint = new THREE.Vector2();\\n\\n\\t\\tif ( points ) {\\n\\n\\t\\t\\tthis.fromPoints( points );\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\tTHREE.Path.prototype = Object.assign( Object.create( THREE.CurvePath.prototype ), {\\n\\n\\t\\tconstructor: THREE.Path,\\n\\n\\t\\t// Create path using straight lines to connect all points\\n\\t\\t// - vectors: array of Vector2\\n\\t\\tfromPoints: function ( vectors ) {\\n\\n\\t\\t\\tthis.moveTo( vectors[ 0 ].x, vectors[ 0 ].y );\\n\\n\\t\\t\\tfor ( var i = 1, l = vectors.length; i < l; i ++ ) {\\n\\n\\t\\t\\t\\tthis.lineTo( vectors[ i ].x, vectors[ i ].y );\\n\\n\\t\\t\\t}\\n\\n\\t\\t},\\n\\n\\t\\tmoveTo: function ( x, y ) {\\n\\n\\t\\t\\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\\n\\n\\t\\t},\\n\\n\\t\\tlineTo: function ( x, y ) {\\n\\n\\t\\t\\tvar curve = new THREE.LineCurve( this.currentPoint.clone(), new THREE.Vector2( x, y ) );\\n\\t\\t\\tthis.curves.push( curve );\\n\\n\\t\\t\\tthis.currentPoint.set( x, y );\\n\\n\\t\\t},\\n\\n\\t\\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\\n\\n\\t\\t\\tvar curve = new THREE.QuadraticBezierCurve(\\n\\t\\t\\t\\tthis.currentPoint.clone(),\\n\\t\\t\\t\\tnew THREE.Vector2( aCPx, aCPy ),\\n\\t\\t\\t\\tnew THREE.Vector2( aX, aY )\\n\\t\\t\\t);\\n\\n\\t\\t\\tthis.curves.push( curve );\\n\\n\\t\\t\\tthis.currentPoint.set( aX, aY );\\n\\n\\t\\t},\\n\\n\\t\\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\\n\\n\\t\\t\\tvar curve = new THREE.CubicBezierCurve(\\n\\t\\t\\t\\tthis.currentPoint.clone(),\\n\\t\\t\\t\\tnew THREE.Vector2( aCP1x, aCP1y ),\\n\\t\\t\\t\\tnew THREE.Vector2( aCP2x, aCP2y ),\\n\\t\\t\\t\\tnew THREE.Vector2( aX, aY )\\n\\t\\t\\t);\\n\\n\\t\\t\\tthis.curves.push( curve );\\n\\n\\t\\t\\tthis.currentPoint.set( aX, aY );\\n\\n\\t\\t},\\n\\n\\t\\tsplineThru: function ( pts /*Array of Vector*/ ) {\\n\\n\\t\\t\\tvar npts = [ this.currentPoint.clone() ].concat( pts );\\n\\n\\t\\t\\tvar curve = new THREE.SplineCurve( npts );\\n\\t\\t\\tthis.curves.push( curve );\\n\\n\\t\\t\\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\\n\\n\\t\\t},\\n\\n\\t\\tarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\\n\\n\\t\\t\\tvar x0 = this.currentPoint.x;\\n\\t\\t\\tvar y0 = this.currentPoint.y;\\n\\n\\t\\t\\tthis.absarc( aX + x0, aY + y0, aRadius,\\n\\t\\t\\t\\taStartAngle, aEndAngle, aClockwise );\\n\\n\\t\\t},\\n\\n\\t\\tabsarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\\n\\n\\t\\t\\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\\n\\n\\t\\t},\\n\\n\\t\\tellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\\n\\n\\t\\t\\tvar x0 = this.currentPoint.x;\\n\\t\\t\\tvar y0 = this.currentPoint.y;\\n\\n\\t\\t\\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\\n\\n\\t\\t},\\n\\n\\t\\tabsellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\\n\\n\\t\\t\\tvar curve = new THREE.EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\\n\\n\\t\\t\\tif ( this.curves.length > 0 ) {\\n\\n\\t\\t\\t\\t// if a previous curve is present, attempt to join\\n\\t\\t\\t\\tvar firstPoint = curve.getPoint( 0 );\\n\\n\\t\\t\\t\\tif ( ! firstPoint.equals( this.currentPoint ) ) {\\n\\n\\t\\t\\t\\t\\tthis.lineTo( firstPoint.x, firstPoint.y );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.curves.push( curve );\\n\\n\\t\\t\\tvar lastPoint = curve.getPoint( 1 );\\n\\t\\t\\tthis.currentPoint.copy( lastPoint );\\n\\n\\t\\t}\\n\\n\\t} );\\n\\n\\n\\t// minimal class for proxing functions to Path. Replaces old \\\"extractSubpaths()\\\"\\n\\tTHREE.ShapePath = function() {\\n\\t\\tthis.subPaths = [];\\n\\t\\tthis.currentPath = null;\\n\\t}\\n\\n\\tTHREE.ShapePath.prototype = {\\n\\t\\tmoveTo: function ( x, y ) {\\n\\t\\t\\tthis.currentPath = new THREE.Path();\\n\\t\\t\\tthis.subPaths.push(this.currentPath);\\n\\t\\t\\tthis.currentPath.moveTo( x, y );\\n\\t\\t},\\n\\t\\tlineTo: function ( x, y ) {\\n\\t\\t\\tthis.currentPath.lineTo( x, y );\\n\\t\\t},\\n\\t\\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\\n\\t\\t\\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\\n\\t\\t},\\n\\t\\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\\n\\t\\t\\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\\n\\t\\t},\\n\\t\\tsplineThru: function ( pts ) {\\n\\t\\t\\tthis.currentPath.splineThru( pts );\\n\\t\\t},\\n\\n\\t\\ttoShapes: function ( isCCW, noHoles ) {\\n\\n\\t\\t\\tfunction toShapesNoHoles( inSubpaths ) {\\n\\n\\t\\t\\t\\tvar shapes = [];\\n\\n\\t\\t\\t\\tfor ( var i = 0, l = inSubpaths.length; i < l; i ++ ) {\\n\\n\\t\\t\\t\\t\\tvar tmpPath = inSubpaths[ i ];\\n\\n\\t\\t\\t\\t\\tvar tmpShape = new THREE.Shape();\\n\\t\\t\\t\\t\\ttmpShape.curves = tmpPath.curves;\\n\\n\\t\\t\\t\\t\\tshapes.push( tmpShape );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn shapes;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tfunction isPointInsidePolygon( inPt, inPolygon ) {\\n\\n\\t\\t\\t\\tvar polyLen = inPolygon.length;\\n\\n\\t\\t\\t\\t// inPt on polygon contour => immediate success    or\\n\\t\\t\\t\\t// toggling of inside/outside at every single! intersection point of an edge\\n\\t\\t\\t\\t//  with the horizontal line through inPt, left of inPt\\n\\t\\t\\t\\t//  not counting lowerY endpoints of edges and whole edges on that line\\n\\t\\t\\t\\tvar inside = false;\\n\\t\\t\\t\\tfor ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\\n\\n\\t\\t\\t\\t\\tvar edgeLowPt  = inPolygon[ p ];\\n\\t\\t\\t\\t\\tvar edgeHighPt = inPolygon[ q ];\\n\\n\\t\\t\\t\\t\\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\\n\\t\\t\\t\\t\\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\\n\\n\\t\\t\\t\\t\\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\\n\\n\\t\\t\\t\\t\\t\\t// not parallel\\n\\t\\t\\t\\t\\t\\tif ( edgeDy < 0 ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tedgeLowPt  = inPolygon[ q ]; edgeDx = - edgeDx;\\n\\t\\t\\t\\t\\t\\t\\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \\t\\tcontinue;\\n\\n\\t\\t\\t\\t\\t\\tif ( inPt.y === edgeLowPt.y ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tif ( inPt.x === edgeLowPt.x )\\t\\treturn\\ttrue;\\t\\t// inPt is on contour ?\\n\\t\\t\\t\\t\\t\\t\\t// continue;\\t\\t\\t\\t// no intersection or edgeLowPt => doesn't count !!!\\n\\n\\t\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\t\\tvar perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\\n\\t\\t\\t\\t\\t\\t\\tif ( perpEdge === 0 )\\t\\t\\t\\treturn\\ttrue;\\t\\t// inPt is on contour ?\\n\\t\\t\\t\\t\\t\\t\\tif ( perpEdge < 0 ) \\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t\\t\\t\\tinside = ! inside;\\t\\t// true intersection left of inPt\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\t// parallel or collinear\\n\\t\\t\\t\\t\\t\\tif ( inPt.y !== edgeLowPt.y ) \\t\\tcontinue;\\t\\t\\t// parallel\\n\\t\\t\\t\\t\\t\\t// edge lies on the same horizontal line as inPt\\n\\t\\t\\t\\t\\t\\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\\n\\t\\t\\t\\t\\t\\t\\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\\t\\treturn\\ttrue;\\t// inPt: Point on contour !\\n\\t\\t\\t\\t\\t\\t// continue;\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn\\tinside;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar isClockWise = THREE.ShapeUtils.isClockWise;\\n\\n\\t\\t\\tvar subPaths = this.subPaths;\\n\\t\\t\\tif ( subPaths.length === 0 ) return [];\\n\\n\\t\\t\\tif ( noHoles === true )\\treturn\\ttoShapesNoHoles( subPaths );\\n\\n\\n\\t\\t\\tvar solid, tmpPath, tmpShape, shapes = [];\\n\\n\\t\\t\\tif ( subPaths.length === 1 ) {\\n\\n\\t\\t\\t\\ttmpPath = subPaths[ 0 ];\\n\\t\\t\\t\\ttmpShape = new THREE.Shape();\\n\\t\\t\\t\\ttmpShape.curves = tmpPath.curves;\\n\\t\\t\\t\\tshapes.push( tmpShape );\\n\\t\\t\\t\\treturn shapes;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\\n\\t\\t\\tholesFirst = isCCW ? ! holesFirst : holesFirst;\\n\\n\\t\\t\\t// console.log(\\\"Holes first\\\", holesFirst);\\n\\n\\t\\t\\tvar betterShapeHoles = [];\\n\\t\\t\\tvar newShapes = [];\\n\\t\\t\\tvar newShapeHoles = [];\\n\\t\\t\\tvar mainIdx = 0;\\n\\t\\t\\tvar tmpPoints;\\n\\n\\t\\t\\tnewShapes[ mainIdx ] = undefined;\\n\\t\\t\\tnewShapeHoles[ mainIdx ] = [];\\n\\n\\t\\t\\tfor ( var i = 0, l = subPaths.length; i < l; i ++ ) {\\n\\n\\t\\t\\t\\ttmpPath = subPaths[ i ];\\n\\t\\t\\t\\ttmpPoints = tmpPath.getPoints();\\n\\t\\t\\t\\tsolid = isClockWise( tmpPoints );\\n\\t\\t\\t\\tsolid = isCCW ? ! solid : solid;\\n\\n\\t\\t\\t\\tif ( solid ) {\\n\\n\\t\\t\\t\\t\\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\\tmainIdx ++;\\n\\n\\t\\t\\t\\t\\tnewShapes[ mainIdx ] = { s: new THREE.Shape(), p: tmpPoints };\\n\\t\\t\\t\\t\\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\\n\\n\\t\\t\\t\\t\\tif ( holesFirst )\\tmainIdx ++;\\n\\t\\t\\t\\t\\tnewShapeHoles[ mainIdx ] = [];\\n\\n\\t\\t\\t\\t\\t//console.log('cw', i);\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\\n\\n\\t\\t\\t\\t\\t//console.log('ccw', i);\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t// only Holes? -> probably all Shapes with wrong orientation\\n\\t\\t\\tif ( ! newShapes[ 0 ] )\\treturn\\ttoShapesNoHoles( subPaths );\\n\\n\\n\\t\\t\\tif ( newShapes.length > 1 ) {\\n\\n\\t\\t\\t\\tvar ambiguous = false;\\n\\t\\t\\t\\tvar toChange = [];\\n\\n\\t\\t\\t\\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\\n\\n\\t\\t\\t\\t\\tbetterShapeHoles[ sIdx ] = [];\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\\n\\n\\t\\t\\t\\t\\tvar sho = newShapeHoles[ sIdx ];\\n\\n\\t\\t\\t\\t\\tfor ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\\n\\n\\t\\t\\t\\t\\t\\tvar ho = sho[ hIdx ];\\n\\t\\t\\t\\t\\t\\tvar hole_unassigned = true;\\n\\n\\t\\t\\t\\t\\t\\tfor ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tif ( sIdx !== s2Idx )\\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\\n\\t\\t\\t\\t\\t\\t\\t\\tif ( hole_unassigned ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\thole_unassigned = false;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tbetterShapeHoles[ s2Idx ].push( ho );\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tambiguous = true;\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tif ( hole_unassigned ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tbetterShapeHoles[ sIdx ].push( ho );\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\t// console.log(\\\"ambiguous: \\\", ambiguous);\\n\\t\\t\\t\\tif ( toChange.length > 0 ) {\\n\\n\\t\\t\\t\\t\\t// console.log(\\\"to change: \\\", toChange);\\n\\t\\t\\t\\t\\tif ( ! ambiguous )\\tnewShapeHoles = betterShapeHoles;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar tmpHoles;\\n\\n\\t\\t\\tfor ( var i = 0, il = newShapes.length; i < il; i ++ ) {\\n\\n\\t\\t\\t\\ttmpShape = newShapes[ i ].s;\\n\\t\\t\\t\\tshapes.push( tmpShape );\\n\\t\\t\\t\\ttmpHoles = newShapeHoles[ i ];\\n\\n\\t\\t\\t\\tfor ( var j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\\n\\n\\t\\t\\t\\t\\ttmpShape.holes.push( tmpHoles[ j ].h );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t//console.log(\\\"shape\\\", shapes);\\n\\n\\t\\t\\treturn shapes;\\n\\n\\t\\t}\\n\\t}\\n\\n\\t// File:src/extras/core/Shape.js\\n\\n\\t/**\\n\\t * @author zz85 / http://www.lab4games.net/zz85/blog\\n\\t * Defines a 2d shape plane using paths.\\n\\t **/\\n\\n\\t// STEP 1 Create a path.\\n\\t// STEP 2 Turn path into shape.\\n\\t// STEP 3 ExtrudeGeometry takes in Shape/Shapes\\n\\t// STEP 3a - Extract points from each shape, turn to vertices\\n\\t// STEP 3b - Triangulate each shape, add faces.\\n\\n\\tTHREE.Shape = function () {\\n\\n\\t\\tTHREE.Path.apply( this, arguments );\\n\\n\\t\\tthis.holes = [];\\n\\n\\t};\\n\\n\\tTHREE.Shape.prototype = Object.assign( Object.create( THREE.Path.prototype ), {\\n\\n\\t\\tconstructor: THREE.Shape,\\n\\n\\t\\t// Convenience method to return ExtrudeGeometry\\n\\n\\t\\textrude: function ( options ) {\\n\\n\\t\\t\\treturn new THREE.ExtrudeGeometry( this, options );\\n\\n\\t\\t},\\n\\n\\t\\t// Convenience method to return ShapeGeometry\\n\\n\\t\\tmakeGeometry: function ( options ) {\\n\\n\\t\\t\\treturn new THREE.ShapeGeometry( this, options );\\n\\n\\t\\t},\\n\\n\\t\\tgetPointsHoles: function ( divisions ) {\\n\\n\\t\\t\\tvar holesPts = [];\\n\\n\\t\\t\\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\\n\\n\\t\\t\\t\\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn holesPts;\\n\\n\\t\\t},\\n\\n\\t\\t// Get points of shape and holes (keypoints based on segments parameter)\\n\\n\\t\\textractAllPoints: function ( divisions ) {\\n\\n\\t\\t\\treturn {\\n\\n\\t\\t\\t\\tshape: this.getPoints( divisions ),\\n\\t\\t\\t\\tholes: this.getPointsHoles( divisions )\\n\\n\\t\\t\\t};\\n\\n\\t\\t},\\n\\n\\t\\textractPoints: function ( divisions ) {\\n\\n\\t\\t\\treturn this.extractAllPoints( divisions );\\n\\n\\t\\t}\\n\\n\\t} );\\n\\n\\t// File:src/extras/curves/LineCurve.js\\n\\n\\t/**************************************************************\\n\\t *\\tLine\\n\\t **************************************************************/\\n\\n\\tTHREE.LineCurve = function ( v1, v2 ) {\\n\\n\\t\\tthis.v1 = v1;\\n\\t\\tthis.v2 = v2;\\n\\n\\t};\\n\\n\\tTHREE.LineCurve.prototype = Object.create( THREE.Curve.prototype );\\n\\tTHREE.LineCurve.prototype.constructor = THREE.LineCurve;\\n\\n\\tTHREE.LineCurve.prototype.getPoint = function ( t ) {\\n\\n\\t\\tif ( t === 1 ) {\\n\\n\\t\\t\\treturn this.v2.clone();\\n\\n\\t\\t}\\n\\n\\t\\tvar point = this.v2.clone().sub( this.v1 );\\n\\t\\tpoint.multiplyScalar( t ).add( this.v1 );\\n\\n\\t\\treturn point;\\n\\n\\t};\\n\\n\\t// Line curve is linear, so we can overwrite default getPointAt\\n\\n\\tTHREE.LineCurve.prototype.getPointAt = function ( u ) {\\n\\n\\t\\treturn this.getPoint( u );\\n\\n\\t};\\n\\n\\tTHREE.LineCurve.prototype.getTangent = function( t ) {\\n\\n\\t\\tvar tangent = this.v2.clone().sub( this.v1 );\\n\\n\\t\\treturn tangent.normalize();\\n\\n\\t};\\n\\n\\t// File:src/extras/curves/QuadraticBezierCurve.js\\n\\n\\t/**************************************************************\\n\\t *\\tQuadratic Bezier curve\\n\\t **************************************************************/\\n\\n\\n\\tTHREE.QuadraticBezierCurve = function ( v0, v1, v2 ) {\\n\\n\\t\\tthis.v0 = v0;\\n\\t\\tthis.v1 = v1;\\n\\t\\tthis.v2 = v2;\\n\\n\\t};\\n\\n\\tTHREE.QuadraticBezierCurve.prototype = Object.create( THREE.Curve.prototype );\\n\\tTHREE.QuadraticBezierCurve.prototype.constructor = THREE.QuadraticBezierCurve;\\n\\n\\n\\tTHREE.QuadraticBezierCurve.prototype.getPoint = function ( t ) {\\n\\n\\t\\tvar b2 = THREE.ShapeUtils.b2;\\n\\n\\t\\treturn new THREE.Vector2(\\n\\t\\t\\tb2( t, this.v0.x, this.v1.x, this.v2.x ),\\n\\t\\t\\tb2( t, this.v0.y, this.v1.y, this.v2.y )\\n\\t\\t);\\n\\n\\t};\\n\\n\\n\\tTHREE.QuadraticBezierCurve.prototype.getTangent = function( t ) {\\n\\n\\t\\tvar tangentQuadraticBezier = THREE.CurveUtils.tangentQuadraticBezier;\\n\\n\\t\\treturn new THREE.Vector2(\\n\\t\\t\\ttangentQuadraticBezier( t, this.v0.x, this.v1.x, this.v2.x ),\\n\\t\\t\\ttangentQuadraticBezier( t, this.v0.y, this.v1.y, this.v2.y )\\n\\t\\t).normalize();\\n\\n\\t};\\n\\n\\t// File:src/extras/curves/CubicBezierCurve.js\\n\\n\\t/**************************************************************\\n\\t *\\tCubic Bezier curve\\n\\t **************************************************************/\\n\\n\\tTHREE.CubicBezierCurve = function ( v0, v1, v2, v3 ) {\\n\\n\\t\\tthis.v0 = v0;\\n\\t\\tthis.v1 = v1;\\n\\t\\tthis.v2 = v2;\\n\\t\\tthis.v3 = v3;\\n\\n\\t};\\n\\n\\tTHREE.CubicBezierCurve.prototype = Object.create( THREE.Curve.prototype );\\n\\tTHREE.CubicBezierCurve.prototype.constructor = THREE.CubicBezierCurve;\\n\\n\\tTHREE.CubicBezierCurve.prototype.getPoint = function ( t ) {\\n\\n\\t\\tvar b3 = THREE.ShapeUtils.b3;\\n\\n\\t\\treturn new THREE.Vector2( \\n\\t\\t\\tb3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x ),\\n\\t\\t\\tb3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y )\\n\\t\\t);\\n\\n\\t};\\n\\n\\tTHREE.CubicBezierCurve.prototype.getTangent = function( t ) {\\n\\n\\t\\tvar tangentCubicBezier = THREE.CurveUtils.tangentCubicBezier;\\n\\n\\t\\treturn new THREE.Vector2( \\n\\t\\t\\ttangentCubicBezier( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x ),\\n\\t\\t\\ttangentCubicBezier( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y )\\n\\t\\t).normalize();\\n\\n\\t};\\n\\n\\t// File:src/extras/curves/SplineCurve.js\\n\\n\\t/**************************************************************\\n\\t *\\tSpline curve\\n\\t **************************************************************/\\n\\n\\tTHREE.SplineCurve = function ( points /* array of Vector2 */ ) {\\n\\n\\t\\tthis.points = ( points == undefined ) ? [] : points;\\n\\n\\t};\\n\\n\\tTHREE.SplineCurve.prototype = Object.create( THREE.Curve.prototype );\\n\\tTHREE.SplineCurve.prototype.constructor = THREE.SplineCurve;\\n\\n\\tTHREE.SplineCurve.prototype.getPoint = function ( t ) {\\n\\n\\t\\tvar points = this.points;\\n\\t\\tvar point = ( points.length - 1 ) * t;\\n\\n\\t\\tvar intPoint = Math.floor( point );\\n\\t\\tvar weight = point - intPoint;\\n\\n\\t\\tvar point0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\\n\\t\\tvar point1 = points[ intPoint ];\\n\\t\\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\\n\\t\\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\\n\\n\\t\\tvar interpolate = THREE.CurveUtils.interpolate;\\n\\n\\t\\treturn new THREE.Vector2(\\n\\t\\t\\tinterpolate( point0.x, point1.x, point2.x, point3.x, weight ),\\n\\t\\t\\tinterpolate( point0.y, point1.y, point2.y, point3.y, weight )\\n\\t\\t);\\n\\n\\t};\\n\\n\\t// File:src/extras/curves/EllipseCurve.js\\n\\n\\t/**************************************************************\\n\\t *\\tEllipse curve\\n\\t **************************************************************/\\n\\n\\tTHREE.EllipseCurve = function( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\\n\\n\\t\\tthis.aX = aX;\\n\\t\\tthis.aY = aY;\\n\\n\\t\\tthis.xRadius = xRadius;\\n\\t\\tthis.yRadius = yRadius;\\n\\n\\t\\tthis.aStartAngle = aStartAngle;\\n\\t\\tthis.aEndAngle = aEndAngle;\\n\\n\\t\\tthis.aClockwise = aClockwise;\\n\\n\\t\\tthis.aRotation = aRotation || 0;\\n\\n\\t};\\n\\n\\tTHREE.EllipseCurve.prototype = Object.create( THREE.Curve.prototype );\\n\\tTHREE.EllipseCurve.prototype.constructor = THREE.EllipseCurve;\\n\\n\\tTHREE.EllipseCurve.prototype.getPoint = function( t ) {\\n\\n\\t\\tvar twoPi = Math.PI * 2;\\n\\t\\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\\n\\t\\tvar samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\\n\\n\\t\\t// ensures that deltaAngle is 0 .. 2 PI\\n\\t\\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\\n\\t\\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\\n\\n\\t\\tif ( deltaAngle < Number.EPSILON ) {\\n\\n\\t\\t\\tif ( samePoints ) {\\n\\n\\t\\t\\t\\tdeltaAngle = 0;\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\tdeltaAngle = twoPi;\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tif ( this.aClockwise === true && ! samePoints ) {\\n\\n\\t\\t\\tif ( deltaAngle === twoPi ) {\\n\\n\\t\\t\\t\\tdeltaAngle = - twoPi;\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\tdeltaAngle = deltaAngle - twoPi;\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tvar angle = this.aStartAngle + t * deltaAngle;\\n\\t\\tvar x = this.aX + this.xRadius * Math.cos( angle );\\n\\t\\tvar y = this.aY + this.yRadius * Math.sin( angle );\\n\\n\\t\\tif ( this.aRotation !== 0 ) {\\n\\n\\t\\t\\tvar cos = Math.cos( this.aRotation );\\n\\t\\t\\tvar sin = Math.sin( this.aRotation );\\n\\n\\t\\t\\tvar tx = x - this.aX;\\n\\t\\t\\tvar ty = y - this.aY;\\n\\n\\t\\t\\t// Rotate the point about the center of the ellipse.\\n\\t\\t\\tx = tx * cos - ty * sin + this.aX;\\n\\t\\t\\ty = tx * sin + ty * cos + this.aY;\\n\\n\\t\\t}\\n\\n\\t\\treturn new THREE.Vector2( x, y );\\n\\n\\t};\\n\\n\\t// File:src/extras/curves/ArcCurve.js\\n\\n\\t/**************************************************************\\n\\t *\\tArc curve\\n\\t **************************************************************/\\n\\n\\tTHREE.ArcCurve = function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\\n\\n\\t\\tTHREE.EllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\\n\\n\\t};\\n\\n\\tTHREE.ArcCurve.prototype = Object.create( THREE.EllipseCurve.prototype );\\n\\tTHREE.ArcCurve.prototype.constructor = THREE.ArcCurve;\\n\\n\\t// File:src/extras/curves/LineCurve3.js\\n\\n\\t/**************************************************************\\n\\t *\\tLine3D\\n\\t **************************************************************/\\n\\n\\tTHREE.LineCurve3 = THREE.Curve.create(\\n\\n\\t\\tfunction ( v1, v2 ) {\\n\\n\\t\\t\\tthis.v1 = v1;\\n\\t\\t\\tthis.v2 = v2;\\n\\n\\t\\t},\\n\\n\\t\\tfunction ( t ) {\\n\\n\\t\\t\\tif ( t === 1 ) {\\n\\n\\t\\t\\t\\treturn this.v2.clone();\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar vector = new THREE.Vector3();\\n\\n\\t\\t\\tvector.subVectors( this.v2, this.v1 ); // diff\\n\\t\\t\\tvector.multiplyScalar( t );\\n\\t\\t\\tvector.add( this.v1 );\\n\\n\\t\\t\\treturn vector;\\n\\n\\t\\t}\\n\\n\\t);\\n\\n\\t// File:src/extras/curves/QuadraticBezierCurve3.js\\n\\n\\t/**************************************************************\\n\\t *\\tQuadratic Bezier 3D curve\\n\\t **************************************************************/\\n\\n\\tTHREE.QuadraticBezierCurve3 = THREE.Curve.create(\\n\\n\\t\\tfunction ( v0, v1, v2 ) {\\n\\n\\t\\t\\tthis.v0 = v0;\\n\\t\\t\\tthis.v1 = v1;\\n\\t\\t\\tthis.v2 = v2;\\n\\n\\t\\t},\\n\\n\\t\\tfunction ( t ) {\\n\\n\\t\\t\\tvar b2 = THREE.ShapeUtils.b2;\\t\\t\\n\\n\\t\\t\\treturn new THREE.Vector3(\\n\\t\\t\\t\\tb2( t, this.v0.x, this.v1.x, this.v2.x ),\\n\\t\\t\\t\\tb2( t, this.v0.y, this.v1.y, this.v2.y ),\\n\\t\\t\\t\\tb2( t, this.v0.z, this.v1.z, this.v2.z )\\n\\t\\t\\t);\\n\\n\\t\\t}\\n\\n\\t);\\n\\n\\t// File:src/extras/curves/CubicBezierCurve3.js\\n\\n\\t/**************************************************************\\n\\t *\\tCubic Bezier 3D curve\\n\\t **************************************************************/\\n\\n\\tTHREE.CubicBezierCurve3 = THREE.Curve.create(\\n\\n\\t\\tfunction ( v0, v1, v2, v3 ) {\\n\\n\\t\\t\\tthis.v0 = v0;\\n\\t\\t\\tthis.v1 = v1;\\n\\t\\t\\tthis.v2 = v2;\\n\\t\\t\\tthis.v3 = v3;\\n\\n\\t\\t},\\n\\n\\t\\tfunction ( t ) {\\n\\n\\t\\t\\tvar b3 = THREE.ShapeUtils.b3;\\n\\n\\t\\t\\treturn new THREE.Vector3(\\n\\t\\t\\t\\tb3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x ),\\n\\t\\t\\t\\tb3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y ),\\n\\t\\t\\t\\tb3( t, this.v0.z, this.v1.z, this.v2.z, this.v3.z )\\n\\t\\t\\t);\\n\\n\\t\\t}\\n\\n\\t);\\n\\n\\t// File:src/extras/curves/SplineCurve3.js\\n\\n\\t/**************************************************************\\n\\t *\\tSpline 3D curve\\n\\t **************************************************************/\\n\\n\\n\\tTHREE.SplineCurve3 = THREE.Curve.create(\\n\\n\\t\\tfunction ( points /* array of Vector3 */ ) {\\n\\n\\t\\t\\tconsole.warn( 'THREE.SplineCurve3 will be deprecated. Please use THREE.CatmullRomCurve3' );\\n\\t\\t\\tthis.points = ( points == undefined ) ? [] : points;\\n\\n\\t\\t},\\n\\n\\t\\tfunction ( t ) {\\n\\n\\t\\t\\tvar points = this.points;\\n\\t\\t\\tvar point = ( points.length - 1 ) * t;\\n\\n\\t\\t\\tvar intPoint = Math.floor( point );\\n\\t\\t\\tvar weight = point - intPoint;\\n\\n\\t\\t\\tvar point0 = points[ intPoint == 0 ? intPoint : intPoint - 1 ];\\n\\t\\t\\tvar point1 = points[ intPoint ];\\n\\t\\t\\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\\n\\t\\t\\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\\n\\n\\t\\t\\tvar interpolate = THREE.CurveUtils.interpolate;\\n\\n\\t\\t\\treturn new THREE.Vector3(\\n\\t\\t\\t\\tinterpolate( point0.x, point1.x, point2.x, point3.x, weight ),\\n\\t\\t\\t\\tinterpolate( point0.y, point1.y, point2.y, point3.y, weight ),\\n\\t\\t\\t\\tinterpolate( point0.z, point1.z, point2.z, point3.z, weight )\\n\\t\\t\\t);\\n\\n\\t\\t}\\n\\n\\t);\\n\\n\\t// File:src/extras/curves/CatmullRomCurve3.js\\n\\n\\t/**\\n\\t * @author zz85 https://github.com/zz85\\n\\t *\\n\\t * Centripetal CatmullRom Curve - which is useful for avoiding\\n\\t * cusps and self-intersections in non-uniform catmull rom curves.\\n\\t * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\\n\\t *\\n\\t * curve.type accepts centripetal(default), chordal and catmullrom\\n\\t * curve.tension is used for catmullrom which defaults to 0.5\\n\\t */\\n\\n\\tTHREE.CatmullRomCurve3 = ( function() {\\n\\n\\t\\tvar\\n\\t\\t\\ttmp = new THREE.Vector3(),\\n\\t\\t\\tpx = new CubicPoly(),\\n\\t\\t\\tpy = new CubicPoly(),\\n\\t\\t\\tpz = new CubicPoly();\\n\\n\\t\\t/*\\n\\t\\tBased on an optimized c++ solution in\\n\\t\\t - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\\n\\t\\t - http://ideone.com/NoEbVM\\n\\n\\t\\tThis CubicPoly class could be used for reusing some variables and calculations,\\n\\t\\tbut for three.js curve use, it could be possible inlined and flatten into a single function call\\n\\t\\twhich can be placed in CurveUtils.\\n\\t\\t*/\\n\\n\\t\\tfunction CubicPoly() {\\n\\n\\t\\t}\\n\\n\\t\\t/*\\n\\t\\t * Compute coefficients for a cubic polynomial\\n\\t\\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\\n\\t\\t * such that\\n\\t\\t *   p(0) = x0, p(1) = x1\\n\\t\\t *  and\\n\\t\\t *   p'(0) = t0, p'(1) = t1.\\n\\t\\t */\\n\\t\\tCubicPoly.prototype.init = function( x0, x1, t0, t1 ) {\\n\\n\\t\\t\\tthis.c0 = x0;\\n\\t\\t\\tthis.c1 = t0;\\n\\t\\t\\tthis.c2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\\n\\t\\t\\tthis.c3 = 2 * x0 - 2 * x1 + t0 + t1;\\n\\n\\t\\t};\\n\\n\\t\\tCubicPoly.prototype.initNonuniformCatmullRom = function( x0, x1, x2, x3, dt0, dt1, dt2 ) {\\n\\n\\t\\t\\t// compute tangents when parameterized in [t1,t2]\\n\\t\\t\\tvar t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\\n\\t\\t\\tvar t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\\n\\n\\t\\t\\t// rescale tangents for parametrization in [0,1]\\n\\t\\t\\tt1 *= dt1;\\n\\t\\t\\tt2 *= dt1;\\n\\n\\t\\t\\t// initCubicPoly\\n\\t\\t\\tthis.init( x1, x2, t1, t2 );\\n\\n\\t\\t};\\n\\n\\t\\t// standard Catmull-Rom spline: interpolate between x1 and x2 with previous/following points x1/x4\\n\\t\\tCubicPoly.prototype.initCatmullRom = function( x0, x1, x2, x3, tension ) {\\n\\n\\t\\t\\tthis.init( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\\n\\n\\t\\t};\\n\\n\\t\\tCubicPoly.prototype.calc = function( t ) {\\n\\n\\t\\t\\tvar t2 = t * t;\\n\\t\\t\\tvar t3 = t2 * t;\\n\\t\\t\\treturn this.c0 + this.c1 * t + this.c2 * t2 + this.c3 * t3;\\n\\n\\t\\t};\\n\\n\\t\\t// Subclass Three.js curve\\n\\t\\treturn THREE.Curve.create(\\n\\n\\t\\t\\tfunction ( p /* array of Vector3 */ ) {\\n\\n\\t\\t\\t\\tthis.points = p || [];\\n\\t\\t\\t\\tthis.closed = false;\\n\\n\\t\\t\\t},\\n\\n\\t\\t\\tfunction ( t ) {\\n\\n\\t\\t\\t\\tvar points = this.points,\\n\\t\\t\\t\\t\\tpoint, intPoint, weight, l;\\n\\n\\t\\t\\t\\tl = points.length;\\n\\n\\t\\t\\t\\tif ( l < 2 ) console.log( 'duh, you need at least 2 points' );\\n\\n\\t\\t\\t\\tpoint = ( l - ( this.closed ? 0 : 1 ) ) * t;\\n\\t\\t\\t\\tintPoint = Math.floor( point );\\n\\t\\t\\t\\tweight = point - intPoint;\\n\\n\\t\\t\\t\\tif ( this.closed ) {\\n\\n\\t\\t\\t\\t\\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / points.length ) + 1 ) * points.length;\\n\\n\\t\\t\\t\\t} else if ( weight === 0 && intPoint === l - 1 ) {\\n\\n\\t\\t\\t\\t\\tintPoint = l - 2;\\n\\t\\t\\t\\t\\tweight = 1;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tvar p0, p1, p2, p3; // 4 points\\n\\n\\t\\t\\t\\tif ( this.closed || intPoint > 0 ) {\\n\\n\\t\\t\\t\\t\\tp0 = points[ ( intPoint - 1 ) % l ];\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t// extrapolate first point\\n\\t\\t\\t\\t\\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\\n\\t\\t\\t\\t\\tp0 = tmp;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tp1 = points[ intPoint % l ];\\n\\t\\t\\t\\tp2 = points[ ( intPoint + 1 ) % l ];\\n\\n\\t\\t\\t\\tif ( this.closed || intPoint + 2 < l ) {\\n\\n\\t\\t\\t\\t\\tp3 = points[ ( intPoint + 2 ) % l ];\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t// extrapolate last point\\n\\t\\t\\t\\t\\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\\n\\t\\t\\t\\t\\tp3 = tmp;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( this.type === undefined || this.type === 'centripetal' || this.type === 'chordal' ) {\\n\\n\\t\\t\\t\\t\\t// init Centripetal / Chordal Catmull-Rom\\n\\t\\t\\t\\t\\tvar pow = this.type === 'chordal' ? 0.5 : 0.25;\\n\\t\\t\\t\\t\\tvar dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\\n\\t\\t\\t\\t\\tvar dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\\n\\t\\t\\t\\t\\tvar dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\\n\\n\\t\\t\\t\\t\\t// safety check for repeated points\\n\\t\\t\\t\\t\\tif ( dt1 < 1e-4 ) dt1 = 1.0;\\n\\t\\t\\t\\t\\tif ( dt0 < 1e-4 ) dt0 = dt1;\\n\\t\\t\\t\\t\\tif ( dt2 < 1e-4 ) dt2 = dt1;\\n\\n\\t\\t\\t\\t\\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\\n\\t\\t\\t\\t\\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\\n\\t\\t\\t\\t\\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\\n\\n\\t\\t\\t\\t} else if ( this.type === 'catmullrom' ) {\\n\\n\\t\\t\\t\\t\\tvar tension = this.tension !== undefined ? this.tension : 0.5;\\n\\t\\t\\t\\t\\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, tension );\\n\\t\\t\\t\\t\\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, tension );\\n\\t\\t\\t\\t\\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, tension );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tvar v = new THREE.Vector3(\\n\\t\\t\\t\\t\\tpx.calc( weight ),\\n\\t\\t\\t\\t\\tpy.calc( weight ),\\n\\t\\t\\t\\t\\tpz.calc( weight )\\n\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\treturn v;\\n\\n\\t\\t\\t}\\n\\n\\t\\t);\\n\\n\\t} )();\\n\\n\\t// File:src/extras/curves/ClosedSplineCurve3.js\\n\\n\\t/**************************************************************\\n\\t *\\tClosed Spline 3D curve\\n\\t **************************************************************/\\n\\n\\n\\tTHREE.ClosedSplineCurve3 = function ( points ) {\\n\\n\\t\\tconsole.warn( 'THREE.ClosedSplineCurve3 has been deprecated. Please use THREE.CatmullRomCurve3.' );\\n\\n\\t\\tTHREE.CatmullRomCurve3.call( this, points );\\n\\t\\tthis.type = 'catmullrom';\\n\\t\\tthis.closed = true;\\n\\n\\t};\\n\\n\\tTHREE.ClosedSplineCurve3.prototype = Object.create( THREE.CatmullRomCurve3.prototype );\\n\\n\\t// File:src/extras/geometries/BoxGeometry.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Cube.as\\n\\t */\\n\\n\\tTHREE.BoxGeometry = function ( width, height, depth, widthSegments, heightSegments, depthSegments ) {\\n\\n\\t\\tTHREE.Geometry.call( this );\\n\\n\\t\\tthis.type = 'BoxGeometry';\\n\\n\\t\\tthis.parameters = {\\n\\t\\t\\twidth: width,\\n\\t\\t\\theight: height,\\n\\t\\t\\tdepth: depth,\\n\\t\\t\\twidthSegments: widthSegments,\\n\\t\\t\\theightSegments: heightSegments,\\n\\t\\t\\tdepthSegments: depthSegments\\n\\t\\t};\\n\\n\\t\\tthis.fromBufferGeometry( new THREE.BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) );\\n\\t\\tthis.mergeVertices();\\n\\n\\t};\\n\\n\\tTHREE.BoxGeometry.prototype = Object.create( THREE.Geometry.prototype );\\n\\tTHREE.BoxGeometry.prototype.constructor = THREE.BoxGeometry;\\n\\n\\tTHREE.CubeGeometry = THREE.BoxGeometry;\\n\\n\\t// File:src/extras/geometries/BoxBufferGeometry.js\\n\\n\\t/**\\n\\t * @author Mugen87 / https://github.com/Mugen87\\n\\t */\\n\\n\\tTHREE.BoxBufferGeometry = function ( width, height, depth, widthSegments, heightSegments, depthSegments ) {\\n\\n\\t\\tTHREE.BufferGeometry.call( this );\\n\\n\\t\\tthis.type = 'BoxBufferGeometry';\\n\\n\\t\\tthis.parameters = {\\n\\t\\t\\twidth: width,\\n\\t\\t\\theight: height,\\n\\t\\t\\tdepth: depth,\\n\\t\\t\\twidthSegments: widthSegments,\\n\\t\\t\\theightSegments: heightSegments,\\n\\t\\t\\tdepthSegments: depthSegments\\n\\t\\t};\\n\\n\\t\\tvar scope = this;\\n\\n\\t\\t// segments\\n\\t\\twidthSegments = Math.floor( widthSegments ) || 1;\\n\\t\\theightSegments = Math.floor( heightSegments ) || 1;\\n\\t\\tdepthSegments = Math.floor( depthSegments ) || 1;\\n\\n\\t\\t// these are used to calculate buffer length\\n\\t\\tvar vertexCount = calculateVertexCount( widthSegments, heightSegments, depthSegments );\\n\\t\\tvar indexCount = calculateIndexCount( widthSegments, heightSegments, depthSegments );\\n\\n\\t\\t// buffers\\n\\t\\tvar indices = new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount );\\n\\t\\tvar vertices = new Float32Array( vertexCount * 3 );\\n\\t\\tvar normals = new Float32Array( vertexCount * 3 );\\n\\t\\tvar uvs = new Float32Array( vertexCount * 2 );\\n\\n\\t\\t// offset variables\\n\\t\\tvar vertexBufferOffset = 0;\\n\\t\\tvar uvBufferOffset = 0;\\n\\t\\tvar indexBufferOffset = 0;\\n\\t\\tvar numberOfVertices = 0;\\n\\n\\t\\t// group variables\\n\\t\\tvar groupStart = 0;\\n\\n\\t\\t// build each side of the box geometry\\n\\t\\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height,   width,  depthSegments, heightSegments, 0 ); // px\\n\\t\\tbuildPlane( 'z', 'y', 'x',   1, - 1, depth, height, - width,  depthSegments, heightSegments, 1 ); // nx\\n\\t\\tbuildPlane( 'x', 'z', 'y',   1,   1, width, depth,    height, widthSegments, depthSegments,  2 ); // py\\n\\t\\tbuildPlane( 'x', 'z', 'y',   1, - 1, width, depth,  - height, widthSegments, depthSegments,  3 ); // ny\\n\\t\\tbuildPlane( 'x', 'y', 'z',   1, - 1, width, height,   depth,  widthSegments, heightSegments, 4 ); // pz\\n\\t\\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth,  widthSegments, heightSegments, 5 ); // nz\\n\\n\\t\\t// build geometry\\n\\t\\tthis.setIndex( new THREE.BufferAttribute( indices, 1 ) );\\n\\t\\tthis.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\\n\\t\\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\\n\\t\\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\\n\\n\\t\\t// helper functions\\n\\n\\t\\tfunction calculateVertexCount ( w, h, d ) {\\n\\n\\t\\t\\tvar vertices = 0;\\n\\n\\t\\t\\t// calculate the amount of vertices for each side (plane)\\n\\t\\t\\tvertices += (w + 1) * (h + 1) * 2; // xy\\n\\t\\t\\tvertices += (w + 1) * (d + 1) * 2; // xz\\n\\t\\t\\tvertices += (d + 1) * (h + 1) * 2; // zy\\n\\n\\t\\t\\treturn vertices;\\n\\n\\t\\t}\\n\\n\\t\\tfunction calculateIndexCount ( w, h, d ) {\\n\\n\\t\\t\\tvar index = 0;\\n\\n\\t\\t\\t// calculate the amount of squares for each side\\n\\t\\t\\tindex += w * h * 2; // xy\\n\\t\\t\\tindex += w * d * 2; // xz\\n\\t\\t\\tindex += d * h * 2; // zy\\n\\n\\t\\t\\treturn index * 6; // two triangles per square => six vertices per square\\n\\n\\t\\t}\\n\\n\\t\\tfunction buildPlane ( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\\n\\n\\t\\t\\tvar segmentWidth\\t= width / gridX;\\n\\t\\t\\tvar segmentHeight = height / gridY;\\n\\n\\t\\t\\tvar widthHalf = width / 2;\\n\\t\\t\\tvar heightHalf = height / 2;\\n\\t\\t\\tvar depthHalf = depth / 2;\\n\\n\\t\\t\\tvar gridX1 = gridX + 1;\\n\\t\\t\\tvar gridY1 = gridY + 1;\\n\\n\\t\\t\\tvar vertexCounter = 0;\\n\\t\\t\\tvar groupCount = 0;\\n\\n\\t\\t\\tvar vector = new THREE.Vector3();\\n\\n\\t\\t\\t// generate vertices, normals and uvs\\n\\n\\t\\t\\tfor ( var iy = 0; iy < gridY1; iy ++ ) {\\n\\n\\t\\t\\t\\tvar y = iy * segmentHeight - heightHalf;\\n\\n\\t\\t\\t\\tfor ( var ix = 0; ix < gridX1; ix ++ ) {\\n\\n\\t\\t\\t\\t\\tvar x = ix * segmentWidth - widthHalf;\\n\\n\\t\\t\\t\\t\\t// set values to correct vector component\\n\\t\\t\\t\\t\\tvector[ u ] = x * udir;\\n\\t\\t\\t\\t\\tvector[ v ] = y * vdir;\\n\\t\\t\\t\\t\\tvector[ w ] = depthHalf;\\n\\n\\t\\t\\t\\t\\t// now apply vector to vertex buffer\\n\\t\\t\\t\\t\\tvertices[ vertexBufferOffset ] = vector.x;\\n\\t\\t\\t\\t\\tvertices[ vertexBufferOffset + 1 ] = vector.y;\\n\\t\\t\\t\\t\\tvertices[ vertexBufferOffset + 2 ] = vector.z;\\n\\n\\t\\t\\t\\t\\t// set values to correct vector component\\n\\t\\t\\t\\t\\tvector[ u ] = 0;\\n\\t\\t\\t\\t\\tvector[ v ] = 0;\\n\\t\\t\\t\\t\\tvector[ w ] = depth > 0 ? 1 : - 1;\\n\\n\\t\\t\\t\\t\\t// now apply vector to normal buffer\\n\\t\\t\\t\\t\\tnormals[ vertexBufferOffset ] = vector.x;\\n\\t\\t\\t\\t\\tnormals[ vertexBufferOffset + 1 ] = vector.y;\\n\\t\\t\\t\\t\\tnormals[ vertexBufferOffset + 2 ] = vector.z;\\n\\n\\t\\t\\t\\t\\t// uvs\\n\\t\\t\\t\\t\\tuvs[ uvBufferOffset ] = ix / gridX;\\n\\t\\t\\t\\t\\tuvs[ uvBufferOffset + 1 ] = 1 - ( iy / gridY );\\n\\n\\t\\t\\t\\t\\t// update offsets and counters\\n\\t\\t\\t\\t\\tvertexBufferOffset += 3;\\n\\t\\t\\t\\t\\tuvBufferOffset += 2;\\n\\t\\t\\t\\t\\tvertexCounter += 1;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t// 1. you need three indices to draw a single face\\n\\t\\t\\t// 2. a single segment consists of two faces\\n\\t\\t\\t// 3. so we need to generate six (2*3) indices per segment\\n\\n\\t\\t\\tfor ( iy = 0; iy < gridY; iy ++ ) {\\n\\n\\t\\t\\t\\tfor ( ix = 0; ix < gridX; ix ++ ) {\\n\\n\\t\\t\\t\\t\\t// indices\\n\\t\\t\\t\\t\\tvar a = numberOfVertices + ix + gridX1 * iy;\\n\\t\\t\\t\\t\\tvar b = numberOfVertices + ix + gridX1 * ( iy + 1 );\\n\\t\\t\\t\\t\\tvar c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\\n\\t\\t\\t\\t\\tvar d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\\n\\n\\t\\t\\t\\t\\t// face one\\n\\t\\t\\t\\t\\tindices[ indexBufferOffset ] = a;\\n\\t\\t\\t\\t\\tindices[ indexBufferOffset + 1 ] = b;\\n\\t\\t\\t\\t\\tindices[ indexBufferOffset + 2 ] = d;\\n\\n\\t\\t\\t\\t\\t// face two\\n\\t\\t\\t\\t\\tindices[ indexBufferOffset + 3 ] = b;\\n\\t\\t\\t\\t\\tindices[ indexBufferOffset + 4 ] = c;\\n\\t\\t\\t\\t\\tindices[ indexBufferOffset + 5 ] = d;\\n\\n\\t\\t\\t\\t\\t// update offsets and counters\\n\\t\\t\\t\\t\\tindexBufferOffset += 6;\\n\\t\\t\\t\\t\\tgroupCount += 6;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t// add a group to the geometry. this will ensure multi material support\\n\\t\\t\\tscope.addGroup( groupStart, groupCount, materialIndex );\\n\\n\\t\\t\\t// calculate new start value for groups\\n\\t\\t\\tgroupStart += groupCount;\\n\\n\\t\\t\\t// update total number of vertices\\n\\t\\t\\tnumberOfVertices += vertexCounter;\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\tTHREE.BoxBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\\n\\tTHREE.BoxBufferGeometry.prototype.constructor = THREE.BoxBufferGeometry;\\n\\n\\t// File:src/extras/geometries/CircleGeometry.js\\n\\n\\t/**\\n\\t * @author hughes\\n\\t */\\n\\n\\tTHREE.CircleGeometry = function ( radius, segments, thetaStart, thetaLength ) {\\n\\n\\t\\tTHREE.Geometry.call( this );\\n\\n\\t\\tthis.type = 'CircleGeometry';\\n\\n\\t\\tthis.parameters = {\\n\\t\\t\\tradius: radius,\\n\\t\\t\\tsegments: segments,\\n\\t\\t\\tthetaStart: thetaStart,\\n\\t\\t\\tthetaLength: thetaLength\\n\\t\\t};\\n\\n\\t\\tthis.fromBufferGeometry( new THREE.CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) );\\n\\n\\t};\\n\\n\\tTHREE.CircleGeometry.prototype = Object.create( THREE.Geometry.prototype );\\n\\tTHREE.CircleGeometry.prototype.constructor = THREE.CircleGeometry;\\n\\n\\t// File:src/extras/geometries/CircleBufferGeometry.js\\n\\n\\t/**\\n\\t * @author benaadams / https://twitter.com/ben_a_adams\\n\\t */\\n\\n\\tTHREE.CircleBufferGeometry = function ( radius, segments, thetaStart, thetaLength ) {\\n\\n\\t\\tTHREE.BufferGeometry.call( this );\\n\\n\\t\\tthis.type = 'CircleBufferGeometry';\\n\\n\\t\\tthis.parameters = {\\n\\t\\t\\tradius: radius,\\n\\t\\t\\tsegments: segments,\\n\\t\\t\\tthetaStart: thetaStart,\\n\\t\\t\\tthetaLength: thetaLength\\n\\t\\t};\\n\\n\\t\\tradius = radius || 50;\\n\\t\\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\\n\\n\\t\\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\\n\\t\\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\\n\\n\\t\\tvar vertices = segments + 2;\\n\\n\\t\\tvar positions = new Float32Array( vertices * 3 );\\n\\t\\tvar normals = new Float32Array( vertices * 3 );\\n\\t\\tvar uvs = new Float32Array( vertices * 2 );\\n\\n\\t\\t// center data is already zero, but need to set a few extras\\n\\t\\tnormals[ 2 ] = 1.0;\\n\\t\\tuvs[ 0 ] = 0.5;\\n\\t\\tuvs[ 1 ] = 0.5;\\n\\n\\t\\tfor ( var s = 0, i = 3, ii = 2 ; s <= segments; s ++, i += 3, ii += 2 ) {\\n\\n\\t\\t\\tvar segment = thetaStart + s / segments * thetaLength;\\n\\n\\t\\t\\tpositions[ i ] = radius * Math.cos( segment );\\n\\t\\t\\tpositions[ i + 1 ] = radius * Math.sin( segment );\\n\\n\\t\\t\\tnormals[ i + 2 ] = 1; // normal z\\n\\n\\t\\t\\tuvs[ ii ] = ( positions[ i ] / radius + 1 ) / 2;\\n\\t\\t\\tuvs[ ii + 1 ] = ( positions[ i + 1 ] / radius + 1 ) / 2;\\n\\n\\t\\t}\\n\\n\\t\\tvar indices = [];\\n\\n\\t\\tfor ( var i = 1; i <= segments; i ++ ) {\\n\\n\\t\\t\\tindices.push( i, i + 1, 0 );\\n\\n\\t\\t}\\n\\n\\t\\tthis.setIndex( new THREE.BufferAttribute( new Uint16Array( indices ), 1 ) );\\n\\t\\tthis.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\\n\\t\\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\\n\\t\\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\\n\\n\\t\\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\\n\\n\\t};\\n\\n\\tTHREE.CircleBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\\n\\tTHREE.CircleBufferGeometry.prototype.constructor = THREE.CircleBufferGeometry;\\n\\n\\t// File:src/extras/geometries/CylinderBufferGeometry.js\\n\\n\\t/**\\n\\t * @author Mugen87 / https://github.com/Mugen87\\n\\t */\\n\\n\\tTHREE.CylinderBufferGeometry = function( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\\n\\n\\t\\tTHREE.BufferGeometry.call( this );\\n\\n\\t\\tthis.type = 'CylinderBufferGeometry';\\n\\n\\t\\tthis.parameters = {\\n\\t\\t\\tradiusTop: radiusTop,\\n\\t\\t\\tradiusBottom: radiusBottom,\\n\\t\\t\\theight: height,\\n\\t\\t\\tradialSegments: radialSegments,\\n\\t\\t\\theightSegments: heightSegments,\\n\\t\\t\\topenEnded: openEnded,\\n\\t\\t\\tthetaStart: thetaStart,\\n\\t\\t\\tthetaLength: thetaLength\\n\\t\\t};\\n\\n\\t\\tvar scope = this;\\n\\n\\t\\tradiusTop = radiusTop !== undefined ? radiusTop : 20;\\n\\t\\tradiusBottom = radiusBottom !== undefined ? radiusBottom : 20;\\n\\t\\theight = height !== undefined ? height : 100;\\n\\n\\t\\tradialSegments = Math.floor( radialSegments ) || 8;\\n\\t\\theightSegments = Math.floor( heightSegments ) || 1;\\n\\n\\t\\topenEnded = openEnded !== undefined ? openEnded : false;\\n\\t\\tthetaStart = thetaStart !== undefined ? thetaStart : 0.0;\\n\\t\\tthetaLength = thetaLength !== undefined ? thetaLength : 2.0 * Math.PI;\\n\\n\\t\\t// used to calculate buffer length\\n\\n\\t\\tvar nbCap = 0;\\n\\n\\t\\tif ( openEnded === false ) {\\n\\n\\t\\t\\tif ( radiusTop > 0 ) nbCap ++;\\n\\t\\t\\tif ( radiusBottom > 0 ) nbCap ++;\\n\\n\\t\\t}\\n\\n\\t\\tvar vertexCount = calculateVertexCount();\\n\\t\\tvar indexCount = calculateIndexCount();\\n\\n\\t\\t// buffers\\n\\n\\t\\tvar indices = new THREE.BufferAttribute( new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount ), 1 );\\n\\t\\tvar vertices = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\\n\\t\\tvar normals = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\\n\\t\\tvar uvs = new THREE.BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\\n\\n\\t\\t// helper variables\\n\\n\\t\\tvar index = 0,\\n\\t\\t    indexOffset = 0,\\n\\t\\t    indexArray = [],\\n\\t\\t    halfHeight = height / 2;\\n\\n\\t\\t// group variables\\n\\t\\tvar groupStart = 0;\\n\\n\\t\\t// generate geometry\\n\\n\\t\\tgenerateTorso();\\n\\n\\t\\tif ( openEnded === false ) {\\n\\n\\t\\t\\tif ( radiusTop > 0 ) generateCap( true );\\n\\t\\t\\tif ( radiusBottom > 0 ) generateCap( false );\\n\\n\\t\\t}\\n\\n\\t\\t// build geometry\\n\\n\\t\\tthis.setIndex( indices );\\n\\t\\tthis.addAttribute( 'position', vertices );\\n\\t\\tthis.addAttribute( 'normal', normals );\\n\\t\\tthis.addAttribute( 'uv', uvs );\\n\\n\\t\\t// helper functions\\n\\n\\t\\tfunction calculateVertexCount() {\\n\\n\\t\\t\\tvar count = ( radialSegments + 1 ) * ( heightSegments + 1 );\\n\\n\\t\\t\\tif ( openEnded === false ) {\\n\\n\\t\\t\\t\\tcount += ( ( radialSegments + 1 ) * nbCap ) + ( radialSegments * nbCap );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn count;\\n\\n\\t\\t}\\n\\n\\t\\tfunction calculateIndexCount() {\\n\\n\\t\\t\\tvar count = radialSegments * heightSegments * 2 * 3;\\n\\n\\t\\t\\tif ( openEnded === false ) {\\n\\n\\t\\t\\t\\tcount += radialSegments * nbCap * 3;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn count;\\n\\n\\t\\t}\\n\\n\\t\\tfunction generateTorso() {\\n\\n\\t\\t\\tvar x, y;\\n\\t\\t\\tvar normal = new THREE.Vector3();\\n\\t\\t\\tvar vertex = new THREE.Vector3();\\n\\n\\t\\t\\tvar groupCount = 0;\\n\\n\\t\\t\\t// this will be used to calculate the normal\\n\\t\\t\\tvar tanTheta = ( radiusBottom - radiusTop ) / height;\\n\\n\\t\\t\\t// generate vertices, normals and uvs\\n\\n\\t\\t\\tfor ( y = 0; y <= heightSegments; y ++ ) {\\n\\n\\t\\t\\t\\tvar indexRow = [];\\n\\n\\t\\t\\t\\tvar v = y / heightSegments;\\n\\n\\t\\t\\t\\t// calculate the radius of the current row\\n\\t\\t\\t\\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\\n\\n\\t\\t\\t\\tfor ( x = 0; x <= radialSegments; x ++ ) {\\n\\n\\t\\t\\t\\t\\tvar u = x / radialSegments;\\n\\n\\t\\t\\t\\t\\t// vertex\\n\\t\\t\\t\\t\\tvertex.x = radius * Math.sin( u * thetaLength + thetaStart );\\n\\t\\t\\t\\t\\tvertex.y = - v * height + halfHeight;\\n\\t\\t\\t\\t\\tvertex.z = radius * Math.cos( u * thetaLength + thetaStart );\\n\\t\\t\\t\\t\\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\\n\\n\\t\\t\\t\\t\\t// normal\\n\\t\\t\\t\\t\\tnormal.copy( vertex );\\n\\n\\t\\t\\t\\t\\t// handle special case if radiusTop/radiusBottom is zero\\n\\n\\t\\t\\t\\t\\tif ( ( radiusTop === 0 && y === 0 ) || ( radiusBottom === 0 && y === heightSegments ) ) {\\n\\n\\t\\t\\t\\t\\t\\tnormal.x = Math.sin( u * thetaLength + thetaStart );\\n\\t\\t\\t\\t\\t\\tnormal.z = Math.cos( u * thetaLength + thetaStart );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tnormal.setY( Math.sqrt( normal.x * normal.x + normal.z * normal.z ) * tanTheta ).normalize();\\n\\t\\t\\t\\t\\tnormals.setXYZ( index, normal.x, normal.y, normal.z );\\n\\n\\t\\t\\t\\t\\t// uv\\n\\t\\t\\t\\t\\tuvs.setXY( index, u, 1 - v );\\n\\n\\t\\t\\t\\t\\t// save index of vertex in respective row\\n\\t\\t\\t\\t\\tindexRow.push( index );\\n\\n\\t\\t\\t\\t\\t// increase index\\n\\t\\t\\t\\t\\tindex ++;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// now save vertices of the row in our index array\\n\\t\\t\\t\\tindexArray.push( indexRow );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t// generate indices\\n\\n\\t\\t\\tfor ( x = 0; x < radialSegments; x ++ ) {\\n\\n\\t\\t\\t\\tfor ( y = 0; y < heightSegments; y ++ ) {\\n\\n\\t\\t\\t\\t\\t// we use the index array to access the correct indices\\n\\t\\t\\t\\t\\tvar i1 = indexArray[ y ][ x ];\\n\\t\\t\\t\\t\\tvar i2 = indexArray[ y + 1 ][ x ];\\n\\t\\t\\t\\t\\tvar i3 = indexArray[ y + 1 ][ x + 1 ];\\n\\t\\t\\t\\t\\tvar i4 = indexArray[ y ][ x + 1 ];\\n\\n\\t\\t\\t\\t\\t// face one\\n\\t\\t\\t\\t\\tindices.setX( indexOffset, i1 ); indexOffset ++;\\n\\t\\t\\t\\t\\tindices.setX( indexOffset, i2 ); indexOffset ++;\\n\\t\\t\\t\\t\\tindices.setX( indexOffset, i4 ); indexOffset ++;\\n\\n\\t\\t\\t\\t\\t// face two\\n\\t\\t\\t\\t\\tindices.setX( indexOffset, i2 ); indexOffset ++;\\n\\t\\t\\t\\t\\tindices.setX( indexOffset, i3 ); indexOffset ++;\\n\\t\\t\\t\\t\\tindices.setX( indexOffset, i4 ); indexOffset ++;\\n\\n\\t\\t\\t\\t\\t// update counters\\n\\t\\t\\t\\t\\tgroupCount += 6;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t// add a group to the geometry. this will ensure multi material support\\n\\t\\t\\tscope.addGroup( groupStart, groupCount, 0 );\\n\\n\\t\\t\\t// calculate new start value for groups\\n\\t\\t\\tgroupStart += groupCount;\\n\\n\\t\\t}\\n\\n\\t\\tfunction generateCap( top ) {\\n\\n\\t\\t\\tvar x, centerIndexStart, centerIndexEnd;\\n\\n\\t\\t\\tvar uv = new THREE.Vector2();\\n\\t\\t\\tvar vertex = new THREE.Vector3();\\n\\n\\t\\t\\tvar groupCount = 0;\\n\\n\\t\\t\\tvar radius = ( top === true ) ? radiusTop : radiusBottom;\\n\\t\\t\\tvar sign = ( top === true ) ? 1 : - 1;\\n\\n\\t\\t\\t// save the index of the first center vertex\\n\\t\\t\\tcenterIndexStart = index;\\n\\n\\t\\t\\t// first we generate the center vertex data of the cap.\\n\\t\\t\\t// because the geometry needs one set of uvs per face,\\n\\t\\t\\t// we must generate a center vertex per face/segment\\n\\n\\t\\t\\tfor ( x = 1; x <= radialSegments; x ++ ) {\\n\\n\\t\\t\\t\\t// vertex\\n\\t\\t\\t\\tvertices.setXYZ( index, 0, halfHeight * sign, 0 );\\n\\n\\t\\t\\t\\t// normal\\n\\t\\t\\t\\tnormals.setXYZ( index, 0, sign, 0 );\\n\\n\\t\\t\\t\\t// uv\\n\\t\\t\\t\\tuv.x = 0.5;\\n\\t\\t\\t\\tuv.y = 0.5;\\n\\n\\t\\t\\t\\tuvs.setXY( index, uv.x, uv.y );\\n\\n\\t\\t\\t\\t// increase index\\n\\t\\t\\t\\tindex ++;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t// save the index of the last center vertex\\n\\t\\t\\tcenterIndexEnd = index;\\n\\n\\t\\t\\t// now we generate the surrounding vertices, normals and uvs\\n\\n\\t\\t\\tfor ( x = 0; x <= radialSegments; x ++ ) {\\n\\n\\t\\t\\t\\tvar u = x / radialSegments;\\n\\t\\t\\t\\tvar theta = u * thetaLength + thetaStart;\\n\\n\\t\\t\\t\\tvar cosTheta = Math.cos( theta );\\n\\t\\t\\t\\tvar sinTheta = Math.sin( theta );\\n\\n\\t\\t\\t\\t// vertex\\n\\t\\t\\t\\tvertex.x = radius * sinTheta;\\n\\t\\t\\t\\tvertex.y = halfHeight * sign;\\n\\t\\t\\t\\tvertex.z = radius * cosTheta;\\n\\t\\t\\t\\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\\n\\n\\t\\t\\t\\t// normal\\n\\t\\t\\t\\tnormals.setXYZ( index, 0, sign, 0 );\\n\\n\\t\\t\\t\\t// uv\\n\\t\\t\\t\\tuv.x = ( cosTheta * 0.5 ) + 0.5;\\n\\t\\t\\t\\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\\n\\t\\t\\t\\tuvs.setXY( index, uv.x, uv.y );\\n\\n\\t\\t\\t\\t// increase index\\n\\t\\t\\t\\tindex ++;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t// generate indices\\n\\n\\t\\t\\tfor ( x = 0; x < radialSegments; x ++ ) {\\n\\n\\t\\t\\t\\tvar c = centerIndexStart + x;\\n\\t\\t\\t\\tvar i = centerIndexEnd + x;\\n\\n\\t\\t\\t\\tif ( top === true ) {\\n\\n\\t\\t\\t\\t\\t// face top\\n\\t\\t\\t\\t\\tindices.setX( indexOffset, i ); indexOffset ++;\\n\\t\\t\\t\\t\\tindices.setX( indexOffset, i + 1 ); indexOffset ++;\\n\\t\\t\\t\\t\\tindices.setX( indexOffset, c ); indexOffset ++;\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t// face bottom\\n\\t\\t\\t\\t\\tindices.setX( indexOffset, i + 1 ); indexOffset ++;\\n\\t\\t\\t\\t\\tindices.setX( indexOffset, i ); indexOffset ++;\\n\\t\\t\\t\\t\\tindices.setX( indexOffset, c ); indexOffset ++;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// update counters\\n\\t\\t\\t\\tgroupCount += 3;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t// add a group to the geometry. this will ensure multi material support\\n\\t\\t\\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\\n\\n\\t\\t\\t// calculate new start value for groups\\n\\t\\t\\tgroupStart += groupCount;\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\tTHREE.CylinderBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\\n\\tTHREE.CylinderBufferGeometry.prototype.constructor = THREE.CylinderBufferGeometry;\\n\\n\\t// File:src/extras/geometries/CylinderGeometry.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t */\\n\\n\\tTHREE.CylinderGeometry = function ( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\\n\\n\\t\\tTHREE.Geometry.call( this );\\n\\n\\t\\tthis.type = 'CylinderGeometry';\\n\\n\\t\\tthis.parameters = {\\n\\t\\t\\tradiusTop: radiusTop,\\n\\t\\t\\tradiusBottom: radiusBottom,\\n\\t\\t\\theight: height,\\n\\t\\t\\tradialSegments: radialSegments,\\n\\t\\t\\theightSegments: heightSegments,\\n\\t\\t\\topenEnded: openEnded,\\n\\t\\t\\tthetaStart: thetaStart,\\n\\t\\t\\tthetaLength: thetaLength\\n\\t\\t};\\n\\n\\t\\tthis.fromBufferGeometry( new THREE.CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) );\\n\\t\\tthis.mergeVertices();\\n\\n\\t};\\n\\n\\tTHREE.CylinderGeometry.prototype = Object.create( THREE.Geometry.prototype );\\n\\tTHREE.CylinderGeometry.prototype.constructor = THREE.CylinderGeometry;\\n\\n\\t// File:src/extras/geometries/ConeBufferGeometry.js\\n\\n\\t/*\\n\\t * @author: abelnation / http://github.com/abelnation\\n\\t */\\n\\n\\tTHREE.ConeBufferGeometry = function (\\n\\t\\tradius, height,\\n\\t\\tradialSegments, heightSegments,\\n\\t\\topenEnded, thetaStart, thetaLength ) {\\n\\n\\t\\tTHREE.CylinderBufferGeometry.call( this,\\n\\t\\t\\t0, radius, height,\\n\\t\\t\\tradialSegments, heightSegments,\\n\\t\\t\\topenEnded, thetaStart, thetaLength );\\n\\n\\t\\tthis.type = 'ConeBufferGeometry';\\n\\n\\t\\tthis.parameters = {\\n\\t\\t\\tradius: radius,\\n\\t\\t\\theight: height,\\n\\t\\t\\tradialSegments: radialSegments,\\n\\t\\t\\theightSegments: heightSegments,\\n\\t\\t\\tthetaStart: thetaStart,\\n\\t\\t\\tthetaLength: thetaLength\\n\\t\\t};\\n\\n\\t};\\n\\n\\tTHREE.ConeBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\\n\\tTHREE.ConeBufferGeometry.prototype.constructor = THREE.ConeBufferGeometry;\\n\\n\\t// File:src/extras/geometries/ConeGeometry.js\\n\\n\\t/**\\n\\t * @author abelnation / http://github.com/abelnation\\n\\t */\\n\\n\\tTHREE.ConeGeometry = function (\\n\\t\\tradius, height,\\n\\t\\tradialSegments, heightSegments,\\n\\t\\topenEnded, thetaStart, thetaLength ) {\\n\\n\\t\\tTHREE.CylinderGeometry.call( this,\\n\\t\\t\\t0, radius, height,\\n\\t\\t\\tradialSegments, heightSegments,\\n\\t\\t\\topenEnded, thetaStart, thetaLength );\\n\\n\\t\\tthis.type = 'ConeGeometry';\\n\\n\\t\\tthis.parameters = {\\n\\t\\t\\tradius: radius,\\n\\t\\t\\theight: height,\\n\\t\\t\\tradialSegments: radialSegments,\\n\\t\\t\\theightSegments: heightSegments,\\n\\t\\t\\topenEnded: openEnded,\\n\\t\\t\\tthetaStart: thetaStart,\\n\\t\\t\\tthetaLength: thetaLength\\n\\t\\t};\\n\\n\\t};\\n\\n\\tTHREE.ConeGeometry.prototype = Object.create( THREE.CylinderGeometry.prototype );\\n\\tTHREE.ConeGeometry.prototype.constructor = THREE.ConeGeometry;\\n\\n\\t// File:src/extras/geometries/EdgesGeometry.js\\n\\n\\t/**\\n\\t * @author WestLangley / http://github.com/WestLangley\\n\\t */\\n\\n\\tTHREE.EdgesGeometry = function ( geometry, thresholdAngle ) {\\n\\n\\t\\tTHREE.BufferGeometry.call( this );\\n\\n\\t\\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\\n\\n\\t\\tvar thresholdDot = Math.cos( THREE.Math.DEG2RAD * thresholdAngle );\\n\\n\\t\\tvar edge = [ 0, 0 ], hash = {};\\n\\n\\t\\tfunction sortFunction( a, b ) {\\n\\n\\t\\t\\treturn a - b;\\n\\n\\t\\t}\\n\\n\\t\\tvar keys = [ 'a', 'b', 'c' ];\\n\\n\\t\\tvar geometry2;\\n\\n\\t\\tif ( geometry instanceof THREE.BufferGeometry ) {\\n\\n\\t\\t\\tgeometry2 = new THREE.Geometry();\\n\\t\\t\\tgeometry2.fromBufferGeometry( geometry );\\n\\n\\t\\t} else {\\n\\n\\t\\t\\tgeometry2 = geometry.clone();\\n\\n\\t\\t}\\n\\n\\t\\tgeometry2.mergeVertices();\\n\\t\\tgeometry2.computeFaceNormals();\\n\\n\\t\\tvar vertices = geometry2.vertices;\\n\\t\\tvar faces = geometry2.faces;\\n\\n\\t\\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\\n\\n\\t\\t\\tvar face = faces[ i ];\\n\\n\\t\\t\\tfor ( var j = 0; j < 3; j ++ ) {\\n\\n\\t\\t\\t\\tedge[ 0 ] = face[ keys[ j ] ];\\n\\t\\t\\t\\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\\n\\t\\t\\t\\tedge.sort( sortFunction );\\n\\n\\t\\t\\t\\tvar key = edge.toString();\\n\\n\\t\\t\\t\\tif ( hash[ key ] === undefined ) {\\n\\n\\t\\t\\t\\t\\thash[ key ] = { vert1: edge[ 0 ], vert2: edge[ 1 ], face1: i, face2: undefined };\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\thash[ key ].face2 = i;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tvar coords = [];\\n\\n\\t\\tfor ( var key in hash ) {\\n\\n\\t\\t\\tvar h = hash[ key ];\\n\\n\\t\\t\\tif ( h.face2 === undefined || faces[ h.face1 ].normal.dot( faces[ h.face2 ].normal ) <= thresholdDot ) {\\n\\n\\t\\t\\t\\tvar vertex = vertices[ h.vert1 ];\\n\\t\\t\\t\\tcoords.push( vertex.x );\\n\\t\\t\\t\\tcoords.push( vertex.y );\\n\\t\\t\\t\\tcoords.push( vertex.z );\\n\\n\\t\\t\\t\\tvertex = vertices[ h.vert2 ];\\n\\t\\t\\t\\tcoords.push( vertex.x );\\n\\t\\t\\t\\tcoords.push( vertex.y );\\n\\t\\t\\t\\tcoords.push( vertex.z );\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tthis.addAttribute( 'position', new THREE.BufferAttribute( new Float32Array( coords ), 3 ) );\\n\\n\\t};\\n\\n\\tTHREE.EdgesGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\\n\\tTHREE.EdgesGeometry.prototype.constructor = THREE.EdgesGeometry;\\n\\n\\t// File:src/extras/geometries/ExtrudeGeometry.js\\n\\n\\t/**\\n\\t * @author zz85 / http://www.lab4games.net/zz85/blog\\n\\t *\\n\\t * Creates extruded geometry from a path shape.\\n\\t *\\n\\t * parameters = {\\n\\t *\\n\\t *  curveSegments: <int>, // number of points on the curves\\n\\t *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\\n\\t *  amount: <int>, // Depth to extrude the shape\\n\\t *\\n\\t *  bevelEnabled: <bool>, // turn on bevel\\n\\t *  bevelThickness: <float>, // how deep into the original shape bevel goes\\n\\t *  bevelSize: <float>, // how far from shape outline is bevel\\n\\t *  bevelSegments: <int>, // number of bevel layers\\n\\t *\\n\\t *  extrudePath: <THREE.CurvePath> // 3d spline path to extrude shape along. (creates Frames if .frames aren't defined)\\n\\t *  frames: <THREE.TubeGeometry.FrenetFrames> // containing arrays of tangents, normals, binormals\\n\\t *\\n\\t *  uvGenerator: <Object> // object that provides UV generator functions\\n\\t *\\n\\t * }\\n\\t **/\\n\\n\\tTHREE.ExtrudeGeometry = function ( shapes, options ) {\\n\\n\\t\\tif ( typeof( shapes ) === \\\"undefined\\\" ) {\\n\\n\\t\\t\\tshapes = [];\\n\\t\\t\\treturn;\\n\\n\\t\\t}\\n\\n\\t\\tTHREE.Geometry.call( this );\\n\\n\\t\\tthis.type = 'ExtrudeGeometry';\\n\\n\\t\\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\\n\\n\\t\\tthis.addShapeList( shapes, options );\\n\\n\\t\\tthis.computeFaceNormals();\\n\\n\\t\\t// can't really use automatic vertex normals\\n\\t\\t// as then front and back sides get smoothed too\\n\\t\\t// should do separate smoothing just for sides\\n\\n\\t\\t//this.computeVertexNormals();\\n\\n\\t\\t//console.log( \\\"took\\\", ( Date.now() - startTime ) );\\n\\n\\t};\\n\\n\\tTHREE.ExtrudeGeometry.prototype = Object.create( THREE.Geometry.prototype );\\n\\tTHREE.ExtrudeGeometry.prototype.constructor = THREE.ExtrudeGeometry;\\n\\n\\tTHREE.ExtrudeGeometry.prototype.addShapeList = function ( shapes, options ) {\\n\\n\\t\\tvar sl = shapes.length;\\n\\n\\t\\tfor ( var s = 0; s < sl; s ++ ) {\\n\\n\\t\\t\\tvar shape = shapes[ s ];\\n\\t\\t\\tthis.addShape( shape, options );\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\tTHREE.ExtrudeGeometry.prototype.addShape = function ( shape, options ) {\\n\\n\\t\\tvar amount = options.amount !== undefined ? options.amount : 100;\\n\\n\\t\\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6; // 10\\n\\t\\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2; // 8\\n\\t\\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\\n\\n\\t\\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true; // false\\n\\n\\t\\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\\n\\n\\t\\tvar steps = options.steps !== undefined ? options.steps : 1;\\n\\n\\t\\tvar extrudePath = options.extrudePath;\\n\\t\\tvar extrudePts, extrudeByPath = false;\\n\\n\\t\\t// Use default WorldUVGenerator if no UV generators are specified.\\n\\t\\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : THREE.ExtrudeGeometry.WorldUVGenerator;\\n\\n\\t\\tvar splineTube, binormal, normal, position2;\\n\\t\\tif ( extrudePath ) {\\n\\n\\t\\t\\textrudePts = extrudePath.getSpacedPoints( steps );\\n\\n\\t\\t\\textrudeByPath = true;\\n\\t\\t\\tbevelEnabled = false; // bevels not supported for path extrusion\\n\\n\\t\\t\\t// SETUP TNB variables\\n\\n\\t\\t\\t// Reuse TNB from TubeGeomtry for now.\\n\\t\\t\\t// TODO1 - have a .isClosed in spline?\\n\\n\\t\\t\\tsplineTube = options.frames !== undefined ? options.frames : new THREE.TubeGeometry.FrenetFrames( extrudePath, steps, false );\\n\\n\\t\\t\\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\\n\\n\\t\\t\\tbinormal = new THREE.Vector3();\\n\\t\\t\\tnormal = new THREE.Vector3();\\n\\t\\t\\tposition2 = new THREE.Vector3();\\n\\n\\t\\t}\\n\\n\\t\\t// Safeguards if bevels are not enabled\\n\\n\\t\\tif ( ! bevelEnabled ) {\\n\\n\\t\\t\\tbevelSegments = 0;\\n\\t\\t\\tbevelThickness = 0;\\n\\t\\t\\tbevelSize = 0;\\n\\n\\t\\t}\\n\\n\\t\\t// Variables initialization\\n\\n\\t\\tvar ahole, h, hl; // looping of holes\\n\\t\\tvar scope = this;\\n\\n\\t\\tvar shapesOffset = this.vertices.length;\\n\\n\\t\\tvar shapePoints = shape.extractPoints( curveSegments );\\n\\n\\t\\tvar vertices = shapePoints.shape;\\n\\t\\tvar holes = shapePoints.holes;\\n\\n\\t\\tvar reverse = ! THREE.ShapeUtils.isClockWise( vertices );\\n\\n\\t\\tif ( reverse ) {\\n\\n\\t\\t\\tvertices = vertices.reverse();\\n\\n\\t\\t\\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\\n\\n\\t\\t\\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\\n\\n\\t\\t\\t\\tahole = holes[ h ];\\n\\n\\t\\t\\t\\tif ( THREE.ShapeUtils.isClockWise( ahole ) ) {\\n\\n\\t\\t\\t\\t\\tholes[ h ] = ahole.reverse();\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treverse = false; // If vertices are in order now, we shouldn't need to worry about them again (hopefully)!\\n\\n\\t\\t}\\n\\n\\n\\t\\tvar faces = THREE.ShapeUtils.triangulateShape( vertices, holes );\\n\\n\\t\\t/* Vertices */\\n\\n\\t\\tvar contour = vertices; // vertices has all points but contour has only points of circumference\\n\\n\\t\\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\\n\\n\\t\\t\\tahole = holes[ h ];\\n\\n\\t\\t\\tvertices = vertices.concat( ahole );\\n\\n\\t\\t}\\n\\n\\n\\t\\tfunction scalePt2 ( pt, vec, size ) {\\n\\n\\t\\t\\tif ( ! vec ) console.error( \\\"THREE.ExtrudeGeometry: vec does not exist\\\" );\\n\\n\\t\\t\\treturn vec.clone().multiplyScalar( size ).add( pt );\\n\\n\\t\\t}\\n\\n\\t\\tvar b, bs, t, z,\\n\\t\\t\\tvert, vlen = vertices.length,\\n\\t\\t\\tface, flen = faces.length;\\n\\n\\n\\t\\t// Find directions for point movement\\n\\n\\n\\t\\tfunction getBevelVec( inPt, inPrev, inNext ) {\\n\\n\\t\\t\\t// computes for inPt the corresponding point inPt' on a new contour\\n\\t\\t\\t//   shifted by 1 unit (length of normalized vector) to the left\\n\\t\\t\\t// if we walk along contour clockwise, this new contour is outside the old one\\n\\t\\t\\t//\\n\\t\\t\\t// inPt' is the intersection of the two lines parallel to the two\\n\\t\\t\\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\\n\\n\\t\\t\\tvar v_trans_x, v_trans_y, shrink_by = 1;\\t\\t// resulting translation vector for inPt\\n\\n\\t\\t\\t// good reading for geometry algorithms (here: line-line intersection)\\n\\t\\t\\t// http://geomalgorithms.com/a05-_intersect-1.html\\n\\n\\t\\t\\tvar v_prev_x = inPt.x - inPrev.x, v_prev_y = inPt.y - inPrev.y;\\n\\t\\t\\tvar v_next_x = inNext.x - inPt.x, v_next_y = inNext.y - inPt.y;\\n\\n\\t\\t\\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\\n\\n\\t\\t\\t// check for collinear edges\\n\\t\\t\\tvar collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\\n\\n\\t\\t\\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\\n\\n\\t\\t\\t\\t// not collinear\\n\\n\\t\\t\\t\\t// length of vectors for normalizing\\n\\n\\t\\t\\t\\tvar v_prev_len = Math.sqrt( v_prev_lensq );\\n\\t\\t\\t\\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\\n\\n\\t\\t\\t\\t// shift adjacent points by unit vectors to the left\\n\\n\\t\\t\\t\\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\\n\\t\\t\\t\\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\\n\\n\\t\\t\\t\\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\\n\\t\\t\\t\\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\\n\\n\\t\\t\\t\\t// scaling factor for v_prev to intersection point\\n\\n\\t\\t\\t\\tvar sf = (  ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\\n\\t\\t\\t\\t\\t\\t\\t( ptNextShift_y - ptPrevShift_y ) * v_next_x    ) /\\n\\t\\t\\t\\t\\t\\t  ( v_prev_x * v_next_y - v_prev_y * v_next_x );\\n\\n\\t\\t\\t\\t// vector from inPt to intersection point\\n\\n\\t\\t\\t\\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\\n\\t\\t\\t\\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\\n\\n\\t\\t\\t\\t// Don't normalize!, otherwise sharp corners become ugly\\n\\t\\t\\t\\t//  but prevent crazy spikes\\n\\t\\t\\t\\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\\n\\t\\t\\t\\tif ( v_trans_lensq <= 2 ) {\\n\\n\\t\\t\\t\\t\\treturn\\tnew THREE.Vector2( v_trans_x, v_trans_y );\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t// handle special case of collinear edges\\n\\n\\t\\t\\t\\tvar direction_eq = false;\\t\\t// assumes: opposite\\n\\t\\t\\t\\tif ( v_prev_x > Number.EPSILON ) {\\n\\n\\t\\t\\t\\t\\tif ( v_next_x > Number.EPSILON ) {\\n\\n\\t\\t\\t\\t\\t\\tdirection_eq = true;\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\tif ( v_prev_x < - Number.EPSILON ) {\\n\\n\\t\\t\\t\\t\\t\\tif ( v_next_x < - Number.EPSILON ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tdirection_eq = true;\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tdirection_eq = true;\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( direction_eq ) {\\n\\n\\t\\t\\t\\t\\t// console.log(\\\"Warning: lines are a straight sequence\\\");\\n\\t\\t\\t\\t\\tv_trans_x = - v_prev_y;\\n\\t\\t\\t\\t\\tv_trans_y =  v_prev_x;\\n\\t\\t\\t\\t\\tshrink_by = Math.sqrt( v_prev_lensq );\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t// console.log(\\\"Warning: lines are a straight spike\\\");\\n\\t\\t\\t\\t\\tv_trans_x = v_prev_x;\\n\\t\\t\\t\\t\\tv_trans_y = v_prev_y;\\n\\t\\t\\t\\t\\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn\\tnew THREE.Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\\n\\n\\t\\t}\\n\\n\\n\\t\\tvar contourMovements = [];\\n\\n\\t\\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\\n\\n\\t\\t\\tif ( j === il ) j = 0;\\n\\t\\t\\tif ( k === il ) k = 0;\\n\\n\\t\\t\\t//  (j)---(i)---(k)\\n\\t\\t\\t// console.log('i,j,k', i, j , k)\\n\\n\\t\\t\\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\\n\\n\\t\\t}\\n\\n\\t\\tvar holesMovements = [], oneHoleMovements, verticesMovements = contourMovements.concat();\\n\\n\\t\\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\\n\\n\\t\\t\\tahole = holes[ h ];\\n\\n\\t\\t\\toneHoleMovements = [];\\n\\n\\t\\t\\tfor ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\\n\\n\\t\\t\\t\\tif ( j === il ) j = 0;\\n\\t\\t\\t\\tif ( k === il ) k = 0;\\n\\n\\t\\t\\t\\t//  (j)---(i)---(k)\\n\\t\\t\\t\\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tholesMovements.push( oneHoleMovements );\\n\\t\\t\\tverticesMovements = verticesMovements.concat( oneHoleMovements );\\n\\n\\t\\t}\\n\\n\\n\\t\\t// Loop bevelSegments, 1 for the front, 1 for the back\\n\\n\\t\\tfor ( b = 0; b < bevelSegments; b ++ ) {\\n\\n\\t\\t\\t//for ( b = bevelSegments; b > 0; b -- ) {\\n\\n\\t\\t\\tt = b / bevelSegments;\\n\\t\\t\\tz = bevelThickness * ( 1 - t );\\n\\n\\t\\t\\t//z = bevelThickness * t;\\n\\t\\t\\tbs = bevelSize * ( Math.sin ( t * Math.PI / 2 ) ); // curved\\n\\t\\t\\t//bs = bevelSize * t; // linear\\n\\n\\t\\t\\t// contract shape\\n\\n\\t\\t\\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\\n\\n\\t\\t\\t\\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\\n\\n\\t\\t\\t\\tv( vert.x, vert.y,  - z );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t// expand holes\\n\\n\\t\\t\\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\\n\\n\\t\\t\\t\\tahole = holes[ h ];\\n\\t\\t\\t\\toneHoleMovements = holesMovements[ h ];\\n\\n\\t\\t\\t\\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\\n\\n\\t\\t\\t\\t\\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\\n\\n\\t\\t\\t\\t\\tv( vert.x, vert.y,  - z );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tbs = bevelSize;\\n\\n\\t\\t// Back facing vertices\\n\\n\\t\\tfor ( i = 0; i < vlen; i ++ ) {\\n\\n\\t\\t\\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\\n\\n\\t\\t\\tif ( ! extrudeByPath ) {\\n\\n\\t\\t\\t\\tv( vert.x, vert.y, 0 );\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\\n\\n\\t\\t\\t\\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\\n\\t\\t\\t\\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\\n\\n\\t\\t\\t\\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\\n\\n\\t\\t\\t\\tv( position2.x, position2.y, position2.z );\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\t// Add stepped vertices...\\n\\t\\t// Including front facing vertices\\n\\n\\t\\tvar s;\\n\\n\\t\\tfor ( s = 1; s <= steps; s ++ ) {\\n\\n\\t\\t\\tfor ( i = 0; i < vlen; i ++ ) {\\n\\n\\t\\t\\t\\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\\n\\n\\t\\t\\t\\tif ( ! extrudeByPath ) {\\n\\n\\t\\t\\t\\t\\tv( vert.x, vert.y, amount / steps * s );\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\\n\\n\\t\\t\\t\\t\\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\\n\\t\\t\\t\\t\\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\\n\\n\\t\\t\\t\\t\\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\\n\\n\\t\\t\\t\\t\\tv( position2.x, position2.y, position2.z );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\n\\t\\t// Add bevel segments planes\\n\\n\\t\\t//for ( b = 1; b <= bevelSegments; b ++ ) {\\n\\t\\tfor ( b = bevelSegments - 1; b >= 0; b -- ) {\\n\\n\\t\\t\\tt = b / bevelSegments;\\n\\t\\t\\tz = bevelThickness * ( 1 - t );\\n\\t\\t\\t//bs = bevelSize * ( 1-Math.sin ( ( 1 - t ) * Math.PI/2 ) );\\n\\t\\t\\tbs = bevelSize * Math.sin ( t * Math.PI / 2 );\\n\\n\\t\\t\\t// contract shape\\n\\n\\t\\t\\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\\n\\n\\t\\t\\t\\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\\n\\t\\t\\t\\tv( vert.x, vert.y,  amount + z );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t// expand holes\\n\\n\\t\\t\\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\\n\\n\\t\\t\\t\\tahole = holes[ h ];\\n\\t\\t\\t\\toneHoleMovements = holesMovements[ h ];\\n\\n\\t\\t\\t\\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\\n\\n\\t\\t\\t\\t\\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\\n\\n\\t\\t\\t\\t\\tif ( ! extrudeByPath ) {\\n\\n\\t\\t\\t\\t\\t\\tv( vert.x, vert.y,  amount + z );\\n\\n\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\t/* Faces */\\n\\n\\t\\t// Top and bottom faces\\n\\n\\t\\tbuildLidFaces();\\n\\n\\t\\t// Sides faces\\n\\n\\t\\tbuildSideFaces();\\n\\n\\n\\t\\t/////  Internal functions\\n\\n\\t\\tfunction buildLidFaces() {\\n\\n\\t\\t\\tif ( bevelEnabled ) {\\n\\n\\t\\t\\t\\tvar layer = 0; // steps + 1\\n\\t\\t\\t\\tvar offset = vlen * layer;\\n\\n\\t\\t\\t\\t// Bottom faces\\n\\n\\t\\t\\t\\tfor ( i = 0; i < flen; i ++ ) {\\n\\n\\t\\t\\t\\t\\tface = faces[ i ];\\n\\t\\t\\t\\t\\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tlayer = steps + bevelSegments * 2;\\n\\t\\t\\t\\toffset = vlen * layer;\\n\\n\\t\\t\\t\\t// Top faces\\n\\n\\t\\t\\t\\tfor ( i = 0; i < flen; i ++ ) {\\n\\n\\t\\t\\t\\t\\tface = faces[ i ];\\n\\t\\t\\t\\t\\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t// Bottom faces\\n\\n\\t\\t\\t\\tfor ( i = 0; i < flen; i ++ ) {\\n\\n\\t\\t\\t\\t\\tface = faces[ i ];\\n\\t\\t\\t\\t\\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Top faces\\n\\n\\t\\t\\t\\tfor ( i = 0; i < flen; i ++ ) {\\n\\n\\t\\t\\t\\t\\tface = faces[ i ];\\n\\t\\t\\t\\t\\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\t// Create faces for the z-sides of the shape\\n\\n\\t\\tfunction buildSideFaces() {\\n\\n\\t\\t\\tvar layeroffset = 0;\\n\\t\\t\\tsidewalls( contour, layeroffset );\\n\\t\\t\\tlayeroffset += contour.length;\\n\\n\\t\\t\\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\\n\\n\\t\\t\\t\\tahole = holes[ h ];\\n\\t\\t\\t\\tsidewalls( ahole, layeroffset );\\n\\n\\t\\t\\t\\t//, true\\n\\t\\t\\t\\tlayeroffset += ahole.length;\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tfunction sidewalls( contour, layeroffset ) {\\n\\n\\t\\t\\tvar j, k;\\n\\t\\t\\ti = contour.length;\\n\\n\\t\\t\\twhile ( -- i >= 0 ) {\\n\\n\\t\\t\\t\\tj = i;\\n\\t\\t\\t\\tk = i - 1;\\n\\t\\t\\t\\tif ( k < 0 ) k = contour.length - 1;\\n\\n\\t\\t\\t\\t//console.log('b', i,j, i-1, k,vertices.length);\\n\\n\\t\\t\\t\\tvar s = 0, sl = steps  + bevelSegments * 2;\\n\\n\\t\\t\\t\\tfor ( s = 0; s < sl; s ++ ) {\\n\\n\\t\\t\\t\\t\\tvar slen1 = vlen * s;\\n\\t\\t\\t\\t\\tvar slen2 = vlen * ( s + 1 );\\n\\n\\t\\t\\t\\t\\tvar a = layeroffset + j + slen1,\\n\\t\\t\\t\\t\\t\\tb = layeroffset + k + slen1,\\n\\t\\t\\t\\t\\t\\tc = layeroffset + k + slen2,\\n\\t\\t\\t\\t\\t\\td = layeroffset + j + slen2;\\n\\n\\t\\t\\t\\t\\tf4( a, b, c, d, contour, s, sl, j, k );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\n\\t\\tfunction v( x, y, z ) {\\n\\n\\t\\t\\tscope.vertices.push( new THREE.Vector3( x, y, z ) );\\n\\n\\t\\t}\\n\\n\\t\\tfunction f3( a, b, c ) {\\n\\n\\t\\t\\ta += shapesOffset;\\n\\t\\t\\tb += shapesOffset;\\n\\t\\t\\tc += shapesOffset;\\n\\n\\t\\t\\tscope.faces.push( new THREE.Face3( a, b, c, null, null, 0 ) );\\n\\n\\t\\t\\tvar uvs = uvgen.generateTopUV( scope, a, b, c );\\n\\n\\t\\t\\tscope.faceVertexUvs[ 0 ].push( uvs );\\n\\n\\t\\t}\\n\\n\\t\\tfunction f4( a, b, c, d, wallContour, stepIndex, stepsLength, contourIndex1, contourIndex2 ) {\\n\\n\\t\\t\\ta += shapesOffset;\\n\\t\\t\\tb += shapesOffset;\\n\\t\\t\\tc += shapesOffset;\\n\\t\\t\\td += shapesOffset;\\n\\n\\t\\t\\tscope.faces.push( new THREE.Face3( a, b, d, null, null, 1 ) );\\n\\t\\t\\tscope.faces.push( new THREE.Face3( b, c, d, null, null, 1 ) );\\n\\n\\t\\t\\tvar uvs = uvgen.generateSideWallUV( scope, a, b, c, d );\\n\\n\\t\\t\\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 0 ], uvs[ 1 ], uvs[ 3 ] ] );\\n\\t\\t\\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 1 ], uvs[ 2 ], uvs[ 3 ] ] );\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\tTHREE.ExtrudeGeometry.WorldUVGenerator = {\\n\\n\\t\\tgenerateTopUV: function ( geometry, indexA, indexB, indexC ) {\\n\\n\\t\\t\\tvar vertices = geometry.vertices;\\n\\n\\t\\t\\tvar a = vertices[ indexA ];\\n\\t\\t\\tvar b = vertices[ indexB ];\\n\\t\\t\\tvar c = vertices[ indexC ];\\n\\n\\t\\t\\treturn [\\n\\t\\t\\t\\tnew THREE.Vector2( a.x, a.y ),\\n\\t\\t\\t\\tnew THREE.Vector2( b.x, b.y ),\\n\\t\\t\\t\\tnew THREE.Vector2( c.x, c.y )\\n\\t\\t\\t];\\n\\n\\t\\t},\\n\\n\\t\\tgenerateSideWallUV: function ( geometry, indexA, indexB, indexC, indexD ) {\\n\\n\\t\\t\\tvar vertices = geometry.vertices;\\n\\n\\t\\t\\tvar a = vertices[ indexA ];\\n\\t\\t\\tvar b = vertices[ indexB ];\\n\\t\\t\\tvar c = vertices[ indexC ];\\n\\t\\t\\tvar d = vertices[ indexD ];\\n\\n\\t\\t\\tif ( Math.abs( a.y - b.y ) < 0.01 ) {\\n\\n\\t\\t\\t\\treturn [\\n\\t\\t\\t\\t\\tnew THREE.Vector2( a.x, 1 - a.z ),\\n\\t\\t\\t\\t\\tnew THREE.Vector2( b.x, 1 - b.z ),\\n\\t\\t\\t\\t\\tnew THREE.Vector2( c.x, 1 - c.z ),\\n\\t\\t\\t\\t\\tnew THREE.Vector2( d.x, 1 - d.z )\\n\\t\\t\\t\\t];\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\treturn [\\n\\t\\t\\t\\t\\tnew THREE.Vector2( a.y, 1 - a.z ),\\n\\t\\t\\t\\t\\tnew THREE.Vector2( b.y, 1 - b.z ),\\n\\t\\t\\t\\t\\tnew THREE.Vector2( c.y, 1 - c.z ),\\n\\t\\t\\t\\t\\tnew THREE.Vector2( d.y, 1 - d.z )\\n\\t\\t\\t\\t];\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\t};\\n\\n\\t// File:src/extras/geometries/ShapeGeometry.js\\n\\n\\t/**\\n\\t * @author jonobr1 / http://jonobr1.com\\n\\t *\\n\\t * Creates a one-sided polygonal geometry from a path shape. Similar to\\n\\t * ExtrudeGeometry.\\n\\t *\\n\\t * parameters = {\\n\\t *\\n\\t *\\tcurveSegments: <int>, // number of points on the curves. NOT USED AT THE MOMENT.\\n\\t *\\n\\t *\\tmaterial: <int> // material index for front and back faces\\n\\t *\\tuvGenerator: <Object> // object that provides UV generator functions\\n\\t *\\n\\t * }\\n\\t **/\\n\\n\\tTHREE.ShapeGeometry = function ( shapes, options ) {\\n\\n\\t\\tTHREE.Geometry.call( this );\\n\\n\\t\\tthis.type = 'ShapeGeometry';\\n\\n\\t\\tif ( Array.isArray( shapes ) === false ) shapes = [ shapes ];\\n\\n\\t\\tthis.addShapeList( shapes, options );\\n\\n\\t\\tthis.computeFaceNormals();\\n\\n\\t};\\n\\n\\tTHREE.ShapeGeometry.prototype = Object.create( THREE.Geometry.prototype );\\n\\tTHREE.ShapeGeometry.prototype.constructor = THREE.ShapeGeometry;\\n\\n\\t/**\\n\\t * Add an array of shapes to THREE.ShapeGeometry.\\n\\t */\\n\\tTHREE.ShapeGeometry.prototype.addShapeList = function ( shapes, options ) {\\n\\n\\t\\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\\n\\n\\t\\t\\tthis.addShape( shapes[ i ], options );\\n\\n\\t\\t}\\n\\n\\t\\treturn this;\\n\\n\\t};\\n\\n\\t/**\\n\\t * Adds a shape to THREE.ShapeGeometry, based on THREE.ExtrudeGeometry.\\n\\t */\\n\\tTHREE.ShapeGeometry.prototype.addShape = function ( shape, options ) {\\n\\n\\t\\tif ( options === undefined ) options = {};\\n\\t\\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\\n\\n\\t\\tvar material = options.material;\\n\\t\\tvar uvgen = options.UVGenerator === undefined ? THREE.ExtrudeGeometry.WorldUVGenerator : options.UVGenerator;\\n\\n\\t\\t//\\n\\n\\t\\tvar i, l, hole;\\n\\n\\t\\tvar shapesOffset = this.vertices.length;\\n\\t\\tvar shapePoints = shape.extractPoints( curveSegments );\\n\\n\\t\\tvar vertices = shapePoints.shape;\\n\\t\\tvar holes = shapePoints.holes;\\n\\n\\t\\tvar reverse = ! THREE.ShapeUtils.isClockWise( vertices );\\n\\n\\t\\tif ( reverse ) {\\n\\n\\t\\t\\tvertices = vertices.reverse();\\n\\n\\t\\t\\t// Maybe we should also check if holes are in the opposite direction, just to be safe...\\n\\n\\t\\t\\tfor ( i = 0, l = holes.length; i < l; i ++ ) {\\n\\n\\t\\t\\t\\thole = holes[ i ];\\n\\n\\t\\t\\t\\tif ( THREE.ShapeUtils.isClockWise( hole ) ) {\\n\\n\\t\\t\\t\\t\\tholes[ i ] = hole.reverse();\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treverse = false;\\n\\n\\t\\t}\\n\\n\\t\\tvar faces = THREE.ShapeUtils.triangulateShape( vertices, holes );\\n\\n\\t\\t// Vertices\\n\\n\\t\\tfor ( i = 0, l = holes.length; i < l; i ++ ) {\\n\\n\\t\\t\\thole = holes[ i ];\\n\\t\\t\\tvertices = vertices.concat( hole );\\n\\n\\t\\t}\\n\\n\\t\\t//\\n\\n\\t\\tvar vert, vlen = vertices.length;\\n\\t\\tvar face, flen = faces.length;\\n\\n\\t\\tfor ( i = 0; i < vlen; i ++ ) {\\n\\n\\t\\t\\tvert = vertices[ i ];\\n\\n\\t\\t\\tthis.vertices.push( new THREE.Vector3( vert.x, vert.y, 0 ) );\\n\\n\\t\\t}\\n\\n\\t\\tfor ( i = 0; i < flen; i ++ ) {\\n\\n\\t\\t\\tface = faces[ i ];\\n\\n\\t\\t\\tvar a = face[ 0 ] + shapesOffset;\\n\\t\\t\\tvar b = face[ 1 ] + shapesOffset;\\n\\t\\t\\tvar c = face[ 2 ] + shapesOffset;\\n\\n\\t\\t\\tthis.faces.push( new THREE.Face3( a, b, c, null, null, material ) );\\n\\t\\t\\tthis.faceVertexUvs[ 0 ].push( uvgen.generateTopUV( this, a, b, c ) );\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\t// File:src/extras/geometries/LatheBufferGeometry.js\\n\\n\\t/**\\n\\t * @author Mugen87 / https://github.com/Mugen87\\n\\t */\\n\\n\\t // points - to create a closed torus, one must use a set of points\\n\\t //    like so: [ a, b, c, d, a ], see first is the same as last.\\n\\t // segments - the number of circumference segments to create\\n\\t // phiStart - the starting radian\\n\\t // phiLength - the radian (0 to 2PI) range of the lathed section\\n\\t //    2PI is a closed lathe, less than 2PI is a portion.\\n\\n\\tTHREE.LatheBufferGeometry = function ( points, segments, phiStart, phiLength ) {\\n\\n\\t\\tTHREE.BufferGeometry.call( this );\\n\\n\\t\\tthis.type = 'LatheBufferGeometry';\\n\\n\\t\\tthis.parameters = {\\n\\t\\t\\tpoints: points,\\n\\t\\t\\tsegments: segments,\\n\\t\\t\\tphiStart: phiStart,\\n\\t\\t\\tphiLength: phiLength\\n\\t\\t};\\n\\n\\t\\tsegments = Math.floor( segments ) || 12;\\n\\t\\tphiStart = phiStart || 0;\\n\\t\\tphiLength = phiLength || Math.PI * 2;\\n\\n\\t\\t// clamp phiLength so it's in range of [ 0, 2PI ]\\n\\t\\tphiLength = THREE.Math.clamp( phiLength, 0, Math.PI * 2 );\\n\\n\\t\\t// these are used to calculate buffer length\\n\\t\\tvar vertexCount = ( segments + 1 ) * points.length;\\n\\t\\tvar indexCount = segments * points.length * 2 * 3;\\n\\n\\t\\t// buffers\\n\\t\\tvar indices = new THREE.BufferAttribute( new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount ) , 1 );\\n\\t\\tvar vertices = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\\n\\t\\tvar uvs = new THREE.BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\\n\\n\\t\\t// helper variables\\n\\t\\tvar index = 0, indexOffset = 0, base;\\n\\t\\tvar inversePointLength = 1.0 / ( points.length - 1 );\\n\\t\\tvar inverseSegments = 1.0 / segments;\\n\\t\\tvar vertex = new THREE.Vector3();\\n\\t\\tvar uv = new THREE.Vector2();\\n\\t\\tvar i, j;\\n\\n\\t\\t// generate vertices and uvs\\n\\n\\t\\tfor ( i = 0; i <= segments; i ++ ) {\\n\\n\\t\\t\\tvar phi = phiStart + i * inverseSegments * phiLength;\\n\\n\\t\\t\\tvar sin = Math.sin( phi );\\n\\t\\t\\tvar cos = Math.cos( phi );\\n\\n\\t\\t\\tfor ( j = 0; j <= ( points.length - 1 ); j ++ ) {\\n\\n\\t\\t\\t\\t// vertex\\n\\t\\t\\t\\tvertex.x = points[ j ].x * sin;\\n\\t\\t\\t\\tvertex.y = points[ j ].y;\\n\\t\\t\\t\\tvertex.z = points[ j ].x * cos;\\n\\t\\t\\t\\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\\n\\n\\t\\t\\t\\t// uv\\n\\t\\t\\t\\tuv.x = i / segments;\\n\\t\\t\\t\\tuv.y = j / ( points.length - 1 );\\n\\t\\t\\t\\tuvs.setXY( index, uv.x, uv.y );\\n\\n\\t\\t\\t\\t// increase index\\n\\t\\t\\t\\tindex ++;\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\t// generate indices\\n\\n\\t\\tfor ( i = 0; i < segments; i ++ ) {\\n\\n\\t\\t\\tfor ( j = 0; j < ( points.length - 1 ); j ++ ) {\\n\\n\\t\\t\\t\\tbase = j + i * points.length;\\n\\n\\t\\t\\t\\t// indices\\n\\t\\t\\t\\tvar a = base;\\n\\t\\t\\t\\tvar b = base + points.length;\\n\\t\\t\\t\\tvar c = base + points.length + 1;\\n\\t\\t\\t\\tvar d = base + 1;\\n\\n\\t\\t\\t\\t// face one\\n\\t\\t\\t\\tindices.setX( indexOffset, a ); indexOffset++;\\n\\t\\t\\t\\tindices.setX( indexOffset, b ); indexOffset++;\\n\\t\\t\\t\\tindices.setX( indexOffset, d ); indexOffset++;\\n\\n\\t\\t\\t\\t// face two\\n\\t\\t\\t\\tindices.setX( indexOffset, b ); indexOffset++;\\n\\t\\t\\t\\tindices.setX( indexOffset, c ); indexOffset++;\\n\\t\\t\\t\\tindices.setX( indexOffset, d ); indexOffset++;\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\t// build geometry\\n\\n\\t\\tthis.setIndex( indices );\\n\\t\\tthis.addAttribute( 'position', vertices );\\n\\t\\tthis.addAttribute( 'uv', uvs );\\n\\n\\t\\t// generate normals\\n\\n\\t\\tthis.computeVertexNormals();\\n\\n\\t\\t// if the geometry is closed, we need to average the normals along the seam.\\n\\t\\t// because the corresponding vertices are identical (but still have different UVs).\\n\\n\\t\\tif( phiLength === Math.PI * 2 ) {\\n\\n\\t\\t\\tvar normals = this.attributes.normal.array;\\n\\t\\t\\tvar n1 = new THREE.Vector3();\\n\\t\\t\\tvar n2 = new THREE.Vector3();\\n\\t\\t\\tvar n = new THREE.Vector3();\\n\\n\\t\\t\\t// this is the buffer offset for the last line of vertices\\n\\t\\t\\tbase = segments * points.length * 3;\\n\\n\\t\\t\\tfor( i = 0, j = 0; i < points.length; i ++, j += 3 ) {\\n\\n\\t\\t\\t\\t// select the normal of the vertex in the first line\\n\\t\\t\\t\\tn1.x = normals[ j + 0 ];\\n\\t\\t\\t\\tn1.y = normals[ j + 1 ];\\n\\t\\t\\t\\tn1.z = normals[ j + 2 ];\\n\\n\\t\\t\\t\\t// select the normal of the vertex in the last line\\n\\t\\t\\t\\tn2.x = normals[ base + j + 0 ];\\n\\t\\t\\t\\tn2.y = normals[ base + j + 1 ];\\n\\t\\t\\t\\tn2.z = normals[ base + j + 2 ];\\n\\n\\t\\t\\t\\t// average normals\\n\\t\\t\\t\\tn.addVectors( n1, n2 ).normalize();\\n\\n\\t\\t\\t\\t// assign the new values to both normals\\n\\t\\t\\t\\tnormals[ j + 0 ] = normals[ base + j + 0 ] = n.x;\\n\\t\\t\\t\\tnormals[ j + 1 ] = normals[ base + j + 1 ] = n.y;\\n\\t\\t\\t\\tnormals[ j + 2 ] = normals[ base + j + 2 ] = n.z;\\n\\n\\t\\t\\t} // next row\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\tTHREE.LatheBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\\n\\tTHREE.LatheBufferGeometry.prototype.constructor = THREE.LatheBufferGeometry;\\n\\n\\t// File:src/extras/geometries/LatheGeometry.js\\n\\n\\t/**\\n\\t * @author astrodud / http://astrodud.isgreat.org/\\n\\t * @author zz85 / https://github.com/zz85\\n\\t * @author bhouston / http://clara.io\\n\\t */\\n\\n\\t// points - to create a closed torus, one must use a set of points\\n\\t//    like so: [ a, b, c, d, a ], see first is the same as last.\\n\\t// segments - the number of circumference segments to create\\n\\t// phiStart - the starting radian\\n\\t// phiLength - the radian (0 to 2PI) range of the lathed section\\n\\t//    2PI is a closed lathe, less than 2PI is a portion.\\n\\n\\tTHREE.LatheGeometry = function ( points, segments, phiStart, phiLength ) {\\n\\n\\t\\tTHREE.Geometry.call( this );\\n\\n\\t\\tthis.type = 'LatheGeometry';\\n\\n\\t\\tthis.parameters = {\\n\\t\\t\\tpoints: points,\\n\\t\\t\\tsegments: segments,\\n\\t\\t\\tphiStart: phiStart,\\n\\t\\t\\tphiLength: phiLength\\n\\t\\t};\\n\\n\\t\\tthis.fromBufferGeometry( new THREE.LatheBufferGeometry( points, segments, phiStart, phiLength ) );\\n\\t\\tthis.mergeVertices();\\n\\n\\t};\\n\\n\\tTHREE.LatheGeometry.prototype = Object.create( THREE.Geometry.prototype );\\n\\tTHREE.LatheGeometry.prototype.constructor = THREE.LatheGeometry;\\n\\n\\t// File:src/extras/geometries/PlaneGeometry.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\\n\\t */\\n\\n\\tTHREE.PlaneGeometry = function ( width, height, widthSegments, heightSegments ) {\\n\\n\\t\\tTHREE.Geometry.call( this );\\n\\n\\t\\tthis.type = 'PlaneGeometry';\\n\\n\\t\\tthis.parameters = {\\n\\t\\t\\twidth: width,\\n\\t\\t\\theight: height,\\n\\t\\t\\twidthSegments: widthSegments,\\n\\t\\t\\theightSegments: heightSegments\\n\\t\\t};\\n\\n\\t\\tthis.fromBufferGeometry( new THREE.PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\\n\\n\\t};\\n\\n\\tTHREE.PlaneGeometry.prototype = Object.create( THREE.Geometry.prototype );\\n\\tTHREE.PlaneGeometry.prototype.constructor = THREE.PlaneGeometry;\\n\\n\\t// File:src/extras/geometries/PlaneBufferGeometry.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\\n\\t */\\n\\n\\tTHREE.PlaneBufferGeometry = function ( width, height, widthSegments, heightSegments ) {\\n\\n\\t\\tTHREE.BufferGeometry.call( this );\\n\\n\\t\\tthis.type = 'PlaneBufferGeometry';\\n\\n\\t\\tthis.parameters = {\\n\\t\\t\\twidth: width,\\n\\t\\t\\theight: height,\\n\\t\\t\\twidthSegments: widthSegments,\\n\\t\\t\\theightSegments: heightSegments\\n\\t\\t};\\n\\n\\t\\tvar width_half = width / 2;\\n\\t\\tvar height_half = height / 2;\\n\\n\\t\\tvar gridX = Math.floor( widthSegments ) || 1;\\n\\t\\tvar gridY = Math.floor( heightSegments ) || 1;\\n\\n\\t\\tvar gridX1 = gridX + 1;\\n\\t\\tvar gridY1 = gridY + 1;\\n\\n\\t\\tvar segment_width = width / gridX;\\n\\t\\tvar segment_height = height / gridY;\\n\\n\\t\\tvar vertices = new Float32Array( gridX1 * gridY1 * 3 );\\n\\t\\tvar normals = new Float32Array( gridX1 * gridY1 * 3 );\\n\\t\\tvar uvs = new Float32Array( gridX1 * gridY1 * 2 );\\n\\n\\t\\tvar offset = 0;\\n\\t\\tvar offset2 = 0;\\n\\n\\t\\tfor ( var iy = 0; iy < gridY1; iy ++ ) {\\n\\n\\t\\t\\tvar y = iy * segment_height - height_half;\\n\\n\\t\\t\\tfor ( var ix = 0; ix < gridX1; ix ++ ) {\\n\\n\\t\\t\\t\\tvar x = ix * segment_width - width_half;\\n\\n\\t\\t\\t\\tvertices[ offset ] = x;\\n\\t\\t\\t\\tvertices[ offset + 1 ] = - y;\\n\\n\\t\\t\\t\\tnormals[ offset + 2 ] = 1;\\n\\n\\t\\t\\t\\tuvs[ offset2 ] = ix / gridX;\\n\\t\\t\\t\\tuvs[ offset2 + 1 ] = 1 - ( iy / gridY );\\n\\n\\t\\t\\t\\toffset += 3;\\n\\t\\t\\t\\toffset2 += 2;\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\toffset = 0;\\n\\n\\t\\tvar indices = new ( ( vertices.length / 3 ) > 65535 ? Uint32Array : Uint16Array )( gridX * gridY * 6 );\\n\\n\\t\\tfor ( var iy = 0; iy < gridY; iy ++ ) {\\n\\n\\t\\t\\tfor ( var ix = 0; ix < gridX; ix ++ ) {\\n\\n\\t\\t\\t\\tvar a = ix + gridX1 * iy;\\n\\t\\t\\t\\tvar b = ix + gridX1 * ( iy + 1 );\\n\\t\\t\\t\\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\\n\\t\\t\\t\\tvar d = ( ix + 1 ) + gridX1 * iy;\\n\\n\\t\\t\\t\\tindices[ offset ] = a;\\n\\t\\t\\t\\tindices[ offset + 1 ] = b;\\n\\t\\t\\t\\tindices[ offset + 2 ] = d;\\n\\n\\t\\t\\t\\tindices[ offset + 3 ] = b;\\n\\t\\t\\t\\tindices[ offset + 4 ] = c;\\n\\t\\t\\t\\tindices[ offset + 5 ] = d;\\n\\n\\t\\t\\t\\toffset += 6;\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tthis.setIndex( new THREE.BufferAttribute( indices, 1 ) );\\n\\t\\tthis.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\\n\\t\\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\\n\\t\\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\\n\\n\\t};\\n\\n\\tTHREE.PlaneBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\\n\\tTHREE.PlaneBufferGeometry.prototype.constructor = THREE.PlaneBufferGeometry;\\n\\n\\t// File:src/extras/geometries/RingBufferGeometry.js\\n\\n\\t/**\\n\\t * @author Mugen87 / https://github.com/Mugen87\\n\\t */\\n\\n\\tTHREE.RingBufferGeometry = function ( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\\n\\n\\t\\tTHREE.BufferGeometry.call( this );\\n\\n\\t\\tthis.type = 'RingBufferGeometry';\\n\\n\\t\\tthis.parameters = {\\n\\t\\t\\tinnerRadius: innerRadius,\\n\\t\\t\\touterRadius: outerRadius,\\n\\t\\t\\tthetaSegments: thetaSegments,\\n\\t\\t\\tphiSegments: phiSegments,\\n\\t\\t\\tthetaStart: thetaStart,\\n\\t\\t\\tthetaLength: thetaLength\\n\\t\\t};\\n\\n\\t\\tinnerRadius = innerRadius || 20;\\n\\t\\touterRadius = outerRadius || 50;\\n\\n\\t\\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\\n\\t\\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\\n\\n\\t\\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\\n\\t\\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 1;\\n\\n\\t\\t// these are used to calculate buffer length\\n\\t\\tvar vertexCount = ( thetaSegments + 1 ) * ( phiSegments + 1 );\\n\\t\\tvar indexCount = thetaSegments * phiSegments * 2 * 3;\\n\\n\\t\\t// buffers\\n\\t\\tvar indices = new THREE.BufferAttribute( new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount ) , 1 );\\n\\t\\tvar vertices = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\\n\\t\\tvar normals = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\\n\\t\\tvar uvs = new THREE.BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\\n\\n\\t\\t// some helper variables\\n\\t\\tvar index = 0, indexOffset = 0, segment;\\n\\t\\tvar radius = innerRadius;\\n\\t\\tvar radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\\n\\t\\tvar vertex = new THREE.Vector3();\\n\\t\\tvar uv = new THREE.Vector2();\\n\\t\\tvar j, i;\\n\\n\\t\\t// generate vertices, normals and uvs\\n\\n\\t\\t// values are generate from the inside of the ring to the outside\\n\\n\\t\\tfor ( j = 0; j <= phiSegments; j ++ ) {\\n\\n\\t\\t\\tfor ( i = 0; i <= thetaSegments; i ++ ) {\\n\\n\\t\\t\\t\\tsegment = thetaStart + i / thetaSegments * thetaLength;\\n\\n\\t\\t\\t\\t// vertex\\n\\t\\t\\t\\tvertex.x = radius * Math.cos( segment );\\n\\t\\t\\t\\tvertex.y = radius * Math.sin( segment );\\n\\t\\t\\t\\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\\n\\n\\t\\t\\t\\t// normal\\n\\t\\t\\t\\tnormals.setXYZ( index, 0, 0, 1 );\\n\\n\\t\\t\\t\\t// uv\\n\\t\\t\\t\\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\\n\\t\\t\\t\\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\\n\\t\\t\\t\\tuvs.setXY( index, uv.x, uv.y );\\n\\n\\t\\t\\t\\t// increase index\\n\\t\\t\\t\\tindex++;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t// increase the radius for next row of vertices\\n\\t\\t\\tradius += radiusStep;\\n\\n\\t\\t}\\n\\n\\t\\t// generate indices\\n\\n\\t\\tfor ( j = 0; j < phiSegments; j ++ ) {\\n\\n\\t\\t\\tvar thetaSegmentLevel = j * ( thetaSegments + 1 );\\n\\n\\t\\t\\tfor ( i = 0; i < thetaSegments; i ++ ) {\\n\\n\\t\\t\\t\\tsegment = i + thetaSegmentLevel;\\n\\n\\t\\t\\t\\t// indices\\n\\t\\t\\t\\tvar a = segment;\\n\\t\\t\\t\\tvar b = segment + thetaSegments + 1;\\n\\t\\t\\t\\tvar c = segment + thetaSegments + 2;\\n\\t\\t\\t\\tvar d = segment + 1;\\n\\n\\t\\t\\t\\t// face one\\n\\t\\t\\t\\tindices.setX( indexOffset, a ); indexOffset++;\\n\\t\\t\\t\\tindices.setX( indexOffset, b ); indexOffset++;\\n\\t\\t\\t\\tindices.setX( indexOffset, c ); indexOffset++;\\n\\n\\t\\t\\t\\t// face two\\n\\t\\t\\t\\tindices.setX( indexOffset, a ); indexOffset++;\\n\\t\\t\\t\\tindices.setX( indexOffset, c ); indexOffset++;\\n\\t\\t\\t\\tindices.setX( indexOffset, d ); indexOffset++;\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\t// build geometry\\n\\n\\t\\tthis.setIndex( indices );\\n\\t\\tthis.addAttribute( 'position', vertices );\\n\\t\\tthis.addAttribute( 'normal', normals );\\n\\t\\tthis.addAttribute( 'uv', uvs );\\n\\n\\t};\\n\\n\\tTHREE.RingBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\\n\\tTHREE.RingBufferGeometry.prototype.constructor = THREE.RingBufferGeometry;\\n\\n\\t// File:src/extras/geometries/RingGeometry.js\\n\\n\\t/**\\n\\t * @author Kaleb Murphy\\n\\t */\\n\\n\\tTHREE.RingGeometry = function ( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\\n\\n\\t\\tTHREE.Geometry.call( this );\\n\\n\\t\\tthis.type = 'RingGeometry';\\n\\n\\t\\tthis.parameters = {\\n\\t\\t\\tinnerRadius: innerRadius,\\n\\t\\t\\touterRadius: outerRadius,\\n\\t\\t\\tthetaSegments: thetaSegments,\\n\\t\\t\\tphiSegments: phiSegments,\\n\\t\\t\\tthetaStart: thetaStart,\\n\\t\\t\\tthetaLength: thetaLength\\n\\t\\t};\\n\\n\\t\\tthis.fromBufferGeometry( new THREE.RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) );\\n\\n\\t};\\n\\n\\tTHREE.RingGeometry.prototype = Object.create( THREE.Geometry.prototype );\\n\\tTHREE.RingGeometry.prototype.constructor = THREE.RingGeometry;\\n\\n\\t// File:src/extras/geometries/SphereGeometry.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t */\\n\\n\\tTHREE.SphereGeometry = function ( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\\n\\n\\t\\tTHREE.Geometry.call( this );\\n\\n\\t\\tthis.type = 'SphereGeometry';\\n\\n\\t\\tthis.parameters = {\\n\\t\\t\\tradius: radius,\\n\\t\\t\\twidthSegments: widthSegments,\\n\\t\\t\\theightSegments: heightSegments,\\n\\t\\t\\tphiStart: phiStart,\\n\\t\\t\\tphiLength: phiLength,\\n\\t\\t\\tthetaStart: thetaStart,\\n\\t\\t\\tthetaLength: thetaLength\\n\\t\\t};\\n\\n\\t\\tthis.fromBufferGeometry( new THREE.SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\\n\\n\\t};\\n\\n\\tTHREE.SphereGeometry.prototype = Object.create( THREE.Geometry.prototype );\\n\\tTHREE.SphereGeometry.prototype.constructor = THREE.SphereGeometry;\\n\\n\\t// File:src/extras/geometries/SphereBufferGeometry.js\\n\\n\\t/**\\n\\t * @author benaadams / https://twitter.com/ben_a_adams\\n\\t * based on THREE.SphereGeometry\\n\\t */\\n\\n\\tTHREE.SphereBufferGeometry = function ( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\\n\\n\\t\\tTHREE.BufferGeometry.call( this );\\n\\n\\t\\tthis.type = 'SphereBufferGeometry';\\n\\n\\t\\tthis.parameters = {\\n\\t\\t\\tradius: radius,\\n\\t\\t\\twidthSegments: widthSegments,\\n\\t\\t\\theightSegments: heightSegments,\\n\\t\\t\\tphiStart: phiStart,\\n\\t\\t\\tphiLength: phiLength,\\n\\t\\t\\tthetaStart: thetaStart,\\n\\t\\t\\tthetaLength: thetaLength\\n\\t\\t};\\n\\n\\t\\tradius = radius || 50;\\n\\n\\t\\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\\n\\t\\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\\n\\n\\t\\tphiStart = phiStart !== undefined ? phiStart : 0;\\n\\t\\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\\n\\n\\t\\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\\n\\t\\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\\n\\n\\t\\tvar thetaEnd = thetaStart + thetaLength;\\n\\n\\t\\tvar vertexCount = ( ( widthSegments + 1 ) * ( heightSegments + 1 ) );\\n\\n\\t\\tvar positions = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\\n\\t\\tvar normals = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\\n\\t\\tvar uvs = new THREE.BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\\n\\n\\t\\tvar index = 0, vertices = [], normal = new THREE.Vector3();\\n\\n\\t\\tfor ( var y = 0; y <= heightSegments; y ++ ) {\\n\\n\\t\\t\\tvar verticesRow = [];\\n\\n\\t\\t\\tvar v = y / heightSegments;\\n\\n\\t\\t\\tfor ( var x = 0; x <= widthSegments; x ++ ) {\\n\\n\\t\\t\\t\\tvar u = x / widthSegments;\\n\\n\\t\\t\\t\\tvar px = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\\n\\t\\t\\t\\tvar py = radius * Math.cos( thetaStart + v * thetaLength );\\n\\t\\t\\t\\tvar pz = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\\n\\n\\t\\t\\t\\tnormal.set( px, py, pz ).normalize();\\n\\n\\t\\t\\t\\tpositions.setXYZ( index, px, py, pz );\\n\\t\\t\\t\\tnormals.setXYZ( index, normal.x, normal.y, normal.z );\\n\\t\\t\\t\\tuvs.setXY( index, u, 1 - v );\\n\\n\\t\\t\\t\\tverticesRow.push( index );\\n\\n\\t\\t\\t\\tindex ++;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvertices.push( verticesRow );\\n\\n\\t\\t}\\n\\n\\t\\tvar indices = [];\\n\\n\\t\\tfor ( var y = 0; y < heightSegments; y ++ ) {\\n\\n\\t\\t\\tfor ( var x = 0; x < widthSegments; x ++ ) {\\n\\n\\t\\t\\t\\tvar v1 = vertices[ y ][ x + 1 ];\\n\\t\\t\\t\\tvar v2 = vertices[ y ][ x ];\\n\\t\\t\\t\\tvar v3 = vertices[ y + 1 ][ x ];\\n\\t\\t\\t\\tvar v4 = vertices[ y + 1 ][ x + 1 ];\\n\\n\\t\\t\\t\\tif ( y !== 0 || thetaStart > 0 ) indices.push( v1, v2, v4 );\\n\\t\\t\\t\\tif ( y !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( v2, v3, v4 );\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tthis.setIndex( new ( positions.count > 65535 ? THREE.Uint32Attribute : THREE.Uint16Attribute )( indices, 1 ) );\\n\\t\\tthis.addAttribute( 'position', positions );\\n\\t\\tthis.addAttribute( 'normal', normals );\\n\\t\\tthis.addAttribute( 'uv', uvs );\\n\\n\\t\\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\\n\\n\\t};\\n\\n\\tTHREE.SphereBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\\n\\tTHREE.SphereBufferGeometry.prototype.constructor = THREE.SphereBufferGeometry;\\n\\n\\t// File:src/extras/geometries/TextGeometry.js\\n\\n\\t/**\\n\\t * @author zz85 / http://www.lab4games.net/zz85/blog\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t *\\n\\t * Text = 3D Text\\n\\t *\\n\\t * parameters = {\\n\\t *  font: <THREE.Font>, // font\\n\\t *\\n\\t *  size: <float>, // size of the text\\n\\t *  height: <float>, // thickness to extrude text\\n\\t *  curveSegments: <int>, // number of points on the curves\\n\\t *\\n\\t *  bevelEnabled: <bool>, // turn on bevel\\n\\t *  bevelThickness: <float>, // how deep into text bevel goes\\n\\t *  bevelSize: <float> // how far from text outline is bevel\\n\\t * }\\n\\t */\\n\\n\\tTHREE.TextGeometry = function ( text, parameters ) {\\n\\n\\t\\tparameters = parameters || {};\\n\\n\\t\\tvar font = parameters.font;\\n\\n\\t\\tif ( font instanceof THREE.Font === false ) {\\n\\n\\t\\t\\tconsole.error( 'THREE.TextGeometry: font parameter is not an instance of THREE.Font.' );\\n\\t\\t\\treturn new THREE.Geometry();\\n\\n\\t\\t}\\n\\n\\t\\tvar shapes = font.generateShapes( text, parameters.size, parameters.curveSegments );\\n\\n\\t\\t// translate parameters to ExtrudeGeometry API\\n\\n\\t\\tparameters.amount = parameters.height !== undefined ? parameters.height : 50;\\n\\n\\t\\t// defaults\\n\\n\\t\\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\\n\\t\\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\\n\\t\\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\\n\\n\\t\\tTHREE.ExtrudeGeometry.call( this, shapes, parameters );\\n\\n\\t\\tthis.type = 'TextGeometry';\\n\\n\\t};\\n\\n\\tTHREE.TextGeometry.prototype = Object.create( THREE.ExtrudeGeometry.prototype );\\n\\tTHREE.TextGeometry.prototype.constructor = THREE.TextGeometry;\\n\\n\\t// File:src/extras/geometries/TorusBufferGeometry.js\\n\\n\\t/**\\n\\t * @author Mugen87 / https://github.com/Mugen87\\n\\t */\\n\\n\\tTHREE.TorusBufferGeometry = function ( radius, tube, radialSegments, tubularSegments, arc ) {\\n\\n\\t\\tTHREE.BufferGeometry.call( this );\\n\\n\\t\\tthis.type = 'TorusBufferGeometry';\\n\\n\\t\\tthis.parameters = {\\n\\t\\t\\tradius: radius,\\n\\t\\t\\ttube: tube,\\n\\t\\t\\tradialSegments: radialSegments,\\n\\t\\t\\ttubularSegments: tubularSegments,\\n\\t\\t\\tarc: arc\\n\\t\\t};\\n\\n\\t\\tradius = radius || 100;\\n\\t\\ttube = tube || 40;\\n\\t\\tradialSegments = Math.floor( radialSegments ) || 8;\\n\\t\\ttubularSegments = Math.floor( tubularSegments ) || 6;\\n\\t\\tarc = arc || Math.PI * 2;\\n\\n\\t\\t// used to calculate buffer length\\n\\t\\tvar vertexCount = ( ( radialSegments + 1 ) * ( tubularSegments + 1 ) );\\n\\t\\tvar indexCount = radialSegments * tubularSegments * 2 * 3;\\n\\n\\t\\t// buffers\\n\\t\\tvar indices = new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount );\\n\\t\\tvar vertices = new Float32Array( vertexCount * 3 );\\n\\t\\tvar normals = new Float32Array( vertexCount * 3 );\\n\\t\\tvar uvs = new Float32Array( vertexCount * 2 );\\n\\n\\t\\t// offset variables\\n\\t\\tvar vertexBufferOffset = 0;\\n\\t\\tvar uvBufferOffset = 0;\\n\\t\\tvar indexBufferOffset = 0;\\n\\n\\t\\t// helper variables\\n\\t\\tvar center = new THREE.Vector3();\\n\\t\\tvar vertex = new THREE.Vector3();\\n\\t\\tvar normal = new THREE.Vector3();\\n\\n\\t\\tvar j, i;\\n\\n\\t\\t// generate vertices, normals and uvs\\n\\n\\t\\tfor ( j = 0; j <= radialSegments; j ++ ) {\\n\\n\\t\\t\\tfor ( i = 0; i <= tubularSegments; i ++ ) {\\n\\n\\t\\t\\t\\tvar u = i / tubularSegments * arc;\\n\\t\\t\\t\\tvar v = j / radialSegments * Math.PI * 2;\\n\\n\\t\\t\\t\\t// vertex\\n\\t\\t\\t\\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\\n\\t\\t\\t\\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\\n\\t\\t\\t\\tvertex.z = tube * Math.sin( v );\\n\\n\\t\\t\\t\\tvertices[ vertexBufferOffset ] = vertex.x;\\n\\t\\t\\t\\tvertices[ vertexBufferOffset + 1 ] = vertex.y;\\n\\t\\t\\t\\tvertices[ vertexBufferOffset + 2 ] = vertex.z;\\n\\n\\t\\t\\t\\t// this vector is used to calculate the normal\\n\\t\\t\\t\\tcenter.x = radius * Math.cos( u );\\n\\t\\t\\t\\tcenter.y = radius * Math.sin( u );\\n\\n\\t\\t\\t\\t// normal\\n\\t\\t\\t\\tnormal.subVectors( vertex, center ).normalize();\\n\\n\\t\\t\\t\\tnormals[ vertexBufferOffset ] = normal.x;\\n\\t\\t\\t\\tnormals[ vertexBufferOffset + 1 ] = normal.y;\\n\\t\\t\\t\\tnormals[ vertexBufferOffset + 2 ] = normal.z;\\n\\n\\t\\t\\t\\t// uv\\n\\t\\t\\t\\tuvs[ uvBufferOffset ] = i / tubularSegments;\\n\\t\\t\\t\\tuvs[ uvBufferOffset + 1 ] = j / radialSegments;\\n\\n\\t\\t\\t\\t// update offsets\\n\\t\\t\\t\\tvertexBufferOffset += 3;\\n\\t\\t\\t\\tuvBufferOffset += 2;\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\t// generate indices\\n\\n\\t\\tfor ( j = 1; j <= radialSegments; j ++ ) {\\n\\n\\t\\t\\tfor ( i = 1; i <= tubularSegments; i ++ ) {\\n\\n\\t\\t\\t\\t// indices\\n\\t\\t\\t\\tvar a = ( tubularSegments + 1 ) * j + i - 1;\\n\\t\\t\\t\\tvar b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\\n\\t\\t\\t\\tvar c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\\n\\t\\t\\t\\tvar d = ( tubularSegments + 1 ) * j + i;\\n\\n\\t\\t\\t\\t// face one\\n\\t\\t\\t\\tindices[ indexBufferOffset ] = a;\\n\\t\\t\\t\\tindices[ indexBufferOffset + 1 ] = b;\\n\\t\\t\\t\\tindices[ indexBufferOffset + 2 ] = d;\\n\\n\\t\\t\\t\\t// face two\\n\\t\\t\\t\\tindices[ indexBufferOffset + 3 ] = b;\\n\\t\\t\\t\\tindices[ indexBufferOffset + 4 ] = c;\\n\\t\\t\\t\\tindices[ indexBufferOffset + 5 ] = d;\\n\\n\\t\\t\\t\\t// update offset\\n\\t\\t\\t\\tindexBufferOffset += 6;\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\t// build geometry\\n\\t\\tthis.setIndex( new THREE.BufferAttribute( indices, 1 ) );\\n\\t\\tthis.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\\n\\t\\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\\n\\t\\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\\n\\n\\t};\\n\\n\\tTHREE.TorusBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\\n\\tTHREE.TorusBufferGeometry.prototype.constructor = THREE.TorusBufferGeometry;\\n\\n\\t// File:src/extras/geometries/TorusGeometry.js\\n\\n\\t/**\\n\\t * @author oosmoxiecode\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3DLite/src/away3dlite/primitives/Torus.as?r=2888\\n\\t */\\n\\n\\tTHREE.TorusGeometry = function ( radius, tube, radialSegments, tubularSegments, arc ) {\\n\\n\\t\\tTHREE.Geometry.call( this );\\n\\n\\t\\tthis.type = 'TorusGeometry';\\n\\n\\t\\tthis.parameters = {\\n\\t\\t\\tradius: radius,\\n\\t\\t\\ttube: tube,\\n\\t\\t\\tradialSegments: radialSegments,\\n\\t\\t\\ttubularSegments: tubularSegments,\\n\\t\\t\\tarc: arc\\n\\t\\t};\\n\\n\\t\\tthis.fromBufferGeometry( new THREE.TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) );\\n\\n\\t};\\n\\n\\tTHREE.TorusGeometry.prototype = Object.create( THREE.Geometry.prototype );\\n\\tTHREE.TorusGeometry.prototype.constructor = THREE.TorusGeometry;\\n\\n\\t// File:src/extras/geometries/TorusKnotBufferGeometry.js\\n\\n\\t/**\\n\\t * @author Mugen87 / https://github.com/Mugen87\\n\\t *\\n\\t * see: http://www.blackpawn.com/texts/pqtorus/\\n\\t */\\n\\tTHREE.TorusKnotBufferGeometry = function ( radius, tube, tubularSegments, radialSegments, p, q ) {\\n\\n\\t\\tTHREE.BufferGeometry.call( this );\\n\\n\\t\\tthis.type = 'TorusKnotBufferGeometry';\\n\\n\\t\\tthis.parameters = {\\n\\t\\t\\tradius: radius,\\n\\t\\t\\ttube: tube,\\n\\t\\t\\ttubularSegments: tubularSegments,\\n\\t\\t\\tradialSegments: radialSegments,\\n\\t\\t\\tp: p,\\n\\t\\t\\tq: q\\n\\t\\t};\\n\\n\\t\\tradius = radius || 100;\\n\\t\\ttube = tube || 40;\\n\\t\\ttubularSegments = Math.floor( tubularSegments ) || 64;\\n\\t\\tradialSegments = Math.floor( radialSegments ) || 8;\\n\\t\\tp = p || 2;\\n\\t\\tq = q || 3;\\n\\n\\t\\t// used to calculate buffer length\\n\\t\\tvar vertexCount = ( ( radialSegments + 1 ) * ( tubularSegments + 1 ) );\\n\\t\\tvar indexCount = radialSegments * tubularSegments * 2 * 3;\\n\\n\\t\\t// buffers\\n\\t\\tvar indices = new THREE.BufferAttribute( new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount ) , 1 );\\n\\t\\tvar vertices = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\\n\\t\\tvar normals = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\\n\\t\\tvar uvs = new THREE.BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\\n\\n\\t\\t// helper variables\\n\\t\\tvar i, j, index = 0, indexOffset = 0;\\n\\n\\t\\tvar vertex = new THREE.Vector3();\\n\\t\\tvar normal = new THREE.Vector3();\\n\\t\\tvar uv = new THREE.Vector2();\\n\\n\\t\\tvar P1 = new THREE.Vector3();\\n\\t\\tvar P2 = new THREE.Vector3();\\n\\n\\t\\tvar B = new THREE.Vector3();\\n\\t\\tvar T = new THREE.Vector3();\\n\\t\\tvar N = new THREE.Vector3();\\n\\n\\t\\t// generate vertices, normals and uvs\\n\\n\\t\\tfor ( i = 0; i <= tubularSegments; ++ i ) {\\n\\n\\t\\t\\t// the radian \\\"u\\\" is used to calculate the position on the torus curve of the current tubular segement\\n\\n\\t\\t\\tvar u = i / tubularSegments * p * Math.PI * 2;\\n\\n\\t\\t\\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\\n\\t\\t\\t// these points are used to create a special \\\"coordinate space\\\", which is necessary to calculate the correct vertex positions\\n\\n\\t\\t\\tcalculatePositionOnCurve( u, p, q, radius, P1 );\\n\\t\\t\\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\\n\\n\\t\\t\\t// calculate orthonormal basis\\n\\n\\t\\t\\tT.subVectors( P2, P1 );\\n\\t\\t\\tN.addVectors( P2, P1 );\\n\\t\\t\\tB.crossVectors( T, N );\\n\\t\\t\\tN.crossVectors( B, T );\\n\\n\\t\\t\\t// normalize B, N. T can be ignored, we don't use it\\n\\n\\t\\t\\tB.normalize();\\n\\t\\t\\tN.normalize();\\n\\n\\t\\t\\tfor ( j = 0; j <= radialSegments; ++ j ) {\\n\\n\\t\\t\\t\\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\\n\\t\\t\\t\\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\\n\\n\\t\\t\\t\\tvar v = j / radialSegments * Math.PI * 2;\\n\\t\\t\\t\\tvar cx = - tube * Math.cos( v );\\n\\t\\t\\t\\tvar cy = tube * Math.sin( v );\\n\\n\\t\\t\\t\\t// now calculate the final vertex position.\\n\\t\\t\\t\\t// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\\n\\n\\t\\t\\t\\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\\n\\t\\t\\t\\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\\n\\t\\t\\t\\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\\n\\n\\t\\t\\t\\t// vertex\\n\\t\\t\\t\\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\\n\\n\\t\\t\\t\\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\\n\\t\\t\\t\\tnormal.subVectors( vertex, P1 ).normalize();\\n\\t\\t\\t\\tnormals.setXYZ( index, normal.x, normal.y, normal.z );\\n\\n\\t\\t\\t\\t// uv\\n\\t\\t\\t\\tuv.x = i / tubularSegments;\\n\\t\\t\\t\\tuv.y = j / radialSegments;\\n\\t\\t\\t\\tuvs.setXY( index, uv.x, uv.y );\\n\\n\\t\\t\\t\\t// increase index\\n\\t\\t\\t\\tindex ++;\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\t// generate indices\\n\\n\\t\\tfor ( j = 1; j <= tubularSegments; j ++ ) {\\n\\n\\t\\t\\tfor ( i = 1; i <= radialSegments; i ++ ) {\\n\\n\\t\\t\\t\\t// indices\\n\\t\\t\\t\\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\\n\\t\\t\\t\\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\\n\\t\\t\\t\\tvar c = ( radialSegments + 1 ) * j + i;\\n\\t\\t\\t\\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\\n\\n\\t\\t\\t\\t// face one\\n\\t\\t\\t\\tindices.setX( indexOffset, a ); indexOffset++;\\n\\t\\t\\t\\tindices.setX( indexOffset, b ); indexOffset++;\\n\\t\\t\\t\\tindices.setX( indexOffset, d ); indexOffset++;\\n\\n\\t\\t\\t\\t// face two\\n\\t\\t\\t\\tindices.setX( indexOffset, b ); indexOffset++;\\n\\t\\t\\t\\tindices.setX( indexOffset, c ); indexOffset++;\\n\\t\\t\\t\\tindices.setX( indexOffset, d ); indexOffset++;\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\t// build geometry\\n\\n\\t\\tthis.setIndex( indices );\\n\\t\\tthis.addAttribute( 'position', vertices );\\n\\t\\tthis.addAttribute( 'normal', normals );\\n\\t\\tthis.addAttribute( 'uv', uvs );\\n\\n\\t\\t// this function calculates the current position on the torus curve\\n\\n\\t\\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\\n\\n\\t\\t\\tvar cu = Math.cos( u );\\n\\t\\t\\tvar su = Math.sin( u );\\n\\t\\t\\tvar quOverP = q / p * u;\\n\\t\\t\\tvar cs = Math.cos( quOverP );\\n\\n\\t\\t\\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\\n\\t\\t\\tposition.y = radius * ( 2 + cs ) * su * 0.5;\\n\\t\\t\\tposition.z = radius * Math.sin( quOverP ) * 0.5;\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\tTHREE.TorusKnotBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\\n\\tTHREE.TorusKnotBufferGeometry.prototype.constructor = THREE.TorusKnotBufferGeometry;\\n\\n\\t// File:src/extras/geometries/TorusKnotGeometry.js\\n\\n\\t/**\\n\\t * @author oosmoxiecode\\n\\t */\\n\\n\\tTHREE.TorusKnotGeometry = function ( radius, tube, tubularSegments, radialSegments, p, q, heightScale ) {\\n\\n\\t\\tTHREE.Geometry.call( this );\\n\\n\\t\\tthis.type = 'TorusKnotGeometry';\\n\\n\\t\\tthis.parameters = {\\n\\t\\t\\tradius: radius,\\n\\t\\t\\ttube: tube,\\n\\t\\t\\ttubularSegments: tubularSegments,\\n\\t\\t\\tradialSegments: radialSegments,\\n\\t\\t\\tp: p,\\n\\t\\t\\tq: q\\n\\t\\t};\\n\\n\\t\\tif( heightScale !== undefined ) console.warn( 'THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.' );\\n\\n\\t\\tthis.fromBufferGeometry( new THREE.TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) );\\n\\t\\tthis.mergeVertices();\\n\\n\\t};\\n\\n\\tTHREE.TorusKnotGeometry.prototype = Object.create( THREE.Geometry.prototype );\\n\\tTHREE.TorusKnotGeometry.prototype.constructor = THREE.TorusKnotGeometry;\\n\\n\\t// File:src/extras/geometries/TubeGeometry.js\\n\\n\\t/**\\n\\t * @author WestLangley / https://github.com/WestLangley\\n\\t * @author zz85 / https://github.com/zz85\\n\\t * @author miningold / https://github.com/miningold\\n\\t * @author jonobr1 / https://github.com/jonobr1\\n\\t *\\n\\t * Modified from the TorusKnotGeometry by @oosmoxiecode\\n\\t *\\n\\t * Creates a tube which extrudes along a 3d spline\\n\\t *\\n\\t * Uses parallel transport frames as described in\\n\\t * http://www.cs.indiana.edu/pub/techreports/TR425.pdf\\n\\t */\\n\\n\\tTHREE.TubeGeometry = function ( path, segments, radius, radialSegments, closed, taper ) {\\n\\n\\t\\tTHREE.Geometry.call( this );\\n\\n\\t\\tthis.type = 'TubeGeometry';\\n\\n\\t\\tthis.parameters = {\\n\\t\\t\\tpath: path,\\n\\t\\t\\tsegments: segments,\\n\\t\\t\\tradius: radius,\\n\\t\\t\\tradialSegments: radialSegments,\\n\\t\\t\\tclosed: closed,\\n\\t\\t\\ttaper: taper\\n\\t\\t};\\n\\n\\t\\tsegments = segments || 64;\\n\\t\\tradius = radius || 1;\\n\\t\\tradialSegments = radialSegments || 8;\\n\\t\\tclosed = closed || false;\\n\\t\\ttaper = taper || THREE.TubeGeometry.NoTaper;\\n\\n\\t\\tvar grid = [];\\n\\n\\t\\tvar scope = this,\\n\\n\\t\\t\\ttangent,\\n\\t\\t\\tnormal,\\n\\t\\t\\tbinormal,\\n\\n\\t\\t\\tnumpoints = segments + 1,\\n\\n\\t\\t\\tu, v, r,\\n\\n\\t\\t\\tcx, cy,\\n\\t\\t\\tpos, pos2 = new THREE.Vector3(),\\n\\t\\t\\ti, j,\\n\\t\\t\\tip, jp,\\n\\t\\t\\ta, b, c, d,\\n\\t\\t\\tuva, uvb, uvc, uvd;\\n\\n\\t\\tvar frames = new THREE.TubeGeometry.FrenetFrames( path, segments, closed ),\\n\\t\\t\\ttangents = frames.tangents,\\n\\t\\t\\tnormals = frames.normals,\\n\\t\\t\\tbinormals = frames.binormals;\\n\\n\\t\\t// proxy internals\\n\\t\\tthis.tangents = tangents;\\n\\t\\tthis.normals = normals;\\n\\t\\tthis.binormals = binormals;\\n\\n\\t\\tfunction vert( x, y, z ) {\\n\\n\\t\\t\\treturn scope.vertices.push( new THREE.Vector3( x, y, z ) ) - 1;\\n\\n\\t\\t}\\n\\n\\t\\t// construct the grid\\n\\n\\t\\tfor ( i = 0; i < numpoints; i ++ ) {\\n\\n\\t\\t\\tgrid[ i ] = [];\\n\\n\\t\\t\\tu = i / ( numpoints - 1 );\\n\\n\\t\\t\\tpos = path.getPointAt( u );\\n\\n\\t\\t\\ttangent = tangents[ i ];\\n\\t\\t\\tnormal = normals[ i ];\\n\\t\\t\\tbinormal = binormals[ i ];\\n\\n\\t\\t\\tr = radius * taper( u );\\n\\n\\t\\t\\tfor ( j = 0; j < radialSegments; j ++ ) {\\n\\n\\t\\t\\t\\tv = j / radialSegments * 2 * Math.PI;\\n\\n\\t\\t\\t\\tcx = - r * Math.cos( v ); // TODO: Hack: Negating it so it faces outside.\\n\\t\\t\\t\\tcy = r * Math.sin( v );\\n\\n\\t\\t\\t\\tpos2.copy( pos );\\n\\t\\t\\t\\tpos2.x += cx * normal.x + cy * binormal.x;\\n\\t\\t\\t\\tpos2.y += cx * normal.y + cy * binormal.y;\\n\\t\\t\\t\\tpos2.z += cx * normal.z + cy * binormal.z;\\n\\n\\t\\t\\t\\tgrid[ i ][ j ] = vert( pos2.x, pos2.y, pos2.z );\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\n\\t\\t// construct the mesh\\n\\n\\t\\tfor ( i = 0; i < segments; i ++ ) {\\n\\n\\t\\t\\tfor ( j = 0; j < radialSegments; j ++ ) {\\n\\n\\t\\t\\t\\tip = ( closed ) ? ( i + 1 ) % segments : i + 1;\\n\\t\\t\\t\\tjp = ( j + 1 ) % radialSegments;\\n\\n\\t\\t\\t\\ta = grid[ i ][ j ];\\t\\t// *** NOT NECESSARILY PLANAR ! ***\\n\\t\\t\\t\\tb = grid[ ip ][ j ];\\n\\t\\t\\t\\tc = grid[ ip ][ jp ];\\n\\t\\t\\t\\td = grid[ i ][ jp ];\\n\\n\\t\\t\\t\\tuva = new THREE.Vector2( i / segments, j / radialSegments );\\n\\t\\t\\t\\tuvb = new THREE.Vector2( ( i + 1 ) / segments, j / radialSegments );\\n\\t\\t\\t\\tuvc = new THREE.Vector2( ( i + 1 ) / segments, ( j + 1 ) / radialSegments );\\n\\t\\t\\t\\tuvd = new THREE.Vector2( i / segments, ( j + 1 ) / radialSegments );\\n\\n\\t\\t\\t\\tthis.faces.push( new THREE.Face3( a, b, d ) );\\n\\t\\t\\t\\tthis.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\\n\\n\\t\\t\\t\\tthis.faces.push( new THREE.Face3( b, c, d ) );\\n\\t\\t\\t\\tthis.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tthis.computeFaceNormals();\\n\\t\\tthis.computeVertexNormals();\\n\\n\\t};\\n\\n\\tTHREE.TubeGeometry.prototype = Object.create( THREE.Geometry.prototype );\\n\\tTHREE.TubeGeometry.prototype.constructor = THREE.TubeGeometry;\\n\\n\\tTHREE.TubeGeometry.NoTaper = function ( u ) {\\n\\n\\t\\treturn 1;\\n\\n\\t};\\n\\n\\tTHREE.TubeGeometry.SinusoidalTaper = function ( u ) {\\n\\n\\t\\treturn Math.sin( Math.PI * u );\\n\\n\\t};\\n\\n\\t// For computing of Frenet frames, exposing the tangents, normals and binormals the spline\\n\\tTHREE.TubeGeometry.FrenetFrames = function ( path, segments, closed ) {\\n\\n\\t\\tvar\\tnormal = new THREE.Vector3(),\\n\\n\\t\\t\\ttangents = [],\\n\\t\\t\\tnormals = [],\\n\\t\\t\\tbinormals = [],\\n\\n\\t\\t\\tvec = new THREE.Vector3(),\\n\\t\\t\\tmat = new THREE.Matrix4(),\\n\\n\\t\\t\\tnumpoints = segments + 1,\\n\\t\\t\\ttheta,\\n\\t\\t\\tsmallest,\\n\\n\\t\\t\\ttx, ty, tz,\\n\\t\\t\\ti, u;\\n\\n\\n\\t\\t// expose internals\\n\\t\\tthis.tangents = tangents;\\n\\t\\tthis.normals = normals;\\n\\t\\tthis.binormals = binormals;\\n\\n\\t\\t// compute the tangent vectors for each segment on the path\\n\\n\\t\\tfor ( i = 0; i < numpoints; i ++ ) {\\n\\n\\t\\t\\tu = i / ( numpoints - 1 );\\n\\n\\t\\t\\ttangents[ i ] = path.getTangentAt( u );\\n\\t\\t\\ttangents[ i ].normalize();\\n\\n\\t\\t}\\n\\n\\t\\tinitialNormal3();\\n\\n\\t\\t/*\\n\\t\\tfunction initialNormal1(lastBinormal) {\\n\\t\\t\\t// fixed start binormal. Has dangers of 0 vectors\\n\\t\\t\\tnormals[ 0 ] = new THREE.Vector3();\\n\\t\\t\\tbinormals[ 0 ] = new THREE.Vector3();\\n\\t\\t\\tif (lastBinormal===undefined) lastBinormal = new THREE.Vector3( 0, 0, 1 );\\n\\t\\t\\tnormals[ 0 ].crossVectors( lastBinormal, tangents[ 0 ] ).normalize();\\n\\t\\t\\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\\n\\t\\t}\\n\\n\\t\\tfunction initialNormal2() {\\n\\n\\t\\t\\t// This uses the Frenet-Serret formula for deriving binormal\\n\\t\\t\\tvar t2 = path.getTangentAt( epsilon );\\n\\n\\t\\t\\tnormals[ 0 ] = new THREE.Vector3().subVectors( t2, tangents[ 0 ] ).normalize();\\n\\t\\t\\tbinormals[ 0 ] = new THREE.Vector3().crossVectors( tangents[ 0 ], normals[ 0 ] );\\n\\n\\t\\t\\tnormals[ 0 ].crossVectors( binormals[ 0 ], tangents[ 0 ] ).normalize(); // last binormal x tangent\\n\\t\\t\\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\\n\\n\\t\\t}\\n\\t\\t*/\\n\\n\\t\\tfunction initialNormal3() {\\n\\n\\t\\t\\t// select an initial normal vector perpendicular to the first tangent vector,\\n\\t\\t\\t// and in the direction of the smallest tangent xyz component\\n\\n\\t\\t\\tnormals[ 0 ] = new THREE.Vector3();\\n\\t\\t\\tbinormals[ 0 ] = new THREE.Vector3();\\n\\t\\t\\tsmallest = Number.MAX_VALUE;\\n\\t\\t\\ttx = Math.abs( tangents[ 0 ].x );\\n\\t\\t\\tty = Math.abs( tangents[ 0 ].y );\\n\\t\\t\\ttz = Math.abs( tangents[ 0 ].z );\\n\\n\\t\\t\\tif ( tx <= smallest ) {\\n\\n\\t\\t\\t\\tsmallest = tx;\\n\\t\\t\\t\\tnormal.set( 1, 0, 0 );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( ty <= smallest ) {\\n\\n\\t\\t\\t\\tsmallest = ty;\\n\\t\\t\\t\\tnormal.set( 0, 1, 0 );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( tz <= smallest ) {\\n\\n\\t\\t\\t\\tnormal.set( 0, 0, 1 );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\\n\\n\\t\\t\\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\\n\\t\\t\\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\\n\\n\\t\\t}\\n\\n\\n\\t\\t// compute the slowly-varying normal and binormal vectors for each segment on the path\\n\\n\\t\\tfor ( i = 1; i < numpoints; i ++ ) {\\n\\n\\t\\t\\tnormals[ i ] = normals[ i - 1 ].clone();\\n\\n\\t\\t\\tbinormals[ i ] = binormals[ i - 1 ].clone();\\n\\n\\t\\t\\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\\n\\n\\t\\t\\tif ( vec.length() > Number.EPSILON ) {\\n\\n\\t\\t\\t\\tvec.normalize();\\n\\n\\t\\t\\t\\ttheta = Math.acos( THREE.Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\\n\\n\\t\\t\\t\\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\\n\\n\\t\\t}\\n\\n\\n\\t\\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\\n\\n\\t\\tif ( closed ) {\\n\\n\\t\\t\\ttheta = Math.acos( THREE.Math.clamp( normals[ 0 ].dot( normals[ numpoints - 1 ] ), - 1, 1 ) );\\n\\t\\t\\ttheta /= ( numpoints - 1 );\\n\\n\\t\\t\\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ numpoints - 1 ] ) ) > 0 ) {\\n\\n\\t\\t\\t\\ttheta = - theta;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tfor ( i = 1; i < numpoints; i ++ ) {\\n\\n\\t\\t\\t\\t// twist a little...\\n\\t\\t\\t\\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\\n\\t\\t\\t\\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\t// File:src/extras/geometries/PolyhedronGeometry.js\\n\\n\\t/**\\n\\t * @author clockworkgeek / https://github.com/clockworkgeek\\n\\t * @author timothypratley / https://github.com/timothypratley\\n\\t * @author WestLangley / http://github.com/WestLangley\\n\\t*/\\n\\n\\tTHREE.PolyhedronGeometry = function ( vertices, indices, radius, detail ) {\\n\\n\\t\\tTHREE.Geometry.call( this );\\n\\n\\t\\tthis.type = 'PolyhedronGeometry';\\n\\n\\t\\tthis.parameters = {\\n\\t\\t\\tvertices: vertices,\\n\\t\\t\\tindices: indices,\\n\\t\\t\\tradius: radius,\\n\\t\\t\\tdetail: detail\\n\\t\\t};\\n\\n\\t\\tradius = radius || 1;\\n\\t\\tdetail = detail || 0;\\n\\n\\t\\tvar that = this;\\n\\n\\t\\tfor ( var i = 0, l = vertices.length; i < l; i += 3 ) {\\n\\n\\t\\t\\tprepare( new THREE.Vector3( vertices[ i ], vertices[ i + 1 ], vertices[ i + 2 ] ) );\\n\\n\\t\\t}\\n\\n\\t\\tvar p = this.vertices;\\n\\n\\t\\tvar faces = [];\\n\\n\\t\\tfor ( var i = 0, j = 0, l = indices.length; i < l; i += 3, j ++ ) {\\n\\n\\t\\t\\tvar v1 = p[ indices[ i ] ];\\n\\t\\t\\tvar v2 = p[ indices[ i + 1 ] ];\\n\\t\\t\\tvar v3 = p[ indices[ i + 2 ] ];\\n\\n\\t\\t\\tfaces[ j ] = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ] );\\n\\n\\t\\t}\\n\\n\\t\\tvar centroid = new THREE.Vector3();\\n\\n\\t\\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\\n\\n\\t\\t\\tsubdivide( faces[ i ], detail );\\n\\n\\t\\t}\\n\\n\\n\\t\\t// Handle case when face straddles the seam\\n\\n\\t\\tfor ( var i = 0, l = this.faceVertexUvs[ 0 ].length; i < l; i ++ ) {\\n\\n\\t\\t\\tvar uvs = this.faceVertexUvs[ 0 ][ i ];\\n\\n\\t\\t\\tvar x0 = uvs[ 0 ].x;\\n\\t\\t\\tvar x1 = uvs[ 1 ].x;\\n\\t\\t\\tvar x2 = uvs[ 2 ].x;\\n\\n\\t\\t\\tvar max = Math.max( x0, x1, x2 );\\n\\t\\t\\tvar min = Math.min( x0, x1, x2 );\\n\\n\\t\\t\\tif ( max > 0.9 && min < 0.1 ) {\\n\\n\\t\\t\\t\\t// 0.9 is somewhat arbitrary\\n\\n\\t\\t\\t\\tif ( x0 < 0.2 ) uvs[ 0 ].x += 1;\\n\\t\\t\\t\\tif ( x1 < 0.2 ) uvs[ 1 ].x += 1;\\n\\t\\t\\t\\tif ( x2 < 0.2 ) uvs[ 2 ].x += 1;\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\n\\t\\t// Apply radius\\n\\n\\t\\tfor ( var i = 0, l = this.vertices.length; i < l; i ++ ) {\\n\\n\\t\\t\\tthis.vertices[ i ].multiplyScalar( radius );\\n\\n\\t\\t}\\n\\n\\n\\t\\t// Merge vertices\\n\\n\\t\\tthis.mergeVertices();\\n\\n\\t\\tthis.computeFaceNormals();\\n\\n\\t\\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\\n\\n\\n\\t\\t// Project vector onto sphere's surface\\n\\n\\t\\tfunction prepare( vector ) {\\n\\n\\t\\t\\tvar vertex = vector.normalize().clone();\\n\\t\\t\\tvertex.index = that.vertices.push( vertex ) - 1;\\n\\n\\t\\t\\t// Texture coords are equivalent to map coords, calculate angle and convert to fraction of a circle.\\n\\n\\t\\t\\tvar u = azimuth( vector ) / 2 / Math.PI + 0.5;\\n\\t\\t\\tvar v = inclination( vector ) / Math.PI + 0.5;\\n\\t\\t\\tvertex.uv = new THREE.Vector2( u, 1 - v );\\n\\n\\t\\t\\treturn vertex;\\n\\n\\t\\t}\\n\\n\\n\\t\\t// Approximate a curved face with recursively sub-divided triangles.\\n\\n\\t\\tfunction make( v1, v2, v3 ) {\\n\\n\\t\\t\\tvar face = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ] );\\n\\t\\t\\tthat.faces.push( face );\\n\\n\\t\\t\\tcentroid.copy( v1 ).add( v2 ).add( v3 ).divideScalar( 3 );\\n\\n\\t\\t\\tvar azi = azimuth( centroid );\\n\\n\\t\\t\\tthat.faceVertexUvs[ 0 ].push( [\\n\\t\\t\\t\\tcorrectUV( v1.uv, v1, azi ),\\n\\t\\t\\t\\tcorrectUV( v2.uv, v2, azi ),\\n\\t\\t\\t\\tcorrectUV( v3.uv, v3, azi )\\n\\t\\t\\t] );\\n\\n\\t\\t}\\n\\n\\n\\t\\t// Analytically subdivide a face to the required detail level.\\n\\n\\t\\tfunction subdivide( face, detail ) {\\n\\n\\t\\t\\tvar cols = Math.pow( 2, detail );\\n\\t\\t\\tvar a = prepare( that.vertices[ face.a ] );\\n\\t\\t\\tvar b = prepare( that.vertices[ face.b ] );\\n\\t\\t\\tvar c = prepare( that.vertices[ face.c ] );\\n\\t\\t\\tvar v = [];\\n\\n\\t\\t\\t// Construct all of the vertices for this subdivision.\\n\\n\\t\\t\\tfor ( var i = 0 ; i <= cols; i ++ ) {\\n\\n\\t\\t\\t\\tv[ i ] = [];\\n\\n\\t\\t\\t\\tvar aj = prepare( a.clone().lerp( c, i / cols ) );\\n\\t\\t\\t\\tvar bj = prepare( b.clone().lerp( c, i / cols ) );\\n\\t\\t\\t\\tvar rows = cols - i;\\n\\n\\t\\t\\t\\tfor ( var j = 0; j <= rows; j ++ ) {\\n\\n\\t\\t\\t\\t\\tif ( j === 0 && i === cols ) {\\n\\n\\t\\t\\t\\t\\t\\tv[ i ][ j ] = aj;\\n\\n\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\tv[ i ][ j ] = prepare( aj.clone().lerp( bj, j / rows ) );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Construct all of the faces.\\n\\n\\t\\t\\tfor ( var i = 0; i < cols ; i ++ ) {\\n\\n\\t\\t\\t\\tfor ( var j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\\n\\n\\t\\t\\t\\t\\tvar k = Math.floor( j / 2 );\\n\\n\\t\\t\\t\\t\\tif ( j % 2 === 0 ) {\\n\\n\\t\\t\\t\\t\\t\\tmake(\\n\\t\\t\\t\\t\\t\\t\\tv[ i ][ k + 1 ],\\n\\t\\t\\t\\t\\t\\t\\tv[ i + 1 ][ k ],\\n\\t\\t\\t\\t\\t\\t\\tv[ i ][ k ]\\n\\t\\t\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\tmake(\\n\\t\\t\\t\\t\\t\\t\\tv[ i ][ k + 1 ],\\n\\t\\t\\t\\t\\t\\t\\tv[ i + 1 ][ k + 1 ],\\n\\t\\t\\t\\t\\t\\t\\tv[ i + 1 ][ k ]\\n\\t\\t\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\n\\t\\t// Angle around the Y axis, counter-clockwise when looking from above.\\n\\n\\t\\tfunction azimuth( vector ) {\\n\\n\\t\\t\\treturn Math.atan2( vector.z, - vector.x );\\n\\n\\t\\t}\\n\\n\\n\\t\\t// Angle above the XZ plane.\\n\\n\\t\\tfunction inclination( vector ) {\\n\\n\\t\\t\\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\\n\\n\\t\\t}\\n\\n\\n\\t\\t// Texture fixing helper. Spheres have some odd behaviours.\\n\\n\\t\\tfunction correctUV( uv, vector, azimuth ) {\\n\\n\\t\\t\\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) uv = new THREE.Vector2( uv.x - 1, uv.y );\\n\\t\\t\\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) uv = new THREE.Vector2( azimuth / 2 / Math.PI + 0.5, uv.y );\\n\\t\\t\\treturn uv.clone();\\n\\n\\t\\t}\\n\\n\\n\\t};\\n\\n\\tTHREE.PolyhedronGeometry.prototype = Object.create( THREE.Geometry.prototype );\\n\\tTHREE.PolyhedronGeometry.prototype.constructor = THREE.PolyhedronGeometry;\\n\\n\\t// File:src/extras/geometries/DodecahedronGeometry.js\\n\\n\\t/**\\n\\t * @author Abe Pazos / https://hamoid.com\\n\\t */\\n\\n\\tTHREE.DodecahedronGeometry = function ( radius, detail ) {\\n\\n\\t\\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\\n\\t\\tvar r = 1 / t;\\n\\n\\t\\tvar vertices = [\\n\\n\\t\\t\\t// (±1, ±1, ±1)\\n\\t\\t\\t- 1, - 1, - 1,    - 1, - 1,  1,\\n\\t\\t\\t- 1,  1, - 1,    - 1,  1,  1,\\n\\t\\t\\t 1, - 1, - 1,     1, - 1,  1,\\n\\t\\t\\t 1,  1, - 1,     1,  1,  1,\\n\\n\\t\\t\\t// (0, ±1/φ, ±φ)\\n\\t\\t\\t 0, - r, - t,     0, - r,  t,\\n\\t\\t\\t 0,  r, - t,     0,  r,  t,\\n\\n\\t\\t\\t// (±1/φ, ±φ, 0)\\n\\t\\t\\t- r, - t,  0,    - r,  t,  0,\\n\\t\\t\\t r, - t,  0,     r,  t,  0,\\n\\n\\t\\t\\t// (±φ, 0, ±1/φ)\\n\\t\\t\\t- t,  0, - r,     t,  0, - r,\\n\\t\\t\\t- t,  0,  r,     t,  0,  r\\n\\t\\t];\\n\\n\\t\\tvar indices = [\\n\\t\\t\\t 3, 11,  7,      3,  7, 15,      3, 15, 13,\\n\\t\\t\\t 7, 19, 17,      7, 17,  6,      7,  6, 15,\\n\\t\\t\\t17,  4,  8,     17,  8, 10,     17, 10,  6,\\n\\t\\t\\t 8,  0, 16,      8, 16,  2,      8,  2, 10,\\n\\t\\t\\t 0, 12,  1,      0,  1, 18,      0, 18, 16,\\n\\t\\t\\t 6, 10,  2,      6,  2, 13,      6, 13, 15,\\n\\t\\t\\t 2, 16, 18,      2, 18,  3,      2,  3, 13,\\n\\t\\t\\t18,  1,  9,     18,  9, 11,     18, 11,  3,\\n\\t\\t\\t 4, 14, 12,      4, 12,  0,      4,  0,  8,\\n\\t\\t\\t11,  9,  5,     11,  5, 19,     11, 19,  7,\\n\\t\\t\\t19,  5, 14,     19, 14,  4,     19,  4, 17,\\n\\t\\t\\t 1, 12, 14,      1, 14,  5,      1,  5,  9\\n\\t\\t];\\n\\n\\t\\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\\n\\n\\t\\tthis.type = 'DodecahedronGeometry';\\n\\n\\t\\tthis.parameters = {\\n\\t\\t\\tradius: radius,\\n\\t\\t\\tdetail: detail\\n\\t\\t};\\n\\n\\t};\\n\\n\\tTHREE.DodecahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\\n\\tTHREE.DodecahedronGeometry.prototype.constructor = THREE.DodecahedronGeometry;\\n\\n\\t// File:src/extras/geometries/IcosahedronGeometry.js\\n\\n\\t/**\\n\\t * @author timothypratley / https://github.com/timothypratley\\n\\t */\\n\\n\\tTHREE.IcosahedronGeometry = function ( radius, detail ) {\\n\\n\\t\\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\\n\\n\\t\\tvar vertices = [\\n\\t\\t\\t- 1,  t,  0,    1,  t,  0,   - 1, - t,  0,    1, - t,  0,\\n\\t\\t\\t 0, - 1,  t,    0,  1,  t,    0, - 1, - t,    0,  1, - t,\\n\\t\\t\\t t,  0, - 1,    t,  0,  1,   - t,  0, - 1,   - t,  0,  1\\n\\t\\t];\\n\\n\\t\\tvar indices = [\\n\\t\\t\\t 0, 11,  5,    0,  5,  1,    0,  1,  7,    0,  7, 10,    0, 10, 11,\\n\\t\\t\\t 1,  5,  9,    5, 11,  4,   11, 10,  2,   10,  7,  6,    7,  1,  8,\\n\\t\\t\\t 3,  9,  4,    3,  4,  2,    3,  2,  6,    3,  6,  8,    3,  8,  9,\\n\\t\\t\\t 4,  9,  5,    2,  4, 11,    6,  2, 10,    8,  6,  7,    9,  8,  1\\n\\t\\t];\\n\\n\\t\\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\\n\\n\\t\\tthis.type = 'IcosahedronGeometry';\\n\\n\\t\\tthis.parameters = {\\n\\t\\t\\tradius: radius,\\n\\t\\t\\tdetail: detail\\n\\t\\t};\\n\\n\\t};\\n\\n\\tTHREE.IcosahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\\n\\tTHREE.IcosahedronGeometry.prototype.constructor = THREE.IcosahedronGeometry;\\n\\n\\t// File:src/extras/geometries/OctahedronGeometry.js\\n\\n\\t/**\\n\\t * @author timothypratley / https://github.com/timothypratley\\n\\t */\\n\\n\\tTHREE.OctahedronGeometry = function ( radius, detail ) {\\n\\n\\t\\tvar vertices = [\\n\\t\\t\\t1, 0, 0,   - 1, 0, 0,    0, 1, 0,    0, - 1, 0,    0, 0, 1,    0, 0, - 1\\n\\t\\t];\\n\\n\\t\\tvar indices = [\\n\\t\\t\\t0, 2, 4,    0, 4, 3,    0, 3, 5,    0, 5, 2,    1, 2, 5,    1, 5, 3,    1, 3, 4,    1, 4, 2\\n\\t\\t];\\n\\n\\t\\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\\n\\n\\t\\tthis.type = 'OctahedronGeometry';\\n\\n\\t\\tthis.parameters = {\\n\\t\\t\\tradius: radius,\\n\\t\\t\\tdetail: detail\\n\\t\\t};\\n\\n\\t};\\n\\n\\tTHREE.OctahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\\n\\tTHREE.OctahedronGeometry.prototype.constructor = THREE.OctahedronGeometry;\\n\\n\\t// File:src/extras/geometries/TetrahedronGeometry.js\\n\\n\\t/**\\n\\t * @author timothypratley / https://github.com/timothypratley\\n\\t */\\n\\n\\tTHREE.TetrahedronGeometry = function ( radius, detail ) {\\n\\n\\t\\tvar vertices = [\\n\\t\\t\\t 1,  1,  1,   - 1, - 1,  1,   - 1,  1, - 1,    1, - 1, - 1\\n\\t\\t];\\n\\n\\t\\tvar indices = [\\n\\t\\t\\t 2,  1,  0,    0,  3,  2,    1,  3,  0,    2,  3,  1\\n\\t\\t];\\n\\n\\t\\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\\n\\n\\t\\tthis.type = 'TetrahedronGeometry';\\n\\n\\t\\tthis.parameters = {\\n\\t\\t\\tradius: radius,\\n\\t\\t\\tdetail: detail\\n\\t\\t};\\n\\n\\t};\\n\\n\\tTHREE.TetrahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\\n\\tTHREE.TetrahedronGeometry.prototype.constructor = THREE.TetrahedronGeometry;\\n\\n\\t// File:src/extras/geometries/ParametricGeometry.js\\n\\n\\t/**\\n\\t * @author zz85 / https://github.com/zz85\\n\\t * Parametric Surfaces Geometry\\n\\t * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\\n\\t *\\n\\t * new THREE.ParametricGeometry( parametricFunction, uSegments, ySegements );\\n\\t *\\n\\t */\\n\\n\\tTHREE.ParametricGeometry = function ( func, slices, stacks ) {\\n\\n\\t\\tTHREE.Geometry.call( this );\\n\\n\\t\\tthis.type = 'ParametricGeometry';\\n\\n\\t\\tthis.parameters = {\\n\\t\\t\\tfunc: func,\\n\\t\\t\\tslices: slices,\\n\\t\\t\\tstacks: stacks\\n\\t\\t};\\n\\n\\t\\tvar verts = this.vertices;\\n\\t\\tvar faces = this.faces;\\n\\t\\tvar uvs = this.faceVertexUvs[ 0 ];\\n\\n\\t\\tvar i, j, p;\\n\\t\\tvar u, v;\\n\\n\\t\\tvar sliceCount = slices + 1;\\n\\n\\t\\tfor ( i = 0; i <= stacks; i ++ ) {\\n\\n\\t\\t\\tv = i / stacks;\\n\\n\\t\\t\\tfor ( j = 0; j <= slices; j ++ ) {\\n\\n\\t\\t\\t\\tu = j / slices;\\n\\n\\t\\t\\t\\tp = func( u, v );\\n\\t\\t\\t\\tverts.push( p );\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tvar a, b, c, d;\\n\\t\\tvar uva, uvb, uvc, uvd;\\n\\n\\t\\tfor ( i = 0; i < stacks; i ++ ) {\\n\\n\\t\\t\\tfor ( j = 0; j < slices; j ++ ) {\\n\\n\\t\\t\\t\\ta = i * sliceCount + j;\\n\\t\\t\\t\\tb = i * sliceCount + j + 1;\\n\\t\\t\\t\\tc = ( i + 1 ) * sliceCount + j + 1;\\n\\t\\t\\t\\td = ( i + 1 ) * sliceCount + j;\\n\\n\\t\\t\\t\\tuva = new THREE.Vector2( j / slices, i / stacks );\\n\\t\\t\\t\\tuvb = new THREE.Vector2( ( j + 1 ) / slices, i / stacks );\\n\\t\\t\\t\\tuvc = new THREE.Vector2( ( j + 1 ) / slices, ( i + 1 ) / stacks );\\n\\t\\t\\t\\tuvd = new THREE.Vector2( j / slices, ( i + 1 ) / stacks );\\n\\n\\t\\t\\t\\tfaces.push( new THREE.Face3( a, b, d ) );\\n\\t\\t\\t\\tuvs.push( [ uva, uvb, uvd ] );\\n\\n\\t\\t\\t\\tfaces.push( new THREE.Face3( b, c, d ) );\\n\\t\\t\\t\\tuvs.push( [ uvb.clone(), uvc, uvd.clone() ] );\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\t// console.log(this);\\n\\n\\t\\t// magic bullet\\n\\t\\t// var diff = this.mergeVertices();\\n\\t\\t// console.log('removed ', diff, ' vertices by merging');\\n\\n\\t\\tthis.computeFaceNormals();\\n\\t\\tthis.computeVertexNormals();\\n\\n\\t};\\n\\n\\tTHREE.ParametricGeometry.prototype = Object.create( THREE.Geometry.prototype );\\n\\tTHREE.ParametricGeometry.prototype.constructor = THREE.ParametricGeometry;\\n\\n\\t// File:src/extras/geometries/WireframeGeometry.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t */\\n\\n\\tTHREE.WireframeGeometry = function ( geometry ) {\\n\\n\\t\\tTHREE.BufferGeometry.call( this );\\n\\n\\t\\tvar edge = [ 0, 0 ], hash = {};\\n\\n\\t\\tfunction sortFunction( a, b ) {\\n\\n\\t\\t\\treturn a - b;\\n\\n\\t\\t}\\n\\n\\t\\tvar keys = [ 'a', 'b', 'c' ];\\n\\n\\t\\tif ( geometry instanceof THREE.Geometry ) {\\n\\n\\t\\t\\tvar vertices = geometry.vertices;\\n\\t\\t\\tvar faces = geometry.faces;\\n\\t\\t\\tvar numEdges = 0;\\n\\n\\t\\t\\t// allocate maximal size\\n\\t\\t\\tvar edges = new Uint32Array( 6 * faces.length );\\n\\n\\t\\t\\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\\n\\n\\t\\t\\t\\tvar face = faces[ i ];\\n\\n\\t\\t\\t\\tfor ( var j = 0; j < 3; j ++ ) {\\n\\n\\t\\t\\t\\t\\tedge[ 0 ] = face[ keys[ j ] ];\\n\\t\\t\\t\\t\\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\\n\\t\\t\\t\\t\\tedge.sort( sortFunction );\\n\\n\\t\\t\\t\\t\\tvar key = edge.toString();\\n\\n\\t\\t\\t\\t\\tif ( hash[ key ] === undefined ) {\\n\\n\\t\\t\\t\\t\\t\\tedges[ 2 * numEdges ] = edge[ 0 ];\\n\\t\\t\\t\\t\\t\\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\\n\\t\\t\\t\\t\\t\\thash[ key ] = true;\\n\\t\\t\\t\\t\\t\\tnumEdges ++;\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar coords = new Float32Array( numEdges * 2 * 3 );\\n\\n\\t\\t\\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\\n\\n\\t\\t\\t\\tfor ( var j = 0; j < 2; j ++ ) {\\n\\n\\t\\t\\t\\t\\tvar vertex = vertices[ edges [ 2 * i + j ] ];\\n\\n\\t\\t\\t\\t\\tvar index = 6 * i + 3 * j;\\n\\t\\t\\t\\t\\tcoords[ index + 0 ] = vertex.x;\\n\\t\\t\\t\\t\\tcoords[ index + 1 ] = vertex.y;\\n\\t\\t\\t\\t\\tcoords[ index + 2 ] = vertex.z;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\\n\\n\\t\\t} else if ( geometry instanceof THREE.BufferGeometry ) {\\n\\n\\t\\t\\tif ( geometry.index !== null ) {\\n\\n\\t\\t\\t\\t// Indexed BufferGeometry\\n\\n\\t\\t\\t\\tvar indices = geometry.index.array;\\n\\t\\t\\t\\tvar vertices = geometry.attributes.position;\\n\\t\\t\\t\\tvar groups = geometry.groups;\\n\\t\\t\\t\\tvar numEdges = 0;\\n\\n\\t\\t\\t\\tif ( groups.length === 0 ) {\\n\\n\\t\\t\\t\\t\\tgeometry.addGroup( 0, indices.length );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// allocate maximal size\\n\\t\\t\\t\\tvar edges = new Uint32Array( 2 * indices.length );\\n\\n\\t\\t\\t\\tfor ( var o = 0, ol = groups.length; o < ol; ++ o ) {\\n\\n\\t\\t\\t\\t\\tvar group = groups[ o ];\\n\\n\\t\\t\\t\\t\\tvar start = group.start;\\n\\t\\t\\t\\t\\tvar count = group.count;\\n\\n\\t\\t\\t\\t\\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\\n\\n\\t\\t\\t\\t\\t\\tfor ( var j = 0; j < 3; j ++ ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tedge[ 0 ] = indices[ i + j ];\\n\\t\\t\\t\\t\\t\\t\\tedge[ 1 ] = indices[ i + ( j + 1 ) % 3 ];\\n\\t\\t\\t\\t\\t\\t\\tedge.sort( sortFunction );\\n\\n\\t\\t\\t\\t\\t\\t\\tvar key = edge.toString();\\n\\n\\t\\t\\t\\t\\t\\t\\tif ( hash[ key ] === undefined ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tedges[ 2 * numEdges ] = edge[ 0 ];\\n\\t\\t\\t\\t\\t\\t\\t\\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\\n\\t\\t\\t\\t\\t\\t\\t\\thash[ key ] = true;\\n\\t\\t\\t\\t\\t\\t\\t\\tnumEdges ++;\\n\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tvar coords = new Float32Array( numEdges * 2 * 3 );\\n\\n\\t\\t\\t\\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\\n\\n\\t\\t\\t\\t\\tfor ( var j = 0; j < 2; j ++ ) {\\n\\n\\t\\t\\t\\t\\t\\tvar index = 6 * i + 3 * j;\\n\\t\\t\\t\\t\\t\\tvar index2 = edges[ 2 * i + j ];\\n\\n\\t\\t\\t\\t\\t\\tcoords[ index + 0 ] = vertices.getX( index2 );\\n\\t\\t\\t\\t\\t\\tcoords[ index + 1 ] = vertices.getY( index2 );\\n\\t\\t\\t\\t\\t\\tcoords[ index + 2 ] = vertices.getZ( index2 );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t// non-indexed BufferGeometry\\n\\n\\t\\t\\t\\tvar vertices = geometry.attributes.position.array;\\n\\t\\t\\t\\tvar numEdges = vertices.length / 3;\\n\\t\\t\\t\\tvar numTris = numEdges / 3;\\n\\n\\t\\t\\t\\tvar coords = new Float32Array( numEdges * 2 * 3 );\\n\\n\\t\\t\\t\\tfor ( var i = 0, l = numTris; i < l; i ++ ) {\\n\\n\\t\\t\\t\\t\\tfor ( var j = 0; j < 3; j ++ ) {\\n\\n\\t\\t\\t\\t\\t\\tvar index = 18 * i + 6 * j;\\n\\n\\t\\t\\t\\t\\t\\tvar index1 = 9 * i + 3 * j;\\n\\t\\t\\t\\t\\t\\tcoords[ index + 0 ] = vertices[ index1 ];\\n\\t\\t\\t\\t\\t\\tcoords[ index + 1 ] = vertices[ index1 + 1 ];\\n\\t\\t\\t\\t\\t\\tcoords[ index + 2 ] = vertices[ index1 + 2 ];\\n\\n\\t\\t\\t\\t\\t\\tvar index2 = 9 * i + 3 * ( ( j + 1 ) % 3 );\\n\\t\\t\\t\\t\\t\\tcoords[ index + 3 ] = vertices[ index2 ];\\n\\t\\t\\t\\t\\t\\tcoords[ index + 4 ] = vertices[ index2 + 1 ];\\n\\t\\t\\t\\t\\t\\tcoords[ index + 5 ] = vertices[ index2 + 2 ];\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\tTHREE.WireframeGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\\n\\tTHREE.WireframeGeometry.prototype.constructor = THREE.WireframeGeometry;\\n\\n\\t// File:src/extras/helpers/AxisHelper.js\\n\\n\\t/**\\n\\t * @author sroucheray / http://sroucheray.org/\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t */\\n\\n\\tTHREE.AxisHelper = function ( size ) {\\n\\n\\t\\tsize = size || 1;\\n\\n\\t\\tvar vertices = new Float32Array( [\\n\\t\\t\\t0, 0, 0,  size, 0, 0,\\n\\t\\t\\t0, 0, 0,  0, size, 0,\\n\\t\\t\\t0, 0, 0,  0, 0, size\\n\\t\\t] );\\n\\n\\t\\tvar colors = new Float32Array( [\\n\\t\\t\\t1, 0, 0,  1, 0.6, 0,\\n\\t\\t\\t0, 1, 0,  0.6, 1, 0,\\n\\t\\t\\t0, 0, 1,  0, 0.6, 1\\n\\t\\t] );\\n\\n\\t\\tvar geometry = new THREE.BufferGeometry();\\n\\t\\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\\n\\t\\tgeometry.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ) );\\n\\n\\t\\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors } );\\n\\n\\t\\tTHREE.LineSegments.call( this, geometry, material );\\n\\n\\t};\\n\\n\\tTHREE.AxisHelper.prototype = Object.create( THREE.LineSegments.prototype );\\n\\tTHREE.AxisHelper.prototype.constructor = THREE.AxisHelper;\\n\\n\\t// File:src/extras/helpers/ArrowHelper.js\\n\\n\\t/**\\n\\t * @author WestLangley / http://github.com/WestLangley\\n\\t * @author zz85 / http://github.com/zz85\\n\\t * @author bhouston / http://clara.io\\n\\t *\\n\\t * Creates an arrow for visualizing directions\\n\\t *\\n\\t * Parameters:\\n\\t *  dir - Vector3\\n\\t *  origin - Vector3\\n\\t *  length - Number\\n\\t *  color - color in hex value\\n\\t *  headLength - Number\\n\\t *  headWidth - Number\\n\\t */\\n\\n\\tTHREE.ArrowHelper = ( function () {\\n\\n\\t\\tvar lineGeometry = new THREE.BufferGeometry();\\n\\t\\tlineGeometry.addAttribute( 'position', new THREE.Float32Attribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\\n\\n\\t\\tvar coneGeometry = new THREE.CylinderBufferGeometry( 0, 0.5, 1, 5, 1 );\\n\\t\\tconeGeometry.translate( 0, - 0.5, 0 );\\n\\n\\t\\treturn function ArrowHelper( dir, origin, length, color, headLength, headWidth ) {\\n\\n\\t\\t\\t// dir is assumed to be normalized\\n\\n\\t\\t\\tTHREE.Object3D.call( this );\\n\\n\\t\\t\\tif ( color === undefined ) color = 0xffff00;\\n\\t\\t\\tif ( length === undefined ) length = 1;\\n\\t\\t\\tif ( headLength === undefined ) headLength = 0.2 * length;\\n\\t\\t\\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\\n\\n\\t\\t\\tthis.position.copy( origin );\\n\\n\\t\\t\\tthis.line = new THREE.Line( lineGeometry, new THREE.LineBasicMaterial( { color: color } ) );\\n\\t\\t\\tthis.line.matrixAutoUpdate = false;\\n\\t\\t\\tthis.add( this.line );\\n\\n\\t\\t\\tthis.cone = new THREE.Mesh( coneGeometry, new THREE.MeshBasicMaterial( { color: color } ) );\\n\\t\\t\\tthis.cone.matrixAutoUpdate = false;\\n\\t\\t\\tthis.add( this.cone );\\n\\n\\t\\t\\tthis.setDirection( dir );\\n\\t\\t\\tthis.setLength( length, headLength, headWidth );\\n\\n\\t\\t};\\n\\n\\t}() );\\n\\n\\tTHREE.ArrowHelper.prototype = Object.create( THREE.Object3D.prototype );\\n\\tTHREE.ArrowHelper.prototype.constructor = THREE.ArrowHelper;\\n\\n\\tTHREE.ArrowHelper.prototype.setDirection = ( function () {\\n\\n\\t\\tvar axis = new THREE.Vector3();\\n\\t\\tvar radians;\\n\\n\\t\\treturn function setDirection( dir ) {\\n\\n\\t\\t\\t// dir is assumed to be normalized\\n\\n\\t\\t\\tif ( dir.y > 0.99999 ) {\\n\\n\\t\\t\\t\\tthis.quaternion.set( 0, 0, 0, 1 );\\n\\n\\t\\t\\t} else if ( dir.y < - 0.99999 ) {\\n\\n\\t\\t\\t\\tthis.quaternion.set( 1, 0, 0, 0 );\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\taxis.set( dir.z, 0, - dir.x ).normalize();\\n\\n\\t\\t\\t\\tradians = Math.acos( dir.y );\\n\\n\\t\\t\\t\\tthis.quaternion.setFromAxisAngle( axis, radians );\\n\\n\\t\\t\\t}\\n\\n\\t\\t};\\n\\n\\t}() );\\n\\n\\tTHREE.ArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\\n\\n\\t\\tif ( headLength === undefined ) headLength = 0.2 * length;\\n\\t\\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\\n\\n\\t\\tthis.line.scale.set( 1, Math.max( 0, length - headLength ), 1 );\\n\\t\\tthis.line.updateMatrix();\\n\\n\\t\\tthis.cone.scale.set( headWidth, headLength, headWidth );\\n\\t\\tthis.cone.position.y = length;\\n\\t\\tthis.cone.updateMatrix();\\n\\n\\t};\\n\\n\\tTHREE.ArrowHelper.prototype.setColor = function ( color ) {\\n\\n\\t\\tthis.line.material.color.copy( color );\\n\\t\\tthis.cone.material.color.copy( color );\\n\\n\\t};\\n\\n\\t// File:src/extras/helpers/BoxHelper.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t */\\n\\n\\tTHREE.BoxHelper = function ( object, color ) {\\n\\n\\t\\tif ( color === undefined ) color = 0xffff00;\\n\\n\\t\\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\\n\\t\\tvar positions = new Float32Array( 8 * 3 );\\n\\n\\t\\tvar geometry = new THREE.BufferGeometry();\\n\\t\\tgeometry.setIndex( new THREE.BufferAttribute( indices, 1 ) );\\n\\t\\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\\n\\n\\t\\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: color } ) );\\n\\n\\t\\tif ( object !== undefined ) {\\n\\n\\t\\t\\tthis.update( object );\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\tTHREE.BoxHelper.prototype = Object.create( THREE.LineSegments.prototype );\\n\\tTHREE.BoxHelper.prototype.constructor = THREE.BoxHelper;\\n\\n\\tTHREE.BoxHelper.prototype.update = ( function () {\\n\\n\\t\\tvar box = new THREE.Box3();\\n\\n\\t\\treturn function update( object ) {\\n\\n\\t\\t\\tif ( object instanceof THREE.Box3 ) {\\n\\n\\t\\t\\t\\tbox.copy( object );\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\tbox.setFromObject( object );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( box.isEmpty() ) return;\\n\\n\\t\\t\\tvar min = box.min;\\n\\t\\t\\tvar max = box.max;\\n\\n\\t\\t\\t/*\\n\\t\\t\\t  5____4\\n\\t\\t\\t1/___0/|\\n\\t\\t\\t| 6__|_7\\n\\t\\t\\t2/___3/\\n\\n\\t\\t\\t0: max.x, max.y, max.z\\n\\t\\t\\t1: min.x, max.y, max.z\\n\\t\\t\\t2: min.x, min.y, max.z\\n\\t\\t\\t3: max.x, min.y, max.z\\n\\t\\t\\t4: max.x, max.y, min.z\\n\\t\\t\\t5: min.x, max.y, min.z\\n\\t\\t\\t6: min.x, min.y, min.z\\n\\t\\t\\t7: max.x, min.y, min.z\\n\\t\\t\\t*/\\n\\n\\t\\t\\tvar position = this.geometry.attributes.position;\\n\\t\\t\\tvar array = position.array;\\n\\n\\t\\t\\tarray[  0 ] = max.x; array[  1 ] = max.y; array[  2 ] = max.z;\\n\\t\\t\\tarray[  3 ] = min.x; array[  4 ] = max.y; array[  5 ] = max.z;\\n\\t\\t\\tarray[  6 ] = min.x; array[  7 ] = min.y; array[  8 ] = max.z;\\n\\t\\t\\tarray[  9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\\n\\t\\t\\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\\n\\t\\t\\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\\n\\t\\t\\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\\n\\t\\t\\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\\n\\n\\t\\t\\tposition.needsUpdate = true;\\n\\n\\t\\t\\tthis.geometry.computeBoundingSphere();\\n\\n\\t\\t};\\n\\n\\t} )();\\n\\n\\t// File:src/extras/helpers/BoundingBoxHelper.js\\n\\n\\t/**\\n\\t * @author WestLangley / http://github.com/WestLangley\\n\\t */\\n\\n\\t// a helper to show the world-axis-aligned bounding box for an object\\n\\n\\tTHREE.BoundingBoxHelper = function ( object, hex ) {\\n\\n\\t\\tvar color = ( hex !== undefined ) ? hex : 0x888888;\\n\\n\\t\\tthis.object = object;\\n\\n\\t\\tthis.box = new THREE.Box3();\\n\\n\\t\\tTHREE.Mesh.call( this, new THREE.BoxGeometry( 1, 1, 1 ), new THREE.MeshBasicMaterial( { color: color, wireframe: true } ) );\\n\\n\\t};\\n\\n\\tTHREE.BoundingBoxHelper.prototype = Object.create( THREE.Mesh.prototype );\\n\\tTHREE.BoundingBoxHelper.prototype.constructor = THREE.BoundingBoxHelper;\\n\\n\\tTHREE.BoundingBoxHelper.prototype.update = function () {\\n\\n\\t\\tthis.box.setFromObject( this.object );\\n\\n\\t\\tthis.box.size( this.scale );\\n\\n\\t\\tthis.box.center( this.position );\\n\\n\\t};\\n\\n\\t// File:src/extras/helpers/CameraHelper.js\\n\\n\\t/**\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t *\\n\\t *\\t- shows frustum, line of sight and up of the camera\\n\\t *\\t- suitable for fast updates\\n\\t * \\t- based on frustum visualization in lightgl.js shadowmap example\\n\\t *\\t\\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\\n\\t */\\n\\n\\tTHREE.CameraHelper = function ( camera ) {\\n\\n\\t\\tvar geometry = new THREE.Geometry();\\n\\t\\tvar material = new THREE.LineBasicMaterial( { color: 0xffffff, vertexColors: THREE.FaceColors } );\\n\\n\\t\\tvar pointMap = {};\\n\\n\\t\\t// colors\\n\\n\\t\\tvar hexFrustum = 0xffaa00;\\n\\t\\tvar hexCone = 0xff0000;\\n\\t\\tvar hexUp = 0x00aaff;\\n\\t\\tvar hexTarget = 0xffffff;\\n\\t\\tvar hexCross = 0x333333;\\n\\n\\t\\t// near\\n\\n\\t\\taddLine( \\\"n1\\\", \\\"n2\\\", hexFrustum );\\n\\t\\taddLine( \\\"n2\\\", \\\"n4\\\", hexFrustum );\\n\\t\\taddLine( \\\"n4\\\", \\\"n3\\\", hexFrustum );\\n\\t\\taddLine( \\\"n3\\\", \\\"n1\\\", hexFrustum );\\n\\n\\t\\t// far\\n\\n\\t\\taddLine( \\\"f1\\\", \\\"f2\\\", hexFrustum );\\n\\t\\taddLine( \\\"f2\\\", \\\"f4\\\", hexFrustum );\\n\\t\\taddLine( \\\"f4\\\", \\\"f3\\\", hexFrustum );\\n\\t\\taddLine( \\\"f3\\\", \\\"f1\\\", hexFrustum );\\n\\n\\t\\t// sides\\n\\n\\t\\taddLine( \\\"n1\\\", \\\"f1\\\", hexFrustum );\\n\\t\\taddLine( \\\"n2\\\", \\\"f2\\\", hexFrustum );\\n\\t\\taddLine( \\\"n3\\\", \\\"f3\\\", hexFrustum );\\n\\t\\taddLine( \\\"n4\\\", \\\"f4\\\", hexFrustum );\\n\\n\\t\\t// cone\\n\\n\\t\\taddLine( \\\"p\\\", \\\"n1\\\", hexCone );\\n\\t\\taddLine( \\\"p\\\", \\\"n2\\\", hexCone );\\n\\t\\taddLine( \\\"p\\\", \\\"n3\\\", hexCone );\\n\\t\\taddLine( \\\"p\\\", \\\"n4\\\", hexCone );\\n\\n\\t\\t// up\\n\\n\\t\\taddLine( \\\"u1\\\", \\\"u2\\\", hexUp );\\n\\t\\taddLine( \\\"u2\\\", \\\"u3\\\", hexUp );\\n\\t\\taddLine( \\\"u3\\\", \\\"u1\\\", hexUp );\\n\\n\\t\\t// target\\n\\n\\t\\taddLine( \\\"c\\\", \\\"t\\\", hexTarget );\\n\\t\\taddLine( \\\"p\\\", \\\"c\\\", hexCross );\\n\\n\\t\\t// cross\\n\\n\\t\\taddLine( \\\"cn1\\\", \\\"cn2\\\", hexCross );\\n\\t\\taddLine( \\\"cn3\\\", \\\"cn4\\\", hexCross );\\n\\n\\t\\taddLine( \\\"cf1\\\", \\\"cf2\\\", hexCross );\\n\\t\\taddLine( \\\"cf3\\\", \\\"cf4\\\", hexCross );\\n\\n\\t\\tfunction addLine( a, b, hex ) {\\n\\n\\t\\t\\taddPoint( a, hex );\\n\\t\\t\\taddPoint( b, hex );\\n\\n\\t\\t}\\n\\n\\t\\tfunction addPoint( id, hex ) {\\n\\n\\t\\t\\tgeometry.vertices.push( new THREE.Vector3() );\\n\\t\\t\\tgeometry.colors.push( new THREE.Color( hex ) );\\n\\n\\t\\t\\tif ( pointMap[ id ] === undefined ) {\\n\\n\\t\\t\\t\\tpointMap[ id ] = [];\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tpointMap[ id ].push( geometry.vertices.length - 1 );\\n\\n\\t\\t}\\n\\n\\t\\tTHREE.LineSegments.call( this, geometry, material );\\n\\n\\t\\tthis.camera = camera;\\n\\t\\tif( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\\n\\n\\t\\tthis.matrix = camera.matrixWorld;\\n\\t\\tthis.matrixAutoUpdate = false;\\n\\n\\t\\tthis.pointMap = pointMap;\\n\\n\\t\\tthis.update();\\n\\n\\t};\\n\\n\\tTHREE.CameraHelper.prototype = Object.create( THREE.LineSegments.prototype );\\n\\tTHREE.CameraHelper.prototype.constructor = THREE.CameraHelper;\\n\\n\\tTHREE.CameraHelper.prototype.update = function () {\\n\\n\\t\\tvar geometry, pointMap;\\n\\n\\t\\tvar vector = new THREE.Vector3();\\n\\t\\tvar camera = new THREE.Camera();\\n\\n\\t\\tfunction setPoint( point, x, y, z ) {\\n\\n\\t\\t\\tvector.set( x, y, z ).unproject( camera );\\n\\n\\t\\t\\tvar points = pointMap[ point ];\\n\\n\\t\\t\\tif ( points !== undefined ) {\\n\\n\\t\\t\\t\\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\\n\\n\\t\\t\\t\\t\\tgeometry.vertices[ points[ i ] ].copy( vector );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\treturn function update() {\\n\\n\\t\\t\\tgeometry = this.geometry;\\n\\t\\t\\tpointMap = this.pointMap;\\n\\n\\t\\t\\tvar w = 1, h = 1;\\n\\n\\t\\t\\t// we need just camera projection matrix\\n\\t\\t\\t// world matrix must be identity\\n\\n\\t\\t\\tcamera.projectionMatrix.copy( this.camera.projectionMatrix );\\n\\n\\t\\t\\t// center / target\\n\\n\\t\\t\\tsetPoint( \\\"c\\\", 0, 0, - 1 );\\n\\t\\t\\tsetPoint( \\\"t\\\", 0, 0,  1 );\\n\\n\\t\\t\\t// near\\n\\n\\t\\t\\tsetPoint( \\\"n1\\\", - w, - h, - 1 );\\n\\t\\t\\tsetPoint( \\\"n2\\\",   w, - h, - 1 );\\n\\t\\t\\tsetPoint( \\\"n3\\\", - w,   h, - 1 );\\n\\t\\t\\tsetPoint( \\\"n4\\\",   w,   h, - 1 );\\n\\n\\t\\t\\t// far\\n\\n\\t\\t\\tsetPoint( \\\"f1\\\", - w, - h, 1 );\\n\\t\\t\\tsetPoint( \\\"f2\\\",   w, - h, 1 );\\n\\t\\t\\tsetPoint( \\\"f3\\\", - w,   h, 1 );\\n\\t\\t\\tsetPoint( \\\"f4\\\",   w,   h, 1 );\\n\\n\\t\\t\\t// up\\n\\n\\t\\t\\tsetPoint( \\\"u1\\\",   w * 0.7, h * 1.1, - 1 );\\n\\t\\t\\tsetPoint( \\\"u2\\\", - w * 0.7, h * 1.1, - 1 );\\n\\t\\t\\tsetPoint( \\\"u3\\\",         0, h * 2,   - 1 );\\n\\n\\t\\t\\t// cross\\n\\n\\t\\t\\tsetPoint( \\\"cf1\\\", - w,   0, 1 );\\n\\t\\t\\tsetPoint( \\\"cf2\\\",   w,   0, 1 );\\n\\t\\t\\tsetPoint( \\\"cf3\\\",   0, - h, 1 );\\n\\t\\t\\tsetPoint( \\\"cf4\\\",   0,   h, 1 );\\n\\n\\t\\t\\tsetPoint( \\\"cn1\\\", - w,   0, - 1 );\\n\\t\\t\\tsetPoint( \\\"cn2\\\",   w,   0, - 1 );\\n\\t\\t\\tsetPoint( \\\"cn3\\\",   0, - h, - 1 );\\n\\t\\t\\tsetPoint( \\\"cn4\\\",   0,   h, - 1 );\\n\\n\\t\\t\\tgeometry.verticesNeedUpdate = true;\\n\\n\\t\\t};\\n\\n\\t}();\\n\\n\\t// File:src/extras/helpers/DirectionalLightHelper.js\\n\\n\\t/**\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t * @author WestLangley / http://github.com/WestLangley\\n\\t */\\n\\n\\tTHREE.DirectionalLightHelper = function ( light, size ) {\\n\\n\\t\\tTHREE.Object3D.call( this );\\n\\n\\t\\tthis.light = light;\\n\\t\\tthis.light.updateMatrixWorld();\\n\\n\\t\\tthis.matrix = light.matrixWorld;\\n\\t\\tthis.matrixAutoUpdate = false;\\n\\n\\t\\tif ( size === undefined ) size = 1;\\n\\n\\t\\tvar geometry = new THREE.BufferGeometry();\\n\\t\\tgeometry.addAttribute( 'position', new THREE.Float32Attribute( [\\n\\t\\t\\t- size,   size, 0,\\n\\t\\t\\t  size,   size, 0,\\n\\t\\t\\t  size, - size, 0,\\n\\t\\t\\t- size, - size, 0,\\n\\t\\t\\t- size,   size, 0\\n\\t\\t], 3 ) );\\n\\n\\t\\tvar material = new THREE.LineBasicMaterial( { fog: false } );\\n\\n\\t\\tthis.add( new THREE.Line( geometry, material ) );\\n\\n\\t\\tgeometry = new THREE.BufferGeometry();\\n\\t\\tgeometry.addAttribute( 'position', new THREE.Float32Attribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\\n\\n\\t\\tthis.add( new THREE.Line( geometry, material ));\\n\\n\\t\\tthis.update();\\n\\n\\t};\\n\\n\\tTHREE.DirectionalLightHelper.prototype = Object.create( THREE.Object3D.prototype );\\n\\tTHREE.DirectionalLightHelper.prototype.constructor = THREE.DirectionalLightHelper;\\n\\n\\tTHREE.DirectionalLightHelper.prototype.dispose = function () {\\n\\n\\t\\tvar lightPlane = this.children[ 0 ];\\n\\t\\tvar targetLine = this.children[ 1 ];\\n\\n\\t\\tlightPlane.geometry.dispose();\\n\\t\\tlightPlane.material.dispose();\\n\\t\\ttargetLine.geometry.dispose();\\n\\t\\ttargetLine.material.dispose();\\n\\n\\t};\\n\\n\\tTHREE.DirectionalLightHelper.prototype.update = function () {\\n\\n\\t\\tvar v1 = new THREE.Vector3();\\n\\t\\tvar v2 = new THREE.Vector3();\\n\\t\\tvar v3 = new THREE.Vector3();\\n\\n\\t\\treturn function update() {\\n\\n\\t\\t\\tv1.setFromMatrixPosition( this.light.matrixWorld );\\n\\t\\t\\tv2.setFromMatrixPosition( this.light.target.matrixWorld );\\n\\t\\t\\tv3.subVectors( v2, v1 );\\n\\n\\t\\t\\tvar lightPlane = this.children[ 0 ];\\n\\t\\t\\tvar targetLine = this.children[ 1 ];\\n\\n\\t\\t\\tlightPlane.lookAt( v3 );\\n\\t\\t\\tlightPlane.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\\n\\n\\t\\t\\ttargetLine.lookAt( v3 );\\n\\t\\t\\ttargetLine.scale.z = v3.length();\\n\\n\\t\\t};\\n\\n\\t}();\\n\\n\\t// File:src/extras/helpers/EdgesHelper.js\\n\\n\\t/**\\n\\t * @author WestLangley / http://github.com/WestLangley\\n\\t * @param object THREE.Mesh whose geometry will be used\\n\\t * @param hex line color\\n\\t * @param thresholdAngle the minimum angle (in degrees),\\n\\t * between the face normals of adjacent faces,\\n\\t * that is required to render an edge. A value of 10 means\\n\\t * an edge is only rendered if the angle is at least 10 degrees.\\n\\t */\\n\\n\\tTHREE.EdgesHelper = function ( object, hex, thresholdAngle ) {\\n\\n\\t\\tvar color = ( hex !== undefined ) ? hex : 0xffffff;\\n\\n\\t\\tTHREE.LineSegments.call( this, new THREE.EdgesGeometry( object.geometry, thresholdAngle ), new THREE.LineBasicMaterial( { color: color } ) );\\n\\n\\t\\tthis.matrix = object.matrixWorld;\\n\\t\\tthis.matrixAutoUpdate = false;\\n\\n\\t};\\n\\n\\tTHREE.EdgesHelper.prototype = Object.create( THREE.LineSegments.prototype );\\n\\tTHREE.EdgesHelper.prototype.constructor = THREE.EdgesHelper;\\n\\n\\t// File:src/extras/helpers/FaceNormalsHelper.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t * @author WestLangley / http://github.com/WestLangley\\n\\t*/\\n\\n\\tTHREE.FaceNormalsHelper = function ( object, size, hex, linewidth ) {\\n\\n\\t\\t// FaceNormalsHelper only supports THREE.Geometry\\n\\n\\t\\tthis.object = object;\\n\\n\\t\\tthis.size = ( size !== undefined ) ? size : 1;\\n\\n\\t\\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\\n\\n\\t\\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\\n\\n\\t\\t//\\n\\n\\t\\tvar nNormals = 0;\\n\\n\\t\\tvar objGeometry = this.object.geometry;\\n\\n\\t\\tif ( objGeometry instanceof THREE.Geometry ) {\\n\\n\\t\\t\\tnNormals = objGeometry.faces.length;\\n\\n\\t\\t} else {\\n\\n\\t\\t\\tconsole.warn( 'THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.' );\\n\\n\\t\\t}\\n\\n\\t\\t//\\n\\n\\t\\tvar geometry = new THREE.BufferGeometry();\\n\\n\\t\\tvar positions = new THREE.Float32Attribute( nNormals * 2 * 3, 3 );\\n\\n\\t\\tgeometry.addAttribute( 'position', positions );\\n\\n\\t\\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ) );\\n\\n\\t\\t//\\n\\n\\t\\tthis.matrixAutoUpdate = false;\\n\\t\\tthis.update();\\n\\n\\t};\\n\\n\\tTHREE.FaceNormalsHelper.prototype = Object.create( THREE.LineSegments.prototype );\\n\\tTHREE.FaceNormalsHelper.prototype.constructor = THREE.FaceNormalsHelper;\\n\\n\\tTHREE.FaceNormalsHelper.prototype.update = ( function () {\\n\\n\\t\\tvar v1 = new THREE.Vector3();\\n\\t\\tvar v2 = new THREE.Vector3();\\n\\t\\tvar normalMatrix = new THREE.Matrix3();\\n\\n\\t\\treturn function update() {\\n\\n\\t\\t\\tthis.object.updateMatrixWorld( true );\\n\\n\\t\\t\\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\\n\\n\\t\\t\\tvar matrixWorld = this.object.matrixWorld;\\n\\n\\t\\t\\tvar position = this.geometry.attributes.position;\\n\\n\\t\\t\\t//\\n\\n\\t\\t\\tvar objGeometry = this.object.geometry;\\n\\n\\t\\t\\tvar vertices = objGeometry.vertices;\\n\\n\\t\\t\\tvar faces = objGeometry.faces;\\n\\n\\t\\t\\tvar idx = 0;\\n\\n\\t\\t\\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\\n\\n\\t\\t\\t\\tvar face = faces[ i ];\\n\\n\\t\\t\\t\\tvar normal = face.normal;\\n\\n\\t\\t\\t\\tv1.copy( vertices[ face.a ] )\\n\\t\\t\\t\\t\\t.add( vertices[ face.b ] )\\n\\t\\t\\t\\t\\t.add( vertices[ face.c ] )\\n\\t\\t\\t\\t\\t.divideScalar( 3 )\\n\\t\\t\\t\\t\\t.applyMatrix4( matrixWorld );\\n\\n\\t\\t\\t\\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\\n\\n\\t\\t\\t\\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\\n\\n\\t\\t\\t\\tidx = idx + 1;\\n\\n\\t\\t\\t\\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\\n\\n\\t\\t\\t\\tidx = idx + 1;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tposition.needsUpdate = true;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t};\\n\\n\\t}() );\\n\\n\\t// File:src/extras/helpers/GridHelper.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t */\\n\\n\\tTHREE.GridHelper = function ( size, divisions, color1, color2 ) {\\n\\n\\t\\tdivisions = divisions || 1;\\n\\t\\tcolor1 = new THREE.Color( color1 !== undefined ? color1 : 0x444444 );\\n\\t\\tcolor2 = new THREE.Color( color2 !== undefined ? color2 : 0x888888 );\\n\\n\\t\\tvar center = divisions / 2;\\n\\t\\tvar step = ( size * 2 ) / divisions;\\n\\t\\tvar vertices = [], colors = [];\\n\\n\\t\\tfor ( var i = 0, j = 0, k = - size; i <= divisions; i ++, k += step ) {\\n\\n\\t\\t\\tvertices.push( - size, 0, k, size, 0, k );\\n\\t\\t\\tvertices.push( k, 0, - size, k, 0, size );\\n\\n\\t\\t\\tvar color = i === center ? color1 : color2;\\n\\n\\t\\t\\tcolor.toArray( colors, j ); j += 3;\\n\\t\\t\\tcolor.toArray( colors, j ); j += 3;\\n\\t\\t\\tcolor.toArray( colors, j ); j += 3;\\n\\t\\t\\tcolor.toArray( colors, j ); j += 3;\\n\\n\\t\\t}\\n\\n\\t\\tvar geometry = new THREE.BufferGeometry();\\n\\t\\tgeometry.addAttribute( 'position', new THREE.Float32Attribute( vertices, 3 ) );\\n\\t\\tgeometry.addAttribute( 'color', new THREE.Float32Attribute( colors, 3 ) );\\n\\n\\t\\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors } );\\n\\n\\t\\tTHREE.LineSegments.call( this, geometry, material );\\n\\n\\t};\\n\\n\\tTHREE.GridHelper.prototype = Object.create( THREE.LineSegments.prototype );\\n\\tTHREE.GridHelper.prototype.constructor = THREE.GridHelper;\\n\\n\\tTHREE.GridHelper.prototype.setColors = function () {\\n\\n\\t\\tconsole.error( 'THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.' );\\n\\n\\t};\\n\\n\\t// File:src/extras/helpers/HemisphereLightHelper.js\\n\\n\\t/**\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t */\\n\\n\\tTHREE.HemisphereLightHelper = function ( light, sphereSize ) {\\n\\n\\t\\tTHREE.Object3D.call( this );\\n\\n\\t\\tthis.light = light;\\n\\t\\tthis.light.updateMatrixWorld();\\n\\n\\t\\tthis.matrix = light.matrixWorld;\\n\\t\\tthis.matrixAutoUpdate = false;\\n\\n\\t\\tthis.colors = [ new THREE.Color(), new THREE.Color() ];\\n\\n\\t\\tvar geometry = new THREE.SphereGeometry( sphereSize, 4, 2 );\\n\\t\\tgeometry.rotateX( - Math.PI / 2 );\\n\\n\\t\\tfor ( var i = 0, il = 8; i < il; i ++ ) {\\n\\n\\t\\t\\tgeometry.faces[ i ].color = this.colors[ i < 4 ? 0 : 1 ];\\n\\n\\t\\t}\\n\\n\\t\\tvar material = new THREE.MeshBasicMaterial( { vertexColors: THREE.FaceColors, wireframe: true } );\\n\\n\\t\\tthis.lightSphere = new THREE.Mesh( geometry, material );\\n\\t\\tthis.add( this.lightSphere );\\n\\n\\t\\tthis.update();\\n\\n\\t};\\n\\n\\tTHREE.HemisphereLightHelper.prototype = Object.create( THREE.Object3D.prototype );\\n\\tTHREE.HemisphereLightHelper.prototype.constructor = THREE.HemisphereLightHelper;\\n\\n\\tTHREE.HemisphereLightHelper.prototype.dispose = function () {\\n\\n\\t\\tthis.lightSphere.geometry.dispose();\\n\\t\\tthis.lightSphere.material.dispose();\\n\\n\\t};\\n\\n\\tTHREE.HemisphereLightHelper.prototype.update = function () {\\n\\n\\t\\tvar vector = new THREE.Vector3();\\n\\n\\t\\treturn function update() {\\n\\n\\t\\t\\tthis.colors[ 0 ].copy( this.light.color ).multiplyScalar( this.light.intensity );\\n\\t\\t\\tthis.colors[ 1 ].copy( this.light.groundColor ).multiplyScalar( this.light.intensity );\\n\\n\\t\\t\\tthis.lightSphere.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );\\n\\t\\t\\tthis.lightSphere.geometry.colorsNeedUpdate = true;\\n\\n\\t\\t};\\n\\n\\t}();\\n\\n\\t// File:src/extras/helpers/PointLightHelper.js\\n\\n\\t/**\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t */\\n\\n\\tTHREE.PointLightHelper = function ( light, sphereSize ) {\\n\\n\\t\\tthis.light = light;\\n\\t\\tthis.light.updateMatrixWorld();\\n\\n\\t\\tvar geometry = new THREE.SphereBufferGeometry( sphereSize, 4, 2 );\\n\\t\\tvar material = new THREE.MeshBasicMaterial( { wireframe: true, fog: false } );\\n\\t\\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\\n\\n\\t\\tTHREE.Mesh.call( this, geometry, material );\\n\\n\\t\\tthis.matrix = this.light.matrixWorld;\\n\\t\\tthis.matrixAutoUpdate = false;\\n\\n\\t\\t/*\\n\\t\\tvar distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\\n\\t\\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\\n\\n\\t\\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\\n\\t\\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\\n\\n\\t\\tvar d = light.distance;\\n\\n\\t\\tif ( d === 0.0 ) {\\n\\n\\t\\t\\tthis.lightDistance.visible = false;\\n\\n\\t\\t} else {\\n\\n\\t\\t\\tthis.lightDistance.scale.set( d, d, d );\\n\\n\\t\\t}\\n\\n\\t\\tthis.add( this.lightDistance );\\n\\t\\t*/\\n\\n\\t};\\n\\n\\tTHREE.PointLightHelper.prototype = Object.create( THREE.Mesh.prototype );\\n\\tTHREE.PointLightHelper.prototype.constructor = THREE.PointLightHelper;\\n\\n\\tTHREE.PointLightHelper.prototype.dispose = function () {\\n\\n\\t\\tthis.geometry.dispose();\\n\\t\\tthis.material.dispose();\\n\\n\\t};\\n\\n\\tTHREE.PointLightHelper.prototype.update = function () {\\n\\n\\t\\tthis.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\\n\\n\\t\\t/*\\n\\t\\tvar d = this.light.distance;\\n\\n\\t\\tif ( d === 0.0 ) {\\n\\n\\t\\t\\tthis.lightDistance.visible = false;\\n\\n\\t\\t} else {\\n\\n\\t\\t\\tthis.lightDistance.visible = true;\\n\\t\\t\\tthis.lightDistance.scale.set( d, d, d );\\n\\n\\t\\t}\\n\\t\\t*/\\n\\n\\t};\\n\\n\\t// File:src/extras/helpers/SkeletonHelper.js\\n\\n\\t/**\\n\\t * @author Sean Griffin / http://twitter.com/sgrif\\n\\t * @author Michael Guerrero / http://realitymeltdown.com\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t * @author ikerr / http://verold.com\\n\\t */\\n\\n\\tTHREE.SkeletonHelper = function ( object ) {\\n\\n\\t\\tthis.bones = this.getBoneList( object );\\n\\n\\t\\tvar geometry = new THREE.Geometry();\\n\\n\\t\\tfor ( var i = 0; i < this.bones.length; i ++ ) {\\n\\n\\t\\t\\tvar bone = this.bones[ i ];\\n\\n\\t\\t\\tif ( bone.parent instanceof THREE.Bone ) {\\n\\n\\t\\t\\t\\tgeometry.vertices.push( new THREE.Vector3() );\\n\\t\\t\\t\\tgeometry.vertices.push( new THREE.Vector3() );\\n\\t\\t\\t\\tgeometry.colors.push( new THREE.Color( 0, 0, 1 ) );\\n\\t\\t\\t\\tgeometry.colors.push( new THREE.Color( 0, 1, 0 ) );\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tgeometry.dynamic = true;\\n\\n\\t\\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors, depthTest: false, depthWrite: false, transparent: true } );\\n\\n\\t\\tTHREE.LineSegments.call( this, geometry, material );\\n\\n\\t\\tthis.root = object;\\n\\n\\t\\tthis.matrix = object.matrixWorld;\\n\\t\\tthis.matrixAutoUpdate = false;\\n\\n\\t\\tthis.update();\\n\\n\\t};\\n\\n\\n\\tTHREE.SkeletonHelper.prototype = Object.create( THREE.LineSegments.prototype );\\n\\tTHREE.SkeletonHelper.prototype.constructor = THREE.SkeletonHelper;\\n\\n\\tTHREE.SkeletonHelper.prototype.getBoneList = function( object ) {\\n\\n\\t\\tvar boneList = [];\\n\\n\\t\\tif ( object instanceof THREE.Bone ) {\\n\\n\\t\\t\\tboneList.push( object );\\n\\n\\t\\t}\\n\\n\\t\\tfor ( var i = 0; i < object.children.length; i ++ ) {\\n\\n\\t\\t\\tboneList.push.apply( boneList, this.getBoneList( object.children[ i ] ) );\\n\\n\\t\\t}\\n\\n\\t\\treturn boneList;\\n\\n\\t};\\n\\n\\tTHREE.SkeletonHelper.prototype.update = function () {\\n\\n\\t\\tvar geometry = this.geometry;\\n\\n\\t\\tvar matrixWorldInv = new THREE.Matrix4().getInverse( this.root.matrixWorld );\\n\\n\\t\\tvar boneMatrix = new THREE.Matrix4();\\n\\n\\t\\tvar j = 0;\\n\\n\\t\\tfor ( var i = 0; i < this.bones.length; i ++ ) {\\n\\n\\t\\t\\tvar bone = this.bones[ i ];\\n\\n\\t\\t\\tif ( bone.parent instanceof THREE.Bone ) {\\n\\n\\t\\t\\t\\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.matrixWorld );\\n\\t\\t\\t\\tgeometry.vertices[ j ].setFromMatrixPosition( boneMatrix );\\n\\n\\t\\t\\t\\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.parent.matrixWorld );\\n\\t\\t\\t\\tgeometry.vertices[ j + 1 ].setFromMatrixPosition( boneMatrix );\\n\\n\\t\\t\\t\\tj += 2;\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tgeometry.verticesNeedUpdate = true;\\n\\n\\t\\tgeometry.computeBoundingSphere();\\n\\n\\t};\\n\\n\\t// File:src/extras/helpers/SpotLightHelper.js\\n\\n\\t/**\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t * @author WestLangley / http://github.com/WestLangley\\n\\t*/\\n\\n\\tTHREE.SpotLightHelper = function ( light ) {\\n\\n\\t\\tTHREE.Object3D.call( this );\\n\\n\\t\\tthis.light = light;\\n\\t\\tthis.light.updateMatrixWorld();\\n\\n\\t\\tthis.matrix = light.matrixWorld;\\n\\t\\tthis.matrixAutoUpdate = false;\\n\\n\\t\\tvar geometry = new THREE.BufferGeometry();\\n\\n\\t\\tvar positions = [\\n\\t\\t\\t0, 0, 0,   0,   0,   1,\\n\\t\\t\\t0, 0, 0,   1,   0,   1,\\n\\t\\t\\t0, 0, 0, - 1,   0,   1,\\n\\t\\t\\t0, 0, 0,   0,   1,   1,\\n\\t\\t\\t0, 0, 0,   0, - 1,   1\\n\\t\\t];\\n\\n\\t\\tfor ( var i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\\n\\n\\t\\t\\tvar p1 = ( i / l ) * Math.PI * 2;\\n\\t\\t\\tvar p2 = ( j / l ) * Math.PI * 2;\\n\\n\\t\\t\\tpositions.push(\\n\\t\\t\\t\\tMath.cos( p1 ), Math.sin( p1 ), 1,\\n\\t\\t\\t\\tMath.cos( p2 ), Math.sin( p2 ), 1\\n\\t\\t\\t);\\n\\n\\t\\t}\\n\\n\\t\\tgeometry.addAttribute( 'position', new THREE.Float32Attribute( positions, 3 ) );\\n\\n\\t\\tvar material = new THREE.LineBasicMaterial( { fog: false } );\\n\\n\\t\\tthis.cone = new THREE.LineSegments( geometry, material );\\n\\t\\tthis.add( this.cone );\\n\\n\\t\\tthis.update();\\n\\n\\t};\\n\\n\\tTHREE.SpotLightHelper.prototype = Object.create( THREE.Object3D.prototype );\\n\\tTHREE.SpotLightHelper.prototype.constructor = THREE.SpotLightHelper;\\n\\n\\tTHREE.SpotLightHelper.prototype.dispose = function () {\\n\\n\\t\\tthis.cone.geometry.dispose();\\n\\t\\tthis.cone.material.dispose();\\n\\n\\t};\\n\\n\\tTHREE.SpotLightHelper.prototype.update = function () {\\n\\n\\t\\tvar vector = new THREE.Vector3();\\n\\t\\tvar vector2 = new THREE.Vector3();\\n\\n\\t\\treturn function update() {\\n\\n\\t\\t\\tvar coneLength = this.light.distance ? this.light.distance : 1000;\\n\\t\\t\\tvar coneWidth = coneLength * Math.tan( this.light.angle );\\n\\n\\t\\t\\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\\n\\n\\t\\t\\tvector.setFromMatrixPosition( this.light.matrixWorld );\\n\\t\\t\\tvector2.setFromMatrixPosition( this.light.target.matrixWorld );\\n\\n\\t\\t\\tthis.cone.lookAt( vector2.sub( vector ) );\\n\\n\\t\\t\\tthis.cone.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\\n\\n\\t\\t};\\n\\n\\t}();\\n\\n\\t// File:src/extras/helpers/VertexNormalsHelper.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t * @author WestLangley / http://github.com/WestLangley\\n\\t*/\\n\\n\\tTHREE.VertexNormalsHelper = function ( object, size, hex, linewidth ) {\\n\\n\\t\\tthis.object = object;\\n\\n\\t\\tthis.size = ( size !== undefined ) ? size : 1;\\n\\n\\t\\tvar color = ( hex !== undefined ) ? hex : 0xff0000;\\n\\n\\t\\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\\n\\n\\t\\t//\\n\\n\\t\\tvar nNormals = 0;\\n\\n\\t\\tvar objGeometry = this.object.geometry;\\n\\n\\t\\tif ( objGeometry instanceof THREE.Geometry ) {\\n\\n\\t\\t\\tnNormals = objGeometry.faces.length * 3;\\n\\n\\t\\t} else if ( objGeometry instanceof THREE.BufferGeometry ) {\\n\\n\\t\\t\\tnNormals = objGeometry.attributes.normal.count;\\n\\n\\t\\t}\\n\\n\\t\\t//\\n\\n\\t\\tvar geometry = new THREE.BufferGeometry();\\n\\n\\t\\tvar positions = new THREE.Float32Attribute( nNormals * 2 * 3, 3 );\\n\\n\\t\\tgeometry.addAttribute( 'position', positions );\\n\\n\\t\\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ) );\\n\\n\\t\\t//\\n\\n\\t\\tthis.matrixAutoUpdate = false;\\n\\n\\t\\tthis.update();\\n\\n\\t};\\n\\n\\tTHREE.VertexNormalsHelper.prototype = Object.create( THREE.LineSegments.prototype );\\n\\tTHREE.VertexNormalsHelper.prototype.constructor = THREE.VertexNormalsHelper;\\n\\n\\tTHREE.VertexNormalsHelper.prototype.update = ( function () {\\n\\n\\t\\tvar v1 = new THREE.Vector3();\\n\\t\\tvar v2 = new THREE.Vector3();\\n\\t\\tvar normalMatrix = new THREE.Matrix3();\\n\\n\\t\\treturn function update() {\\n\\n\\t\\t\\tvar keys = [ 'a', 'b', 'c' ];\\n\\n\\t\\t\\tthis.object.updateMatrixWorld( true );\\n\\n\\t\\t\\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\\n\\n\\t\\t\\tvar matrixWorld = this.object.matrixWorld;\\n\\n\\t\\t\\tvar position = this.geometry.attributes.position;\\n\\n\\t\\t\\t//\\n\\n\\t\\t\\tvar objGeometry = this.object.geometry;\\n\\n\\t\\t\\tif ( objGeometry instanceof THREE.Geometry ) {\\n\\n\\t\\t\\t\\tvar vertices = objGeometry.vertices;\\n\\n\\t\\t\\t\\tvar faces = objGeometry.faces;\\n\\n\\t\\t\\t\\tvar idx = 0;\\n\\n\\t\\t\\t\\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\\n\\n\\t\\t\\t\\t\\tvar face = faces[ i ];\\n\\n\\t\\t\\t\\t\\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\\n\\n\\t\\t\\t\\t\\t\\tvar vertex = vertices[ face[ keys[ j ] ] ];\\n\\n\\t\\t\\t\\t\\t\\tvar normal = face.vertexNormals[ j ];\\n\\n\\t\\t\\t\\t\\t\\tv1.copy( vertex ).applyMatrix4( matrixWorld );\\n\\n\\t\\t\\t\\t\\t\\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\\n\\n\\t\\t\\t\\t\\t\\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\\n\\n\\t\\t\\t\\t\\t\\tidx = idx + 1;\\n\\n\\t\\t\\t\\t\\t\\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\\n\\n\\t\\t\\t\\t\\t\\tidx = idx + 1;\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t} else if ( objGeometry instanceof THREE.BufferGeometry ) {\\n\\n\\t\\t\\t\\tvar objPos = objGeometry.attributes.position;\\n\\n\\t\\t\\t\\tvar objNorm = objGeometry.attributes.normal;\\n\\n\\t\\t\\t\\tvar idx = 0;\\n\\n\\t\\t\\t\\t// for simplicity, ignore index and drawcalls, and render every normal\\n\\n\\t\\t\\t\\tfor ( var j = 0, jl = objPos.count; j < jl; j ++ ) {\\n\\n\\t\\t\\t\\t\\tv1.set( objPos.getX( j ), objPos.getY( j ), objPos.getZ( j ) ).applyMatrix4( matrixWorld );\\n\\n\\t\\t\\t\\t\\tv2.set( objNorm.getX( j ), objNorm.getY( j ), objNorm.getZ( j ) );\\n\\n\\t\\t\\t\\t\\tv2.applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\\n\\n\\t\\t\\t\\t\\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\\n\\n\\t\\t\\t\\t\\tidx = idx + 1;\\n\\n\\t\\t\\t\\t\\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\\n\\n\\t\\t\\t\\t\\tidx = idx + 1;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tposition.needsUpdate = true;\\n\\n\\t\\t\\treturn this;\\n\\n\\t\\t};\\n\\n\\t}() );\\n\\n\\t// File:src/extras/helpers/WireframeHelper.js\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t */\\n\\n\\tTHREE.WireframeHelper = function ( object, hex ) {\\n\\n\\t\\tvar color = ( hex !== undefined ) ? hex : 0xffffff;\\n\\n\\t\\tTHREE.LineSegments.call( this, new THREE.WireframeGeometry( object.geometry ), new THREE.LineBasicMaterial( { color: color } ) );\\n\\n\\t\\tthis.matrix = object.matrixWorld;\\n\\t\\tthis.matrixAutoUpdate = false;\\n\\n\\t};\\n\\n\\tTHREE.WireframeHelper.prototype = Object.create( THREE.LineSegments.prototype );\\n\\tTHREE.WireframeHelper.prototype.constructor = THREE.WireframeHelper;\\n\\n\\t// File:src/extras/objects/ImmediateRenderObject.js\\n\\n\\t/**\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t */\\n\\n\\tTHREE.ImmediateRenderObject = function ( material ) {\\n\\n\\t\\tTHREE.Object3D.call( this );\\n\\n\\t\\tthis.material = material;\\n\\t\\tthis.render = function ( renderCallback ) {};\\n\\n\\t};\\n\\n\\tTHREE.ImmediateRenderObject.prototype = Object.create( THREE.Object3D.prototype );\\n\\tTHREE.ImmediateRenderObject.prototype.constructor = THREE.ImmediateRenderObject;\\n\\n\\t// File:src/extras/objects/MorphBlendMesh.js\\n\\n\\t/**\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t */\\n\\n\\tTHREE.MorphBlendMesh = function( geometry, material ) {\\n\\n\\t\\tTHREE.Mesh.call( this, geometry, material );\\n\\n\\t\\tthis.animationsMap = {};\\n\\t\\tthis.animationsList = [];\\n\\n\\t\\t// prepare default animation\\n\\t\\t// (all frames played together in 1 second)\\n\\n\\t\\tvar numFrames = this.geometry.morphTargets.length;\\n\\n\\t\\tvar name = \\\"__default\\\";\\n\\n\\t\\tvar startFrame = 0;\\n\\t\\tvar endFrame = numFrames - 1;\\n\\n\\t\\tvar fps = numFrames / 1;\\n\\n\\t\\tthis.createAnimation( name, startFrame, endFrame, fps );\\n\\t\\tthis.setAnimationWeight( name, 1 );\\n\\n\\t};\\n\\n\\tTHREE.MorphBlendMesh.prototype = Object.create( THREE.Mesh.prototype );\\n\\tTHREE.MorphBlendMesh.prototype.constructor = THREE.MorphBlendMesh;\\n\\n\\tTHREE.MorphBlendMesh.prototype.createAnimation = function ( name, start, end, fps ) {\\n\\n\\t\\tvar animation = {\\n\\n\\t\\t\\tstart: start,\\n\\t\\t\\tend: end,\\n\\n\\t\\t\\tlength: end - start + 1,\\n\\n\\t\\t\\tfps: fps,\\n\\t\\t\\tduration: ( end - start ) / fps,\\n\\n\\t\\t\\tlastFrame: 0,\\n\\t\\t\\tcurrentFrame: 0,\\n\\n\\t\\t\\tactive: false,\\n\\n\\t\\t\\ttime: 0,\\n\\t\\t\\tdirection: 1,\\n\\t\\t\\tweight: 1,\\n\\n\\t\\t\\tdirectionBackwards: false,\\n\\t\\t\\tmirroredLoop: false\\n\\n\\t\\t};\\n\\n\\t\\tthis.animationsMap[ name ] = animation;\\n\\t\\tthis.animationsList.push( animation );\\n\\n\\t};\\n\\n\\tTHREE.MorphBlendMesh.prototype.autoCreateAnimations = function ( fps ) {\\n\\n\\t\\tvar pattern = /([a-z]+)_?(\\\\d+)/i;\\n\\n\\t\\tvar firstAnimation, frameRanges = {};\\n\\n\\t\\tvar geometry = this.geometry;\\n\\n\\t\\tfor ( var i = 0, il = geometry.morphTargets.length; i < il; i ++ ) {\\n\\n\\t\\t\\tvar morph = geometry.morphTargets[ i ];\\n\\t\\t\\tvar chunks = morph.name.match( pattern );\\n\\n\\t\\t\\tif ( chunks && chunks.length > 1 ) {\\n\\n\\t\\t\\t\\tvar name = chunks[ 1 ];\\n\\n\\t\\t\\t\\tif ( ! frameRanges[ name ] ) frameRanges[ name ] = { start: Infinity, end: - Infinity };\\n\\n\\t\\t\\t\\tvar range = frameRanges[ name ];\\n\\n\\t\\t\\t\\tif ( i < range.start ) range.start = i;\\n\\t\\t\\t\\tif ( i > range.end ) range.end = i;\\n\\n\\t\\t\\t\\tif ( ! firstAnimation ) firstAnimation = name;\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tfor ( var name in frameRanges ) {\\n\\n\\t\\t\\tvar range = frameRanges[ name ];\\n\\t\\t\\tthis.createAnimation( name, range.start, range.end, fps );\\n\\n\\t\\t}\\n\\n\\t\\tthis.firstAnimation = firstAnimation;\\n\\n\\t};\\n\\n\\tTHREE.MorphBlendMesh.prototype.setAnimationDirectionForward = function ( name ) {\\n\\n\\t\\tvar animation = this.animationsMap[ name ];\\n\\n\\t\\tif ( animation ) {\\n\\n\\t\\t\\tanimation.direction = 1;\\n\\t\\t\\tanimation.directionBackwards = false;\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\tTHREE.MorphBlendMesh.prototype.setAnimationDirectionBackward = function ( name ) {\\n\\n\\t\\tvar animation = this.animationsMap[ name ];\\n\\n\\t\\tif ( animation ) {\\n\\n\\t\\t\\tanimation.direction = - 1;\\n\\t\\t\\tanimation.directionBackwards = true;\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\tTHREE.MorphBlendMesh.prototype.setAnimationFPS = function ( name, fps ) {\\n\\n\\t\\tvar animation = this.animationsMap[ name ];\\n\\n\\t\\tif ( animation ) {\\n\\n\\t\\t\\tanimation.fps = fps;\\n\\t\\t\\tanimation.duration = ( animation.end - animation.start ) / animation.fps;\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\tTHREE.MorphBlendMesh.prototype.setAnimationDuration = function ( name, duration ) {\\n\\n\\t\\tvar animation = this.animationsMap[ name ];\\n\\n\\t\\tif ( animation ) {\\n\\n\\t\\t\\tanimation.duration = duration;\\n\\t\\t\\tanimation.fps = ( animation.end - animation.start ) / animation.duration;\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\tTHREE.MorphBlendMesh.prototype.setAnimationWeight = function ( name, weight ) {\\n\\n\\t\\tvar animation = this.animationsMap[ name ];\\n\\n\\t\\tif ( animation ) {\\n\\n\\t\\t\\tanimation.weight = weight;\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\tTHREE.MorphBlendMesh.prototype.setAnimationTime = function ( name, time ) {\\n\\n\\t\\tvar animation = this.animationsMap[ name ];\\n\\n\\t\\tif ( animation ) {\\n\\n\\t\\t\\tanimation.time = time;\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\tTHREE.MorphBlendMesh.prototype.getAnimationTime = function ( name ) {\\n\\n\\t\\tvar time = 0;\\n\\n\\t\\tvar animation = this.animationsMap[ name ];\\n\\n\\t\\tif ( animation ) {\\n\\n\\t\\t\\ttime = animation.time;\\n\\n\\t\\t}\\n\\n\\t\\treturn time;\\n\\n\\t};\\n\\n\\tTHREE.MorphBlendMesh.prototype.getAnimationDuration = function ( name ) {\\n\\n\\t\\tvar duration = - 1;\\n\\n\\t\\tvar animation = this.animationsMap[ name ];\\n\\n\\t\\tif ( animation ) {\\n\\n\\t\\t\\tduration = animation.duration;\\n\\n\\t\\t}\\n\\n\\t\\treturn duration;\\n\\n\\t};\\n\\n\\tTHREE.MorphBlendMesh.prototype.playAnimation = function ( name ) {\\n\\n\\t\\tvar animation = this.animationsMap[ name ];\\n\\n\\t\\tif ( animation ) {\\n\\n\\t\\t\\tanimation.time = 0;\\n\\t\\t\\tanimation.active = true;\\n\\n\\t\\t} else {\\n\\n\\t\\t\\tconsole.warn( \\\"THREE.MorphBlendMesh: animation[\\\" + name + \\\"] undefined in .playAnimation()\\\" );\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\tTHREE.MorphBlendMesh.prototype.stopAnimation = function ( name ) {\\n\\n\\t\\tvar animation = this.animationsMap[ name ];\\n\\n\\t\\tif ( animation ) {\\n\\n\\t\\t\\tanimation.active = false;\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\tTHREE.MorphBlendMesh.prototype.update = function ( delta ) {\\n\\n\\t\\tfor ( var i = 0, il = this.animationsList.length; i < il; i ++ ) {\\n\\n\\t\\t\\tvar animation = this.animationsList[ i ];\\n\\n\\t\\t\\tif ( ! animation.active ) continue;\\n\\n\\t\\t\\tvar frameTime = animation.duration / animation.length;\\n\\n\\t\\t\\tanimation.time += animation.direction * delta;\\n\\n\\t\\t\\tif ( animation.mirroredLoop ) {\\n\\n\\t\\t\\t\\tif ( animation.time > animation.duration || animation.time < 0 ) {\\n\\n\\t\\t\\t\\t\\tanimation.direction *= - 1;\\n\\n\\t\\t\\t\\t\\tif ( animation.time > animation.duration ) {\\n\\n\\t\\t\\t\\t\\t\\tanimation.time = animation.duration;\\n\\t\\t\\t\\t\\t\\tanimation.directionBackwards = true;\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tif ( animation.time < 0 ) {\\n\\n\\t\\t\\t\\t\\t\\tanimation.time = 0;\\n\\t\\t\\t\\t\\t\\tanimation.directionBackwards = false;\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\tanimation.time = animation.time % animation.duration;\\n\\n\\t\\t\\t\\tif ( animation.time < 0 ) animation.time += animation.duration;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar keyframe = animation.start + THREE.Math.clamp( Math.floor( animation.time / frameTime ), 0, animation.length - 1 );\\n\\t\\t\\tvar weight = animation.weight;\\n\\n\\t\\t\\tif ( keyframe !== animation.currentFrame ) {\\n\\n\\t\\t\\t\\tthis.morphTargetInfluences[ animation.lastFrame ] = 0;\\n\\t\\t\\t\\tthis.morphTargetInfluences[ animation.currentFrame ] = 1 * weight;\\n\\n\\t\\t\\t\\tthis.morphTargetInfluences[ keyframe ] = 0;\\n\\n\\t\\t\\t\\tanimation.lastFrame = animation.currentFrame;\\n\\t\\t\\t\\tanimation.currentFrame = keyframe;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar mix = ( animation.time % frameTime ) / frameTime;\\n\\n\\t\\t\\tif ( animation.directionBackwards ) mix = 1 - mix;\\n\\n\\t\\t\\tif ( animation.currentFrame !== animation.lastFrame ) {\\n\\n\\t\\t\\t\\tthis.morphTargetInfluences[ animation.currentFrame ] = mix * weight;\\n\\t\\t\\t\\tthis.morphTargetInfluences[ animation.lastFrame ] = ( 1 - mix ) * weight;\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\tthis.morphTargetInfluences[ animation.currentFrame ] = weight;\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\tif( typeof define !== \\\"undefined\\\" && define instanceof Function && define.amd != undefined ){\\n\\n\\t\\tdefine(function(){\\n\\n\\t\\t\\treturn THREE;\\n\\n\\t\\t});\\n\\n\\t}\\n\\telse if( typeof module !== \\\"undefined\\\" && module.exports ){\\n\\n\\t\\tmodule.exports = THREE;\\n\\n\\t}\\n\\telse if( this != undefined ){\\n\\n\\t\\tthis.THREE = THREE;\\n\\n\\t};\\n\\n})(this || {});\",\"module.exports = function() {\\n\\tthrow new Error(\\\"define cannot be used indirect\\\");\\n};\\n\",\"/* globals __webpack_amd_options__ */\\nmodule.exports = __webpack_amd_options__;\\n\",\"var map = {\\n\\t\\\"./AdaptiveToneMappingPass.js\\\": 7,\\n\\t\\\"./BasicShader.js\\\": 8,\\n\\t\\\"./BleachBypassShader.js\\\": 9,\\n\\t\\\"./BlendShader.js\\\": 10,\\n\\t\\\"./BloomPass.js\\\": 11,\\n\\t\\\"./BokehPass.js\\\": 12,\\n\\t\\\"./BokehShader.js\\\": 13,\\n\\t\\\"./BokehShader2.js\\\": 14,\\n\\t\\\"./BrightnessContrastShader.js\\\": 15,\\n\\t\\\"./CanvasRenderer.js\\\": 16,\\n\\t\\\"./ColorCorrectionShader.js\\\": 17,\\n\\t\\\"./ColorifyShader.js\\\": 18,\\n\\t\\\"./ConvolutionShader.js\\\": 19,\\n\\t\\\"./CopyShader.js\\\": 20,\\n\\t\\\"./DDSLoader.js\\\": 21,\\n\\t\\\"./DOFMipMapShader.js\\\": 22,\\n\\t\\\"./DigitalGlitch.js\\\": 23,\\n\\t\\\"./DotScreenPass.js\\\": 24,\\n\\t\\\"./DotScreenShader.js\\\": 25,\\n\\t\\\"./EdgeShader.js\\\": 26,\\n\\t\\\"./EdgeShader2.js\\\": 27,\\n\\t\\\"./EffectComposer.js\\\": 28,\\n\\t\\\"./FXAAShader.js\\\": 29,\\n\\t\\\"./FilmPass.js\\\": 30,\\n\\t\\\"./FilmShader.js\\\": 31,\\n\\t\\\"./FocusShader.js\\\": 32,\\n\\t\\\"./FresnelShader.js\\\": 33,\\n\\t\\\"./GammaCorrectionShader.js\\\": 34,\\n\\t\\\"./GlitchPass.js\\\": 35,\\n\\t\\\"./HorizontalBlurShader.js\\\": 36,\\n\\t\\\"./HorizontalTiltShiftShader.js\\\": 37,\\n\\t\\\"./HueSaturationShader.js\\\": 38,\\n\\t\\\"./JSONLoader.js\\\": 39,\\n\\t\\\"./KaleidoShader.js\\\": 40,\\n\\t\\\"./LuminosityShader.js\\\": 41,\\n\\t\\\"./MTLLoader.js\\\": 42,\\n\\t\\\"./MarchingCubes.js\\\": 43,\\n\\t\\\"./MaskPass.js\\\": 44,\\n\\t\\\"./MirrorShader.js\\\": 45,\\n\\t\\\"./NormalMapShader.js\\\": 46,\\n\\t\\\"./OBJLoader.js\\\": 47,\\n\\t\\\"./OceanShaders.js\\\": 48,\\n\\t\\\"./OrbitControls.js\\\": 49,\\n\\t\\\"./ParallaxShader.js\\\": 50,\\n\\t\\\"./Projector.js\\\": 51,\\n\\t\\\"./RGBShiftShader.js\\\": 52,\\n\\t\\\"./RenderPass.js\\\": 53,\\n\\t\\\"./SSAOShader.js\\\": 54,\\n\\t\\\"./SVGLoader.js\\\": 55,\\n\\t\\\"./SavePass.js\\\": 56,\\n\\t\\\"./SepiaShader.js\\\": 57,\\n\\t\\\"./ShaderPass.js\\\": 58,\\n\\t\\\"./TechnicolorShader.js\\\": 59,\\n\\t\\\"./TexturePass.js\\\": 60,\\n\\t\\\"./ToneMapShader.js\\\": 61,\\n\\t\\\"./TriangleBlurShader.js\\\": 62,\\n\\t\\\"./UnpackDepthRGBAShader.js\\\": 63,\\n\\t\\\"./VerticalBlurShader.js\\\": 64,\\n\\t\\\"./VerticalTiltShiftShader.js\\\": 65,\\n\\t\\\"./VignetteShader.js\\\": 66\\n};\\n\\n\\nfunction webpackContext(req) {\\n\\tvar id = webpackContextResolve(req);\\n\\treturn __webpack_require__(id);\\n}\\nfunction webpackContextResolve(req) {\\n\\tif(!__webpack_require__.o(map, req)) {\\n\\t\\tvar e = new Error(\\\"Cannot find module '\\\" + req + \\\"'\\\");\\n\\t\\te.code = 'MODULE_NOT_FOUND';\\n\\t\\tthrow e;\\n\\t}\\n\\treturn map[req];\\n}\\nwebpackContext.keys = function webpackContextKeys() {\\n\\treturn Object.keys(map);\\n};\\nwebpackContext.resolve = webpackContextResolve;\\nmodule.exports = webpackContext;\\nwebpackContext.id = 6;\",\"module.exports = function( THREE ){\\n\\n\\t/**\\n\\t * @author miibond\\n\\t * Generate a texture that represents the luminosity of the current scene, adapted over time\\n\\t * to simulate the optic nerve responding to the amount of light it is receiving.\\n\\t * Based on a GDC2007 presentation by Wolfgang Engel titled \\\"Post-Processing Pipeline\\\"\\n\\t *\\n\\t * Full-screen tone-mapping shader based on http://www.graphics.cornell.edu/~jaf/publications/sig02_paper.pdf\\n\\t */\\n\\n\\tTHREE.AdaptiveToneMappingPass = function ( adaptive, resolution ) {\\n\\n\\t\\tthis.resolution = ( resolution !== undefined ) ? resolution : 256;\\n\\t\\tthis.needsInit = true;\\n\\t\\tthis.adaptive = adaptive !== undefined ? !! adaptive : true;\\n\\n\\t\\tthis.luminanceRT = null;\\n\\t\\tthis.previousLuminanceRT = null;\\n\\t\\tthis.currentLuminanceRT = null;\\n\\n\\t\\tif ( THREE.CopyShader === undefined )\\n\\t\\t\\tconsole.error( \\\"THREE.AdaptiveToneMappingPass relies on THREE.CopyShader\\\" );\\n\\n\\t\\tvar copyShader = THREE.CopyShader;\\n\\n\\t\\tthis.copyUniforms = THREE.UniformsUtils.clone( copyShader.uniforms );\\n\\n\\t\\tthis.materialCopy = new THREE.ShaderMaterial( {\\n\\n\\t\\t\\tuniforms: this.copyUniforms,\\n\\t\\t\\tvertexShader: copyShader.vertexShader,\\n\\t\\t\\tfragmentShader: copyShader.fragmentShader,\\n\\t\\t\\tblending: THREE.NoBlending,\\n\\t\\t\\tdepthTest: false\\n\\n\\t\\t} );\\n\\n\\t\\tif ( THREE.LuminosityShader === undefined )\\n\\t\\t\\tconsole.error( \\\"THREE.AdaptiveToneMappingPass relies on THREE.LuminosityShader\\\" );\\n\\n\\t\\tthis.materialLuminance = new THREE.ShaderMaterial( {\\n\\n\\t\\t\\tuniforms: THREE.UniformsUtils.clone( THREE.LuminosityShader.uniforms ),\\n\\t\\t\\tvertexShader: THREE.LuminosityShader.vertexShader,\\n\\t\\t\\tfragmentShader: THREE.LuminosityShader.fragmentShader,\\n\\t\\t\\tblending: THREE.NoBlending,\\n\\t\\t} );\\n\\n\\t\\tthis.adaptLuminanceShader = {\\n\\t\\t\\tdefines: {\\n\\t\\t\\t\\t\\\"MIP_LEVEL_1X1\\\" : ( Math.log( this.resolution ) / Math.log( 2.0 ) ).toFixed( 1 ),\\n\\t\\t\\t},\\n\\t\\t\\tuniforms: {\\n\\t\\t\\t\\t\\\"lastLum\\\": { type: \\\"t\\\", value: null },\\n\\t\\t\\t\\t\\\"currentLum\\\": { type: \\\"t\\\", value: null },\\n\\t\\t\\t\\t\\\"delta\\\": { type: 'f', value: 0.016 },\\n\\t\\t\\t\\t\\\"tau\\\": { type: 'f', value: 1.0 }\\n\\t\\t\\t},\\n\\t\\t\\tvertexShader: [\\n\\t\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\n\\t\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t\\t\\\"vUv = uv;\\\",\\n\\t\\t\\t\\t\\t\\\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\\",\\n\\n\\t\\t\\t\\t\\\"}\\\"\\n\\t\\t\\t].join( '\\\\n' ),\\n\\t\\t\\tfragmentShader: [\\n\\t\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\n\\t\\t\\t\\t\\\"uniform sampler2D lastLum;\\\",\\n\\t\\t\\t\\t\\\"uniform sampler2D currentLum;\\\",\\n\\t\\t\\t\\t\\\"uniform float delta;\\\",\\n\\t\\t\\t\\t\\\"uniform float tau;\\\",\\n\\n\\t\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t\\t\\\"vec4 lastLum = texture2D( lastLum, vUv, MIP_LEVEL_1X1 );\\\",\\n\\t\\t\\t\\t\\t\\\"vec4 currentLum = texture2D( currentLum, vUv, MIP_LEVEL_1X1 );\\\",\\n\\n\\t\\t\\t\\t\\t\\\"float fLastLum = lastLum.r;\\\",\\n\\t\\t\\t\\t\\t\\\"float fCurrentLum = currentLum.r;\\\",\\n\\n\\t\\t\\t\\t\\t//The adaption seems to work better in extreme lighting differences\\n\\t\\t\\t\\t\\t//if the input luminance is squared.\\n\\t\\t\\t\\t\\t\\\"fCurrentLum *= fCurrentLum;\\\",\\n\\n\\t\\t\\t\\t\\t// Adapt the luminance using Pattanaik's technique\\n\\t\\t\\t\\t\\t\\\"float fAdaptedLum = fLastLum + (fCurrentLum - fLastLum) * (1.0 - exp(-delta * tau));\\\",\\n\\t\\t\\t\\t\\t// \\\"fAdaptedLum = sqrt(fAdaptedLum);\\\",\\n\\t\\t\\t\\t\\t\\\"gl_FragColor = vec4( vec3( fAdaptedLum ), 1.0 );\\\",\\n\\t\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t].join( '\\\\n' )\\n\\t\\t};\\n\\n\\t\\tthis.materialAdaptiveLum = new THREE.ShaderMaterial( {\\n\\n\\t\\t\\tuniforms: THREE.UniformsUtils.clone( this.adaptLuminanceShader.uniforms ),\\n\\t\\t\\tvertexShader: this.adaptLuminanceShader.vertexShader,\\n\\t\\t\\tfragmentShader: this.adaptLuminanceShader.fragmentShader,\\n\\t\\t\\tdefines: this.adaptLuminanceShader.defines,\\n\\t\\t\\tblending: THREE.NoBlending\\n\\t\\t} );\\n\\n\\t\\tif ( THREE.ToneMapShader === undefined )\\n\\t\\t\\tconsole.error( \\\"THREE.AdaptiveToneMappingPass relies on THREE.ToneMapShader\\\" );\\n\\n\\t\\tthis.materialToneMap = new THREE.ShaderMaterial( {\\n\\n\\t\\t\\tuniforms: THREE.UniformsUtils.clone( THREE.ToneMapShader.uniforms ),\\n\\t\\t\\tvertexShader: THREE.ToneMapShader.vertexShader,\\n\\t\\t\\tfragmentShader: THREE.ToneMapShader.fragmentShader,\\n\\t\\t\\tblending: THREE.NoBlending\\n\\t\\t} );\\n\\n\\t\\tthis.enabled = true;\\n\\t\\tthis.needsSwap = true;\\n\\t\\tthis.clear = false;\\n\\n\\t\\tthis.camera = new THREE.OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\\n\\t\\tthis.scene  = new THREE.Scene();\\n\\n\\t\\tthis.quad = new THREE.Mesh( new THREE.PlaneBufferGeometry( 2, 2 ), null );\\n\\t\\tthis.scene.add( this.quad );\\n\\n\\t};\\n\\n\\tTHREE.AdaptiveToneMappingPass.prototype = {\\n\\n\\t\\trender: function ( renderer, writeBuffer, readBuffer, delta, maskActive ) {\\n\\n\\t\\t\\tif ( this.needsInit ) {\\n\\n\\t\\t\\t\\tthis.reset( renderer );\\n\\t\\t\\t\\tthis.luminanceRT.type = readBuffer.type;\\n\\t\\t\\t\\tthis.previousLuminanceRT.type = readBuffer.type;\\n\\t\\t\\t\\tthis.currentLuminanceRT.type = readBuffer.type;\\n\\t\\t\\t\\tthis.needsInit = false;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( this.adaptive ) {\\n\\n\\t\\t\\t\\t//Render the luminance of the current scene into a render target with mipmapping enabled\\n\\t\\t\\t\\tthis.quad.material = this.materialLuminance;\\n\\t\\t\\t\\tthis.materialLuminance.uniforms.tDiffuse.value = readBuffer;\\n\\t\\t\\t\\trenderer.render( this.scene, this.camera, this.currentLuminanceRT );\\n\\n\\t\\t\\t\\t//Use the new luminance values, the previous luminance and the frame delta to\\n\\t\\t\\t\\t//adapt the luminance over time.\\n\\t\\t\\t\\tthis.quad.material = this.materialAdaptiveLum;\\n\\t\\t\\t\\tthis.materialAdaptiveLum.uniforms.delta.value = delta;\\n\\t\\t\\t\\tthis.materialAdaptiveLum.uniforms.lastLum.value = this.previousLuminanceRT;\\n\\t\\t\\t\\tthis.materialAdaptiveLum.uniforms.currentLum.value = this.currentLuminanceRT;\\n\\t\\t\\t\\trenderer.render( this.scene, this.camera, this.luminanceRT );\\n\\n\\t\\t\\t\\t//Copy the new adapted luminance value so that it can be used by the next frame.\\n\\t\\t\\t\\tthis.quad.material = this.materialCopy;\\n\\t\\t\\t\\tthis.copyUniforms.tDiffuse.value = this.luminanceRT;\\n\\t\\t\\t\\trenderer.render( this.scene, this.camera, this.previousLuminanceRT );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.quad.material = this.materialToneMap;\\n\\t\\t\\tthis.materialToneMap.uniforms.tDiffuse.value = readBuffer;\\n\\t\\t\\trenderer.render( this.scene, this.camera, writeBuffer, this.clear );\\n\\n\\t\\t},\\n\\n\\t\\treset: function( renderer ) {\\n\\n\\t\\t\\t// render targets\\n\\t\\t\\tif ( this.luminanceRT ) {\\n\\n\\t\\t\\t\\tthis.luminanceRT.dispose();\\n\\n\\t\\t\\t}\\n\\t\\t\\tif ( this.currentLuminanceRT ) {\\n\\n\\t\\t\\t\\tthis.currentLuminanceRT.dispose();\\n\\n\\t\\t\\t}\\n\\t\\t\\tif ( this.previousLuminanceRT ) {\\n\\n\\t\\t\\t\\tthis.previousLuminanceRT.dispose();\\n\\n\\t\\t\\t}\\n\\t\\t\\tvar pars = { minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, format: THREE.RGBFormat };\\n\\n\\t\\t\\tthis.luminanceRT = new THREE.WebGLRenderTarget( this.resolution, this.resolution, pars );\\n\\t\\t\\tthis.luminanceRT.generateMipmaps = false;\\n\\t\\t\\tthis.previousLuminanceRT = new THREE.WebGLRenderTarget( this.resolution, this.resolution, pars );\\n\\t\\t\\tthis.previousLuminanceRT.generateMipmaps = false;\\n\\n\\t\\t\\t//We only need mipmapping for the current luminosity because we want a down-sampled version to sample in our adaptive shader\\n\\t\\t\\tpars.minFilter = THREE.LinearMipMapLinearFilter;\\n\\t\\t\\tthis.currentLuminanceRT = new THREE.WebGLRenderTarget( this.resolution, this.resolution, pars );\\n\\n\\t\\t\\tif ( this.adaptive ) {\\n\\n\\t\\t\\t\\tthis.materialToneMap.defines[ \\\"ADAPTED_LUMINANCE\\\" ] = \\\"\\\";\\n\\t\\t\\t\\tthis.materialToneMap.uniforms.luminanceMap.value = this.luminanceRT;\\n\\n\\t\\t\\t}\\n\\t\\t\\t//Put something in the adaptive luminance texture so that the scene can render initially\\n\\t\\t\\tthis.quad.material = new THREE.MeshBasicMaterial( { color: 0x777777 } );\\n\\t\\t\\tthis.materialLuminance.needsUpdate = true;\\n\\t\\t\\tthis.materialAdaptiveLum.needsUpdate = true;\\n\\t\\t\\tthis.materialToneMap.needsUpdate = true;\\n\\t\\t\\t// renderer.render( this.scene, this.camera, this.luminanceRT );\\n\\t\\t\\t// renderer.render( this.scene, this.camera, this.previousLuminanceRT );\\n\\t\\t\\t// renderer.render( this.scene, this.camera, this.currentLuminanceRT );\\n\\n\\t\\t},\\n\\n\\t\\tsetAdaptive: function( adaptive ) {\\n\\n\\t\\t\\tif ( adaptive ) {\\n\\n\\t\\t\\t\\tthis.adaptive = true;\\n\\t\\t\\t\\tthis.materialToneMap.defines[ \\\"ADAPTED_LUMINANCE\\\" ] = \\\"\\\";\\n\\t\\t\\t\\tthis.materialToneMap.uniforms.luminanceMap.value = this.luminanceRT;\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\tthis.adaptive = false;\\n\\t\\t\\t\\tdelete this.materialToneMap.defines[ \\\"ADAPTED_LUMINANCE\\\" ];\\n\\t\\t\\t\\tthis.materialToneMap.uniforms.luminanceMap.value = undefined;\\n\\n\\t\\t\\t}\\n\\t\\t\\tthis.materialToneMap.needsUpdate = true;\\n\\n\\t\\t},\\n\\n\\t\\tsetAdaptionRate: function( rate ) {\\n\\n\\t\\t\\tif ( rate ) {\\n\\n\\t\\t\\t\\tthis.materialAdaptiveLum.uniforms.tau.value = Math.abs( rate );\\n\\n\\t\\t\\t}\\n\\n\\t\\t},\\n\\n\\t\\tsetMaxLuminance: function( maxLum ) {\\n\\n\\t\\t\\tif ( maxLum ) {\\n\\n\\t\\t\\t\\tthis.materialToneMap.uniforms.maxLuminance.value = maxLum;\\n\\n\\t\\t\\t}\\n\\n\\t\\t},\\n\\n\\t\\tsetAverageLuminance: function( avgLum ) {\\n\\n\\t\\t\\tif ( avgLum ) {\\n\\n\\t\\t\\t\\tthis.materialToneMap.uniforms.averageLuminance.value = avgLum;\\n\\n\\t\\t\\t}\\n\\n\\t\\t},\\n\\n\\t\\tsetMiddleGrey: function( middleGrey ) {\\n\\n\\t\\t\\tif ( middleGrey ) {\\n\\n\\t\\t\\t\\tthis.materialToneMap.uniforms.middleGrey.value = middleGrey;\\n\\n\\t\\t\\t}\\n\\n\\t\\t},\\n\\n\\t\\tdispose: function() {\\n\\n\\t\\t\\tif ( this.luminanceRT ) {\\n\\n\\t\\t\\t\\tthis.luminanceRT.dispose();\\n\\n\\t\\t\\t}\\n\\t\\t\\tif ( this.previousLuminanceRT ) {\\n\\n\\t\\t\\t\\tthis.previousLuminanceRT.dispose();\\n\\n\\t\\t\\t}\\n\\t\\t\\tif ( this.currentLuminanceRT ) {\\n\\n\\t\\t\\t\\tthis.currentLuminanceRT.dispose();\\n\\n\\t\\t\\t}\\n\\t\\t\\tif ( this.materialLuminance ) {\\n\\n\\t\\t\\t\\tthis.materialLuminance.dispose();\\n\\n\\t\\t\\t}\\n\\t\\t\\tif ( this.materialAdaptiveLum ) {\\n\\n\\t\\t\\t\\tthis.materialAdaptiveLum.dispose();\\n\\n\\t\\t\\t}\\n\\t\\t\\tif ( this.materialCopy ) {\\n\\n\\t\\t\\t\\tthis.materialCopy.dispose();\\n\\n\\t\\t\\t}\\n\\t\\t\\tif ( this.materialToneMap ) {\\n\\n\\t\\t\\t\\tthis.materialToneMap.dispose();\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t};\\n\\n}\\n\",\"module.exports = function( THREE ){\\n\\t/**\\n\\t * @author mrdoob / http://www.mrdoob.com\\n\\t *\\n\\t * Simple test shader\\n\\t */\\n\\n\\tTHREE.BasicShader = {\\n\\n\\t\\tuniforms: {},\\n\\n\\t\\tvertexShader: [\\n\\n\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t\\\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\\",\\n\\n\\t\\t\\t\\\"}\\\"\\n\\n\\t\\t].join( \\\"\\\\n\\\" ),\\n\\n\\t\\tfragmentShader: [\\n\\n\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t\\\"gl_FragColor = vec4( 1.0, 0.0, 0.0, 0.5 );\\\",\\n\\n\\t\\t\\t\\\"}\\\"\\n\\n\\t\\t].join( \\\"\\\\n\\\" )\\n\\n\\t};\\n\\n}\\n\",\"module.exports = function( THREE ){\\n\\t/**\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t *\\n\\t * Bleach bypass shader [http://en.wikipedia.org/wiki/Bleach_bypass]\\n\\t * - based on Nvidia example\\n\\t * http://developer.download.nvidia.com/shaderlibrary/webpages/shader_library.html#post_bleach_bypass\\n\\t */\\n\\n\\tTHREE.BleachBypassShader = {\\n\\n\\t\\tuniforms: {\\n\\n\\t\\t\\t\\\"tDiffuse\\\": { type: \\\"t\\\", value: null },\\n\\t\\t\\t\\\"opacity\\\":  { type: \\\"f\\\", value: 1.0 }\\n\\n\\t\\t},\\n\\n\\t\\tvertexShader: [\\n\\n\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\n\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t\\\"vUv = uv;\\\",\\n\\t\\t\\t\\t\\\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\\",\\n\\n\\t\\t\\t\\\"}\\\"\\n\\n\\t\\t].join( \\\"\\\\n\\\" ),\\n\\n\\t\\tfragmentShader: [\\n\\n\\t\\t\\t\\\"uniform float opacity;\\\",\\n\\n\\t\\t\\t\\\"uniform sampler2D tDiffuse;\\\",\\n\\n\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\n\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t\\\"vec4 base = texture2D( tDiffuse, vUv );\\\",\\n\\n\\t\\t\\t\\t\\\"vec3 lumCoeff = vec3( 0.25, 0.65, 0.1 );\\\",\\n\\t\\t\\t\\t\\\"float lum = dot( lumCoeff, base.rgb );\\\",\\n\\t\\t\\t\\t\\\"vec3 blend = vec3( lum );\\\",\\n\\n\\t\\t\\t\\t\\\"float L = min( 1.0, max( 0.0, 10.0 * ( lum - 0.45 ) ) );\\\",\\n\\n\\t\\t\\t\\t\\\"vec3 result1 = 2.0 * base.rgb * blend;\\\",\\n\\t\\t\\t\\t\\\"vec3 result2 = 1.0 - 2.0 * ( 1.0 - blend ) * ( 1.0 - base.rgb );\\\",\\n\\n\\t\\t\\t\\t\\\"vec3 newColor = mix( result1, result2, L );\\\",\\n\\n\\t\\t\\t\\t\\\"float A2 = opacity * base.a;\\\",\\n\\t\\t\\t\\t\\\"vec3 mixRGB = A2 * newColor.rgb;\\\",\\n\\t\\t\\t\\t\\\"mixRGB += ( ( 1.0 - A2 ) * base.rgb );\\\",\\n\\n\\t\\t\\t\\t\\\"gl_FragColor = vec4( mixRGB, base.a );\\\",\\n\\n\\t\\t\\t\\\"}\\\"\\n\\n\\t\\t].join( \\\"\\\\n\\\" )\\n\\n\\t};\\n\\n}\\n\",\"module.exports = function( THREE ){\\n\\t/**\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t *\\n\\t * Blend two textures\\n\\t */\\n\\n\\tTHREE.BlendShader = {\\n\\n\\t\\tuniforms: {\\n\\n\\t\\t\\t\\\"tDiffuse1\\\": { type: \\\"t\\\", value: null },\\n\\t\\t\\t\\\"tDiffuse2\\\": { type: \\\"t\\\", value: null },\\n\\t\\t\\t\\\"mixRatio\\\":  { type: \\\"f\\\", value: 0.5 },\\n\\t\\t\\t\\\"opacity\\\":   { type: \\\"f\\\", value: 1.0 }\\n\\n\\t\\t},\\n\\n\\t\\tvertexShader: [\\n\\n\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\n\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t\\\"vUv = uv;\\\",\\n\\t\\t\\t\\t\\\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\\",\\n\\n\\t\\t\\t\\\"}\\\"\\n\\n\\t\\t].join( \\\"\\\\n\\\" ),\\n\\n\\t\\tfragmentShader: [\\n\\n\\t\\t\\t\\\"uniform float opacity;\\\",\\n\\t\\t\\t\\\"uniform float mixRatio;\\\",\\n\\n\\t\\t\\t\\\"uniform sampler2D tDiffuse1;\\\",\\n\\t\\t\\t\\\"uniform sampler2D tDiffuse2;\\\",\\n\\n\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\n\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t\\\"vec4 texel1 = texture2D( tDiffuse1, vUv );\\\",\\n\\t\\t\\t\\t\\\"vec4 texel2 = texture2D( tDiffuse2, vUv );\\\",\\n\\t\\t\\t\\t\\\"gl_FragColor = opacity * mix( texel1, texel2, mixRatio );\\\",\\n\\n\\t\\t\\t\\\"}\\\"\\n\\n\\t\\t].join( \\\"\\\\n\\\" )\\n\\n\\t};\\n\\n}\",\"module.exports = function( THREE ){\\n\\n\\t/**\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t */\\n\\n\\tTHREE.BloomPass = function ( strength, kernelSize, sigma, resolution ) {\\n\\n\\t\\tstrength = ( strength !== undefined ) ? strength : 1;\\n\\t\\tkernelSize = ( kernelSize !== undefined ) ? kernelSize : 25;\\n\\t\\tsigma = ( sigma !== undefined ) ? sigma : 4.0;\\n\\t\\tresolution = ( resolution !== undefined ) ? resolution : 256;\\n\\n\\t\\t// render targets\\n\\n\\t\\tvar pars = { minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, format: THREE.RGBFormat };\\n\\n\\t\\tthis.renderTargetX = new THREE.WebGLRenderTarget( resolution, resolution, pars );\\n\\t\\tthis.renderTargetY = new THREE.WebGLRenderTarget( resolution, resolution, pars );\\n\\n\\t\\t// copy material\\n\\n\\t\\tif ( THREE.CopyShader === undefined )\\n\\t\\t\\tconsole.error( \\\"THREE.BloomPass relies on THREE.CopyShader\\\" );\\n\\n\\t\\tvar copyShader = THREE.CopyShader;\\n\\n\\t\\tthis.copyUniforms = THREE.UniformsUtils.clone( copyShader.uniforms );\\n\\n\\t\\tthis.copyUniforms[ \\\"opacity\\\" ].value = strength;\\n\\n\\t\\tthis.materialCopy = new THREE.ShaderMaterial( {\\n\\n\\t\\t\\tuniforms: this.copyUniforms,\\n\\t\\t\\tvertexShader: copyShader.vertexShader,\\n\\t\\t\\tfragmentShader: copyShader.fragmentShader,\\n\\t\\t\\tblending: THREE.AdditiveBlending,\\n\\t\\t\\ttransparent: true\\n\\n\\t\\t} );\\n\\n\\t\\t// convolution material\\n\\n\\t\\tif ( THREE.ConvolutionShader === undefined )\\n\\t\\t\\tconsole.error( \\\"THREE.BloomPass relies on THREE.ConvolutionShader\\\" );\\n\\n\\t\\tvar convolutionShader = THREE.ConvolutionShader;\\n\\n\\t\\tthis.convolutionUniforms = THREE.UniformsUtils.clone( convolutionShader.uniforms );\\n\\n\\t\\tthis.convolutionUniforms[ \\\"uImageIncrement\\\" ].value = THREE.BloomPass.blurX;\\n\\t\\tthis.convolutionUniforms[ \\\"cKernel\\\" ].value = THREE.ConvolutionShader.buildKernel( sigma );\\n\\n\\t\\tthis.materialConvolution = new THREE.ShaderMaterial( {\\n\\n\\t\\t\\tuniforms: this.convolutionUniforms,\\n\\t\\t\\tvertexShader:  convolutionShader.vertexShader,\\n\\t\\t\\tfragmentShader: convolutionShader.fragmentShader,\\n\\t\\t\\tdefines: {\\n\\t\\t\\t\\t\\\"KERNEL_SIZE_FLOAT\\\": kernelSize.toFixed( 1 ),\\n\\t\\t\\t\\t\\\"KERNEL_SIZE_INT\\\": kernelSize.toFixed( 0 )\\n\\t\\t\\t}\\n\\n\\t\\t} );\\n\\n\\t\\tthis.enabled = true;\\n\\t\\tthis.needsSwap = false;\\n\\t\\tthis.clear = false;\\n\\n\\n\\t\\tthis.camera = new THREE.OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\\n\\t\\tthis.scene  = new THREE.Scene();\\n\\n\\t\\tthis.quad = new THREE.Mesh( new THREE.PlaneBufferGeometry( 2, 2 ), null );\\n\\t\\tthis.scene.add( this.quad );\\n\\n\\t};\\n\\n\\tTHREE.BloomPass.prototype = {\\n\\n\\t\\trender: function ( renderer, writeBuffer, readBuffer, delta, maskActive ) {\\n\\n\\t\\t\\tif ( maskActive ) renderer.context.disable( renderer.context.STENCIL_TEST );\\n\\n\\t\\t\\t// Render quad with blured scene into texture (convolution pass 1)\\n\\n\\t\\t\\tthis.quad.material = this.materialConvolution;\\n\\n\\t\\t\\tthis.convolutionUniforms[ \\\"tDiffuse\\\" ].value = readBuffer;\\n\\t\\t\\tthis.convolutionUniforms[ \\\"uImageIncrement\\\" ].value = THREE.BloomPass.blurX;\\n\\n\\t\\t\\trenderer.render( this.scene, this.camera, this.renderTargetX, true );\\n\\n\\n\\t\\t\\t// Render quad with blured scene into texture (convolution pass 2)\\n\\n\\t\\t\\tthis.convolutionUniforms[ \\\"tDiffuse\\\" ].value = this.renderTargetX;\\n\\t\\t\\tthis.convolutionUniforms[ \\\"uImageIncrement\\\" ].value = THREE.BloomPass.blurY;\\n\\n\\t\\t\\trenderer.render( this.scene, this.camera, this.renderTargetY, true );\\n\\n\\t\\t\\t// Render original scene with superimposed blur to texture\\n\\n\\t\\t\\tthis.quad.material = this.materialCopy;\\n\\n\\t\\t\\tthis.copyUniforms[ \\\"tDiffuse\\\" ].value = this.renderTargetY;\\n\\n\\t\\t\\tif ( maskActive ) renderer.context.enable( renderer.context.STENCIL_TEST );\\n\\n\\t\\t\\trenderer.render( this.scene, this.camera, readBuffer, this.clear );\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\tTHREE.BloomPass.blurX = new THREE.Vector2( 0.001953125, 0.0 );\\n\\tTHREE.BloomPass.blurY = new THREE.Vector2( 0.0, 0.001953125 );\\n\\n};\\n\",\"module.exports = function( THREE ){\\n\\n\\t/**\\n\\t * Depth-of-field post-process with bokeh shader\\n\\t */\\n\\n\\n\\tTHREE.BokehPass = function ( scene, camera, params ) {\\n\\n\\t\\tthis.scene = scene;\\n\\t\\tthis.camera = camera;\\n\\n\\t\\tvar focus = ( params.focus !== undefined ) ? params.focus : 1.0;\\n\\t\\tvar aspect = ( params.aspect !== undefined ) ? params.aspect : camera.aspect;\\n\\t\\tvar aperture = ( params.aperture !== undefined ) ? params.aperture : 0.025;\\n\\t\\tvar maxblur = ( params.maxblur !== undefined ) ? params.maxblur : 1.0;\\n\\n\\t\\t// render targets\\n\\n\\t\\tvar width = params.width || window.innerWidth || 1;\\n\\t\\tvar height = params.height || window.innerHeight || 1;\\n\\n\\t\\tthis.renderTargetColor = new THREE.WebGLRenderTarget( width, height, {\\n\\t\\t\\tminFilter: THREE.LinearFilter,\\n\\t\\t\\tmagFilter: THREE.LinearFilter,\\n\\t\\t\\tformat: THREE.RGBFormat\\n\\t\\t} );\\n\\n\\t\\tthis.renderTargetDepth = this.renderTargetColor.clone();\\n\\n\\t\\t// depth material\\n\\n\\t\\tthis.materialDepth = new THREE.MeshDepthMaterial();\\n\\n\\t\\t// bokeh material\\n\\n\\t\\tif ( THREE.BokehShader === undefined ) {\\n\\n\\t\\t\\tconsole.error( \\\"THREE.BokehPass relies on THREE.BokehShader\\\" );\\n\\n\\t\\t}\\n\\t\\t\\n\\t\\tvar bokehShader = THREE.BokehShader;\\n\\t\\tvar bokehUniforms = THREE.UniformsUtils.clone( bokehShader.uniforms );\\n\\n\\t\\tbokehUniforms[ \\\"tDepth\\\" ].value = this.renderTargetDepth;\\n\\n\\t\\tbokehUniforms[ \\\"focus\\\" ].value = focus;\\n\\t\\tbokehUniforms[ \\\"aspect\\\" ].value = aspect;\\n\\t\\tbokehUniforms[ \\\"aperture\\\" ].value = aperture;\\n\\t\\tbokehUniforms[ \\\"maxblur\\\" ].value = maxblur;\\n\\n\\t\\tthis.materialBokeh = new THREE.ShaderMaterial( {\\n\\t\\t\\tuniforms: bokehUniforms,\\n\\t\\t\\tvertexShader: bokehShader.vertexShader,\\n\\t\\t\\tfragmentShader: bokehShader.fragmentShader\\n\\t\\t} );\\n\\n\\t\\tthis.uniforms = bokehUniforms;\\n\\t\\tthis.enabled = true;\\n\\t\\tthis.needsSwap = false;\\n\\t\\tthis.renderToScreen = false;\\n\\t\\tthis.clear = false;\\n\\n\\t\\tthis.camera2 = new THREE.OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\\n\\t\\tthis.scene2  = new THREE.Scene();\\n\\n\\t\\tthis.quad2 = new THREE.Mesh( new THREE.PlaneBufferGeometry( 2, 2 ), null );\\n\\t\\tthis.scene2.add( this.quad2 );\\n\\n\\t};\\n\\n\\tTHREE.BokehPass.prototype = {\\n\\n\\t\\trender: function ( renderer, writeBuffer, readBuffer, delta, maskActive ) {\\n\\n\\t\\t\\tthis.quad2.material = this.materialBokeh;\\n\\n\\t\\t\\t// Render depth into texture\\n\\n\\t\\t\\tthis.scene.overrideMaterial = this.materialDepth;\\n\\n\\t\\t\\trenderer.render( this.scene, this.camera, this.renderTargetDepth, true );\\n\\n\\t\\t\\t// Render bokeh composite\\n\\n\\t\\t\\tthis.uniforms[ \\\"tColor\\\" ].value = readBuffer;\\n\\n\\t\\t\\tif ( this.renderToScreen ) {\\n\\n\\t\\t\\t\\trenderer.render( this.scene2, this.camera2 );\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\trenderer.render( this.scene2, this.camera2, writeBuffer, this.clear );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.scene.overrideMaterial = null;\\n\\n\\t\\t}\\n\\n\\t};\\n\\n};\\n\\n\",\"module.exports = function( THREE ){\\n\\t/**\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t *\\n\\t * Depth-of-field shader with bokeh\\n\\t * ported from GLSL shader by Martins Upitis\\n\\t * http://artmartinsh.blogspot.com/2010/02/glsl-lens-blur-filter-with-bokeh.html\\n\\t */\\n\\n\\tTHREE.BokehShader = {\\n\\n\\t\\tuniforms: {\\n\\n\\t\\t\\t\\\"tColor\\\":   { type: \\\"t\\\", value: null },\\n\\t\\t\\t\\\"tDepth\\\":   { type: \\\"t\\\", value: null },\\n\\t\\t\\t\\\"focus\\\":    { type: \\\"f\\\", value: 1.0 },\\n\\t\\t\\t\\\"aspect\\\":   { type: \\\"f\\\", value: 1.0 },\\n\\t\\t\\t\\\"aperture\\\": { type: \\\"f\\\", value: 0.025 },\\n\\t\\t\\t\\\"maxblur\\\":  { type: \\\"f\\\", value: 1.0 }\\n\\n\\t\\t},\\n\\n\\t\\tvertexShader: [\\n\\n\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\n\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t\\\"vUv = uv;\\\",\\n\\t\\t\\t\\t\\\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\\",\\n\\n\\t\\t\\t\\\"}\\\"\\n\\n\\t\\t].join( \\\"\\\\n\\\" ),\\n\\n\\t\\tfragmentShader: [\\n\\n\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\n\\t\\t\\t\\\"uniform sampler2D tColor;\\\",\\n\\t\\t\\t\\\"uniform sampler2D tDepth;\\\",\\n\\n\\t\\t\\t\\\"uniform float maxblur;\\\",  // max blur amount\\n\\t\\t\\t\\\"uniform float aperture;\\\", // aperture - bigger values for shallower depth of field\\n\\n\\t\\t\\t\\\"uniform float focus;\\\",\\n\\t\\t\\t\\\"uniform float aspect;\\\",\\n\\n\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t\\\"vec2 aspectcorrect = vec2( 1.0, aspect );\\\",\\n\\n\\t\\t\\t\\t\\\"vec4 depth1 = texture2D( tDepth, vUv );\\\",\\n\\n\\t\\t\\t\\t\\\"float factor = depth1.x - focus;\\\",\\n\\n\\t\\t\\t\\t\\\"vec2 dofblur = vec2 ( clamp( factor * aperture, -maxblur, maxblur ) );\\\",\\n\\n\\t\\t\\t\\t\\\"vec2 dofblur9 = dofblur * 0.9;\\\",\\n\\t\\t\\t\\t\\\"vec2 dofblur7 = dofblur * 0.7;\\\",\\n\\t\\t\\t\\t\\\"vec2 dofblur4 = dofblur * 0.4;\\\",\\n\\n\\t\\t\\t\\t\\\"vec4 col = vec4( 0.0 );\\\",\\n\\n\\t\\t\\t\\t\\\"col += texture2D( tColor, vUv.xy );\\\",\\n\\t\\t\\t\\t\\\"col += texture2D( tColor, vUv.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur );\\\",\\n\\t\\t\\t\\t\\\"col += texture2D( tColor, vUv.xy + ( vec2(  0.15,  0.37 ) * aspectcorrect ) * dofblur );\\\",\\n\\t\\t\\t\\t\\\"col += texture2D( tColor, vUv.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur );\\\",\\n\\t\\t\\t\\t\\\"col += texture2D( tColor, vUv.xy + ( vec2( -0.37,  0.15 ) * aspectcorrect ) * dofblur );\\\",\\n\\t\\t\\t\\t\\\"col += texture2D( tColor, vUv.xy + ( vec2(  0.40,  0.0  ) * aspectcorrect ) * dofblur );\\\",\\n\\t\\t\\t\\t\\\"col += texture2D( tColor, vUv.xy + ( vec2(  0.37, -0.15 ) * aspectcorrect ) * dofblur );\\\",\\n\\t\\t\\t\\t\\\"col += texture2D( tColor, vUv.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur );\\\",\\n\\t\\t\\t\\t\\\"col += texture2D( tColor, vUv.xy + ( vec2( -0.15, -0.37 ) * aspectcorrect ) * dofblur );\\\",\\n\\t\\t\\t\\t\\\"col += texture2D( tColor, vUv.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur );\\\",\\n\\t\\t\\t\\t\\\"col += texture2D( tColor, vUv.xy + ( vec2( -0.15,  0.37 ) * aspectcorrect ) * dofblur );\\\",\\n\\t\\t\\t\\t\\\"col += texture2D( tColor, vUv.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur );\\\",\\n\\t\\t\\t\\t\\\"col += texture2D( tColor, vUv.xy + ( vec2(  0.37,  0.15 ) * aspectcorrect ) * dofblur );\\\",\\n\\t\\t\\t\\t\\\"col += texture2D( tColor, vUv.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur );\\\",\\n\\t\\t\\t\\t\\\"col += texture2D( tColor, vUv.xy + ( vec2( -0.37, -0.15 ) * aspectcorrect ) * dofblur );\\\",\\n\\t\\t\\t\\t\\\"col += texture2D( tColor, vUv.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur );\\\",\\n\\t\\t\\t\\t\\\"col += texture2D( tColor, vUv.xy + ( vec2(  0.15, -0.37 ) * aspectcorrect ) * dofblur );\\\",\\n\\n\\t\\t\\t\\t\\\"col += texture2D( tColor, vUv.xy + ( vec2(  0.15,  0.37 ) * aspectcorrect ) * dofblur9 );\\\",\\n\\t\\t\\t\\t\\\"col += texture2D( tColor, vUv.xy + ( vec2( -0.37,  0.15 ) * aspectcorrect ) * dofblur9 );\\\",\\n\\t\\t\\t\\t\\\"col += texture2D( tColor, vUv.xy + ( vec2(  0.37, -0.15 ) * aspectcorrect ) * dofblur9 );\\\",\\n\\t\\t\\t\\t\\\"col += texture2D( tColor, vUv.xy + ( vec2( -0.15, -0.37 ) * aspectcorrect ) * dofblur9 );\\\",\\n\\t\\t\\t\\t\\\"col += texture2D( tColor, vUv.xy + ( vec2( -0.15,  0.37 ) * aspectcorrect ) * dofblur9 );\\\",\\n\\t\\t\\t\\t\\\"col += texture2D( tColor, vUv.xy + ( vec2(  0.37,  0.15 ) * aspectcorrect ) * dofblur9 );\\\",\\n\\t\\t\\t\\t\\\"col += texture2D( tColor, vUv.xy + ( vec2( -0.37, -0.15 ) * aspectcorrect ) * dofblur9 );\\\",\\n\\t\\t\\t\\t\\\"col += texture2D( tColor, vUv.xy + ( vec2(  0.15, -0.37 ) * aspectcorrect ) * dofblur9 );\\\",\\n\\n\\t\\t\\t\\t\\\"col += texture2D( tColor, vUv.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur7 );\\\",\\n\\t\\t\\t\\t\\\"col += texture2D( tColor, vUv.xy + ( vec2(  0.40,  0.0  ) * aspectcorrect ) * dofblur7 );\\\",\\n\\t\\t\\t\\t\\\"col += texture2D( tColor, vUv.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur7 );\\\",\\n\\t\\t\\t\\t\\\"col += texture2D( tColor, vUv.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur7 );\\\",\\n\\t\\t\\t\\t\\\"col += texture2D( tColor, vUv.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur7 );\\\",\\n\\t\\t\\t\\t\\\"col += texture2D( tColor, vUv.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur7 );\\\",\\n\\t\\t\\t\\t\\\"col += texture2D( tColor, vUv.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur7 );\\\",\\n\\t\\t\\t\\t\\\"col += texture2D( tColor, vUv.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur7 );\\\",\\n\\n\\t\\t\\t\\t\\\"col += texture2D( tColor, vUv.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur4 );\\\",\\n\\t\\t\\t\\t\\\"col += texture2D( tColor, vUv.xy + ( vec2(  0.4,   0.0  ) * aspectcorrect ) * dofblur4 );\\\",\\n\\t\\t\\t\\t\\\"col += texture2D( tColor, vUv.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur4 );\\\",\\n\\t\\t\\t\\t\\\"col += texture2D( tColor, vUv.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur4 );\\\",\\n\\t\\t\\t\\t\\\"col += texture2D( tColor, vUv.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur4 );\\\",\\n\\t\\t\\t\\t\\\"col += texture2D( tColor, vUv.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur4 );\\\",\\n\\t\\t\\t\\t\\\"col += texture2D( tColor, vUv.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur4 );\\\",\\n\\t\\t\\t\\t\\\"col += texture2D( tColor, vUv.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur4 );\\\",\\n\\n\\t\\t\\t\\t\\\"gl_FragColor = col / 41.0;\\\",\\n\\t\\t\\t\\t\\\"gl_FragColor.a = 1.0;\\\",\\n\\n\\t\\t\\t\\\"}\\\"\\n\\n\\t\\t].join( \\\"\\\\n\\\" )\\n\\n\\t};\\n\\n}\\n\",\"module.exports = function( THREE ){\\n\\t/**\\n\\t * @author zz85 / https://github.com/zz85 | twitter.com/blurspline\\n\\t *\\n\\t * Depth-of-field shader with bokeh\\n\\t * ported from GLSL shader by Martins Upitis\\n\\t * http://blenderartists.org/forum/showthread.php?237488-GLSL-depth-of-field-with-bokeh-v2-4-(update)\\n\\t *\\n\\t * Requires #define RINGS and SAMPLES integers\\n\\t */\\n\\n\\n\\n\\tTHREE.BokehShader = {\\n\\n\\t\\tuniforms: {\\n\\n\\t\\t\\t\\\"textureWidth\\\":  { type: \\\"f\\\", value: 1.0 },\\n\\t\\t\\t\\\"textureHeight\\\":  { type: \\\"f\\\", value: 1.0 },\\n\\n\\t\\t\\t\\\"focalDepth\\\":   { type: \\\"f\\\", value: 1.0 },\\n\\t\\t\\t\\\"focalLength\\\":   { type: \\\"f\\\", value: 24.0 },\\n\\t\\t\\t\\\"fstop\\\": { type: \\\"f\\\", value: 0.9 },\\n\\n\\t\\t\\t\\\"tColor\\\":   { type: \\\"t\\\", value: null },\\n\\t\\t\\t\\\"tDepth\\\":   { type: \\\"t\\\", value: null },\\n\\n\\t\\t\\t\\\"maxblur\\\":  { type: \\\"f\\\", value: 1.0 },\\n\\n\\t\\t\\t\\\"showFocus\\\":   { type: \\\"i\\\", value: 0 },\\n\\t\\t\\t\\\"manualdof\\\":   { type: \\\"i\\\", value: 0 },\\n\\t\\t\\t\\\"vignetting\\\":   { type: \\\"i\\\", value: 0 },\\n\\t\\t\\t\\\"depthblur\\\":   { type: \\\"i\\\", value: 0 },\\n\\n\\t\\t\\t\\\"threshold\\\":  { type: \\\"f\\\", value: 0.5 },\\n\\t\\t\\t\\\"gain\\\":  { type: \\\"f\\\", value: 2.0 },\\n\\t\\t\\t\\\"bias\\\":  { type: \\\"f\\\", value: 0.5 },\\n\\t\\t\\t\\\"fringe\\\":  { type: \\\"f\\\", value: 0.7 },\\n\\n\\t\\t\\t\\\"znear\\\":  { type: \\\"f\\\", value: 0.1 },\\n\\t\\t\\t\\\"zfar\\\":  { type: \\\"f\\\", value: 100 },\\n\\n\\t\\t\\t\\\"noise\\\":  { type: \\\"i\\\", value: 1 },\\n\\t\\t\\t\\\"dithering\\\":  { type: \\\"f\\\", value: 0.0001 },\\n\\t\\t\\t\\\"pentagon\\\": { type: \\\"i\\\", value: 0 },\\n\\n\\t\\t\\t\\\"shaderFocus\\\":  { type: \\\"i\\\", value: 1 },\\n\\t\\t\\t\\\"focusCoords\\\":  { type: \\\"v2\\\", value: new THREE.Vector2() },\\n\\n\\n\\t\\t},\\n\\n\\t\\tvertexShader: [\\n\\n\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\n\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t\\\"vUv = uv;\\\",\\n\\t\\t\\t\\t\\\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\\",\\n\\n\\t\\t\\t\\\"}\\\"\\n\\n\\t\\t].join( \\\"\\\\n\\\" ),\\n\\n\\t\\tfragmentShader: [\\n\\n\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\n\\t\\t\\t\\\"uniform sampler2D tColor;\\\",\\n\\t\\t\\t\\\"uniform sampler2D tDepth;\\\",\\n\\t\\t\\t\\\"uniform float textureWidth;\\\",\\n\\t\\t\\t\\\"uniform float textureHeight;\\\",\\n\\n\\t\\t\\t\\\"const float PI = 3.14159265;\\\",\\n\\n\\t\\t\\t\\\"uniform float focalDepth;  //focal distance value in meters, but you may use autofocus option below\\\",\\n\\t\\t\\t\\\"uniform float focalLength; //focal length in mm\\\",\\n\\t\\t\\t\\\"uniform float fstop; //f-stop value\\\",\\n\\t\\t\\t\\\"uniform bool showFocus; //show debug focus point and focal range (red = focal point, green = focal range)\\\",\\n\\n\\t\\t\\t\\\"/*\\\",\\n\\t\\t\\t\\\"make sure that these two values are the same for your camera, otherwise distances will be wrong.\\\",\\n\\t\\t\\t\\\"*/\\\",\\n\\n\\t\\t\\t\\\"uniform float znear; // camera clipping start\\\",\\n\\t\\t\\t\\\"uniform float zfar; // camera clipping end\\\",\\n\\n\\t\\t\\t\\\"//------------------------------------------\\\",\\n\\t\\t\\t\\\"//user variables\\\",\\n\\n\\t\\t\\t\\\"const int samples = SAMPLES; //samples on the first ring\\\",\\n\\t\\t\\t\\\"const int rings = RINGS; //ring count\\\",\\n\\n\\t\\t\\t\\\"const int maxringsamples = rings * samples;\\\",\\n\\n\\t\\t\\t\\\"uniform bool manualdof; // manual dof calculation\\\",\\n\\t\\t\\t\\\"float ndofstart = 1.0; // near dof blur start\\\",\\n\\t\\t\\t\\\"float ndofdist = 2.0; // near dof blur falloff distance\\\",\\n\\t\\t\\t\\\"float fdofstart = 1.0; // far dof blur start\\\",\\n\\t\\t\\t\\\"float fdofdist = 3.0; // far dof blur falloff distance\\\",\\n\\n\\t\\t\\t\\\"float CoC = 0.03; //circle of confusion size in mm (35mm film = 0.03mm)\\\",\\n\\n\\t\\t\\t\\\"uniform bool vignetting; // use optical lens vignetting\\\",\\n\\n\\t\\t\\t\\\"float vignout = 1.3; // vignetting outer border\\\",\\n\\t\\t\\t\\\"float vignin = 0.0; // vignetting inner border\\\",\\n\\t\\t\\t\\\"float vignfade = 22.0; // f-stops till vignete fades\\\",\\n\\n\\t\\t\\t\\\"uniform bool shaderFocus;\\\",\\n\\t\\t\\t\\\"// disable if you use external focalDepth value\\\",\\n\\n\\t\\t\\t\\\"uniform vec2 focusCoords;\\\",\\n\\t\\t\\t\\\"// autofocus point on screen (0.0,0.0 - left lower corner, 1.0,1.0 - upper right)\\\",\\n\\t\\t\\t\\\"// if center of screen use vec2(0.5, 0.5);\\\",\\n\\n\\t\\t\\t\\\"uniform float maxblur;\\\",\\n\\t\\t\\t\\\"//clamp value of max blur (0.0 = no blur, 1.0 default)\\\",\\n\\n\\t\\t\\t\\\"uniform float threshold; // highlight threshold;\\\",\\n\\t\\t\\t\\\"uniform float gain; // highlight gain;\\\",\\n\\n\\t\\t\\t\\\"uniform float bias; // bokeh edge bias\\\",\\n\\t\\t\\t\\\"uniform float fringe; // bokeh chromatic aberration / fringing\\\",\\n\\n\\t\\t\\t\\\"uniform bool noise; //use noise instead of pattern for sample dithering\\\",\\n\\n\\t\\t\\t\\\"uniform float dithering;\\\",\\n\\n\\t\\t\\t\\\"uniform bool depthblur; // blur the depth buffer\\\",\\n\\t\\t\\t\\\"float dbsize = 1.25; // depth blur size\\\",\\n\\n\\t\\t\\t\\\"/*\\\",\\n\\t\\t\\t\\\"next part is experimental\\\",\\n\\t\\t\\t\\\"not looking good with small sample and ring count\\\",\\n\\t\\t\\t\\\"looks okay starting from samples = 4, rings = 4\\\",\\n\\t\\t\\t\\\"*/\\\",\\n\\n\\t\\t\\t\\\"uniform bool pentagon; //use pentagon as bokeh shape?\\\",\\n\\t\\t\\t\\\"float feather = 0.4; //pentagon shape feather\\\",\\n\\n\\t\\t\\t\\\"//------------------------------------------\\\",\\n\\n\\t\\t\\t\\\"float penta(vec2 coords) {\\\",\\n\\t\\t\\t\\t\\\"//pentagonal shape\\\",\\n\\t\\t\\t\\t\\\"float scale = float(rings) - 1.3;\\\",\\n\\t\\t\\t\\t\\\"vec4  HS0 = vec4( 1.0,         0.0,         0.0,  1.0);\\\",\\n\\t\\t\\t\\t\\\"vec4  HS1 = vec4( 0.309016994, 0.951056516, 0.0,  1.0);\\\",\\n\\t\\t\\t\\t\\\"vec4  HS2 = vec4(-0.809016994, 0.587785252, 0.0,  1.0);\\\",\\n\\t\\t\\t\\t\\\"vec4  HS3 = vec4(-0.809016994,-0.587785252, 0.0,  1.0);\\\",\\n\\t\\t\\t\\t\\\"vec4  HS4 = vec4( 0.309016994,-0.951056516, 0.0,  1.0);\\\",\\n\\t\\t\\t\\t\\\"vec4  HS5 = vec4( 0.0        ,0.0         , 1.0,  1.0);\\\",\\n\\n\\t\\t\\t\\t\\\"vec4  one = vec4( 1.0 );\\\",\\n\\n\\t\\t\\t\\t\\\"vec4 P = vec4((coords),vec2(scale, scale));\\\",\\n\\n\\t\\t\\t\\t\\\"vec4 dist = vec4(0.0);\\\",\\n\\t\\t\\t\\t\\\"float inorout = -4.0;\\\",\\n\\n\\t\\t\\t\\t\\\"dist.x = dot( P, HS0 );\\\",\\n\\t\\t\\t\\t\\\"dist.y = dot( P, HS1 );\\\",\\n\\t\\t\\t\\t\\\"dist.z = dot( P, HS2 );\\\",\\n\\t\\t\\t\\t\\\"dist.w = dot( P, HS3 );\\\",\\n\\n\\t\\t\\t\\t\\\"dist = smoothstep( -feather, feather, dist );\\\",\\n\\n\\t\\t\\t\\t\\\"inorout += dot( dist, one );\\\",\\n\\n\\t\\t\\t\\t\\\"dist.x = dot( P, HS4 );\\\",\\n\\t\\t\\t\\t\\\"dist.y = HS5.w - abs( P.z );\\\",\\n\\n\\t\\t\\t\\t\\\"dist = smoothstep( -feather, feather, dist );\\\",\\n\\t\\t\\t\\t\\\"inorout += dist.x;\\\",\\n\\n\\t\\t\\t\\t\\\"return clamp( inorout, 0.0, 1.0 );\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\n\\t\\t\\t\\\"float bdepth(vec2 coords) {\\\",\\n\\t\\t\\t\\t\\\"// Depth buffer blur\\\",\\n\\t\\t\\t\\t\\\"float d = 0.0;\\\",\\n\\t\\t\\t\\t\\\"float kernel[9];\\\",\\n\\t\\t\\t\\t\\\"vec2 offset[9];\\\",\\n\\n\\t\\t\\t\\t\\\"vec2 wh = vec2(1.0/textureWidth,1.0/textureHeight) * dbsize;\\\",\\n\\n\\t\\t\\t\\t\\\"offset[0] = vec2(-wh.x,-wh.y);\\\",\\n\\t\\t\\t\\t\\\"offset[1] = vec2( 0.0, -wh.y);\\\",\\n\\t\\t\\t\\t\\\"offset[2] = vec2( wh.x -wh.y);\\\",\\n\\n\\t\\t\\t\\t\\\"offset[3] = vec2(-wh.x,  0.0);\\\",\\n\\t\\t\\t\\t\\\"offset[4] = vec2( 0.0,   0.0);\\\",\\n\\t\\t\\t\\t\\\"offset[5] = vec2( wh.x,  0.0);\\\",\\n\\n\\t\\t\\t\\t\\\"offset[6] = vec2(-wh.x, wh.y);\\\",\\n\\t\\t\\t\\t\\\"offset[7] = vec2( 0.0,  wh.y);\\\",\\n\\t\\t\\t\\t\\\"offset[8] = vec2( wh.x, wh.y);\\\",\\n\\n\\t\\t\\t\\t\\\"kernel[0] = 1.0/16.0;   kernel[1] = 2.0/16.0;   kernel[2] = 1.0/16.0;\\\",\\n\\t\\t\\t\\t\\\"kernel[3] = 2.0/16.0;   kernel[4] = 4.0/16.0;   kernel[5] = 2.0/16.0;\\\",\\n\\t\\t\\t\\t\\\"kernel[6] = 1.0/16.0;   kernel[7] = 2.0/16.0;   kernel[8] = 1.0/16.0;\\\",\\n\\n\\n\\t\\t\\t\\t\\\"for( int i=0; i<9; i++ ) {\\\",\\n\\t\\t\\t\\t\\t\\\"float tmp = texture2D(tDepth, coords + offset[i]).r;\\\",\\n\\t\\t\\t\\t\\t\\\"d += tmp * kernel[i];\\\",\\n\\t\\t\\t\\t\\\"}\\\",\\n\\n\\t\\t\\t\\t\\\"return d;\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\n\\n\\t\\t\\t\\\"vec3 color(vec2 coords,float blur) {\\\",\\n\\t\\t\\t\\t\\\"//processing the sample\\\",\\n\\n\\t\\t\\t\\t\\\"vec3 col = vec3(0.0);\\\",\\n\\t\\t\\t\\t\\\"vec2 texel = vec2(1.0/textureWidth,1.0/textureHeight);\\\",\\n\\n\\t\\t\\t\\t\\\"col.r = texture2D(tColor,coords + vec2(0.0,1.0)*texel*fringe*blur).r;\\\",\\n\\t\\t\\t\\t\\\"col.g = texture2D(tColor,coords + vec2(-0.866,-0.5)*texel*fringe*blur).g;\\\",\\n\\t\\t\\t\\t\\\"col.b = texture2D(tColor,coords + vec2(0.866,-0.5)*texel*fringe*blur).b;\\\",\\n\\n\\t\\t\\t\\t\\\"vec3 lumcoeff = vec3(0.299,0.587,0.114);\\\",\\n\\t\\t\\t\\t\\\"float lum = dot(col.rgb, lumcoeff);\\\",\\n\\t\\t\\t\\t\\\"float thresh = max((lum-threshold)*gain, 0.0);\\\",\\n\\t\\t\\t\\t\\\"return col+mix(vec3(0.0),col,thresh*blur);\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\n\\t\\t\\t\\\"vec2 rand(vec2 coord) {\\\",\\n\\t\\t\\t\\t\\\"// generating noise / pattern texture for dithering\\\",\\n\\n\\t\\t\\t\\t\\\"float noiseX = ((fract(1.0-coord.s*(textureWidth/2.0))*0.25)+(fract(coord.t*(textureHeight/2.0))*0.75))*2.0-1.0;\\\",\\n\\t\\t\\t\\t\\\"float noiseY = ((fract(1.0-coord.s*(textureWidth/2.0))*0.75)+(fract(coord.t*(textureHeight/2.0))*0.25))*2.0-1.0;\\\",\\n\\n\\t\\t\\t\\t\\\"if (noise) {\\\",\\n\\t\\t\\t\\t\\t\\\"noiseX = clamp(fract(sin(dot(coord ,vec2(12.9898,78.233))) * 43758.5453),0.0,1.0)*2.0-1.0;\\\",\\n\\t\\t\\t\\t\\t\\\"noiseY = clamp(fract(sin(dot(coord ,vec2(12.9898,78.233)*2.0)) * 43758.5453),0.0,1.0)*2.0-1.0;\\\",\\n\\t\\t\\t\\t\\\"}\\\",\\n\\n\\t\\t\\t\\t\\\"return vec2(noiseX,noiseY);\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\n\\t\\t\\t\\\"vec3 debugFocus(vec3 col, float blur, float depth) {\\\",\\n\\t\\t\\t\\t\\\"float edge = 0.002*depth; //distance based edge smoothing\\\",\\n\\t\\t\\t\\t\\\"float m = clamp(smoothstep(0.0,edge,blur),0.0,1.0);\\\",\\n\\t\\t\\t\\t\\\"float e = clamp(smoothstep(1.0-edge,1.0,blur),0.0,1.0);\\\",\\n\\n\\t\\t\\t\\t\\\"col = mix(col,vec3(1.0,0.5,0.0),(1.0-m)*0.6);\\\",\\n\\t\\t\\t\\t\\\"col = mix(col,vec3(0.0,0.5,1.0),((1.0-e)-(1.0-m))*0.2);\\\",\\n\\n\\t\\t\\t\\t\\\"return col;\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\n\\t\\t\\t\\\"float linearize(float depth) {\\\",\\n\\t\\t\\t\\t\\\"return -zfar * znear / (depth * (zfar - znear) - zfar);\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\n\\n\\t\\t\\t\\\"float vignette() {\\\",\\n\\t\\t\\t\\t\\\"float dist = distance(vUv.xy, vec2(0.5,0.5));\\\",\\n\\t\\t\\t\\t\\\"dist = smoothstep(vignout+(fstop/vignfade), vignin+(fstop/vignfade), dist);\\\",\\n\\t\\t\\t\\t\\\"return clamp(dist,0.0,1.0);\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\n\\t\\t\\t\\\"float gather(float i, float j, int ringsamples, inout vec3 col, float w, float h, float blur) {\\\",\\n\\t\\t\\t\\t\\\"float rings2 = float(rings);\\\",\\n\\t\\t\\t\\t\\\"float step = PI*2.0 / float(ringsamples);\\\",\\n\\t\\t\\t\\t\\\"float pw = cos(j*step)*i;\\\",\\n\\t\\t\\t\\t\\\"float ph = sin(j*step)*i;\\\",\\n\\t\\t\\t\\t\\\"float p = 1.0;\\\",\\n\\t\\t\\t\\t\\\"if (pentagon) {\\\",\\n\\t\\t\\t\\t\\t\\\"p = penta(vec2(pw,ph));\\\",\\n\\t\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\t\\\"col += color(vUv.xy + vec2(pw*w,ph*h), blur) * mix(1.0, i/rings2, bias) * p;\\\",\\n\\t\\t\\t\\t\\\"return 1.0 * mix(1.0, i /rings2, bias) * p;\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\n\\t\\t\\t\\\"void main() {\\\",\\n\\t\\t\\t\\t\\\"//scene depth calculation\\\",\\n\\n\\t\\t\\t\\t\\\"float depth = linearize(texture2D(tDepth,vUv.xy).x);\\\",\\n\\n\\t\\t\\t\\t\\\"// Blur depth?\\\",\\n\\t\\t\\t\\t\\\"if (depthblur) {\\\",\\n\\t\\t\\t\\t\\t\\\"depth = linearize(bdepth(vUv.xy));\\\",\\n\\t\\t\\t\\t\\\"}\\\",\\n\\n\\t\\t\\t\\t\\\"//focal plane calculation\\\",\\n\\n\\t\\t\\t\\t\\\"float fDepth = focalDepth;\\\",\\n\\n\\t\\t\\t\\t\\\"if (shaderFocus) {\\\",\\n\\n\\t\\t\\t\\t\\t\\\"fDepth = linearize(texture2D(tDepth,focusCoords).x);\\\",\\n\\n\\t\\t\\t\\t\\\"}\\\",\\n\\n\\t\\t\\t\\t\\\"// dof blur factor calculation\\\",\\n\\n\\t\\t\\t\\t\\\"float blur = 0.0;\\\",\\n\\n\\t\\t\\t\\t\\\"if (manualdof) {\\\",\\n\\t\\t\\t\\t\\t\\\"float a = depth-fDepth; // Focal plane\\\",\\n\\t\\t\\t\\t\\t\\\"float b = (a-fdofstart)/fdofdist; // Far DoF\\\",\\n\\t\\t\\t\\t\\t\\\"float c = (-a-ndofstart)/ndofdist; // Near Dof\\\",\\n\\t\\t\\t\\t\\t\\\"blur = (a>0.0) ? b : c;\\\",\\n\\t\\t\\t\\t\\\"} else {\\\",\\n\\t\\t\\t\\t\\t\\\"float f = focalLength; // focal length in mm\\\",\\n\\t\\t\\t\\t\\t\\\"float d = fDepth*1000.0; // focal plane in mm\\\",\\n\\t\\t\\t\\t\\t\\\"float o = depth*1000.0; // depth in mm\\\",\\n\\n\\t\\t\\t\\t\\t\\\"float a = (o*f)/(o-f);\\\",\\n\\t\\t\\t\\t\\t\\\"float b = (d*f)/(d-f);\\\",\\n\\t\\t\\t\\t\\t\\\"float c = (d-f)/(d*fstop*CoC);\\\",\\n\\n\\t\\t\\t\\t\\t\\\"blur = abs(a-b)*c;\\\",\\n\\t\\t\\t\\t\\\"}\\\",\\n\\n\\t\\t\\t\\t\\\"blur = clamp(blur,0.0,1.0);\\\",\\n\\n\\t\\t\\t\\t\\\"// calculation of pattern for dithering\\\",\\n\\n\\t\\t\\t\\t\\\"vec2 noise = rand(vUv.xy)*dithering*blur;\\\",\\n\\n\\t\\t\\t\\t\\\"// getting blur x and y step factor\\\",\\n\\n\\t\\t\\t\\t\\\"float w = (1.0/textureWidth)*blur*maxblur+noise.x;\\\",\\n\\t\\t\\t\\t\\\"float h = (1.0/textureHeight)*blur*maxblur+noise.y;\\\",\\n\\n\\t\\t\\t\\t\\\"// calculation of final color\\\",\\n\\n\\t\\t\\t\\t\\\"vec3 col = vec3(0.0);\\\",\\n\\n\\t\\t\\t\\t\\\"if(blur < 0.05) {\\\",\\n\\t\\t\\t\\t\\t\\\"//some optimization thingy\\\",\\n\\t\\t\\t\\t\\t\\\"col = texture2D(tColor, vUv.xy).rgb;\\\",\\n\\t\\t\\t\\t\\\"} else {\\\",\\n\\t\\t\\t\\t\\t\\\"col = texture2D(tColor, vUv.xy).rgb;\\\",\\n\\t\\t\\t\\t\\t\\\"float s = 1.0;\\\",\\n\\t\\t\\t\\t\\t\\\"int ringsamples;\\\",\\n\\n\\t\\t\\t\\t\\t\\\"for (int i = 1; i <= rings; i++) {\\\",\\n\\t\\t\\t\\t\\t\\t\\\"/*unboxstart*/\\\",\\n\\t\\t\\t\\t\\t\\t\\\"ringsamples = i * samples;\\\",\\n\\n\\t\\t\\t\\t\\t\\t\\\"for (int j = 0 ; j < maxringsamples ; j++) {\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"if (j >= ringsamples) break;\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"s += gather(float(i), float(j), ringsamples, col, w, h, blur);\\\",\\n\\t\\t\\t\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\t\\t\\t\\\"/*unboxend*/\\\",\\n\\t\\t\\t\\t\\t\\\"}\\\",\\n\\n\\t\\t\\t\\t\\t\\\"col /= s; //divide by sample count\\\",\\n\\t\\t\\t\\t\\\"}\\\",\\n\\n\\t\\t\\t\\t\\\"if (showFocus) {\\\",\\n\\t\\t\\t\\t\\t\\\"col = debugFocus(col, blur, depth);\\\",\\n\\t\\t\\t\\t\\\"}\\\",\\n\\n\\t\\t\\t\\t\\\"if (vignetting) {\\\",\\n\\t\\t\\t\\t\\t\\\"col *= vignette();\\\",\\n\\t\\t\\t\\t\\\"}\\\",\\n\\n\\t\\t\\t\\t\\\"gl_FragColor.rgb = col;\\\",\\n\\t\\t\\t\\t\\\"gl_FragColor.a = 1.0;\\\",\\n\\t\\t\\t\\\"} \\\"\\n\\n\\t\\t].join( \\\"\\\\n\\\" )\\n\\n\\t};\\n\\n}\\n\",\"module.exports = function( THREE ){\\n\\t/**\\n\\t * @author tapio / http://tapio.github.com/\\n\\t *\\n\\t * Brightness and contrast adjustment\\n\\t * https://github.com/evanw/glfx.js\\n\\t * brightness: -1 to 1 (-1 is solid black, 0 is no change, and 1 is solid white)\\n\\t * contrast: -1 to 1 (-1 is solid gray, 0 is no change, and 1 is maximum contrast)\\n\\t */\\n\\n\\tTHREE.BrightnessContrastShader = {\\n\\n\\t\\tuniforms: {\\n\\n\\t\\t\\t\\\"tDiffuse\\\":   { type: \\\"t\\\", value: null },\\n\\t\\t\\t\\\"brightness\\\": { type: \\\"f\\\", value: 0 },\\n\\t\\t\\t\\\"contrast\\\":   { type: \\\"f\\\", value: 0 }\\n\\n\\t\\t},\\n\\n\\t\\tvertexShader: [\\n\\n\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\n\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t\\\"vUv = uv;\\\",\\n\\n\\t\\t\\t\\t\\\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\\",\\n\\n\\t\\t\\t\\\"}\\\"\\n\\n\\t\\t].join( \\\"\\\\n\\\" ),\\n\\n\\t\\tfragmentShader: [\\n\\n\\t\\t\\t\\\"uniform sampler2D tDiffuse;\\\",\\n\\t\\t\\t\\\"uniform float brightness;\\\",\\n\\t\\t\\t\\\"uniform float contrast;\\\",\\n\\n\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\n\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t\\\"gl_FragColor = texture2D( tDiffuse, vUv );\\\",\\n\\n\\t\\t\\t\\t\\\"gl_FragColor.rgb += brightness;\\\",\\n\\n\\t\\t\\t\\t\\\"if (contrast > 0.0) {\\\",\\n\\t\\t\\t\\t\\t\\\"gl_FragColor.rgb = (gl_FragColor.rgb - 0.5) / (1.0 - contrast) + 0.5;\\\",\\n\\t\\t\\t\\t\\\"} else {\\\",\\n\\t\\t\\t\\t\\t\\\"gl_FragColor.rgb = (gl_FragColor.rgb - 0.5) * (1.0 + contrast) + 0.5;\\\",\\n\\t\\t\\t\\t\\\"}\\\",\\n\\n\\t\\t\\t\\\"}\\\"\\n\\n\\t\\t].join( \\\"\\\\n\\\" )\\n\\n\\t};\\n\\n}\\n\",\"module.exports = function( THREE ){\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t */\\n\\n\\tTHREE.SpriteCanvasMaterial = function ( parameters ) {\\n\\n\\t\\tTHREE.Material.call( this );\\n\\n\\t\\tthis.type = 'SpriteCanvasMaterial';\\n\\n\\t\\tthis.color = new THREE.Color( 0xffffff );\\n\\t\\tthis.program = function ( context, color ) {};\\n\\n\\t\\tthis.setValues( parameters );\\n\\n\\t};\\n\\n\\tTHREE.SpriteCanvasMaterial.prototype = Object.create( THREE.Material.prototype );\\n\\tTHREE.SpriteCanvasMaterial.prototype.constructor = THREE.SpriteCanvasMaterial;\\n\\n\\tTHREE.SpriteCanvasMaterial.prototype.clone = function () {\\n\\n\\t\\tvar material = new THREE.SpriteCanvasMaterial();\\n\\n\\t\\tmaterial.copy( this );\\n\\t\\tmaterial.color.copy( this.color );\\n\\t\\tmaterial.program = this.program;\\n\\n\\t\\treturn material;\\n\\n\\t};\\n\\n\\t//\\n\\n\\tTHREE.CanvasRenderer = function ( parameters ) {\\n\\n\\t\\tconsole.log( 'THREE.CanvasRenderer', THREE.REVISION );\\n\\n\\t\\tparameters = parameters || {};\\n\\n\\t\\tvar _this = this,\\n\\t\\t_renderData, _elements, _lights,\\n\\t\\t_projector = new THREE.Projector(),\\n\\n\\t\\t_canvas = parameters.canvas !== undefined\\n\\t\\t\\t\\t ? parameters.canvas\\n\\t\\t\\t\\t : document.createElement( 'canvas' ),\\n\\n\\t\\t_canvasWidth = _canvas.width,\\n\\t\\t_canvasHeight = _canvas.height,\\n\\t\\t_canvasWidthHalf = Math.floor( _canvasWidth / 2 ),\\n\\t\\t_canvasHeightHalf = Math.floor( _canvasHeight / 2 ),\\n\\n\\t\\t_viewportX = 0,\\n\\t\\t_viewportY = 0,\\n\\t\\t_viewportWidth = _canvasWidth,\\n\\t\\t_viewportHeight = _canvasHeight,\\n\\n\\t\\t_pixelRatio = 1,\\n\\n\\t\\t_context = _canvas.getContext( '2d', {\\n\\t\\t\\talpha: parameters.alpha === true\\n\\t\\t} ),\\n\\n\\t\\t_clearColor = new THREE.Color( 0x000000 ),\\n\\t\\t_clearAlpha = parameters.alpha === true ? 0 : 1,\\n\\n\\t\\t_contextGlobalAlpha = 1,\\n\\t\\t_contextGlobalCompositeOperation = 0,\\n\\t\\t_contextStrokeStyle = null,\\n\\t\\t_contextFillStyle = null,\\n\\t\\t_contextLineWidth = null,\\n\\t\\t_contextLineCap = null,\\n\\t\\t_contextLineJoin = null,\\n\\t\\t_contextLineDash = [],\\n\\n\\t\\t_camera,\\n\\n\\t\\t_v1, _v2, _v3, _v4,\\n\\t\\t_v5 = new THREE.RenderableVertex(),\\n\\t\\t_v6 = new THREE.RenderableVertex(),\\n\\n\\t\\t_v1x, _v1y, _v2x, _v2y, _v3x, _v3y,\\n\\t\\t_v4x, _v4y, _v5x, _v5y, _v6x, _v6y,\\n\\n\\t\\t_color = new THREE.Color(),\\n\\t\\t_color1 = new THREE.Color(),\\n\\t\\t_color2 = new THREE.Color(),\\n\\t\\t_color3 = new THREE.Color(),\\n\\t\\t_color4 = new THREE.Color(),\\n\\n\\t\\t_diffuseColor = new THREE.Color(),\\n\\t\\t_emissiveColor = new THREE.Color(),\\n\\n\\t\\t_lightColor = new THREE.Color(),\\n\\n\\t\\t_patterns = {},\\n\\n\\t\\t_image, _uvs,\\n\\t\\t_uv1x, _uv1y, _uv2x, _uv2y, _uv3x, _uv3y,\\n\\n\\t\\t_clipBox = new THREE.Box2(),\\n\\t\\t_clearBox = new THREE.Box2(),\\n\\t\\t_elemBox = new THREE.Box2(),\\n\\n\\t\\t_ambientLight = new THREE.Color(),\\n\\t\\t_directionalLights = new THREE.Color(),\\n\\t\\t_pointLights = new THREE.Color(),\\n\\n\\t\\t_vector3 = new THREE.Vector3(), // Needed for PointLight\\n\\t\\t_centroid = new THREE.Vector3(),\\n\\t\\t_normal = new THREE.Vector3(),\\n\\t\\t_normalViewMatrix = new THREE.Matrix3();\\n\\n\\t\\t/* TODO\\n\\t\\t_canvas.mozImageSmoothingEnabled = false;\\n\\t\\t_canvas.webkitImageSmoothingEnabled = false;\\n\\t\\t_canvas.msImageSmoothingEnabled = false;\\n\\t\\t_canvas.imageSmoothingEnabled = false;\\n\\t\\t*/\\n\\n\\t\\t// dash+gap fallbacks for Firefox and everything else\\n\\n\\t\\tif ( _context.setLineDash === undefined ) {\\n\\n\\t\\t\\t_context.setLineDash = function () {};\\n\\n\\t\\t}\\n\\n\\t\\tthis.domElement = _canvas;\\n\\n\\t\\tthis.autoClear = true;\\n\\t\\tthis.sortObjects = true;\\n\\t\\tthis.sortElements = true;\\n\\n\\t\\tthis.info = {\\n\\n\\t\\t\\trender: {\\n\\n\\t\\t\\t\\tvertices: 0,\\n\\t\\t\\t\\tfaces: 0\\n\\n\\t\\t\\t}\\n\\n\\t\\t};\\n\\n\\t\\t// WebGLRenderer compatibility\\n\\n\\t\\tthis.supportsVertexTextures = function () {};\\n\\t\\tthis.setFaceCulling = function () {};\\n\\n\\t\\t// API\\n\\n\\t\\tthis.getContext = function () {\\n\\n\\t\\t\\treturn _context;\\n\\n\\t\\t};\\n\\n\\t\\tthis.getContextAttributes = function () {\\n\\n\\t\\t\\treturn _context.getContextAttributes();\\n\\n\\t\\t};\\n\\n\\t\\tthis.getPixelRatio = function () {\\n\\n\\t\\t\\treturn _pixelRatio;\\n\\n\\t\\t};\\n\\n\\t\\tthis.setPixelRatio = function ( value ) {\\n\\n\\t\\t\\tif ( value !== undefined ) _pixelRatio = value;\\n\\n\\t\\t};\\n\\n\\t\\tthis.setSize = function ( width, height, updateStyle ) {\\n\\n\\t\\t\\t_canvasWidth = width * _pixelRatio;\\n\\t\\t\\t_canvasHeight = height * _pixelRatio;\\n\\n\\t\\t\\t_canvas.width = _canvasWidth;\\n\\t\\t\\t_canvas.height = _canvasHeight;\\n\\n\\t\\t\\t_canvasWidthHalf = Math.floor( _canvasWidth / 2 );\\n\\t\\t\\t_canvasHeightHalf = Math.floor( _canvasHeight / 2 );\\n\\n\\t\\t\\tif ( updateStyle !== false ) {\\n\\n\\t\\t\\t\\t_canvas.style.width = width + 'px';\\n\\t\\t\\t\\t_canvas.style.height = height + 'px';\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t_clipBox.min.set( - _canvasWidthHalf, - _canvasHeightHalf );\\n\\t\\t\\t_clipBox.max.set(   _canvasWidthHalf,   _canvasHeightHalf );\\n\\n\\t\\t\\t_clearBox.min.set( - _canvasWidthHalf, - _canvasHeightHalf );\\n\\t\\t\\t_clearBox.max.set(   _canvasWidthHalf,   _canvasHeightHalf );\\n\\n\\t\\t\\t_contextGlobalAlpha = 1;\\n\\t\\t\\t_contextGlobalCompositeOperation = 0;\\n\\t\\t\\t_contextStrokeStyle = null;\\n\\t\\t\\t_contextFillStyle = null;\\n\\t\\t\\t_contextLineWidth = null;\\n\\t\\t\\t_contextLineCap = null;\\n\\t\\t\\t_contextLineJoin = null;\\n\\n\\t\\t\\tthis.setViewport( 0, 0, width, height );\\n\\n\\t\\t};\\n\\n\\t\\tthis.setViewport = function ( x, y, width, height ) {\\n\\n\\t\\t\\t_viewportX = x * _pixelRatio;\\n\\t\\t\\t_viewportY = y * _pixelRatio;\\n\\n\\t\\t\\t_viewportWidth = width * _pixelRatio;\\n\\t\\t\\t_viewportHeight = height * _pixelRatio;\\n\\n\\t\\t};\\n\\n\\t\\tthis.setScissor = function () {};\\n\\t\\tthis.setScissorTest = function () {};\\n\\n\\t\\tthis.setClearColor = function ( color, alpha ) {\\n\\n\\t\\t\\t_clearColor.set( color );\\n\\t\\t\\t_clearAlpha = alpha !== undefined ? alpha : 1;\\n\\n\\t\\t\\t_clearBox.min.set( - _canvasWidthHalf, - _canvasHeightHalf );\\n\\t\\t\\t_clearBox.max.set(   _canvasWidthHalf,   _canvasHeightHalf );\\n\\n\\t\\t};\\n\\n\\t\\tthis.setClearColorHex = function ( hex, alpha ) {\\n\\n\\t\\t\\tconsole.warn( 'THREE.CanvasRenderer: .setClearColorHex() is being removed. Use .setClearColor() instead.' );\\n\\t\\t\\tthis.setClearColor( hex, alpha );\\n\\n\\t\\t};\\n\\n\\t\\tthis.getClearColor = function () {\\n\\n\\t\\t\\treturn _clearColor;\\n\\n\\t\\t};\\n\\n\\t\\tthis.getClearAlpha = function () {\\n\\n\\t\\t\\treturn _clearAlpha;\\n\\n\\t\\t};\\n\\n\\t\\tthis.getMaxAnisotropy = function () {\\n\\n\\t\\t\\treturn 0;\\n\\n\\t\\t};\\n\\n\\t\\tthis.clear = function () {\\n\\n\\t\\t\\tif ( _clearBox.isEmpty() === false ) {\\n\\n\\t\\t\\t\\t_clearBox.intersect( _clipBox );\\n\\t\\t\\t\\t_clearBox.expandByScalar( 2 );\\n\\n\\t\\t\\t\\t_clearBox.min.x = _clearBox.min.x + _canvasWidthHalf;\\n\\t\\t\\t\\t_clearBox.min.y =  - _clearBox.min.y + _canvasHeightHalf;\\t\\t// higher y value !\\n\\t\\t\\t\\t_clearBox.max.x = _clearBox.max.x + _canvasWidthHalf;\\n\\t\\t\\t\\t_clearBox.max.y =  - _clearBox.max.y + _canvasHeightHalf;\\t\\t// lower y value !\\n\\n\\t\\t\\t\\tif ( _clearAlpha < 1 ) {\\n\\n\\t\\t\\t\\t\\t_context.clearRect(\\n\\t\\t\\t\\t\\t\\t_clearBox.min.x | 0,\\n\\t\\t\\t\\t\\t\\t_clearBox.max.y | 0,\\n\\t\\t\\t\\t\\t\\t( _clearBox.max.x - _clearBox.min.x ) | 0,\\n\\t\\t\\t\\t\\t\\t( _clearBox.min.y - _clearBox.max.y ) | 0\\n\\t\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( _clearAlpha > 0 ) {\\n\\n\\t\\t\\t\\t\\tsetBlending( THREE.NormalBlending );\\n\\t\\t\\t\\t\\tsetOpacity( 1 );\\n\\n\\t\\t\\t\\t\\tsetFillStyle( 'rgba(' + Math.floor( _clearColor.r * 255 ) + ',' + Math.floor( _clearColor.g * 255 ) + ',' + Math.floor( _clearColor.b * 255 ) + ',' + _clearAlpha + ')' );\\n\\n\\t\\t\\t\\t\\t_context.fillRect(\\n\\t\\t\\t\\t\\t\\t_clearBox.min.x | 0,\\n\\t\\t\\t\\t\\t\\t_clearBox.max.y | 0,\\n\\t\\t\\t\\t\\t\\t( _clearBox.max.x - _clearBox.min.x ) | 0,\\n\\t\\t\\t\\t\\t\\t( _clearBox.min.y - _clearBox.max.y ) | 0\\n\\t\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t_clearBox.makeEmpty();\\n\\n\\t\\t\\t}\\n\\n\\t\\t};\\n\\n\\t\\t// compatibility\\n\\n\\t\\tthis.clearColor = function () {};\\n\\t\\tthis.clearDepth = function () {};\\n\\t\\tthis.clearStencil = function () {};\\n\\n\\t\\tthis.render = function ( scene, camera ) {\\n\\n\\t\\t\\tif ( camera instanceof THREE.Camera === false ) {\\n\\n\\t\\t\\t\\tconsole.error( 'THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.' );\\n\\t\\t\\t\\treturn;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( this.autoClear === true ) this.clear();\\n\\n\\t\\t\\t_this.info.render.vertices = 0;\\n\\t\\t\\t_this.info.render.faces = 0;\\n\\n\\t\\t\\t_context.setTransform( _viewportWidth / _canvasWidth, 0, 0, - _viewportHeight / _canvasHeight, _viewportX, _canvasHeight - _viewportY );\\n\\t\\t\\t_context.translate( _canvasWidthHalf, _canvasHeightHalf );\\n\\n\\t\\t\\t_renderData = _projector.projectScene( scene, camera, this.sortObjects, this.sortElements );\\n\\t\\t\\t_elements = _renderData.elements;\\n\\t\\t\\t_lights = _renderData.lights;\\n\\t\\t\\t_camera = camera;\\n\\n\\t\\t\\t_normalViewMatrix.getNormalMatrix( camera.matrixWorldInverse );\\n\\n\\t\\t\\t/* DEBUG\\n\\t\\t\\tsetFillStyle( 'rgba( 0, 255, 255, 0.5 )' );\\n\\t\\t\\t_context.fillRect( _clipBox.min.x, _clipBox.min.y, _clipBox.max.x - _clipBox.min.x, _clipBox.max.y - _clipBox.min.y );\\n\\t\\t\\t*/\\n\\n\\t\\t\\tcalculateLights();\\n\\n\\t\\t\\tfor ( var e = 0, el = _elements.length; e < el; e ++ ) {\\n\\n\\t\\t\\t\\tvar element = _elements[ e ];\\n\\n\\t\\t\\t\\tvar material = element.material;\\n\\n\\t\\t\\t\\tif ( material === undefined || material.opacity === 0 ) continue;\\n\\n\\t\\t\\t\\t_elemBox.makeEmpty();\\n\\n\\t\\t\\t\\tif ( element instanceof THREE.RenderableSprite ) {\\n\\n\\t\\t\\t\\t\\t_v1 = element;\\n\\t\\t\\t\\t\\t_v1.x *= _canvasWidthHalf; _v1.y *= _canvasHeightHalf;\\n\\n\\t\\t\\t\\t\\trenderSprite( _v1, element, material );\\n\\n\\t\\t\\t\\t} else if ( element instanceof THREE.RenderableLine ) {\\n\\n\\t\\t\\t\\t\\t_v1 = element.v1; _v2 = element.v2;\\n\\n\\t\\t\\t\\t\\t_v1.positionScreen.x *= _canvasWidthHalf; _v1.positionScreen.y *= _canvasHeightHalf;\\n\\t\\t\\t\\t\\t_v2.positionScreen.x *= _canvasWidthHalf; _v2.positionScreen.y *= _canvasHeightHalf;\\n\\n\\t\\t\\t\\t\\t_elemBox.setFromPoints( [\\n\\t\\t\\t\\t\\t\\t_v1.positionScreen,\\n\\t\\t\\t\\t\\t\\t_v2.positionScreen\\n\\t\\t\\t\\t\\t] );\\n\\n\\t\\t\\t\\t\\tif ( _clipBox.intersectsBox( _elemBox ) === true ) {\\n\\n\\t\\t\\t\\t\\t\\trenderLine( _v1, _v2, element, material );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t} else if ( element instanceof THREE.RenderableFace ) {\\n\\n\\t\\t\\t\\t\\t_v1 = element.v1; _v2 = element.v2; _v3 = element.v3;\\n\\n\\t\\t\\t\\t\\tif ( _v1.positionScreen.z < - 1 || _v1.positionScreen.z > 1 ) continue;\\n\\t\\t\\t\\t\\tif ( _v2.positionScreen.z < - 1 || _v2.positionScreen.z > 1 ) continue;\\n\\t\\t\\t\\t\\tif ( _v3.positionScreen.z < - 1 || _v3.positionScreen.z > 1 ) continue;\\n\\n\\t\\t\\t\\t\\t_v1.positionScreen.x *= _canvasWidthHalf; _v1.positionScreen.y *= _canvasHeightHalf;\\n\\t\\t\\t\\t\\t_v2.positionScreen.x *= _canvasWidthHalf; _v2.positionScreen.y *= _canvasHeightHalf;\\n\\t\\t\\t\\t\\t_v3.positionScreen.x *= _canvasWidthHalf; _v3.positionScreen.y *= _canvasHeightHalf;\\n\\n\\t\\t\\t\\t\\tif ( material.overdraw > 0 ) {\\n\\n\\t\\t\\t\\t\\t\\texpand( _v1.positionScreen, _v2.positionScreen, material.overdraw );\\n\\t\\t\\t\\t\\t\\texpand( _v2.positionScreen, _v3.positionScreen, material.overdraw );\\n\\t\\t\\t\\t\\t\\texpand( _v3.positionScreen, _v1.positionScreen, material.overdraw );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t_elemBox.setFromPoints( [\\n\\t\\t\\t\\t\\t\\t_v1.positionScreen,\\n\\t\\t\\t\\t\\t\\t_v2.positionScreen,\\n\\t\\t\\t\\t\\t\\t_v3.positionScreen\\n\\t\\t\\t\\t\\t] );\\n\\n\\t\\t\\t\\t\\tif ( _clipBox.intersectsBox( _elemBox ) === true ) {\\n\\n\\t\\t\\t\\t\\t\\trenderFace3( _v1, _v2, _v3, 0, 1, 2, element, material );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t/* DEBUG\\n\\t\\t\\t\\tsetLineWidth( 1 );\\n\\t\\t\\t\\tsetStrokeStyle( 'rgba( 0, 255, 0, 0.5 )' );\\n\\t\\t\\t\\t_context.strokeRect( _elemBox.min.x, _elemBox.min.y, _elemBox.max.x - _elemBox.min.x, _elemBox.max.y - _elemBox.min.y );\\n\\t\\t\\t\\t*/\\n\\n\\t\\t\\t\\t_clearBox.union( _elemBox );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t/* DEBUG\\n\\t\\t\\tsetLineWidth( 1 );\\n\\t\\t\\tsetStrokeStyle( 'rgba( 255, 0, 0, 0.5 )' );\\n\\t\\t\\t_context.strokeRect( _clearBox.min.x, _clearBox.min.y, _clearBox.max.x - _clearBox.min.x, _clearBox.max.y - _clearBox.min.y );\\n\\t\\t\\t*/\\n\\n\\t\\t\\t_context.setTransform( 1, 0, 0, 1, 0, 0 );\\n\\n\\t\\t};\\n\\n\\t\\t//\\n\\n\\t\\tfunction calculateLights() {\\n\\n\\t\\t\\t_ambientLight.setRGB( 0, 0, 0 );\\n\\t\\t\\t_directionalLights.setRGB( 0, 0, 0 );\\n\\t\\t\\t_pointLights.setRGB( 0, 0, 0 );\\n\\n\\t\\t\\tfor ( var l = 0, ll = _lights.length; l < ll; l ++ ) {\\n\\n\\t\\t\\t\\tvar light = _lights[ l ];\\n\\t\\t\\t\\tvar lightColor = light.color;\\n\\n\\t\\t\\t\\tif ( light instanceof THREE.AmbientLight ) {\\n\\n\\t\\t\\t\\t\\t_ambientLight.add( lightColor );\\n\\n\\t\\t\\t\\t} else if ( light instanceof THREE.DirectionalLight ) {\\n\\n\\t\\t\\t\\t\\t// for sprites\\n\\n\\t\\t\\t\\t\\t_directionalLights.add( lightColor );\\n\\n\\t\\t\\t\\t} else if ( light instanceof THREE.PointLight ) {\\n\\n\\t\\t\\t\\t\\t// for sprites\\n\\n\\t\\t\\t\\t\\t_pointLights.add( lightColor );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tfunction calculateLight( position, normal, color ) {\\n\\n\\t\\t\\tfor ( var l = 0, ll = _lights.length; l < ll; l ++ ) {\\n\\n\\t\\t\\t\\tvar light = _lights[ l ];\\n\\n\\t\\t\\t\\t_lightColor.copy( light.color );\\n\\n\\t\\t\\t\\tif ( light instanceof THREE.DirectionalLight ) {\\n\\n\\t\\t\\t\\t\\tvar lightPosition = _vector3.setFromMatrixPosition( light.matrixWorld ).normalize();\\n\\n\\t\\t\\t\\t\\tvar amount = normal.dot( lightPosition );\\n\\n\\t\\t\\t\\t\\tif ( amount <= 0 ) continue;\\n\\n\\t\\t\\t\\t\\tamount *= light.intensity;\\n\\n\\t\\t\\t\\t\\tcolor.add( _lightColor.multiplyScalar( amount ) );\\n\\n\\t\\t\\t\\t} else if ( light instanceof THREE.PointLight ) {\\n\\n\\t\\t\\t\\t\\tvar lightPosition = _vector3.setFromMatrixPosition( light.matrixWorld );\\n\\n\\t\\t\\t\\t\\tvar amount = normal.dot( _vector3.subVectors( lightPosition, position ).normalize() );\\n\\n\\t\\t\\t\\t\\tif ( amount <= 0 ) continue;\\n\\n\\t\\t\\t\\t\\tamount *= light.distance == 0 ? 1 : 1 - Math.min( position.distanceTo( lightPosition ) / light.distance, 1 );\\n\\n\\t\\t\\t\\t\\tif ( amount == 0 ) continue;\\n\\n\\t\\t\\t\\t\\tamount *= light.intensity;\\n\\n\\t\\t\\t\\t\\tcolor.add( _lightColor.multiplyScalar( amount ) );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tfunction renderSprite( v1, element, material ) {\\n\\n\\t\\t\\tsetOpacity( material.opacity );\\n\\t\\t\\tsetBlending( material.blending );\\n\\n\\t\\t\\tvar scaleX = element.scale.x * _canvasWidthHalf;\\n\\t\\t\\tvar scaleY = element.scale.y * _canvasHeightHalf;\\n\\n\\t\\t\\tvar dist = 0.5 * Math.sqrt( scaleX * scaleX + scaleY * scaleY ); // allow for rotated sprite\\n\\t\\t\\t_elemBox.min.set( v1.x - dist, v1.y - dist );\\n\\t\\t\\t_elemBox.max.set( v1.x + dist, v1.y + dist );\\n\\n\\t\\t\\tif ( material instanceof THREE.SpriteMaterial ) {\\n\\n\\t\\t\\t\\tvar texture = material.map;\\n\\n\\t\\t\\t\\tif ( texture !== null ) {\\n\\n\\t\\t\\t\\t\\tvar pattern = _patterns[ texture.id ];\\n\\n\\t\\t\\t\\t\\tif ( pattern === undefined || pattern.version !== texture.version ) {\\n\\n\\t\\t\\t\\t\\t\\tpattern = textureToPattern( texture );\\n\\t\\t\\t\\t\\t\\t_patterns[ texture.id ] = pattern;\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tif ( pattern.canvas !== undefined ) {\\n\\n\\t\\t\\t\\t\\t\\tsetFillStyle( pattern.canvas );\\n\\n\\t\\t\\t\\t\\t\\tvar bitmap = texture.image;\\n\\n\\t\\t\\t\\t\\t\\tvar ox = bitmap.width * texture.offset.x;\\n\\t\\t\\t\\t\\t\\tvar oy = bitmap.height * texture.offset.y;\\n\\n\\t\\t\\t\\t\\t\\tvar sx = bitmap.width * texture.repeat.x;\\n\\t\\t\\t\\t\\t\\tvar sy = bitmap.height * texture.repeat.y;\\n\\n\\t\\t\\t\\t\\t\\tvar cx = scaleX / sx;\\n\\t\\t\\t\\t\\t\\tvar cy = scaleY / sy;\\n\\n\\t\\t\\t\\t\\t\\t_context.save();\\n\\t\\t\\t\\t\\t\\t_context.translate( v1.x, v1.y );\\n\\t\\t\\t\\t\\t\\tif ( material.rotation !== 0 ) _context.rotate( material.rotation );\\n\\t\\t\\t\\t\\t\\t_context.translate( - scaleX / 2, - scaleY / 2 );\\n\\t\\t\\t\\t\\t\\t_context.scale( cx, cy );\\n\\t\\t\\t\\t\\t\\t_context.translate( - ox, - oy );\\n\\t\\t\\t\\t\\t\\t_context.fillRect( ox, oy, sx, sy );\\n\\t\\t\\t\\t\\t\\t_context.restore();\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t// no texture\\n\\n\\t\\t\\t\\t\\tsetFillStyle( material.color.getStyle() );\\n\\n\\t\\t\\t\\t\\t_context.save();\\n\\t\\t\\t\\t\\t_context.translate( v1.x, v1.y );\\n\\t\\t\\t\\t\\tif ( material.rotation !== 0 ) _context.rotate( material.rotation );\\n\\t\\t\\t\\t\\t_context.scale( scaleX, - scaleY );\\n\\t\\t\\t\\t\\t_context.fillRect( - 0.5, - 0.5, 1, 1 );\\n\\t\\t\\t\\t\\t_context.restore();\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t} else if ( material instanceof THREE.SpriteCanvasMaterial ) {\\n\\n\\t\\t\\t\\tsetStrokeStyle( material.color.getStyle() );\\n\\t\\t\\t\\tsetFillStyle( material.color.getStyle() );\\n\\n\\t\\t\\t\\t_context.save();\\n\\t\\t\\t\\t_context.translate( v1.x, v1.y );\\n\\t\\t\\t\\tif ( material.rotation !== 0 ) _context.rotate( material.rotation );\\n\\t\\t\\t\\t_context.scale( scaleX, scaleY );\\n\\n\\t\\t\\t\\tmaterial.program( _context );\\n\\n\\t\\t\\t\\t_context.restore();\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t/* DEBUG\\n\\t\\t\\tsetStrokeStyle( 'rgb(255,255,0)' );\\n\\t\\t\\t_context.beginPath();\\n\\t\\t\\t_context.moveTo( v1.x - 10, v1.y );\\n\\t\\t\\t_context.lineTo( v1.x + 10, v1.y );\\n\\t\\t\\t_context.moveTo( v1.x, v1.y - 10 );\\n\\t\\t\\t_context.lineTo( v1.x, v1.y + 10 );\\n\\t\\t\\t_context.stroke();\\n\\t\\t\\t*/\\n\\n\\t\\t}\\n\\n\\t\\tfunction renderLine( v1, v2, element, material ) {\\n\\n\\t\\t\\tsetOpacity( material.opacity );\\n\\t\\t\\tsetBlending( material.blending );\\n\\n\\t\\t\\t_context.beginPath();\\n\\t\\t\\t_context.moveTo( v1.positionScreen.x, v1.positionScreen.y );\\n\\t\\t\\t_context.lineTo( v2.positionScreen.x, v2.positionScreen.y );\\n\\n\\t\\t\\tif ( material instanceof THREE.LineBasicMaterial ) {\\n\\n\\t\\t\\t\\tsetLineWidth( material.linewidth );\\n\\t\\t\\t\\tsetLineCap( material.linecap );\\n\\t\\t\\t\\tsetLineJoin( material.linejoin );\\n\\n\\t\\t\\t\\tif ( material.vertexColors !== THREE.VertexColors ) {\\n\\n\\t\\t\\t\\t\\tsetStrokeStyle( material.color.getStyle() );\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\tvar colorStyle1 = element.vertexColors[ 0 ].getStyle();\\n\\t\\t\\t\\t\\tvar colorStyle2 = element.vertexColors[ 1 ].getStyle();\\n\\n\\t\\t\\t\\t\\tif ( colorStyle1 === colorStyle2 ) {\\n\\n\\t\\t\\t\\t\\t\\tsetStrokeStyle( colorStyle1 );\\n\\n\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\ttry {\\n\\n\\t\\t\\t\\t\\t\\t\\tvar grad = _context.createLinearGradient(\\n\\t\\t\\t\\t\\t\\t\\t\\tv1.positionScreen.x,\\n\\t\\t\\t\\t\\t\\t\\t\\tv1.positionScreen.y,\\n\\t\\t\\t\\t\\t\\t\\t\\tv2.positionScreen.x,\\n\\t\\t\\t\\t\\t\\t\\t\\tv2.positionScreen.y\\n\\t\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\t\\tgrad.addColorStop( 0, colorStyle1 );\\n\\t\\t\\t\\t\\t\\t\\tgrad.addColorStop( 1, colorStyle2 );\\n\\n\\t\\t\\t\\t\\t\\t} catch ( exception ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tgrad = colorStyle1;\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\tsetStrokeStyle( grad );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t_context.stroke();\\n\\t\\t\\t\\t_elemBox.expandByScalar( material.linewidth * 2 );\\n\\n\\t\\t\\t} else if ( material instanceof THREE.LineDashedMaterial ) {\\n\\n\\t\\t\\t\\tsetLineWidth( material.linewidth );\\n\\t\\t\\t\\tsetLineCap( material.linecap );\\n\\t\\t\\t\\tsetLineJoin( material.linejoin );\\n\\t\\t\\t\\tsetStrokeStyle( material.color.getStyle() );\\n\\t\\t\\t\\tsetLineDash( [ material.dashSize, material.gapSize ] );\\n\\n\\t\\t\\t\\t_context.stroke();\\n\\n\\t\\t\\t\\t_elemBox.expandByScalar( material.linewidth * 2 );\\n\\n\\t\\t\\t\\tsetLineDash( [] );\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tfunction renderFace3( v1, v2, v3, uv1, uv2, uv3, element, material ) {\\n\\n\\t\\t\\t_this.info.render.vertices += 3;\\n\\t\\t\\t_this.info.render.faces ++;\\n\\n\\t\\t\\tsetOpacity( material.opacity );\\n\\t\\t\\tsetBlending( material.blending );\\n\\n\\t\\t\\t_v1x = v1.positionScreen.x; _v1y = v1.positionScreen.y;\\n\\t\\t\\t_v2x = v2.positionScreen.x; _v2y = v2.positionScreen.y;\\n\\t\\t\\t_v3x = v3.positionScreen.x; _v3y = v3.positionScreen.y;\\n\\n\\t\\t\\tdrawTriangle( _v1x, _v1y, _v2x, _v2y, _v3x, _v3y );\\n\\n\\t\\t\\tif ( ( material instanceof THREE.MeshLambertMaterial || material instanceof THREE.MeshPhongMaterial ) && material.map === null ) {\\n\\n\\t\\t\\t\\t_diffuseColor.copy( material.color );\\n\\t\\t\\t\\t_emissiveColor.copy( material.emissive );\\n\\n\\t\\t\\t\\tif ( material.vertexColors === THREE.FaceColors ) {\\n\\n\\t\\t\\t\\t\\t_diffuseColor.multiply( element.color );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t_color.copy( _ambientLight );\\n\\n\\t\\t\\t\\t_centroid.copy( v1.positionWorld ).add( v2.positionWorld ).add( v3.positionWorld ).divideScalar( 3 );\\n\\n\\t\\t\\t\\tcalculateLight( _centroid, element.normalModel, _color );\\n\\n\\t\\t\\t\\t_color.multiply( _diffuseColor ).add( _emissiveColor );\\n\\n\\t\\t\\t\\tmaterial.wireframe === true\\n\\t\\t\\t\\t\\t ? strokePath( _color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin )\\n\\t\\t\\t\\t\\t : fillPath( _color );\\n\\n\\t\\t\\t} else if ( material instanceof THREE.MeshBasicMaterial ||\\n\\t\\t\\t\\t\\t    material instanceof THREE.MeshLambertMaterial ||\\n\\t\\t\\t\\t\\t    material instanceof THREE.MeshPhongMaterial ) {\\n\\n\\t\\t\\t\\tif ( material.map !== null ) {\\n\\n\\t\\t\\t\\t\\tvar mapping = material.map.mapping;\\n\\n\\t\\t\\t\\t\\tif ( mapping === THREE.UVMapping ) {\\n\\n\\t\\t\\t\\t\\t\\t_uvs = element.uvs;\\n\\t\\t\\t\\t\\t\\tpatternPath( _v1x, _v1y, _v2x, _v2y, _v3x, _v3y, _uvs[ uv1 ].x, _uvs[ uv1 ].y, _uvs[ uv2 ].x, _uvs[ uv2 ].y, _uvs[ uv3 ].x, _uvs[ uv3 ].y, material.map );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t} else if ( material.envMap !== null ) {\\n\\n\\t\\t\\t\\t\\tif ( material.envMap.mapping === THREE.SphericalReflectionMapping ) {\\n\\n\\t\\t\\t\\t\\t\\t_normal.copy( element.vertexNormalsModel[ uv1 ] ).applyMatrix3( _normalViewMatrix );\\n\\t\\t\\t\\t\\t\\t_uv1x = 0.5 * _normal.x + 0.5;\\n\\t\\t\\t\\t\\t\\t_uv1y = 0.5 * _normal.y + 0.5;\\n\\n\\t\\t\\t\\t\\t\\t_normal.copy( element.vertexNormalsModel[ uv2 ] ).applyMatrix3( _normalViewMatrix );\\n\\t\\t\\t\\t\\t\\t_uv2x = 0.5 * _normal.x + 0.5;\\n\\t\\t\\t\\t\\t\\t_uv2y = 0.5 * _normal.y + 0.5;\\n\\n\\t\\t\\t\\t\\t\\t_normal.copy( element.vertexNormalsModel[ uv3 ] ).applyMatrix3( _normalViewMatrix );\\n\\t\\t\\t\\t\\t\\t_uv3x = 0.5 * _normal.x + 0.5;\\n\\t\\t\\t\\t\\t\\t_uv3y = 0.5 * _normal.y + 0.5;\\n\\n\\t\\t\\t\\t\\t\\tpatternPath( _v1x, _v1y, _v2x, _v2y, _v3x, _v3y, _uv1x, _uv1y, _uv2x, _uv2y, _uv3x, _uv3y, material.envMap );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t_color.copy( material.color );\\n\\n\\t\\t\\t\\t\\tif ( material.vertexColors === THREE.FaceColors ) {\\n\\n\\t\\t\\t\\t\\t\\t_color.multiply( element.color );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tmaterial.wireframe === true\\n\\t\\t\\t\\t\\t\\t ? strokePath( _color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin )\\n\\t\\t\\t\\t\\t\\t : fillPath( _color );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t} else if ( material instanceof THREE.MeshNormalMaterial ) {\\n\\n\\t\\t\\t\\t_normal.copy( element.normalModel ).applyMatrix3( _normalViewMatrix );\\n\\n\\t\\t\\t\\t_color.setRGB( _normal.x, _normal.y, _normal.z ).multiplyScalar( 0.5 ).addScalar( 0.5 );\\n\\n\\t\\t\\t\\tmaterial.wireframe === true\\n\\t\\t\\t\\t\\t ? strokePath( _color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin )\\n\\t\\t\\t\\t\\t : fillPath( _color );\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t_color.setRGB( 1, 1, 1 );\\n\\n\\t\\t\\t\\tmaterial.wireframe === true\\n\\t\\t\\t\\t\\t ? strokePath( _color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin )\\n\\t\\t\\t\\t\\t : fillPath( _color );\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\t//\\n\\n\\t\\tfunction drawTriangle( x0, y0, x1, y1, x2, y2 ) {\\n\\n\\t\\t\\t_context.beginPath();\\n\\t\\t\\t_context.moveTo( x0, y0 );\\n\\t\\t\\t_context.lineTo( x1, y1 );\\n\\t\\t\\t_context.lineTo( x2, y2 );\\n\\t\\t\\t_context.closePath();\\n\\n\\t\\t}\\n\\n\\t\\tfunction strokePath( color, linewidth, linecap, linejoin ) {\\n\\n\\t\\t\\tsetLineWidth( linewidth );\\n\\t\\t\\tsetLineCap( linecap );\\n\\t\\t\\tsetLineJoin( linejoin );\\n\\t\\t\\tsetStrokeStyle( color.getStyle() );\\n\\n\\t\\t\\t_context.stroke();\\n\\n\\t\\t\\t_elemBox.expandByScalar( linewidth * 2 );\\n\\n\\t\\t}\\n\\n\\t\\tfunction fillPath( color ) {\\n\\n\\t\\t\\tsetFillStyle( color.getStyle() );\\n\\t\\t\\t_context.fill();\\n\\n\\t\\t}\\n\\n\\t\\tfunction textureToPattern( texture ) {\\n\\n\\t\\t\\tif ( texture.version === 0 ||\\n\\t\\t\\t\\ttexture instanceof THREE.CompressedTexture ||\\n\\t\\t\\t\\ttexture instanceof THREE.DataTexture ) {\\n\\n\\t\\t\\t\\treturn {\\n\\t\\t\\t\\t\\tcanvas: undefined,\\n\\t\\t\\t\\t\\tversion: texture.version\\n\\t\\t\\t\\t};\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar image = texture.image;\\n\\n\\t\\t\\tif ( image.complete === false ) {\\n\\n\\t\\t\\t\\treturn {\\n\\t\\t\\t\\t\\tcanvas: undefined,\\n\\t\\t\\t\\t\\tversion: 0\\n\\t\\t\\t\\t};\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar canvas = document.createElement( 'canvas' );\\n\\t\\t\\tcanvas.width = image.width;\\n\\t\\t\\tcanvas.height = image.height;\\n\\n\\t\\t\\tvar context = canvas.getContext( '2d' );\\n\\t\\t\\tcontext.setTransform( 1, 0, 0, - 1, 0, image.height );\\n\\t\\t\\tcontext.drawImage( image, 0, 0 );\\n\\n\\t\\t\\tvar repeatX = texture.wrapS === THREE.RepeatWrapping;\\n\\t\\t\\tvar repeatY = texture.wrapT === THREE.RepeatWrapping;\\n\\n\\t\\t\\tvar repeat = 'no-repeat';\\n\\n\\t\\t\\tif ( repeatX === true && repeatY === true ) {\\n\\n\\t\\t\\t\\trepeat = 'repeat';\\n\\n\\t\\t\\t} else if ( repeatX === true ) {\\n\\n\\t\\t\\t\\trepeat = 'repeat-x';\\n\\n\\t\\t\\t} else if ( repeatY === true ) {\\n\\n\\t\\t\\t\\trepeat = 'repeat-y';\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar pattern = _context.createPattern( canvas, repeat );\\n\\n\\t\\t\\tif ( texture.onUpdate ) texture.onUpdate( texture );\\n\\n\\t\\t\\treturn {\\n\\t\\t\\t\\tcanvas: pattern,\\n\\t\\t\\t\\tversion: texture.version\\n\\t\\t\\t};\\n\\n\\t\\t}\\n\\n\\t\\tfunction patternPath( x0, y0, x1, y1, x2, y2, u0, v0, u1, v1, u2, v2, texture ) {\\n\\n\\t\\t\\tvar pattern = _patterns[ texture.id ];\\n\\n\\t\\t\\tif ( pattern === undefined || pattern.version !== texture.version ) {\\n\\n\\t\\t\\t\\tpattern = textureToPattern( texture );\\n\\t\\t\\t\\t_patterns[ texture.id ] = pattern;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( pattern.canvas !== undefined ) {\\n\\n\\t\\t\\t\\tsetFillStyle( pattern.canvas );\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\tsetFillStyle( 'rgba( 0, 0, 0, 1)' );\\n\\t\\t\\t\\t_context.fill();\\n\\t\\t\\t\\treturn;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t// http://extremelysatisfactorytotalitarianism.com/blog/?p=2120\\n\\n\\t\\t\\tvar a, b, c, d, e, f, det, idet,\\n\\t\\t\\toffsetX = texture.offset.x / texture.repeat.x,\\n\\t\\t\\toffsetY = texture.offset.y / texture.repeat.y,\\n\\t\\t\\twidth = texture.image.width * texture.repeat.x,\\n\\t\\t\\theight = texture.image.height * texture.repeat.y;\\n\\n\\t\\t\\tu0 = ( u0 + offsetX ) * width;\\n\\t\\t\\tv0 = ( v0 + offsetY ) * height;\\n\\n\\t\\t\\tu1 = ( u1 + offsetX ) * width;\\n\\t\\t\\tv1 = ( v1 + offsetY ) * height;\\n\\n\\t\\t\\tu2 = ( u2 + offsetX ) * width;\\n\\t\\t\\tv2 = ( v2 + offsetY ) * height;\\n\\n\\t\\t\\tx1 -= x0; y1 -= y0;\\n\\t\\t\\tx2 -= x0; y2 -= y0;\\n\\n\\t\\t\\tu1 -= u0; v1 -= v0;\\n\\t\\t\\tu2 -= u0; v2 -= v0;\\n\\n\\t\\t\\tdet = u1 * v2 - u2 * v1;\\n\\n\\t\\t\\tif ( det === 0 ) return;\\n\\n\\t\\t\\tidet = 1 / det;\\n\\n\\t\\t\\ta = ( v2 * x1 - v1 * x2 ) * idet;\\n\\t\\t\\tb = ( v2 * y1 - v1 * y2 ) * idet;\\n\\t\\t\\tc = ( u1 * x2 - u2 * x1 ) * idet;\\n\\t\\t\\td = ( u1 * y2 - u2 * y1 ) * idet;\\n\\n\\t\\t\\te = x0 - a * u0 - c * v0;\\n\\t\\t\\tf = y0 - b * u0 - d * v0;\\n\\n\\t\\t\\t_context.save();\\n\\t\\t\\t_context.transform( a, b, c, d, e, f );\\n\\t\\t\\t_context.fill();\\n\\t\\t\\t_context.restore();\\n\\n\\t\\t}\\n\\n\\t\\tfunction clipImage( x0, y0, x1, y1, x2, y2, u0, v0, u1, v1, u2, v2, image ) {\\n\\n\\t\\t\\t// http://extremelysatisfactorytotalitarianism.com/blog/?p=2120\\n\\n\\t\\t\\tvar a, b, c, d, e, f, det, idet,\\n\\t\\t\\twidth = image.width - 1,\\n\\t\\t\\theight = image.height - 1;\\n\\n\\t\\t\\tu0 *= width; v0 *= height;\\n\\t\\t\\tu1 *= width; v1 *= height;\\n\\t\\t\\tu2 *= width; v2 *= height;\\n\\n\\t\\t\\tx1 -= x0; y1 -= y0;\\n\\t\\t\\tx2 -= x0; y2 -= y0;\\n\\n\\t\\t\\tu1 -= u0; v1 -= v0;\\n\\t\\t\\tu2 -= u0; v2 -= v0;\\n\\n\\t\\t\\tdet = u1 * v2 - u2 * v1;\\n\\n\\t\\t\\tidet = 1 / det;\\n\\n\\t\\t\\ta = ( v2 * x1 - v1 * x2 ) * idet;\\n\\t\\t\\tb = ( v2 * y1 - v1 * y2 ) * idet;\\n\\t\\t\\tc = ( u1 * x2 - u2 * x1 ) * idet;\\n\\t\\t\\td = ( u1 * y2 - u2 * y1 ) * idet;\\n\\n\\t\\t\\te = x0 - a * u0 - c * v0;\\n\\t\\t\\tf = y0 - b * u0 - d * v0;\\n\\n\\t\\t\\t_context.save();\\n\\t\\t\\t_context.transform( a, b, c, d, e, f );\\n\\t\\t\\t_context.clip();\\n\\t\\t\\t_context.drawImage( image, 0, 0 );\\n\\t\\t\\t_context.restore();\\n\\n\\t\\t}\\n\\n\\t\\t// Hide anti-alias gaps\\n\\n\\t\\tfunction expand( v1, v2, pixels ) {\\n\\n\\t\\t\\tvar x = v2.x - v1.x, y = v2.y - v1.y,\\n\\t\\t\\tdet = x * x + y * y, idet;\\n\\n\\t\\t\\tif ( det === 0 ) return;\\n\\n\\t\\t\\tidet = pixels / Math.sqrt( det );\\n\\n\\t\\t\\tx *= idet; y *= idet;\\n\\n\\t\\t\\tv2.x += x; v2.y += y;\\n\\t\\t\\tv1.x -= x; v1.y -= y;\\n\\n\\t\\t}\\n\\n\\t\\t// Context cached methods.\\n\\n\\t\\tfunction setOpacity( value ) {\\n\\n\\t\\t\\tif ( _contextGlobalAlpha !== value ) {\\n\\n\\t\\t\\t\\t_context.globalAlpha = value;\\n\\t\\t\\t\\t_contextGlobalAlpha = value;\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tfunction setBlending( value ) {\\n\\n\\t\\t\\tif ( _contextGlobalCompositeOperation !== value ) {\\n\\n\\t\\t\\t\\tif ( value === THREE.NormalBlending ) {\\n\\n\\t\\t\\t\\t\\t_context.globalCompositeOperation = 'source-over';\\n\\n\\t\\t\\t\\t} else if ( value === THREE.AdditiveBlending ) {\\n\\n\\t\\t\\t\\t\\t_context.globalCompositeOperation = 'lighter';\\n\\n\\t\\t\\t\\t} else if ( value === THREE.SubtractiveBlending ) {\\n\\n\\t\\t\\t\\t\\t_context.globalCompositeOperation = 'darker';\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t_contextGlobalCompositeOperation = value;\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tfunction setLineWidth( value ) {\\n\\n\\t\\t\\tif ( _contextLineWidth !== value ) {\\n\\n\\t\\t\\t\\t_context.lineWidth = value;\\n\\t\\t\\t\\t_contextLineWidth = value;\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tfunction setLineCap( value ) {\\n\\n\\t\\t\\t// \\\"butt\\\", \\\"round\\\", \\\"square\\\"\\n\\n\\t\\t\\tif ( _contextLineCap !== value ) {\\n\\n\\t\\t\\t\\t_context.lineCap = value;\\n\\t\\t\\t\\t_contextLineCap = value;\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tfunction setLineJoin( value ) {\\n\\n\\t\\t\\t// \\\"round\\\", \\\"bevel\\\", \\\"miter\\\"\\n\\n\\t\\t\\tif ( _contextLineJoin !== value ) {\\n\\n\\t\\t\\t\\t_context.lineJoin = value;\\n\\t\\t\\t\\t_contextLineJoin = value;\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tfunction setStrokeStyle( value ) {\\n\\n\\t\\t\\tif ( _contextStrokeStyle !== value ) {\\n\\n\\t\\t\\t\\t_context.strokeStyle = value;\\n\\t\\t\\t\\t_contextStrokeStyle = value;\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tfunction setFillStyle( value ) {\\n\\n\\t\\t\\tif ( _contextFillStyle !== value ) {\\n\\n\\t\\t\\t\\t_context.fillStyle = value;\\n\\t\\t\\t\\t_contextFillStyle = value;\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tfunction setLineDash( value ) {\\n\\n\\t\\t\\tif ( _contextLineDash.length !== value.length ) {\\n\\n\\t\\t\\t\\t_context.setLineDash( value );\\n\\t\\t\\t\\t_contextLineDash = value;\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t};\\n\\n};\",\"module.exports = function( THREE ){\\n\\t/**\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t *\\n\\t * Color correction\\n\\t */\\n\\n\\tTHREE.ColorCorrectionShader = {\\n\\n\\t\\tuniforms: {\\n\\n\\t\\t\\t\\\"tDiffuse\\\": { type: \\\"t\\\", value: null },\\n\\t\\t\\t\\\"powRGB\\\":   { type: \\\"v3\\\", value: new THREE.Vector3( 2, 2, 2 ) },\\n\\t\\t\\t\\\"mulRGB\\\":   { type: \\\"v3\\\", value: new THREE.Vector3( 1, 1, 1 ) },\\n\\t\\t\\t\\\"addRGB\\\":   { type: \\\"v3\\\", value: new THREE.Vector3( 0, 0, 0 ) }\\n\\n\\t\\t},\\n\\n\\t\\tvertexShader: [\\n\\n\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\n\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t\\\"vUv = uv;\\\",\\n\\n\\t\\t\\t\\t\\\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\\",\\n\\n\\t\\t\\t\\\"}\\\"\\n\\n\\t\\t].join( \\\"\\\\n\\\" ),\\n\\n\\t\\tfragmentShader: [\\n\\n\\t\\t\\t\\\"uniform sampler2D tDiffuse;\\\",\\n\\t\\t\\t\\\"uniform vec3 powRGB;\\\",\\n\\t\\t\\t\\\"uniform vec3 mulRGB;\\\",\\n\\t\\t\\t\\\"uniform vec3 addRGB;\\\",\\n\\n\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\n\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t\\\"gl_FragColor = texture2D( tDiffuse, vUv );\\\",\\n\\t\\t\\t\\t\\\"gl_FragColor.rgb = mulRGB * pow( ( gl_FragColor.rgb + addRGB ), powRGB );\\\",\\n\\n\\t\\t\\t\\\"}\\\"\\n\\n\\t\\t].join( \\\"\\\\n\\\" )\\n\\n\\t};\\n\\n}\\n\",\"module.exports = function( THREE ){\\n\\t/**\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t *\\n\\t * Colorify shader\\n\\t */\\n\\n\\tTHREE.ColorifyShader = {\\n\\n\\t\\tuniforms: {\\n\\n\\t\\t\\t\\\"tDiffuse\\\": { type: \\\"t\\\", value: null },\\n\\t\\t\\t\\\"color\\\":    { type: \\\"c\\\", value: new THREE.Color( 0xffffff ) }\\n\\n\\t\\t},\\n\\n\\t\\tvertexShader: [\\n\\n\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\n\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t\\\"vUv = uv;\\\",\\n\\t\\t\\t\\t\\\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\\",\\n\\n\\t\\t\\t\\\"}\\\"\\n\\n\\t\\t].join( \\\"\\\\n\\\" ),\\n\\n\\t\\tfragmentShader: [\\n\\n\\t\\t\\t\\\"uniform vec3 color;\\\",\\n\\t\\t\\t\\\"uniform sampler2D tDiffuse;\\\",\\n\\n\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\n\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t\\\"vec4 texel = texture2D( tDiffuse, vUv );\\\",\\n\\n\\t\\t\\t\\t\\\"vec3 luma = vec3( 0.299, 0.587, 0.114 );\\\",\\n\\t\\t\\t\\t\\\"float v = dot( texel.xyz, luma );\\\",\\n\\n\\t\\t\\t\\t\\\"gl_FragColor = vec4( v * color, texel.w );\\\",\\n\\n\\t\\t\\t\\\"}\\\"\\n\\n\\t\\t].join( \\\"\\\\n\\\" )\\n\\n\\t};\\n\\n}\\n\",\"module.exports = function( THREE ){\\n\\t/**\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t *\\n\\t * Convolution shader\\n\\t * ported from o3d sample to WebGL / GLSL\\n\\t * http://o3d.googlecode.com/svn/trunk/samples/convolution.html\\n\\t */\\n\\n\\tTHREE.ConvolutionShader = {\\n\\n\\t\\tdefines: {\\n\\n\\t\\t\\t\\\"KERNEL_SIZE_FLOAT\\\": \\\"25.0\\\",\\n\\t\\t\\t\\\"KERNEL_SIZE_INT\\\": \\\"25\\\",\\n\\n\\t\\t},\\n\\n\\t\\tuniforms: {\\n\\n\\t\\t\\t\\\"tDiffuse\\\":        { type: \\\"t\\\", value: null },\\n\\t\\t\\t\\\"uImageIncrement\\\": { type: \\\"v2\\\", value: new THREE.Vector2( 0.001953125, 0.0 ) },\\n\\t\\t\\t\\\"cKernel\\\":         { type: \\\"fv1\\\", value: [] }\\n\\n\\t\\t},\\n\\n\\t\\tvertexShader: [\\n\\n\\t\\t\\t\\\"uniform vec2 uImageIncrement;\\\",\\n\\n\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\n\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t\\\"vUv = uv - ( ( KERNEL_SIZE_FLOAT - 1.0 ) / 2.0 ) * uImageIncrement;\\\",\\n\\t\\t\\t\\t\\\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\\",\\n\\n\\t\\t\\t\\\"}\\\"\\n\\n\\t\\t].join( \\\"\\\\n\\\" ),\\n\\n\\t\\tfragmentShader: [\\n\\n\\t\\t\\t\\\"uniform float cKernel[ KERNEL_SIZE_INT ];\\\",\\n\\n\\t\\t\\t\\\"uniform sampler2D tDiffuse;\\\",\\n\\t\\t\\t\\\"uniform vec2 uImageIncrement;\\\",\\n\\n\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\n\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t\\\"vec2 imageCoord = vUv;\\\",\\n\\t\\t\\t\\t\\\"vec4 sum = vec4( 0.0, 0.0, 0.0, 0.0 );\\\",\\n\\n\\t\\t\\t\\t\\\"for( int i = 0; i < KERNEL_SIZE_INT; i ++ ) {\\\",\\n\\n\\t\\t\\t\\t\\t\\\"sum += texture2D( tDiffuse, imageCoord ) * cKernel[ i ];\\\",\\n\\t\\t\\t\\t\\t\\\"imageCoord += uImageIncrement;\\\",\\n\\n\\t\\t\\t\\t\\\"}\\\",\\n\\n\\t\\t\\t\\t\\\"gl_FragColor = sum;\\\",\\n\\n\\t\\t\\t\\\"}\\\"\\n\\n\\n\\t\\t].join( \\\"\\\\n\\\" ),\\n\\n\\t\\tbuildKernel: function ( sigma ) {\\n\\n\\t\\t\\t// We lop off the sqrt(2 * pi) * sigma term, since we're going to normalize anyway.\\n\\n\\t\\t\\tfunction gauss( x, sigma ) {\\n\\n\\t\\t\\t\\treturn Math.exp( - ( x * x ) / ( 2.0 * sigma * sigma ) );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar i, values, sum, halfWidth, kMaxKernelSize = 25, kernelSize = 2 * Math.ceil( sigma * 3.0 ) + 1;\\n\\n\\t\\t\\tif ( kernelSize > kMaxKernelSize ) kernelSize = kMaxKernelSize;\\n\\t\\t\\thalfWidth = ( kernelSize - 1 ) * 0.5;\\n\\n\\t\\t\\tvalues = new Array( kernelSize );\\n\\t\\t\\tsum = 0.0;\\n\\t\\t\\tfor ( i = 0; i < kernelSize; ++ i ) {\\n\\n\\t\\t\\t\\tvalues[ i ] = gauss( i - halfWidth, sigma );\\n\\t\\t\\t\\tsum += values[ i ];\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t// normalize the kernel\\n\\n\\t\\t\\tfor ( i = 0; i < kernelSize; ++ i ) values[ i ] /= sum;\\n\\n\\t\\t\\treturn values;\\n\\n\\t\\t}\\n\\n\\t};\\n\\n}\\n\",\"module.exports = function( THREE ){\\n\\t/**\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t *\\n\\t * Full-screen textured quad shader\\n\\t */\\n\\n\\tTHREE.CopyShader = {\\n\\n\\t\\tuniforms: {\\n\\n\\t\\t\\t\\\"tDiffuse\\\": { type: \\\"t\\\", value: null },\\n\\t\\t\\t\\\"opacity\\\":  { type: \\\"f\\\", value: 1.0 }\\n\\n\\t\\t},\\n\\n\\t\\tvertexShader: [\\n\\n\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\n\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t\\\"vUv = uv;\\\",\\n\\t\\t\\t\\t\\\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\\",\\n\\n\\t\\t\\t\\\"}\\\"\\n\\n\\t\\t].join( \\\"\\\\n\\\" ),\\n\\n\\t\\tfragmentShader: [\\n\\n\\t\\t\\t\\\"uniform float opacity;\\\",\\n\\n\\t\\t\\t\\\"uniform sampler2D tDiffuse;\\\",\\n\\n\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\n\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t\\\"vec4 texel = texture2D( tDiffuse, vUv );\\\",\\n\\t\\t\\t\\t\\\"gl_FragColor = opacity * texel;\\\",\\n\\n\\t\\t\\t\\\"}\\\"\\n\\n\\t\\t].join( \\\"\\\\n\\\" )\\n\\n\\t};\\n\\n}\\n\",\"module.exports = function( THREE ){\\n\\n\\t/*\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t */\\n\\n\\tTHREE.DDSLoader = function () {\\n\\n\\t\\tthis._parser = THREE.DDSLoader.parse;\\n\\n\\t};\\n\\n\\tTHREE.DDSLoader.prototype = Object.create( THREE.CompressedTextureLoader.prototype );\\n\\tTHREE.DDSLoader.prototype.constructor = THREE.DDSLoader;\\n\\n\\tTHREE.DDSLoader.parse = function ( buffer, loadMipmaps ) {\\n\\n\\t\\tvar dds = { mipmaps: [], width: 0, height: 0, format: null, mipmapCount: 1 };\\n\\n\\t\\t// Adapted from @toji's DDS utils\\n\\t\\t// https://github.com/toji/webgl-texture-utils/blob/master/texture-util/dds.js\\n\\n\\t\\t// All values and structures referenced from:\\n\\t\\t// http://msdn.microsoft.com/en-us/library/bb943991.aspx/\\n\\n\\t\\tvar DDS_MAGIC = 0x20534444;\\n\\n\\t\\tvar DDSD_CAPS = 0x1,\\n\\t\\t\\tDDSD_HEIGHT = 0x2,\\n\\t\\t\\tDDSD_WIDTH = 0x4,\\n\\t\\t\\tDDSD_PITCH = 0x8,\\n\\t\\t\\tDDSD_PIXELFORMAT = 0x1000,\\n\\t\\t\\tDDSD_MIPMAPCOUNT = 0x20000,\\n\\t\\t\\tDDSD_LINEARSIZE = 0x80000,\\n\\t\\t\\tDDSD_DEPTH = 0x800000;\\n\\n\\t\\tvar DDSCAPS_COMPLEX = 0x8,\\n\\t\\t\\tDDSCAPS_MIPMAP = 0x400000,\\n\\t\\t\\tDDSCAPS_TEXTURE = 0x1000;\\n\\n\\t\\tvar DDSCAPS2_CUBEMAP = 0x200,\\n\\t\\t\\tDDSCAPS2_CUBEMAP_POSITIVEX = 0x400,\\n\\t\\t\\tDDSCAPS2_CUBEMAP_NEGATIVEX = 0x800,\\n\\t\\t\\tDDSCAPS2_CUBEMAP_POSITIVEY = 0x1000,\\n\\t\\t\\tDDSCAPS2_CUBEMAP_NEGATIVEY = 0x2000,\\n\\t\\t\\tDDSCAPS2_CUBEMAP_POSITIVEZ = 0x4000,\\n\\t\\t\\tDDSCAPS2_CUBEMAP_NEGATIVEZ = 0x8000,\\n\\t\\t\\tDDSCAPS2_VOLUME = 0x200000;\\n\\n\\t\\tvar DDPF_ALPHAPIXELS = 0x1,\\n\\t\\t\\tDDPF_ALPHA = 0x2,\\n\\t\\t\\tDDPF_FOURCC = 0x4,\\n\\t\\t\\tDDPF_RGB = 0x40,\\n\\t\\t\\tDDPF_YUV = 0x200,\\n\\t\\t\\tDDPF_LUMINANCE = 0x20000;\\n\\n\\t\\tfunction fourCCToInt32( value ) {\\n\\n\\t\\t\\treturn value.charCodeAt( 0 ) +\\n\\t\\t\\t\\t( value.charCodeAt( 1 ) << 8 ) +\\n\\t\\t\\t\\t( value.charCodeAt( 2 ) << 16 ) +\\n\\t\\t\\t\\t( value.charCodeAt( 3 ) << 24 );\\n\\n\\t\\t}\\n\\n\\t\\tfunction int32ToFourCC( value ) {\\n\\n\\t\\t\\treturn String.fromCharCode(\\n\\t\\t\\t\\tvalue & 0xff,\\n\\t\\t\\t\\t( value >> 8 ) & 0xff,\\n\\t\\t\\t\\t( value >> 16 ) & 0xff,\\n\\t\\t\\t\\t( value >> 24 ) & 0xff\\n\\t\\t\\t);\\n\\n\\t\\t}\\n\\n\\t\\tfunction loadARGBMip( buffer, dataOffset, width, height ) {\\n\\n\\t\\t\\tvar dataLength = width * height * 4;\\n\\t\\t\\tvar srcBuffer = new Uint8Array( buffer, dataOffset, dataLength );\\n\\t\\t\\tvar byteArray = new Uint8Array( dataLength );\\n\\t\\t\\tvar dst = 0;\\n\\t\\t\\tvar src = 0;\\n\\t\\t\\tfor ( var y = 0; y < height; y ++ ) {\\n\\n\\t\\t\\t\\tfor ( var x = 0; x < width; x ++ ) {\\n\\n\\t\\t\\t\\t\\tvar b = srcBuffer[ src ]; src ++;\\n\\t\\t\\t\\t\\tvar g = srcBuffer[ src ]; src ++;\\n\\t\\t\\t\\t\\tvar r = srcBuffer[ src ]; src ++;\\n\\t\\t\\t\\t\\tvar a = srcBuffer[ src ]; src ++;\\n\\t\\t\\t\\t\\tbyteArray[ dst ] = r; dst ++;\\t//r\\n\\t\\t\\t\\t\\tbyteArray[ dst ] = g; dst ++;\\t//g\\n\\t\\t\\t\\t\\tbyteArray[ dst ] = b; dst ++;\\t//b\\n\\t\\t\\t\\t\\tbyteArray[ dst ] = a; dst ++;\\t//a\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\t\\t\\treturn byteArray;\\n\\n\\t\\t}\\n\\n\\t\\tvar FOURCC_DXT1 = fourCCToInt32( \\\"DXT1\\\" );\\n\\t\\tvar FOURCC_DXT3 = fourCCToInt32( \\\"DXT3\\\" );\\n\\t\\tvar FOURCC_DXT5 = fourCCToInt32( \\\"DXT5\\\" );\\n\\t\\tvar FOURCC_ETC1 = fourCCToInt32( \\\"ETC1\\\" );\\n\\n\\t\\tvar headerLengthInt = 31; // The header length in 32 bit ints\\n\\n\\t\\t// Offsets into the header array\\n\\n\\t\\tvar off_magic = 0;\\n\\n\\t\\tvar off_size = 1;\\n\\t\\tvar off_flags = 2;\\n\\t\\tvar off_height = 3;\\n\\t\\tvar off_width = 4;\\n\\n\\t\\tvar off_mipmapCount = 7;\\n\\n\\t\\tvar off_pfFlags = 20;\\n\\t\\tvar off_pfFourCC = 21;\\n\\t\\tvar off_RGBBitCount = 22;\\n\\t\\tvar off_RBitMask = 23;\\n\\t\\tvar off_GBitMask = 24;\\n\\t\\tvar off_BBitMask = 25;\\n\\t\\tvar off_ABitMask = 26;\\n\\n\\t\\tvar off_caps = 27;\\n\\t\\tvar off_caps2 = 28;\\n\\t\\tvar off_caps3 = 29;\\n\\t\\tvar off_caps4 = 30;\\n\\n\\t\\t// Parse header\\n\\n\\t\\tvar header = new Int32Array( buffer, 0, headerLengthInt );\\n\\n\\t\\tif ( header[ off_magic ] !== DDS_MAGIC ) {\\n\\n\\t\\t\\tconsole.error( 'THREE.DDSLoader.parse: Invalid magic number in DDS header.' );\\n\\t\\t\\treturn dds;\\n\\n\\t\\t}\\n\\n\\t\\tif ( ! header[ off_pfFlags ] & DDPF_FOURCC ) {\\n\\n\\t\\t\\tconsole.error( 'THREE.DDSLoader.parse: Unsupported format, must contain a FourCC code.' );\\n\\t\\t\\treturn dds;\\n\\n\\t\\t}\\n\\n\\t\\tvar blockBytes;\\n\\n\\t\\tvar fourCC = header[ off_pfFourCC ];\\n\\n\\t\\tvar isRGBAUncompressed = false;\\n\\n\\t\\tswitch ( fourCC ) {\\n\\n\\t\\t\\tcase FOURCC_DXT1:\\n\\n\\t\\t\\t\\tblockBytes = 8;\\n\\t\\t\\t\\tdds.format = THREE.RGB_S3TC_DXT1_Format;\\n\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\tcase FOURCC_DXT3:\\n\\n\\t\\t\\t\\tblockBytes = 16;\\n\\t\\t\\t\\tdds.format = THREE.RGBA_S3TC_DXT3_Format;\\n\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\tcase FOURCC_DXT5:\\n\\n\\t\\t\\t\\tblockBytes = 16;\\n\\t\\t\\t\\tdds.format = THREE.RGBA_S3TC_DXT5_Format;\\n\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\tcase FOURCC_ETC1:\\n\\n\\t\\t\\t\\tblockBytes = 8;\\n\\t\\t\\t\\tdds.format = THREE.RGB_ETC1_Format;\\n\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\tdefault:\\n\\n\\t\\t\\t\\tif ( header[ off_RGBBitCount ] === 32\\n\\t\\t\\t\\t\\t&& header[ off_RBitMask ] & 0xff0000\\n\\t\\t\\t\\t\\t&& header[ off_GBitMask ] & 0xff00\\n\\t\\t\\t\\t\\t&& header[ off_BBitMask ] & 0xff\\n\\t\\t\\t\\t\\t&& header[ off_ABitMask ] & 0xff000000  ) {\\n\\n\\t\\t\\t\\t\\tisRGBAUncompressed = true;\\n\\t\\t\\t\\t\\tblockBytes = 64;\\n\\t\\t\\t\\t\\tdds.format = THREE.RGBAFormat;\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\tconsole.error( 'THREE.DDSLoader.parse: Unsupported FourCC code ', int32ToFourCC( fourCC ) );\\n\\t\\t\\t\\t\\treturn dds;\\n\\n\\t\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tdds.mipmapCount = 1;\\n\\n\\t\\tif ( header[ off_flags ] & DDSD_MIPMAPCOUNT && loadMipmaps !== false ) {\\n\\n\\t\\t\\tdds.mipmapCount = Math.max( 1, header[ off_mipmapCount ] );\\n\\n\\t\\t}\\n\\n\\t\\tvar caps2 = header[ off_caps2 ];\\n\\t\\tdds.isCubemap = caps2 & DDSCAPS2_CUBEMAP ? true : false;\\n\\t\\tif ( dds.isCubemap && (\\n\\t\\t\\t! ( caps2 & DDSCAPS2_CUBEMAP_POSITIVEX ) ||\\n\\t\\t\\t! ( caps2 & DDSCAPS2_CUBEMAP_NEGATIVEX ) ||\\n\\t\\t\\t! ( caps2 & DDSCAPS2_CUBEMAP_POSITIVEY ) ||\\n\\t\\t\\t! ( caps2 & DDSCAPS2_CUBEMAP_NEGATIVEY ) ||\\n\\t\\t\\t! ( caps2 & DDSCAPS2_CUBEMAP_POSITIVEZ ) ||\\n\\t\\t\\t! ( caps2 & DDSCAPS2_CUBEMAP_NEGATIVEZ )\\n\\t\\t\\t) ) {\\n\\n\\t\\t\\tconsole.error( 'THREE.DDSLoader.parse: Incomplete cubemap faces' );\\n\\t\\t\\treturn dds;\\n\\n\\t\\t}\\n\\n\\t\\tdds.width = header[ off_width ];\\n\\t\\tdds.height = header[ off_height ];\\n\\n\\t\\tvar dataOffset = header[ off_size ] + 4;\\n\\n\\t\\t// Extract mipmaps buffers\\n\\n\\t\\tvar faces = dds.isCubemap ? 6 : 1;\\n\\n\\t\\tfor ( var face = 0; face < faces; face ++ ) {\\n\\n\\t\\t\\tvar width = dds.width;\\n\\t\\t\\tvar height = dds.height;\\n\\n\\t\\t\\tfor ( var i = 0; i < dds.mipmapCount; i ++ ) {\\n\\n\\t\\t\\t\\tif ( isRGBAUncompressed ) {\\n\\n\\t\\t\\t\\t\\tvar byteArray = loadARGBMip( buffer, dataOffset, width, height );\\n\\t\\t\\t\\t\\tvar dataLength = byteArray.length;\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\tvar dataLength = Math.max( 4, width ) / 4 * Math.max( 4, height ) / 4 * blockBytes;\\n\\t\\t\\t\\t\\tvar byteArray = new Uint8Array( buffer, dataOffset, dataLength );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tvar mipmap = { \\\"data\\\": byteArray, \\\"width\\\": width, \\\"height\\\": height };\\n\\t\\t\\t\\tdds.mipmaps.push( mipmap );\\n\\n\\t\\t\\t\\tdataOffset += dataLength;\\n\\n\\t\\t\\t\\twidth = Math.max( width >> 1, 1 );\\n\\t\\t\\t\\theight = Math.max( height >> 1, 1 );\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\treturn dds;\\n\\n\\t};\\n\\n};\",\"module.exports = function( THREE ){\\n\\t/**\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t *\\n\\t * Depth-of-field shader using mipmaps\\n\\t * - from Matt Handley @applmak\\n\\t * - requires power-of-2 sized render target with enabled mipmaps\\n\\t */\\n\\n\\tTHREE.DOFMipMapShader = {\\n\\n\\t\\tuniforms: {\\n\\n\\t\\t\\t\\\"tColor\\\":   { type: \\\"t\\\", value: null },\\n\\t\\t\\t\\\"tDepth\\\":   { type: \\\"t\\\", value: null },\\n\\t\\t\\t\\\"focus\\\":    { type: \\\"f\\\", value: 1.0 },\\n\\t\\t\\t\\\"maxblur\\\":  { type: \\\"f\\\", value: 1.0 }\\n\\n\\t\\t},\\n\\n\\t\\tvertexShader: [\\n\\n\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\n\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t\\\"vUv = uv;\\\",\\n\\t\\t\\t\\t\\\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\\",\\n\\n\\t\\t\\t\\\"}\\\"\\n\\n\\t\\t].join( \\\"\\\\n\\\" ),\\n\\n\\t\\tfragmentShader: [\\n\\n\\t\\t\\t\\\"uniform float focus;\\\",\\n\\t\\t\\t\\\"uniform float maxblur;\\\",\\n\\n\\t\\t\\t\\\"uniform sampler2D tColor;\\\",\\n\\t\\t\\t\\\"uniform sampler2D tDepth;\\\",\\n\\n\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\n\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t\\\"vec4 depth = texture2D( tDepth, vUv );\\\",\\n\\n\\t\\t\\t\\t\\\"float factor = depth.x - focus;\\\",\\n\\n\\t\\t\\t\\t\\\"vec4 col = texture2D( tColor, vUv, 2.0 * maxblur * abs( focus - depth.x ) );\\\",\\n\\n\\t\\t\\t\\t\\\"gl_FragColor = col;\\\",\\n\\t\\t\\t\\t\\\"gl_FragColor.a = 1.0;\\\",\\n\\n\\t\\t\\t\\\"}\\\"\\n\\n\\t\\t].join( \\\"\\\\n\\\" )\\n\\n\\t};\\n\\n}\\n\",\"module.exports = function( THREE ){\\n\\t/**\\n\\t * @author felixturner / http://airtight.cc/\\n\\t *\\n\\t * RGB Shift Shader\\n\\t * Shifts red and blue channels from center in opposite directions\\n\\t * Ported from http://kriss.cx/tom/2009/05/rgb-shift/\\n\\t * by Tom Butterworth / http://kriss.cx/tom/\\n\\t *\\n\\t * amount: shift distance (1 is width of input)\\n\\t * angle: shift angle in radians\\n\\t */\\n\\n\\tTHREE.DigitalGlitch = {\\n\\n\\t\\tuniforms: {\\n\\n\\t\\t\\t\\\"tDiffuse\\\":\\t\\t{ type: \\\"t\\\", value: null },//diffuse texture\\n\\t\\t\\t\\\"tDisp\\\":\\t\\t{ type: \\\"t\\\", value: null },//displacement texture for digital glitch squares\\n\\t\\t\\t\\\"byp\\\":\\t\\t\\t{ type: \\\"i\\\", value: 0 },//apply the glitch ?\\n\\t\\t\\t\\\"amount\\\":\\t\\t{ type: \\\"f\\\", value: 0.08 },\\n\\t\\t\\t\\\"angle\\\":\\t\\t{ type: \\\"f\\\", value: 0.02 },\\n\\t\\t\\t\\\"seed\\\":\\t\\t\\t{ type: \\\"f\\\", value: 0.02 },\\n\\t\\t\\t\\\"seed_x\\\":\\t\\t{ type: \\\"f\\\", value: 0.02 },//-1,1\\n\\t\\t\\t\\\"seed_y\\\":\\t\\t{ type: \\\"f\\\", value: 0.02 },//-1,1\\n\\t\\t\\t\\\"distortion_x\\\":\\t{ type: \\\"f\\\", value: 0.5 },\\n\\t\\t\\t\\\"distortion_y\\\":\\t{ type: \\\"f\\\", value: 0.6 },\\n\\t\\t\\t\\\"col_s\\\":\\t\\t{ type: \\\"f\\\", value: 0.05 }\\n\\t\\t},\\n\\n\\t\\tvertexShader: [\\n\\n\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\t\\t\\t\\\"void main() {\\\",\\n\\t\\t\\t\\t\\\"vUv = uv;\\\",\\n\\t\\t\\t\\t\\\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\\",\\n\\t\\t\\t\\\"}\\\"\\n\\t\\t].join( \\\"\\\\n\\\" ),\\n\\n\\t\\tfragmentShader: [\\n\\t\\t\\t\\\"uniform int byp;\\\",//should we apply the glitch ?\\n\\t\\t\\t\\n\\t\\t\\t\\\"uniform sampler2D tDiffuse;\\\",\\n\\t\\t\\t\\\"uniform sampler2D tDisp;\\\",\\n\\t\\t\\t\\n\\t\\t\\t\\\"uniform float amount;\\\",\\n\\t\\t\\t\\\"uniform float angle;\\\",\\n\\t\\t\\t\\\"uniform float seed;\\\",\\n\\t\\t\\t\\\"uniform float seed_x;\\\",\\n\\t\\t\\t\\\"uniform float seed_y;\\\",\\n\\t\\t\\t\\\"uniform float distortion_x;\\\",\\n\\t\\t\\t\\\"uniform float distortion_y;\\\",\\n\\t\\t\\t\\\"uniform float col_s;\\\",\\n\\t\\t\\t\\t\\n\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\t\\t\\t\\n\\t\\t\\t\\n\\t\\t\\t\\\"float rand(vec2 co){\\\",\\n\\t\\t\\t\\t\\\"return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\\"void main() {\\\",\\n\\t\\t\\t\\t\\\"if(byp<1) {\\\",\\n\\t\\t\\t\\t\\t\\\"vec2 p = vUv;\\\",\\n\\t\\t\\t\\t\\t\\\"float xs = floor(gl_FragCoord.x / 0.5);\\\",\\n\\t\\t\\t\\t\\t\\\"float ys = floor(gl_FragCoord.y / 0.5);\\\",\\n\\t\\t\\t\\t\\t//based on staffantans glitch shader for unity https://github.com/staffantan/unityglitch\\n\\t\\t\\t\\t\\t\\\"vec4 normal = texture2D (tDisp, p*seed*seed);\\\",\\n\\t\\t\\t\\t\\t\\\"if(p.y<distortion_x+col_s && p.y>distortion_x-col_s*seed) {\\\",\\n\\t\\t\\t\\t\\t\\t\\\"if(seed_x>0.){\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"p.y = 1. - (p.y + distortion_y);\\\",\\n\\t\\t\\t\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\t\\t\\t\\\"else {\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"p.y = distortion_y;\\\",\\n\\t\\t\\t\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\t\\t\\\"if(p.x<distortion_y+col_s && p.x>distortion_y-col_s*seed) {\\\",\\n\\t\\t\\t\\t\\t\\t\\\"if(seed_y>0.){\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"p.x=distortion_x;\\\",\\n\\t\\t\\t\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\t\\t\\t\\\"else {\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"p.x = 1. - (p.x + distortion_x);\\\",\\n\\t\\t\\t\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\t\\t\\\"p.x+=normal.x*seed_x*(seed/5.);\\\",\\n\\t\\t\\t\\t\\t\\\"p.y+=normal.y*seed_y*(seed/5.);\\\",\\n\\t\\t\\t\\t\\t//base from RGB shift shader\\n\\t\\t\\t\\t\\t\\\"vec2 offset = amount * vec2( cos(angle), sin(angle));\\\",\\n\\t\\t\\t\\t\\t\\\"vec4 cr = texture2D(tDiffuse, p + offset);\\\",\\n\\t\\t\\t\\t\\t\\\"vec4 cga = texture2D(tDiffuse, p);\\\",\\n\\t\\t\\t\\t\\t\\\"vec4 cb = texture2D(tDiffuse, p - offset);\\\",\\n\\t\\t\\t\\t\\t\\\"gl_FragColor = vec4(cr.r, cga.g, cb.b, cga.a);\\\",\\n\\t\\t\\t\\t\\t//add noise\\n\\t\\t\\t\\t\\t\\\"vec4 snow = 200.*amount*vec4(rand(vec2(xs * seed,ys * seed*50.))*0.2);\\\",\\n\\t\\t\\t\\t\\t\\\"gl_FragColor = gl_FragColor+ snow;\\\",\\n\\t\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\t\\\"else {\\\",\\n\\t\\t\\t\\t\\t\\\"gl_FragColor=texture2D (tDiffuse, vUv);\\\",\\n\\t\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"}\\\"\\n\\n\\t\\t].join( \\\"\\\\n\\\" )\\n\\n\\t};\\n\\n}\\n\",\"module.exports = function( THREE ){\\n\\n\\t/**\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t */\\n\\n\\tTHREE.DotScreenPass = function ( center, angle, scale ) {\\n\\n\\t\\tif ( THREE.DotScreenShader === undefined )\\n\\t\\t\\tconsole.error( \\\"THREE.DotScreenPass relies on THREE.DotScreenShader\\\" );\\n\\n\\t\\tvar shader = THREE.DotScreenShader;\\n\\n\\t\\tthis.uniforms = THREE.UniformsUtils.clone( shader.uniforms );\\n\\n\\t\\tif ( center !== undefined ) this.uniforms[ \\\"center\\\" ].value.copy( center );\\n\\t\\tif ( angle !== undefined ) this.uniforms[ \\\"angle\\\" ].value = angle;\\n\\t\\tif ( scale !== undefined ) this.uniforms[ \\\"scale\\\" ].value = scale;\\n\\n\\t\\tthis.material = new THREE.ShaderMaterial( {\\n\\n\\t\\t\\tuniforms: this.uniforms,\\n\\t\\t\\tvertexShader: shader.vertexShader,\\n\\t\\t\\tfragmentShader: shader.fragmentShader\\n\\n\\t\\t} );\\n\\n\\t\\tthis.enabled = true;\\n\\t\\tthis.renderToScreen = false;\\n\\t\\tthis.needsSwap = true;\\n\\n\\n\\t\\tthis.camera = new THREE.OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\\n\\t\\tthis.scene  = new THREE.Scene();\\n\\n\\t\\tthis.quad = new THREE.Mesh( new THREE.PlaneBufferGeometry( 2, 2 ), null );\\n\\t\\tthis.scene.add( this.quad );\\n\\n\\t};\\n\\n\\tTHREE.DotScreenPass.prototype = {\\n\\n\\t\\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\\n\\n\\t\\t\\tthis.uniforms[ \\\"tDiffuse\\\" ].value = readBuffer;\\n\\t\\t\\tthis.uniforms[ \\\"tSize\\\" ].value.set( readBuffer.width, readBuffer.height );\\n\\n\\t\\t\\tthis.quad.material = this.material;\\n\\n\\t\\t\\tif ( this.renderToScreen ) {\\n\\n\\t\\t\\t\\trenderer.render( this.scene, this.camera );\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\trenderer.render( this.scene, this.camera, writeBuffer, false );\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t};\\n\\n};\\n\",\"module.exports = function( THREE ){\\n\\t/**\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t *\\n\\t * Dot screen shader\\n\\t * based on glfx.js sepia shader\\n\\t * https://github.com/evanw/glfx.js\\n\\t */\\n\\n\\tTHREE.DotScreenShader = {\\n\\n\\t\\tuniforms: {\\n\\n\\t\\t\\t\\\"tDiffuse\\\": { type: \\\"t\\\", value: null },\\n\\t\\t\\t\\\"tSize\\\":    { type: \\\"v2\\\", value: new THREE.Vector2( 256, 256 ) },\\n\\t\\t\\t\\\"center\\\":   { type: \\\"v2\\\", value: new THREE.Vector2( 0.5, 0.5 ) },\\n\\t\\t\\t\\\"angle\\\":    { type: \\\"f\\\", value: 1.57 },\\n\\t\\t\\t\\\"scale\\\":    { type: \\\"f\\\", value: 1.0 }\\n\\n\\t\\t},\\n\\n\\t\\tvertexShader: [\\n\\n\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\n\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t\\\"vUv = uv;\\\",\\n\\t\\t\\t\\t\\\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\\",\\n\\n\\t\\t\\t\\\"}\\\"\\n\\n\\t\\t].join( \\\"\\\\n\\\" ),\\n\\n\\t\\tfragmentShader: [\\n\\n\\t\\t\\t\\\"uniform vec2 center;\\\",\\n\\t\\t\\t\\\"uniform float angle;\\\",\\n\\t\\t\\t\\\"uniform float scale;\\\",\\n\\t\\t\\t\\\"uniform vec2 tSize;\\\",\\n\\n\\t\\t\\t\\\"uniform sampler2D tDiffuse;\\\",\\n\\n\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\n\\t\\t\\t\\\"float pattern() {\\\",\\n\\n\\t\\t\\t\\t\\\"float s = sin( angle ), c = cos( angle );\\\",\\n\\n\\t\\t\\t\\t\\\"vec2 tex = vUv * tSize - center;\\\",\\n\\t\\t\\t\\t\\\"vec2 point = vec2( c * tex.x - s * tex.y, s * tex.x + c * tex.y ) * scale;\\\",\\n\\n\\t\\t\\t\\t\\\"return ( sin( point.x ) * sin( point.y ) ) * 4.0;\\\",\\n\\n\\t\\t\\t\\\"}\\\",\\n\\n\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t\\\"vec4 color = texture2D( tDiffuse, vUv );\\\",\\n\\n\\t\\t\\t\\t\\\"float average = ( color.r + color.g + color.b ) / 3.0;\\\",\\n\\n\\t\\t\\t\\t\\\"gl_FragColor = vec4( vec3( average * 10.0 - 5.0 + pattern() ), color.a );\\\",\\n\\n\\t\\t\\t\\\"}\\\"\\n\\n\\t\\t].join( \\\"\\\\n\\\" )\\n\\n\\t};\\n\\n}\\n\",\"module.exports = function( THREE ){\\n\\t/**\\n\\t * @author zz85 / https://github.com/zz85 | https://www.lab4games.net/zz85/blog\\n\\t *\\n\\t * Edge Detection Shader using Frei-Chen filter\\n\\t * Based on http://rastergrid.com/blog/2011/01/frei-chen-edge-detector\\n\\t *\\n\\t * aspect: vec2 of (1/width, 1/height)\\n\\t */\\n\\n\\tTHREE.EdgeShader = {\\n\\n\\t\\tuniforms: {\\n\\n\\t\\t\\t\\\"tDiffuse\\\": { type: \\\"t\\\", value: null },\\n\\t\\t\\t\\\"aspect\\\":    { type: \\\"v2\\\", value: new THREE.Vector2( 512, 512 ) },\\n\\t\\t},\\n\\n\\t\\tvertexShader: [\\n\\n\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\n\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t\\\"vUv = uv;\\\",\\n\\t\\t\\t\\t\\\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\\",\\n\\n\\t\\t\\t\\\"}\\\"\\n\\n\\t\\t].join( \\\"\\\\n\\\" ),\\n\\n\\t\\tfragmentShader: [\\n\\n\\t\\t\\t\\\"uniform sampler2D tDiffuse;\\\",\\n\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\n\\t\\t\\t\\\"uniform vec2 aspect;\\\",\\n\\n\\t\\t\\t\\\"vec2 texel = vec2(1.0 / aspect.x, 1.0 / aspect.y);\\\",\\n\\n\\n\\t\\t\\t\\\"mat3 G[9];\\\",\\n\\n\\t\\t\\t// hard coded matrix values!!!! as suggested in https://github.com/neilmendoza/ofxPostProcessing/blob/master/src/EdgePass.cpp#L45\\n\\n\\t\\t\\t\\\"const mat3 g0 = mat3( 0.3535533845424652, 0, -0.3535533845424652, 0.5, 0, -0.5, 0.3535533845424652, 0, -0.3535533845424652 );\\\",\\n\\t\\t\\t\\\"const mat3 g1 = mat3( 0.3535533845424652, 0.5, 0.3535533845424652, 0, 0, 0, -0.3535533845424652, -0.5, -0.3535533845424652 );\\\",\\n\\t\\t\\t\\\"const mat3 g2 = mat3( 0, 0.3535533845424652, -0.5, -0.3535533845424652, 0, 0.3535533845424652, 0.5, -0.3535533845424652, 0 );\\\",\\n\\t\\t\\t\\\"const mat3 g3 = mat3( 0.5, -0.3535533845424652, 0, -0.3535533845424652, 0, 0.3535533845424652, 0, 0.3535533845424652, -0.5 );\\\",\\n\\t\\t\\t\\\"const mat3 g4 = mat3( 0, -0.5, 0, 0.5, 0, 0.5, 0, -0.5, 0 );\\\",\\n\\t\\t\\t\\\"const mat3 g5 = mat3( -0.5, 0, 0.5, 0, 0, 0, 0.5, 0, -0.5 );\\\",\\n\\t\\t\\t\\\"const mat3 g6 = mat3( 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.6666666865348816, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204 );\\\",\\n\\t\\t\\t\\\"const mat3 g7 = mat3( -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, 0.6666666865348816, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408 );\\\",\\n\\t\\t\\t\\\"const mat3 g8 = mat3( 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408 );\\\",\\n\\n\\t\\t\\t\\\"void main(void)\\\",\\n\\t\\t\\t\\\"{\\\",\\n\\n\\t\\t\\t\\t\\\"G[0] = g0,\\\",\\n\\t\\t\\t\\t\\\"G[1] = g1,\\\",\\n\\t\\t\\t\\t\\\"G[2] = g2,\\\",\\n\\t\\t\\t\\t\\\"G[3] = g3,\\\",\\n\\t\\t\\t\\t\\\"G[4] = g4,\\\",\\n\\t\\t\\t\\t\\\"G[5] = g5,\\\",\\n\\t\\t\\t\\t\\\"G[6] = g6,\\\",\\n\\t\\t\\t\\t\\\"G[7] = g7,\\\",\\n\\t\\t\\t\\t\\\"G[8] = g8;\\\",\\n\\n\\t\\t\\t\\t\\\"mat3 I;\\\",\\n\\t\\t\\t\\t\\\"float cnv[9];\\\",\\n\\t\\t\\t\\t\\\"vec3 sample;\\\",\\n\\n\\t\\t\\t\\t/* fetch the 3x3 neighbourhood and use the RGB vector's length as intensity value */\\n\\t\\t\\t\\t\\\"for (float i=0.0; i<3.0; i++) {\\\",\\n\\t\\t\\t\\t\\t\\\"for (float j=0.0; j<3.0; j++) {\\\",\\n\\t\\t\\t\\t\\t\\t\\\"sample = texture2D(tDiffuse, vUv + texel * vec2(i-1.0,j-1.0) ).rgb;\\\",\\n\\t\\t\\t\\t\\t\\t\\\"I[int(i)][int(j)] = length(sample);\\\",\\n\\t\\t\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\t\\\"}\\\",\\n\\n\\t\\t\\t\\t/* calculate the convolution values for all the masks */\\n\\t\\t\\t\\t\\\"for (int i=0; i<9; i++) {\\\",\\n\\t\\t\\t\\t\\t\\\"float dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\\\",\\n\\t\\t\\t\\t\\t\\\"cnv[i] = dp3 * dp3;\\\",\\n\\t\\t\\t\\t\\\"}\\\",\\n\\n\\t\\t\\t\\t\\\"float M = (cnv[0] + cnv[1]) + (cnv[2] + cnv[3]);\\\",\\n\\t\\t\\t\\t\\\"float S = (cnv[4] + cnv[5]) + (cnv[6] + cnv[7]) + (cnv[8] + M);\\\",\\n\\n\\t\\t\\t\\t\\\"gl_FragColor = vec4(vec3(sqrt(M/S)), 1.0);\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\n\\t\\t].join( \\\"\\\\n\\\" )\\n\\t};\\n\\n}\\n\",\"module.exports = function( THREE ){\\n\\t/**\\n\\t * @author zz85 / https://github.com/zz85 | https://www.lab4games.net/zz85/blog\\n\\t *\\n\\t * Edge Detection Shader using Sobel filter\\n\\t * Based on http://rastergrid.com/blog/2011/01/frei-chen-edge-detector\\n\\t *\\n\\t * aspect: vec2 of (1/width, 1/height)\\n\\t */\\n\\n\\tTHREE.EdgeShader2 = {\\n\\n\\t\\tuniforms: {\\n\\n\\t\\t\\t\\\"tDiffuse\\\": { type: \\\"t\\\", value: null },\\n\\t\\t\\t\\\"aspect\\\":    { type: \\\"v2\\\", value: new THREE.Vector2( 512, 512 ) },\\n\\t\\t},\\n\\n\\t\\tvertexShader: [\\n\\n\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\n\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t\\\"vUv = uv;\\\",\\n\\t\\t\\t\\t\\\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\\",\\n\\n\\t\\t\\t\\\"}\\\"\\n\\n\\t\\t].join( \\\"\\\\n\\\" ),\\n\\n\\t\\tfragmentShader: [\\n\\n\\t\\t\\t\\\"uniform sampler2D tDiffuse;\\\",\\n\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\t\\t\\t\\\"uniform vec2 aspect;\\\",\\n\\n\\n\\t\\t\\t\\\"vec2 texel = vec2(1.0 / aspect.x, 1.0 / aspect.y);\\\",\\n\\n\\t\\t\\t\\\"mat3 G[2];\\\",\\n\\n\\t\\t\\t\\\"const mat3 g0 = mat3( 1.0, 2.0, 1.0, 0.0, 0.0, 0.0, -1.0, -2.0, -1.0 );\\\",\\n\\t\\t\\t\\\"const mat3 g1 = mat3( 1.0, 0.0, -1.0, 2.0, 0.0, -2.0, 1.0, 0.0, -1.0 );\\\",\\n\\n\\n\\t\\t\\t\\\"void main(void)\\\",\\n\\t\\t\\t\\\"{\\\",\\n\\t\\t\\t\\t\\\"mat3 I;\\\",\\n\\t\\t\\t\\t\\\"float cnv[2];\\\",\\n\\t\\t\\t\\t\\\"vec3 sample;\\\",\\n\\n\\t\\t\\t\\t\\\"G[0] = g0;\\\",\\n\\t\\t\\t\\t\\\"G[1] = g1;\\\",\\n\\n\\t\\t\\t\\t/* fetch the 3x3 neighbourhood and use the RGB vector's length as intensity value */\\n\\t\\t\\t\\t\\\"for (float i=0.0; i<3.0; i++)\\\",\\n\\t\\t\\t\\t\\\"for (float j=0.0; j<3.0; j++) {\\\",\\n\\t\\t\\t\\t\\t\\\"sample = texture2D( tDiffuse, vUv + texel * vec2(i-1.0,j-1.0) ).rgb;\\\",\\n\\t\\t\\t\\t\\t\\\"I[int(i)][int(j)] = length(sample);\\\",\\n\\t\\t\\t\\t\\\"}\\\",\\n\\n\\t\\t\\t\\t/* calculate the convolution values for all the masks */\\n\\t\\t\\t\\t\\\"for (int i=0; i<2; i++) {\\\",\\n\\t\\t\\t\\t\\t\\\"float dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\\\",\\n\\t\\t\\t\\t\\t\\\"cnv[i] = dp3 * dp3; \\\",\\n\\t\\t\\t\\t\\\"}\\\",\\n\\n\\t\\t\\t\\t\\\"gl_FragColor = vec4(0.5 * sqrt(cnv[0]*cnv[0]+cnv[1]*cnv[1]));\\\",\\n\\t\\t\\t\\\"} \\\",\\n\\n\\t\\t].join( \\\"\\\\n\\\" )\\n\\n\\t};\\n\\n}\\n\",\"module.exports = function( THREE ){\\n\\n\\t/**\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t */\\n\\n\\tTHREE.EffectComposer = function ( renderer, renderTarget ) {\\n\\n\\t\\tthis.renderer = renderer;\\n\\n\\t\\tif ( renderTarget === undefined ) {\\n\\n\\t\\t\\tvar pixelRatio = renderer.getPixelRatio();\\n\\n\\t\\t\\tvar width  = Math.floor( renderer.context.canvas.width  / pixelRatio ) || 1;\\n\\t\\t\\tvar height = Math.floor( renderer.context.canvas.height / pixelRatio ) || 1;\\n\\t\\t\\tvar parameters = { minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, format: THREE.RGBFormat, stencilBuffer: false };\\n\\n\\t\\t\\trenderTarget = new THREE.WebGLRenderTarget( width, height, parameters );\\n\\n\\t\\t}\\n\\n\\t\\tthis.renderTarget1 = renderTarget;\\n\\t\\tthis.renderTarget2 = renderTarget.clone();\\n\\n\\t\\tthis.writeBuffer = this.renderTarget1;\\n\\t\\tthis.readBuffer = this.renderTarget2;\\n\\n\\t\\tthis.passes = [];\\n\\n\\t\\tif ( THREE.CopyShader === undefined )\\n\\t\\t\\tconsole.error( \\\"THREE.EffectComposer relies on THREE.CopyShader\\\" );\\n\\n\\t\\tthis.copyPass = new THREE.ShaderPass( THREE.CopyShader );\\n\\n\\t};\\n\\n\\tTHREE.EffectComposer.prototype = {\\n\\n\\t\\tswapBuffers: function() {\\n\\n\\t\\t\\tvar tmp = this.readBuffer;\\n\\t\\t\\tthis.readBuffer = this.writeBuffer;\\n\\t\\t\\tthis.writeBuffer = tmp;\\n\\n\\t\\t},\\n\\n\\t\\taddPass: function ( pass ) {\\n\\n\\t\\t\\tthis.passes.push( pass );\\n\\n\\t\\t},\\n\\n\\t\\tinsertPass: function ( pass, index ) {\\n\\n\\t\\t\\tthis.passes.splice( index, 0, pass );\\n\\n\\t\\t},\\n\\n\\t\\trender: function ( delta ) {\\n\\n\\t\\t\\tthis.writeBuffer = this.renderTarget1;\\n\\t\\t\\tthis.readBuffer = this.renderTarget2;\\n\\n\\t\\t\\tvar maskActive = false;\\n\\n\\t\\t\\tvar pass, i, il = this.passes.length;\\n\\n\\t\\t\\tfor ( i = 0; i < il; i ++ ) {\\n\\n\\t\\t\\t\\tpass = this.passes[ i ];\\n\\n\\t\\t\\t\\tif ( ! pass.enabled ) continue;\\n\\n\\t\\t\\t\\tpass.render( this.renderer, this.writeBuffer, this.readBuffer, delta, maskActive );\\n\\n\\t\\t\\t\\tif ( pass.needsSwap ) {\\n\\n\\t\\t\\t\\t\\tif ( maskActive ) {\\n\\n\\t\\t\\t\\t\\t\\tvar context = this.renderer.context;\\n\\n\\t\\t\\t\\t\\t\\tcontext.stencilFunc( context.NOTEQUAL, 1, 0xffffffff );\\n\\n\\t\\t\\t\\t\\t\\tthis.copyPass.render( this.renderer, this.writeBuffer, this.readBuffer, delta );\\n\\n\\t\\t\\t\\t\\t\\tcontext.stencilFunc( context.EQUAL, 1, 0xffffffff );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tthis.swapBuffers();\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( pass instanceof THREE.MaskPass ) {\\n\\n\\t\\t\\t\\t\\tmaskActive = true;\\n\\n\\t\\t\\t\\t} else if ( pass instanceof THREE.ClearMaskPass ) {\\n\\n\\t\\t\\t\\t\\tmaskActive = false;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t},\\n\\n\\t\\treset: function ( renderTarget ) {\\n\\n\\t\\t\\tif ( renderTarget === undefined ) {\\n\\n\\t\\t\\t\\trenderTarget = this.renderTarget1.clone();\\n\\n\\t\\t\\t\\tvar pixelRatio = this.renderer.getPixelRatio();\\n\\n\\t\\t\\t\\trenderTarget.width  = Math.floor( this.renderer.context.canvas.width  / pixelRatio );\\n\\t\\t\\t\\trenderTarget.height = Math.floor( this.renderer.context.canvas.height / pixelRatio );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.renderTarget1.dispose();\\n\\t\\t\\tthis.renderTarget1 = renderTarget;\\n\\t\\t\\tthis.renderTarget2.dispose();\\n\\t\\t\\tthis.renderTarget2 = renderTarget.clone();\\n\\n\\t\\t\\tthis.writeBuffer = this.renderTarget1;\\n\\t\\t\\tthis.readBuffer = this.renderTarget2;\\n\\n\\t\\t},\\n\\n\\t\\tsetSize: function ( width, height ) {\\n\\n\\t\\t\\tthis.renderTarget1.setSize( width, height );\\n\\t\\t\\tthis.renderTarget2.setSize( width, height );\\n\\n\\t\\t}\\n\\n\\t};\\n\\n};\\n\",\"module.exports = function( THREE ){\\n\\n\\t/**\\n\\t * @author mattdsl / https://github.com/mattdesl/three-shader-fxaa\\n\\t */\\n\\t\\n\\tTHREE.FXAAShader = {\\n\\t\\tuniforms: {\\n\\t\\t\\ttDiffuse: {\\n\\t\\t\\t\\ttype: \\\"t\\\",\\n\\t\\t\\t\\tvalue: new THREE.Texture()\\n\\t\\t\\t},\\n\\t\\t\\tresolution: {\\n\\t\\t\\t\\ttype: \\\"v2\\\",\\n\\t\\t\\t\\tvalue: new THREE.Vector2()\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\tvertexShader: \\\"#define GLSLIFY 1\\\\nvarying vec2 vUv;\\\\n\\\\nvarying vec2 v_rgbNW;\\\\nvarying vec2 v_rgbNE;\\\\nvarying vec2 v_rgbSW;\\\\nvarying vec2 v_rgbSE;\\\\nvarying vec2 v_rgbM;\\\\n\\\\nuniform vec2 resolution;\\\\n\\\\nvoid main() {\\\\n  vUv = uv;\\\\n  vec2 fragCoord = uv * resolution;\\\\n  vec2 inverseVP = 1.0 / resolution.xy;\\\\n  v_rgbNW = (fragCoord + vec2(-1.0, -1.0)) * inverseVP;\\\\n  v_rgbNE = (fragCoord + vec2(1.0, -1.0)) * inverseVP;\\\\n  v_rgbSW = (fragCoord + vec2(-1.0, 1.0)) * inverseVP;\\\\n  v_rgbSE = (fragCoord + vec2(1.0, 1.0)) * inverseVP;\\\\n  v_rgbM = vec2(fragCoord * inverseVP);\\\\n\\\\n  gl_Position = projectionMatrix *\\\\n              modelViewMatrix *\\\\n              vec4(position,1.0);\\\\n}\\\\n\\\",\\n\\t\\tfragmentShader: \\\"#define GLSLIFY 1\\\\nvarying vec2 vUv;\\\\n\\\\n//texcoords computed in vertex step\\\\n//to avoid dependent texture reads\\\\nvarying vec2 v_rgbNW;\\\\nvarying vec2 v_rgbNE;\\\\nvarying vec2 v_rgbSW;\\\\nvarying vec2 v_rgbSE;\\\\nvarying vec2 v_rgbM;\\\\n\\\\n//make sure to have a resolution uniform set to the screen size\\\\nuniform vec2 resolution;\\\\nuniform sampler2D tDiffuse;\\\\n\\\\n/**\\\\nBasic FXAA implementation based on the code on geeks3d.com with the\\\\nmodification that the texture2DLod stuff was removed since it's\\\\nunsupported by WebGL.\\\\n\\\\n--\\\\n\\\\nFrom:\\\\nhttps://github.com/mitsuhiko/webgl-meincraft\\\\n\\\\nCopyright (c) 2011 by Armin Ronacher.\\\\n\\\\nSome rights reserved.\\\\n\\\\nRedistribution and use in source and binary forms, with or without\\\\nmodification, are permitted provided that the following conditions are\\\\nmet:\\\\n\\\\n    * Redistributions of source code must retain the above copyright\\\\n      notice, this list of conditions and the following disclaimer.\\\\n\\\\n    * Redistributions in binary form must reproduce the above\\\\n      copyright notice, this list of conditions and the following\\\\n      disclaimer in the documentation and/or other materials provided\\\\n      with the distribution.\\\\n\\\\n    * The names of the contributors may not be used to endorse or\\\\n      promote products derived from this software without specific\\\\n      prior written permission.\\\\n\\\\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\\\\n\\\\\\\"AS IS\\\\\\\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\\\\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\\\\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\\\\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\\\\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\\\\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\\\\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\\\\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\\\\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\\\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\\\n*/\\\\n\\\\n#ifndef FXAA_REDUCE_MIN\\\\n    #define FXAA_REDUCE_MIN   (1.0/ 128.0)\\\\n#endif\\\\n#ifndef FXAA_REDUCE_MUL\\\\n    #define FXAA_REDUCE_MUL   (1.0 / 8.0)\\\\n#endif\\\\n#ifndef FXAA_SPAN_MAX\\\\n    #define FXAA_SPAN_MAX     8.0\\\\n#endif\\\\n\\\\n//optimized version for mobile, where dependent \\\\n//texture reads can be a bottleneck\\\\nvec4 fxaa_1540259130(sampler2D tex, vec2 fragCoord, vec2 resolution,\\\\n            vec2 v_rgbNW, vec2 v_rgbNE, \\\\n            vec2 v_rgbSW, vec2 v_rgbSE, \\\\n            vec2 v_rgbM) {\\\\n    vec4 color;\\\\n    mediump vec2 inverseVP = vec2(1.0 / resolution.x, 1.0 / resolution.y);\\\\n    vec3 rgbNW = texture2D(tex, v_rgbNW).xyz;\\\\n    vec3 rgbNE = texture2D(tex, v_rgbNE).xyz;\\\\n    vec3 rgbSW = texture2D(tex, v_rgbSW).xyz;\\\\n    vec3 rgbSE = texture2D(tex, v_rgbSE).xyz;\\\\n    vec4 texColor = texture2D(tex, v_rgbM);\\\\n    vec3 rgbM  = texColor.xyz;\\\\n    vec3 luma = vec3(0.299, 0.587, 0.114);\\\\n    float lumaNW = dot(rgbNW, luma);\\\\n    float lumaNE = dot(rgbNE, luma);\\\\n    float lumaSW = dot(rgbSW, luma);\\\\n    float lumaSE = dot(rgbSE, luma);\\\\n    float lumaM  = dot(rgbM,  luma);\\\\n    float lumaMin = min(lumaM, min(min(lumaNW, lumaNE), min(lumaSW, lumaSE)));\\\\n    float lumaMax = max(lumaM, max(max(lumaNW, lumaNE), max(lumaSW, lumaSE)));\\\\n    \\\\n    mediump vec2 dir;\\\\n    dir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\\\\n    dir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));\\\\n    \\\\n    float dirReduce = max((lumaNW + lumaNE + lumaSW + lumaSE) *\\\\n                          (0.25 * FXAA_REDUCE_MUL), FXAA_REDUCE_MIN);\\\\n    \\\\n    float rcpDirMin = 1.0 / (min(abs(dir.x), abs(dir.y)) + dirReduce);\\\\n    dir = min(vec2(FXAA_SPAN_MAX, FXAA_SPAN_MAX),\\\\n              max(vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),\\\\n              dir * rcpDirMin)) * inverseVP;\\\\n    \\\\n    vec3 rgbA = 0.5 * (\\\\n        texture2D(tex, fragCoord * inverseVP + dir * (1.0 / 3.0 - 0.5)).xyz +\\\\n        texture2D(tex, fragCoord * inverseVP + dir * (2.0 / 3.0 - 0.5)).xyz);\\\\n    vec3 rgbB = rgbA * 0.5 + 0.25 * (\\\\n        texture2D(tex, fragCoord * inverseVP + dir * -0.5).xyz +\\\\n        texture2D(tex, fragCoord * inverseVP + dir * 0.5).xyz);\\\\n\\\\n    float lumaB = dot(rgbB, luma);\\\\n    if ((lumaB < lumaMin) || (lumaB > lumaMax))\\\\n        color = vec4(rgbA, texColor.a);\\\\n    else\\\\n        color = vec4(rgbB, texColor.a);\\\\n    return color;\\\\n}\\\\n\\\\nvoid main() {\\\\n  vec2 fragCoord = vUv * resolution;   \\\\n  gl_FragColor = fxaa_1540259130(tDiffuse, fragCoord, resolution, v_rgbNW, v_rgbNE, v_rgbSW, v_rgbSE, v_rgbM);\\\\n}\\\\n\\\"\\n\\t}\\n\\n}\\n\",\"module.exports = function( THREE ){\\n\\n\\t/**\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t */\\n\\n\\tTHREE.FilmPass = function ( noiseIntensity, scanlinesIntensity, scanlinesCount, grayscale ) {\\n\\n\\t\\tif ( THREE.FilmShader === undefined )\\n\\t\\t\\tconsole.error( \\\"THREE.FilmPass relies on THREE.FilmShader\\\" );\\n\\n\\t\\tvar shader = THREE.FilmShader;\\n\\n\\t\\tthis.uniforms = THREE.UniformsUtils.clone( shader.uniforms );\\n\\n\\t\\tthis.material = new THREE.ShaderMaterial( {\\n\\n\\t\\t\\tuniforms: this.uniforms,\\n\\t\\t\\tvertexShader: shader.vertexShader,\\n\\t\\t\\tfragmentShader: shader.fragmentShader\\n\\n\\t\\t} );\\n\\n\\t\\tif ( grayscale !== undefined )\\tthis.uniforms.grayscale.value = grayscale;\\n\\t\\tif ( noiseIntensity !== undefined ) this.uniforms.nIntensity.value = noiseIntensity;\\n\\t\\tif ( scanlinesIntensity !== undefined ) this.uniforms.sIntensity.value = scanlinesIntensity;\\n\\t\\tif ( scanlinesCount !== undefined ) this.uniforms.sCount.value = scanlinesCount;\\n\\n\\t\\tthis.enabled = true;\\n\\t\\tthis.renderToScreen = false;\\n\\t\\tthis.needsSwap = true;\\n\\n\\n\\t\\tthis.camera = new THREE.OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\\n\\t\\tthis.scene  = new THREE.Scene();\\n\\n\\t\\tthis.quad = new THREE.Mesh( new THREE.PlaneBufferGeometry( 2, 2 ), null );\\n\\t\\tthis.scene.add( this.quad );\\n\\n\\t};\\n\\n\\tTHREE.FilmPass.prototype = {\\n\\n\\t\\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\\n\\n\\t\\t\\tthis.uniforms[ \\\"tDiffuse\\\" ].value = readBuffer;\\n\\t\\t\\tthis.uniforms[ \\\"time\\\" ].value += delta;\\n\\n\\t\\t\\tthis.quad.material = this.material;\\n\\n\\t\\t\\tif ( this.renderToScreen ) {\\n\\n\\t\\t\\t\\trenderer.render( this.scene, this.camera );\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\trenderer.render( this.scene, this.camera, writeBuffer, false );\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t};\\n\\n};\\n\",\"module.exports = function( THREE ){\\n\\t/**\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t *\\n\\t * Film grain & scanlines shader\\n\\t *\\n\\t * - ported from HLSL to WebGL / GLSL\\n\\t * http://www.truevision3d.com/forums/showcase/staticnoise_colorblackwhite_scanline_shaders-t18698.0.html\\n\\t *\\n\\t * Screen Space Static Postprocessor\\n\\t *\\n\\t * Produces an analogue noise overlay similar to a film grain / TV static\\n\\t *\\n\\t * Original implementation and noise algorithm\\n\\t * Pat 'Hawthorne' Shearon\\n\\t *\\n\\t * Optimized scanlines + noise version with intensity scaling\\n\\t * Georg 'Leviathan' Steinrohder\\n\\t *\\n\\t * This version is provided under a Creative Commons Attribution 3.0 License\\n\\t * http://creativecommons.org/licenses/by/3.0/\\n\\t */\\n\\n\\tTHREE.FilmShader = {\\n\\n\\t\\tuniforms: {\\n\\n\\t\\t\\t\\\"tDiffuse\\\":   { type: \\\"t\\\", value: null },\\n\\t\\t\\t\\\"time\\\":       { type: \\\"f\\\", value: 0.0 },\\n\\t\\t\\t\\\"nIntensity\\\": { type: \\\"f\\\", value: 0.5 },\\n\\t\\t\\t\\\"sIntensity\\\": { type: \\\"f\\\", value: 0.05 },\\n\\t\\t\\t\\\"sCount\\\":     { type: \\\"f\\\", value: 4096 },\\n\\t\\t\\t\\\"grayscale\\\":  { type: \\\"i\\\", value: 1 }\\n\\n\\t\\t},\\n\\n\\t\\tvertexShader: [\\n\\n\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\n\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t\\\"vUv = uv;\\\",\\n\\t\\t\\t\\t\\\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\\",\\n\\n\\t\\t\\t\\\"}\\\"\\n\\n\\t\\t].join( \\\"\\\\n\\\" ),\\n\\n\\t\\tfragmentShader: [\\n\\n\\t\\t\\t// control parameter\\n\\t\\t\\t\\\"uniform float time;\\\",\\n\\n\\t\\t\\t\\\"uniform bool grayscale;\\\",\\n\\n\\t\\t\\t// noise effect intensity value (0 = no effect, 1 = full effect)\\n\\t\\t\\t\\\"uniform float nIntensity;\\\",\\n\\n\\t\\t\\t// scanlines effect intensity value (0 = no effect, 1 = full effect)\\n\\t\\t\\t\\\"uniform float sIntensity;\\\",\\n\\n\\t\\t\\t// scanlines effect count value (0 = no effect, 4096 = full effect)\\n\\t\\t\\t\\\"uniform float sCount;\\\",\\n\\n\\t\\t\\t\\\"uniform sampler2D tDiffuse;\\\",\\n\\n\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\n\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t// sample the source\\n\\t\\t\\t\\t\\\"vec4 cTextureScreen = texture2D( tDiffuse, vUv );\\\",\\n\\n\\t\\t\\t\\t// make some noise\\n\\t\\t\\t\\t\\\"float x = vUv.x * vUv.y * time *  1000.0;\\\",\\n\\t\\t\\t\\t\\\"x = mod( x, 13.0 ) * mod( x, 123.0 );\\\",\\n\\t\\t\\t\\t\\\"float dx = mod( x, 0.01 );\\\",\\n\\n\\t\\t\\t\\t// add noise\\n\\t\\t\\t\\t\\\"vec3 cResult = cTextureScreen.rgb + cTextureScreen.rgb * clamp( 0.1 + dx * 100.0, 0.0, 1.0 );\\\",\\n\\n\\t\\t\\t\\t// get us a sine and cosine\\n\\t\\t\\t\\t\\\"vec2 sc = vec2( sin( vUv.y * sCount ), cos( vUv.y * sCount ) );\\\",\\n\\n\\t\\t\\t\\t// add scanlines\\n\\t\\t\\t\\t\\\"cResult += cTextureScreen.rgb * vec3( sc.x, sc.y, sc.x ) * sIntensity;\\\",\\n\\n\\t\\t\\t\\t// interpolate between source and result by intensity\\n\\t\\t\\t\\t\\\"cResult = cTextureScreen.rgb + clamp( nIntensity, 0.0,1.0 ) * ( cResult - cTextureScreen.rgb );\\\",\\n\\n\\t\\t\\t\\t// convert to grayscale if desired\\n\\t\\t\\t\\t\\\"if( grayscale ) {\\\",\\n\\n\\t\\t\\t\\t\\t\\\"cResult = vec3( cResult.r * 0.3 + cResult.g * 0.59 + cResult.b * 0.11 );\\\",\\n\\n\\t\\t\\t\\t\\\"}\\\",\\n\\n\\t\\t\\t\\t\\\"gl_FragColor =  vec4( cResult, cTextureScreen.a );\\\",\\n\\n\\t\\t\\t\\\"}\\\"\\n\\n\\t\\t].join( \\\"\\\\n\\\" )\\n\\n\\t};\\n\\n}\\n\",\"module.exports = function( THREE ){\\n\\t/**\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t *\\n\\t * Focus shader\\n\\t * based on PaintEffect postprocess from ro.me\\n\\t * http://code.google.com/p/3-dreams-of-black/source/browse/deploy/js/effects/PaintEffect.js\\n\\t */\\n\\n\\tTHREE.FocusShader = {\\n\\n\\t\\tuniforms : {\\n\\n\\t\\t\\t\\\"tDiffuse\\\":       { type: \\\"t\\\", value: null },\\n\\t\\t\\t\\\"screenWidth\\\":    { type: \\\"f\\\", value: 1024 },\\n\\t\\t\\t\\\"screenHeight\\\":   { type: \\\"f\\\", value: 1024 },\\n\\t\\t\\t\\\"sampleDistance\\\": { type: \\\"f\\\", value: 0.94 },\\n\\t\\t\\t\\\"waveFactor\\\":     { type: \\\"f\\\", value: 0.00125 }\\n\\n\\t\\t},\\n\\n\\t\\tvertexShader: [\\n\\n\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\n\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t\\\"vUv = uv;\\\",\\n\\t\\t\\t\\t\\\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\\",\\n\\n\\t\\t\\t\\\"}\\\"\\n\\n\\t\\t].join( \\\"\\\\n\\\" ),\\n\\n\\t\\tfragmentShader: [\\n\\n\\t\\t\\t\\\"uniform float screenWidth;\\\",\\n\\t\\t\\t\\\"uniform float screenHeight;\\\",\\n\\t\\t\\t\\\"uniform float sampleDistance;\\\",\\n\\t\\t\\t\\\"uniform float waveFactor;\\\",\\n\\n\\t\\t\\t\\\"uniform sampler2D tDiffuse;\\\",\\n\\n\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\n\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t\\\"vec4 color, org, tmp, add;\\\",\\n\\t\\t\\t\\t\\\"float sample_dist, f;\\\",\\n\\t\\t\\t\\t\\\"vec2 vin;\\\",\\n\\t\\t\\t\\t\\\"vec2 uv = vUv;\\\",\\n\\n\\t\\t\\t\\t\\\"add = color = org = texture2D( tDiffuse, uv );\\\",\\n\\n\\t\\t\\t\\t\\\"vin = ( uv - vec2( 0.5 ) ) * vec2( 1.4 );\\\",\\n\\t\\t\\t\\t\\\"sample_dist = dot( vin, vin ) * 2.0;\\\",\\n\\n\\t\\t\\t\\t\\\"f = ( waveFactor * 100.0 + sample_dist ) * sampleDistance * 4.0;\\\",\\n\\n\\t\\t\\t\\t\\\"vec2 sampleSize = vec2(  1.0 / screenWidth, 1.0 / screenHeight ) * vec2( f );\\\",\\n\\n\\t\\t\\t\\t\\\"add += tmp = texture2D( tDiffuse, uv + vec2( 0.111964, 0.993712 ) * sampleSize );\\\",\\n\\t\\t\\t\\t\\\"if( tmp.b < color.b ) color = tmp;\\\",\\n\\n\\t\\t\\t\\t\\\"add += tmp = texture2D( tDiffuse, uv + vec2( 0.846724, 0.532032 ) * sampleSize );\\\",\\n\\t\\t\\t\\t\\\"if( tmp.b < color.b ) color = tmp;\\\",\\n\\n\\t\\t\\t\\t\\\"add += tmp = texture2D( tDiffuse, uv + vec2( 0.943883, -0.330279 ) * sampleSize );\\\",\\n\\t\\t\\t\\t\\\"if( tmp.b < color.b ) color = tmp;\\\",\\n\\n\\t\\t\\t\\t\\\"add += tmp = texture2D( tDiffuse, uv + vec2( 0.330279, -0.943883 ) * sampleSize );\\\",\\n\\t\\t\\t\\t\\\"if( tmp.b < color.b ) color = tmp;\\\",\\n\\n\\t\\t\\t\\t\\\"add += tmp = texture2D( tDiffuse, uv + vec2( -0.532032, -0.846724 ) * sampleSize );\\\",\\n\\t\\t\\t\\t\\\"if( tmp.b < color.b ) color = tmp;\\\",\\n\\n\\t\\t\\t\\t\\\"add += tmp = texture2D( tDiffuse, uv + vec2( -0.993712, -0.111964 ) * sampleSize );\\\",\\n\\t\\t\\t\\t\\\"if( tmp.b < color.b ) color = tmp;\\\",\\n\\n\\t\\t\\t\\t\\\"add += tmp = texture2D( tDiffuse, uv + vec2( -0.707107, 0.707107 ) * sampleSize );\\\",\\n\\t\\t\\t\\t\\\"if( tmp.b < color.b ) color = tmp;\\\",\\n\\n\\t\\t\\t\\t\\\"color = color * vec4( 2.0 ) - ( add / vec4( 8.0 ) );\\\",\\n\\t\\t\\t\\t\\\"color = color + ( add / vec4( 8.0 ) - color ) * ( vec4( 1.0 ) - vec4( sample_dist * 0.5 ) );\\\",\\n\\n\\t\\t\\t\\t\\\"gl_FragColor = vec4( color.rgb * color.rgb * vec3( 0.95 ) + color.rgb, 1.0 );\\\",\\n\\n\\t\\t\\t\\\"}\\\"\\n\\n\\n\\t\\t].join( \\\"\\\\n\\\" )\\n\\t};\\n\\n}\\n\",\"module.exports = function( THREE ){\\n\\t/**\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t *\\n\\t * Based on Nvidia Cg tutorial\\n\\t */\\n\\n\\tTHREE.FresnelShader = {\\n\\n\\t\\tuniforms: {\\n\\n\\t\\t\\t\\\"mRefractionRatio\\\": { type: \\\"f\\\", value: 1.02 },\\n\\t\\t\\t\\\"mFresnelBias\\\": { type: \\\"f\\\", value: 0.1 },\\n\\t\\t\\t\\\"mFresnelPower\\\": { type: \\\"f\\\", value: 2.0 },\\n\\t\\t\\t\\\"mFresnelScale\\\": { type: \\\"f\\\", value: 1.0 },\\n\\t\\t\\t\\\"tCube\\\": { type: \\\"t\\\", value: null }\\n\\n\\t\\t},\\n\\n\\t\\tvertexShader: [\\n\\n\\t\\t\\t\\\"uniform float mRefractionRatio;\\\",\\n\\t\\t\\t\\\"uniform float mFresnelBias;\\\",\\n\\t\\t\\t\\\"uniform float mFresnelScale;\\\",\\n\\t\\t\\t\\\"uniform float mFresnelPower;\\\",\\n\\n\\t\\t\\t\\\"varying vec3 vReflect;\\\",\\n\\t\\t\\t\\\"varying vec3 vRefract[3];\\\",\\n\\t\\t\\t\\\"varying float vReflectionFactor;\\\",\\n\\n\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t\\\"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\\",\\n\\t\\t\\t\\t\\\"vec4 worldPosition = modelMatrix * vec4( position, 1.0 );\\\",\\n\\n\\t\\t\\t\\t\\\"vec3 worldNormal = normalize( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );\\\",\\n\\n\\t\\t\\t\\t\\\"vec3 I = worldPosition.xyz - cameraPosition;\\\",\\n\\n\\t\\t\\t\\t\\\"vReflect = reflect( I, worldNormal );\\\",\\n\\t\\t\\t\\t\\\"vRefract[0] = refract( normalize( I ), worldNormal, mRefractionRatio );\\\",\\n\\t\\t\\t\\t\\\"vRefract[1] = refract( normalize( I ), worldNormal, mRefractionRatio * 0.99 );\\\",\\n\\t\\t\\t\\t\\\"vRefract[2] = refract( normalize( I ), worldNormal, mRefractionRatio * 0.98 );\\\",\\n\\t\\t\\t\\t\\\"vReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), worldNormal ), mFresnelPower );\\\",\\n\\n\\t\\t\\t\\t\\\"gl_Position = projectionMatrix * mvPosition;\\\",\\n\\n\\t\\t\\t\\\"}\\\"\\n\\n\\t\\t].join( \\\"\\\\n\\\" ),\\n\\n\\t\\tfragmentShader: [\\n\\n\\t\\t\\t\\\"uniform samplerCube tCube;\\\",\\n\\n\\t\\t\\t\\\"varying vec3 vReflect;\\\",\\n\\t\\t\\t\\\"varying vec3 vRefract[3];\\\",\\n\\t\\t\\t\\\"varying float vReflectionFactor;\\\",\\n\\n\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t\\\"vec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\\\",\\n\\t\\t\\t\\t\\\"vec4 refractedColor = vec4( 1.0 );\\\",\\n\\n\\t\\t\\t\\t\\\"refractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\\\",\\n\\t\\t\\t\\t\\\"refractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\\\",\\n\\t\\t\\t\\t\\\"refractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\\\",\\n\\n\\t\\t\\t\\t\\\"gl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\\\",\\n\\n\\t\\t\\t\\\"}\\\"\\n\\n\\t\\t].join( \\\"\\\\n\\\" )\\n\\n\\t};\\n\\n}\\n\",\"module.exports = function( THREE ){\\n\\t/**\\n\\t * @author WestLangley / http://github.com/WestLangley\\n\\t *\\n\\t * Gamma Correction Shader\\n\\t * http://en.wikipedia.org/wiki/gamma_correction\\n\\t */\\n\\n\\tTHREE.GammaCorrectionShader = {\\n\\n\\t\\tuniforms: {\\n\\n\\t\\t\\t\\\"tDiffuse\\\": { type: \\\"t\\\", value: null },\\n\\n\\t\\t},\\n\\n\\t\\tvertexShader: [\\n\\n\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\n\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t\\\"vUv = uv;\\\",\\n\\t\\t\\t\\t\\\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\\",\\n\\n\\t\\t\\t\\\"}\\\"\\n\\n\\t\\t].join( \\\"\\\\n\\\" ),\\n\\n\\t\\tfragmentShader: [\\n\\n\\t\\t\\t\\\"#define GAMMA_OUTPUT\\\",\\n\\t\\t\\t\\\"#define GAMMA_FACTOR 2\\\",\\n\\n\\t\\t\\t\\\"uniform sampler2D tDiffuse;\\\",\\n\\n\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\n\\t\\t\\tTHREE.ShaderChunk[ \\\"common\\\" ],\\n\\n\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t\\\"vec4 tex = texture2D( tDiffuse, vec2( vUv.x, vUv.y ) );\\\",\\n\\n\\t\\t\\t\\t\\\"gl_FragColor = vec4( linearToOutput( tex.rgb ), tex.a );\\\",\\n\\n\\t\\t\\t\\\"}\\\"\\n\\n\\t\\t].join( \\\"\\\\n\\\" )\\n\\n\\t};\\n\\n}\\n\",\"module.exports = function( THREE ){\\n\\n\\t/**\\n\\t \\n\\t */\\n\\n\\tTHREE.GlitchPass = function ( dt_size ) {\\n\\n\\t\\tif ( THREE.DigitalGlitch === undefined ) console.error( \\\"THREE.GlitchPass relies on THREE.DigitalGlitch\\\" );\\n\\t\\t\\n\\t\\tvar shader = THREE.DigitalGlitch;\\n\\t\\tthis.uniforms = THREE.UniformsUtils.clone( shader.uniforms );\\n\\n\\t\\tif ( dt_size == undefined ) dt_size = 64;\\n\\t\\t\\n\\t\\t\\n\\t\\tthis.uniforms[ \\\"tDisp\\\" ].value = this.generateHeightmap( dt_size );\\n\\t\\t\\n\\n\\t\\tthis.material = new THREE.ShaderMaterial( {\\n\\t\\t\\tuniforms: this.uniforms,\\n\\t\\t\\tvertexShader: shader.vertexShader,\\n\\t\\t\\tfragmentShader: shader.fragmentShader\\n\\t\\t} );\\n\\n\\t\\tthis.enabled = true;\\n\\t\\tthis.renderToScreen = false;\\n\\t\\tthis.needsSwap = true;\\n\\n\\n\\t\\tthis.camera = new THREE.OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\\n\\t\\tthis.scene  = new THREE.Scene();\\n\\n\\t\\tthis.quad = new THREE.Mesh( new THREE.PlaneBufferGeometry( 2, 2 ), null );\\n\\t\\tthis.scene.add( this.quad );\\n\\t\\t\\n\\t\\tthis.goWild = false;\\n\\t\\tthis.curF = 0;\\n\\t\\tthis.generateTrigger();\\n\\t\\t\\n\\t};\\n\\n\\tTHREE.GlitchPass.prototype = {\\n\\n\\t\\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\\n\\n\\t\\t\\tthis.uniforms[ \\\"tDiffuse\\\" ].value = readBuffer;\\n\\t\\t\\tthis.uniforms[ 'seed' ].value = Math.random();//default seeding\\n\\t\\t\\tthis.uniforms[ 'byp' ].value = 0;\\n\\t\\t\\t\\n\\t\\t\\tif ( this.curF % this.randX == 0 || this.goWild == true ) {\\n\\n\\t\\t\\t\\tthis.uniforms[ 'amount' ].value = Math.random() / 30;\\n\\t\\t\\t\\tthis.uniforms[ 'angle' ].value = THREE.Math.randFloat( - Math.PI, Math.PI );\\n\\t\\t\\t\\tthis.uniforms[ 'seed_x' ].value = THREE.Math.randFloat( - 1, 1 );\\n\\t\\t\\t\\tthis.uniforms[ 'seed_y' ].value = THREE.Math.randFloat( - 1, 1 );\\n\\t\\t\\t\\tthis.uniforms[ 'distortion_x' ].value = THREE.Math.randFloat( 0, 1 );\\n\\t\\t\\t\\tthis.uniforms[ 'distortion_y' ].value = THREE.Math.randFloat( 0, 1 );\\n\\t\\t\\t\\tthis.curF = 0;\\n\\t\\t\\t\\tthis.generateTrigger();\\n\\n\\t\\t\\t} else if ( this.curF % this.randX < this.randX / 5 ) {\\n\\n\\t\\t\\t\\tthis.uniforms[ 'amount' ].value = Math.random() / 90;\\n\\t\\t\\t\\tthis.uniforms[ 'angle' ].value = THREE.Math.randFloat( - Math.PI, Math.PI );\\n\\t\\t\\t\\tthis.uniforms[ 'distortion_x' ].value = THREE.Math.randFloat( 0, 1 );\\n\\t\\t\\t\\tthis.uniforms[ 'distortion_y' ].value = THREE.Math.randFloat( 0, 1 );\\n\\t\\t\\t\\tthis.uniforms[ 'seed_x' ].value = THREE.Math.randFloat( - 0.3, 0.3 );\\n\\t\\t\\t\\tthis.uniforms[ 'seed_y' ].value = THREE.Math.randFloat( - 0.3, 0.3 );\\n\\n\\t\\t\\t} else if ( this.goWild == false ) {\\n\\n\\t\\t\\t\\tthis.uniforms[ 'byp' ].value = 1;\\n\\n\\t\\t\\t}\\n\\t\\t\\tthis.curF ++;\\n\\t\\t\\t\\n\\t\\t\\tthis.quad.material = this.material;\\n\\t\\t\\tif ( this.renderToScreen ) {\\n\\n\\t\\t\\t\\trenderer.render( this.scene, this.camera );\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\trenderer.render( this.scene, this.camera, writeBuffer, false );\\n\\n\\t\\t\\t}\\n\\n\\t\\t},\\n\\t\\tgenerateTrigger: function() {\\n\\n\\t\\t\\tthis.randX = THREE.Math.randInt( 120, 240 );\\n\\n\\t\\t},\\n\\t\\tgenerateHeightmap: function( dt_size ) {\\n\\n\\t\\t\\tvar data_arr = new Float32Array( dt_size * dt_size * 3 );\\n\\t\\t\\tvar length = dt_size * dt_size;\\n\\t\\t\\t\\n\\t\\t\\tfor ( var i = 0; i < length; i ++ ) {\\n\\n\\t\\t\\t\\tvar val = THREE.Math.randFloat( 0, 1 );\\n\\t\\t\\t\\tdata_arr[ i * 3 + 0 ] = val;\\n\\t\\t\\t\\tdata_arr[ i * 3 + 1 ] = val;\\n\\t\\t\\t\\tdata_arr[ i * 3 + 2 ] = val;\\n\\n\\t\\t\\t}\\n\\t\\t\\t\\n\\t\\t\\tvar texture = new THREE.DataTexture( data_arr, dt_size, dt_size, THREE.RGBFormat, THREE.FloatType );\\n\\t\\t\\ttexture.needsUpdate = true;\\n\\t\\t\\treturn texture;\\n\\n\\t\\t}\\n\\t};\\n\\n};\\n\",\"module.exports = function( THREE ){\\n\\t/**\\n\\t * @author zz85 / http://www.lab4games.net/zz85/blog\\n\\t *\\n\\t * Two pass Gaussian blur filter (horizontal and vertical blur shaders)\\n\\t * - described in http://www.gamerendering.com/2008/10/11/gaussian-blur-filter-shader/\\n\\t *   and used in http://www.cake23.de/traveling-wavefronts-lit-up.html\\n\\t *\\n\\t * - 9 samples per pass\\n\\t * - standard deviation 2.7\\n\\t * - \\\"h\\\" and \\\"v\\\" parameters should be set to \\\"1 / width\\\" and \\\"1 / height\\\"\\n\\t */\\n\\n\\tTHREE.HorizontalBlurShader = {\\n\\n\\t\\tuniforms: {\\n\\n\\t\\t\\t\\\"tDiffuse\\\": { type: \\\"t\\\", value: null },\\n\\t\\t\\t\\\"h\\\":        { type: \\\"f\\\", value: 1.0 / 512.0 }\\n\\n\\t\\t},\\n\\n\\t\\tvertexShader: [\\n\\n\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\n\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t\\\"vUv = uv;\\\",\\n\\t\\t\\t\\t\\\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\\",\\n\\n\\t\\t\\t\\\"}\\\"\\n\\n\\t\\t].join( \\\"\\\\n\\\" ),\\n\\n\\t\\tfragmentShader: [\\n\\n\\t\\t\\t\\\"uniform sampler2D tDiffuse;\\\",\\n\\t\\t\\t\\\"uniform float h;\\\",\\n\\n\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\n\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t\\\"vec4 sum = vec4( 0.0 );\\\",\\n\\n\\t\\t\\t\\t\\\"sum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * h, vUv.y ) ) * 0.051;\\\",\\n\\t\\t\\t\\t\\\"sum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * h, vUv.y ) ) * 0.0918;\\\",\\n\\t\\t\\t\\t\\\"sum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * h, vUv.y ) ) * 0.12245;\\\",\\n\\t\\t\\t\\t\\\"sum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * h, vUv.y ) ) * 0.1531;\\\",\\n\\t\\t\\t\\t\\\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;\\\",\\n\\t\\t\\t\\t\\\"sum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * h, vUv.y ) ) * 0.1531;\\\",\\n\\t\\t\\t\\t\\\"sum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * h, vUv.y ) ) * 0.12245;\\\",\\n\\t\\t\\t\\t\\\"sum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * h, vUv.y ) ) * 0.0918;\\\",\\n\\t\\t\\t\\t\\\"sum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * h, vUv.y ) ) * 0.051;\\\",\\n\\n\\t\\t\\t\\t\\\"gl_FragColor = sum;\\\",\\n\\n\\t\\t\\t\\\"}\\\"\\n\\n\\t\\t].join( \\\"\\\\n\\\" )\\n\\n\\t};\\n\\n}\\n\",\"module.exports = function( THREE ){\\n\\t/**\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t *\\n\\t * Simple fake tilt-shift effect, modulating two pass Gaussian blur (see above) by vertical position\\n\\t *\\n\\t * - 9 samples per pass\\n\\t * - standard deviation 2.7\\n\\t * - \\\"h\\\" and \\\"v\\\" parameters should be set to \\\"1 / width\\\" and \\\"1 / height\\\"\\n\\t * - \\\"r\\\" parameter control where \\\"focused\\\" horizontal line lies\\n\\t */\\n\\n\\tTHREE.HorizontalTiltShiftShader = {\\n\\n\\t\\tuniforms: {\\n\\n\\t\\t\\t\\\"tDiffuse\\\": { type: \\\"t\\\", value: null },\\n\\t\\t\\t\\\"h\\\":        { type: \\\"f\\\", value: 1.0 / 512.0 },\\n\\t\\t\\t\\\"r\\\":        { type: \\\"f\\\", value: 0.35 }\\n\\n\\t\\t},\\n\\n\\t\\tvertexShader: [\\n\\n\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\n\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t\\\"vUv = uv;\\\",\\n\\t\\t\\t\\t\\\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\\",\\n\\n\\t\\t\\t\\\"}\\\"\\n\\n\\t\\t].join( \\\"\\\\n\\\" ),\\n\\n\\t\\tfragmentShader: [\\n\\n\\t\\t\\t\\\"uniform sampler2D tDiffuse;\\\",\\n\\t\\t\\t\\\"uniform float h;\\\",\\n\\t\\t\\t\\\"uniform float r;\\\",\\n\\n\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\n\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t\\\"vec4 sum = vec4( 0.0 );\\\",\\n\\n\\t\\t\\t\\t\\\"float hh = h * abs( r - vUv.y );\\\",\\n\\n\\t\\t\\t\\t\\\"sum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * hh, vUv.y ) ) * 0.051;\\\",\\n\\t\\t\\t\\t\\\"sum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * hh, vUv.y ) ) * 0.0918;\\\",\\n\\t\\t\\t\\t\\\"sum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * hh, vUv.y ) ) * 0.12245;\\\",\\n\\t\\t\\t\\t\\\"sum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * hh, vUv.y ) ) * 0.1531;\\\",\\n\\t\\t\\t\\t\\\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;\\\",\\n\\t\\t\\t\\t\\\"sum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * hh, vUv.y ) ) * 0.1531;\\\",\\n\\t\\t\\t\\t\\\"sum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * hh, vUv.y ) ) * 0.12245;\\\",\\n\\t\\t\\t\\t\\\"sum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * hh, vUv.y ) ) * 0.0918;\\\",\\n\\t\\t\\t\\t\\\"sum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * hh, vUv.y ) ) * 0.051;\\\",\\n\\n\\t\\t\\t\\t\\\"gl_FragColor = sum;\\\",\\n\\n\\t\\t\\t\\\"}\\\"\\n\\n\\t\\t].join( \\\"\\\\n\\\" )\\n\\n\\t};\\n\\n}\\n\",\"module.exports = function( THREE ){\\n\\t/**\\n\\t * @author tapio / http://tapio.github.com/\\n\\t *\\n\\t * Hue and saturation adjustment\\n\\t * https://github.com/evanw/glfx.js\\n\\t * hue: -1 to 1 (-1 is 180 degrees in the negative direction, 0 is no change, etc.\\n\\t * saturation: -1 to 1 (-1 is solid gray, 0 is no change, and 1 is maximum contrast)\\n\\t */\\n\\n\\tTHREE.HueSaturationShader = {\\n\\n\\t\\tuniforms: {\\n\\n\\t\\t\\t\\\"tDiffuse\\\":   { type: \\\"t\\\", value: null },\\n\\t\\t\\t\\\"hue\\\":        { type: \\\"f\\\", value: 0 },\\n\\t\\t\\t\\\"saturation\\\": { type: \\\"f\\\", value: 0 }\\n\\n\\t\\t},\\n\\n\\t\\tvertexShader: [\\n\\n\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\n\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t\\\"vUv = uv;\\\",\\n\\n\\t\\t\\t\\t\\\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\\",\\n\\n\\t\\t\\t\\\"}\\\"\\n\\n\\t\\t].join( \\\"\\\\n\\\" ),\\n\\n\\t\\tfragmentShader: [\\n\\n\\t\\t\\t\\\"uniform sampler2D tDiffuse;\\\",\\n\\t\\t\\t\\\"uniform float hue;\\\",\\n\\t\\t\\t\\\"uniform float saturation;\\\",\\n\\n\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\n\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t\\\"gl_FragColor = texture2D( tDiffuse, vUv );\\\",\\n\\n\\t\\t\\t\\t// hue\\n\\t\\t\\t\\t\\\"float angle = hue * 3.14159265;\\\",\\n\\t\\t\\t\\t\\\"float s = sin(angle), c = cos(angle);\\\",\\n\\t\\t\\t\\t\\\"vec3 weights = (vec3(2.0 * c, -sqrt(3.0) * s - c, sqrt(3.0) * s - c) + 1.0) / 3.0;\\\",\\n\\t\\t\\t\\t\\\"float len = length(gl_FragColor.rgb);\\\",\\n\\t\\t\\t\\t\\\"gl_FragColor.rgb = vec3(\\\",\\n\\t\\t\\t\\t\\t\\\"dot(gl_FragColor.rgb, weights.xyz),\\\",\\n\\t\\t\\t\\t\\t\\\"dot(gl_FragColor.rgb, weights.zxy),\\\",\\n\\t\\t\\t\\t\\t\\\"dot(gl_FragColor.rgb, weights.yzx)\\\",\\n\\t\\t\\t\\t\\\");\\\",\\n\\n\\t\\t\\t\\t// saturation\\n\\t\\t\\t\\t\\\"float average = (gl_FragColor.r + gl_FragColor.g + gl_FragColor.b) / 3.0;\\\",\\n\\t\\t\\t\\t\\\"if (saturation > 0.0) {\\\",\\n\\t\\t\\t\\t\\t\\\"gl_FragColor.rgb += (average - gl_FragColor.rgb) * (1.0 - 1.0 / (1.001 - saturation));\\\",\\n\\t\\t\\t\\t\\\"} else {\\\",\\n\\t\\t\\t\\t\\t\\\"gl_FragColor.rgb += (average - gl_FragColor.rgb) * (-saturation);\\\",\\n\\t\\t\\t\\t\\\"}\\\",\\n\\n\\t\\t\\t\\\"}\\\"\\n\\n\\t\\t].join( \\\"\\\\n\\\" )\\n\\n\\t};\\n\\n}\\n\",\"module.exports = function( THREE ){\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t */\\n\\n\\tTHREE.JSONLoader = function ( manager ) {\\n\\n\\t\\tif ( typeof manager === 'boolean' ) {\\n\\n\\t\\t\\tconsole.warn( 'THREE.JSONLoader: showStatus parameter has been removed from constructor.' );\\n\\t\\t\\tmanager = undefined;\\n\\n\\t\\t}\\n\\n\\t\\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\\n\\n\\t\\tthis.withCredentials = false;\\n\\n\\t};\\n\\n\\tTHREE.JSONLoader.prototype = {\\n\\n\\t\\tconstructor: THREE.JSONLoader,\\n\\n\\t\\t// Deprecated\\n\\n\\t\\tget statusDomElement () {\\n\\n\\t\\t\\tif ( this._statusDomElement === undefined ) {\\n\\n\\t\\t\\t\\tthis._statusDomElement = document.createElement( 'div' );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tconsole.warn( 'THREE.JSONLoader: .statusDomElement has been removed.' );\\n\\t\\t\\treturn this._statusDomElement;\\n\\n\\t\\t},\\n\\n\\t\\tload: function( url, onLoad, onProgress, onError ) {\\n\\n\\t\\t\\tvar scope = this;\\n\\n\\t\\t\\tvar texturePath = this.texturePath && ( typeof this.texturePath === \\\"string\\\" ) ? this.texturePath : THREE.Loader.prototype.extractUrlBase( url );\\n\\n\\t\\t\\tvar loader = new THREE.XHRLoader( this.manager );\\n\\t\\t\\tloader.setWithCredentials( this.withCredentials );\\n\\t\\t\\tloader.load( url, function ( text ) {\\n\\n\\t\\t\\t\\tvar json = JSON.parse( text );\\n\\t\\t\\t\\tvar metadata = json.metadata;\\n\\n\\t\\t\\t\\tif ( metadata !== undefined ) {\\n\\n\\t\\t\\t\\t\\tvar type = metadata.type;\\n\\n\\t\\t\\t\\t\\tif ( type !== undefined ) {\\n\\n\\t\\t\\t\\t\\t\\tif ( type.toLowerCase() === 'object' ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.' );\\n\\t\\t\\t\\t\\t\\t\\treturn;\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\tif ( type.toLowerCase() === 'scene' ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.SceneLoader instead.' );\\n\\t\\t\\t\\t\\t\\t\\treturn;\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tvar object = scope.parse( json, texturePath );\\n\\t\\t\\t\\tonLoad( object.geometry, object.materials );\\n\\n\\t\\t\\t}, onProgress, onError );\\n\\n\\t\\t},\\n\\n\\t\\tsetTexturePath: function ( value ) {\\n\\n\\t\\t\\tthis.texturePath = value;\\n\\n\\t\\t},\\n\\n\\t\\tparse: function ( json, texturePath ) {\\n\\n\\t\\t\\tvar geometry = new THREE.Geometry(),\\n\\t\\t\\tscale = ( json.scale !== undefined ) ? 1.0 / json.scale : 1.0;\\n\\n\\t\\t\\tparseModel( scale );\\n\\n\\t\\t\\tparseSkin();\\n\\t\\t\\tparseMorphing( scale );\\n\\t\\t\\tparseAnimations();\\n\\n\\t\\t\\tgeometry.computeFaceNormals();\\n\\t\\t\\tgeometry.computeBoundingSphere();\\n\\n\\t\\t\\tfunction parseModel( scale ) {\\n\\n\\t\\t\\t\\tfunction isBitSet( value, position ) {\\n\\n\\t\\t\\t\\t\\treturn value & ( 1 << position );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tvar i, j, fi,\\n\\n\\t\\t\\t\\toffset, zLength,\\n\\n\\t\\t\\tcolorIndex, normalIndex, uvIndex, materialIndex,\\n\\n\\t\\t\\t\\ttype,\\n\\t\\t\\t\\tisQuad,\\n\\t\\t\\t\\thasMaterial,\\n\\t\\t\\t\\thasFaceVertexUv,\\n\\t\\t\\t\\thasFaceNormal, hasFaceVertexNormal,\\n\\t\\t\\t\\thasFaceColor, hasFaceVertexColor,\\n\\n\\t\\t\\tvertex, face, faceA, faceB, hex, normal,\\n\\n\\t\\t\\t\\tuvLayer, uv, u, v,\\n\\n\\t\\t\\t\\tfaces = json.faces,\\n\\t\\t\\t\\tvertices = json.vertices,\\n\\t\\t\\t\\tnormals = json.normals,\\n\\t\\t\\t\\tcolors = json.colors,\\n\\n\\t\\t\\t\\tnUvLayers = 0;\\n\\n\\t\\t\\t\\tif ( json.uvs !== undefined ) {\\n\\n\\t\\t\\t\\t\\t// disregard empty arrays\\n\\n\\t\\t\\t\\t\\tfor ( i = 0; i < json.uvs.length; i ++ ) {\\n\\n\\t\\t\\t\\t\\t\\tif ( json.uvs[ i ].length ) nUvLayers ++;\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tfor ( i = 0; i < nUvLayers; i ++ ) {\\n\\n\\t\\t\\t\\t\\t\\tgeometry.faceVertexUvs[ i ] = [];\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\toffset = 0;\\n\\t\\t\\t\\tzLength = vertices.length;\\n\\n\\t\\t\\t\\twhile ( offset < zLength ) {\\n\\n\\t\\t\\t\\t\\tvertex = new THREE.Vector3();\\n\\n\\t\\t\\t\\t\\tvertex.x = vertices[ offset ++ ] * scale;\\n\\t\\t\\t\\t\\tvertex.y = vertices[ offset ++ ] * scale;\\n\\t\\t\\t\\t\\tvertex.z = vertices[ offset ++ ] * scale;\\n\\n\\t\\t\\t\\t\\tgeometry.vertices.push( vertex );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\toffset = 0;\\n\\t\\t\\t\\tzLength = faces.length;\\n\\n\\t\\t\\t\\twhile ( offset < zLength ) {\\n\\n\\t\\t\\t\\t\\ttype = faces[ offset ++ ];\\n\\n\\n\\t\\t\\t\\t\\tisQuad              = isBitSet( type, 0 );\\n\\t\\t\\t\\t\\thasMaterial         = isBitSet( type, 1 );\\n\\t\\t\\t\\t\\thasFaceVertexUv     = isBitSet( type, 3 );\\n\\t\\t\\t\\t\\thasFaceNormal       = isBitSet( type, 4 );\\n\\t\\t\\t\\t\\thasFaceVertexNormal = isBitSet( type, 5 );\\n\\t\\t\\t\\t\\thasFaceColor\\t     = isBitSet( type, 6 );\\n\\t\\t\\t\\t\\thasFaceVertexColor  = isBitSet( type, 7 );\\n\\n\\t\\t\\t\\t\\t// console.log(\\\"type\\\", type, \\\"bits\\\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\\n\\n\\t\\t\\t\\t\\tif ( isQuad ) {\\n\\n\\t\\t\\t\\t\\t\\tfaceA = new THREE.Face3();\\n\\t\\t\\t\\t\\t\\tfaceA.a = faces[ offset ];\\n\\t\\t\\t\\t\\t\\tfaceA.b = faces[ offset + 1 ];\\n\\t\\t\\t\\t\\t\\tfaceA.c = faces[ offset + 3 ];\\n\\n\\t\\t\\t\\t\\t\\tfaceB = new THREE.Face3();\\n\\t\\t\\t\\t\\t\\tfaceB.a = faces[ offset + 1 ];\\n\\t\\t\\t\\t\\t\\tfaceB.b = faces[ offset + 2 ];\\n\\t\\t\\t\\t\\t\\tfaceB.c = faces[ offset + 3 ];\\n\\n\\t\\t\\t\\t\\t\\toffset += 4;\\n\\n\\t\\t\\t\\t\\t\\tif ( hasMaterial ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tmaterialIndex = faces[ offset ++ ];\\n\\t\\t\\t\\t\\t\\t\\tfaceA.materialIndex = materialIndex;\\n\\t\\t\\t\\t\\t\\t\\tfaceB.materialIndex = materialIndex;\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t// to get face <=> uv index correspondence\\n\\n\\t\\t\\t\\t\\t\\tfi = geometry.faces.length;\\n\\n\\t\\t\\t\\t\\t\\tif ( hasFaceVertexUv ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tfor ( i = 0; i < nUvLayers; i ++ ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tuvLayer = json.uvs[ i ];\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tgeometry.faceVertexUvs[ i ][ fi ] = [];\\n\\t\\t\\t\\t\\t\\t\\t\\tgeometry.faceVertexUvs[ i ][ fi + 1 ] = [];\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tfor ( j = 0; j < 4; j ++ ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tuvIndex = faces[ offset ++ ];\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tu = uvLayer[ uvIndex * 2 ];\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tv = uvLayer[ uvIndex * 2 + 1 ];\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tuv = new THREE.Vector2( u, v );\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif ( j !== 2 ) geometry.faceVertexUvs[ i ][ fi ].push( uv );\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif ( j !== 0 ) geometry.faceVertexUvs[ i ][ fi + 1 ].push( uv );\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\tif ( hasFaceNormal ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tnormalIndex = faces[ offset ++ ] * 3;\\n\\n\\t\\t\\t\\t\\t\\t\\tfaceA.normal.set(\\n\\t\\t\\t\\t\\t\\t\\t\\tnormals[ normalIndex ++ ],\\n\\t\\t\\t\\t\\t\\t\\t\\tnormals[ normalIndex ++ ],\\n\\t\\t\\t\\t\\t\\t\\t\\tnormals[ normalIndex ]\\n\\t\\t\\t\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\t\\t\\t\\tfaceB.normal.copy( faceA.normal );\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\tif ( hasFaceVertexNormal ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tfor ( i = 0; i < 4; i ++ ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tnormalIndex = faces[ offset ++ ] * 3;\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tnormal = new THREE.Vector3(\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tnormals[ normalIndex ++ ],\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tnormals[ normalIndex ++ ],\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tnormals[ normalIndex ]\\n\\t\\t\\t\\t\\t\\t\\t\\t);\\n\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tif ( i !== 2 ) faceA.vertexNormals.push( normal );\\n\\t\\t\\t\\t\\t\\t\\t\\tif ( i !== 0 ) faceB.vertexNormals.push( normal );\\n\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\n\\t\\t\\t\\t\\t\\tif ( hasFaceColor ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tcolorIndex = faces[ offset ++ ];\\n\\t\\t\\t\\t\\t\\t\\thex = colors[ colorIndex ];\\n\\n\\t\\t\\t\\t\\t\\t\\tfaceA.color.setHex( hex );\\n\\t\\t\\t\\t\\t\\t\\tfaceB.color.setHex( hex );\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\n\\t\\t\\t\\t\\t\\tif ( hasFaceVertexColor ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tfor ( i = 0; i < 4; i ++ ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tcolorIndex = faces[ offset ++ ];\\n\\t\\t\\t\\t\\t\\t\\t\\thex = colors[ colorIndex ];\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tif ( i !== 2 ) faceA.vertexColors.push( new THREE.Color( hex ) );\\n\\t\\t\\t\\t\\t\\t\\t\\tif ( i !== 0 ) faceB.vertexColors.push( new THREE.Color( hex ) );\\n\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\tgeometry.faces.push( faceA );\\n\\t\\t\\t\\t\\t\\tgeometry.faces.push( faceB );\\n\\n\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\tface = new THREE.Face3();\\n\\t\\t\\t\\t\\t\\tface.a = faces[ offset ++ ];\\n\\t\\t\\t\\t\\t\\tface.b = faces[ offset ++ ];\\n\\t\\t\\t\\t\\t\\tface.c = faces[ offset ++ ];\\n\\n\\t\\t\\t\\t\\t\\tif ( hasMaterial ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tmaterialIndex = faces[ offset ++ ];\\n\\t\\t\\t\\t\\t\\t\\tface.materialIndex = materialIndex;\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t// to get face <=> uv index correspondence\\n\\n\\t\\t\\t\\t\\t\\tfi = geometry.faces.length;\\n\\n\\t\\t\\t\\t\\t\\tif ( hasFaceVertexUv ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tfor ( i = 0; i < nUvLayers; i ++ ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tuvLayer = json.uvs[ i ];\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tgeometry.faceVertexUvs[ i ][ fi ] = [];\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tfor ( j = 0; j < 3; j ++ ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tuvIndex = faces[ offset ++ ];\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tu = uvLayer[ uvIndex * 2 ];\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tv = uvLayer[ uvIndex * 2 + 1 ];\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tuv = new THREE.Vector2( u, v );\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tgeometry.faceVertexUvs[ i ][ fi ].push( uv );\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\tif ( hasFaceNormal ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tnormalIndex = faces[ offset ++ ] * 3;\\n\\n\\t\\t\\t\\t\\t\\t\\tface.normal.set(\\n\\t\\t\\t\\t\\t\\t\\t\\tnormals[ normalIndex ++ ],\\n\\t\\t\\t\\t\\t\\t\\t\\tnormals[ normalIndex ++ ],\\n\\t\\t\\t\\t\\t\\t\\t\\tnormals[ normalIndex ]\\n\\t\\t\\t\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\tif ( hasFaceVertexNormal ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tfor ( i = 0; i < 3; i ++ ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tnormalIndex = faces[ offset ++ ] * 3;\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tnormal = new THREE.Vector3(\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tnormals[ normalIndex ++ ],\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tnormals[ normalIndex ++ ],\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tnormals[ normalIndex ]\\n\\t\\t\\t\\t\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tface.vertexNormals.push( normal );\\n\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\n\\t\\t\\t\\t\\t\\tif ( hasFaceColor ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tcolorIndex = faces[ offset ++ ];\\n\\t\\t\\t\\t\\t\\t\\tface.color.setHex( colors[ colorIndex ] );\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\n\\t\\t\\t\\t\\t\\tif ( hasFaceVertexColor ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tfor ( i = 0; i < 3; i ++ ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tcolorIndex = faces[ offset ++ ];\\n\\t\\t\\t\\t\\t\\t\\t\\tface.vertexColors.push( new THREE.Color( colors[ colorIndex ] ) );\\n\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\tgeometry.faces.push( face );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t};\\n\\n\\t\\t\\tfunction parseSkin() {\\n\\n\\t\\t\\t\\tvar influencesPerVertex = ( json.influencesPerVertex !== undefined ) ? json.influencesPerVertex : 2;\\n\\n\\t\\t\\t\\tif ( json.skinWeights ) {\\n\\n\\t\\t\\t\\t\\tfor ( var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex ) {\\n\\n\\t\\t\\t\\t\\t\\tvar x =                               json.skinWeights[ i ];\\n\\t\\t\\t\\t\\t\\tvar y = ( influencesPerVertex > 1 ) ? json.skinWeights[ i + 1 ] : 0;\\n\\t\\t\\t\\t\\t\\tvar z = ( influencesPerVertex > 2 ) ? json.skinWeights[ i + 2 ] : 0;\\n\\t\\t\\t\\t\\t\\tvar w = ( influencesPerVertex > 3 ) ? json.skinWeights[ i + 3 ] : 0;\\n\\n\\t\\t\\t\\t\\t\\tgeometry.skinWeights.push( new THREE.Vector4( x, y, z, w ) );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( json.skinIndices ) {\\n\\n\\t\\t\\t\\t\\tfor ( var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex ) {\\n\\n\\t\\t\\t\\t\\t\\tvar a =                               json.skinIndices[ i ];\\n\\t\\t\\t\\t\\t\\tvar b = ( influencesPerVertex > 1 ) ? json.skinIndices[ i + 1 ] : 0;\\n\\t\\t\\t\\t\\t\\tvar c = ( influencesPerVertex > 2 ) ? json.skinIndices[ i + 2 ] : 0;\\n\\t\\t\\t\\t\\t\\tvar d = ( influencesPerVertex > 3 ) ? json.skinIndices[ i + 3 ] : 0;\\n\\n\\t\\t\\t\\t\\t\\tgeometry.skinIndices.push( new THREE.Vector4( a, b, c, d ) );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tgeometry.bones = json.bones;\\n\\n\\t\\t\\t\\tif ( geometry.bones && geometry.bones.length > 0 && ( geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length ) ) {\\n\\n\\t\\t\\t\\t\\tconsole.warn( 'When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' +\\n\\t\\t\\t\\t\\t\\tgeometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.' );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t};\\n\\n\\t\\t\\tfunction parseMorphing( scale ) {\\n\\n\\t\\t\\t\\tif ( json.morphTargets !== undefined ) {\\n\\n\\t\\t\\t\\t\\tfor ( var i = 0, l = json.morphTargets.length; i < l; i ++ ) {\\n\\n\\t\\t\\t\\t\\t\\tgeometry.morphTargets[ i ] = {};\\n\\t\\t\\t\\t\\t\\tgeometry.morphTargets[ i ].name = json.morphTargets[ i ].name;\\n\\t\\t\\t\\t\\t\\tgeometry.morphTargets[ i ].vertices = [];\\n\\n\\t\\t\\t\\t\\t\\tvar dstVertices = geometry.morphTargets[ i ].vertices;\\n\\t\\t\\t\\t\\t\\tvar srcVertices = json.morphTargets[ i ].vertices;\\n\\n\\t\\t\\t\\t\\t\\tfor ( var v = 0, vl = srcVertices.length; v < vl; v += 3 ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tvar vertex = new THREE.Vector3();\\n\\t\\t\\t\\t\\t\\t\\tvertex.x = srcVertices[ v ] * scale;\\n\\t\\t\\t\\t\\t\\t\\tvertex.y = srcVertices[ v + 1 ] * scale;\\n\\t\\t\\t\\t\\t\\t\\tvertex.z = srcVertices[ v + 2 ] * scale;\\n\\n\\t\\t\\t\\t\\t\\t\\tdstVertices.push( vertex );\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( json.morphColors !== undefined && json.morphColors.length > 0 ) {\\n\\n\\t\\t\\t\\t\\tconsole.warn( 'THREE.JSONLoader: \\\"morphColors\\\" no longer supported. Using them as face colors.' );\\n\\n\\t\\t\\t\\t\\tvar faces = geometry.faces;\\n\\t\\t\\t\\t\\tvar morphColors = json.morphColors[ 0 ].colors;\\n\\n\\t\\t\\t\\t\\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\\n\\n\\t\\t\\t\\t\\t\\tfaces[ i ].color.fromArray( morphColors, i * 3 );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tfunction parseAnimations() {\\n\\n\\t\\t\\t\\tvar outputAnimations = [];\\n\\n\\t\\t\\t\\t// parse old style Bone/Hierarchy animations\\n\\t\\t\\t\\tvar animations = [];\\n\\n\\t\\t\\t\\tif ( json.animation !== undefined ) {\\n\\n\\t\\t\\t\\t\\tanimations.push( json.animation );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( json.animations !== undefined ) {\\n\\n\\t\\t\\t\\t\\tif ( json.animations.length ) {\\n\\n\\t\\t\\t\\t\\t\\tanimations = animations.concat( json.animations );\\n\\n\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\tanimations.push( json.animations );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tfor ( var i = 0; i < animations.length; i ++ ) {\\n\\n\\t\\t\\t\\t\\tvar clip = THREE.AnimationClip.parseAnimation( animations[ i ], geometry.bones );\\n\\t\\t\\t\\t\\tif ( clip ) outputAnimations.push( clip );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// parse implicit morph animations\\n\\t\\t\\t\\tif ( geometry.morphTargets ) {\\n\\n\\t\\t\\t\\t\\t// TODO: Figure out what an appropraite FPS is for morph target animations -- defaulting to 10, but really it is completely arbitrary.\\n\\t\\t\\t\\t\\tvar morphAnimationClips = THREE.AnimationClip.CreateClipsFromMorphTargetSequences( geometry.morphTargets, 10 );\\n\\t\\t\\t\\t\\toutputAnimations = outputAnimations.concat( morphAnimationClips );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( outputAnimations.length > 0 ) geometry.animations = outputAnimations;\\n\\n\\t\\t\\t};\\n\\n\\t\\t\\tif ( json.materials === undefined || json.materials.length === 0 ) {\\n\\n\\t\\t\\t\\treturn { geometry: geometry };\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\tvar materials = THREE.Loader.prototype.initMaterials( json.materials, texturePath, this.crossOrigin );\\n\\n\\t\\t\\t\\treturn { geometry: geometry, materials: materials };\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t};\\n\\n};\",\"module.exports = function( THREE ){\\n\\t/**\\n\\t * @author felixturner / http://airtight.cc/\\n\\t *\\n\\t * Kaleidoscope Shader\\n\\t * Radial reflection around center point\\n\\t * Ported from: http://pixelshaders.com/editor/\\n\\t * by Toby Schachman / http://tobyschachman.com/\\n\\t *\\n\\t * sides: number of reflections\\n\\t * angle: initial angle in radians\\n\\t */\\n\\n\\tTHREE.KaleidoShader = {\\n\\n\\t\\tuniforms: {\\n\\n\\t\\t\\t\\\"tDiffuse\\\": { type: \\\"t\\\", value: null },\\n\\t\\t\\t\\\"sides\\\":    { type: \\\"f\\\", value: 6.0 },\\n\\t\\t\\t\\\"angle\\\":    { type: \\\"f\\\", value: 0.0 }\\n\\n\\t\\t},\\n\\n\\t\\tvertexShader: [\\n\\n\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\n\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t\\\"vUv = uv;\\\",\\n\\t\\t\\t\\t\\\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\\",\\n\\n\\t\\t\\t\\\"}\\\"\\n\\n\\t\\t].join( \\\"\\\\n\\\" ),\\n\\n\\t\\tfragmentShader: [\\n\\n\\t\\t\\t\\\"uniform sampler2D tDiffuse;\\\",\\n\\t\\t\\t\\\"uniform float sides;\\\",\\n\\t\\t\\t\\\"uniform float angle;\\\",\\n\\t\\t\\t\\n\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\n\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t\\\"vec2 p = vUv - 0.5;\\\",\\n\\t\\t\\t\\t\\\"float r = length(p);\\\",\\n\\t\\t\\t\\t\\\"float a = atan(p.y, p.x) + angle;\\\",\\n\\t\\t\\t\\t\\\"float tau = 2. * 3.1416 ;\\\",\\n\\t\\t\\t\\t\\\"a = mod(a, tau/sides);\\\",\\n\\t\\t\\t\\t\\\"a = abs(a - tau/sides/2.) ;\\\",\\n\\t\\t\\t\\t\\\"p = r * vec2(cos(a), sin(a));\\\",\\n\\t\\t\\t\\t\\\"vec4 color = texture2D(tDiffuse, p + 0.5);\\\",\\n\\t\\t\\t\\t\\\"gl_FragColor = color;\\\",\\n\\n\\t\\t\\t\\\"}\\\"\\n\\n\\t\\t].join( \\\"\\\\n\\\" )\\n\\n\\t};\\n\\n}\\n\",\"module.exports = function( THREE ){\\n\\t/**\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t *\\n\\t * Luminosity\\n\\t * http://en.wikipedia.org/wiki/Luminosity\\n\\t */\\n\\n\\tTHREE.LuminosityShader = {\\n\\n\\t\\tuniforms: {\\n\\n\\t\\t\\t\\\"tDiffuse\\\": { type: \\\"t\\\", value: null }\\n\\n\\t\\t},\\n\\n\\t\\tvertexShader: [\\n\\n\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\n\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t\\\"vUv = uv;\\\",\\n\\n\\t\\t\\t\\t\\\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\\",\\n\\n\\t\\t\\t\\\"}\\\"\\n\\n\\t\\t].join( \\\"\\\\n\\\" ),\\n\\n\\t\\tfragmentShader: [\\n\\n\\t\\t\\t\\\"uniform sampler2D tDiffuse;\\\",\\n\\n\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\n\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t\\\"vec4 texel = texture2D( tDiffuse, vUv );\\\",\\n\\n\\t\\t\\t\\t\\\"vec3 luma = vec3( 0.299, 0.587, 0.114 );\\\",\\n\\n\\t\\t\\t\\t\\\"float v = dot( texel.xyz, luma );\\\",\\n\\n\\t\\t\\t\\t\\\"gl_FragColor = vec4( v, v, v, texel.w );\\\",\\n\\n\\t\\t\\t\\\"}\\\"\\n\\n\\t\\t].join( \\\"\\\\n\\\" )\\n\\n\\t};\\n\\n}\\n\",\"module.exports = function( THREE ){\\n\\n\\t/**\\n\\t * Loads a Wavefront .mtl file specifying materials\\n\\t *\\n\\t * @author angelxuanchang\\n\\t */\\n\\n\\tTHREE.MTLLoader = function( manager ) {\\n\\n\\t\\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\\n\\n\\t};\\n\\n\\tTHREE.MTLLoader.prototype = {\\n\\n\\t\\tconstructor: THREE.MTLLoader,\\n\\n\\t\\tload: function ( url, onLoad, onProgress, onError ) {\\n\\n\\t\\t\\tvar scope = this;\\n\\n\\t\\t\\tvar loader = new THREE.XHRLoader( this.manager );\\n\\t\\t\\tloader.setPath( this.path );\\n\\t\\t\\tloader.load( url, function ( text ) {\\n\\n\\t\\t\\t\\tonLoad( scope.parse( text ) );\\n\\n\\t\\t\\t}, onProgress, onError );\\n\\n\\t\\t},\\n\\n\\t\\tsetPath: function ( value ) {\\n\\n\\t\\t\\tthis.path = value;\\n\\n\\t\\t},\\n\\n\\t\\tsetBaseUrl: function( value ) {\\n\\n\\t\\t\\t// TODO: Merge with setPath()? Or rename to setTexturePath?\\n\\n\\t\\t\\tthis.baseUrl = value;\\n\\n\\t\\t},\\n\\n\\t\\tsetCrossOrigin: function ( value ) {\\n\\n\\t\\t\\tthis.crossOrigin = value;\\n\\n\\t\\t},\\n\\n\\t\\tsetMaterialOptions: function ( value ) {\\n\\n\\t\\t\\tthis.materialOptions = value;\\n\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * Parses loaded MTL file\\n\\t\\t * @param text - Content of MTL file\\n\\t\\t * @return {THREE.MTLLoader.MaterialCreator}\\n\\t\\t */\\n\\t\\tparse: function ( text ) {\\n\\n\\t\\t\\tvar lines = text.split( \\\"\\\\n\\\" );\\n\\t\\t\\tvar info = {};\\n\\t\\t\\tvar delimiter_pattern = /\\\\s+/;\\n\\t\\t\\tvar materialsInfo = {};\\n\\n\\t\\t\\tfor ( var i = 0; i < lines.length; i ++ ) {\\n\\n\\t\\t\\t\\tvar line = lines[ i ];\\n\\t\\t\\t\\tline = line.trim();\\n\\n\\t\\t\\t\\tif ( line.length === 0 || line.charAt( 0 ) === '#' ) {\\n\\n\\t\\t\\t\\t\\t// Blank line or comment ignore\\n\\t\\t\\t\\t\\tcontinue;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tvar pos = line.indexOf( ' ' );\\n\\n\\t\\t\\t\\tvar key = ( pos >= 0 ) ? line.substring( 0, pos ) : line;\\n\\t\\t\\t\\tkey = key.toLowerCase();\\n\\n\\t\\t\\t\\tvar value = ( pos >= 0 ) ? line.substring( pos + 1 ) : \\\"\\\";\\n\\t\\t\\t\\tvalue = value.trim();\\n\\n\\t\\t\\t\\tif ( key === \\\"newmtl\\\" ) {\\n\\n\\t\\t\\t\\t\\t// New material\\n\\n\\t\\t\\t\\t\\tinfo = { name: value };\\n\\t\\t\\t\\t\\tmaterialsInfo[ value ] = info;\\n\\n\\t\\t\\t\\t} else if ( info ) {\\n\\n\\t\\t\\t\\t\\tif ( key === \\\"ka\\\" || key === \\\"kd\\\" || key === \\\"ks\\\" ) {\\n\\n\\t\\t\\t\\t\\t\\tvar ss = value.split( delimiter_pattern, 3 );\\n\\t\\t\\t\\t\\t\\tinfo[ key ] = [ parseFloat( ss[ 0 ] ), parseFloat( ss[ 1 ] ), parseFloat( ss[ 2 ] ) ];\\n\\n\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\tinfo[ key ] = value;\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar materialCreator = new THREE.MTLLoader.MaterialCreator( this.baseUrl, this.materialOptions );\\n\\t\\t\\tmaterialCreator.setCrossOrigin( this.crossOrigin );\\n\\t\\t\\tmaterialCreator.setManager( this.manager );\\n\\t\\t\\tmaterialCreator.setMaterials( materialsInfo );\\n\\t\\t\\treturn materialCreator;\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\t/**\\n\\t * Create a new THREE-MTLLoader.MaterialCreator\\n\\t * @param baseUrl - Url relative to which textures are loaded\\n\\t * @param options - Set of options on how to construct the materials\\n\\t *                  side: Which side to apply the material\\n\\t *                        THREE.FrontSide (default), THREE.BackSide, THREE.DoubleSide\\n\\t *                  wrap: What type of wrapping to apply for textures\\n\\t *                        THREE.RepeatWrapping (default), THREE.ClampToEdgeWrapping, THREE.MirroredRepeatWrapping\\n\\t *                  normalizeRGB: RGBs need to be normalized to 0-1 from 0-255\\n\\t *                                Default: false, assumed to be already normalized\\n\\t *                  ignoreZeroRGBs: Ignore values of RGBs (Ka,Kd,Ks) that are all 0's\\n\\t *                                  Default: false\\n\\t * @constructor\\n\\t */\\n\\n\\tTHREE.MTLLoader.MaterialCreator = function( baseUrl, options ) {\\n\\n\\t\\tthis.baseUrl = baseUrl;\\n\\t\\tthis.options = options;\\n\\t\\tthis.materialsInfo = {};\\n\\t\\tthis.materials = {};\\n\\t\\tthis.materialsArray = [];\\n\\t\\tthis.nameLookup = {};\\n\\n\\t\\tthis.side = ( this.options && this.options.side ) ? this.options.side : THREE.FrontSide;\\n\\t\\tthis.wrap = ( this.options && this.options.wrap ) ? this.options.wrap : THREE.RepeatWrapping;\\n\\n\\t};\\n\\n\\tTHREE.MTLLoader.MaterialCreator.prototype = {\\n\\n\\t\\tconstructor: THREE.MTLLoader.MaterialCreator,\\n\\n\\t\\tsetCrossOrigin: function ( value ) {\\n\\n\\t\\t\\tthis.crossOrigin = value;\\n\\n\\t\\t},\\n\\n\\t\\tsetManager: function ( value ) {\\n\\n\\t\\t\\tthis.manager = value;\\n\\n\\t\\t},\\n\\n\\t\\tsetMaterials: function( materialsInfo ) {\\n\\n\\t\\t\\tthis.materialsInfo = this.convert( materialsInfo );\\n\\t\\t\\tthis.materials = {};\\n\\t\\t\\tthis.materialsArray = [];\\n\\t\\t\\tthis.nameLookup = {};\\n\\n\\t\\t},\\n\\n\\t\\tconvert: function( materialsInfo ) {\\n\\n\\t\\t\\tif ( ! this.options ) return materialsInfo;\\n\\n\\t\\t\\tvar converted = {};\\n\\n\\t\\t\\tfor ( var mn in materialsInfo ) {\\n\\n\\t\\t\\t\\t// Convert materials info into normalized form based on options\\n\\n\\t\\t\\t\\tvar mat = materialsInfo[ mn ];\\n\\n\\t\\t\\t\\tvar covmat = {};\\n\\n\\t\\t\\t\\tconverted[ mn ] = covmat;\\n\\n\\t\\t\\t\\tfor ( var prop in mat ) {\\n\\n\\t\\t\\t\\t\\tvar save = true;\\n\\t\\t\\t\\t\\tvar value = mat[ prop ];\\n\\t\\t\\t\\t\\tvar lprop = prop.toLowerCase();\\n\\n\\t\\t\\t\\t\\tswitch ( lprop ) {\\n\\n\\t\\t\\t\\t\\t\\tcase 'kd':\\n\\t\\t\\t\\t\\t\\tcase 'ka':\\n\\t\\t\\t\\t\\t\\tcase 'ks':\\n\\n\\t\\t\\t\\t\\t\\t\\t// Diffuse color (color under white light) using RGB values\\n\\n\\t\\t\\t\\t\\t\\t\\tif ( this.options && this.options.normalizeRGB ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tvalue = [ value[ 0 ] / 255, value[ 1 ] / 255, value[ 2 ] / 255 ];\\n\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\tif ( this.options && this.options.ignoreZeroRGBs ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tif ( value[ 0 ] === 0 && value[ 1 ] === 0 && value[ 1 ] === 0 ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// ignore\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tsave = false;\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\t\\tdefault:\\n\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tif ( save ) {\\n\\n\\t\\t\\t\\t\\t\\tcovmat[ lprop ] = value;\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn converted;\\n\\n\\t\\t},\\n\\n\\t\\tpreload: function () {\\n\\n\\t\\t\\tfor ( var mn in this.materialsInfo ) {\\n\\n\\t\\t\\t\\tthis.create( mn );\\n\\n\\t\\t\\t}\\n\\n\\t\\t},\\n\\n\\t\\tgetIndex: function( materialName ) {\\n\\n\\t\\t\\treturn this.nameLookup[ materialName ];\\n\\n\\t\\t},\\n\\n\\t\\tgetAsArray: function() {\\n\\n\\t\\t\\tvar index = 0;\\n\\n\\t\\t\\tfor ( var mn in this.materialsInfo ) {\\n\\n\\t\\t\\t\\tthis.materialsArray[ index ] = this.create( mn );\\n\\t\\t\\t\\tthis.nameLookup[ mn ] = index;\\n\\t\\t\\t\\tindex ++;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn this.materialsArray;\\n\\n\\t\\t},\\n\\n\\t\\tcreate: function ( materialName ) {\\n\\n\\t\\t\\tif ( this.materials[ materialName ] === undefined ) {\\n\\n\\t\\t\\t\\tthis.createMaterial_( materialName );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn this.materials[ materialName ];\\n\\n\\t\\t},\\n\\n\\t\\tcreateMaterial_: function ( materialName ) {\\n\\n\\t\\t\\t// Create material\\n\\n\\t\\t\\tvar mat = this.materialsInfo[ materialName ];\\n\\t\\t\\tvar params = {\\n\\n\\t\\t\\t\\tname: materialName,\\n\\t\\t\\t\\tside: this.side\\n\\n\\t\\t\\t};\\n\\n\\t\\t\\tfor ( var prop in mat ) {\\n\\n\\t\\t\\t\\tvar value = mat[ prop ];\\n\\n\\t\\t\\t\\tif ( value === '' ) continue;\\n\\n\\t\\t\\t\\tswitch ( prop.toLowerCase() ) {\\n\\n\\t\\t\\t\\t\\t// Ns is material specular exponent\\n\\n\\t\\t\\t\\t\\tcase 'kd':\\n\\n\\t\\t\\t\\t\\t\\t// Diffuse color (color under white light) using RGB values\\n\\n\\t\\t\\t\\t\\t\\tparams[ 'color' ] = new THREE.Color().fromArray( value );\\n\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\tcase 'ks':\\n\\n\\t\\t\\t\\t\\t\\t// Specular color (color when light is reflected from shiny surface) using RGB values\\n\\t\\t\\t\\t\\t\\tparams[ 'specular' ] = new THREE.Color().fromArray( value );\\n\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\tcase 'map_kd':\\n\\n\\t\\t\\t\\t\\t\\t// Diffuse texture map\\n\\n\\t\\t\\t\\t\\t\\tparams[ 'map' ] = this.loadTexture( this.baseUrl + value );\\n\\t\\t\\t\\t\\t\\tparams[ 'map' ].wrapS = this.wrap;\\n\\t\\t\\t\\t\\t\\tparams[ 'map' ].wrapT = this.wrap;\\n\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\tcase 'ns':\\n\\n\\t\\t\\t\\t\\t\\t// The specular exponent (defines the focus of the specular highlight)\\n\\t\\t\\t\\t\\t\\t// A high exponent results in a tight, concentrated highlight. Ns values normally range from 0 to 1000.\\n\\n\\t\\t\\t\\t\\t\\tparams[ 'shininess' ] = parseFloat( value );\\n\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\tcase 'd':\\n\\n\\t\\t\\t\\t\\t\\tif ( value < 1 ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tparams[ 'opacity' ] = value;\\n\\t\\t\\t\\t\\t\\t\\tparams[ 'transparent' ] = true;\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\tcase 'Tr':\\n\\n\\t\\t\\t\\t\\t\\tif ( value > 0 ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tparams[ 'opacity' ] = 1 - value;\\n\\t\\t\\t\\t\\t\\t\\tparams[ 'transparent' ] = true;\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\tcase 'map_bump':\\n\\t\\t\\t\\t\\tcase 'bump':\\n\\n\\t\\t\\t\\t\\t\\t// Bump texture map\\n\\n\\t\\t\\t\\t\\t\\tif ( params[ 'bumpMap' ] ) break; // Avoid loading twice.\\n\\n\\t\\t\\t\\t\\t\\tparams[ 'bumpMap' ] = this.loadTexture( this.baseUrl + value );\\n\\t\\t\\t\\t\\t\\tparams[ 'bumpMap' ].wrapS = this.wrap;\\n\\t\\t\\t\\t\\t\\tparams[ 'bumpMap' ].wrapT = this.wrap;\\n\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\tdefault:\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.materials[ materialName ] = new THREE.MeshPhongMaterial( params );\\n\\t\\t\\treturn this.materials[ materialName ];\\n\\n\\t\\t},\\n\\n\\n\\t\\tloadTexture: function ( url, mapping, onLoad, onProgress, onError ) {\\n\\n\\t\\t\\tvar texture;\\n\\t\\t\\tvar loader = THREE.Loader.Handlers.get( url );\\n\\t\\t\\tvar manager = ( this.manager !== undefined ) ? this.manager : THREE.DefaultLoadingManager;\\n\\n\\t\\t\\tif ( loader === null ) {\\n\\n\\t\\t\\t\\tloader = new THREE.TextureLoader( manager );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( loader.setCrossOrigin ) loader.setCrossOrigin( this.crossOrigin );\\n\\t\\t\\ttexture = loader.load( url, onLoad, onProgress, onError );\\n\\n\\t\\t\\tif ( mapping !== undefined ) texture.mapping = mapping;\\n\\n\\t\\t\\treturn texture;\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\tTHREE.EventDispatcher.prototype.apply( THREE.MTLLoader.prototype );\\n\\n};\",\"module.exports = function( THREE ){\\n\\n\\t/**\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t *\\n\\t * Port of greggman's ThreeD version of marching cubes to Three.js\\n\\t * http://webglsamples.googlecode.com/hg/blob/blob.html\\n\\t */\\n\\n\\tTHREE.MarchingCubes = function ( resolution, material, enableUvs, enableColors ) {\\n\\n\\t\\tTHREE.ImmediateRenderObject.call( this, material );\\n\\n\\t\\tthis.enableUvs = enableUvs !== undefined ? enableUvs : false;\\n\\t\\tthis.enableColors = enableColors !== undefined ? enableColors : false;\\n\\n\\t\\t// functions have to be object properties\\n\\t\\t// prototype functions kill performance\\n\\t\\t// (tested and it was 4x slower !!!)\\n\\n\\t\\tthis.init = function ( resolution ) {\\n\\n\\t\\t\\tthis.resolution = resolution;\\n\\n\\t\\t\\t// parameters\\n\\n\\t\\t\\tthis.isolation = 80.0;\\n\\n\\t\\t\\t// size of field, 32 is pushing it in Javascript :)\\n\\n\\t\\t\\tthis.size = resolution;\\n\\t\\t\\tthis.size2 = this.size * this.size;\\n\\t\\t\\tthis.size3 = this.size2 * this.size;\\n\\t\\t\\tthis.halfsize = this.size / 2.0;\\n\\n\\t\\t\\t// deltas\\n\\n\\t\\t\\tthis.delta = 2.0 / this.size;\\n\\t\\t\\tthis.yd = this.size;\\n\\t\\t\\tthis.zd = this.size2;\\n\\n\\t\\t\\tthis.field = new Float32Array( this.size3 );\\n\\t\\t\\tthis.normal_cache = new Float32Array( this.size3 * 3 );\\n\\n\\t\\t\\t// temp buffers used in polygonize\\n\\n\\t\\t\\tthis.vlist = new Float32Array( 12 * 3 );\\n\\t\\t\\tthis.nlist = new Float32Array( 12 * 3 );\\n\\n\\t\\t\\t// immediate render mode simulator\\n\\n\\t\\t\\tthis.maxCount = 4096; // TODO: find the fastest size for this buffer\\n\\t\\t\\tthis.count = 0;\\n\\n\\t\\t\\tthis.hasPositions = false;\\n\\t\\t\\tthis.hasNormals = false;\\n\\t\\t\\tthis.hasColors = false;\\n\\t\\t\\tthis.hasUvs = false;\\n\\n\\t\\t\\tthis.positionArray = new Float32Array( this.maxCount * 3 );\\n\\t\\t\\tthis.normalArray   = new Float32Array( this.maxCount * 3 );\\n\\n\\t\\t\\tif ( this.enableUvs ) {\\n\\n\\t\\t\\t\\tthis.uvArray = new Float32Array( this.maxCount * 2 );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( this.enableColors ) {\\n\\n\\t\\t\\t\\tthis.colorArray   = new Float32Array( this.maxCount * 3 );\\n\\n\\t\\t\\t}\\n\\n\\t\\t};\\n\\n\\t\\t///////////////////////\\n\\t\\t// Polygonization\\n\\t\\t///////////////////////\\n\\n\\t\\tthis.lerp = function( a, b, t ) {\\n\\n\\t\\t\\treturn a + ( b - a ) * t;\\n\\n\\t\\t};\\n\\n\\t\\tthis.VIntX = function( q, pout, nout, offset, isol, x, y, z, valp1, valp2 ) {\\n\\n\\t\\t\\tvar mu = ( isol - valp1 ) / ( valp2 - valp1 ),\\n\\t\\t\\tnc = this.normal_cache;\\n\\n\\t\\t\\tpout[ offset ] \\t   = x + mu * this.delta;\\n\\t\\t\\tpout[ offset + 1 ] = y;\\n\\t\\t\\tpout[ offset + 2 ] = z;\\n\\n\\t\\t\\tnout[ offset ] \\t   = this.lerp( nc[ q ],     nc[ q + 3 ], mu );\\n\\t\\t\\tnout[ offset + 1 ] = this.lerp( nc[ q + 1 ], nc[ q + 4 ], mu );\\n\\t\\t\\tnout[ offset + 2 ] = this.lerp( nc[ q + 2 ], nc[ q + 5 ], mu );\\n\\n\\t\\t};\\n\\n\\t\\tthis.VIntY = function( q, pout, nout, offset, isol, x, y, z, valp1, valp2 ) {\\n\\n\\t\\t\\tvar mu = ( isol - valp1 ) / ( valp2 - valp1 ),\\n\\t\\t\\tnc = this.normal_cache;\\n\\n\\t\\t\\tpout[ offset ] \\t   = x;\\n\\t\\t\\tpout[ offset + 1 ] = y + mu * this.delta;\\n\\t\\t\\tpout[ offset + 2 ] = z;\\n\\n\\t\\t\\tvar q2 = q + this.yd * 3;\\n\\n\\t\\t\\tnout[ offset ] \\t   = this.lerp( nc[ q ],     nc[ q2 ],     mu );\\n\\t\\t\\tnout[ offset + 1 ] = this.lerp( nc[ q + 1 ], nc[ q2 + 1 ], mu );\\n\\t\\t\\tnout[ offset + 2 ] = this.lerp( nc[ q + 2 ], nc[ q2 + 2 ], mu );\\n\\n\\t\\t};\\n\\n\\t\\tthis.VIntZ = function( q, pout, nout, offset, isol, x, y, z, valp1, valp2 ) {\\n\\n\\t\\t\\tvar mu = ( isol - valp1 ) / ( valp2 - valp1 ),\\n\\t\\t\\tnc = this.normal_cache;\\n\\n\\t\\t\\tpout[ offset ] \\t   = x;\\n\\t\\t\\tpout[ offset + 1 ] = y;\\n\\t\\t\\tpout[ offset + 2 ] = z + mu * this.delta;\\n\\n\\t\\t\\tvar q2 = q + this.zd * 3;\\n\\n\\t\\t\\tnout[ offset ] \\t   = this.lerp( nc[ q ],     nc[ q2 ],     mu );\\n\\t\\t\\tnout[ offset + 1 ] = this.lerp( nc[ q + 1 ], nc[ q2 + 1 ], mu );\\n\\t\\t\\tnout[ offset + 2 ] = this.lerp( nc[ q + 2 ], nc[ q2 + 2 ], mu );\\n\\n\\t\\t};\\n\\n\\t\\tthis.compNorm = function( q ) {\\n\\n\\t\\t\\tvar q3 = q * 3;\\n\\n\\t\\t\\tif ( this.normal_cache[ q3 ] === 0.0 ) {\\n\\n\\t\\t\\t\\tthis.normal_cache[ q3 ] = this.field[ q - 1 ] \\t    - this.field[ q + 1 ];\\n\\t\\t\\t\\tthis.normal_cache[ q3 + 1 ] = this.field[ q - this.yd ] - this.field[ q + this.yd ];\\n\\t\\t\\t\\tthis.normal_cache[ q3 + 2 ] = this.field[ q - this.zd ] - this.field[ q + this.zd ];\\n\\n\\t\\t\\t}\\n\\n\\t\\t};\\n\\n\\t\\t// Returns total number of triangles. Fills triangles.\\n\\t\\t// (this is where most of time is spent - it's inner work of O(n3) loop )\\n\\n\\t\\tthis.polygonize = function( fx, fy, fz, q, isol, renderCallback ) {\\n\\n\\t\\t\\t// cache indices\\n\\t\\t\\tvar q1 = q + 1,\\n\\t\\t\\t\\tqy = q + this.yd,\\n\\t\\t\\t\\tqz = q + this.zd,\\n\\t\\t\\t\\tq1y = q1 + this.yd,\\n\\t\\t\\t\\tq1z = q1 + this.zd,\\n\\t\\t\\t\\tqyz = q + this.yd + this.zd,\\n\\t\\t\\t\\tq1yz = q1 + this.yd + this.zd;\\n\\n\\t\\t\\tvar cubeindex = 0,\\n\\t\\t\\t\\tfield0 = this.field[ q ],\\n\\t\\t\\t\\tfield1 = this.field[ q1 ],\\n\\t\\t\\t\\tfield2 = this.field[ qy ],\\n\\t\\t\\t\\tfield3 = this.field[ q1y ],\\n\\t\\t\\t\\tfield4 = this.field[ qz ],\\n\\t\\t\\t\\tfield5 = this.field[ q1z ],\\n\\t\\t\\t\\tfield6 = this.field[ qyz ],\\n\\t\\t\\t\\tfield7 = this.field[ q1yz ];\\n\\n\\t\\t\\tif ( field0 < isol ) cubeindex |= 1;\\n\\t\\t\\tif ( field1 < isol ) cubeindex |= 2;\\n\\t\\t\\tif ( field2 < isol ) cubeindex |= 8;\\n\\t\\t\\tif ( field3 < isol ) cubeindex |= 4;\\n\\t\\t\\tif ( field4 < isol ) cubeindex |= 16;\\n\\t\\t\\tif ( field5 < isol ) cubeindex |= 32;\\n\\t\\t\\tif ( field6 < isol ) cubeindex |= 128;\\n\\t\\t\\tif ( field7 < isol ) cubeindex |= 64;\\n\\n\\t\\t\\t// if cube is entirely in/out of the surface - bail, nothing to draw\\n\\n\\t\\t\\tvar bits = THREE.edgeTable[ cubeindex ];\\n\\t\\t\\tif ( bits === 0 ) return 0;\\n\\n\\t\\t\\tvar d = this.delta,\\n\\t\\t\\t\\tfx2 = fx + d,\\n\\t\\t\\t\\tfy2 = fy + d,\\n\\t\\t\\t\\tfz2 = fz + d;\\n\\n\\t\\t\\t// top of the cube\\n\\n\\t\\t\\tif ( bits & 1 ) {\\n\\n\\t\\t\\t\\tthis.compNorm( q );\\n\\t\\t\\t\\tthis.compNorm( q1 );\\n\\t\\t\\t\\tthis.VIntX( q * 3, this.vlist, this.nlist, 0, isol, fx, fy, fz, field0, field1 );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( bits & 2 ) {\\n\\n\\t\\t\\t\\tthis.compNorm( q1 );\\n\\t\\t\\t\\tthis.compNorm( q1y );\\n\\t\\t\\t\\tthis.VIntY( q1 * 3, this.vlist, this.nlist, 3, isol, fx2, fy, fz, field1, field3 );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( bits & 4 ) {\\n\\n\\t\\t\\t\\tthis.compNorm( qy );\\n\\t\\t\\t\\tthis.compNorm( q1y );\\n\\t\\t\\t\\tthis.VIntX( qy * 3, this.vlist, this.nlist, 6, isol, fx, fy2, fz, field2, field3 );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( bits & 8 ) {\\n\\n\\t\\t\\t\\tthis.compNorm( q );\\n\\t\\t\\t\\tthis.compNorm( qy );\\n\\t\\t\\t\\tthis.VIntY( q * 3, this.vlist, this.nlist, 9, isol, fx, fy, fz, field0, field2 );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t// bottom of the cube\\n\\n\\t\\t\\tif ( bits & 16 ) {\\n\\n\\t\\t\\t\\tthis.compNorm( qz );\\n\\t\\t\\t\\tthis.compNorm( q1z );\\n\\t\\t\\t\\tthis.VIntX( qz * 3, this.vlist, this.nlist, 12, isol, fx, fy, fz2, field4, field5 );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( bits & 32 ) {\\n\\n\\t\\t\\t\\tthis.compNorm( q1z );\\n\\t\\t\\t\\tthis.compNorm( q1yz );\\n\\t\\t\\t\\tthis.VIntY( q1z * 3,  this.vlist, this.nlist, 15, isol, fx2, fy, fz2, field5, field7 );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( bits & 64 ) {\\n\\n\\t\\t\\t\\tthis.compNorm( qyz );\\n\\t\\t\\t\\tthis.compNorm( q1yz );\\n\\t\\t\\t\\tthis.VIntX( qyz * 3, this.vlist, this.nlist, 18, isol, fx, fy2, fz2, field6, field7 );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( bits & 128 ) {\\n\\n\\t\\t\\t\\tthis.compNorm( qz );\\n\\t\\t\\t\\tthis.compNorm( qyz );\\n\\t\\t\\t\\tthis.VIntY( qz * 3,  this.vlist, this.nlist, 21, isol, fx, fy, fz2, field4, field6 );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t// vertical lines of the cube\\n\\n\\t\\t\\tif ( bits & 256 ) {\\n\\n\\t\\t\\t\\tthis.compNorm( q );\\n\\t\\t\\t\\tthis.compNorm( qz );\\n\\t\\t\\t\\tthis.VIntZ( q * 3, this.vlist, this.nlist, 24, isol, fx, fy, fz, field0, field4 );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( bits & 512 ) {\\n\\n\\t\\t\\t\\tthis.compNorm( q1 );\\n\\t\\t\\t\\tthis.compNorm( q1z );\\n\\t\\t\\t\\tthis.VIntZ( q1 * 3,  this.vlist, this.nlist, 27, isol, fx2, fy,  fz, field1, field5 );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( bits & 1024 ) {\\n\\n\\t\\t\\t\\tthis.compNorm( q1y );\\n\\t\\t\\t\\tthis.compNorm( q1yz );\\n\\t\\t\\t\\tthis.VIntZ( q1y * 3, this.vlist, this.nlist, 30, isol, fx2, fy2, fz, field3, field7 );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( bits & 2048 ) {\\n\\n\\t\\t\\t\\tthis.compNorm( qy );\\n\\t\\t\\t\\tthis.compNorm( qyz );\\n\\t\\t\\t\\tthis.VIntZ( qy * 3, this.vlist, this.nlist, 33, isol, fx,  fy2, fz, field2, field6 );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tcubeindex <<= 4;  // re-purpose cubeindex into an offset into triTable\\n\\n\\t\\t\\tvar o1, o2, o3, numtris = 0, i = 0;\\n\\n\\t\\t\\t// here is where triangles are created\\n\\n\\t\\t\\twhile ( THREE.triTable[ cubeindex + i ] != - 1 ) {\\n\\n\\t\\t\\t\\to1 = cubeindex + i;\\n\\t\\t\\t\\to2 = o1 + 1;\\n\\t\\t\\t\\to3 = o1 + 2;\\n\\n\\t\\t\\t\\tthis.posnormtriv( this.vlist, this.nlist,\\n\\t\\t\\t\\t\\t\\t\\t\\t  3 * THREE.triTable[ o1 ],\\n\\t\\t\\t\\t\\t\\t\\t\\t  3 * THREE.triTable[ o2 ],\\n\\t\\t\\t\\t\\t\\t\\t\\t  3 * THREE.triTable[ o3 ],\\n\\t\\t\\t\\t\\t\\t\\t\\t  renderCallback );\\n\\n\\t\\t\\t\\ti += 3;\\n\\t\\t\\t\\tnumtris ++;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn numtris;\\n\\n\\t\\t};\\n\\n\\t\\t/////////////////////////////////////\\n\\t\\t// Immediate render mode simulator\\n\\t\\t/////////////////////////////////////\\n\\n\\t\\tthis.posnormtriv = function( pos, norm, o1, o2, o3, renderCallback ) {\\n\\n\\t\\t\\tvar c = this.count * 3;\\n\\n\\t\\t\\t// positions\\n\\n\\t\\t\\tthis.positionArray[ c ] \\t= pos[ o1 ];\\n\\t\\t\\tthis.positionArray[ c + 1 ] = pos[ o1 + 1 ];\\n\\t\\t\\tthis.positionArray[ c + 2 ] = pos[ o1 + 2 ];\\n\\n\\t\\t\\tthis.positionArray[ c + 3 ] = pos[ o2 ];\\n\\t\\t\\tthis.positionArray[ c + 4 ] = pos[ o2 + 1 ];\\n\\t\\t\\tthis.positionArray[ c + 5 ] = pos[ o2 + 2 ];\\n\\n\\t\\t\\tthis.positionArray[ c + 6 ] = pos[ o3 ];\\n\\t\\t\\tthis.positionArray[ c + 7 ] = pos[ o3 + 1 ];\\n\\t\\t\\tthis.positionArray[ c + 8 ] = pos[ o3 + 2 ];\\n\\n\\t\\t\\t// normals\\n\\n\\t\\t\\tthis.normalArray[ c ] \\t  = norm[ o1 ];\\n\\t\\t\\tthis.normalArray[ c + 1 ] = norm[ o1 + 1 ];\\n\\t\\t\\tthis.normalArray[ c + 2 ] = norm[ o1 + 2 ];\\n\\n\\t\\t\\tthis.normalArray[ c + 3 ] = norm[ o2 ];\\n\\t\\t\\tthis.normalArray[ c + 4 ] = norm[ o2 + 1 ];\\n\\t\\t\\tthis.normalArray[ c + 5 ] = norm[ o2 + 2 ];\\n\\n\\t\\t\\tthis.normalArray[ c + 6 ] = norm[ o3 ];\\n\\t\\t\\tthis.normalArray[ c + 7 ] = norm[ o3 + 1 ];\\n\\t\\t\\tthis.normalArray[ c + 8 ] = norm[ o3 + 2 ];\\n\\n\\t\\t\\t// uvs\\n\\n\\t\\t\\tif ( this.enableUvs ) {\\n\\n\\t\\t\\t\\tvar d = this.count * 2;\\n\\n\\t\\t\\t\\tthis.uvArray[ d ] \\t  = pos[ o1 ];\\n\\t\\t\\t\\tthis.uvArray[ d + 1 ] = pos[ o1 + 2 ];\\n\\n\\t\\t\\t\\tthis.uvArray[ d + 2 ] = pos[ o2 ];\\n\\t\\t\\t\\tthis.uvArray[ d + 3 ] = pos[ o2 + 2 ];\\n\\n\\t\\t\\t\\tthis.uvArray[ d + 4 ] = pos[ o3 ];\\n\\t\\t\\t\\tthis.uvArray[ d + 5 ] = pos[ o3 + 2 ];\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t// colors\\n\\n\\t\\t\\tif ( this.enableColors ) {\\n\\n\\t\\t\\t\\tthis.colorArray[ c ] \\t = pos[ o1 ];\\n\\t\\t\\t\\tthis.colorArray[ c + 1 ] = pos[ o1 + 1 ];\\n\\t\\t\\t\\tthis.colorArray[ c + 2 ] = pos[ o1 + 2 ];\\n\\n\\t\\t\\t\\tthis.colorArray[ c + 3 ] = pos[ o2 ];\\n\\t\\t\\t\\tthis.colorArray[ c + 4 ] = pos[ o2 + 1 ];\\n\\t\\t\\t\\tthis.colorArray[ c + 5 ] = pos[ o2 + 2 ];\\n\\n\\t\\t\\t\\tthis.colorArray[ c + 6 ] = pos[ o3 ];\\n\\t\\t\\t\\tthis.colorArray[ c + 7 ] = pos[ o3 + 1 ];\\n\\t\\t\\t\\tthis.colorArray[ c + 8 ] = pos[ o3 + 2 ];\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.count += 3;\\n\\n\\t\\t\\tif ( this.count >= this.maxCount - 3 ) {\\n\\n\\t\\t\\t\\tthis.hasPositions = true;\\n\\t\\t\\t\\tthis.hasNormals = true;\\n\\n\\t\\t\\t\\tif ( this.enableUvs ) {\\n\\n\\t\\t\\t\\t\\tthis.hasUvs = true;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( this.enableColors ) {\\n\\n\\t\\t\\t\\t\\tthis.hasColors = true;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\trenderCallback( this );\\n\\n\\t\\t\\t}\\n\\n\\t\\t};\\n\\n\\t\\tthis.begin = function( ) {\\n\\n\\t\\t\\tthis.count = 0;\\n\\n\\t\\t\\tthis.hasPositions = false;\\n\\t\\t\\tthis.hasNormals = false;\\n\\t\\t\\tthis.hasUvs = false;\\n\\t\\t\\tthis.hasColors = false;\\n\\n\\t\\t};\\n\\n\\t\\tthis.end = function( renderCallback ) {\\n\\n\\t\\t\\tif ( this.count === 0 ) return;\\n\\n\\t\\t\\tfor ( var i = this.count * 3; i < this.positionArray.length; i ++ ) {\\n\\n\\t\\t\\t\\tthis.positionArray[ i ] = 0.0;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.hasPositions = true;\\n\\t\\t\\tthis.hasNormals = true;\\n\\n\\t\\t\\tif ( this.enableUvs ) {\\n\\n\\t\\t\\t\\tthis.hasUvs = true;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( this.enableColors ) {\\n\\n\\t\\t\\t\\tthis.hasColors = true;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\trenderCallback( this );\\n\\n\\t\\t};\\n\\n\\t\\t/////////////////////////////////////\\n\\t\\t// Metaballs\\n\\t\\t/////////////////////////////////////\\n\\n\\t\\t// Adds a reciprocal ball (nice and blobby) that, to be fast, fades to zero after\\n\\t\\t// a fixed distance, determined by strength and subtract.\\n\\n\\t\\tthis.addBall = function( ballx, bally, ballz, strength, subtract ) {\\n\\n\\t\\t\\t// Let's solve the equation to find the radius:\\n\\t\\t\\t// 1.0 / (0.000001 + radius^2) * strength - subtract = 0\\n\\t\\t\\t// strength / (radius^2) = subtract\\n\\t\\t\\t// strength = subtract * radius^2\\n\\t\\t\\t// radius^2 = strength / subtract\\n\\t\\t\\t// radius = sqrt(strength / subtract)\\n\\n\\t\\t\\tvar radius = this.size * Math.sqrt( strength / subtract ),\\n\\t\\t\\t\\tzs = ballz * this.size,\\n\\t\\t\\t\\tys = bally * this.size,\\n\\t\\t\\t\\txs = ballx * this.size;\\n\\n\\t\\t\\tvar min_z = Math.floor( zs - radius ); if ( min_z < 1 ) min_z = 1;\\n\\t\\t\\tvar max_z = Math.floor( zs + radius ); if ( max_z > this.size - 1 ) max_z = this.size - 1;\\n\\t\\t\\tvar min_y = Math.floor( ys - radius ); if ( min_y < 1 ) min_y = 1;\\n\\t\\t\\tvar max_y = Math.floor( ys + radius ); if ( max_y > this.size - 1 ) max_y = this.size - 1;\\n\\t\\t\\tvar min_x = Math.floor( xs - radius ); if ( min_x < 1  ) min_x = 1;\\n\\t\\t\\tvar max_x = Math.floor( xs + radius ); if ( max_x > this.size - 1 ) max_x = this.size - 1;\\n\\n\\n\\t\\t\\t// Don't polygonize in the outer layer because normals aren't\\n\\t\\t\\t// well-defined there.\\n\\n\\t\\t\\tvar x, y, z, y_offset, z_offset, fx, fy, fz, fz2, fy2, val;\\n\\n\\t\\t\\tfor ( z = min_z; z < max_z; z ++ ) {\\n\\n\\t\\t\\t\\tz_offset = this.size2 * z,\\n\\t\\t\\t\\tfz = z / this.size - ballz,\\n\\t\\t\\t\\tfz2 = fz * fz;\\n\\n\\t\\t\\t\\tfor ( y = min_y; y < max_y; y ++ ) {\\n\\n\\t\\t\\t\\t\\ty_offset = z_offset + this.size * y;\\n\\t\\t\\t\\t\\tfy = y / this.size - bally;\\n\\t\\t\\t\\t\\tfy2 = fy * fy;\\n\\n\\t\\t\\t\\t\\tfor ( x = min_x; x < max_x; x ++ ) {\\n\\n\\t\\t\\t\\t\\t\\tfx = x / this.size - ballx;\\n\\t\\t\\t\\t\\t\\tval = strength / ( 0.000001 + fx * fx + fy2 + fz2 ) - subtract;\\n\\t\\t\\t\\t\\t\\tif ( val > 0.0 ) this.field[ y_offset + x ] += val;\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t};\\n\\n\\t\\tthis.addPlaneX = function( strength, subtract ) {\\n\\n\\t\\t\\tvar x, y, z, xx, val, xdiv, cxy,\\n\\n\\t\\t\\t\\t// cache attribute lookups\\n\\t\\t\\t\\tsize = this.size,\\n\\t\\t\\t\\tyd = this.yd,\\n\\t\\t\\t\\tzd = this.zd,\\n\\t\\t\\t\\tfield = this.field,\\n\\n\\t\\t\\t\\tdist = size * Math.sqrt( strength / subtract );\\n\\n\\t\\t\\tif ( dist > size ) dist = size;\\n\\n\\t\\t\\tfor ( x = 0; x < dist; x ++ ) {\\n\\n\\t\\t\\t\\txdiv = x / size;\\n\\t\\t\\t\\txx = xdiv * xdiv;\\n\\t\\t\\t\\tval = strength / ( 0.0001 + xx ) - subtract;\\n\\n\\t\\t\\t\\tif ( val > 0.0 ) {\\n\\n\\t\\t\\t\\t\\tfor ( y = 0; y < size; y ++ ) {\\n\\n\\t\\t\\t\\t\\t\\tcxy = x + y * yd;\\n\\n\\t\\t\\t\\t\\t\\tfor ( z = 0; z < size; z ++ ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tfield[ zd * z + cxy ] += val;\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t};\\n\\n\\t\\tthis.addPlaneY = function( strength, subtract ) {\\n\\n\\t\\t\\tvar x, y, z, yy, val, ydiv, cy, cxy,\\n\\n\\t\\t\\t\\t// cache attribute lookups\\n\\t\\t\\t\\tsize = this.size,\\n\\t\\t\\t\\tyd = this.yd,\\n\\t\\t\\t\\tzd = this.zd,\\n\\t\\t\\t\\tfield = this.field,\\n\\n\\t\\t\\t\\tdist = size * Math.sqrt( strength / subtract );\\n\\n\\t\\t\\tif ( dist > size ) dist = size;\\n\\n\\t\\t\\tfor ( y = 0; y < dist; y ++ ) {\\n\\n\\t\\t\\t\\tydiv = y / size;\\n\\t\\t\\t\\tyy = ydiv * ydiv;\\n\\t\\t\\t\\tval = strength / ( 0.0001 + yy ) - subtract;\\n\\n\\t\\t\\t\\tif ( val > 0.0 ) {\\n\\n\\t\\t\\t\\t\\tcy = y * yd;\\n\\n\\t\\t\\t\\t\\tfor ( x = 0; x < size; x ++ ) {\\n\\n\\t\\t\\t\\t\\t\\tcxy = cy + x;\\n\\n\\t\\t\\t\\t\\t\\tfor ( z = 0; z < size; z ++ )\\n\\t\\t\\t\\t\\t\\t\\tfield[ zd * z + cxy ] += val;\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t};\\n\\n\\t\\tthis.addPlaneZ = function( strength, subtract ) {\\n\\n\\t\\t\\tvar x, y, z, zz, val, zdiv, cz, cyz,\\n\\n\\t\\t\\t\\t// cache attribute lookups\\n\\t\\t\\t\\tsize = this.size,\\n\\t\\t\\t\\tyd = this.yd,\\n\\t\\t\\t\\tzd = this.zd,\\n\\t\\t\\t\\tfield = this.field,\\n\\n\\t\\t\\t\\tdist = size * Math.sqrt( strength / subtract );\\n\\n\\t\\t\\tif ( dist > size ) dist = size;\\n\\n\\t\\t\\tfor ( z = 0; z < dist; z ++ ) {\\n\\n\\t\\t\\t\\tzdiv = z / size;\\n\\t\\t\\t\\tzz = zdiv * zdiv;\\n\\t\\t\\t\\tval = strength / ( 0.0001 + zz ) - subtract;\\n\\t\\t\\t\\tif ( val > 0.0 ) {\\n\\n\\t\\t\\t\\t\\tcz = zd * z;\\n\\n\\t\\t\\t\\t\\tfor ( y = 0; y < size; y ++ ) {\\n\\n\\t\\t\\t\\t\\t\\tcyz = cz + y * yd;\\n\\n\\t\\t\\t\\t\\t\\tfor ( x = 0; x < size; x ++ )\\n\\t\\t\\t\\t\\t\\t\\tfield[ cyz + x ] += val;\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t};\\n\\n\\t\\t/////////////////////////////////////\\n\\t\\t// Updates\\n\\t\\t/////////////////////////////////////\\n\\n\\t\\tthis.reset = function () {\\n\\n\\t\\t\\tvar i;\\n\\n\\t\\t\\t// wipe the normal cache\\n\\n\\t\\t\\tfor ( i = 0; i < this.size3; i ++ ) {\\n\\n\\t\\t\\t\\tthis.normal_cache[ i * 3 ] = 0.0;\\n\\t\\t\\t\\tthis.field[ i ] = 0.0;\\n\\n\\t\\t\\t}\\n\\n\\t\\t};\\n\\n\\t\\tthis.render = function ( renderCallback ) {\\n\\n\\t\\t\\tthis.begin();\\n\\n\\t\\t\\t// Triangulate. Yeah, this is slow.\\n\\n\\t\\t\\tvar smin2 = this.size - 2;\\n\\n\\t\\t\\tfor ( var z = 1; z < smin2; z ++ ) {\\n\\n\\t\\t\\t\\tvar z_offset = this.size2 * z;\\n\\t\\t\\t\\tvar fz = ( z - this.halfsize ) / this.halfsize; //+ 1\\n\\n\\t\\t\\t\\tfor ( var y = 1; y < smin2; y ++ ) {\\n\\n\\t\\t\\t\\t\\tvar y_offset = z_offset + this.size * y;\\n\\t\\t\\t\\t\\tvar fy = ( y - this.halfsize ) / this.halfsize; //+ 1\\n\\n\\t\\t\\t\\t\\tfor ( var x = 1; x < smin2; x ++ ) {\\n\\n\\t\\t\\t\\t\\t\\tvar fx = ( x - this.halfsize ) / this.halfsize; //+ 1\\n\\t\\t\\t\\t\\t\\tvar q = y_offset + x;\\n\\n\\t\\t\\t\\t\\t\\tthis.polygonize( fx, fy, fz, q, this.isolation, renderCallback );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.end( renderCallback );\\n\\n\\t\\t};\\n\\n\\t\\tthis.generateGeometry = function() {\\n\\n\\t\\t\\tvar start = 0, geo = new THREE.Geometry();\\n\\t\\t\\tvar normals = [];\\n\\n\\t\\t\\tvar geo_callback = function( object ) {\\n\\n\\t\\t\\t\\tvar i, x, y, z, vertex, normal,\\n\\t\\t\\t\\t\\tface, a, b, c, na, nb, nc, nfaces;\\n\\n\\n\\t\\t\\t\\tfor ( i = 0; i < object.count; i ++ ) {\\n\\n\\t\\t\\t\\t\\ta = i * 3;\\n\\t\\t\\t\\t\\tb = a + 1;\\n\\t\\t\\t\\t\\tc = a + 2;\\n\\n\\t\\t\\t\\t\\tx = object.positionArray[ a ];\\n\\t\\t\\t\\t\\ty = object.positionArray[ b ];\\n\\t\\t\\t\\t\\tz = object.positionArray[ c ];\\n\\t\\t\\t\\t\\tvertex = new THREE.Vector3( x, y, z );\\n\\n\\t\\t\\t\\t\\tx = object.normalArray[ a ];\\n\\t\\t\\t\\t\\ty = object.normalArray[ b ];\\n\\t\\t\\t\\t\\tz = object.normalArray[ c ];\\n\\t\\t\\t\\t\\tnormal = new THREE.Vector3( x, y, z );\\n\\t\\t\\t\\t\\tnormal.normalize();\\n\\n\\t\\t\\t\\t\\tgeo.vertices.push( vertex );\\n\\t\\t\\t\\t\\tnormals.push( normal );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tnfaces = object.count / 3;\\n\\n\\t\\t\\t\\tfor ( i = 0; i < nfaces; i ++ ) {\\n\\n\\t\\t\\t\\t\\ta = ( start + i ) * 3;\\n\\t\\t\\t\\t\\tb = a + 1;\\n\\t\\t\\t\\t\\tc = a + 2;\\n\\n\\t\\t\\t\\t\\tna = normals[ a ];\\n\\t\\t\\t\\t\\tnb = normals[ b ];\\n\\t\\t\\t\\t\\tnc = normals[ c ];\\n\\n\\t\\t\\t\\t\\tface = new THREE.Face3( a, b, c, [ na, nb, nc ] );\\n\\n\\t\\t\\t\\t\\tgeo.faces.push( face );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tstart += nfaces;\\n\\t\\t\\t\\tobject.count = 0;\\n\\n\\t\\t\\t};\\n\\n\\t\\t\\tthis.render( geo_callback );\\n\\n\\t\\t\\t// console.log( \\\"generated \\\" + geo.faces.length + \\\" triangles\\\" );\\n\\n\\t\\t\\treturn geo;\\n\\n\\t\\t};\\n\\n\\t\\tthis.init( resolution );\\n\\n\\t};\\n\\n\\tTHREE.MarchingCubes.prototype = Object.create( THREE.ImmediateRenderObject.prototype );\\n\\tTHREE.MarchingCubes.prototype.constructor = THREE.MarchingCubes;\\n\\n\\n\\t/////////////////////////////////////\\n\\t// Marching cubes lookup tables\\n\\t/////////////////////////////////////\\n\\n\\t// These tables are straight from Paul Bourke's page:\\n\\t// http://local.wasp.uwa.edu.au/~pbourke/geometry/polygonise/\\n\\t// who in turn got them from Cory Gene Bloyd.\\n\\n\\tTHREE.edgeTable = new Int32Array( [\\n\\t0x0, 0x109, 0x203, 0x30a, 0x406, 0x50f, 0x605, 0x70c,\\n\\t0x80c, 0x905, 0xa0f, 0xb06, 0xc0a, 0xd03, 0xe09, 0xf00,\\n\\t0x190, 0x99, 0x393, 0x29a, 0x596, 0x49f, 0x795, 0x69c,\\n\\t0x99c, 0x895, 0xb9f, 0xa96, 0xd9a, 0xc93, 0xf99, 0xe90,\\n\\t0x230, 0x339, 0x33, 0x13a, 0x636, 0x73f, 0x435, 0x53c,\\n\\t0xa3c, 0xb35, 0x83f, 0x936, 0xe3a, 0xf33, 0xc39, 0xd30,\\n\\t0x3a0, 0x2a9, 0x1a3, 0xaa, 0x7a6, 0x6af, 0x5a5, 0x4ac,\\n\\t0xbac, 0xaa5, 0x9af, 0x8a6, 0xfaa, 0xea3, 0xda9, 0xca0,\\n\\t0x460, 0x569, 0x663, 0x76a, 0x66, 0x16f, 0x265, 0x36c,\\n\\t0xc6c, 0xd65, 0xe6f, 0xf66, 0x86a, 0x963, 0xa69, 0xb60,\\n\\t0x5f0, 0x4f9, 0x7f3, 0x6fa, 0x1f6, 0xff, 0x3f5, 0x2fc,\\n\\t0xdfc, 0xcf5, 0xfff, 0xef6, 0x9fa, 0x8f3, 0xbf9, 0xaf0,\\n\\t0x650, 0x759, 0x453, 0x55a, 0x256, 0x35f, 0x55, 0x15c,\\n\\t0xe5c, 0xf55, 0xc5f, 0xd56, 0xa5a, 0xb53, 0x859, 0x950,\\n\\t0x7c0, 0x6c9, 0x5c3, 0x4ca, 0x3c6, 0x2cf, 0x1c5, 0xcc,\\n\\t0xfcc, 0xec5, 0xdcf, 0xcc6, 0xbca, 0xac3, 0x9c9, 0x8c0,\\n\\t0x8c0, 0x9c9, 0xac3, 0xbca, 0xcc6, 0xdcf, 0xec5, 0xfcc,\\n\\t0xcc, 0x1c5, 0x2cf, 0x3c6, 0x4ca, 0x5c3, 0x6c9, 0x7c0,\\n\\t0x950, 0x859, 0xb53, 0xa5a, 0xd56, 0xc5f, 0xf55, 0xe5c,\\n\\t0x15c, 0x55, 0x35f, 0x256, 0x55a, 0x453, 0x759, 0x650,\\n\\t0xaf0, 0xbf9, 0x8f3, 0x9fa, 0xef6, 0xfff, 0xcf5, 0xdfc,\\n\\t0x2fc, 0x3f5, 0xff, 0x1f6, 0x6fa, 0x7f3, 0x4f9, 0x5f0,\\n\\t0xb60, 0xa69, 0x963, 0x86a, 0xf66, 0xe6f, 0xd65, 0xc6c,\\n\\t0x36c, 0x265, 0x16f, 0x66, 0x76a, 0x663, 0x569, 0x460,\\n\\t0xca0, 0xda9, 0xea3, 0xfaa, 0x8a6, 0x9af, 0xaa5, 0xbac,\\n\\t0x4ac, 0x5a5, 0x6af, 0x7a6, 0xaa, 0x1a3, 0x2a9, 0x3a0,\\n\\t0xd30, 0xc39, 0xf33, 0xe3a, 0x936, 0x83f, 0xb35, 0xa3c,\\n\\t0x53c, 0x435, 0x73f, 0x636, 0x13a, 0x33, 0x339, 0x230,\\n\\t0xe90, 0xf99, 0xc93, 0xd9a, 0xa96, 0xb9f, 0x895, 0x99c,\\n\\t0x69c, 0x795, 0x49f, 0x596, 0x29a, 0x393, 0x99, 0x190,\\n\\t0xf00, 0xe09, 0xd03, 0xc0a, 0xb06, 0xa0f, 0x905, 0x80c,\\n\\t0x70c, 0x605, 0x50f, 0x406, 0x30a, 0x203, 0x109, 0x0 ] );\\n\\n\\tTHREE.triTable = new Int32Array( [\\n\\t- 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t0, 8, 3, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t0, 1, 9, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t1, 8, 3, 9, 8, 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t1, 2, 10, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t0, 8, 3, 1, 2, 10, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t9, 2, 10, 0, 2, 9, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t2, 8, 3, 2, 10, 8, 10, 9, 8, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t3, 11, 2, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t0, 11, 2, 8, 11, 0, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t1, 9, 0, 2, 3, 11, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t1, 11, 2, 1, 9, 11, 9, 8, 11, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t3, 10, 1, 11, 10, 3, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t0, 10, 1, 0, 8, 10, 8, 11, 10, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t3, 9, 0, 3, 11, 9, 11, 10, 9, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t9, 8, 10, 10, 8, 11, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t4, 7, 8, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t4, 3, 0, 7, 3, 4, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t0, 1, 9, 8, 4, 7, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t4, 1, 9, 4, 7, 1, 7, 3, 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t1, 2, 10, 8, 4, 7, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t3, 4, 7, 3, 0, 4, 1, 2, 10, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t9, 2, 10, 9, 0, 2, 8, 4, 7, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t2, 10, 9, 2, 9, 7, 2, 7, 3, 7, 9, 4, - 1, - 1, - 1, - 1,\\n\\t8, 4, 7, 3, 11, 2, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t11, 4, 7, 11, 2, 4, 2, 0, 4, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t9, 0, 1, 8, 4, 7, 2, 3, 11, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t4, 7, 11, 9, 4, 11, 9, 11, 2, 9, 2, 1, - 1, - 1, - 1, - 1,\\n\\t3, 10, 1, 3, 11, 10, 7, 8, 4, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t1, 11, 10, 1, 4, 11, 1, 0, 4, 7, 11, 4, - 1, - 1, - 1, - 1,\\n\\t4, 7, 8, 9, 0, 11, 9, 11, 10, 11, 0, 3, - 1, - 1, - 1, - 1,\\n\\t4, 7, 11, 4, 11, 9, 9, 11, 10, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t9, 5, 4, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t9, 5, 4, 0, 8, 3, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t0, 5, 4, 1, 5, 0, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t8, 5, 4, 8, 3, 5, 3, 1, 5, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t1, 2, 10, 9, 5, 4, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t3, 0, 8, 1, 2, 10, 4, 9, 5, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t5, 2, 10, 5, 4, 2, 4, 0, 2, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t2, 10, 5, 3, 2, 5, 3, 5, 4, 3, 4, 8, - 1, - 1, - 1, - 1,\\n\\t9, 5, 4, 2, 3, 11, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t0, 11, 2, 0, 8, 11, 4, 9, 5, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t0, 5, 4, 0, 1, 5, 2, 3, 11, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t2, 1, 5, 2, 5, 8, 2, 8, 11, 4, 8, 5, - 1, - 1, - 1, - 1,\\n\\t10, 3, 11, 10, 1, 3, 9, 5, 4, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t4, 9, 5, 0, 8, 1, 8, 10, 1, 8, 11, 10, - 1, - 1, - 1, - 1,\\n\\t5, 4, 0, 5, 0, 11, 5, 11, 10, 11, 0, 3, - 1, - 1, - 1, - 1,\\n\\t5, 4, 8, 5, 8, 10, 10, 8, 11, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t9, 7, 8, 5, 7, 9, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t9, 3, 0, 9, 5, 3, 5, 7, 3, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t0, 7, 8, 0, 1, 7, 1, 5, 7, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t1, 5, 3, 3, 5, 7, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t9, 7, 8, 9, 5, 7, 10, 1, 2, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t10, 1, 2, 9, 5, 0, 5, 3, 0, 5, 7, 3, - 1, - 1, - 1, - 1,\\n\\t8, 0, 2, 8, 2, 5, 8, 5, 7, 10, 5, 2, - 1, - 1, - 1, - 1,\\n\\t2, 10, 5, 2, 5, 3, 3, 5, 7, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t7, 9, 5, 7, 8, 9, 3, 11, 2, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t9, 5, 7, 9, 7, 2, 9, 2, 0, 2, 7, 11, - 1, - 1, - 1, - 1,\\n\\t2, 3, 11, 0, 1, 8, 1, 7, 8, 1, 5, 7, - 1, - 1, - 1, - 1,\\n\\t11, 2, 1, 11, 1, 7, 7, 1, 5, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t9, 5, 8, 8, 5, 7, 10, 1, 3, 10, 3, 11, - 1, - 1, - 1, - 1,\\n\\t5, 7, 0, 5, 0, 9, 7, 11, 0, 1, 0, 10, 11, 10, 0, - 1,\\n\\t11, 10, 0, 11, 0, 3, 10, 5, 0, 8, 0, 7, 5, 7, 0, - 1,\\n\\t11, 10, 5, 7, 11, 5, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t10, 6, 5, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t0, 8, 3, 5, 10, 6, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t9, 0, 1, 5, 10, 6, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t1, 8, 3, 1, 9, 8, 5, 10, 6, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t1, 6, 5, 2, 6, 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t1, 6, 5, 1, 2, 6, 3, 0, 8, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t9, 6, 5, 9, 0, 6, 0, 2, 6, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t5, 9, 8, 5, 8, 2, 5, 2, 6, 3, 2, 8, - 1, - 1, - 1, - 1,\\n\\t2, 3, 11, 10, 6, 5, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t11, 0, 8, 11, 2, 0, 10, 6, 5, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t0, 1, 9, 2, 3, 11, 5, 10, 6, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t5, 10, 6, 1, 9, 2, 9, 11, 2, 9, 8, 11, - 1, - 1, - 1, - 1,\\n\\t6, 3, 11, 6, 5, 3, 5, 1, 3, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t0, 8, 11, 0, 11, 5, 0, 5, 1, 5, 11, 6, - 1, - 1, - 1, - 1,\\n\\t3, 11, 6, 0, 3, 6, 0, 6, 5, 0, 5, 9, - 1, - 1, - 1, - 1,\\n\\t6, 5, 9, 6, 9, 11, 11, 9, 8, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t5, 10, 6, 4, 7, 8, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t4, 3, 0, 4, 7, 3, 6, 5, 10, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t1, 9, 0, 5, 10, 6, 8, 4, 7, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t10, 6, 5, 1, 9, 7, 1, 7, 3, 7, 9, 4, - 1, - 1, - 1, - 1,\\n\\t6, 1, 2, 6, 5, 1, 4, 7, 8, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t1, 2, 5, 5, 2, 6, 3, 0, 4, 3, 4, 7, - 1, - 1, - 1, - 1,\\n\\t8, 4, 7, 9, 0, 5, 0, 6, 5, 0, 2, 6, - 1, - 1, - 1, - 1,\\n\\t7, 3, 9, 7, 9, 4, 3, 2, 9, 5, 9, 6, 2, 6, 9, - 1,\\n\\t3, 11, 2, 7, 8, 4, 10, 6, 5, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t5, 10, 6, 4, 7, 2, 4, 2, 0, 2, 7, 11, - 1, - 1, - 1, - 1,\\n\\t0, 1, 9, 4, 7, 8, 2, 3, 11, 5, 10, 6, - 1, - 1, - 1, - 1,\\n\\t9, 2, 1, 9, 11, 2, 9, 4, 11, 7, 11, 4, 5, 10, 6, - 1,\\n\\t8, 4, 7, 3, 11, 5, 3, 5, 1, 5, 11, 6, - 1, - 1, - 1, - 1,\\n\\t5, 1, 11, 5, 11, 6, 1, 0, 11, 7, 11, 4, 0, 4, 11, - 1,\\n\\t0, 5, 9, 0, 6, 5, 0, 3, 6, 11, 6, 3, 8, 4, 7, - 1,\\n\\t6, 5, 9, 6, 9, 11, 4, 7, 9, 7, 11, 9, - 1, - 1, - 1, - 1,\\n\\t10, 4, 9, 6, 4, 10, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t4, 10, 6, 4, 9, 10, 0, 8, 3, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t10, 0, 1, 10, 6, 0, 6, 4, 0, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t8, 3, 1, 8, 1, 6, 8, 6, 4, 6, 1, 10, - 1, - 1, - 1, - 1,\\n\\t1, 4, 9, 1, 2, 4, 2, 6, 4, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t3, 0, 8, 1, 2, 9, 2, 4, 9, 2, 6, 4, - 1, - 1, - 1, - 1,\\n\\t0, 2, 4, 4, 2, 6, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t8, 3, 2, 8, 2, 4, 4, 2, 6, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t10, 4, 9, 10, 6, 4, 11, 2, 3, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t0, 8, 2, 2, 8, 11, 4, 9, 10, 4, 10, 6, - 1, - 1, - 1, - 1,\\n\\t3, 11, 2, 0, 1, 6, 0, 6, 4, 6, 1, 10, - 1, - 1, - 1, - 1,\\n\\t6, 4, 1, 6, 1, 10, 4, 8, 1, 2, 1, 11, 8, 11, 1, - 1,\\n\\t9, 6, 4, 9, 3, 6, 9, 1, 3, 11, 6, 3, - 1, - 1, - 1, - 1,\\n\\t8, 11, 1, 8, 1, 0, 11, 6, 1, 9, 1, 4, 6, 4, 1, - 1,\\n\\t3, 11, 6, 3, 6, 0, 0, 6, 4, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t6, 4, 8, 11, 6, 8, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t7, 10, 6, 7, 8, 10, 8, 9, 10, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t0, 7, 3, 0, 10, 7, 0, 9, 10, 6, 7, 10, - 1, - 1, - 1, - 1,\\n\\t10, 6, 7, 1, 10, 7, 1, 7, 8, 1, 8, 0, - 1, - 1, - 1, - 1,\\n\\t10, 6, 7, 10, 7, 1, 1, 7, 3, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t1, 2, 6, 1, 6, 8, 1, 8, 9, 8, 6, 7, - 1, - 1, - 1, - 1,\\n\\t2, 6, 9, 2, 9, 1, 6, 7, 9, 0, 9, 3, 7, 3, 9, - 1,\\n\\t7, 8, 0, 7, 0, 6, 6, 0, 2, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t7, 3, 2, 6, 7, 2, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t2, 3, 11, 10, 6, 8, 10, 8, 9, 8, 6, 7, - 1, - 1, - 1, - 1,\\n\\t2, 0, 7, 2, 7, 11, 0, 9, 7, 6, 7, 10, 9, 10, 7, - 1,\\n\\t1, 8, 0, 1, 7, 8, 1, 10, 7, 6, 7, 10, 2, 3, 11, - 1,\\n\\t11, 2, 1, 11, 1, 7, 10, 6, 1, 6, 7, 1, - 1, - 1, - 1, - 1,\\n\\t8, 9, 6, 8, 6, 7, 9, 1, 6, 11, 6, 3, 1, 3, 6, - 1,\\n\\t0, 9, 1, 11, 6, 7, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t7, 8, 0, 7, 0, 6, 3, 11, 0, 11, 6, 0, - 1, - 1, - 1, - 1,\\n\\t7, 11, 6, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t7, 6, 11, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t3, 0, 8, 11, 7, 6, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t0, 1, 9, 11, 7, 6, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t8, 1, 9, 8, 3, 1, 11, 7, 6, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t10, 1, 2, 6, 11, 7, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t1, 2, 10, 3, 0, 8, 6, 11, 7, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t2, 9, 0, 2, 10, 9, 6, 11, 7, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t6, 11, 7, 2, 10, 3, 10, 8, 3, 10, 9, 8, - 1, - 1, - 1, - 1,\\n\\t7, 2, 3, 6, 2, 7, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t7, 0, 8, 7, 6, 0, 6, 2, 0, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t2, 7, 6, 2, 3, 7, 0, 1, 9, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t1, 6, 2, 1, 8, 6, 1, 9, 8, 8, 7, 6, - 1, - 1, - 1, - 1,\\n\\t10, 7, 6, 10, 1, 7, 1, 3, 7, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t10, 7, 6, 1, 7, 10, 1, 8, 7, 1, 0, 8, - 1, - 1, - 1, - 1,\\n\\t0, 3, 7, 0, 7, 10, 0, 10, 9, 6, 10, 7, - 1, - 1, - 1, - 1,\\n\\t7, 6, 10, 7, 10, 8, 8, 10, 9, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t6, 8, 4, 11, 8, 6, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t3, 6, 11, 3, 0, 6, 0, 4, 6, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t8, 6, 11, 8, 4, 6, 9, 0, 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t9, 4, 6, 9, 6, 3, 9, 3, 1, 11, 3, 6, - 1, - 1, - 1, - 1,\\n\\t6, 8, 4, 6, 11, 8, 2, 10, 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t1, 2, 10, 3, 0, 11, 0, 6, 11, 0, 4, 6, - 1, - 1, - 1, - 1,\\n\\t4, 11, 8, 4, 6, 11, 0, 2, 9, 2, 10, 9, - 1, - 1, - 1, - 1,\\n\\t10, 9, 3, 10, 3, 2, 9, 4, 3, 11, 3, 6, 4, 6, 3, - 1,\\n\\t8, 2, 3, 8, 4, 2, 4, 6, 2, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t0, 4, 2, 4, 6, 2, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t1, 9, 0, 2, 3, 4, 2, 4, 6, 4, 3, 8, - 1, - 1, - 1, - 1,\\n\\t1, 9, 4, 1, 4, 2, 2, 4, 6, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t8, 1, 3, 8, 6, 1, 8, 4, 6, 6, 10, 1, - 1, - 1, - 1, - 1,\\n\\t10, 1, 0, 10, 0, 6, 6, 0, 4, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t4, 6, 3, 4, 3, 8, 6, 10, 3, 0, 3, 9, 10, 9, 3, - 1,\\n\\t10, 9, 4, 6, 10, 4, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t4, 9, 5, 7, 6, 11, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t0, 8, 3, 4, 9, 5, 11, 7, 6, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t5, 0, 1, 5, 4, 0, 7, 6, 11, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t11, 7, 6, 8, 3, 4, 3, 5, 4, 3, 1, 5, - 1, - 1, - 1, - 1,\\n\\t9, 5, 4, 10, 1, 2, 7, 6, 11, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t6, 11, 7, 1, 2, 10, 0, 8, 3, 4, 9, 5, - 1, - 1, - 1, - 1,\\n\\t7, 6, 11, 5, 4, 10, 4, 2, 10, 4, 0, 2, - 1, - 1, - 1, - 1,\\n\\t3, 4, 8, 3, 5, 4, 3, 2, 5, 10, 5, 2, 11, 7, 6, - 1,\\n\\t7, 2, 3, 7, 6, 2, 5, 4, 9, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t9, 5, 4, 0, 8, 6, 0, 6, 2, 6, 8, 7, - 1, - 1, - 1, - 1,\\n\\t3, 6, 2, 3, 7, 6, 1, 5, 0, 5, 4, 0, - 1, - 1, - 1, - 1,\\n\\t6, 2, 8, 6, 8, 7, 2, 1, 8, 4, 8, 5, 1, 5, 8, - 1,\\n\\t9, 5, 4, 10, 1, 6, 1, 7, 6, 1, 3, 7, - 1, - 1, - 1, - 1,\\n\\t1, 6, 10, 1, 7, 6, 1, 0, 7, 8, 7, 0, 9, 5, 4, - 1,\\n\\t4, 0, 10, 4, 10, 5, 0, 3, 10, 6, 10, 7, 3, 7, 10, - 1,\\n\\t7, 6, 10, 7, 10, 8, 5, 4, 10, 4, 8, 10, - 1, - 1, - 1, - 1,\\n\\t6, 9, 5, 6, 11, 9, 11, 8, 9, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t3, 6, 11, 0, 6, 3, 0, 5, 6, 0, 9, 5, - 1, - 1, - 1, - 1,\\n\\t0, 11, 8, 0, 5, 11, 0, 1, 5, 5, 6, 11, - 1, - 1, - 1, - 1,\\n\\t6, 11, 3, 6, 3, 5, 5, 3, 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t1, 2, 10, 9, 5, 11, 9, 11, 8, 11, 5, 6, - 1, - 1, - 1, - 1,\\n\\t0, 11, 3, 0, 6, 11, 0, 9, 6, 5, 6, 9, 1, 2, 10, - 1,\\n\\t11, 8, 5, 11, 5, 6, 8, 0, 5, 10, 5, 2, 0, 2, 5, - 1,\\n\\t6, 11, 3, 6, 3, 5, 2, 10, 3, 10, 5, 3, - 1, - 1, - 1, - 1,\\n\\t5, 8, 9, 5, 2, 8, 5, 6, 2, 3, 8, 2, - 1, - 1, - 1, - 1,\\n\\t9, 5, 6, 9, 6, 0, 0, 6, 2, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t1, 5, 8, 1, 8, 0, 5, 6, 8, 3, 8, 2, 6, 2, 8, - 1,\\n\\t1, 5, 6, 2, 1, 6, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t1, 3, 6, 1, 6, 10, 3, 8, 6, 5, 6, 9, 8, 9, 6, - 1,\\n\\t10, 1, 0, 10, 0, 6, 9, 5, 0, 5, 6, 0, - 1, - 1, - 1, - 1,\\n\\t0, 3, 8, 5, 6, 10, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t10, 5, 6, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t11, 5, 10, 7, 5, 11, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t11, 5, 10, 11, 7, 5, 8, 3, 0, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t5, 11, 7, 5, 10, 11, 1, 9, 0, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t10, 7, 5, 10, 11, 7, 9, 8, 1, 8, 3, 1, - 1, - 1, - 1, - 1,\\n\\t11, 1, 2, 11, 7, 1, 7, 5, 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t0, 8, 3, 1, 2, 7, 1, 7, 5, 7, 2, 11, - 1, - 1, - 1, - 1,\\n\\t9, 7, 5, 9, 2, 7, 9, 0, 2, 2, 11, 7, - 1, - 1, - 1, - 1,\\n\\t7, 5, 2, 7, 2, 11, 5, 9, 2, 3, 2, 8, 9, 8, 2, - 1,\\n\\t2, 5, 10, 2, 3, 5, 3, 7, 5, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t8, 2, 0, 8, 5, 2, 8, 7, 5, 10, 2, 5, - 1, - 1, - 1, - 1,\\n\\t9, 0, 1, 5, 10, 3, 5, 3, 7, 3, 10, 2, - 1, - 1, - 1, - 1,\\n\\t9, 8, 2, 9, 2, 1, 8, 7, 2, 10, 2, 5, 7, 5, 2, - 1,\\n\\t1, 3, 5, 3, 7, 5, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t0, 8, 7, 0, 7, 1, 1, 7, 5, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t9, 0, 3, 9, 3, 5, 5, 3, 7, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t9, 8, 7, 5, 9, 7, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t5, 8, 4, 5, 10, 8, 10, 11, 8, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t5, 0, 4, 5, 11, 0, 5, 10, 11, 11, 3, 0, - 1, - 1, - 1, - 1,\\n\\t0, 1, 9, 8, 4, 10, 8, 10, 11, 10, 4, 5, - 1, - 1, - 1, - 1,\\n\\t10, 11, 4, 10, 4, 5, 11, 3, 4, 9, 4, 1, 3, 1, 4, - 1,\\n\\t2, 5, 1, 2, 8, 5, 2, 11, 8, 4, 5, 8, - 1, - 1, - 1, - 1,\\n\\t0, 4, 11, 0, 11, 3, 4, 5, 11, 2, 11, 1, 5, 1, 11, - 1,\\n\\t0, 2, 5, 0, 5, 9, 2, 11, 5, 4, 5, 8, 11, 8, 5, - 1,\\n\\t9, 4, 5, 2, 11, 3, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t2, 5, 10, 3, 5, 2, 3, 4, 5, 3, 8, 4, - 1, - 1, - 1, - 1,\\n\\t5, 10, 2, 5, 2, 4, 4, 2, 0, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t3, 10, 2, 3, 5, 10, 3, 8, 5, 4, 5, 8, 0, 1, 9, - 1,\\n\\t5, 10, 2, 5, 2, 4, 1, 9, 2, 9, 4, 2, - 1, - 1, - 1, - 1,\\n\\t8, 4, 5, 8, 5, 3, 3, 5, 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t0, 4, 5, 1, 0, 5, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t8, 4, 5, 8, 5, 3, 9, 0, 5, 0, 3, 5, - 1, - 1, - 1, - 1,\\n\\t9, 4, 5, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t4, 11, 7, 4, 9, 11, 9, 10, 11, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t0, 8, 3, 4, 9, 7, 9, 11, 7, 9, 10, 11, - 1, - 1, - 1, - 1,\\n\\t1, 10, 11, 1, 11, 4, 1, 4, 0, 7, 4, 11, - 1, - 1, - 1, - 1,\\n\\t3, 1, 4, 3, 4, 8, 1, 10, 4, 7, 4, 11, 10, 11, 4, - 1,\\n\\t4, 11, 7, 9, 11, 4, 9, 2, 11, 9, 1, 2, - 1, - 1, - 1, - 1,\\n\\t9, 7, 4, 9, 11, 7, 9, 1, 11, 2, 11, 1, 0, 8, 3, - 1,\\n\\t11, 7, 4, 11, 4, 2, 2, 4, 0, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t11, 7, 4, 11, 4, 2, 8, 3, 4, 3, 2, 4, - 1, - 1, - 1, - 1,\\n\\t2, 9, 10, 2, 7, 9, 2, 3, 7, 7, 4, 9, - 1, - 1, - 1, - 1,\\n\\t9, 10, 7, 9, 7, 4, 10, 2, 7, 8, 7, 0, 2, 0, 7, - 1,\\n\\t3, 7, 10, 3, 10, 2, 7, 4, 10, 1, 10, 0, 4, 0, 10, - 1,\\n\\t1, 10, 2, 8, 7, 4, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t4, 9, 1, 4, 1, 7, 7, 1, 3, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t4, 9, 1, 4, 1, 7, 0, 8, 1, 8, 7, 1, - 1, - 1, - 1, - 1,\\n\\t4, 0, 3, 7, 4, 3, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t4, 8, 7, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t9, 10, 8, 10, 11, 8, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t3, 0, 9, 3, 9, 11, 11, 9, 10, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t0, 1, 10, 0, 10, 8, 8, 10, 11, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t3, 1, 10, 11, 3, 10, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t1, 2, 11, 1, 11, 9, 9, 11, 8, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t3, 0, 9, 3, 9, 11, 1, 2, 9, 2, 11, 9, - 1, - 1, - 1, - 1,\\n\\t0, 2, 11, 8, 0, 11, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t3, 2, 11, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t2, 3, 8, 2, 8, 10, 10, 8, 9, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t9, 10, 2, 0, 9, 2, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t2, 3, 8, 2, 8, 10, 0, 1, 8, 1, 10, 8, - 1, - 1, - 1, - 1,\\n\\t1, 10, 2, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t1, 3, 8, 9, 1, 8, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t0, 9, 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t0, 3, 8, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\\n\\t- 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1 ] );\\n\\n};\",\"module.exports = function( THREE ){\\n\\n\\t/**\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t */\\n\\n\\tTHREE.MaskPass = function ( scene, camera ) {\\n\\n\\t\\tthis.scene = scene;\\n\\t\\tthis.camera = camera;\\n\\n\\t\\tthis.enabled = true;\\n\\t\\tthis.clear = true;\\n\\t\\tthis.needsSwap = false;\\n\\n\\t\\tthis.inverse = false;\\n\\n\\t};\\n\\n\\tTHREE.MaskPass.prototype = {\\n\\n\\t\\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\\n\\n\\t\\t\\tvar context = renderer.context;\\n\\n\\t\\t\\t// don't update color or depth\\n\\n\\t\\t\\tcontext.colorMask( false, false, false, false );\\n\\t\\t\\tcontext.depthMask( false );\\n\\n\\t\\t\\t// set up stencil\\n\\n\\t\\t\\tvar writeValue, clearValue;\\n\\n\\t\\t\\tif ( this.inverse ) {\\n\\n\\t\\t\\t\\twriteValue = 0;\\n\\t\\t\\t\\tclearValue = 1;\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\twriteValue = 1;\\n\\t\\t\\t\\tclearValue = 0;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tcontext.enable( context.STENCIL_TEST );\\n\\t\\t\\tcontext.stencilOp( context.REPLACE, context.REPLACE, context.REPLACE );\\n\\t\\t\\tcontext.stencilFunc( context.ALWAYS, writeValue, 0xffffffff );\\n\\t\\t\\tcontext.clearStencil( clearValue );\\n\\n\\t\\t\\t// draw into the stencil buffer\\n\\n\\t\\t\\trenderer.render( this.scene, this.camera, readBuffer, this.clear );\\n\\t\\t\\trenderer.render( this.scene, this.camera, writeBuffer, this.clear );\\n\\n\\t\\t\\t// re-enable update of color and depth\\n\\n\\t\\t\\tcontext.colorMask( true, true, true, true );\\n\\t\\t\\tcontext.depthMask( true );\\n\\n\\t\\t\\t// only render where stencil is set to 1\\n\\n\\t\\t\\tcontext.stencilFunc( context.EQUAL, 1, 0xffffffff );  // draw if == 1\\n\\t\\t\\tcontext.stencilOp( context.KEEP, context.KEEP, context.KEEP );\\n\\n\\t\\t}\\n\\n\\t};\\n\\n\\n\\tTHREE.ClearMaskPass = function () {\\n\\n\\t\\tthis.enabled = true;\\n\\n\\t};\\n\\n\\tTHREE.ClearMaskPass.prototype = {\\n\\n\\t\\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\\n\\n\\t\\t\\tvar context = renderer.context;\\n\\n\\t\\t\\tcontext.disable( context.STENCIL_TEST );\\n\\n\\t\\t}\\n\\n\\t};\\n\\n};\\n\",\"module.exports = function( THREE ){\\n\\t/**\\n\\t * @author felixturner / http://airtight.cc/\\n\\t *\\n\\t * Mirror Shader\\n\\t * Copies half the input to the other half\\n\\t *\\n\\t * side: side of input to mirror (0 = left, 1 = right, 2 = top, 3 = bottom)\\n\\t */\\n\\n\\tTHREE.MirrorShader = {\\n\\n\\t\\tuniforms: {\\n\\n\\t\\t\\t\\\"tDiffuse\\\": { type: \\\"t\\\", value: null },\\n\\t\\t\\t\\\"side\\\":     { type: \\\"i\\\", value: 1 }\\n\\n\\t\\t},\\n\\n\\t\\tvertexShader: [\\n\\n\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\n\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t\\\"vUv = uv;\\\",\\n\\t\\t\\t\\t\\\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\\",\\n\\n\\t\\t\\t\\\"}\\\"\\n\\n\\t\\t].join( \\\"\\\\n\\\" ),\\n\\n\\t\\tfragmentShader: [\\n\\n\\t\\t\\t\\\"uniform sampler2D tDiffuse;\\\",\\n\\t\\t\\t\\\"uniform int side;\\\",\\n\\t\\t\\t\\n\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\n\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t\\\"vec2 p = vUv;\\\",\\n\\t\\t\\t\\t\\\"if (side == 0){\\\",\\n\\t\\t\\t\\t\\t\\\"if (p.x > 0.5) p.x = 1.0 - p.x;\\\",\\n\\t\\t\\t\\t\\\"}else if (side == 1){\\\",\\n\\t\\t\\t\\t\\t\\\"if (p.x < 0.5) p.x = 1.0 - p.x;\\\",\\n\\t\\t\\t\\t\\\"}else if (side == 2){\\\",\\n\\t\\t\\t\\t\\t\\\"if (p.y < 0.5) p.y = 1.0 - p.y;\\\",\\n\\t\\t\\t\\t\\\"}else if (side == 3){\\\",\\n\\t\\t\\t\\t\\t\\\"if (p.y > 0.5) p.y = 1.0 - p.y;\\\",\\n\\t\\t\\t\\t\\\"} \\\",\\n\\t\\t\\t\\t\\\"vec4 color = texture2D(tDiffuse, p);\\\",\\n\\t\\t\\t\\t\\\"gl_FragColor = color;\\\",\\n\\n\\t\\t\\t\\\"}\\\"\\n\\n\\t\\t].join( \\\"\\\\n\\\" )\\n\\n\\t};\\n\\n}\\n\",\"module.exports = function( THREE ){\\n\\t/**\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t *\\n\\t * Normal map shader\\n\\t * - compute normals from heightmap\\n\\t */\\n\\n\\tTHREE.NormalMapShader = {\\n\\n\\t\\tuniforms: {\\n\\n\\t\\t\\t\\\"heightMap\\\":  { type: \\\"t\\\", value: null },\\n\\t\\t\\t\\\"resolution\\\": { type: \\\"v2\\\", value: new THREE.Vector2( 512, 512 ) },\\n\\t\\t\\t\\\"scale\\\":      { type: \\\"v2\\\", value: new THREE.Vector2( 1, 1 ) },\\n\\t\\t\\t\\\"height\\\":     { type: \\\"f\\\", value: 0.05 }\\n\\n\\t\\t},\\n\\n\\t\\tvertexShader: [\\n\\n\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\n\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t\\\"vUv = uv;\\\",\\n\\t\\t\\t\\t\\\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\\",\\n\\n\\t\\t\\t\\\"}\\\"\\n\\n\\t\\t].join( \\\"\\\\n\\\" ),\\n\\n\\t\\tfragmentShader: [\\n\\n\\t\\t\\t\\\"uniform float height;\\\",\\n\\t\\t\\t\\\"uniform vec2 resolution;\\\",\\n\\t\\t\\t\\\"uniform sampler2D heightMap;\\\",\\n\\n\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\n\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t\\\"float val = texture2D( heightMap, vUv ).x;\\\",\\n\\n\\t\\t\\t\\t\\\"float valU = texture2D( heightMap, vUv + vec2( 1.0 / resolution.x, 0.0 ) ).x;\\\",\\n\\t\\t\\t\\t\\\"float valV = texture2D( heightMap, vUv + vec2( 0.0, 1.0 / resolution.y ) ).x;\\\",\\n\\n\\t\\t\\t\\t\\\"gl_FragColor = vec4( ( 0.5 * normalize( vec3( val - valU, val - valV, height  ) ) + 0.5 ), 1.0 );\\\",\\n\\n\\t\\t\\t\\\"}\\\"\\n\\n\\t\\t].join( \\\"\\\\n\\\" )\\n\\n\\t};\\n\\n}\\n\",\"module.exports = function( THREE ){\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t */\\n\\n\\tTHREE.OBJLoader = function ( manager ) {\\n\\n\\t\\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\\n\\n\\t\\tthis.materials = null;\\n\\n\\t};\\n\\n\\tTHREE.OBJLoader.prototype = {\\n\\n\\t\\tconstructor: THREE.OBJLoader,\\n\\n\\t\\tload: function ( url, onLoad, onProgress, onError ) {\\n\\n\\t\\t\\tvar scope = this;\\n\\n\\t\\t\\tvar loader = new THREE.XHRLoader( scope.manager );\\n\\t\\t\\tloader.setPath( this.path );\\n\\t\\t\\tloader.load( url, function ( text ) {\\n\\n\\t\\t\\t\\tonLoad( scope.parse( text ) );\\n\\n\\t\\t\\t}, onProgress, onError );\\n\\n\\t\\t},\\n\\n\\t\\tsetPath: function ( value ) {\\n\\n\\t\\t\\tthis.path = value;\\n\\n\\t\\t},\\n\\n\\t\\tsetMaterials: function ( materials ) {\\n\\n\\t\\t\\tthis.materials = materials;\\n\\n\\t\\t},\\n\\n\\t\\tparse: function ( text ) {\\n\\n\\t\\t\\tconsole.time( 'OBJLoader' );\\n\\n\\t\\t\\tvar objects = [];\\n\\t\\t\\tvar object;\\n\\t\\t\\tvar foundObjects = false;\\n\\t\\t\\tvar vertices = [];\\n\\t\\t\\tvar normals = [];\\n\\t\\t\\tvar uvs = [];\\n\\n\\t\\t\\tfunction addObject( name ) {\\n\\n\\t\\t\\t\\tvar geometry = {\\n\\t\\t\\t\\t\\tvertices: [],\\n\\t\\t\\t\\t\\tnormals: [],\\n\\t\\t\\t\\t\\tuvs: []\\n\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\tvar material = {\\n\\t\\t\\t\\t\\tname: '',\\n\\t\\t\\t\\t\\tsmooth: true\\n\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\tobject = {\\n\\t\\t\\t\\t\\tname: name,\\n\\t\\t\\t\\t\\tgeometry: geometry,\\n\\t\\t\\t\\t\\tmaterial: material\\n\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\tobjects.push( object );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tfunction parseVertexIndex( value ) {\\n\\n\\t\\t\\t\\tvar index = parseInt( value );\\n\\n\\t\\t\\t\\treturn ( index >= 0 ? index - 1 : index + vertices.length / 3 ) * 3;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tfunction parseNormalIndex( value ) {\\n\\n\\t\\t\\t\\tvar index = parseInt( value );\\n\\n\\t\\t\\t\\treturn ( index >= 0 ? index - 1 : index + normals.length / 3 ) * 3;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tfunction parseUVIndex( value ) {\\n\\n\\t\\t\\t\\tvar index = parseInt( value );\\n\\n\\t\\t\\t\\treturn ( index >= 0 ? index - 1 : index + uvs.length / 2 ) * 2;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tfunction addVertex( a, b, c ) {\\n\\n\\t\\t\\t\\tobject.geometry.vertices.push(\\n\\t\\t\\t\\t\\tvertices[ a ], vertices[ a + 1 ], vertices[ a + 2 ],\\n\\t\\t\\t\\t\\tvertices[ b ], vertices[ b + 1 ], vertices[ b + 2 ],\\n\\t\\t\\t\\t\\tvertices[ c ], vertices[ c + 1 ], vertices[ c + 2 ]\\n\\t\\t\\t\\t);\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tfunction addNormal( a, b, c ) {\\n\\n\\t\\t\\t\\tobject.geometry.normals.push(\\n\\t\\t\\t\\t\\tnormals[ a ], normals[ a + 1 ], normals[ a + 2 ],\\n\\t\\t\\t\\t\\tnormals[ b ], normals[ b + 1 ], normals[ b + 2 ],\\n\\t\\t\\t\\t\\tnormals[ c ], normals[ c + 1 ], normals[ c + 2 ]\\n\\t\\t\\t\\t);\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tfunction addUV( a, b, c ) {\\n\\n\\t\\t\\t\\tobject.geometry.uvs.push(\\n\\t\\t\\t\\t\\tuvs[ a ], uvs[ a + 1 ],\\n\\t\\t\\t\\t\\tuvs[ b ], uvs[ b + 1 ],\\n\\t\\t\\t\\t\\tuvs[ c ], uvs[ c + 1 ]\\n\\t\\t\\t\\t);\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tfunction addFace( a, b, c, d,  ua, ub, uc, ud, na, nb, nc, nd ) {\\n\\n\\t\\t\\t\\tvar ia = parseVertexIndex( a );\\n\\t\\t\\t\\tvar ib = parseVertexIndex( b );\\n\\t\\t\\t\\tvar ic = parseVertexIndex( c );\\n\\t\\t\\t\\tvar id;\\n\\n\\t\\t\\t\\tif ( d === undefined ) {\\n\\n\\t\\t\\t\\t\\taddVertex( ia, ib, ic );\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\tid = parseVertexIndex( d );\\n\\n\\t\\t\\t\\t\\taddVertex( ia, ib, id );\\n\\t\\t\\t\\t\\taddVertex( ib, ic, id );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( ua !== undefined ) {\\n\\n\\t\\t\\t\\t\\tia = parseUVIndex( ua );\\n\\t\\t\\t\\t\\tib = parseUVIndex( ub );\\n\\t\\t\\t\\t\\tic = parseUVIndex( uc );\\n\\n\\t\\t\\t\\t\\tif ( d === undefined ) {\\n\\n\\t\\t\\t\\t\\t\\taddUV( ia, ib, ic );\\n\\n\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\tid = parseUVIndex( ud );\\n\\n\\t\\t\\t\\t\\t\\taddUV( ia, ib, id );\\n\\t\\t\\t\\t\\t\\taddUV( ib, ic, id );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( na !== undefined ) {\\n\\n\\t\\t\\t\\t\\tia = parseNormalIndex( na );\\n\\t\\t\\t\\t\\tib = parseNormalIndex( nb );\\n\\t\\t\\t\\t\\tic = parseNormalIndex( nc );\\n\\n\\t\\t\\t\\t\\tif ( d === undefined ) {\\n\\n\\t\\t\\t\\t\\t\\taddNormal( ia, ib, ic );\\n\\n\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\tid = parseNormalIndex( nd );\\n\\n\\t\\t\\t\\t\\t\\taddNormal( ia, ib, id );\\n\\t\\t\\t\\t\\t\\taddNormal( ib, ic, id );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\taddObject( '' );\\n\\n\\t\\t\\t// v float float float\\n\\t\\t\\tvar vertex_pattern = /^v\\\\s+([\\\\d|\\\\.|\\\\+|\\\\-|e|E]+)\\\\s+([\\\\d|\\\\.|\\\\+|\\\\-|e|E]+)\\\\s+([\\\\d|\\\\.|\\\\+|\\\\-|e|E]+)/;\\n\\n\\t\\t\\t// vn float float float\\n\\t\\t\\tvar normal_pattern = /^vn\\\\s+([\\\\d|\\\\.|\\\\+|\\\\-|e|E]+)\\\\s+([\\\\d|\\\\.|\\\\+|\\\\-|e|E]+)\\\\s+([\\\\d|\\\\.|\\\\+|\\\\-|e|E]+)/;\\n\\n\\t\\t\\t// vt float float\\n\\t\\t\\tvar uv_pattern = /^vt\\\\s+([\\\\d|\\\\.|\\\\+|\\\\-|e|E]+)\\\\s+([\\\\d|\\\\.|\\\\+|\\\\-|e|E]+)/;\\n\\n\\t\\t\\t// f vertex vertex vertex ...\\n\\t\\t\\tvar face_pattern1 = /^f\\\\s+(-?\\\\d+)\\\\s+(-?\\\\d+)\\\\s+(-?\\\\d+)(?:\\\\s+(-?\\\\d+))?/;\\n\\n\\t\\t\\t// f vertex/uv vertex/uv vertex/uv ...\\n\\t\\t\\tvar face_pattern2 = /^f\\\\s+((-?\\\\d+)\\\\/(-?\\\\d+))\\\\s+((-?\\\\d+)\\\\/(-?\\\\d+))\\\\s+((-?\\\\d+)\\\\/(-?\\\\d+))(?:\\\\s+((-?\\\\d+)\\\\/(-?\\\\d+)))?/;\\n\\n\\t\\t\\t// f vertex/uv/normal vertex/uv/normal vertex/uv/normal ...\\n\\t\\t\\tvar face_pattern3 = /^f\\\\s+((-?\\\\d+)\\\\/(-?\\\\d+)\\\\/(-?\\\\d+))\\\\s+((-?\\\\d+)\\\\/(-?\\\\d+)\\\\/(-?\\\\d+))\\\\s+((-?\\\\d+)\\\\/(-?\\\\d+)\\\\/(-?\\\\d+))(?:\\\\s+((-?\\\\d+)\\\\/(-?\\\\d+)\\\\/(-?\\\\d+)))?/;\\n\\n\\t\\t\\t// f vertex//normal vertex//normal vertex//normal ...\\n\\t\\t\\tvar face_pattern4 = /^f\\\\s+((-?\\\\d+)\\\\/\\\\/(-?\\\\d+))\\\\s+((-?\\\\d+)\\\\/\\\\/(-?\\\\d+))\\\\s+((-?\\\\d+)\\\\/\\\\/(-?\\\\d+))(?:\\\\s+((-?\\\\d+)\\\\/\\\\/(-?\\\\d+)))?/;\\n\\n\\t\\t\\tvar object_pattern = /^[og]\\\\s+(.+)/;\\n\\n\\t\\t\\tvar smoothing_pattern = /^s\\\\s+(\\\\d+|on|off)/;\\n\\n\\t\\t\\t//\\n\\n\\t\\t\\tvar lines = text.split( '\\\\n' );\\n\\n\\t\\t\\tfor ( var i = 0; i < lines.length; i ++ ) {\\n\\n\\t\\t\\t\\tvar line = lines[ i ];\\n\\t\\t\\t\\tline = line.trim();\\n\\n\\t\\t\\t\\tvar result;\\n\\n\\t\\t\\t\\tif ( line.length === 0 || line.charAt( 0 ) === '#' ) {\\n\\n\\t\\t\\t\\t\\tcontinue;\\n\\n\\t\\t\\t\\t} else if ( ( result = vertex_pattern.exec( line ) ) !== null ) {\\n\\n\\t\\t\\t\\t\\t// [\\\"v 1.0 2.0 3.0\\\", \\\"1.0\\\", \\\"2.0\\\", \\\"3.0\\\"]\\n\\n\\t\\t\\t\\t\\tvertices.push(\\n\\t\\t\\t\\t\\t\\tparseFloat( result[ 1 ] ),\\n\\t\\t\\t\\t\\t\\tparseFloat( result[ 2 ] ),\\n\\t\\t\\t\\t\\t\\tparseFloat( result[ 3 ] )\\n\\t\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\t} else if ( ( result = normal_pattern.exec( line ) ) !== null ) {\\n\\n\\t\\t\\t\\t\\t// [\\\"vn 1.0 2.0 3.0\\\", \\\"1.0\\\", \\\"2.0\\\", \\\"3.0\\\"]\\n\\n\\t\\t\\t\\t\\tnormals.push(\\n\\t\\t\\t\\t\\t\\tparseFloat( result[ 1 ] ),\\n\\t\\t\\t\\t\\t\\tparseFloat( result[ 2 ] ),\\n\\t\\t\\t\\t\\t\\tparseFloat( result[ 3 ] )\\n\\t\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\t} else if ( ( result = uv_pattern.exec( line ) ) !== null ) {\\n\\n\\t\\t\\t\\t\\t// [\\\"vt 0.1 0.2\\\", \\\"0.1\\\", \\\"0.2\\\"]\\n\\n\\t\\t\\t\\t\\tuvs.push(\\n\\t\\t\\t\\t\\t\\tparseFloat( result[ 1 ] ),\\n\\t\\t\\t\\t\\t\\tparseFloat( result[ 2 ] )\\n\\t\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\t} else if ( ( result = face_pattern1.exec( line ) ) !== null ) {\\n\\n\\t\\t\\t\\t\\t// [\\\"f 1 2 3\\\", \\\"1\\\", \\\"2\\\", \\\"3\\\", undefined]\\n\\n\\t\\t\\t\\t\\taddFace(\\n\\t\\t\\t\\t\\t\\tresult[ 1 ], result[ 2 ], result[ 3 ], result[ 4 ]\\n\\t\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\t} else if ( ( result = face_pattern2.exec( line ) ) !== null ) {\\n\\n\\t\\t\\t\\t\\t// [\\\"f 1/1 2/2 3/3\\\", \\\" 1/1\\\", \\\"1\\\", \\\"1\\\", \\\" 2/2\\\", \\\"2\\\", \\\"2\\\", \\\" 3/3\\\", \\\"3\\\", \\\"3\\\", undefined, undefined, undefined]\\n\\n\\t\\t\\t\\t\\taddFace(\\n\\t\\t\\t\\t\\t\\tresult[ 2 ], result[ 5 ], result[ 8 ], result[ 11 ],\\n\\t\\t\\t\\t\\t\\tresult[ 3 ], result[ 6 ], result[ 9 ], result[ 12 ]\\n\\t\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\t} else if ( ( result = face_pattern3.exec( line ) ) !== null ) {\\n\\n\\t\\t\\t\\t\\t// [\\\"f 1/1/1 2/2/2 3/3/3\\\", \\\" 1/1/1\\\", \\\"1\\\", \\\"1\\\", \\\"1\\\", \\\" 2/2/2\\\", \\\"2\\\", \\\"2\\\", \\\"2\\\", \\\" 3/3/3\\\", \\\"3\\\", \\\"3\\\", \\\"3\\\", undefined, undefined, undefined, undefined]\\n\\n\\t\\t\\t\\t\\taddFace(\\n\\t\\t\\t\\t\\t\\tresult[ 2 ], result[ 6 ], result[ 10 ], result[ 14 ],\\n\\t\\t\\t\\t\\t\\tresult[ 3 ], result[ 7 ], result[ 11 ], result[ 15 ],\\n\\t\\t\\t\\t\\t\\tresult[ 4 ], result[ 8 ], result[ 12 ], result[ 16 ]\\n\\t\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\t} else if ( ( result = face_pattern4.exec( line ) ) !== null ) {\\n\\n\\t\\t\\t\\t\\t// [\\\"f 1//1 2//2 3//3\\\", \\\" 1//1\\\", \\\"1\\\", \\\"1\\\", \\\" 2//2\\\", \\\"2\\\", \\\"2\\\", \\\" 3//3\\\", \\\"3\\\", \\\"3\\\", undefined, undefined, undefined]\\n\\n\\t\\t\\t\\t\\taddFace(\\n\\t\\t\\t\\t\\t\\tresult[ 2 ], result[ 5 ], result[ 8 ], result[ 11 ],\\n\\t\\t\\t\\t\\t\\tundefined, undefined, undefined, undefined,\\n\\t\\t\\t\\t\\t\\tresult[ 3 ], result[ 6 ], result[ 9 ], result[ 12 ]\\n\\t\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\t} else if ( ( result = object_pattern.exec( line ) ) !== null ) {\\n\\n\\t\\t\\t\\t\\t// o object_name\\n\\t\\t\\t\\t\\t// or\\n\\t\\t\\t\\t\\t// g group_name\\n\\n\\t\\t\\t\\t\\tvar name = result[ 1 ].trim();\\n\\n\\t\\t\\t\\t\\tif ( foundObjects === false ) {\\n\\n\\t\\t\\t\\t\\t\\tfoundObjects = true;\\n\\t\\t\\t\\t\\t\\tobject.name = name;\\n\\n\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\taddObject( name );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t} else if ( /^usemtl /.test( line ) ) {\\n\\n\\t\\t\\t\\t\\t// material\\n\\n\\t\\t\\t\\t\\tobject.material.name = line.substring( 7 ).trim();\\n\\n\\t\\t\\t\\t} else if ( /^mtllib /.test( line ) ) {\\n\\n\\t\\t\\t\\t\\t// mtl file\\n\\n\\t\\t\\t\\t} else if ( ( result = smoothing_pattern.exec( line ) ) !== null ) {\\n\\n\\t\\t\\t\\t\\t// smooth shading\\n\\n\\t\\t\\t\\t\\tobject.material.smooth = result[ 1 ] === \\\"1\\\" || result[ 1 ] === \\\"on\\\";\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\tthrow new Error( \\\"Unexpected line: \\\" + line );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar container = new THREE.Group();\\n\\n\\t\\t\\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\\n\\n\\t\\t\\t\\tobject = objects[ i ];\\n\\t\\t\\t\\tvar geometry = object.geometry;\\n\\n\\t\\t\\t\\tvar buffergeometry = new THREE.BufferGeometry();\\n\\n\\t\\t\\t\\tbuffergeometry.addAttribute( 'position', new THREE.BufferAttribute( new Float32Array( geometry.vertices ), 3 ) );\\n\\n\\t\\t\\t\\tif ( geometry.normals.length > 0 ) {\\n\\n\\t\\t\\t\\t\\tbuffergeometry.addAttribute( 'normal', new THREE.BufferAttribute( new Float32Array( geometry.normals ), 3 ) );\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\tbuffergeometry.computeVertexNormals();\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( geometry.uvs.length > 0 ) {\\n\\n\\t\\t\\t\\t\\tbuffergeometry.addAttribute( 'uv', new THREE.BufferAttribute( new Float32Array( geometry.uvs ), 2 ) );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tvar material;\\n\\n\\t\\t\\t\\tif ( this.materials !== null ) {\\n\\n\\t\\t\\t\\t\\tmaterial = this.materials.create( object.material.name );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( !material ) {\\n\\n\\t\\t\\t\\t\\tmaterial = new THREE.MeshPhongMaterial();\\n\\t\\t\\t\\t\\tmaterial.name = object.material.name;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tmaterial.shading = object.material.smooth ? THREE.SmoothShading : THREE.FlatShading;\\n\\n\\t\\t\\t\\tvar mesh = new THREE.Mesh( buffergeometry, material );\\n\\t\\t\\t\\tmesh.name = object.name;\\n\\n\\t\\t\\t\\tcontainer.add( mesh );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tconsole.timeEnd( 'OBJLoader' );\\n\\n\\t\\t\\treturn container;\\n\\n\\t\\t}\\n\\n\\t};\\n\\n};\",\"﻿module.exports = function( THREE ){\\n\\t// Author: Aleksandr Albert\\n\\t// Website: www.routter.co.tt\\n\\n\\t// Description: A deep water ocean shader set\\n\\t// based on an implementation of a Tessendorf Waves\\n\\t// originally presented by David Li ( www.david.li/waves )\\n\\n\\t// The general method is to apply shaders to simulation Framebuffers\\n\\t// and then sample these framebuffers when rendering the ocean mesh\\n\\n\\t// The set uses 7 shaders:\\n\\n\\t// -- Simulation shaders\\n\\t// [1] ocean_sim_vertex         -> Vertex shader used to set up a 2x2 simulation plane centered at (0,0)\\n\\t// [2] ocean_subtransform       -> Fragment shader used to subtransform the mesh (generates the displacement map)\\n\\t// [3] ocean_initial_spectrum   -> Fragment shader used to set intitial wave frequency at a texel coordinate\\n\\t// [4] ocean_phase              -> Fragment shader used to set wave phase at a texel coordinate\\n\\t// [5] ocean_spectrum           -> Fragment shader used to set current wave frequency at a texel coordinate\\n\\t// [6] ocean_normal             -> Fragment shader used to set face normals at a texel coordinate\\n\\n\\t// -- Rendering Shader\\n\\t// [7] ocean_main               -> Vertex and Fragment shader used to create the final render\\n\\n\\n\\tTHREE.ShaderLib[ 'ocean_sim_vertex' ] = {\\n\\t\\tvarying: {\\n\\t\\t\\t\\\"vUV\\\": { type: \\\"v2\\\" }\\n\\t\\t},\\n\\t\\tvertexShader: [\\n\\t\\t\\t'varying vec2 vUV;',\\n\\n\\t\\t\\t'void main (void) {',\\n\\t\\t\\t\\t'vUV = position.xy * 0.5 + 0.5;',\\n\\t\\t\\t\\t'gl_Position = vec4(position, 1.0 );',\\n\\t\\t\\t'}'\\n\\t\\t].join( '\\\\n' )\\n\\t};\\n\\tTHREE.ShaderLib[ 'ocean_subtransform' ] = {\\n\\t\\tuniforms: {\\n\\t\\t\\t\\\"u_input\\\": { type: \\\"t\\\", value: null },\\n\\t\\t\\t\\\"u_transformSize\\\": { type: \\\"f\\\", value: 512.0 },\\n\\t\\t\\t\\\"u_subtransformSize\\\": { type: \\\"f\\\", value: 250.0 }\\n\\t\\t},\\n\\t\\tvarying: {\\n\\t\\t\\t\\\"vUV\\\": { type: \\\"v2\\\" }\\n\\t\\t},\\n\\t\\tfragmentShader: [\\n\\t\\t\\t//GPU FFT using a Stockham formulation\\n\\t\\t\\t'precision highp float;',\\n\\n\\t\\t\\t'const float PI = 3.14159265359;',\\n\\n\\t\\t\\t'uniform sampler2D u_input;',\\n\\t\\t\\t'uniform float u_transformSize;',\\n\\t\\t\\t'uniform float u_subtransformSize;',\\n\\n\\t\\t\\t'varying vec2 vUV;',\\n\\n\\t\\t\\t'vec2 multiplyComplex (vec2 a, vec2 b) {',\\n\\t\\t\\t\\t'return vec2(a[0] * b[0] - a[1] * b[1], a[1] * b[0] + a[0] * b[1]);',\\n\\t\\t\\t'}',\\n\\n\\t\\t\\t'void main (void) {',\\n\\t\\t\\t\\t'#ifdef HORIZONTAL',\\n\\t\\t\\t\\t'float index = vUV.x * u_transformSize - 0.5;',\\n\\t\\t\\t\\t'#else',\\n\\t\\t\\t\\t'float index = vUV.y * u_transformSize - 0.5;',\\n\\t\\t\\t\\t'#endif',\\n\\n\\t\\t\\t\\t'float evenIndex = floor(index / u_subtransformSize) * (u_subtransformSize * 0.5) + mod(index, u_subtransformSize * 0.5);',\\n\\n\\t\\t\\t\\t//transform two complex sequences simultaneously\\n\\t\\t\\t\\t'#ifdef HORIZONTAL',\\n\\t\\t\\t\\t'vec4 even = texture2D(u_input, vec2(evenIndex + 0.5, gl_FragCoord.y) / u_transformSize).rgba;',\\n\\t\\t\\t\\t'vec4 odd = texture2D(u_input, vec2(evenIndex + u_transformSize * 0.5 + 0.5, gl_FragCoord.y) / u_transformSize).rgba;',\\n\\t\\t\\t\\t'#else',\\n\\t\\t\\t\\t'vec4 even = texture2D(u_input, vec2(gl_FragCoord.x, evenIndex + 0.5) / u_transformSize).rgba;',\\n\\t\\t\\t\\t'vec4 odd = texture2D(u_input, vec2(gl_FragCoord.x, evenIndex + u_transformSize * 0.5 + 0.5) / u_transformSize).rgba;',\\n\\t\\t\\t\\t'#endif',\\n\\n\\t\\t\\t\\t'float twiddleArgument = -2.0 * PI * (index / u_subtransformSize);',\\n\\t\\t\\t\\t'vec2 twiddle = vec2(cos(twiddleArgument), sin(twiddleArgument));',\\n\\n\\t\\t\\t\\t'vec2 outputA = even.xy + multiplyComplex(twiddle, odd.xy);',\\n\\t\\t\\t\\t'vec2 outputB = even.zw + multiplyComplex(twiddle, odd.zw);',\\n\\n\\t\\t\\t\\t'gl_FragColor = vec4(outputA, outputB);',\\n\\t\\t\\t'}'\\n\\t\\t].join( '\\\\n' )\\n\\t};\\n\\tTHREE.ShaderLib[ 'ocean_initial_spectrum' ] = {\\n\\t\\tuniforms: {\\n\\t\\t\\t\\\"u_wind\\\": { type: \\\"v2\\\", value: new THREE.Vector2( 10.0, 10.0 ) },\\n\\t\\t\\t\\\"u_resolution\\\": { type: \\\"f\\\", value: 512.0 },\\n\\t\\t\\t\\\"u_size\\\": { type: \\\"f\\\", value: 250.0 },\\n\\t\\t},\\n\\t\\tfragmentShader: [\\n\\t\\t\\t'precision highp float;',\\n\\n\\t\\t\\t'const float PI = 3.14159265359;',\\n\\t\\t\\t'const float G = 9.81;',\\n\\t\\t\\t'const float KM = 370.0;',\\n\\t\\t\\t'const float CM = 0.23;',\\n\\n\\t\\t\\t'uniform vec2 u_wind;',\\n\\t\\t\\t'uniform float u_resolution;',\\n\\t\\t\\t'uniform float u_size;',\\n\\n\\t\\t\\t'float square (float x) {',\\n\\t\\t\\t\\t'return x * x;',\\n\\t\\t\\t'}',\\n\\n\\t\\t\\t'float omega (float k) {',\\n\\t\\t\\t\\t'return sqrt(G * k * (1.0 + square(k / KM)));',\\n\\t\\t\\t'}',\\n\\n\\t\\t\\t'float tanh (float x) {',\\n\\t\\t\\t\\t'return (1.0 - exp(-2.0 * x)) / (1.0 + exp(-2.0 * x));',\\n\\t\\t\\t'}',\\n\\n\\t\\t\\t'void main (void) {',\\n\\t\\t\\t\\t'vec2 coordinates = gl_FragCoord.xy - 0.5;',\\n\\n\\t\\t\\t\\t'float n = (coordinates.x < u_resolution * 0.5) ? coordinates.x : coordinates.x - u_resolution;',\\n\\t\\t\\t\\t'float m = (coordinates.y < u_resolution * 0.5) ? coordinates.y : coordinates.y - u_resolution;',\\n\\n\\t\\t\\t\\t'vec2 K = (2.0 * PI * vec2(n, m)) / u_size;',\\n\\t\\t\\t\\t'float k = length(K);',\\n\\n\\t\\t\\t\\t'float l_wind = length(u_wind);',\\n\\n\\t\\t\\t\\t'float Omega = 0.84;',\\n\\t\\t\\t\\t'float kp = G * square(Omega / l_wind);',\\n\\n\\t\\t\\t\\t'float c = omega(k) / k;',\\n\\t\\t\\t\\t'float cp = omega(kp) / kp;',\\n\\n\\t\\t\\t\\t'float Lpm = exp(-1.25 * square(kp / k));',\\n\\t\\t\\t\\t'float gamma = 1.7;',\\n\\t\\t\\t\\t'float sigma = 0.08 * (1.0 + 4.0 * pow(Omega, -3.0));',\\n\\t\\t\\t\\t'float Gamma = exp(-square(sqrt(k / kp) - 1.0) / 2.0 * square(sigma));',\\n\\t\\t\\t\\t'float Jp = pow(gamma, Gamma);',\\n\\t\\t\\t\\t'float Fp = Lpm * Jp * exp(-Omega / sqrt(10.0) * (sqrt(k / kp) - 1.0));',\\n\\t\\t\\t\\t'float alphap = 0.006 * sqrt(Omega);',\\n\\t\\t\\t\\t'float Bl = 0.5 * alphap * cp / c * Fp;',\\n\\n\\t\\t\\t\\t'float z0 = 0.000037 * square(l_wind) / G * pow(l_wind / cp, 0.9);',\\n\\t\\t\\t\\t'float uStar = 0.41 * l_wind / log(10.0 / z0);',\\n\\t\\t\\t\\t'float alpham = 0.01 * ((uStar < CM) ? (1.0 + log(uStar / CM)) : (1.0 + 3.0 * log(uStar / CM)));',\\n\\t\\t\\t\\t'float Fm = exp(-0.25 * square(k / KM - 1.0));',\\n\\t\\t\\t\\t'float Bh = 0.5 * alpham * CM / c * Fm * Lpm;',\\n\\n\\t\\t\\t\\t'float a0 = log(2.0) / 4.0;',\\n\\t\\t\\t\\t'float am = 0.13 * uStar / CM;',\\n\\t\\t\\t\\t'float Delta = tanh(a0 + 4.0 * pow(c / cp, 2.5) + am * pow(CM / c, 2.5));',\\n\\n\\t\\t\\t\\t'float cosPhi = dot(normalize(u_wind), normalize(K));',\\n\\n\\t\\t\\t\\t'float S = (1.0 / (2.0 * PI)) * pow(k, -4.0) * (Bl + Bh) * (1.0 + Delta * (2.0 * cosPhi * cosPhi - 1.0));',\\n\\n\\t\\t\\t\\t'float dk = 2.0 * PI / u_size;',\\n\\t\\t\\t\\t'float h = sqrt(S / 2.0) * dk;',\\n\\n\\t\\t\\t\\t'if (K.x == 0.0 && K.y == 0.0) {',\\n\\t\\t\\t\\t\\t'h = 0.0;', //no DC term\\n\\t\\t\\t\\t'}',\\n\\t\\t\\t\\t'gl_FragColor = vec4(h, 0.0, 0.0, 0.0);',\\n\\t\\t\\t'}'\\n\\t\\t].join( '\\\\n' )\\n\\t};\\n\\tTHREE.ShaderLib[ 'ocean_phase' ] = {\\n\\t\\tuniforms: {\\n\\t\\t\\t\\\"u_phases\\\": { type: \\\"t\\\", value: null },\\n\\t\\t\\t\\\"u_deltaTime\\\": { type: \\\"f\\\", value: null },\\n\\t\\t\\t\\\"u_resolution\\\": { type: \\\"f\\\", value: null },\\n\\t\\t\\t\\\"u_size\\\": { type: \\\"f\\\", value: null },\\n\\t\\t},\\n\\t\\tvarying: {\\n\\t\\t\\t\\\"vUV\\\": { type: \\\"v2\\\" }\\n\\t\\t},\\n\\t\\tfragmentShader: [\\n\\t\\t\\t'precision highp float;',\\n\\n\\t\\t\\t'const float PI = 3.14159265359;',\\n\\t\\t\\t'const float G = 9.81;',\\n\\t\\t\\t'const float KM = 370.0;',\\n\\n\\t\\t\\t'varying vec2 vUV;',\\n\\n\\t\\t\\t'uniform sampler2D u_phases;',\\n\\t\\t\\t'uniform float u_deltaTime;',\\n\\t\\t\\t'uniform float u_resolution;',\\n\\t\\t\\t'uniform float u_size;',\\n\\n\\t\\t\\t'float omega (float k) {',\\n\\t\\t\\t\\t'return sqrt(G * k * (1.0 + k * k / KM * KM));',\\n\\t\\t\\t'}',\\n\\n\\t\\t\\t'void main (void) {',\\n\\t\\t\\t\\t'float deltaTime = 1.0 / 60.0;',\\n\\t\\t\\t\\t'vec2 coordinates = gl_FragCoord.xy - 0.5;',\\n\\t\\t\\t\\t'float n = (coordinates.x < u_resolution * 0.5) ? coordinates.x : coordinates.x - u_resolution;',\\n\\t\\t\\t\\t'float m = (coordinates.y < u_resolution * 0.5) ? coordinates.y : coordinates.y - u_resolution;',\\n\\t\\t\\t\\t'vec2 waveVector = (2.0 * PI * vec2(n, m)) / u_size;',\\n\\n\\t\\t\\t\\t'float phase = texture2D(u_phases, vUV).r;',\\n\\t\\t\\t\\t'float deltaPhase = omega(length(waveVector)) * u_deltaTime;',\\n\\t\\t\\t\\t'phase = mod(phase + deltaPhase, 2.0 * PI);',\\n\\n\\t\\t\\t\\t'gl_FragColor = vec4(phase, 0.0, 0.0, 0.0);',\\n\\t\\t\\t'}'\\n\\t\\t].join( '\\\\n' )\\n\\t};\\n\\tTHREE.ShaderLib[ 'ocean_spectrum' ] = {\\n\\t\\tuniforms: {\\n\\t\\t\\t\\\"u_size\\\": { type: \\\"f\\\", value: null },\\n\\t\\t\\t\\\"u_resolution\\\": { type: \\\"f\\\", value: null },\\n\\t\\t\\t\\\"u_choppiness\\\": { type: \\\"f\\\", value: null },\\n\\t\\t\\t\\\"u_phases\\\": { type: \\\"t\\\", value: null },\\n\\t\\t\\t\\\"u_initialSpectrum\\\": { type: \\\"t\\\", value: null },\\n\\t\\t},\\n\\t\\tvarying: {\\n\\t\\t\\t\\\"vUV\\\": { type: \\\"v2\\\" }\\n\\t\\t},\\n\\t\\tfragmentShader: [\\n\\t\\t\\t'precision highp float;',\\n\\n\\t\\t\\t'const float PI = 3.14159265359;',\\n\\t\\t\\t'const float G = 9.81;',\\n\\t\\t\\t'const float KM = 370.0;',\\n\\n\\t\\t\\t'varying vec2 vUV;',\\n\\n\\t\\t\\t'uniform float u_size;',\\n\\t\\t\\t'uniform float u_resolution;',\\n\\t\\t\\t'uniform float u_choppiness;',\\n\\t\\t\\t'uniform sampler2D u_phases;',\\n\\t\\t\\t'uniform sampler2D u_initialSpectrum;',\\n\\n\\t\\t\\t'vec2 multiplyComplex (vec2 a, vec2 b) {',\\n\\t\\t\\t\\t'return vec2(a[0] * b[0] - a[1] * b[1], a[1] * b[0] + a[0] * b[1]);',\\n\\t\\t\\t'}',\\n\\n\\t\\t\\t'vec2 multiplyByI (vec2 z) {',\\n\\t\\t\\t\\t'return vec2(-z[1], z[0]);',\\n\\t\\t\\t'}',\\n\\n\\t\\t\\t'float omega (float k) {',\\n\\t\\t\\t\\t'return sqrt(G * k * (1.0 + k * k / KM * KM));',\\n\\t\\t\\t'}',\\n\\n\\t\\t\\t'void main (void) {',\\n\\t\\t\\t\\t'vec2 coordinates = gl_FragCoord.xy - 0.5;',\\n\\t\\t\\t\\t'float n = (coordinates.x < u_resolution * 0.5) ? coordinates.x : coordinates.x - u_resolution;',\\n\\t\\t\\t\\t'float m = (coordinates.y < u_resolution * 0.5) ? coordinates.y : coordinates.y - u_resolution;',\\n\\t\\t\\t\\t'vec2 waveVector = (2.0 * PI * vec2(n, m)) / u_size;',\\n\\n\\t\\t\\t\\t'float phase = texture2D(u_phases, vUV).r;',\\n\\t\\t\\t\\t'vec2 phaseVector = vec2(cos(phase), sin(phase));',\\n\\n\\t\\t\\t\\t'vec2 h0 = texture2D(u_initialSpectrum, vUV).rg;',\\n\\t\\t\\t\\t'vec2 h0Star = texture2D(u_initialSpectrum, vec2(1.0 - vUV + 1.0 / u_resolution)).rg;',\\n\\t\\t\\t\\t'h0Star.y *= -1.0;',\\n\\n\\t\\t\\t\\t'vec2 h = multiplyComplex(h0, phaseVector) + multiplyComplex(h0Star, vec2(phaseVector.x, -phaseVector.y));',\\n\\n\\t\\t\\t\\t'vec2 hX = -multiplyByI(h * (waveVector.x / length(waveVector))) * u_choppiness;',\\n\\t\\t\\t\\t'vec2 hZ = -multiplyByI(h * (waveVector.y / length(waveVector))) * u_choppiness;',\\n\\n\\t\\t\\t\\t//no DC term\\n\\t\\t\\t\\t'if (waveVector.x == 0.0 && waveVector.y == 0.0) {',\\n\\t\\t\\t\\t\\t'h = vec2(0.0);',\\n\\t\\t\\t\\t\\t'hX = vec2(0.0);',\\n\\t\\t\\t\\t\\t'hZ = vec2(0.0);',\\n\\t\\t\\t\\t'}',\\n\\n\\t\\t\\t\\t'gl_FragColor = vec4(hX + multiplyByI(h), hZ);',\\n\\t\\t\\t'}'\\n\\t\\t].join( '\\\\n' )\\n\\t};\\n\\tTHREE.ShaderLib[ 'ocean_normals' ] = {\\n\\t\\tuniforms: {\\n\\t\\t\\t\\\"u_displacementMap\\\": { type: \\\"t\\\", value: null },\\n\\t\\t\\t\\\"u_resolution\\\": { type: \\\"f\\\", value: null },\\n\\t\\t\\t\\\"u_size\\\": { type: \\\"f\\\", value: null },\\n\\t\\t},\\n\\t\\tvarying: {\\n\\t\\t\\t\\\"vUV\\\": { type: \\\"v2\\\" }\\n\\t\\t},\\n\\t\\tfragmentShader: [\\n\\t\\t\\t'precision highp float;',\\n\\n\\t\\t\\t'varying vec2 vUV;',\\n\\n\\t\\t\\t'uniform sampler2D u_displacementMap;',\\n\\t\\t\\t'uniform float u_resolution;',\\n\\t\\t\\t'uniform float u_size;',\\n\\n\\t\\t\\t'void main (void) {',\\n\\t\\t\\t\\t'float texel = 1.0 / u_resolution;',\\n\\t\\t\\t\\t'float texelSize = u_size / u_resolution;',\\n\\n\\t\\t\\t\\t'vec3 center = texture2D(u_displacementMap, vUV).rgb;',\\n\\t\\t\\t\\t'vec3 right = vec3(texelSize, 0.0, 0.0) + texture2D(u_displacementMap, vUV + vec2(texel, 0.0)).rgb - center;',\\n\\t\\t\\t\\t'vec3 left = vec3(-texelSize, 0.0, 0.0) + texture2D(u_displacementMap, vUV + vec2(-texel, 0.0)).rgb - center;',\\n\\t\\t\\t\\t'vec3 top = vec3(0.0, 0.0, -texelSize) + texture2D(u_displacementMap, vUV + vec2(0.0, -texel)).rgb - center;',\\n\\t\\t\\t\\t'vec3 bottom = vec3(0.0, 0.0, texelSize) + texture2D(u_displacementMap, vUV + vec2(0.0, texel)).rgb - center;',\\n\\n\\t\\t\\t\\t'vec3 topRight = cross(right, top);',\\n\\t\\t\\t\\t'vec3 topLeft = cross(top, left);',\\n\\t\\t\\t\\t'vec3 bottomLeft = cross(left, bottom);',\\n\\t\\t\\t\\t'vec3 bottomRight = cross(bottom, right);',\\n\\n\\t\\t\\t\\t'gl_FragColor = vec4(normalize(topRight + topLeft + bottomLeft + bottomRight), 1.0);',\\n\\t\\t\\t'}'\\n\\t\\t].join( '\\\\n' )\\n\\t};\\n\\tTHREE.ShaderLib[ 'ocean_main' ] = {\\n\\t\\tuniforms: {\\n\\t\\t\\t\\\"u_displacementMap\\\": { type: \\\"t\\\", value: null },\\n\\t\\t\\t\\\"u_normalMap\\\": { type: \\\"t\\\", value: null },\\n\\t\\t\\t\\\"u_geometrySize\\\": { type: \\\"f\\\", value: null },\\n\\t\\t\\t\\\"u_size\\\": { type: \\\"f\\\", value: null },\\n\\t\\t\\t\\\"u_projectionMatrix\\\": { type: \\\"m4\\\", value: null },\\n\\t\\t\\t\\\"u_viewMatrix\\\": { type: \\\"m4\\\", value: null },\\n\\t\\t\\t\\\"u_cameraPosition\\\": { type: \\\"v3\\\", value: null },\\n\\t\\t\\t\\\"u_skyColor\\\": { type: \\\"v3\\\", value: null },\\n\\t\\t\\t\\\"u_oceanColor\\\": { type: \\\"v3\\\", value: null },\\n\\t\\t\\t\\\"u_sunDirection\\\": { type: \\\"v3\\\", value: null },\\n\\t\\t\\t\\\"u_exposure\\\": { type: \\\"f\\\", value: null },\\n\\t\\t},\\n\\t\\tvarying: {\\n\\t\\t\\t\\\"vPos\\\": { type: \\\"v3\\\" },\\n\\t\\t\\t\\\"vUV\\\": { type: \\\"v2\\\" }\\n\\t\\t},\\n\\t\\tvertexShader: [\\n\\t\\t\\t'precision highp float;',\\n\\n\\t\\t\\t'varying vec3 vPos;',\\n\\t\\t\\t'varying vec2 vUV;',\\n\\n\\t\\t\\t'uniform mat4 u_projectionMatrix;',\\n\\t\\t\\t'uniform mat4 u_viewMatrix;',\\n\\t\\t\\t'uniform float u_size;',\\n\\t\\t\\t'uniform float u_geometrySize;',\\n\\t\\t\\t'uniform sampler2D u_displacementMap;',\\n\\n\\t\\t\\t'void main (void) {',\\n\\t\\t\\t\\t'vec3 newPos = position + texture2D(u_displacementMap, uv).rgb * (u_geometrySize / u_size);',\\n\\t\\t\\t\\t'vPos = newPos;',\\n\\t\\t\\t\\t'vUV = uv;',\\n\\t\\t\\t\\t'gl_Position = u_projectionMatrix * u_viewMatrix * vec4(newPos, 1.0);',\\n\\t\\t\\t'}'\\n\\t\\t].join( '\\\\n' ),\\n\\t\\tfragmentShader: [\\n\\t\\t\\t'precision highp float;',\\n\\n\\t\\t\\t'varying vec3 vPos;',\\n\\t\\t\\t'varying vec2 vUV;',\\n\\n\\t\\t\\t'uniform sampler2D u_displacementMap;',\\n\\t\\t\\t'uniform sampler2D u_normalMap;',\\n\\t\\t\\t'uniform vec3 u_cameraPosition;',\\n\\t\\t\\t'uniform vec3 u_oceanColor;',\\n\\t\\t\\t'uniform vec3 u_skyColor;',\\n\\t\\t\\t'uniform vec3 u_sunDirection;',\\n\\t\\t\\t'uniform float u_exposure;',\\n\\n\\t\\t\\t'vec3 hdr (vec3 color, float exposure) {',\\n\\t\\t\\t\\t'return 1.0 - exp(-color * exposure);',\\n\\t\\t\\t'}',\\n\\n\\t\\t\\t'void main (void) {',\\n\\t\\t\\t\\t'vec3 normal = texture2D(u_normalMap, vUV).rgb;',\\n\\n\\t\\t\\t\\t'vec3 view = normalize(u_cameraPosition - vPos);',\\n\\t\\t\\t\\t'float fresnel = 0.02 + 0.98 * pow(1.0 - dot(normal, view), 5.0);',\\n\\t\\t\\t\\t'vec3 sky = fresnel * u_skyColor;',\\n\\n\\t\\t\\t\\t'float diffuse = clamp(dot(normal, normalize(u_sunDirection)), 0.0, 1.0);',\\n\\t\\t\\t\\t'vec3 water = (1.0 - fresnel) * u_oceanColor * u_skyColor * diffuse;',\\n\\n\\t\\t\\t\\t'vec3 color = sky + water;',\\n\\n\\t\\t\\t\\t'gl_FragColor = vec4(hdr(color, u_exposure), 1.0);',\\n\\t\\t\\t'}'\\n\\t\\t].join( '\\\\n' )\\n\\t};\\n\\n}\\n\",\"module.exports = function( THREE ){\\n\\n\\t/**\\n\\t * @author qiao / https://github.com/qiao\\n\\t * @author mrdoob / http://mrdoob.com\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t * @author WestLangley / http://github.com/WestLangley\\n\\t * @author erich666 / http://erichaines.com\\n\\t */\\n\\n\\t// This set of controls performs orbiting, dollying (zooming), and panning.\\n\\t// Unlike TrackballControls, it maintains the \\\"up\\\" direction object.up (+Y by default).\\n\\t//\\n\\t//    Orbit - left mouse / touch: one finger move\\n\\t//    Zoom - middle mouse, or mousewheel / touch: two finger spread or squish\\n\\t//    Pan - right mouse, or arrow keys / touch: three finter swipe\\n\\n\\tTHREE.OrbitControls = function ( object, domElement ) {\\n\\n\\t\\tthis.object = object;\\n\\n\\t\\tthis.domElement = ( domElement !== undefined ) ? domElement : document;\\n\\n\\t\\t// Set to false to disable this control\\n\\t\\tthis.enabled = true;\\n\\n\\t\\t// \\\"target\\\" sets the location of focus, where the object orbits around\\n\\t\\tthis.target = new THREE.Vector3();\\n\\n\\t\\t// How far you can dolly in and out ( PerspectiveCamera only )\\n\\t\\tthis.minDistance = 0;\\n\\t\\tthis.maxDistance = Infinity;\\n\\n\\t\\t// How far you can zoom in and out ( OrthographicCamera only )\\n\\t\\tthis.minZoom = 0;\\n\\t\\tthis.maxZoom = Infinity;\\n\\n\\t\\t// How far you can orbit vertically, upper and lower limits.\\n\\t\\t// Range is 0 to Math.PI radians.\\n\\t\\tthis.minPolarAngle = 0; // radians\\n\\t\\tthis.maxPolarAngle = Math.PI; // radians\\n\\n\\t\\t// How far you can orbit horizontally, upper and lower limits.\\n\\t\\t// If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\\n\\t\\tthis.minAzimuthAngle = - Infinity; // radians\\n\\t\\tthis.maxAzimuthAngle = Infinity; // radians\\n\\n\\t\\t// Set to true to enable damping (inertia)\\n\\t\\t// If damping is enabled, you must call controls.update() in your animation loop\\n\\t\\tthis.enableDamping = false;\\n\\t\\tthis.dampingFactor = 0.25;\\n\\n\\t\\t// This option actually enables dollying in and out; left as \\\"zoom\\\" for backwards compatibility.\\n\\t\\t// Set to false to disable zooming\\n\\t\\tthis.enableZoom = true;\\n\\t\\tthis.zoomSpeed = 1.0;\\n\\n\\t\\t// Set to false to disable rotating\\n\\t\\tthis.enableRotate = true;\\n\\t\\tthis.rotateSpeed = 1.0;\\n\\n\\t\\t// Set to false to disable panning\\n\\t\\tthis.enablePan = true;\\n\\t\\tthis.keyPanSpeed = 7.0;\\t// pixels moved per arrow key push\\n\\n\\t\\t// Set to true to automatically rotate around the target\\n\\t\\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\\n\\t\\tthis.autoRotate = false;\\n\\t\\tthis.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\\n\\n\\t\\t// Set to false to disable use of the keys\\n\\t\\tthis.enableKeys = true;\\n\\n\\t\\t// The four arrow keys\\n\\t\\tthis.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\\n\\n\\t\\t// Mouse buttons\\n\\t\\tthis.mouseButtons = { ORBIT: THREE.MOUSE.LEFT, ZOOM: THREE.MOUSE.MIDDLE, PAN: THREE.MOUSE.RIGHT };\\n\\n\\t\\t// for reset\\n\\t\\tthis.target0 = this.target.clone();\\n\\t\\tthis.position0 = this.object.position.clone();\\n\\t\\tthis.zoom0 = this.object.zoom;\\n\\n\\t\\t//\\n\\t\\t// public methods\\n\\t\\t//\\n\\n\\t\\tthis.getPolarAngle = function () {\\n\\n\\t\\t\\treturn spherical.phi;\\n\\n\\t\\t};\\n\\n\\t\\tthis.getAzimuthalAngle = function () {\\n\\n\\t\\t\\treturn spherical.theta;\\n\\n\\t\\t};\\n\\n\\t\\tthis.reset = function () {\\n\\n\\t\\t\\tscope.target.copy( scope.target0 );\\n\\t\\t\\tscope.object.position.copy( scope.position0 );\\n\\t\\t\\tscope.object.zoom = scope.zoom0;\\n\\n\\t\\t\\tscope.object.updateProjectionMatrix();\\n\\t\\t\\tscope.dispatchEvent( changeEvent );\\n\\n\\t\\t\\tscope.update();\\n\\n\\t\\t\\tstate = STATE.NONE;\\n\\n\\t\\t};\\n\\n\\t\\t// this method is exposed, but perhaps it would be better if we can make it private...\\n\\t\\tthis.update = function() {\\n\\n\\t\\t\\tvar offset = new THREE.Vector3();\\n\\n\\t\\t\\t// so camera.up is the orbit axis\\n\\t\\t\\tvar quat = new THREE.Quaternion().setFromUnitVectors( object.up, new THREE.Vector3( 0, 1, 0 ) );\\n\\t\\t\\tvar quatInverse = quat.clone().inverse();\\n\\n\\t\\t\\tvar lastPosition = new THREE.Vector3();\\n\\t\\t\\tvar lastQuaternion = new THREE.Quaternion();\\n\\n\\t\\t\\treturn function () {\\n\\n\\t\\t\\t\\tvar position = scope.object.position;\\n\\n\\t\\t\\t\\toffset.copy( position ).sub( scope.target );\\n\\n\\t\\t\\t\\t// rotate offset to \\\"y-axis-is-up\\\" space\\n\\t\\t\\t\\toffset.applyQuaternion( quat );\\n\\n\\t\\t\\t\\t// angle from z-axis around y-axis\\n\\t\\t\\t\\tspherical.setFromVector3( offset );\\n\\n\\t\\t\\t\\tif ( scope.autoRotate && state === STATE.NONE ) {\\n\\n\\t\\t\\t\\t\\trotateLeft( getAutoRotationAngle() );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tspherical.theta += sphericalDelta.theta;\\n\\t\\t\\t\\tspherical.phi += sphericalDelta.phi;\\n\\n\\t\\t\\t\\t// restrict theta to be between desired limits\\n\\t\\t\\t\\tspherical.theta = Math.max( scope.minAzimuthAngle, Math.min( scope.maxAzimuthAngle, spherical.theta ) );\\n\\n\\t\\t\\t\\t// restrict phi to be between desired limits\\n\\t\\t\\t\\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\\n\\n\\t\\t\\t\\tspherical.makeSafe();\\n\\n\\n\\t\\t\\t\\tspherical.radius *= scale;\\n\\n\\t\\t\\t\\t// restrict radius to be between desired limits\\n\\t\\t\\t\\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\\n\\n\\t\\t\\t\\t// move target to panned location\\n\\t\\t\\t\\tscope.target.add( panOffset );\\n\\n\\t\\t\\t\\toffset.setFromSpherical( spherical );\\n\\n\\t\\t\\t\\t// rotate offset back to \\\"camera-up-vector-is-up\\\" space\\n\\t\\t\\t\\toffset.applyQuaternion( quatInverse );\\n\\n\\t\\t\\t\\tposition.copy( scope.target ).add( offset );\\n\\n\\t\\t\\t\\tscope.object.lookAt( scope.target );\\n\\n\\t\\t\\t\\tif ( scope.enableDamping === true ) {\\n\\n\\t\\t\\t\\t\\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\\n\\t\\t\\t\\t\\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\tsphericalDelta.set( 0, 0, 0 );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tscale = 1;\\n\\t\\t\\t\\tpanOffset.set( 0, 0, 0 );\\n\\n\\t\\t\\t\\t// update condition is:\\n\\t\\t\\t\\t// min(camera displacement, camera rotation in radians)^2 > EPS\\n\\t\\t\\t\\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\\n\\n\\t\\t\\t\\tif ( zoomChanged ||\\n\\t\\t\\t\\t\\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\\n\\t\\t\\t\\t\\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\\n\\n\\t\\t\\t\\t\\tscope.dispatchEvent( changeEvent );\\n\\n\\t\\t\\t\\t\\tlastPosition.copy( scope.object.position );\\n\\t\\t\\t\\t\\tlastQuaternion.copy( scope.object.quaternion );\\n\\t\\t\\t\\t\\tzoomChanged = false;\\n\\n\\t\\t\\t\\t\\treturn true;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn false;\\n\\n\\t\\t\\t};\\n\\n\\t\\t}();\\n\\n\\t\\tthis.dispose = function() {\\n\\n\\t\\t\\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu, false );\\n\\t\\t\\tscope.domElement.removeEventListener( 'mousedown', onMouseDown, false );\\n\\t\\t\\tscope.domElement.removeEventListener( 'mousewheel', onMouseWheel, false );\\n\\t\\t\\tscope.domElement.removeEventListener( 'MozMousePixelScroll', onMouseWheel, false ); // firefox\\n\\n\\t\\t\\tscope.domElement.removeEventListener( 'touchstart', onTouchStart, false );\\n\\t\\t\\tscope.domElement.removeEventListener( 'touchend', onTouchEnd, false );\\n\\t\\t\\tscope.domElement.removeEventListener( 'touchmove', onTouchMove, false );\\n\\n\\t\\t\\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\\n\\t\\t\\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\\n\\t\\t\\tdocument.removeEventListener( 'mouseout', onMouseUp, false );\\n\\n\\t\\t\\twindow.removeEventListener( 'keydown', onKeyDown, false );\\n\\n\\t\\t\\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\\n\\n\\t\\t};\\n\\n\\t\\t//\\n\\t\\t// internals\\n\\t\\t//\\n\\n\\t\\tvar scope = this;\\n\\n\\t\\tvar changeEvent = { type: 'change' };\\n\\t\\tvar startEvent = { type: 'start' };\\n\\t\\tvar endEvent = { type: 'end' };\\n\\n\\t\\tvar STATE = { NONE : - 1, ROTATE : 0, DOLLY : 1, PAN : 2, TOUCH_ROTATE : 3, TOUCH_DOLLY : 4, TOUCH_PAN : 5 };\\n\\n\\t\\tvar state = STATE.NONE;\\n\\n\\t\\tvar EPS = 0.000001;\\n\\n\\t\\t// current position in spherical coordinates\\n\\t\\tvar spherical = new THREE.Spherical();\\n\\t\\tvar sphericalDelta = new THREE.Spherical();\\n\\n\\t\\tvar scale = 1;\\n\\t\\tvar panOffset = new THREE.Vector3();\\n\\t\\tvar zoomChanged = false;\\n\\n\\t\\tvar rotateStart = new THREE.Vector2();\\n\\t\\tvar rotateEnd = new THREE.Vector2();\\n\\t\\tvar rotateDelta = new THREE.Vector2();\\n\\n\\t\\tvar panStart = new THREE.Vector2();\\n\\t\\tvar panEnd = new THREE.Vector2();\\n\\t\\tvar panDelta = new THREE.Vector2();\\n\\n\\t\\tvar dollyStart = new THREE.Vector2();\\n\\t\\tvar dollyEnd = new THREE.Vector2();\\n\\t\\tvar dollyDelta = new THREE.Vector2();\\n\\n\\t\\tfunction getAutoRotationAngle() {\\n\\n\\t\\t\\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\\n\\n\\t\\t}\\n\\n\\t\\tfunction getZoomScale() {\\n\\n\\t\\t\\treturn Math.pow( 0.95, scope.zoomSpeed );\\n\\n\\t\\t}\\n\\n\\t\\tfunction rotateLeft( angle ) {\\n\\n\\t\\t\\tsphericalDelta.theta -= angle;\\n\\n\\t\\t}\\n\\n\\t\\tfunction rotateUp( angle ) {\\n\\n\\t\\t\\tsphericalDelta.phi -= angle;\\n\\n\\t\\t}\\n\\n\\t\\tvar panLeft = function() {\\n\\n\\t\\t\\tvar v = new THREE.Vector3();\\n\\n\\t\\t\\treturn function panLeft( distance, objectMatrix ) {\\n\\n\\t\\t\\t\\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\\n\\t\\t\\t\\tv.multiplyScalar( - distance );\\n\\n\\t\\t\\t\\tpanOffset.add( v );\\n\\n\\t\\t\\t};\\n\\n\\t\\t}();\\n\\n\\t\\tvar panUp = function() {\\n\\n\\t\\t\\tvar v = new THREE.Vector3();\\n\\n\\t\\t\\treturn function panUp( distance, objectMatrix ) {\\n\\n\\t\\t\\t\\tv.setFromMatrixColumn( objectMatrix, 1 ); // get Y column of objectMatrix\\n\\t\\t\\t\\tv.multiplyScalar( distance );\\n\\n\\t\\t\\t\\tpanOffset.add( v );\\n\\n\\t\\t\\t};\\n\\n\\t\\t}();\\n\\n\\t\\t// deltaX and deltaY are in pixels; right and down are positive\\n\\t\\tvar pan = function() {\\n\\n\\t\\t\\tvar offset = new THREE.Vector3();\\n\\n\\t\\t\\treturn function( deltaX, deltaY ) {\\n\\n\\t\\t\\t\\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\\n\\n\\t\\t\\t\\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\\n\\n\\t\\t\\t\\t\\t// perspective\\n\\t\\t\\t\\t\\tvar position = scope.object.position;\\n\\t\\t\\t\\t\\toffset.copy( position ).sub( scope.target );\\n\\t\\t\\t\\t\\tvar targetDistance = offset.length();\\n\\n\\t\\t\\t\\t\\t// half of the fov is center to top of screen\\n\\t\\t\\t\\t\\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\\n\\n\\t\\t\\t\\t\\t// we actually don't use screenWidth, since perspective camera is fixed to screen height\\n\\t\\t\\t\\t\\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\\n\\t\\t\\t\\t\\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\\n\\n\\t\\t\\t\\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\\n\\n\\t\\t\\t\\t\\t// orthographic\\n\\t\\t\\t\\t\\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\\n\\t\\t\\t\\t\\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t// camera neither orthographic nor perspective\\n\\t\\t\\t\\t\\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\\n\\t\\t\\t\\t\\tscope.enablePan = false;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t};\\n\\n\\t\\t}();\\n\\n\\t\\tfunction dollyIn( dollyScale ) {\\n\\n\\t\\t\\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\\n\\n\\t\\t\\t\\tscale /= dollyScale;\\n\\n\\t\\t\\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\\n\\n\\t\\t\\t\\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\\n\\t\\t\\t\\tscope.object.updateProjectionMatrix();\\n\\t\\t\\t\\tzoomChanged = true;\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\\n\\t\\t\\t\\tscope.enableZoom = false;\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tfunction dollyOut( dollyScale ) {\\n\\n\\t\\t\\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\\n\\n\\t\\t\\t\\tscale *= dollyScale;\\n\\n\\t\\t\\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\\n\\n\\t\\t\\t\\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\\n\\t\\t\\t\\tscope.object.updateProjectionMatrix();\\n\\t\\t\\t\\tzoomChanged = true;\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\\n\\t\\t\\t\\tscope.enableZoom = false;\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\t//\\n\\t\\t// event callbacks - update the object state\\n\\t\\t//\\n\\n\\t\\tfunction handleMouseDownRotate( event ) {\\n\\n\\t\\t\\t//console.log( 'handleMouseDownRotate' );\\n\\n\\t\\t\\trotateStart.set( event.clientX, event.clientY );\\n\\n\\t\\t}\\n\\n\\t\\tfunction handleMouseDownDolly( event ) {\\n\\n\\t\\t\\t//console.log( 'handleMouseDownDolly' );\\n\\n\\t\\t\\tdollyStart.set( event.clientX, event.clientY );\\n\\n\\t\\t}\\n\\n\\t\\tfunction handleMouseDownPan( event ) {\\n\\n\\t\\t\\t//console.log( 'handleMouseDownPan' );\\n\\n\\t\\t\\tpanStart.set( event.clientX, event.clientY );\\n\\n\\t\\t}\\n\\n\\t\\tfunction handleMouseMoveRotate( event ) {\\n\\n\\t\\t\\t//console.log( 'handleMouseMoveRotate' );\\n\\n\\t\\t\\trotateEnd.set( event.clientX, event.clientY );\\n\\t\\t\\trotateDelta.subVectors( rotateEnd, rotateStart );\\n\\n\\t\\t\\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\\n\\n\\t\\t\\t// rotating across whole screen goes 360 degrees around\\n\\t\\t\\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\\n\\n\\t\\t\\t// rotating up and down along whole screen attempts to go 360, but limited to 180\\n\\t\\t\\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\\n\\n\\t\\t\\trotateStart.copy( rotateEnd );\\n\\n\\t\\t\\tscope.update();\\n\\n\\t\\t}\\n\\n\\t\\tfunction handleMouseMoveDolly( event ) {\\n\\n\\t\\t\\t//console.log( 'handleMouseMoveDolly' );\\n\\n\\t\\t\\tdollyEnd.set( event.clientX, event.clientY );\\n\\n\\t\\t\\tdollyDelta.subVectors( dollyEnd, dollyStart );\\n\\n\\t\\t\\tif ( dollyDelta.y > 0 ) {\\n\\n\\t\\t\\t\\tdollyIn( getZoomScale() );\\n\\n\\t\\t\\t} else if ( dollyDelta.y < 0 ) {\\n\\n\\t\\t\\t\\tdollyOut( getZoomScale() );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tdollyStart.copy( dollyEnd );\\n\\n\\t\\t\\tscope.update();\\n\\n\\t\\t}\\n\\n\\t\\tfunction handleMouseMovePan( event ) {\\n\\n\\t\\t\\t//console.log( 'handleMouseMovePan' );\\n\\n\\t\\t\\tpanEnd.set( event.clientX, event.clientY );\\n\\n\\t\\t\\tpanDelta.subVectors( panEnd, panStart );\\n\\n\\t\\t\\tpan( panDelta.x, panDelta.y );\\n\\n\\t\\t\\tpanStart.copy( panEnd );\\n\\n\\t\\t\\tscope.update();\\n\\n\\t\\t}\\n\\n\\t\\tfunction handleMouseUp( event ) {\\n\\n\\t\\t\\t//console.log( 'handleMouseUp' );\\n\\n\\t\\t}\\n\\n\\t\\tfunction handleMouseWheel( event ) {\\n\\n\\t\\t\\t//console.log( 'handleMouseWheel' );\\n\\n\\t\\t\\tvar delta = 0;\\n\\n\\t\\t\\tif ( event.wheelDelta !== undefined ) {\\n\\n\\t\\t\\t\\t// WebKit / Opera / Explorer 9\\n\\n\\t\\t\\t\\tdelta = event.wheelDelta;\\n\\n\\t\\t\\t} else if ( event.detail !== undefined ) {\\n\\n\\t\\t\\t\\t// Firefox\\n\\n\\t\\t\\t\\tdelta = - event.detail;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( delta > 0 ) {\\n\\n\\t\\t\\t\\tdollyOut( getZoomScale() );\\n\\n\\t\\t\\t} else if ( delta < 0 ) {\\n\\n\\t\\t\\t\\tdollyIn( getZoomScale() );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tscope.update();\\n\\n\\t\\t}\\n\\n\\t\\tfunction handleKeyDown( event ) {\\n\\n\\t\\t\\t//console.log( 'handleKeyDown' );\\n\\n\\t\\t\\tswitch ( event.keyCode ) {\\n\\n\\t\\t\\t\\tcase scope.keys.UP:\\n\\t\\t\\t\\t\\tpan( 0, scope.keyPanSpeed );\\n\\t\\t\\t\\t\\tscope.update();\\n\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\tcase scope.keys.BOTTOM:\\n\\t\\t\\t\\t\\tpan( 0, - scope.keyPanSpeed );\\n\\t\\t\\t\\t\\tscope.update();\\n\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\tcase scope.keys.LEFT:\\n\\t\\t\\t\\t\\tpan( scope.keyPanSpeed, 0 );\\n\\t\\t\\t\\t\\tscope.update();\\n\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\tcase scope.keys.RIGHT:\\n\\t\\t\\t\\t\\tpan( - scope.keyPanSpeed, 0 );\\n\\t\\t\\t\\t\\tscope.update();\\n\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tfunction handleTouchStartRotate( event ) {\\n\\n\\t\\t\\t//console.log( 'handleTouchStartRotate' );\\n\\n\\t\\t\\trotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\\n\\n\\t\\t}\\n\\n\\t\\tfunction handleTouchStartDolly( event ) {\\n\\n\\t\\t\\t//console.log( 'handleTouchStartDolly' );\\n\\n\\t\\t\\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\\n\\t\\t\\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\\n\\n\\t\\t\\tvar distance = Math.sqrt( dx * dx + dy * dy );\\n\\n\\t\\t\\tdollyStart.set( 0, distance );\\n\\n\\t\\t}\\n\\n\\t\\tfunction handleTouchStartPan( event ) {\\n\\n\\t\\t\\t//console.log( 'handleTouchStartPan' );\\n\\n\\t\\t\\tpanStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\\n\\n\\t\\t}\\n\\n\\t\\tfunction handleTouchMoveRotate( event ) {\\n\\n\\t\\t\\t//console.log( 'handleTouchMoveRotate' );\\n\\n\\t\\t\\trotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\\n\\t\\t\\trotateDelta.subVectors( rotateEnd, rotateStart );\\n\\n\\t\\t\\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\\n\\n\\t\\t\\t// rotating across whole screen goes 360 degrees around\\n\\t\\t\\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\\n\\n\\t\\t\\t// rotating up and down along whole screen attempts to go 360, but limited to 180\\n\\t\\t\\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\\n\\n\\t\\t\\trotateStart.copy( rotateEnd );\\n\\n\\t\\t\\tscope.update();\\n\\n\\t\\t}\\n\\n\\t\\tfunction handleTouchMoveDolly( event ) {\\n\\n\\t\\t\\t//console.log( 'handleTouchMoveDolly' );\\n\\n\\t\\t\\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\\n\\t\\t\\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\\n\\n\\t\\t\\tvar distance = Math.sqrt( dx * dx + dy * dy );\\n\\n\\t\\t\\tdollyEnd.set( 0, distance );\\n\\n\\t\\t\\tdollyDelta.subVectors( dollyEnd, dollyStart );\\n\\n\\t\\t\\tif ( dollyDelta.y > 0 ) {\\n\\n\\t\\t\\t\\tdollyOut( getZoomScale() );\\n\\n\\t\\t\\t} else if ( dollyDelta.y < 0 ) {\\n\\n\\t\\t\\t\\tdollyIn( getZoomScale() );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tdollyStart.copy( dollyEnd );\\n\\n\\t\\t\\tscope.update();\\n\\n\\t\\t}\\n\\n\\t\\tfunction handleTouchMovePan( event ) {\\n\\n\\t\\t\\t//console.log( 'handleTouchMovePan' );\\n\\n\\t\\t\\tpanEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\\n\\n\\t\\t\\tpanDelta.subVectors( panEnd, panStart );\\n\\n\\t\\t\\tpan( panDelta.x, panDelta.y );\\n\\n\\t\\t\\tpanStart.copy( panEnd );\\n\\n\\t\\t\\tscope.update();\\n\\n\\t\\t}\\n\\n\\t\\tfunction handleTouchEnd( event ) {\\n\\n\\t\\t\\t//console.log( 'handleTouchEnd' );\\n\\n\\t\\t}\\n\\n\\t\\t//\\n\\t\\t// event handlers - FSM: listen for events and reset state\\n\\t\\t//\\n\\n\\t\\tfunction onMouseDown( event ) {\\n\\n\\t\\t\\tif ( scope.enabled === false ) return;\\n\\n\\t\\t\\tevent.preventDefault();\\n\\n\\t\\t\\tif ( event.button === scope.mouseButtons.ORBIT ) {\\n\\n\\t\\t\\t\\tif ( scope.enableRotate === false ) return;\\n\\n\\t\\t\\t\\thandleMouseDownRotate( event );\\n\\n\\t\\t\\t\\tstate = STATE.ROTATE;\\n\\n\\t\\t\\t} else if ( event.button === scope.mouseButtons.ZOOM ) {\\n\\n\\t\\t\\t\\tif ( scope.enableZoom === false ) return;\\n\\n\\t\\t\\t\\thandleMouseDownDolly( event );\\n\\n\\t\\t\\t\\tstate = STATE.DOLLY;\\n\\n\\t\\t\\t} else if ( event.button === scope.mouseButtons.PAN ) {\\n\\n\\t\\t\\t\\tif ( scope.enablePan === false ) return;\\n\\n\\t\\t\\t\\thandleMouseDownPan( event );\\n\\n\\t\\t\\t\\tstate = STATE.PAN;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( state !== STATE.NONE ) {\\n\\n\\t\\t\\t\\tdocument.addEventListener( 'mousemove', onMouseMove, false );\\n\\t\\t\\t\\tdocument.addEventListener( 'mouseup', onMouseUp, false );\\n\\t\\t\\t\\tdocument.addEventListener( 'mouseout', onMouseUp, false );\\n\\n\\t\\t\\t\\tscope.dispatchEvent( startEvent );\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tfunction onMouseMove( event ) {\\n\\n\\t\\t\\tif ( scope.enabled === false ) return;\\n\\n\\t\\t\\tevent.preventDefault();\\n\\n\\t\\t\\tif ( state === STATE.ROTATE ) {\\n\\n\\t\\t\\t\\tif ( scope.enableRotate === false ) return;\\n\\n\\t\\t\\t\\thandleMouseMoveRotate( event );\\n\\n\\t\\t\\t} else if ( state === STATE.DOLLY ) {\\n\\n\\t\\t\\t\\tif ( scope.enableZoom === false ) return;\\n\\n\\t\\t\\t\\thandleMouseMoveDolly( event );\\n\\n\\t\\t\\t} else if ( state === STATE.PAN ) {\\n\\n\\t\\t\\t\\tif ( scope.enablePan === false ) return;\\n\\n\\t\\t\\t\\thandleMouseMovePan( event );\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tfunction onMouseUp( event ) {\\n\\n\\t\\t\\tif ( scope.enabled === false ) return;\\n\\n\\t\\t\\thandleMouseUp( event );\\n\\n\\t\\t\\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\\n\\t\\t\\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\\n\\t\\t\\tdocument.removeEventListener( 'mouseout', onMouseUp, false );\\n\\n\\t\\t\\tscope.dispatchEvent( endEvent );\\n\\n\\t\\t\\tstate = STATE.NONE;\\n\\n\\t\\t}\\n\\n\\t\\tfunction onMouseWheel( event ) {\\n\\n\\t\\t\\tif ( scope.enabled === false || scope.enableZoom === false || ( state !== STATE.NONE && state !== STATE.ROTATE ) ) return;\\n\\n\\t\\t\\tevent.preventDefault();\\n\\t\\t\\tevent.stopPropagation();\\n\\n\\t\\t\\thandleMouseWheel( event );\\n\\n\\t\\t\\tscope.dispatchEvent( startEvent ); // not sure why these are here...\\n\\t\\t\\tscope.dispatchEvent( endEvent );\\n\\n\\t\\t}\\n\\n\\t\\tfunction onKeyDown( event ) {\\n\\n\\t\\t\\tif ( scope.enabled === false || scope.enableKeys === false || scope.enablePan === false ) return;\\n\\n\\t\\t\\thandleKeyDown( event );\\n\\n\\t\\t}\\n\\n\\t\\tfunction onTouchStart( event ) {\\n\\n\\t\\t\\tif ( scope.enabled === false ) return;\\n\\n\\t\\t\\tswitch ( event.touches.length ) {\\n\\n\\t\\t\\t\\tcase 1:\\t// one-fingered touch: rotate\\n\\n\\t\\t\\t\\t\\tif ( scope.enableRotate === false ) return;\\n\\n\\t\\t\\t\\t\\thandleTouchStartRotate( event );\\n\\n\\t\\t\\t\\t\\tstate = STATE.TOUCH_ROTATE;\\n\\n\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\tcase 2:\\t// two-fingered touch: dolly\\n\\n\\t\\t\\t\\t\\tif ( scope.enableZoom === false ) return;\\n\\n\\t\\t\\t\\t\\thandleTouchStartDolly( event );\\n\\n\\t\\t\\t\\t\\tstate = STATE.TOUCH_DOLLY;\\n\\n\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\tcase 3: // three-fingered touch: pan\\n\\n\\t\\t\\t\\t\\tif ( scope.enablePan === false ) return;\\n\\n\\t\\t\\t\\t\\thandleTouchStartPan( event );\\n\\n\\t\\t\\t\\t\\tstate = STATE.TOUCH_PAN;\\n\\n\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\tdefault:\\n\\n\\t\\t\\t\\t\\tstate = STATE.NONE;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( state !== STATE.NONE ) {\\n\\n\\t\\t\\t\\tscope.dispatchEvent( startEvent );\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tfunction onTouchMove( event ) {\\n\\n\\t\\t\\tif ( scope.enabled === false ) return;\\n\\n\\t\\t\\tevent.preventDefault();\\n\\t\\t\\tevent.stopPropagation();\\n\\n\\t\\t\\tswitch ( event.touches.length ) {\\n\\n\\t\\t\\t\\tcase 1: // one-fingered touch: rotate\\n\\n\\t\\t\\t\\t\\tif ( scope.enableRotate === false ) return;\\n\\t\\t\\t\\t\\tif ( state !== STATE.TOUCH_ROTATE ) return; // is this needed?...\\n\\n\\t\\t\\t\\t\\thandleTouchMoveRotate( event );\\n\\n\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\tcase 2: // two-fingered touch: dolly\\n\\n\\t\\t\\t\\t\\tif ( scope.enableZoom === false ) return;\\n\\t\\t\\t\\t\\tif ( state !== STATE.TOUCH_DOLLY ) return; // is this needed?...\\n\\n\\t\\t\\t\\t\\thandleTouchMoveDolly( event );\\n\\n\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\tcase 3: // three-fingered touch: pan\\n\\n\\t\\t\\t\\t\\tif ( scope.enablePan === false ) return;\\n\\t\\t\\t\\t\\tif ( state !== STATE.TOUCH_PAN ) return; // is this needed?...\\n\\n\\t\\t\\t\\t\\thandleTouchMovePan( event );\\n\\n\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\tdefault:\\n\\n\\t\\t\\t\\t\\tstate = STATE.NONE;\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tfunction onTouchEnd( event ) {\\n\\n\\t\\t\\tif ( scope.enabled === false ) return;\\n\\n\\t\\t\\thandleTouchEnd( event );\\n\\n\\t\\t\\tscope.dispatchEvent( endEvent );\\n\\n\\t\\t\\tstate = STATE.NONE;\\n\\n\\t\\t}\\n\\n\\t\\tfunction onContextMenu( event ) {\\n\\n\\t\\t\\tevent.preventDefault();\\n\\n\\t\\t}\\n\\n\\t\\t//\\n\\n\\t\\tscope.domElement.addEventListener( 'contextmenu', onContextMenu, false );\\n\\n\\t\\tscope.domElement.addEventListener( 'mousedown', onMouseDown, false );\\n\\t\\tscope.domElement.addEventListener( 'mousewheel', onMouseWheel, false );\\n\\t\\tscope.domElement.addEventListener( 'MozMousePixelScroll', onMouseWheel, false ); // firefox\\n\\n\\t\\tscope.domElement.addEventListener( 'touchstart', onTouchStart, false );\\n\\t\\tscope.domElement.addEventListener( 'touchend', onTouchEnd, false );\\n\\t\\tscope.domElement.addEventListener( 'touchmove', onTouchMove, false );\\n\\n\\t\\twindow.addEventListener( 'keydown', onKeyDown, false );\\n\\n\\t\\t// force an update at start\\n\\n\\t\\tthis.update();\\n\\n\\t};\\n\\n\\tTHREE.OrbitControls.prototype = Object.create( THREE.EventDispatcher.prototype );\\n\\tTHREE.OrbitControls.prototype.constructor = THREE.OrbitControls;\\n\\n\\tObject.defineProperties( THREE.OrbitControls.prototype, {\\n\\n\\t\\tcenter: {\\n\\n\\t\\t\\tget: function () {\\n\\n\\t\\t\\t\\tconsole.warn( 'THREE.OrbitControls: .center has been renamed to .target' );\\n\\t\\t\\t\\treturn this.target;\\n\\n\\t\\t\\t}\\n\\n\\t\\t},\\n\\n\\t\\t// backward compatibility\\n\\n\\t\\tnoZoom: {\\n\\n\\t\\t\\tget: function () {\\n\\n\\t\\t\\t\\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\\n\\t\\t\\t\\treturn ! this.enableZoom;\\n\\n\\t\\t\\t},\\n\\n\\t\\t\\tset: function ( value ) {\\n\\n\\t\\t\\t\\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\\n\\t\\t\\t\\tthis.enableZoom = ! value;\\n\\n\\t\\t\\t}\\n\\n\\t\\t},\\n\\n\\t\\tnoRotate: {\\n\\n\\t\\t\\tget: function () {\\n\\n\\t\\t\\t\\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\\n\\t\\t\\t\\treturn ! this.enableRotate;\\n\\n\\t\\t\\t},\\n\\n\\t\\t\\tset: function ( value ) {\\n\\n\\t\\t\\t\\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\\n\\t\\t\\t\\tthis.enableRotate = ! value;\\n\\n\\t\\t\\t}\\n\\n\\t\\t},\\n\\n\\t\\tnoPan: {\\n\\n\\t\\t\\tget: function () {\\n\\n\\t\\t\\t\\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\\n\\t\\t\\t\\treturn ! this.enablePan;\\n\\n\\t\\t\\t},\\n\\n\\t\\t\\tset: function ( value ) {\\n\\n\\t\\t\\t\\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\\n\\t\\t\\t\\tthis.enablePan = ! value;\\n\\n\\t\\t\\t}\\n\\n\\t\\t},\\n\\n\\t\\tnoKeys: {\\n\\n\\t\\t\\tget: function () {\\n\\n\\t\\t\\t\\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\\n\\t\\t\\t\\treturn ! this.enableKeys;\\n\\n\\t\\t\\t},\\n\\n\\t\\t\\tset: function ( value ) {\\n\\n\\t\\t\\t\\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\\n\\t\\t\\t\\tthis.enableKeys = ! value;\\n\\n\\t\\t\\t}\\n\\n\\t\\t},\\n\\n\\t\\tstaticMoving : {\\n\\n\\t\\t\\tget: function () {\\n\\n\\t\\t\\t\\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\\n\\t\\t\\t\\treturn ! this.enableDamping;\\n\\n\\t\\t\\t},\\n\\n\\t\\t\\tset: function ( value ) {\\n\\n\\t\\t\\t\\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\\n\\t\\t\\t\\tthis.enableDamping = ! value;\\n\\n\\t\\t\\t}\\n\\n\\t\\t},\\n\\n\\t\\tdynamicDampingFactor : {\\n\\n\\t\\t\\tget: function () {\\n\\n\\t\\t\\t\\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\\n\\t\\t\\t\\treturn this.dampingFactor;\\n\\n\\t\\t\\t},\\n\\n\\t\\t\\tset: function ( value ) {\\n\\n\\t\\t\\t\\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\\n\\t\\t\\t\\tthis.dampingFactor = value;\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t} );\\n\\n};\",\"module.exports = function( THREE ){\\n\\t// Parallax Occlusion shaders from\\n\\t//    http://sunandblackcat.com/tipFullView.php?topicid=28\\n\\t// No tangent-space transforms logic based on\\n\\t//   http://mmikkelsen3d.blogspot.sk/2012/02/parallaxpoc-mapping-and-no-tangent.html\\n\\n\\tTHREE.ParallaxShader = {\\n\\t\\t// Ordered from fastest to best quality.\\n\\t\\tmodes: {\\n\\t\\t\\tnone:  'NO_PARALLAX',\\n\\t\\t\\tbasic: 'USE_BASIC_PARALLAX',\\n\\t\\t\\tsteep: 'USE_STEEP_PARALLAX',\\n\\t\\t\\tocclusion: 'USE_OCLUSION_PARALLAX', // a.k.a. POM\\n\\t\\t\\trelief: 'USE_RELIEF_PARALLAX',\\n\\t\\t},\\n\\n\\t\\tuniforms: {\\n\\t\\t\\t\\\"bumpMap\\\": { type: \\\"t\\\", value: null },\\n\\t\\t\\t\\\"map\\\": { type: \\\"t\\\", value: null },\\n\\t\\t\\t\\\"parallaxScale\\\": { type: \\\"f\\\", value: null },\\n\\t\\t\\t\\\"parallaxMinLayers\\\": { type: \\\"f\\\", value: null },\\n\\t\\t\\t\\\"parallaxMaxLayers\\\": { type: \\\"f\\\", value: null }\\n\\t\\t},\\n\\n\\t\\tvertexShader: [\\n\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\t\\t\\t\\\"varying vec3 vViewPosition;\\\",\\n\\t\\t\\t\\\"varying vec3 vNormal;\\\",\\n\\n\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t\\\"vUv = uv;\\\",\\n\\t\\t\\t\\t\\\"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\\",\\n\\t\\t\\t\\t\\\"vViewPosition = -mvPosition.xyz;\\\",\\n\\t\\t\\t\\t\\\"vNormal = normalize( normalMatrix * normal );\\\",\\n\\t\\t\\t\\t\\\"gl_Position = projectionMatrix * mvPosition;\\\",\\n\\n\\t\\t\\t\\\"}\\\"\\n\\n\\t  ].join( \\\"\\\\n\\\" ),\\n\\n\\t\\tfragmentShader: [\\n\\t\\t\\t\\\"uniform sampler2D bumpMap;\\\",\\n\\t\\t\\t\\\"uniform sampler2D map;\\\",\\n\\n\\t\\t\\t\\\"uniform float parallaxScale;\\\",\\n\\t\\t\\t\\\"uniform float parallaxMinLayers;\\\",\\n\\t\\t\\t\\\"uniform float parallaxMaxLayers;\\\",\\n\\n\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\t\\t\\t\\\"varying vec3 vViewPosition;\\\",\\n\\t\\t\\t\\\"varying vec3 vNormal;\\\",\\n\\n\\t\\t\\t\\\"#ifdef USE_BASIC_PARALLAX\\\",\\n\\n\\t\\t\\t\\t\\\"vec2 parallaxMap( in vec3 V ) {\\\",\\n\\n\\t\\t\\t\\t\\t\\\"float initialHeight = texture2D( bumpMap, vUv ).r;\\\",\\n\\n\\t\\t\\t\\t\\t// No Offset Limitting: messy, floating output at grazing angles.\\n\\t\\t\\t\\t\\t//\\\"vec2 texCoordOffset = parallaxScale * V.xy / V.z * initialHeight;\\\",\\n\\n\\t\\t\\t\\t\\t// Offset Limiting\\n\\t\\t\\t\\t\\t\\\"vec2 texCoordOffset = parallaxScale * V.xy * initialHeight;\\\",\\n\\t\\t\\t\\t\\t\\\"return vUv - texCoordOffset;\\\",\\n\\n\\t\\t\\t\\t\\\"}\\\",\\n\\n\\t\\t\\t\\\"#else\\\",\\n\\n\\t\\t\\t\\t\\\"vec2 parallaxMap( in vec3 V ) {\\\",\\n\\n\\t\\t\\t\\t\\t// Determine number of layers from angle between V and N\\n\\t\\t\\t\\t\\t\\\"float numLayers = mix( parallaxMaxLayers, parallaxMinLayers, abs( dot( vec3( 0.0, 0.0, 1.0 ), V ) ) );\\\",\\n\\n\\t\\t\\t\\t\\t\\\"float layerHeight = 1.0 / numLayers;\\\",\\n\\t\\t\\t\\t\\t\\\"float currentLayerHeight = 0.0;\\\",\\n\\t\\t\\t\\t\\t// Shift of texture coordinates for each iteration\\n\\t\\t\\t\\t\\t\\\"vec2 dtex = parallaxScale * V.xy / V.z / numLayers;\\\",\\n\\n\\t\\t\\t\\t\\t\\\"vec2 currentTextureCoords = vUv;\\\",\\n\\n\\t\\t\\t\\t\\t\\\"float heightFromTexture = texture2D( bumpMap, currentTextureCoords ).r;\\\",\\n\\n\\t\\t\\t\\t\\t// while ( heightFromTexture > currentLayerHeight )\\n\\t\\t\\t\\t\\t// Infinite loops are not well supported. Do a \\\"large\\\" finite\\n\\t\\t\\t\\t\\t// loop, but not too large, as it slows down some compilers.\\n\\t\\t\\t\\t\\t\\\"for ( int i = 0; i < 30; i += 1 ) {\\\",\\n\\t\\t\\t\\t\\t\\t\\\"if ( heightFromTexture <= currentLayerHeight ) {\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"break;\\\",\\n\\t\\t\\t\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\t\\t\\t\\\"currentLayerHeight += layerHeight;\\\",\\n\\t\\t\\t\\t\\t\\t// Shift texture coordinates along vector V\\n\\t\\t\\t\\t\\t\\t\\\"currentTextureCoords -= dtex;\\\",\\n\\t\\t\\t\\t\\t\\t\\\"heightFromTexture = texture2D( bumpMap, currentTextureCoords ).r;\\\",\\n\\t\\t\\t\\t\\t\\\"}\\\",\\n\\n\\t\\t\\t\\t\\t\\\"#ifdef USE_STEEP_PARALLAX\\\",\\n\\n\\t\\t\\t\\t\\t\\t\\\"return currentTextureCoords;\\\",\\n\\n\\t\\t\\t\\t\\t\\\"#elif defined( USE_RELIEF_PARALLAX )\\\",\\n\\n\\t\\t\\t\\t\\t\\t\\\"vec2 deltaTexCoord = dtex / 2.0;\\\",\\n\\t\\t\\t\\t\\t\\t\\\"float deltaHeight = layerHeight / 2.0;\\\",\\n\\n\\t\\t\\t\\t\\t\\t// Return to the mid point of previous layer\\n\\t\\t\\t\\t\\t\\t\\\"currentTextureCoords += deltaTexCoord;\\\",\\n\\t\\t\\t\\t\\t\\t\\\"currentLayerHeight -= deltaHeight;\\\",\\n\\n\\t\\t\\t\\t\\t\\t// Binary search to increase precision of Steep Parallax Mapping\\n\\t\\t\\t\\t\\t\\t\\\"const int numSearches = 5;\\\",\\n\\t\\t\\t\\t\\t\\t\\\"for ( int i = 0; i < numSearches; i += 1 ) {\\\",\\n\\n\\t\\t\\t\\t\\t\\t\\t\\\"deltaTexCoord /= 2.0;\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"deltaHeight /= 2.0;\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"heightFromTexture = texture2D( bumpMap, currentTextureCoords ).r;\\\",\\n\\t\\t\\t\\t\\t\\t\\t// Shift along or against vector V\\n\\t\\t\\t\\t\\t\\t\\t\\\"if( heightFromTexture > currentLayerHeight ) {\\\", // Below the surface\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"currentTextureCoords -= deltaTexCoord;\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"currentLayerHeight += deltaHeight;\\\",\\n\\n\\t\\t\\t\\t\\t\\t\\t\\\"} else {\\\", // above the surface\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"currentTextureCoords += deltaTexCoord;\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"currentLayerHeight -= deltaHeight;\\\",\\n\\n\\t\\t\\t\\t\\t\\t\\t\\\"}\\\",\\n\\n\\t\\t\\t\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\t\\t\\t\\\"return currentTextureCoords;\\\",\\n\\n\\t\\t\\t\\t\\t\\\"#elif defined( USE_OCLUSION_PARALLAX )\\\",\\n\\n\\t\\t\\t\\t\\t\\t\\\"vec2 prevTCoords = currentTextureCoords + dtex;\\\",\\n\\n\\t\\t\\t\\t\\t\\t// Heights for linear interpolation\\n\\t\\t\\t\\t\\t\\t\\\"float nextH = heightFromTexture - currentLayerHeight;\\\",\\n\\t\\t\\t\\t\\t\\t\\\"float prevH = texture2D( bumpMap, prevTCoords ).r - currentLayerHeight + layerHeight;\\\",\\n\\n\\t\\t\\t\\t\\t\\t// Proportions for linear interpolation\\n\\t\\t\\t\\t\\t\\t\\\"float weight = nextH / ( nextH - prevH );\\\",\\n\\n\\t\\t\\t\\t\\t\\t// Interpolation of texture coordinates\\n\\t\\t\\t\\t\\t\\t\\\"return prevTCoords * weight + currentTextureCoords * ( 1.0 - weight );\\\",\\n\\n\\t\\t\\t\\t\\t\\\"#else\\\", // NO_PARALLAX\\n\\n\\t\\t\\t\\t\\t\\t\\\"return vUv;\\\",\\n\\n\\t\\t\\t\\t\\t\\\"#endif\\\",\\n\\n\\t\\t\\t\\t\\\"}\\\",\\n\\t\\t\\t\\\"#endif\\\",\\n\\n\\t\\t\\t\\\"vec2 perturbUv( vec3 surfPosition, vec3 surfNormal, vec3 viewPosition ) {\\\",\\n\\n\\t \\t\\t\\t\\\"vec2 texDx = dFdx( vUv );\\\",\\n\\t\\t\\t\\t\\\"vec2 texDy = dFdy( vUv );\\\",\\n\\n\\t\\t\\t\\t\\\"vec3 vSigmaX = dFdx( surfPosition );\\\",\\n\\t\\t\\t\\t\\\"vec3 vSigmaY = dFdy( surfPosition );\\\",\\n\\t\\t\\t\\t\\\"vec3 vR1 = cross( vSigmaY, surfNormal );\\\",\\n\\t\\t\\t\\t\\\"vec3 vR2 = cross( surfNormal, vSigmaX );\\\",\\n\\t\\t\\t\\t\\\"float fDet = dot( vSigmaX, vR1 );\\\",\\n\\n\\t\\t\\t\\t\\\"vec2 vProjVscr = ( 1.0 / fDet ) * vec2( dot( vR1, viewPosition ), dot( vR2, viewPosition ) );\\\",\\n\\t\\t\\t\\t\\\"vec3 vProjVtex;\\\",\\n\\t\\t\\t\\t\\\"vProjVtex.xy = texDx * vProjVscr.x + texDy * vProjVscr.y;\\\",\\n\\t\\t\\t\\t\\\"vProjVtex.z = dot( surfNormal, viewPosition );\\\",\\n\\n\\t\\t\\t\\t\\\"return parallaxMap( vProjVtex );\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\n\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t\\\"vec2 mapUv = perturbUv( -vViewPosition, normalize( vNormal ), normalize( vViewPosition ) );\\\",\\n\\t\\t\\t\\t\\\"gl_FragColor = texture2D( map, mapUv );\\\",\\n\\n\\t\\t\\t\\\"}\\\",\\n\\n\\t  ].join( \\\"\\\\n\\\" )\\n\\n\\t};\\n\\n}\\n\",\"module.exports = function( THREE ){\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t * @author supereggbert / http://www.paulbrunt.co.uk/\\n\\t * @author julianwa / https://github.com/julianwa\\n\\t */\\n\\n\\tTHREE.RenderableObject = function () {\\n\\n\\t\\tthis.id = 0;\\n\\n\\t\\tthis.object = null;\\n\\t\\tthis.z = 0;\\n\\t\\tthis.renderOrder = 0;\\n\\n\\t};\\n\\n\\t//\\n\\n\\tTHREE.RenderableFace = function () {\\n\\n\\t\\tthis.id = 0;\\n\\n\\t\\tthis.v1 = new THREE.RenderableVertex();\\n\\t\\tthis.v2 = new THREE.RenderableVertex();\\n\\t\\tthis.v3 = new THREE.RenderableVertex();\\n\\n\\t\\tthis.normalModel = new THREE.Vector3();\\n\\n\\t\\tthis.vertexNormalsModel = [ new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3() ];\\n\\t\\tthis.vertexNormalsLength = 0;\\n\\n\\t\\tthis.color = new THREE.Color();\\n\\t\\tthis.material = null;\\n\\t\\tthis.uvs = [ new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() ];\\n\\n\\t\\tthis.z = 0;\\n\\t\\tthis.renderOrder = 0;\\n\\n\\t};\\n\\n\\t//\\n\\n\\tTHREE.RenderableVertex = function () {\\n\\n\\t\\tthis.position = new THREE.Vector3();\\n\\t\\tthis.positionWorld = new THREE.Vector3();\\n\\t\\tthis.positionScreen = new THREE.Vector4();\\n\\n\\t\\tthis.visible = true;\\n\\n\\t};\\n\\n\\tTHREE.RenderableVertex.prototype.copy = function ( vertex ) {\\n\\n\\t\\tthis.positionWorld.copy( vertex.positionWorld );\\n\\t\\tthis.positionScreen.copy( vertex.positionScreen );\\n\\n\\t};\\n\\n\\t//\\n\\n\\tTHREE.RenderableLine = function () {\\n\\n\\t\\tthis.id = 0;\\n\\n\\t\\tthis.v1 = new THREE.RenderableVertex();\\n\\t\\tthis.v2 = new THREE.RenderableVertex();\\n\\n\\t\\tthis.vertexColors = [ new THREE.Color(), new THREE.Color() ];\\n\\t\\tthis.material = null;\\n\\n\\t\\tthis.z = 0;\\n\\t\\tthis.renderOrder = 0;\\n\\n\\t};\\n\\n\\t//\\n\\n\\tTHREE.RenderableSprite = function () {\\n\\n\\t\\tthis.id = 0;\\n\\n\\t\\tthis.object = null;\\n\\n\\t\\tthis.x = 0;\\n\\t\\tthis.y = 0;\\n\\t\\tthis.z = 0;\\n\\n\\t\\tthis.rotation = 0;\\n\\t\\tthis.scale = new THREE.Vector2();\\n\\n\\t\\tthis.material = null;\\n\\t\\tthis.renderOrder = 0;\\n\\n\\t};\\n\\n\\t//\\n\\n\\tTHREE.Projector = function () {\\n\\n\\t\\tvar _object, _objectCount, _objectPool = [], _objectPoolLength = 0,\\n\\t\\t_vertex, _vertexCount, _vertexPool = [], _vertexPoolLength = 0,\\n\\t\\t_face, _faceCount, _facePool = [], _facePoolLength = 0,\\n\\t\\t_line, _lineCount, _linePool = [], _linePoolLength = 0,\\n\\t\\t_sprite, _spriteCount, _spritePool = [], _spritePoolLength = 0,\\n\\n\\t\\t_renderData = { objects: [], lights: [], elements: [] },\\n\\n\\t\\t_vector3 = new THREE.Vector3(),\\n\\t\\t_vector4 = new THREE.Vector4(),\\n\\n\\t\\t_clipBox = new THREE.Box3( new THREE.Vector3( - 1, - 1, - 1 ), new THREE.Vector3( 1, 1, 1 ) ),\\n\\t\\t_boundingBox = new THREE.Box3(),\\n\\t\\t_points3 = new Array( 3 ),\\n\\t\\t_points4 = new Array( 4 ),\\n\\n\\t\\t_viewMatrix = new THREE.Matrix4(),\\n\\t\\t_viewProjectionMatrix = new THREE.Matrix4(),\\n\\n\\t\\t_modelMatrix,\\n\\t\\t_modelViewProjectionMatrix = new THREE.Matrix4(),\\n\\n\\t\\t_normalMatrix = new THREE.Matrix3(),\\n\\n\\t\\t_frustum = new THREE.Frustum(),\\n\\n\\t\\t_clippedVertex1PositionScreen = new THREE.Vector4(),\\n\\t\\t_clippedVertex2PositionScreen = new THREE.Vector4();\\n\\n\\t\\t//\\n\\n\\t\\tthis.projectVector = function ( vector, camera ) {\\n\\n\\t\\t\\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\\n\\t\\t\\tvector.project( camera );\\n\\n\\t\\t};\\n\\n\\t\\tthis.unprojectVector = function ( vector, camera ) {\\n\\n\\t\\t\\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\\n\\t\\t\\tvector.unproject( camera );\\n\\n\\t\\t};\\n\\n\\t\\tthis.pickingRay = function ( vector, camera ) {\\n\\n\\t\\t\\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\\n\\n\\t\\t};\\n\\n\\t\\t//\\n\\n\\t\\tvar RenderList = function () {\\n\\n\\t\\t\\tvar normals = [];\\n\\t\\t\\tvar uvs = [];\\n\\n\\t\\t\\tvar object = null;\\n\\t\\t\\tvar material = null;\\n\\n\\t\\t\\tvar normalMatrix = new THREE.Matrix3();\\n\\n\\t\\t\\tfunction setObject( value ) {\\n\\n\\t\\t\\t\\tobject = value;\\n\\t\\t\\t\\tmaterial = object.material;\\n\\n\\t\\t\\t\\tnormalMatrix.getNormalMatrix( object.matrixWorld );\\n\\n\\t\\t\\t\\tnormals.length = 0;\\n\\t\\t\\t\\tuvs.length = 0;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tfunction projectVertex( vertex ) {\\n\\n\\t\\t\\t\\tvar position = vertex.position;\\n\\t\\t\\t\\tvar positionWorld = vertex.positionWorld;\\n\\t\\t\\t\\tvar positionScreen = vertex.positionScreen;\\n\\n\\t\\t\\t\\tpositionWorld.copy( position ).applyMatrix4( _modelMatrix );\\n\\t\\t\\t\\tpositionScreen.copy( positionWorld ).applyMatrix4( _viewProjectionMatrix );\\n\\n\\t\\t\\t\\tvar invW = 1 / positionScreen.w;\\n\\n\\t\\t\\t\\tpositionScreen.x *= invW;\\n\\t\\t\\t\\tpositionScreen.y *= invW;\\n\\t\\t\\t\\tpositionScreen.z *= invW;\\n\\n\\t\\t\\t\\tvertex.visible = positionScreen.x >= - 1 && positionScreen.x <= 1 &&\\n\\t\\t\\t\\t\\t\\t positionScreen.y >= - 1 && positionScreen.y <= 1 &&\\n\\t\\t\\t\\t\\t\\t positionScreen.z >= - 1 && positionScreen.z <= 1;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tfunction pushVertex( x, y, z ) {\\n\\n\\t\\t\\t\\t_vertex = getNextVertexInPool();\\n\\t\\t\\t\\t_vertex.position.set( x, y, z );\\n\\n\\t\\t\\t\\tprojectVertex( _vertex );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tfunction pushNormal( x, y, z ) {\\n\\n\\t\\t\\t\\tnormals.push( x, y, z );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tfunction pushUv( x, y ) {\\n\\n\\t\\t\\t\\tuvs.push( x, y );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tfunction checkTriangleVisibility( v1, v2, v3 ) {\\n\\n\\t\\t\\t\\tif ( v1.visible === true || v2.visible === true || v3.visible === true ) return true;\\n\\n\\t\\t\\t\\t_points3[ 0 ] = v1.positionScreen;\\n\\t\\t\\t\\t_points3[ 1 ] = v2.positionScreen;\\n\\t\\t\\t\\t_points3[ 2 ] = v3.positionScreen;\\n\\n\\t\\t\\t\\treturn _clipBox.intersectsBox( _boundingBox.setFromPoints( _points3 ) );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tfunction checkBackfaceCulling( v1, v2, v3 ) {\\n\\n\\t\\t\\t\\treturn ( ( v3.positionScreen.x - v1.positionScreen.x ) *\\n\\t\\t\\t\\t\\t    ( v2.positionScreen.y - v1.positionScreen.y ) -\\n\\t\\t\\t\\t\\t    ( v3.positionScreen.y - v1.positionScreen.y ) *\\n\\t\\t\\t\\t\\t    ( v2.positionScreen.x - v1.positionScreen.x ) ) < 0;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tfunction pushLine( a, b ) {\\n\\n\\t\\t\\t\\tvar v1 = _vertexPool[ a ];\\n\\t\\t\\t\\tvar v2 = _vertexPool[ b ];\\n\\n\\t\\t\\t\\t_line = getNextLineInPool();\\n\\n\\t\\t\\t\\t_line.id = object.id;\\n\\t\\t\\t\\t_line.v1.copy( v1 );\\n\\t\\t\\t\\t_line.v2.copy( v2 );\\n\\t\\t\\t\\t_line.z = ( v1.positionScreen.z + v2.positionScreen.z ) / 2;\\n\\t\\t\\t\\t_line.renderOrder = object.renderOrder;\\n\\n\\t\\t\\t\\t_line.material = object.material;\\n\\n\\t\\t\\t\\t_renderData.elements.push( _line );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tfunction pushTriangle( a, b, c ) {\\n\\n\\t\\t\\t\\tvar v1 = _vertexPool[ a ];\\n\\t\\t\\t\\tvar v2 = _vertexPool[ b ];\\n\\t\\t\\t\\tvar v3 = _vertexPool[ c ];\\n\\n\\t\\t\\t\\tif ( checkTriangleVisibility( v1, v2, v3 ) === false ) return;\\n\\n\\t\\t\\t\\tif ( material.side === THREE.DoubleSide || checkBackfaceCulling( v1, v2, v3 ) === true ) {\\n\\n\\t\\t\\t\\t\\t_face = getNextFaceInPool();\\n\\n\\t\\t\\t\\t\\t_face.id = object.id;\\n\\t\\t\\t\\t\\t_face.v1.copy( v1 );\\n\\t\\t\\t\\t\\t_face.v2.copy( v2 );\\n\\t\\t\\t\\t\\t_face.v3.copy( v3 );\\n\\t\\t\\t\\t\\t_face.z = ( v1.positionScreen.z + v2.positionScreen.z + v3.positionScreen.z ) / 3;\\n\\t\\t\\t\\t\\t_face.renderOrder = object.renderOrder;\\n\\n\\t\\t\\t\\t\\t// use first vertex normal as face normal\\n\\n\\t\\t\\t\\t\\t_face.normalModel.fromArray( normals, a * 3 );\\n\\t\\t\\t\\t\\t_face.normalModel.applyMatrix3( normalMatrix ).normalize();\\n\\n\\t\\t\\t\\t\\tfor ( var i = 0; i < 3; i ++ ) {\\n\\n\\t\\t\\t\\t\\t\\tvar normal = _face.vertexNormalsModel[ i ];\\n\\t\\t\\t\\t\\t\\tnormal.fromArray( normals, arguments[ i ] * 3 );\\n\\t\\t\\t\\t\\t\\tnormal.applyMatrix3( normalMatrix ).normalize();\\n\\n\\t\\t\\t\\t\\t\\tvar uv = _face.uvs[ i ];\\n\\t\\t\\t\\t\\t\\tuv.fromArray( uvs, arguments[ i ] * 2 );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t_face.vertexNormalsLength = 3;\\n\\n\\t\\t\\t\\t\\t_face.material = object.material;\\n\\n\\t\\t\\t\\t\\t_renderData.elements.push( _face );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn {\\n\\t\\t\\t\\tsetObject: setObject,\\n\\t\\t\\t\\tprojectVertex: projectVertex,\\n\\t\\t\\t\\tcheckTriangleVisibility: checkTriangleVisibility,\\n\\t\\t\\t\\tcheckBackfaceCulling: checkBackfaceCulling,\\n\\t\\t\\t\\tpushVertex: pushVertex,\\n\\t\\t\\t\\tpushNormal: pushNormal,\\n\\t\\t\\t\\tpushUv: pushUv,\\n\\t\\t\\t\\tpushLine: pushLine,\\n\\t\\t\\t\\tpushTriangle: pushTriangle\\n\\t\\t\\t}\\n\\n\\t\\t};\\n\\n\\t\\tvar renderList = new RenderList();\\n\\n\\t\\tthis.projectScene = function ( scene, camera, sortObjects, sortElements ) {\\n\\n\\t\\t\\t_faceCount = 0;\\n\\t\\t\\t_lineCount = 0;\\n\\t\\t\\t_spriteCount = 0;\\n\\n\\t\\t\\t_renderData.elements.length = 0;\\n\\n\\t\\t\\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\\n\\t\\t\\tif ( camera.parent === null ) camera.updateMatrixWorld();\\n\\n\\t\\t\\t_viewMatrix.copy( camera.matrixWorldInverse.getInverse( camera.matrixWorld ) );\\n\\t\\t\\t_viewProjectionMatrix.multiplyMatrices( camera.projectionMatrix, _viewMatrix );\\n\\n\\t\\t\\t_frustum.setFromMatrix( _viewProjectionMatrix );\\n\\n\\t\\t\\t//\\n\\n\\t\\t\\t_objectCount = 0;\\n\\n\\t\\t\\t_renderData.objects.length = 0;\\n\\t\\t\\t_renderData.lights.length = 0;\\n\\n\\t\\t\\tscene.traverseVisible( function ( object ) {\\n\\n\\t\\t\\t\\tif ( object instanceof THREE.Light ) {\\n\\n\\t\\t\\t\\t\\t_renderData.lights.push( object );\\n\\n\\t\\t\\t\\t} else if ( object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Sprite ) {\\n\\n\\t\\t\\t\\t\\tvar material = object.material;\\n\\n\\t\\t\\t\\t\\tif ( material.visible === false ) return;\\n\\n\\t\\t\\t\\t\\tif ( object.frustumCulled === false || _frustum.intersectsObject( object ) === true ) {\\n\\n\\t\\t\\t\\t\\t\\t_object = getNextObjectInPool();\\n\\t\\t\\t\\t\\t\\t_object.id = object.id;\\n\\t\\t\\t\\t\\t\\t_object.object = object;\\n\\n\\t\\t\\t\\t\\t\\t_vector3.setFromMatrixPosition( object.matrixWorld );\\n\\t\\t\\t\\t\\t\\t_vector3.applyProjection( _viewProjectionMatrix );\\n\\t\\t\\t\\t\\t\\t_object.z = _vector3.z;\\n\\t\\t\\t\\t\\t\\t_object.renderOrder = object.renderOrder;\\n\\n\\t\\t\\t\\t\\t\\t_renderData.objects.push( _object );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t} );\\n\\n\\t\\t\\tif ( sortObjects === true ) {\\n\\n\\t\\t\\t\\t_renderData.objects.sort( painterSort );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t//\\n\\n\\t\\t\\tfor ( var o = 0, ol = _renderData.objects.length; o < ol; o ++ ) {\\n\\n\\t\\t\\t\\tvar object = _renderData.objects[ o ].object;\\n\\t\\t\\t\\tvar geometry = object.geometry;\\n\\n\\t\\t\\t\\trenderList.setObject( object );\\n\\n\\t\\t\\t\\t_modelMatrix = object.matrixWorld;\\n\\n\\t\\t\\t\\t_vertexCount = 0;\\n\\n\\t\\t\\t\\tif ( object instanceof THREE.Mesh ) {\\n\\n\\t\\t\\t\\t\\tif ( geometry instanceof THREE.BufferGeometry ) {\\n\\n\\t\\t\\t\\t\\t\\tvar attributes = geometry.attributes;\\n\\t\\t\\t\\t\\t\\tvar groups = geometry.groups;\\n\\n\\t\\t\\t\\t\\t\\tif ( attributes.position === undefined ) continue;\\n\\n\\t\\t\\t\\t\\t\\tvar positions = attributes.position.array;\\n\\n\\t\\t\\t\\t\\t\\tfor ( var i = 0, l = positions.length; i < l; i += 3 ) {\\n\\n\\t\\t\\t\\t\\t\\t\\trenderList.pushVertex( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] );\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\tif ( attributes.normal !== undefined ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tvar normals = attributes.normal.array;\\n\\n\\t\\t\\t\\t\\t\\t\\tfor ( var i = 0, l = normals.length; i < l; i += 3 ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\trenderList.pushNormal( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] );\\n\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\tif ( attributes.uv !== undefined ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tvar uvs = attributes.uv.array;\\n\\n\\t\\t\\t\\t\\t\\t\\tfor ( var i = 0, l = uvs.length; i < l; i += 2 ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\trenderList.pushUv( uvs[ i ], uvs[ i + 1 ] );\\n\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\tif ( geometry.index !== null ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tvar indices = geometry.index.array;\\n\\n\\t\\t\\t\\t\\t\\t\\tif ( groups.length > 0 ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tfor ( var o = 0; o < groups.length; o ++ ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tvar group = groups[ o ];\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tfor ( var i = group.start, l = group.start + group.count; i < l; i += 3 ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trenderList.pushTriangle( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tfor ( var i = 0, l = indices.length; i < l; i += 3 ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\trenderList.pushTriangle( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\t\\tfor ( var i = 0, l = positions.length / 3; i < l; i += 3 ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\trenderList.pushTriangle( i, i + 1, i + 2 );\\n\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t} else if ( geometry instanceof THREE.Geometry ) {\\n\\n\\t\\t\\t\\t\\t\\tvar vertices = geometry.vertices;\\n\\t\\t\\t\\t\\t\\tvar faces = geometry.faces;\\n\\t\\t\\t\\t\\t\\tvar faceVertexUvs = geometry.faceVertexUvs[ 0 ];\\n\\n\\t\\t\\t\\t\\t\\t_normalMatrix.getNormalMatrix( _modelMatrix );\\n\\n\\t\\t\\t\\t\\t\\tvar material = object.material;\\n\\n\\t\\t\\t\\t\\t\\tvar isFaceMaterial = material instanceof THREE.MultiMaterial;\\n\\t\\t\\t\\t\\t\\tvar objectMaterials = isFaceMaterial === true ? object.material : null;\\n\\n\\t\\t\\t\\t\\t\\tfor ( var v = 0, vl = vertices.length; v < vl; v ++ ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tvar vertex = vertices[ v ];\\n\\n\\t\\t\\t\\t\\t\\t\\t_vector3.copy( vertex );\\n\\n\\t\\t\\t\\t\\t\\t\\tif ( material.morphTargets === true ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tvar morphTargets = geometry.morphTargets;\\n\\t\\t\\t\\t\\t\\t\\t\\tvar morphInfluences = object.morphTargetInfluences;\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tvar influence = morphInfluences[ t ];\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif ( influence === 0 ) continue;\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tvar target = morphTargets[ t ];\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tvar targetVertex = target.vertices[ v ];\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t_vector3.x += ( targetVertex.x - vertex.x ) * influence;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t_vector3.y += ( targetVertex.y - vertex.y ) * influence;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t_vector3.z += ( targetVertex.z - vertex.z ) * influence;\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\trenderList.pushVertex( _vector3.x, _vector3.y, _vector3.z );\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tvar face = faces[ f ];\\n\\n\\t\\t\\t\\t\\t\\t\\tmaterial = isFaceMaterial === true\\n\\t\\t\\t\\t\\t\\t\\t\\t ? objectMaterials.materials[ face.materialIndex ]\\n\\t\\t\\t\\t\\t\\t\\t\\t : object.material;\\n\\n\\t\\t\\t\\t\\t\\t\\tif ( material === undefined ) continue;\\n\\n\\t\\t\\t\\t\\t\\t\\tvar side = material.side;\\n\\n\\t\\t\\t\\t\\t\\t\\tvar v1 = _vertexPool[ face.a ];\\n\\t\\t\\t\\t\\t\\t\\tvar v2 = _vertexPool[ face.b ];\\n\\t\\t\\t\\t\\t\\t\\tvar v3 = _vertexPool[ face.c ];\\n\\n\\t\\t\\t\\t\\t\\t\\tif ( renderList.checkTriangleVisibility( v1, v2, v3 ) === false ) continue;\\n\\n\\t\\t\\t\\t\\t\\t\\tvar visible = renderList.checkBackfaceCulling( v1, v2, v3 );\\n\\n\\t\\t\\t\\t\\t\\t\\tif ( side !== THREE.DoubleSide ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tif ( side === THREE.FrontSide && visible === false ) continue;\\n\\t\\t\\t\\t\\t\\t\\t\\tif ( side === THREE.BackSide && visible === true ) continue;\\n\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t_face = getNextFaceInPool();\\n\\n\\t\\t\\t\\t\\t\\t\\t_face.id = object.id;\\n\\t\\t\\t\\t\\t\\t\\t_face.v1.copy( v1 );\\n\\t\\t\\t\\t\\t\\t\\t_face.v2.copy( v2 );\\n\\t\\t\\t\\t\\t\\t\\t_face.v3.copy( v3 );\\n\\n\\t\\t\\t\\t\\t\\t\\t_face.normalModel.copy( face.normal );\\n\\n\\t\\t\\t\\t\\t\\t\\tif ( visible === false && ( side === THREE.BackSide || side === THREE.DoubleSide ) ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t_face.normalModel.negate();\\n\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t_face.normalModel.applyMatrix3( _normalMatrix ).normalize();\\n\\n\\t\\t\\t\\t\\t\\t\\tvar faceVertexNormals = face.vertexNormals;\\n\\n\\t\\t\\t\\t\\t\\t\\tfor ( var n = 0, nl = Math.min( faceVertexNormals.length, 3 ); n < nl; n ++ ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tvar normalModel = _face.vertexNormalsModel[ n ];\\n\\t\\t\\t\\t\\t\\t\\t\\tnormalModel.copy( faceVertexNormals[ n ] );\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tif ( visible === false && ( side === THREE.BackSide || side === THREE.DoubleSide ) ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tnormalModel.negate();\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tnormalModel.applyMatrix3( _normalMatrix ).normalize();\\n\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t_face.vertexNormalsLength = faceVertexNormals.length;\\n\\n\\t\\t\\t\\t\\t\\t\\tvar vertexUvs = faceVertexUvs[ f ];\\n\\n\\t\\t\\t\\t\\t\\t\\tif ( vertexUvs !== undefined ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tfor ( var u = 0; u < 3; u ++ ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t_face.uvs[ u ].copy( vertexUvs[ u ] );\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t_face.color = face.color;\\n\\t\\t\\t\\t\\t\\t\\t_face.material = material;\\n\\n\\t\\t\\t\\t\\t\\t\\t_face.z = ( v1.positionScreen.z + v2.positionScreen.z + v3.positionScreen.z ) / 3;\\n\\t\\t\\t\\t\\t\\t\\t_face.renderOrder = object.renderOrder;\\n\\n\\t\\t\\t\\t\\t\\t\\t_renderData.elements.push( _face );\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t} else if ( object instanceof THREE.Line ) {\\n\\n\\t\\t\\t\\t\\tif ( geometry instanceof THREE.BufferGeometry ) {\\n\\n\\t\\t\\t\\t\\t\\tvar attributes = geometry.attributes;\\n\\n\\t\\t\\t\\t\\t\\tif ( attributes.position !== undefined ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tvar positions = attributes.position.array;\\n\\n\\t\\t\\t\\t\\t\\t\\tfor ( var i = 0, l = positions.length; i < l; i += 3 ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\trenderList.pushVertex( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] );\\n\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\tif ( geometry.index !== null ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tvar indices = geometry.index.array;\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tfor ( var i = 0, l = indices.length; i < l; i += 2 ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\trenderList.pushLine( indices[ i ], indices[ i + 1 ] );\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tvar step = object instanceof THREE.LineSegments ? 2 : 1;\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tfor ( var i = 0, l = ( positions.length / 3 ) - 1; i < l; i += step ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\trenderList.pushLine( i, i + 1 );\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t} else if ( geometry instanceof THREE.Geometry ) {\\n\\n\\t\\t\\t\\t\\t\\t_modelViewProjectionMatrix.multiplyMatrices( _viewProjectionMatrix, _modelMatrix );\\n\\n\\t\\t\\t\\t\\t\\tvar vertices = object.geometry.vertices;\\n\\n\\t\\t\\t\\t\\t\\tif ( vertices.length === 0 ) continue;\\n\\n\\t\\t\\t\\t\\t\\tv1 = getNextVertexInPool();\\n\\t\\t\\t\\t\\t\\tv1.positionScreen.copy( vertices[ 0 ] ).applyMatrix4( _modelViewProjectionMatrix );\\n\\n\\t\\t\\t\\t\\t\\tvar step = object instanceof THREE.LineSegments ? 2 : 1;\\n\\n\\t\\t\\t\\t\\t\\tfor ( var v = 1, vl = vertices.length; v < vl; v ++ ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tv1 = getNextVertexInPool();\\n\\t\\t\\t\\t\\t\\t\\tv1.positionScreen.copy( vertices[ v ] ).applyMatrix4( _modelViewProjectionMatrix );\\n\\n\\t\\t\\t\\t\\t\\t\\tif ( ( v + 1 ) % step > 0 ) continue;\\n\\n\\t\\t\\t\\t\\t\\t\\tv2 = _vertexPool[ _vertexCount - 2 ];\\n\\n\\t\\t\\t\\t\\t\\t\\t_clippedVertex1PositionScreen.copy( v1.positionScreen );\\n\\t\\t\\t\\t\\t\\t\\t_clippedVertex2PositionScreen.copy( v2.positionScreen );\\n\\n\\t\\t\\t\\t\\t\\t\\tif ( clipLine( _clippedVertex1PositionScreen, _clippedVertex2PositionScreen ) === true ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t// Perform the perspective divide\\n\\t\\t\\t\\t\\t\\t\\t\\t_clippedVertex1PositionScreen.multiplyScalar( 1 / _clippedVertex1PositionScreen.w );\\n\\t\\t\\t\\t\\t\\t\\t\\t_clippedVertex2PositionScreen.multiplyScalar( 1 / _clippedVertex2PositionScreen.w );\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t_line = getNextLineInPool();\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t_line.id = object.id;\\n\\t\\t\\t\\t\\t\\t\\t\\t_line.v1.positionScreen.copy( _clippedVertex1PositionScreen );\\n\\t\\t\\t\\t\\t\\t\\t\\t_line.v2.positionScreen.copy( _clippedVertex2PositionScreen );\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t_line.z = Math.max( _clippedVertex1PositionScreen.z, _clippedVertex2PositionScreen.z );\\n\\t\\t\\t\\t\\t\\t\\t\\t_line.renderOrder = object.renderOrder;\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t_line.material = object.material;\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tif ( object.material.vertexColors === THREE.VertexColors ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t_line.vertexColors[ 0 ].copy( object.geometry.colors[ v ] );\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t_line.vertexColors[ 1 ].copy( object.geometry.colors[ v - 1 ] );\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t_renderData.elements.push( _line );\\n\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t} else if ( object instanceof THREE.Sprite ) {\\n\\n\\t\\t\\t\\t\\t_vector4.set( _modelMatrix.elements[ 12 ], _modelMatrix.elements[ 13 ], _modelMatrix.elements[ 14 ], 1 );\\n\\t\\t\\t\\t\\t_vector4.applyMatrix4( _viewProjectionMatrix );\\n\\n\\t\\t\\t\\t\\tvar invW = 1 / _vector4.w;\\n\\n\\t\\t\\t\\t\\t_vector4.z *= invW;\\n\\n\\t\\t\\t\\t\\tif ( _vector4.z >= - 1 && _vector4.z <= 1 ) {\\n\\n\\t\\t\\t\\t\\t\\t_sprite = getNextSpriteInPool();\\n\\t\\t\\t\\t\\t\\t_sprite.id = object.id;\\n\\t\\t\\t\\t\\t\\t_sprite.x = _vector4.x * invW;\\n\\t\\t\\t\\t\\t\\t_sprite.y = _vector4.y * invW;\\n\\t\\t\\t\\t\\t\\t_sprite.z = _vector4.z;\\n\\t\\t\\t\\t\\t\\t_sprite.renderOrder = object.renderOrder;\\n\\t\\t\\t\\t\\t\\t_sprite.object = object;\\n\\n\\t\\t\\t\\t\\t\\t_sprite.rotation = object.rotation;\\n\\n\\t\\t\\t\\t\\t\\t_sprite.scale.x = object.scale.x * Math.abs( _sprite.x - ( _vector4.x + camera.projectionMatrix.elements[ 0 ] ) / ( _vector4.w + camera.projectionMatrix.elements[ 12 ] ) );\\n\\t\\t\\t\\t\\t\\t_sprite.scale.y = object.scale.y * Math.abs( _sprite.y - ( _vector4.y + camera.projectionMatrix.elements[ 5 ] ) / ( _vector4.w + camera.projectionMatrix.elements[ 13 ] ) );\\n\\n\\t\\t\\t\\t\\t\\t_sprite.material = object.material;\\n\\n\\t\\t\\t\\t\\t\\t_renderData.elements.push( _sprite );\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( sortElements === true ) {\\n\\n\\t\\t\\t\\t_renderData.elements.sort( painterSort );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn _renderData;\\n\\n\\t\\t};\\n\\n\\t\\t// Pools\\n\\n\\t\\tfunction getNextObjectInPool() {\\n\\n\\t\\t\\tif ( _objectCount === _objectPoolLength ) {\\n\\n\\t\\t\\t\\tvar object = new THREE.RenderableObject();\\n\\t\\t\\t\\t_objectPool.push( object );\\n\\t\\t\\t\\t_objectPoolLength ++;\\n\\t\\t\\t\\t_objectCount ++;\\n\\t\\t\\t\\treturn object;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn _objectPool[ _objectCount ++ ];\\n\\n\\t\\t}\\n\\n\\t\\tfunction getNextVertexInPool() {\\n\\n\\t\\t\\tif ( _vertexCount === _vertexPoolLength ) {\\n\\n\\t\\t\\t\\tvar vertex = new THREE.RenderableVertex();\\n\\t\\t\\t\\t_vertexPool.push( vertex );\\n\\t\\t\\t\\t_vertexPoolLength ++;\\n\\t\\t\\t\\t_vertexCount ++;\\n\\t\\t\\t\\treturn vertex;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn _vertexPool[ _vertexCount ++ ];\\n\\n\\t\\t}\\n\\n\\t\\tfunction getNextFaceInPool() {\\n\\n\\t\\t\\tif ( _faceCount === _facePoolLength ) {\\n\\n\\t\\t\\t\\tvar face = new THREE.RenderableFace();\\n\\t\\t\\t\\t_facePool.push( face );\\n\\t\\t\\t\\t_facePoolLength ++;\\n\\t\\t\\t\\t_faceCount ++;\\n\\t\\t\\t\\treturn face;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn _facePool[ _faceCount ++ ];\\n\\n\\n\\t\\t}\\n\\n\\t\\tfunction getNextLineInPool() {\\n\\n\\t\\t\\tif ( _lineCount === _linePoolLength ) {\\n\\n\\t\\t\\t\\tvar line = new THREE.RenderableLine();\\n\\t\\t\\t\\t_linePool.push( line );\\n\\t\\t\\t\\t_linePoolLength ++;\\n\\t\\t\\t\\t_lineCount ++;\\n\\t\\t\\t\\treturn line;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn _linePool[ _lineCount ++ ];\\n\\n\\t\\t}\\n\\n\\t\\tfunction getNextSpriteInPool() {\\n\\n\\t\\t\\tif ( _spriteCount === _spritePoolLength ) {\\n\\n\\t\\t\\t\\tvar sprite = new THREE.RenderableSprite();\\n\\t\\t\\t\\t_spritePool.push( sprite );\\n\\t\\t\\t\\t_spritePoolLength ++;\\n\\t\\t\\t\\t_spriteCount ++;\\n\\t\\t\\t\\treturn sprite;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn _spritePool[ _spriteCount ++ ];\\n\\n\\t\\t}\\n\\n\\t\\t//\\n\\n\\t\\tfunction painterSort( a, b ) {\\n\\n\\t\\t\\tif ( a.renderOrder !== b.renderOrder ) {\\n\\n\\t\\t\\t\\treturn a.renderOrder - b.renderOrder;\\n\\n\\t\\t\\t} else if ( a.z !== b.z ) {\\n\\n\\t\\t\\t\\treturn b.z - a.z;\\n\\n\\t\\t\\t} else if ( a.id !== b.id ) {\\n\\n\\t\\t\\t\\treturn a.id - b.id;\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\treturn 0;\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tfunction clipLine( s1, s2 ) {\\n\\n\\t\\t\\tvar alpha1 = 0, alpha2 = 1,\\n\\n\\t\\t\\t// Calculate the boundary coordinate of each vertex for the near and far clip planes,\\n\\t\\t\\t// Z = -1 and Z = +1, respectively.\\n\\t\\t\\tbc1near =  s1.z + s1.w,\\n\\t\\t\\tbc2near =  s2.z + s2.w,\\n\\t\\t\\tbc1far =  - s1.z + s1.w,\\n\\t\\t\\tbc2far =  - s2.z + s2.w;\\n\\n\\t\\t\\tif ( bc1near >= 0 && bc2near >= 0 && bc1far >= 0 && bc2far >= 0 ) {\\n\\n\\t\\t\\t\\t// Both vertices lie entirely within all clip planes.\\n\\t\\t\\t\\treturn true;\\n\\n\\t\\t\\t} else if ( ( bc1near < 0 && bc2near < 0 ) || ( bc1far < 0 && bc2far < 0 ) ) {\\n\\n\\t\\t\\t\\t// Both vertices lie entirely outside one of the clip planes.\\n\\t\\t\\t\\treturn false;\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t// The line segment spans at least one clip plane.\\n\\n\\t\\t\\t\\tif ( bc1near < 0 ) {\\n\\n\\t\\t\\t\\t\\t// v1 lies outside the near plane, v2 inside\\n\\t\\t\\t\\t\\talpha1 = Math.max( alpha1, bc1near / ( bc1near - bc2near ) );\\n\\n\\t\\t\\t\\t} else if ( bc2near < 0 ) {\\n\\n\\t\\t\\t\\t\\t// v2 lies outside the near plane, v1 inside\\n\\t\\t\\t\\t\\talpha2 = Math.min( alpha2, bc1near / ( bc1near - bc2near ) );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( bc1far < 0 ) {\\n\\n\\t\\t\\t\\t\\t// v1 lies outside the far plane, v2 inside\\n\\t\\t\\t\\t\\talpha1 = Math.max( alpha1, bc1far / ( bc1far - bc2far ) );\\n\\n\\t\\t\\t\\t} else if ( bc2far < 0 ) {\\n\\n\\t\\t\\t\\t\\t// v2 lies outside the far plane, v2 inside\\n\\t\\t\\t\\t\\talpha2 = Math.min( alpha2, bc1far / ( bc1far - bc2far ) );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( alpha2 < alpha1 ) {\\n\\n\\t\\t\\t\\t\\t// The line segment spans two boundaries, but is outside both of them.\\n\\t\\t\\t\\t\\t// (This can't happen when we're only clipping against just near/far but good\\n\\t\\t\\t\\t\\t//  to leave the check here for future usage if other clip planes are added.)\\n\\t\\t\\t\\t\\treturn false;\\n\\n\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t// Update the s1 and s2 vertices to match the clipped line segment.\\n\\t\\t\\t\\t\\ts1.lerp( s2, alpha1 );\\n\\t\\t\\t\\t\\ts2.lerp( s1, 1 - alpha2 );\\n\\n\\t\\t\\t\\t\\treturn true;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t};\\n\\n};\",\"module.exports = function( THREE ){\\n\\t/**\\n\\t * @author felixturner / http://airtight.cc/\\n\\t *\\n\\t * RGB Shift Shader\\n\\t * Shifts red and blue channels from center in opposite directions\\n\\t * Ported from http://kriss.cx/tom/2009/05/rgb-shift/\\n\\t * by Tom Butterworth / http://kriss.cx/tom/\\n\\t *\\n\\t * amount: shift distance (1 is width of input)\\n\\t * angle: shift angle in radians\\n\\t */\\n\\n\\tTHREE.RGBShiftShader = {\\n\\n\\t\\tuniforms: {\\n\\n\\t\\t\\t\\\"tDiffuse\\\": { type: \\\"t\\\", value: null },\\n\\t\\t\\t\\\"amount\\\":   { type: \\\"f\\\", value: 0.005 },\\n\\t\\t\\t\\\"angle\\\":    { type: \\\"f\\\", value: 0.0 }\\n\\n\\t\\t},\\n\\n\\t\\tvertexShader: [\\n\\n\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\n\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t\\\"vUv = uv;\\\",\\n\\t\\t\\t\\t\\\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\\",\\n\\n\\t\\t\\t\\\"}\\\"\\n\\n\\t\\t].join( \\\"\\\\n\\\" ),\\n\\n\\t\\tfragmentShader: [\\n\\n\\t\\t\\t\\\"uniform sampler2D tDiffuse;\\\",\\n\\t\\t\\t\\\"uniform float amount;\\\",\\n\\t\\t\\t\\\"uniform float angle;\\\",\\n\\n\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\n\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t\\\"vec2 offset = amount * vec2( cos(angle), sin(angle));\\\",\\n\\t\\t\\t\\t\\\"vec4 cr = texture2D(tDiffuse, vUv + offset);\\\",\\n\\t\\t\\t\\t\\\"vec4 cga = texture2D(tDiffuse, vUv);\\\",\\n\\t\\t\\t\\t\\\"vec4 cb = texture2D(tDiffuse, vUv - offset);\\\",\\n\\t\\t\\t\\t\\\"gl_FragColor = vec4(cr.r, cga.g, cb.b, cga.a);\\\",\\n\\n\\t\\t\\t\\\"}\\\"\\n\\n\\t\\t].join( \\\"\\\\n\\\" )\\n\\n\\t};\\n\\n}\\n\",\"module.exports = function( THREE ){\\n\\n\\t/**\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t */\\n\\n\\tTHREE.RenderPass = function ( scene, camera, overrideMaterial, clearColor, clearAlpha ) {\\n\\n\\t\\tthis.scene = scene;\\n\\t\\tthis.camera = camera;\\n\\n\\t\\tthis.overrideMaterial = overrideMaterial;\\n\\n\\t\\tthis.clearColor = clearColor;\\n\\t\\tthis.clearAlpha = ( clearAlpha !== undefined ) ? clearAlpha : 1;\\n\\n\\t\\tthis.oldClearColor = new THREE.Color();\\n\\t\\tthis.oldClearAlpha = 1;\\n\\n\\t\\tthis.enabled = true;\\n\\t\\tthis.clear = true;\\n\\t\\tthis.needsSwap = false;\\n\\n\\t};\\n\\n\\tTHREE.RenderPass.prototype = {\\n\\n\\t\\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\\n\\n\\t\\t\\tthis.scene.overrideMaterial = this.overrideMaterial;\\n\\n\\t\\t\\tif ( this.clearColor ) {\\n\\n\\t\\t\\t\\tthis.oldClearColor.copy( renderer.getClearColor() );\\n\\t\\t\\t\\tthis.oldClearAlpha = renderer.getClearAlpha();\\n\\n\\t\\t\\t\\trenderer.setClearColor( this.clearColor, this.clearAlpha );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\trenderer.render( this.scene, this.camera, readBuffer, this.clear );\\n\\n\\t\\t\\tif ( this.clearColor ) {\\n\\n\\t\\t\\t\\trenderer.setClearColor( this.oldClearColor, this.oldClearAlpha );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.scene.overrideMaterial = null;\\n\\n\\t\\t}\\n\\n\\t};\\n\\n};\",\"module.exports = function( THREE ){\\n\\t/**\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t *\\n\\t * Screen-space ambient occlusion shader\\n\\t * - ported from\\n\\t *   SSAO GLSL shader v1.2\\n\\t *   assembled by Martins Upitis (martinsh) (http://devlog-martinsh.blogspot.com)\\n\\t *   original technique is made by ArKano22 (http://www.gamedev.net/topic/550699-ssao-no-halo-artifacts/)\\n\\t * - modifications\\n\\t * - modified to use RGBA packed depth texture (use clear color 1,1,1,1 for depth pass)\\n\\t * - refactoring and optimizations\\n\\t */\\n\\n\\tTHREE.SSAOShader = {\\n\\n\\t\\tuniforms: {\\n\\n\\t\\t\\t\\\"tDiffuse\\\":     { type: \\\"t\\\", value: null },\\n\\t\\t\\t\\\"tDepth\\\":       { type: \\\"t\\\", value: null },\\n\\t\\t\\t\\\"size\\\":         { type: \\\"v2\\\", value: new THREE.Vector2( 512, 512 ) },\\n\\t\\t\\t\\\"cameraNear\\\":   { type: \\\"f\\\", value: 1 },\\n\\t\\t\\t\\\"cameraFar\\\":    { type: \\\"f\\\", value: 100 },\\n\\t\\t\\t\\\"onlyAO\\\":       { type: \\\"i\\\", value: 0 },\\n\\t\\t\\t\\\"aoClamp\\\":      { type: \\\"f\\\", value: 0.5 },\\n\\t\\t\\t\\\"lumInfluence\\\": { type: \\\"f\\\", value: 0.5 }\\n\\n\\t\\t},\\n\\n\\t\\tvertexShader: [\\n\\n\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\n\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t\\\"vUv = uv;\\\",\\n\\n\\t\\t\\t\\t\\\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\\",\\n\\n\\t\\t\\t\\\"}\\\"\\n\\n\\t\\t].join( \\\"\\\\n\\\" ),\\n\\n\\t\\tfragmentShader: [\\n\\n\\t\\t\\t\\\"uniform float cameraNear;\\\",\\n\\t\\t\\t\\\"uniform float cameraFar;\\\",\\n\\n\\t\\t\\t\\\"uniform bool onlyAO;\\\",      // use only ambient occlusion pass?\\n\\n\\t\\t\\t\\\"uniform vec2 size;\\\",        // texture width, height\\n\\t\\t\\t\\\"uniform float aoClamp;\\\",    // depth clamp - reduces haloing at screen edges\\n\\n\\t\\t\\t\\\"uniform float lumInfluence;\\\",  // how much luminance affects occlusion\\n\\n\\t\\t\\t\\\"uniform sampler2D tDiffuse;\\\",\\n\\t\\t\\t\\\"uniform sampler2D tDepth;\\\",\\n\\n\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\n\\t\\t\\t// \\\"#define PI 3.14159265\\\",\\n\\t\\t\\t\\\"#define DL 2.399963229728653\\\",  // PI * ( 3.0 - sqrt( 5.0 ) )\\n\\t\\t\\t\\\"#define EULER 2.718281828459045\\\",\\n\\n\\t\\t\\t// user variables\\n\\n\\t\\t\\t\\\"const int samples = 8;\\\",     // ao sample count\\n\\t\\t\\t\\\"const float radius = 5.0;\\\",  // ao radius\\n\\n\\t\\t\\t\\\"const bool useNoise = false;\\\",      // use noise instead of pattern for sample dithering\\n\\t\\t\\t\\\"const float noiseAmount = 0.0003;\\\", // dithering amount\\n\\n\\t\\t\\t\\\"const float diffArea = 0.4;\\\",   // self-shadowing reduction\\n\\t\\t\\t\\\"const float gDisplace = 0.4;\\\",  // gauss bell center\\n\\n\\n\\t\\t\\t// RGBA depth\\n\\n\\t\\t\\t\\\"float unpackDepth( const in vec4 rgba_depth ) {\\\",\\n\\n\\t\\t\\t\\t\\\"const vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\\\",\\n\\t\\t\\t\\t\\\"float depth = dot( rgba_depth, bit_shift );\\\",\\n\\t\\t\\t\\t\\\"return depth;\\\",\\n\\n\\t\\t\\t\\\"}\\\",\\n\\n\\t\\t\\t// generating noise / pattern texture for dithering\\n\\n\\t\\t\\t\\\"vec2 rand( const vec2 coord ) {\\\",\\n\\n\\t\\t\\t\\t\\\"vec2 noise;\\\",\\n\\n\\t\\t\\t\\t\\\"if ( useNoise ) {\\\",\\n\\n\\t\\t\\t\\t\\t\\\"float nx = dot ( coord, vec2( 12.9898, 78.233 ) );\\\",\\n\\t\\t\\t\\t\\t\\\"float ny = dot ( coord, vec2( 12.9898, 78.233 ) * 2.0 );\\\",\\n\\n\\t\\t\\t\\t\\t\\\"noise = clamp( fract ( 43758.5453 * sin( vec2( nx, ny ) ) ), 0.0, 1.0 );\\\",\\n\\n\\t\\t\\t\\t\\\"} else {\\\",\\n\\n\\t\\t\\t\\t\\t\\\"float ff = fract( 1.0 - coord.s * ( size.x / 2.0 ) );\\\",\\n\\t\\t\\t\\t\\t\\\"float gg = fract( coord.t * ( size.y / 2.0 ) );\\\",\\n\\n\\t\\t\\t\\t\\t\\\"noise = vec2( 0.25, 0.75 ) * vec2( ff ) + vec2( 0.75, 0.25 ) * gg;\\\",\\n\\n\\t\\t\\t\\t\\\"}\\\",\\n\\n\\t\\t\\t\\t\\\"return ( noise * 2.0  - 1.0 ) * noiseAmount;\\\",\\n\\n\\t\\t\\t\\\"}\\\",\\n\\n\\t\\t\\t\\\"float readDepth( const in vec2 coord ) {\\\",\\n\\n\\t\\t\\t\\t\\\"float cameraFarPlusNear = cameraFar + cameraNear;\\\",\\n\\t\\t\\t\\t\\\"float cameraFarMinusNear = cameraFar - cameraNear;\\\",\\n\\t\\t\\t\\t\\\"float cameraCoef = 2.0 * cameraNear;\\\",\\n\\n\\t\\t\\t\\t// \\\"return ( 2.0 * cameraNear ) / ( cameraFar + cameraNear - unpackDepth( texture2D( tDepth, coord ) ) * ( cameraFar - cameraNear ) );\\\",\\n\\t\\t\\t\\t\\\"return cameraCoef / ( cameraFarPlusNear - unpackDepth( texture2D( tDepth, coord ) ) * cameraFarMinusNear );\\\",\\n\\n\\n\\t\\t\\t\\\"}\\\",\\n\\n\\t\\t\\t\\\"float compareDepths( const in float depth1, const in float depth2, inout int far ) {\\\",\\n\\n\\t\\t\\t\\t\\\"float garea = 2.0;\\\",                         // gauss bell width\\n\\t\\t\\t\\t\\\"float diff = ( depth1 - depth2 ) * 100.0;\\\",  // depth difference (0-100)\\n\\n\\t\\t\\t\\t// reduce left bell width to avoid self-shadowing\\n\\n\\t\\t\\t\\t\\\"if ( diff < gDisplace ) {\\\",\\n\\n\\t\\t\\t\\t\\t\\\"garea = diffArea;\\\",\\n\\n\\t\\t\\t\\t\\\"} else {\\\",\\n\\n\\t\\t\\t\\t\\t\\\"far = 1;\\\",\\n\\n\\t\\t\\t\\t\\\"}\\\",\\n\\n\\t\\t\\t\\t\\\"float dd = diff - gDisplace;\\\",\\n\\t\\t\\t\\t\\\"float gauss = pow( EULER, -2.0 * dd * dd / ( garea * garea ) );\\\",\\n\\t\\t\\t\\t\\\"return gauss;\\\",\\n\\n\\t\\t\\t\\\"}\\\",\\n\\n\\t\\t\\t\\\"float calcAO( float depth, float dw, float dh ) {\\\",\\n\\n\\t\\t\\t\\t\\\"float dd = radius - depth * radius;\\\",\\n\\t\\t\\t\\t\\\"vec2 vv = vec2( dw, dh );\\\",\\n\\n\\t\\t\\t\\t\\\"vec2 coord1 = vUv + dd * vv;\\\",\\n\\t\\t\\t\\t\\\"vec2 coord2 = vUv - dd * vv;\\\",\\n\\n\\t\\t\\t\\t\\\"float temp1 = 0.0;\\\",\\n\\t\\t\\t\\t\\\"float temp2 = 0.0;\\\",\\n\\n\\t\\t\\t\\t\\\"int far = 0;\\\",\\n\\t\\t\\t\\t\\\"temp1 = compareDepths( depth, readDepth( coord1 ), far );\\\",\\n\\n\\t\\t\\t\\t// DEPTH EXTRAPOLATION\\n\\n\\t\\t\\t\\t\\\"if ( far > 0 ) {\\\",\\n\\n\\t\\t\\t\\t\\t\\\"temp2 = compareDepths( readDepth( coord2 ), depth, far );\\\",\\n\\t\\t\\t\\t\\t\\\"temp1 += ( 1.0 - temp1 ) * temp2;\\\",\\n\\n\\t\\t\\t\\t\\\"}\\\",\\n\\n\\t\\t\\t\\t\\\"return temp1;\\\",\\n\\n\\t\\t\\t\\\"}\\\",\\n\\n\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t\\\"vec2 noise = rand( vUv );\\\",\\n\\t\\t\\t\\t\\\"float depth = readDepth( vUv );\\\",\\n\\n\\t\\t\\t\\t\\\"float tt = clamp( depth, aoClamp, 1.0 );\\\",\\n\\n\\t\\t\\t\\t\\\"float w = ( 1.0 / size.x )  / tt + ( noise.x * ( 1.0 - noise.x ) );\\\",\\n\\t\\t\\t\\t\\\"float h = ( 1.0 / size.y ) / tt + ( noise.y * ( 1.0 - noise.y ) );\\\",\\n\\n\\t\\t\\t\\t\\\"float ao = 0.0;\\\",\\n\\n\\t\\t\\t\\t\\\"float dz = 1.0 / float( samples );\\\",\\n\\t\\t\\t\\t\\\"float z = 1.0 - dz / 2.0;\\\",\\n\\t\\t\\t\\t\\\"float l = 0.0;\\\",\\n\\n\\t\\t\\t\\t\\\"for ( int i = 0; i <= samples; i ++ ) {\\\",\\n\\n\\t\\t\\t\\t\\t\\\"float r = sqrt( 1.0 - z );\\\",\\n\\n\\t\\t\\t\\t\\t\\\"float pw = cos( l ) * r;\\\",\\n\\t\\t\\t\\t\\t\\\"float ph = sin( l ) * r;\\\",\\n\\t\\t\\t\\t\\t\\\"ao += calcAO( depth, pw * w, ph * h );\\\",\\n\\t\\t\\t\\t\\t\\\"z = z - dz;\\\",\\n\\t\\t\\t\\t\\t\\\"l = l + DL;\\\",\\n\\n\\t\\t\\t\\t\\\"}\\\",\\n\\n\\t\\t\\t\\t\\\"ao /= float( samples );\\\",\\n\\t\\t\\t\\t\\\"ao = 1.0 - ao;\\\",\\n\\n\\t\\t\\t\\t\\\"vec3 color = texture2D( tDiffuse, vUv ).rgb;\\\",\\n\\n\\t\\t\\t\\t\\\"vec3 lumcoeff = vec3( 0.299, 0.587, 0.114 );\\\",\\n\\t\\t\\t\\t\\\"float lum = dot( color.rgb, lumcoeff );\\\",\\n\\t\\t\\t\\t\\\"vec3 luminance = vec3( lum );\\\",\\n\\n\\t\\t\\t\\t\\\"vec3 final = vec3( color * mix( vec3( ao ), vec3( 1.0 ), luminance * lumInfluence ) );\\\",  // mix( color * ao, white, luminance )\\n\\n\\t\\t\\t\\t\\\"if ( onlyAO ) {\\\",\\n\\n\\t\\t\\t\\t\\t\\\"final = vec3( mix( vec3( ao ), vec3( 1.0 ), luminance * lumInfluence ) );\\\",  // ambient occlusion only\\n\\n\\t\\t\\t\\t\\\"}\\\",\\n\\n\\t\\t\\t\\t\\\"gl_FragColor = vec4( final, 1.0 );\\\",\\n\\n\\t\\t\\t\\\"}\\\"\\n\\n\\t\\t].join( \\\"\\\\n\\\" )\\n\\n\\t};\\n\\n}\\n\",\"module.exports = function( THREE ){\\n\\n\\t/**\\n\\t * @author mrdoob / http://mrdoob.com/\\n\\t * @author zz85 / http://joshuakoo.com/\\n\\t */\\n\\n\\tTHREE.SVGLoader = function ( manager ) {\\n\\n\\t\\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\\n\\n\\t};\\n\\n\\tTHREE.SVGLoader.prototype = {\\n\\n\\t\\tconstructor: THREE.SVGLoader,\\n\\n\\t\\tload: function ( url, onLoad, onProgress, onError ) {\\n\\n\\t\\t\\tvar scope = this;\\n\\n\\t\\t\\tvar parser = new DOMParser();\\n\\n\\t\\t\\tvar loader = new THREE.XHRLoader( scope.manager );\\n\\t\\t\\tloader.load( url, function ( svgString ) {\\n\\n\\t\\t\\t\\tvar doc = parser.parseFromString( svgString, 'image/svg+xml' );  // application/xml\\n\\n\\t\\t\\t\\tonLoad( doc.documentElement );\\n\\n\\t\\t\\t}, onProgress, onError );\\n\\n\\t\\t}\\n\\n\\t};\\n\\n};\",\"module.exports = function( THREE ){\\n\\n\\t/**\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t */\\n\\n\\tTHREE.SavePass = function ( renderTarget ) {\\n\\n\\t\\tif ( THREE.CopyShader === undefined )\\n\\t\\t\\tconsole.error( \\\"THREE.SavePass relies on THREE.CopyShader\\\" );\\n\\n\\t\\tvar shader = THREE.CopyShader;\\n\\n\\t\\tthis.textureID = \\\"tDiffuse\\\";\\n\\n\\t\\tthis.uniforms = THREE.UniformsUtils.clone( shader.uniforms );\\n\\n\\t\\tthis.material = new THREE.ShaderMaterial( {\\n\\n\\t\\t\\tuniforms: this.uniforms,\\n\\t\\t\\tvertexShader: shader.vertexShader,\\n\\t\\t\\tfragmentShader: shader.fragmentShader\\n\\n\\t\\t} );\\n\\n\\t\\tthis.renderTarget = renderTarget;\\n\\n\\t\\tif ( this.renderTarget === undefined ) {\\n\\n\\t\\t\\tthis.renderTargetParameters = { minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, format: THREE.RGBFormat, stencilBuffer: false };\\n\\t\\t\\tthis.renderTarget = new THREE.WebGLRenderTarget( window.innerWidth, window.innerHeight, this.renderTargetParameters );\\n\\n\\t\\t}\\n\\n\\t\\tthis.enabled = true;\\n\\t\\tthis.needsSwap = false;\\n\\t\\tthis.clear = false;\\n\\n\\n\\t\\tthis.camera = new THREE.OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\\n\\t\\tthis.scene  = new THREE.Scene();\\n\\n\\t\\tthis.quad = new THREE.Mesh( new THREE.PlaneBufferGeometry( 2, 2 ), null );\\n\\t\\tthis.scene.add( this.quad );\\n\\n\\t};\\n\\n\\tTHREE.SavePass.prototype = {\\n\\n\\t\\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\\n\\n\\t\\t\\tif ( this.uniforms[ this.textureID ] ) {\\n\\n\\t\\t\\t\\tthis.uniforms[ this.textureID ].value = readBuffer;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.quad.material = this.material;\\n\\n\\t\\t\\trenderer.render( this.scene, this.camera, this.renderTarget, this.clear );\\n\\n\\t\\t}\\n\\n\\t};\\n\\n};\\n\",\"module.exports = function( THREE ){\\n\\t/**\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t *\\n\\t * Sepia tone shader\\n\\t * based on glfx.js sepia shader\\n\\t * https://github.com/evanw/glfx.js\\n\\t */\\n\\n\\tTHREE.SepiaShader = {\\n\\n\\t\\tuniforms: {\\n\\n\\t\\t\\t\\\"tDiffuse\\\": { type: \\\"t\\\", value: null },\\n\\t\\t\\t\\\"amount\\\":   { type: \\\"f\\\", value: 1.0 }\\n\\n\\t\\t},\\n\\n\\t\\tvertexShader: [\\n\\n\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\n\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t\\\"vUv = uv;\\\",\\n\\t\\t\\t\\t\\\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\\",\\n\\n\\t\\t\\t\\\"}\\\"\\n\\n\\t\\t].join( \\\"\\\\n\\\" ),\\n\\n\\t\\tfragmentShader: [\\n\\n\\t\\t\\t\\\"uniform float amount;\\\",\\n\\n\\t\\t\\t\\\"uniform sampler2D tDiffuse;\\\",\\n\\n\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\n\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t\\\"vec4 color = texture2D( tDiffuse, vUv );\\\",\\n\\t\\t\\t\\t\\\"vec3 c = color.rgb;\\\",\\n\\n\\t\\t\\t\\t\\\"color.r = dot( c, vec3( 1.0 - 0.607 * amount, 0.769 * amount, 0.189 * amount ) );\\\",\\n\\t\\t\\t\\t\\\"color.g = dot( c, vec3( 0.349 * amount, 1.0 - 0.314 * amount, 0.168 * amount ) );\\\",\\n\\t\\t\\t\\t\\\"color.b = dot( c, vec3( 0.272 * amount, 0.534 * amount, 1.0 - 0.869 * amount ) );\\\",\\n\\n\\t\\t\\t\\t\\\"gl_FragColor = vec4( min( vec3( 1.0 ), color.rgb ), color.a );\\\",\\n\\n\\t\\t\\t\\\"}\\\"\\n\\n\\t\\t].join( \\\"\\\\n\\\" )\\n\\n\\t};\\n\\n}\\n\",\"module.exports = function( THREE ){\\n\\n\\t/**\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t */\\n\\n\\tTHREE.ShaderPass = function ( shader, textureID ) {\\n\\n\\t\\tthis.textureID = ( textureID !== undefined ) ? textureID : \\\"tDiffuse\\\";\\n\\n\\t\\tthis.uniforms = THREE.UniformsUtils.clone( shader.uniforms );\\n\\n\\t\\tthis.material = new THREE.ShaderMaterial( {\\n\\n\\t\\t\\tdefines: shader.defines || {},\\n\\t\\t\\tuniforms: this.uniforms,\\n\\t\\t\\tvertexShader: shader.vertexShader,\\n\\t\\t\\tfragmentShader: shader.fragmentShader\\n\\n\\t\\t} );\\n\\n\\t\\tthis.renderToScreen = false;\\n\\n\\t\\tthis.enabled = true;\\n\\t\\tthis.needsSwap = true;\\n\\t\\tthis.clear = false;\\n\\n\\n\\t\\tthis.camera = new THREE.OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\\n\\t\\tthis.scene  = new THREE.Scene();\\n\\n\\t\\tthis.quad = new THREE.Mesh( new THREE.PlaneBufferGeometry( 2, 2 ), null );\\n\\t\\tthis.scene.add( this.quad );\\n\\n\\t};\\n\\n\\tTHREE.ShaderPass.prototype = {\\n\\n\\t\\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\\n\\n\\t\\t\\tif ( this.uniforms[ this.textureID ] ) {\\n\\n\\t\\t\\t\\tthis.uniforms[ this.textureID ].value = readBuffer;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.quad.material = this.material;\\n\\n\\t\\t\\tif ( this.renderToScreen ) {\\n\\n\\t\\t\\t\\trenderer.render( this.scene, this.camera );\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\trenderer.render( this.scene, this.camera, writeBuffer, this.clear );\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t};\\n\\n};\\n\",\"module.exports = function( THREE ){\\n\\t/**\\n\\t * @author flimshaw / http://charliehoey.com\\n\\t *\\n\\t * Technicolor Shader\\n\\t * Simulates the look of the two-strip technicolor process popular in early 20th century films.\\n\\t * More historical info here: http://www.widescreenmuseum.com/oldcolor/technicolor1.htm\\n\\t * Demo here: http://charliehoey.com/technicolor_shader/shader_test.html\\n\\t */\\n\\n\\tTHREE.TechnicolorShader = {\\n\\n\\t\\tuniforms: {\\n\\n\\t\\t\\t\\\"tDiffuse\\\": { type: \\\"t\\\", value: null },\\n\\n\\t\\t},\\n\\n\\t\\tvertexShader: [\\n\\n\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\n\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t\\\"vUv = uv;\\\",\\n\\t\\t\\t\\t\\\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\\",\\n\\n\\t\\t\\t\\\"}\\\"\\n\\n\\t\\t].join( \\\"\\\\n\\\" ),\\n\\n\\t\\tfragmentShader: [\\n\\n\\t\\t\\t\\\"uniform sampler2D tDiffuse;\\\",\\n\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\n\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t\\\"vec4 tex = texture2D( tDiffuse, vec2( vUv.x, vUv.y ) );\\\",\\n\\t\\t\\t\\t\\\"vec4 newTex = vec4(tex.r, (tex.g + tex.b) * .5, (tex.g + tex.b) * .5, 1.0);\\\",\\n\\n\\t\\t\\t\\t\\\"gl_FragColor = newTex;\\\",\\n\\n\\t\\t\\t\\\"}\\\"\\n\\n\\t\\t].join( \\\"\\\\n\\\" )\\n\\n\\t};\\n\\n}\\n\",\"module.exports = function( THREE ){\\n\\n\\t/**\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t */\\n\\n\\tTHREE.TexturePass = function ( texture, opacity ) {\\n\\n\\t\\tif ( THREE.CopyShader === undefined )\\n\\t\\t\\tconsole.error( \\\"THREE.TexturePass relies on THREE.CopyShader\\\" );\\n\\n\\t\\tvar shader = THREE.CopyShader;\\n\\n\\t\\tthis.uniforms = THREE.UniformsUtils.clone( shader.uniforms );\\n\\n\\t\\tthis.uniforms[ \\\"opacity\\\" ].value = ( opacity !== undefined ) ? opacity : 1.0;\\n\\t\\tthis.uniforms[ \\\"tDiffuse\\\" ].value = texture;\\n\\n\\t\\tthis.material = new THREE.ShaderMaterial( {\\n\\n\\t\\t\\tuniforms: this.uniforms,\\n\\t\\t\\tvertexShader: shader.vertexShader,\\n\\t\\t\\tfragmentShader: shader.fragmentShader\\n\\n\\t\\t} );\\n\\n\\t\\tthis.enabled = true;\\n\\t\\tthis.needsSwap = false;\\n\\n\\n\\t\\tthis.camera = new THREE.OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\\n\\t\\tthis.scene  = new THREE.Scene();\\n\\n\\t\\tthis.quad = new THREE.Mesh( new THREE.PlaneBufferGeometry( 2, 2 ), null );\\n\\t\\tthis.scene.add( this.quad );\\n\\n\\t};\\n\\n\\tTHREE.TexturePass.prototype = {\\n\\n\\t\\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\\n\\n\\t\\t\\tthis.quad.material = this.material;\\n\\n\\t\\t\\trenderer.render( this.scene, this.camera, readBuffer );\\n\\n\\t\\t}\\n\\n\\t};\\n\\n};\",\"module.exports = function( THREE ){\\n\\t/**\\n\\t * @author miibond\\n\\t *\\n\\t * Full-screen tone-mapping shader based on http://www.graphics.cornell.edu/~jaf/publications/sig02_paper.pdf\\n\\t */\\n\\n\\tTHREE.ToneMapShader = {\\n\\n\\t\\tuniforms: {\\n\\n\\t\\t\\t\\\"tDiffuse\\\": { type: \\\"t\\\", value: null },\\n\\t\\t\\t\\\"averageLuminance\\\":  { type: \\\"f\\\", value: 1.0 },\\n\\t\\t\\t\\\"luminanceMap\\\":  { type: \\\"t\\\", value: null },\\n\\t\\t\\t\\\"maxLuminance\\\":  { type: \\\"f\\\", value: 16.0 },\\n\\t\\t\\t\\\"middleGrey\\\":  { type: \\\"f\\\", value: 0.6 }\\n\\t\\t},\\n\\n\\t\\tvertexShader: [\\n\\n\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\n\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t\\\"vUv = uv;\\\",\\n\\t\\t\\t\\t\\\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\\",\\n\\n\\t\\t\\t\\\"}\\\"\\n\\n\\t\\t].join( \\\"\\\\n\\\" ),\\n\\n\\t\\tfragmentShader: [\\n\\n\\t\\t\\t\\\"uniform sampler2D tDiffuse;\\\",\\n\\n\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\n\\t\\t\\t\\\"uniform float middleGrey;\\\",\\n\\t\\t\\t\\\"uniform float maxLuminance;\\\",\\n\\t\\t\\t\\\"#ifdef ADAPTED_LUMINANCE\\\",\\n\\t\\t\\t\\t\\\"uniform sampler2D luminanceMap;\\\",\\n\\t\\t\\t\\\"#else\\\",\\n\\t\\t\\t\\t\\\"uniform float averageLuminance;\\\",\\n\\t\\t\\t\\\"#endif\\\",\\n\\t\\t\\t\\n\\t\\t\\t\\\"const vec3 LUM_CONVERT = vec3(0.299, 0.587, 0.114);\\\",\\n\\n\\t\\t\\t\\\"vec3 ToneMap( vec3 vColor ) {\\\",\\n\\t\\t\\t\\t\\\"#ifdef ADAPTED_LUMINANCE\\\",\\n\\t\\t\\t\\t\\t// Get the calculated average luminance \\n\\t\\t\\t\\t\\t\\\"float fLumAvg = texture2D(luminanceMap, vec2(0.5, 0.5)).r;\\\",\\n\\t\\t\\t\\t\\\"#else\\\",\\n\\t\\t\\t\\t\\t\\\"float fLumAvg = averageLuminance;\\\",\\n\\t\\t\\t\\t\\\"#endif\\\",\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t// Calculate the luminance of the current pixel\\n\\t\\t\\t\\t\\\"float fLumPixel = dot(vColor, LUM_CONVERT);\\\",\\n\\n\\t\\t\\t\\t// Apply the modified operator (Eq. 4)\\n\\t\\t\\t\\t\\\"float fLumScaled = (fLumPixel * middleGrey) / fLumAvg;\\\",\\n\\n\\t\\t\\t\\t\\\"float fLumCompressed = (fLumScaled * (1.0 + (fLumScaled / (maxLuminance * maxLuminance)))) / (1.0 + fLumScaled);\\\",\\n\\t\\t\\t\\t\\\"return fLumCompressed * vColor;\\\",\\n\\t\\t\\t\\\"}\\\",\\n\\n\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t\\\"vec4 texel = texture2D( tDiffuse, vUv );\\\",\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\\"gl_FragColor = vec4( ToneMap( texel.xyz ), texel.w );\\\",\\n\\n\\t\\t\\t\\\"}\\\"\\n\\n\\t\\t].join( \\\"\\\\n\\\" )\\n\\n\\t};\\n\\n}\\n\",\"module.exports = function( THREE ){\\n\\t/**\\n\\t * @author zz85 / http://www.lab4games.net/zz85/blog\\n\\t *\\n\\t * Triangle blur shader\\n\\t * based on glfx.js triangle blur shader\\n\\t * https://github.com/evanw/glfx.js\\n\\t *\\n\\t * A basic blur filter, which convolves the image with a\\n\\t * pyramid filter. The pyramid filter is separable and is applied as two\\n\\t * perpendicular triangle filters.\\n\\t */\\n\\n\\tTHREE.TriangleBlurShader = {\\n\\n\\t\\tuniforms : {\\n\\n\\t\\t\\t\\\"texture\\\": { type: \\\"t\\\", value: null },\\n\\t\\t\\t\\\"delta\\\":   { type: \\\"v2\\\", value: new THREE.Vector2( 1, 1 ) }\\n\\n\\t\\t},\\n\\n\\t\\tvertexShader: [\\n\\n\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\n\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t\\\"vUv = uv;\\\",\\n\\t\\t\\t\\t\\\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\\",\\n\\n\\t\\t\\t\\\"}\\\"\\n\\n\\t\\t].join( \\\"\\\\n\\\" ),\\n\\n\\t\\tfragmentShader: [\\n\\n\\t\\t\\t\\\"#define ITERATIONS 10.0\\\",\\n\\n\\t\\t\\t\\\"uniform sampler2D texture;\\\",\\n\\t\\t\\t\\\"uniform vec2 delta;\\\",\\n\\n\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\n\\t\\t\\t\\\"float random( vec3 scale, float seed ) {\\\",\\n\\n\\t\\t\\t\\t// use the fragment position for a different seed per-pixel\\n\\n\\t\\t\\t\\t\\\"return fract( sin( dot( gl_FragCoord.xyz + seed, scale ) ) * 43758.5453 + seed );\\\",\\n\\n\\t\\t\\t\\\"}\\\",\\n\\n\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t\\\"vec4 color = vec4( 0.0 );\\\",\\n\\n\\t\\t\\t\\t\\\"float total = 0.0;\\\",\\n\\n\\t\\t\\t\\t// randomize the lookup values to hide the fixed number of samples\\n\\n\\t\\t\\t\\t\\\"float offset = random( vec3( 12.9898, 78.233, 151.7182 ), 0.0 );\\\",\\n\\n\\t\\t\\t\\t\\\"for ( float t = -ITERATIONS; t <= ITERATIONS; t ++ ) {\\\",\\n\\n\\t\\t\\t\\t\\t\\\"float percent = ( t + offset - 0.5 ) / ITERATIONS;\\\",\\n\\t\\t\\t\\t\\t\\\"float weight = 1.0 - abs( percent );\\\",\\n\\n\\t\\t\\t\\t\\t\\\"color += texture2D( texture, vUv + delta * percent ) * weight;\\\",\\n\\t\\t\\t\\t\\t\\\"total += weight;\\\",\\n\\n\\t\\t\\t\\t\\\"}\\\",\\n\\n\\t\\t\\t\\t\\\"gl_FragColor = color / total;\\\",\\n\\n\\t\\t\\t\\\"}\\\"\\n\\n\\t\\t].join( \\\"\\\\n\\\" )\\n\\n\\t};\\n\\n}\\n\",\"module.exports = function( THREE ){\\n\\t/**\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t *\\n\\t * Unpack RGBA depth shader\\n\\t * - show RGBA encoded depth as monochrome color\\n\\t */\\n\\n\\tTHREE.UnpackDepthRGBAShader = {\\n\\n\\t\\tuniforms: {\\n\\n\\t\\t\\t\\\"tDiffuse\\\": { type: \\\"t\\\", value: null },\\n\\t\\t\\t\\\"opacity\\\":  { type: \\\"f\\\", value: 1.0 }\\n\\n\\t\\t},\\n\\n\\t\\tvertexShader: [\\n\\n\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\n\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t\\\"vUv = uv;\\\",\\n\\t\\t\\t\\t\\\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\\",\\n\\n\\t\\t\\t\\\"}\\\"\\n\\n\\t\\t].join( \\\"\\\\n\\\" ),\\n\\n\\t\\tfragmentShader: [\\n\\n\\t\\t\\t\\\"uniform float opacity;\\\",\\n\\n\\t\\t\\t\\\"uniform sampler2D tDiffuse;\\\",\\n\\n\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\n\\t\\t\\t// RGBA depth\\n\\n\\t\\t\\t\\\"float unpackDepth( const in vec4 rgba_depth ) {\\\",\\n\\n\\t\\t\\t\\t\\\"const vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\\\",\\n\\t\\t\\t\\t\\\"float depth = dot( rgba_depth, bit_shift );\\\",\\n\\t\\t\\t\\t\\\"return depth;\\\",\\n\\n\\t\\t\\t\\\"}\\\",\\n\\n\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t\\\"float depth = 1.0 - unpackDepth( texture2D( tDiffuse, vUv ) );\\\",\\n\\t\\t\\t\\t\\\"gl_FragColor = opacity * vec4( vec3( depth ), 1.0 );\\\",\\n\\n\\t\\t\\t\\\"}\\\"\\n\\n\\t\\t].join( \\\"\\\\n\\\" )\\n\\n\\t};\\n\\n}\\n\",\"module.exports = function( THREE ){\\n\\t/**\\n\\t * @author zz85 / http://www.lab4games.net/zz85/blog\\n\\t *\\n\\t * Two pass Gaussian blur filter (horizontal and vertical blur shaders)\\n\\t * - described in http://www.gamerendering.com/2008/10/11/gaussian-blur-filter-shader/\\n\\t *   and used in http://www.cake23.de/traveling-wavefronts-lit-up.html\\n\\t *\\n\\t * - 9 samples per pass\\n\\t * - standard deviation 2.7\\n\\t * - \\\"h\\\" and \\\"v\\\" parameters should be set to \\\"1 / width\\\" and \\\"1 / height\\\"\\n\\t */\\n\\n\\tTHREE.VerticalBlurShader = {\\n\\n\\t\\tuniforms: {\\n\\n\\t\\t\\t\\\"tDiffuse\\\": { type: \\\"t\\\", value: null },\\n\\t\\t\\t\\\"v\\\":        { type: \\\"f\\\", value: 1.0 / 512.0 }\\n\\n\\t\\t},\\n\\n\\t\\tvertexShader: [\\n\\n\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\n\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t\\\"vUv = uv;\\\",\\n\\t\\t\\t\\t\\\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\\",\\n\\n\\t\\t\\t\\\"}\\\"\\n\\n\\t\\t].join( \\\"\\\\n\\\" ),\\n\\n\\t\\tfragmentShader: [\\n\\n\\t\\t\\t\\\"uniform sampler2D tDiffuse;\\\",\\n\\t\\t\\t\\\"uniform float v;\\\",\\n\\n\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\n\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t\\\"vec4 sum = vec4( 0.0 );\\\",\\n\\n\\t\\t\\t\\t\\\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * v ) ) * 0.051;\\\",\\n\\t\\t\\t\\t\\\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * v ) ) * 0.0918;\\\",\\n\\t\\t\\t\\t\\\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * v ) ) * 0.12245;\\\",\\n\\t\\t\\t\\t\\\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * v ) ) * 0.1531;\\\",\\n\\t\\t\\t\\t\\\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;\\\",\\n\\t\\t\\t\\t\\\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * v ) ) * 0.1531;\\\",\\n\\t\\t\\t\\t\\\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * v ) ) * 0.12245;\\\",\\n\\t\\t\\t\\t\\\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * v ) ) * 0.0918;\\\",\\n\\t\\t\\t\\t\\\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * v ) ) * 0.051;\\\",\\n\\n\\t\\t\\t\\t\\\"gl_FragColor = sum;\\\",\\n\\n\\t\\t\\t\\\"}\\\"\\n\\n\\t\\t].join( \\\"\\\\n\\\" )\\n\\n\\t};\\n\\n}\\n\",\"module.exports = function( THREE ){\\n\\t/**\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t *\\n\\t * Simple fake tilt-shift effect, modulating two pass Gaussian blur (see above) by vertical position\\n\\t *\\n\\t * - 9 samples per pass\\n\\t * - standard deviation 2.7\\n\\t * - \\\"h\\\" and \\\"v\\\" parameters should be set to \\\"1 / width\\\" and \\\"1 / height\\\"\\n\\t * - \\\"r\\\" parameter control where \\\"focused\\\" horizontal line lies\\n\\t */\\n\\n\\tTHREE.VerticalTiltShiftShader = {\\n\\n\\t\\tuniforms: {\\n\\n\\t\\t\\t\\\"tDiffuse\\\": { type: \\\"t\\\", value: null },\\n\\t\\t\\t\\\"v\\\":        { type: \\\"f\\\", value: 1.0 / 512.0 },\\n\\t\\t\\t\\\"r\\\":        { type: \\\"f\\\", value: 0.35 }\\n\\n\\t\\t},\\n\\n\\t\\tvertexShader: [\\n\\n\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\n\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t\\\"vUv = uv;\\\",\\n\\t\\t\\t\\t\\\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\\",\\n\\n\\t\\t\\t\\\"}\\\"\\n\\n\\t\\t].join( \\\"\\\\n\\\" ),\\n\\n\\t\\tfragmentShader: [\\n\\n\\t\\t\\t\\\"uniform sampler2D tDiffuse;\\\",\\n\\t\\t\\t\\\"uniform float v;\\\",\\n\\t\\t\\t\\\"uniform float r;\\\",\\n\\n\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\n\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t\\\"vec4 sum = vec4( 0.0 );\\\",\\n\\n\\t\\t\\t\\t\\\"float vv = v * abs( r - vUv.y );\\\",\\n\\n\\t\\t\\t\\t\\\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * vv ) ) * 0.051;\\\",\\n\\t\\t\\t\\t\\\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * vv ) ) * 0.0918;\\\",\\n\\t\\t\\t\\t\\\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * vv ) ) * 0.12245;\\\",\\n\\t\\t\\t\\t\\\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * vv ) ) * 0.1531;\\\",\\n\\t\\t\\t\\t\\\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;\\\",\\n\\t\\t\\t\\t\\\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * vv ) ) * 0.1531;\\\",\\n\\t\\t\\t\\t\\\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * vv ) ) * 0.12245;\\\",\\n\\t\\t\\t\\t\\\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * vv ) ) * 0.0918;\\\",\\n\\t\\t\\t\\t\\\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * vv ) ) * 0.051;\\\",\\n\\n\\t\\t\\t\\t\\\"gl_FragColor = sum;\\\",\\n\\n\\t\\t\\t\\\"}\\\"\\n\\n\\t\\t].join( \\\"\\\\n\\\" )\\n\\n\\t};\\n\\n}\\n\",\"module.exports = function( THREE ){\\n\\t/**\\n\\t * @author alteredq / http://alteredqualia.com/\\n\\t *\\n\\t * Vignette shader\\n\\t * based on PaintEffect postprocess from ro.me\\n\\t * http://code.google.com/p/3-dreams-of-black/source/browse/deploy/js/effects/PaintEffect.js\\n\\t */\\n\\n\\tTHREE.VignetteShader = {\\n\\n\\t\\tuniforms: {\\n\\n\\t\\t\\t\\\"tDiffuse\\\": { type: \\\"t\\\", value: null },\\n\\t\\t\\t\\\"offset\\\":   { type: \\\"f\\\", value: 1.0 },\\n\\t\\t\\t\\\"darkness\\\": { type: \\\"f\\\", value: 1.0 }\\n\\n\\t\\t},\\n\\n\\t\\tvertexShader: [\\n\\n\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\n\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t\\\"vUv = uv;\\\",\\n\\t\\t\\t\\t\\\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\\",\\n\\n\\t\\t\\t\\\"}\\\"\\n\\n\\t\\t].join( \\\"\\\\n\\\" ),\\n\\n\\t\\tfragmentShader: [\\n\\n\\t\\t\\t\\\"uniform float offset;\\\",\\n\\t\\t\\t\\\"uniform float darkness;\\\",\\n\\n\\t\\t\\t\\\"uniform sampler2D tDiffuse;\\\",\\n\\n\\t\\t\\t\\\"varying vec2 vUv;\\\",\\n\\n\\t\\t\\t\\\"void main() {\\\",\\n\\n\\t\\t\\t\\t// Eskil's vignette\\n\\n\\t\\t\\t\\t\\\"vec4 texel = texture2D( tDiffuse, vUv );\\\",\\n\\t\\t\\t\\t\\\"vec2 uv = ( vUv - vec2( 0.5 ) ) * vec2( offset );\\\",\\n\\t\\t\\t\\t\\\"gl_FragColor = vec4( mix( texel.rgb, vec3( 1.0 - darkness ), dot( uv, uv ) ), texel.a );\\\",\\n\\n\\t\\t\\t\\t/*\\n\\t\\t\\t\\t// alternative version from glfx.js\\n\\t\\t\\t\\t// this one makes more \\\"dusty\\\" look (as opposed to \\\"burned\\\")\\n\\n\\t\\t\\t\\t\\\"vec4 color = texture2D( tDiffuse, vUv );\\\",\\n\\t\\t\\t\\t\\\"float dist = distance( vUv, vec2( 0.5 ) );\\\",\\n\\t\\t\\t\\t\\\"color.rgb *= smoothstep( 0.8, offset * 0.799, dist *( darkness + offset ) );\\\",\\n\\t\\t\\t\\t\\\"gl_FragColor = color;\\\",\\n\\t\\t\\t\\t*/\\n\\n\\t\\t\\t\\\"}\\\"\\n\\n\\t\\t].join( \\\"\\\\n\\\" )\\n\\n\\t};\\n\\n}\\n\"]}","code":"!function(e){var t={};function r(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var i in e)r.d(n,i,function(t){return e[t]}.bind(null,i));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,\"a\",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p=\"\",r(r.s=0)}([function(e,t,r){\"use strict\";t.__esModule=!0;var n=r(1),i=r(2)([\"EffectComposer\",\"OrbitControls\"]);var o=function(){function e(e){this._parent=null,this._div=document.createElement(\"div\"),this._div.className=\"text-label\",this._div.style.position=\"absolute\",this._div.style.width=100,this._div.style.height=100,this._div.style.color=\"white\",this._div.innerHTML=\"hi there!\",this._div.style.top=-1e3,this._div.style.left=-1e3,this._parent=e,this.position=new i.Vector3,this.position.set(this._parent.position.x,this._parent.position.y,this._parent.position.z)}return Object.defineProperty(e.prototype,\"html\",{set:function(e){this._div.innerHTML=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,\"div\",{get:function(){return this._div},enumerable:!0,configurable:!0}),e.prototype.update=function(e){null!=this._parent&&this.position.set(this._parent.position.x,this._parent.position.y,this._parent.position.z);var t=this.get2DCoords(this.position,e);this._div.style.left=t.x+\"px\",this._div.style.top=t.y+\"px\"},e.prototype.get2DCoords=function(e,t){var r=e.project(t);return r.x=(r.x+1)/2*window.innerWidth,r.y=-(r.y-1)/2*window.innerHeight,r},e}(),a=function(){function e(e,t,r,n,a){switch(this._atom=e,e.toUpperCase()){case\"H\":this.color=16777215;break;case\"C\":this.color=8421504;break;case\"N\":this.color=255;break;case\"O\":this.color=16711680;break;case\"F\":this.color=11403055;break;case\"CL\":this.color=3329330;break;case\"S\":this.color=16776960;break;case\"I\":this.color=8388736;break;case\"P\":this.color=16753920;break;case\"BR\":this.color=8388608;break;default:this.color=16716947}this._x=r,this._y=n,this._z=a,this.id=t,this.show_id=!1,this.show_name=!1;var s=new i.SphereGeometry(.3);this._material=new i.MeshStandardMaterial({color:this.color,roughness:.5}),this._ball=new i.Mesh(s,this.material),this.ball.position.set(this.x,this.y,this.z),this._text=new o(this.ball),this._text.html=\"\"}return Object.defineProperty(e.prototype,\"ball\",{get:function(){return this._ball},enumerable:!0,configurable:!0}),e.prototype.update=function(e){this.text.update(e)},e.prototype.showID=function(){this.show_id=!0,this._text.html=(this.show_name?this._atom:\"\")+this.id.toString()},e.prototype.hideID=function(){this.show_id=!1,this._text.html=this.show_name?this._atom:\"\"},e.prototype.showName=function(){this.show_name=!0,this._text.html=this._atom+(this.show_id?this.id.toString():\"\")},e.prototype.hideName=function(){this.show_name=!1,this._text.html=this.show_id?this.id.toString():\"\"},Object.defineProperty(e.prototype,\"x\",{get:function(){return this._x},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,\"y\",{get:function(){return this._y},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,\"z\",{get:function(){return this._z},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,\"text\",{get:function(){return this._text},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,\"material\",{get:function(){return this._material},enumerable:!0,configurable:!0}),e.prototype.setbond=function(e,t){new i.Vector3(this.x,this.y,this.z);var r=new i.Vector3(e.x,e.y,e.z);return function(e,t,r,n,o){var a=(new i.Vector3).subVectors(t,e),s=a.clone();a.normalize();for(var c=new i.ArrowHelper(a,e),l=[[[0,0]],[[1,0],[-1,0]],[[.8660254037844386,.5],[-.8660254037844386,.5],[0,-1]],[[.7071067811865476,.7071067811865476],[-.7071067811865476,.7071067811865476],[.7071067811865476,-.7071067811865476],[-.7071067811865476,-.7071067811865476]],[[.9510565162951535,.30901699437494745],[0,1],[-.9510565162951535,.30901699437494745],[-.5877852522924731,-.8090169943749475],[.5877852522924731,-.8090169943749475]],[[1,0],[.5,.8660254037844386],[-.5,.8660254037844386],[-1,0],[-.5,-.8660254037844386],[.5,-.8660254037844386]]],u=new i.Group,h=0;h<o;h++){var d=new i.CylinderGeometry(.07,.07,s.length()/2,6,4);(p=new i.Mesh(d,r)).position.set(.09*l[o-1][h][0],-s.length()/4,.09*l[o-1][h][1]),u.add(p)}for(h=0;h<o;h++){var p;d=new i.CylinderGeometry(.07,.07,s.length()/2,6,4),(p=new i.Mesh(d,n)).position.set(.09*l[o-1][h][0],s.length()/4,.09*l[o-1][h][1]),u.add(p)}u.rotation.set(c.rotation.x,c.rotation.y,c.rotation.z);var f=(new i.Vector3).addVectors(e,s.multiplyScalar(.5));return u.position.set(f.x,f.y,f.z),u}(new i.Vector3(this.x,this.y,this.z),r,this.material,e.material,t)},e}(),s=function(){function e(){var e=this;this._mols=[],this._bonds=[],this._atoms=[];var t=this.getUrlVars();this._mols=[],this._bonds=[],this._atoms=[];var r=t.split(\"\\n\");if(!(r.length<4)){var n=r[3].trim().split(/\\s+/),i=parseInt(n[0]),o=parseInt(n[1]);console.log(r[3].trim()),console.log(\"length : \"+n[0]+\", \"+n[1]);var a=0;r.slice(4,4+i).forEach(function(t){var r=t.trim().split(/\\s+/);e._mols[a]=[parseFloat(r[0]),parseFloat(r[1]),parseFloat(r[2])],e._atoms[a]=r[3].trim(),console.log(\"mols : \"+e._mols[a]+\", \"+e._atoms[a]),a++}),a=0,r.slice(4+i,4+i+o).forEach(function(t){var r=t.trim().split(/\\s+/);e._bonds[a]=[parseInt(r[0]),parseInt(r[1]),parseInt(r[2])],console.log(\"bonds : \"+e._bonds[a]),a++}),this.normize()}}return e.prototype.getUrlVars=function(){var e,t,r=[];e=(t=window.location.search.slice(1).split(\"&\")).length;for(var n=0;n<e;n++){var i=t[n].split(\"=\");r.push(i[0]),r[i[0]]=i[1]}return decodeURIComponent(r.mol)},e.prototype.normize=function(){var e=[0,0,0];this._mols.forEach(function(t){e[0]+=t[0],e[1]+=t[1],e[2]+=t[2]}),e[0]/=this._mols.length,e[1]/=this._mols.length,e[2]/=this._mols.length,this._mols.forEach(function(t){t[0]-=e[0],t[1]-=e[1],t[2]-=e[2]})},Object.defineProperty(e.prototype,\"mols\",{get:function(){return this._mols},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,\"bonds\",{get:function(){return this._bonds},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,\"atoms\",{get:function(){return this._atoms},enumerable:!0,configurable:!0}),e}(),c=function(){function e(e){this.scene=new i.Scene,this._camera=new i.PerspectiveCamera(75,e.width()/e.height(),.1,1e3),this.renderer=new i.WebGLRenderer,this.renderer.setSize(e.width(),e.height()),this._camera.position.z=8,this._camera.position.y=1,e.append(this.renderer.domElement),this.init(),this.controls=new i.OrbitControls(this._camera,this.renderer.domElement)}return e.prototype.init=function(){var e=new i.AxisHelper(10);this.scene.add(e);var t=new i.GridHelper(20,5);this.scene.add(t);var r=new i.AmbientLight(16777215,1);this.scene.add(r);var o=new i.DirectionalLight(16777215,1);this.scene.add(o);var c=new s;this._balls=new Array(c.mols.length);for(var l=0;l<this._balls.length;l++)this._balls[l]=new a(c.atoms[l],l+1,c.mols[l][0],c.mols[l][1],c.mols[l][2]),this.scene.add(this._balls[l].ball),n(\"body\").append(this._balls[l].text.div);for(l=0;l<c.bonds.length;l++)this.scene.add(this._balls[c.bonds[l][0]-1].setbond(this._balls[c.bonds[l][1]-1],c.bonds[l][2]))},e.prototype.update=function(){var e=this;this._balls.forEach(function(t){t.update(e._camera)}),this.renderer.render(this.scene,this._camera),this.controls.update()},Object.defineProperty(e.prototype,\"balls\",{get:function(){return this._balls},enumerable:!0,configurable:!0}),e}();n(function(){var e=n(\"body\"),t=new c(e),r=function(){window.requestAnimationFrame(r),t.update()};r(),n(window).keypress(function(e){}),n(\"#chk1\").click(function(){n(\"#chk1\").prop(\"checked\")?t.balls.forEach(function(e){e.showName()}):t.balls.forEach(function(e){e.hideName()})}),n(\"#chk2\").click(function(){n(\"#chk2\").prop(\"checked\")?t.balls.forEach(function(e){e.showID()}):t.balls.forEach(function(e){e.hideID()})})})},function(e,t,r){var n;\n/*!\n * jQuery JavaScript Library v3.4.1\n * https://jquery.com/\n *\n * Includes Sizzle.js\n * https://sizzlejs.com/\n *\n * Copyright JS Foundation and other contributors\n * Released under the MIT license\n * https://jquery.org/license\n *\n * Date: 2019-05-01T21:04Z\n */\n/*!\n * jQuery JavaScript Library v3.4.1\n * https://jquery.com/\n *\n * Includes Sizzle.js\n * https://sizzlejs.com/\n *\n * Copyright JS Foundation and other contributors\n * Released under the MIT license\n * https://jquery.org/license\n *\n * Date: 2019-05-01T21:04Z\n */\n!function(t,r){\"use strict\";\"object\"==typeof e.exports?e.exports=t.document?r(t,!0):function(e){if(!e.document)throw new Error(\"jQuery requires a window with a document\");return r(e)}:r(t)}(\"undefined\"!=typeof window?window:this,function(r,i){\"use strict\";var o=[],a=r.document,s=Object.getPrototypeOf,c=o.slice,l=o.concat,u=o.push,h=o.indexOf,d={},p=d.toString,f=d.hasOwnProperty,m=f.toString,v=m.call(Object),g={},y=function(e){return\"function\"==typeof e&&\"number\"!=typeof e.nodeType},x=function(e){return null!=e&&e===e.window},b={type:!0,src:!0,nonce:!0,noModule:!0};function w(e,t,r){var n,i,o=(r=r||a).createElement(\"script\");if(o.text=e,t)for(n in b)(i=t[n]||t.getAttribute&&t.getAttribute(n))&&o.setAttribute(n,i);r.head.appendChild(o).parentNode.removeChild(o)}function _(e){return null==e?e+\"\":\"object\"==typeof e||\"function\"==typeof e?d[p.call(e)]||\"object\":typeof e}var M=function(e,t){return new M.fn.init(e,t)},S=/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g;function T(e){var t=!!e&&\"length\"in e&&e.length,r=_(e);return!y(e)&&!x(e)&&(\"array\"===r||0===t||\"number\"==typeof t&&t>0&&t-1 in e)}M.fn=M.prototype={jquery:\"3.4.1\",constructor:M,length:0,toArray:function(){return c.call(this)},get:function(e){return null==e?c.call(this):e<0?this[e+this.length]:this[e]},pushStack:function(e){var t=M.merge(this.constructor(),e);return t.prevObject=this,t},each:function(e){return M.each(this,e)},map:function(e){return this.pushStack(M.map(this,function(t,r){return e.call(t,r,t)}))},slice:function(){return this.pushStack(c.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(e){var t=this.length,r=+e+(e<0?t:0);return this.pushStack(r>=0&&r<t?[this[r]]:[])},end:function(){return this.prevObject||this.constructor()},push:u,sort:o.sort,splice:o.splice},M.extend=M.fn.extend=function(){var e,t,r,n,i,o,a=arguments[0]||{},s=1,c=arguments.length,l=!1;for(\"boolean\"==typeof a&&(l=a,a=arguments[s]||{},s++),\"object\"==typeof a||y(a)||(a={}),s===c&&(a=this,s--);s<c;s++)if(null!=(e=arguments[s]))for(t in e)n=e[t],\"__proto__\"!==t&&a!==n&&(l&&n&&(M.isPlainObject(n)||(i=Array.isArray(n)))?(r=a[t],o=i&&!Array.isArray(r)?[]:i||M.isPlainObject(r)?r:{},i=!1,a[t]=M.extend(l,o,n)):void 0!==n&&(a[t]=n));return a},M.extend({expando:\"jQuery\"+(\"3.4.1\"+Math.random()).replace(/\\D/g,\"\"),isReady:!0,error:function(e){throw new Error(e)},noop:function(){},isPlainObject:function(e){var t,r;return!(!e||\"[object Object]\"!==p.call(e))&&(!(t=s(e))||\"function\"==typeof(r=f.call(t,\"constructor\")&&t.constructor)&&m.call(r)===v)},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},globalEval:function(e,t){w(e,{nonce:t&&t.nonce})},each:function(e,t){var r,n=0;if(T(e))for(r=e.length;n<r&&!1!==t.call(e[n],n,e[n]);n++);else for(n in e)if(!1===t.call(e[n],n,e[n]))break;return e},trim:function(e){return null==e?\"\":(e+\"\").replace(S,\"\")},makeArray:function(e,t){var r=t||[];return null!=e&&(T(Object(e))?M.merge(r,\"string\"==typeof e?[e]:e):u.call(r,e)),r},inArray:function(e,t,r){return null==t?-1:h.call(t,e,r)},merge:function(e,t){for(var r=+t.length,n=0,i=e.length;n<r;n++)e[i++]=t[n];return e.length=i,e},grep:function(e,t,r){for(var n=[],i=0,o=e.length,a=!r;i<o;i++)!t(e[i],i)!==a&&n.push(e[i]);return n},map:function(e,t,r){var n,i,o=0,a=[];if(T(e))for(n=e.length;o<n;o++)null!=(i=t(e[o],o,r))&&a.push(i);else for(o in e)null!=(i=t(e[o],o,r))&&a.push(i);return l.apply([],a)},guid:1,support:g}),\"function\"==typeof Symbol&&(M.fn[Symbol.iterator]=o[Symbol.iterator]),M.each(\"Boolean Number String Function Array Date RegExp Object Error Symbol\".split(\" \"),function(e,t){d[\"[object \"+t+\"]\"]=t.toLowerCase()});var E=\n/*!\n * Sizzle CSS Selector Engine v2.3.4\n * https://sizzlejs.com/\n *\n * Copyright JS Foundation and other contributors\n * Released under the MIT license\n * https://js.foundation/\n *\n * Date: 2019-04-08\n */\nfunction(e){var t,r,n,i,o,a,s,c,l,u,h,d,p,f,m,v,g,y,x,b=\"sizzle\"+1*new Date,w=e.document,_=0,M=0,S=ce(),T=ce(),E=ce(),C=ce(),A=function(e,t){return e===t&&(h=!0),0},L={}.hasOwnProperty,R=[],P=R.pop,D=R.push,U=R.push,I=R.slice,F=function(e,t){for(var r=0,n=e.length;r<n;r++)if(e[r]===t)return r;return-1},N=\"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",B=\"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",O=\"(?:\\\\\\\\.|[\\\\w-]|[^\\0-\\\\xa0])+\",V=\"\\\\[\"+B+\"*(\"+O+\")(?:\"+B+\"*([*^$|!~]?=)\"+B+\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\"+O+\"))|)\"+B+\"*\\\\]\",G=\":(\"+O+\")(?:\\\\((('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\"+V+\")*)|.*)\\\\)|)\",z=new RegExp(B+\"+\",\"g\"),k=new RegExp(\"^\"+B+\"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\"+B+\"+$\",\"g\"),j=new RegExp(\"^\"+B+\"*,\"+B+\"*\"),H=new RegExp(\"^\"+B+\"*([>+~]|\"+B+\")\"+B+\"*\"),W=new RegExp(B+\"|>\"),X=new RegExp(G),q=new RegExp(\"^\"+O+\"$\"),Y={ID:new RegExp(\"^#(\"+O+\")\"),CLASS:new RegExp(\"^\\\\.(\"+O+\")\"),TAG:new RegExp(\"^(\"+O+\"|[*])\"),ATTR:new RegExp(\"^\"+V),PSEUDO:new RegExp(\"^\"+G),CHILD:new RegExp(\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\"+B+\"*(even|odd|(([+-]|)(\\\\d*)n|)\"+B+\"*(?:([+-]|)\"+B+\"*(\\\\d+)|))\"+B+\"*\\\\)|)\",\"i\"),bool:new RegExp(\"^(?:\"+N+\")$\",\"i\"),needsContext:new RegExp(\"^\"+B+\"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\"+B+\"*((?:-\\\\d)?\\\\d*)\"+B+\"*\\\\)|)(?=[^-]|$)\",\"i\")},Z=/HTML$/i,K=/^(?:input|select|textarea|button)$/i,Q=/^h\\d$/i,J=/^[^{]+\\{\\s*\\[native \\w/,$=/^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,ee=/[+~]/,te=new RegExp(\"\\\\\\\\([\\\\da-f]{1,6}\"+B+\"?|(\"+B+\")|.)\",\"ig\"),re=function(e,t,r){var n=\"0x\"+t-65536;return n!=n||r?t:n<0?String.fromCharCode(n+65536):String.fromCharCode(n>>10|55296,1023&n|56320)},ne=/([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\0-\\x1f\\x7f-\\uFFFF\\w-]/g,ie=function(e,t){return t?\"\\0\"===e?\"�\":e.slice(0,-1)+\"\\\\\"+e.charCodeAt(e.length-1).toString(16)+\" \":\"\\\\\"+e},oe=function(){d()},ae=be(function(e){return!0===e.disabled&&\"fieldset\"===e.nodeName.toLowerCase()},{dir:\"parentNode\",next:\"legend\"});try{U.apply(R=I.call(w.childNodes),w.childNodes),R[w.childNodes.length].nodeType}catch(e){U={apply:R.length?function(e,t){D.apply(e,I.call(t))}:function(e,t){for(var r=e.length,n=0;e[r++]=t[n++];);e.length=r-1}}}function se(e,t,n,i){var o,s,l,u,h,f,g,y=t&&t.ownerDocument,_=t?t.nodeType:9;if(n=n||[],\"string\"!=typeof e||!e||1!==_&&9!==_&&11!==_)return n;if(!i&&((t?t.ownerDocument||t:w)!==p&&d(t),t=t||p,m)){if(11!==_&&(h=$.exec(e)))if(o=h[1]){if(9===_){if(!(l=t.getElementById(o)))return n;if(l.id===o)return n.push(l),n}else if(y&&(l=y.getElementById(o))&&x(t,l)&&l.id===o)return n.push(l),n}else{if(h[2])return U.apply(n,t.getElementsByTagName(e)),n;if((o=h[3])&&r.getElementsByClassName&&t.getElementsByClassName)return U.apply(n,t.getElementsByClassName(o)),n}if(r.qsa&&!C[e+\" \"]&&(!v||!v.test(e))&&(1!==_||\"object\"!==t.nodeName.toLowerCase())){if(g=e,y=t,1===_&&W.test(e)){for((u=t.getAttribute(\"id\"))?u=u.replace(ne,ie):t.setAttribute(\"id\",u=b),s=(f=a(e)).length;s--;)f[s]=\"#\"+u+\" \"+xe(f[s]);g=f.join(\",\"),y=ee.test(e)&&ge(t.parentNode)||t}try{return U.apply(n,y.querySelectorAll(g)),n}catch(t){C(e,!0)}finally{u===b&&t.removeAttribute(\"id\")}}}return c(e.replace(k,\"$1\"),t,n,i)}function ce(){var e=[];return function t(r,i){return e.push(r+\" \")>n.cacheLength&&delete t[e.shift()],t[r+\" \"]=i}}function le(e){return e[b]=!0,e}function ue(e){var t=p.createElement(\"fieldset\");try{return!!e(t)}catch(e){return!1}finally{t.parentNode&&t.parentNode.removeChild(t),t=null}}function he(e,t){for(var r=e.split(\"|\"),i=r.length;i--;)n.attrHandle[r[i]]=t}function de(e,t){var r=t&&e,n=r&&1===e.nodeType&&1===t.nodeType&&e.sourceIndex-t.sourceIndex;if(n)return n;if(r)for(;r=r.nextSibling;)if(r===t)return-1;return e?1:-1}function pe(e){return function(t){return\"input\"===t.nodeName.toLowerCase()&&t.type===e}}function fe(e){return function(t){var r=t.nodeName.toLowerCase();return(\"input\"===r||\"button\"===r)&&t.type===e}}function me(e){return function(t){return\"form\"in t?t.parentNode&&!1===t.disabled?\"label\"in t?\"label\"in t.parentNode?t.parentNode.disabled===e:t.disabled===e:t.isDisabled===e||t.isDisabled!==!e&&ae(t)===e:t.disabled===e:\"label\"in t&&t.disabled===e}}function ve(e){return le(function(t){return t=+t,le(function(r,n){for(var i,o=e([],r.length,t),a=o.length;a--;)r[i=o[a]]&&(r[i]=!(n[i]=r[i]))})})}function ge(e){return e&&void 0!==e.getElementsByTagName&&e}for(t in r=se.support={},o=se.isXML=function(e){var t=e.namespaceURI,r=(e.ownerDocument||e).documentElement;return!Z.test(t||r&&r.nodeName||\"HTML\")},d=se.setDocument=function(e){var t,i,a=e?e.ownerDocument||e:w;return a!==p&&9===a.nodeType&&a.documentElement?(f=(p=a).documentElement,m=!o(p),w!==p&&(i=p.defaultView)&&i.top!==i&&(i.addEventListener?i.addEventListener(\"unload\",oe,!1):i.attachEvent&&i.attachEvent(\"onunload\",oe)),r.attributes=ue(function(e){return e.className=\"i\",!e.getAttribute(\"className\")}),r.getElementsByTagName=ue(function(e){return e.appendChild(p.createComment(\"\")),!e.getElementsByTagName(\"*\").length}),r.getElementsByClassName=J.test(p.getElementsByClassName),r.getById=ue(function(e){return f.appendChild(e).id=b,!p.getElementsByName||!p.getElementsByName(b).length}),r.getById?(n.filter.ID=function(e){var t=e.replace(te,re);return function(e){return e.getAttribute(\"id\")===t}},n.find.ID=function(e,t){if(void 0!==t.getElementById&&m){var r=t.getElementById(e);return r?[r]:[]}}):(n.filter.ID=function(e){var t=e.replace(te,re);return function(e){var r=void 0!==e.getAttributeNode&&e.getAttributeNode(\"id\");return r&&r.value===t}},n.find.ID=function(e,t){if(void 0!==t.getElementById&&m){var r,n,i,o=t.getElementById(e);if(o){if((r=o.getAttributeNode(\"id\"))&&r.value===e)return[o];for(i=t.getElementsByName(e),n=0;o=i[n++];)if((r=o.getAttributeNode(\"id\"))&&r.value===e)return[o]}return[]}}),n.find.TAG=r.getElementsByTagName?function(e,t){return void 0!==t.getElementsByTagName?t.getElementsByTagName(e):r.qsa?t.querySelectorAll(e):void 0}:function(e,t){var r,n=[],i=0,o=t.getElementsByTagName(e);if(\"*\"===e){for(;r=o[i++];)1===r.nodeType&&n.push(r);return n}return o},n.find.CLASS=r.getElementsByClassName&&function(e,t){if(void 0!==t.getElementsByClassName&&m)return t.getElementsByClassName(e)},g=[],v=[],(r.qsa=J.test(p.querySelectorAll))&&(ue(function(e){f.appendChild(e).innerHTML=\"<a id='\"+b+\"'></a><select id='\"+b+\"-\\r\\\\' msallowcapture=''><option selected=''></option></select>\",e.querySelectorAll(\"[msallowcapture^='']\").length&&v.push(\"[*^$]=\"+B+\"*(?:''|\\\"\\\")\"),e.querySelectorAll(\"[selected]\").length||v.push(\"\\\\[\"+B+\"*(?:value|\"+N+\")\"),e.querySelectorAll(\"[id~=\"+b+\"-]\").length||v.push(\"~=\"),e.querySelectorAll(\":checked\").length||v.push(\":checked\"),e.querySelectorAll(\"a#\"+b+\"+*\").length||v.push(\".#.+[+~]\")}),ue(function(e){e.innerHTML=\"<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>\";var t=p.createElement(\"input\");t.setAttribute(\"type\",\"hidden\"),e.appendChild(t).setAttribute(\"name\",\"D\"),e.querySelectorAll(\"[name=d]\").length&&v.push(\"name\"+B+\"*[*^$|!~]?=\"),2!==e.querySelectorAll(\":enabled\").length&&v.push(\":enabled\",\":disabled\"),f.appendChild(e).disabled=!0,2!==e.querySelectorAll(\":disabled\").length&&v.push(\":enabled\",\":disabled\"),e.querySelectorAll(\"*,:x\"),v.push(\",.*:\")})),(r.matchesSelector=J.test(y=f.matches||f.webkitMatchesSelector||f.mozMatchesSelector||f.oMatchesSelector||f.msMatchesSelector))&&ue(function(e){r.disconnectedMatch=y.call(e,\"*\"),y.call(e,\"[s!='']:x\"),g.push(\"!=\",G)}),v=v.length&&new RegExp(v.join(\"|\")),g=g.length&&new RegExp(g.join(\"|\")),t=J.test(f.compareDocumentPosition),x=t||J.test(f.contains)?function(e,t){var r=9===e.nodeType?e.documentElement:e,n=t&&t.parentNode;return e===n||!(!n||1!==n.nodeType||!(r.contains?r.contains(n):e.compareDocumentPosition&&16&e.compareDocumentPosition(n)))}:function(e,t){if(t)for(;t=t.parentNode;)if(t===e)return!0;return!1},A=t?function(e,t){if(e===t)return h=!0,0;var n=!e.compareDocumentPosition-!t.compareDocumentPosition;return n||(1&(n=(e.ownerDocument||e)===(t.ownerDocument||t)?e.compareDocumentPosition(t):1)||!r.sortDetached&&t.compareDocumentPosition(e)===n?e===p||e.ownerDocument===w&&x(w,e)?-1:t===p||t.ownerDocument===w&&x(w,t)?1:u?F(u,e)-F(u,t):0:4&n?-1:1)}:function(e,t){if(e===t)return h=!0,0;var r,n=0,i=e.parentNode,o=t.parentNode,a=[e],s=[t];if(!i||!o)return e===p?-1:t===p?1:i?-1:o?1:u?F(u,e)-F(u,t):0;if(i===o)return de(e,t);for(r=e;r=r.parentNode;)a.unshift(r);for(r=t;r=r.parentNode;)s.unshift(r);for(;a[n]===s[n];)n++;return n?de(a[n],s[n]):a[n]===w?-1:s[n]===w?1:0},p):p},se.matches=function(e,t){return se(e,null,null,t)},se.matchesSelector=function(e,t){if((e.ownerDocument||e)!==p&&d(e),r.matchesSelector&&m&&!C[t+\" \"]&&(!g||!g.test(t))&&(!v||!v.test(t)))try{var n=y.call(e,t);if(n||r.disconnectedMatch||e.document&&11!==e.document.nodeType)return n}catch(e){C(t,!0)}return se(t,p,null,[e]).length>0},se.contains=function(e,t){return(e.ownerDocument||e)!==p&&d(e),x(e,t)},se.attr=function(e,t){(e.ownerDocument||e)!==p&&d(e);var i=n.attrHandle[t.toLowerCase()],o=i&&L.call(n.attrHandle,t.toLowerCase())?i(e,t,!m):void 0;return void 0!==o?o:r.attributes||!m?e.getAttribute(t):(o=e.getAttributeNode(t))&&o.specified?o.value:null},se.escape=function(e){return(e+\"\").replace(ne,ie)},se.error=function(e){throw new Error(\"Syntax error, unrecognized expression: \"+e)},se.uniqueSort=function(e){var t,n=[],i=0,o=0;if(h=!r.detectDuplicates,u=!r.sortStable&&e.slice(0),e.sort(A),h){for(;t=e[o++];)t===e[o]&&(i=n.push(o));for(;i--;)e.splice(n[i],1)}return u=null,e},i=se.getText=function(e){var t,r=\"\",n=0,o=e.nodeType;if(o){if(1===o||9===o||11===o){if(\"string\"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)r+=i(e)}else if(3===o||4===o)return e.nodeValue}else for(;t=e[n++];)r+=i(t);return r},(n=se.selectors={cacheLength:50,createPseudo:le,match:Y,attrHandle:{},find:{},relative:{\">\":{dir:\"parentNode\",first:!0},\" \":{dir:\"parentNode\"},\"+\":{dir:\"previousSibling\",first:!0},\"~\":{dir:\"previousSibling\"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(te,re),e[3]=(e[3]||e[4]||e[5]||\"\").replace(te,re),\"~=\"===e[2]&&(e[3]=\" \"+e[3]+\" \"),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),\"nth\"===e[1].slice(0,3)?(e[3]||se.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*(\"even\"===e[3]||\"odd\"===e[3])),e[5]=+(e[7]+e[8]||\"odd\"===e[3])):e[3]&&se.error(e[0]),e},PSEUDO:function(e){var t,r=!e[6]&&e[2];return Y.CHILD.test(e[0])?null:(e[3]?e[2]=e[4]||e[5]||\"\":r&&X.test(r)&&(t=a(r,!0))&&(t=r.indexOf(\")\",r.length-t)-r.length)&&(e[0]=e[0].slice(0,t),e[2]=r.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(e){var t=e.replace(te,re).toLowerCase();return\"*\"===e?function(){return!0}:function(e){return e.nodeName&&e.nodeName.toLowerCase()===t}},CLASS:function(e){var t=S[e+\" \"];return t||(t=new RegExp(\"(^|\"+B+\")\"+e+\"(\"+B+\"|$)\"))&&S(e,function(e){return t.test(\"string\"==typeof e.className&&e.className||void 0!==e.getAttribute&&e.getAttribute(\"class\")||\"\")})},ATTR:function(e,t,r){return function(n){var i=se.attr(n,e);return null==i?\"!=\"===t:!t||(i+=\"\",\"=\"===t?i===r:\"!=\"===t?i!==r:\"^=\"===t?r&&0===i.indexOf(r):\"*=\"===t?r&&i.indexOf(r)>-1:\"$=\"===t?r&&i.slice(-r.length)===r:\"~=\"===t?(\" \"+i.replace(z,\" \")+\" \").indexOf(r)>-1:\"|=\"===t&&(i===r||i.slice(0,r.length+1)===r+\"-\"))}},CHILD:function(e,t,r,n,i){var o=\"nth\"!==e.slice(0,3),a=\"last\"!==e.slice(-4),s=\"of-type\"===t;return 1===n&&0===i?function(e){return!!e.parentNode}:function(t,r,c){var l,u,h,d,p,f,m=o!==a?\"nextSibling\":\"previousSibling\",v=t.parentNode,g=s&&t.nodeName.toLowerCase(),y=!c&&!s,x=!1;if(v){if(o){for(;m;){for(d=t;d=d[m];)if(s?d.nodeName.toLowerCase()===g:1===d.nodeType)return!1;f=m=\"only\"===e&&!f&&\"nextSibling\"}return!0}if(f=[a?v.firstChild:v.lastChild],a&&y){for(x=(p=(l=(u=(h=(d=v)[b]||(d[b]={}))[d.uniqueID]||(h[d.uniqueID]={}))[e]||[])[0]===_&&l[1])&&l[2],d=p&&v.childNodes[p];d=++p&&d&&d[m]||(x=p=0)||f.pop();)if(1===d.nodeType&&++x&&d===t){u[e]=[_,p,x];break}}else if(y&&(x=p=(l=(u=(h=(d=t)[b]||(d[b]={}))[d.uniqueID]||(h[d.uniqueID]={}))[e]||[])[0]===_&&l[1]),!1===x)for(;(d=++p&&d&&d[m]||(x=p=0)||f.pop())&&((s?d.nodeName.toLowerCase()!==g:1!==d.nodeType)||!++x||(y&&((u=(h=d[b]||(d[b]={}))[d.uniqueID]||(h[d.uniqueID]={}))[e]=[_,x]),d!==t)););return(x-=i)===n||x%n==0&&x/n>=0}}},PSEUDO:function(e,t){var r,i=n.pseudos[e]||n.setFilters[e.toLowerCase()]||se.error(\"unsupported pseudo: \"+e);return i[b]?i(t):i.length>1?(r=[e,e,\"\",t],n.setFilters.hasOwnProperty(e.toLowerCase())?le(function(e,r){for(var n,o=i(e,t),a=o.length;a--;)e[n=F(e,o[a])]=!(r[n]=o[a])}):function(e){return i(e,0,r)}):i}},pseudos:{not:le(function(e){var t=[],r=[],n=s(e.replace(k,\"$1\"));return n[b]?le(function(e,t,r,i){for(var o,a=n(e,null,i,[]),s=e.length;s--;)(o=a[s])&&(e[s]=!(t[s]=o))}):function(e,i,o){return t[0]=e,n(t,null,o,r),t[0]=null,!r.pop()}}),has:le(function(e){return function(t){return se(e,t).length>0}}),contains:le(function(e){return e=e.replace(te,re),function(t){return(t.textContent||i(t)).indexOf(e)>-1}}),lang:le(function(e){return q.test(e||\"\")||se.error(\"unsupported lang: \"+e),e=e.replace(te,re).toLowerCase(),function(t){var r;do{if(r=m?t.lang:t.getAttribute(\"xml:lang\")||t.getAttribute(\"lang\"))return(r=r.toLowerCase())===e||0===r.indexOf(e+\"-\")}while((t=t.parentNode)&&1===t.nodeType);return!1}}),target:function(t){var r=e.location&&e.location.hash;return r&&r.slice(1)===t.id},root:function(e){return e===f},focus:function(e){return e===p.activeElement&&(!p.hasFocus||p.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:me(!1),disabled:me(!0),checked:function(e){var t=e.nodeName.toLowerCase();return\"input\"===t&&!!e.checked||\"option\"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,!0===e.selected},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeType<6)return!1;return!0},parent:function(e){return!n.pseudos.empty(e)},header:function(e){return Q.test(e.nodeName)},input:function(e){return K.test(e.nodeName)},button:function(e){var t=e.nodeName.toLowerCase();return\"input\"===t&&\"button\"===e.type||\"button\"===t},text:function(e){var t;return\"input\"===e.nodeName.toLowerCase()&&\"text\"===e.type&&(null==(t=e.getAttribute(\"type\"))||\"text\"===t.toLowerCase())},first:ve(function(){return[0]}),last:ve(function(e,t){return[t-1]}),eq:ve(function(e,t,r){return[r<0?r+t:r]}),even:ve(function(e,t){for(var r=0;r<t;r+=2)e.push(r);return e}),odd:ve(function(e,t){for(var r=1;r<t;r+=2)e.push(r);return e}),lt:ve(function(e,t,r){for(var n=r<0?r+t:r>t?t:r;--n>=0;)e.push(n);return e}),gt:ve(function(e,t,r){for(var n=r<0?r+t:r;++n<t;)e.push(n);return e})}}).pseudos.nth=n.pseudos.eq,{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})n.pseudos[t]=pe(t);for(t in{submit:!0,reset:!0})n.pseudos[t]=fe(t);function ye(){}function xe(e){for(var t=0,r=e.length,n=\"\";t<r;t++)n+=e[t].value;return n}function be(e,t,r){var n=t.dir,i=t.next,o=i||n,a=r&&\"parentNode\"===o,s=M++;return t.first?function(t,r,i){for(;t=t[n];)if(1===t.nodeType||a)return e(t,r,i);return!1}:function(t,r,c){var l,u,h,d=[_,s];if(c){for(;t=t[n];)if((1===t.nodeType||a)&&e(t,r,c))return!0}else for(;t=t[n];)if(1===t.nodeType||a)if(u=(h=t[b]||(t[b]={}))[t.uniqueID]||(h[t.uniqueID]={}),i&&i===t.nodeName.toLowerCase())t=t[n]||t;else{if((l=u[o])&&l[0]===_&&l[1]===s)return d[2]=l[2];if(u[o]=d,d[2]=e(t,r,c))return!0}return!1}}function we(e){return e.length>1?function(t,r,n){for(var i=e.length;i--;)if(!e[i](t,r,n))return!1;return!0}:e[0]}function _e(e,t,r,n,i){for(var o,a=[],s=0,c=e.length,l=null!=t;s<c;s++)(o=e[s])&&(r&&!r(o,n,i)||(a.push(o),l&&t.push(s)));return a}function Me(e,t,r,n,i,o){return n&&!n[b]&&(n=Me(n)),i&&!i[b]&&(i=Me(i,o)),le(function(o,a,s,c){var l,u,h,d=[],p=[],f=a.length,m=o||function(e,t,r){for(var n=0,i=t.length;n<i;n++)se(e,t[n],r);return r}(t||\"*\",s.nodeType?[s]:s,[]),v=!e||!o&&t?m:_e(m,d,e,s,c),g=r?i||(o?e:f||n)?[]:a:v;if(r&&r(v,g,s,c),n)for(l=_e(g,p),n(l,[],s,c),u=l.length;u--;)(h=l[u])&&(g[p[u]]=!(v[p[u]]=h));if(o){if(i||e){if(i){for(l=[],u=g.length;u--;)(h=g[u])&&l.push(v[u]=h);i(null,g=[],l,c)}for(u=g.length;u--;)(h=g[u])&&(l=i?F(o,h):d[u])>-1&&(o[l]=!(a[l]=h))}}else g=_e(g===a?g.splice(f,g.length):g),i?i(null,a,g,c):U.apply(a,g)})}function Se(e){for(var t,r,i,o=e.length,a=n.relative[e[0].type],s=a||n.relative[\" \"],c=a?1:0,u=be(function(e){return e===t},s,!0),h=be(function(e){return F(t,e)>-1},s,!0),d=[function(e,r,n){var i=!a&&(n||r!==l)||((t=r).nodeType?u(e,r,n):h(e,r,n));return t=null,i}];c<o;c++)if(r=n.relative[e[c].type])d=[be(we(d),r)];else{if((r=n.filter[e[c].type].apply(null,e[c].matches))[b]){for(i=++c;i<o&&!n.relative[e[i].type];i++);return Me(c>1&&we(d),c>1&&xe(e.slice(0,c-1).concat({value:\" \"===e[c-2].type?\"*\":\"\"})).replace(k,\"$1\"),r,c<i&&Se(e.slice(c,i)),i<o&&Se(e=e.slice(i)),i<o&&xe(e))}d.push(r)}return we(d)}return ye.prototype=n.filters=n.pseudos,n.setFilters=new ye,a=se.tokenize=function(e,t){var r,i,o,a,s,c,l,u=T[e+\" \"];if(u)return t?0:u.slice(0);for(s=e,c=[],l=n.preFilter;s;){for(a in r&&!(i=j.exec(s))||(i&&(s=s.slice(i[0].length)||s),c.push(o=[])),r=!1,(i=H.exec(s))&&(r=i.shift(),o.push({value:r,type:i[0].replace(k,\" \")}),s=s.slice(r.length)),n.filter)!(i=Y[a].exec(s))||l[a]&&!(i=l[a](i))||(r=i.shift(),o.push({value:r,type:a,matches:i}),s=s.slice(r.length));if(!r)break}return t?s.length:s?se.error(e):T(e,c).slice(0)},s=se.compile=function(e,t){var r,i=[],o=[],s=E[e+\" \"];if(!s){for(t||(t=a(e)),r=t.length;r--;)(s=Se(t[r]))[b]?i.push(s):o.push(s);(s=E(e,function(e,t){var r=t.length>0,i=e.length>0,o=function(o,a,s,c,u){var h,f,v,g=0,y=\"0\",x=o&&[],b=[],w=l,M=o||i&&n.find.TAG(\"*\",u),S=_+=null==w?1:Math.random()||.1,T=M.length;for(u&&(l=a===p||a||u);y!==T&&null!=(h=M[y]);y++){if(i&&h){for(f=0,a||h.ownerDocument===p||(d(h),s=!m);v=e[f++];)if(v(h,a||p,s)){c.push(h);break}u&&(_=S)}r&&((h=!v&&h)&&g--,o&&x.push(h))}if(g+=y,r&&y!==g){for(f=0;v=t[f++];)v(x,b,a,s);if(o){if(g>0)for(;y--;)x[y]||b[y]||(b[y]=P.call(c));b=_e(b)}U.apply(c,b),u&&!o&&b.length>0&&g+t.length>1&&se.uniqueSort(c)}return u&&(_=S,l=w),x};return r?le(o):o}(o,i))).selector=e}return s},c=se.select=function(e,t,r,i){var o,c,l,u,h,d=\"function\"==typeof e&&e,p=!i&&a(e=d.selector||e);if(r=r||[],1===p.length){if((c=p[0]=p[0].slice(0)).length>2&&\"ID\"===(l=c[0]).type&&9===t.nodeType&&m&&n.relative[c[1].type]){if(!(t=(n.find.ID(l.matches[0].replace(te,re),t)||[])[0]))return r;d&&(t=t.parentNode),e=e.slice(c.shift().value.length)}for(o=Y.needsContext.test(e)?0:c.length;o--&&(l=c[o],!n.relative[u=l.type]);)if((h=n.find[u])&&(i=h(l.matches[0].replace(te,re),ee.test(c[0].type)&&ge(t.parentNode)||t))){if(c.splice(o,1),!(e=i.length&&xe(c)))return U.apply(r,i),r;break}}return(d||s(e,p))(i,t,!m,r,!t||ee.test(e)&&ge(t.parentNode)||t),r},r.sortStable=b.split(\"\").sort(A).join(\"\")===b,r.detectDuplicates=!!h,d(),r.sortDetached=ue(function(e){return 1&e.compareDocumentPosition(p.createElement(\"fieldset\"))}),ue(function(e){return e.innerHTML=\"<a href='#'></a>\",\"#\"===e.firstChild.getAttribute(\"href\")})||he(\"type|href|height|width\",function(e,t,r){if(!r)return e.getAttribute(t,\"type\"===t.toLowerCase()?1:2)}),r.attributes&&ue(function(e){return e.innerHTML=\"<input/>\",e.firstChild.setAttribute(\"value\",\"\"),\"\"===e.firstChild.getAttribute(\"value\")})||he(\"value\",function(e,t,r){if(!r&&\"input\"===e.nodeName.toLowerCase())return e.defaultValue}),ue(function(e){return null==e.getAttribute(\"disabled\")})||he(N,function(e,t,r){var n;if(!r)return!0===e[t]?t.toLowerCase():(n=e.getAttributeNode(t))&&n.specified?n.value:null}),se}(r);M.find=E,M.expr=E.selectors,M.expr[\":\"]=M.expr.pseudos,M.uniqueSort=M.unique=E.uniqueSort,M.text=E.getText,M.isXMLDoc=E.isXML,M.contains=E.contains,M.escapeSelector=E.escape;var C=function(e,t,r){for(var n=[],i=void 0!==r;(e=e[t])&&9!==e.nodeType;)if(1===e.nodeType){if(i&&M(e).is(r))break;n.push(e)}return n},A=function(e,t){for(var r=[];e;e=e.nextSibling)1===e.nodeType&&e!==t&&r.push(e);return r},L=M.expr.match.needsContext;function R(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()}var P=/^<([a-z][^\\/\\0>:\\x20\\t\\r\\n\\f]*)[\\x20\\t\\r\\n\\f]*\\/?>(?:<\\/\\1>|)$/i;function D(e,t,r){return y(t)?M.grep(e,function(e,n){return!!t.call(e,n,e)!==r}):t.nodeType?M.grep(e,function(e){return e===t!==r}):\"string\"!=typeof t?M.grep(e,function(e){return h.call(t,e)>-1!==r}):M.filter(t,e,r)}M.filter=function(e,t,r){var n=t[0];return r&&(e=\":not(\"+e+\")\"),1===t.length&&1===n.nodeType?M.find.matchesSelector(n,e)?[n]:[]:M.find.matches(e,M.grep(t,function(e){return 1===e.nodeType}))},M.fn.extend({find:function(e){var t,r,n=this.length,i=this;if(\"string\"!=typeof e)return this.pushStack(M(e).filter(function(){for(t=0;t<n;t++)if(M.contains(i[t],this))return!0}));for(r=this.pushStack([]),t=0;t<n;t++)M.find(e,i[t],r);return n>1?M.uniqueSort(r):r},filter:function(e){return this.pushStack(D(this,e||[],!1))},not:function(e){return this.pushStack(D(this,e||[],!0))},is:function(e){return!!D(this,\"string\"==typeof e&&L.test(e)?M(e):e||[],!1).length}});var U,I=/^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]+))$/;(M.fn.init=function(e,t,r){var n,i;if(!e)return this;if(r=r||U,\"string\"==typeof e){if(!(n=\"<\"===e[0]&&\">\"===e[e.length-1]&&e.length>=3?[null,e,null]:I.exec(e))||!n[1]&&t)return!t||t.jquery?(t||r).find(e):this.constructor(t).find(e);if(n[1]){if(t=t instanceof M?t[0]:t,M.merge(this,M.parseHTML(n[1],t&&t.nodeType?t.ownerDocument||t:a,!0)),P.test(n[1])&&M.isPlainObject(t))for(n in t)y(this[n])?this[n](t[n]):this.attr(n,t[n]);return this}return(i=a.getElementById(n[2]))&&(this[0]=i,this.length=1),this}return e.nodeType?(this[0]=e,this.length=1,this):y(e)?void 0!==r.ready?r.ready(e):e(M):M.makeArray(e,this)}).prototype=M.fn,U=M(a);var F=/^(?:parents|prev(?:Until|All))/,N={children:!0,contents:!0,next:!0,prev:!0};function B(e,t){for(;(e=e[t])&&1!==e.nodeType;);return e}M.fn.extend({has:function(e){var t=M(e,this),r=t.length;return this.filter(function(){for(var e=0;e<r;e++)if(M.contains(this,t[e]))return!0})},closest:function(e,t){var r,n=0,i=this.length,o=[],a=\"string\"!=typeof e&&M(e);if(!L.test(e))for(;n<i;n++)for(r=this[n];r&&r!==t;r=r.parentNode)if(r.nodeType<11&&(a?a.index(r)>-1:1===r.nodeType&&M.find.matchesSelector(r,e))){o.push(r);break}return this.pushStack(o.length>1?M.uniqueSort(o):o)},index:function(e){return e?\"string\"==typeof e?h.call(M(e),this[0]):h.call(this,e.jquery?e[0]:e):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){return this.pushStack(M.uniqueSort(M.merge(this.get(),M(e,t))))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}}),M.each({parent:function(e){var t=e.parentNode;return t&&11!==t.nodeType?t:null},parents:function(e){return C(e,\"parentNode\")},parentsUntil:function(e,t,r){return C(e,\"parentNode\",r)},next:function(e){return B(e,\"nextSibling\")},prev:function(e){return B(e,\"previousSibling\")},nextAll:function(e){return C(e,\"nextSibling\")},prevAll:function(e){return C(e,\"previousSibling\")},nextUntil:function(e,t,r){return C(e,\"nextSibling\",r)},prevUntil:function(e,t,r){return C(e,\"previousSibling\",r)},siblings:function(e){return A((e.parentNode||{}).firstChild,e)},children:function(e){return A(e.firstChild)},contents:function(e){return void 0!==e.contentDocument?e.contentDocument:(R(e,\"template\")&&(e=e.content||e),M.merge([],e.childNodes))}},function(e,t){M.fn[e]=function(r,n){var i=M.map(this,t,r);return\"Until\"!==e.slice(-5)&&(n=r),n&&\"string\"==typeof n&&(i=M.filter(n,i)),this.length>1&&(N[e]||M.uniqueSort(i),F.test(e)&&i.reverse()),this.pushStack(i)}});var O=/[^\\x20\\t\\r\\n\\f]+/g;function V(e){return e}function G(e){throw e}function z(e,t,r,n){var i;try{e&&y(i=e.promise)?i.call(e).done(t).fail(r):e&&y(i=e.then)?i.call(e,t,r):t.apply(void 0,[e].slice(n))}catch(e){r.apply(void 0,[e])}}M.Callbacks=function(e){e=\"string\"==typeof e?function(e){var t={};return M.each(e.match(O)||[],function(e,r){t[r]=!0}),t}(e):M.extend({},e);var t,r,n,i,o=[],a=[],s=-1,c=function(){for(i=i||e.once,n=t=!0;a.length;s=-1)for(r=a.shift();++s<o.length;)!1===o[s].apply(r[0],r[1])&&e.stopOnFalse&&(s=o.length,r=!1);e.memory||(r=!1),t=!1,i&&(o=r?[]:\"\")},l={add:function(){return o&&(r&&!t&&(s=o.length-1,a.push(r)),function t(r){M.each(r,function(r,n){y(n)?e.unique&&l.has(n)||o.push(n):n&&n.length&&\"string\"!==_(n)&&t(n)})}(arguments),r&&!t&&c()),this},remove:function(){return M.each(arguments,function(e,t){for(var r;(r=M.inArray(t,o,r))>-1;)o.splice(r,1),r<=s&&s--}),this},has:function(e){return e?M.inArray(e,o)>-1:o.length>0},empty:function(){return o&&(o=[]),this},disable:function(){return i=a=[],o=r=\"\",this},disabled:function(){return!o},lock:function(){return i=a=[],r||t||(o=r=\"\"),this},locked:function(){return!!i},fireWith:function(e,r){return i||(r=[e,(r=r||[]).slice?r.slice():r],a.push(r),t||c()),this},fire:function(){return l.fireWith(this,arguments),this},fired:function(){return!!n}};return l},M.extend({Deferred:function(e){var t=[[\"notify\",\"progress\",M.Callbacks(\"memory\"),M.Callbacks(\"memory\"),2],[\"resolve\",\"done\",M.Callbacks(\"once memory\"),M.Callbacks(\"once memory\"),0,\"resolved\"],[\"reject\",\"fail\",M.Callbacks(\"once memory\"),M.Callbacks(\"once memory\"),1,\"rejected\"]],n=\"pending\",i={state:function(){return n},always:function(){return o.done(arguments).fail(arguments),this},catch:function(e){return i.then(null,e)},pipe:function(){var e=arguments;return M.Deferred(function(r){M.each(t,function(t,n){var i=y(e[n[4]])&&e[n[4]];o[n[1]](function(){var e=i&&i.apply(this,arguments);e&&y(e.promise)?e.promise().progress(r.notify).done(r.resolve).fail(r.reject):r[n[0]+\"With\"](this,i?[e]:arguments)})}),e=null}).promise()},then:function(e,n,i){var o=0;function a(e,t,n,i){return function(){var s=this,c=arguments,l=function(){var r,l;if(!(e<o)){if((r=n.apply(s,c))===t.promise())throw new TypeError(\"Thenable self-resolution\");l=r&&(\"object\"==typeof r||\"function\"==typeof r)&&r.then,y(l)?i?l.call(r,a(o,t,V,i),a(o,t,G,i)):(o++,l.call(r,a(o,t,V,i),a(o,t,G,i),a(o,t,V,t.notifyWith))):(n!==V&&(s=void 0,c=[r]),(i||t.resolveWith)(s,c))}},u=i?l:function(){try{l()}catch(r){M.Deferred.exceptionHook&&M.Deferred.exceptionHook(r,u.stackTrace),e+1>=o&&(n!==G&&(s=void 0,c=[r]),t.rejectWith(s,c))}};e?u():(M.Deferred.getStackHook&&(u.stackTrace=M.Deferred.getStackHook()),r.setTimeout(u))}}return M.Deferred(function(r){t[0][3].add(a(0,r,y(i)?i:V,r.notifyWith)),t[1][3].add(a(0,r,y(e)?e:V)),t[2][3].add(a(0,r,y(n)?n:G))}).promise()},promise:function(e){return null!=e?M.extend(e,i):i}},o={};return M.each(t,function(e,r){var a=r[2],s=r[5];i[r[1]]=a.add,s&&a.add(function(){n=s},t[3-e][2].disable,t[3-e][3].disable,t[0][2].lock,t[0][3].lock),a.add(r[3].fire),o[r[0]]=function(){return o[r[0]+\"With\"](this===o?void 0:this,arguments),this},o[r[0]+\"With\"]=a.fireWith}),i.promise(o),e&&e.call(o,o),o},when:function(e){var t=arguments.length,r=t,n=Array(r),i=c.call(arguments),o=M.Deferred(),a=function(e){return function(r){n[e]=this,i[e]=arguments.length>1?c.call(arguments):r,--t||o.resolveWith(n,i)}};if(t<=1&&(z(e,o.done(a(r)).resolve,o.reject,!t),\"pending\"===o.state()||y(i[r]&&i[r].then)))return o.then();for(;r--;)z(i[r],a(r),o.reject);return o.promise()}});var k=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;M.Deferred.exceptionHook=function(e,t){r.console&&r.console.warn&&e&&k.test(e.name)&&r.console.warn(\"jQuery.Deferred exception: \"+e.message,e.stack,t)},M.readyException=function(e){r.setTimeout(function(){throw e})};var j=M.Deferred();function H(){a.removeEventListener(\"DOMContentLoaded\",H),r.removeEventListener(\"load\",H),M.ready()}M.fn.ready=function(e){return j.then(e).catch(function(e){M.readyException(e)}),this},M.extend({isReady:!1,readyWait:1,ready:function(e){(!0===e?--M.readyWait:M.isReady)||(M.isReady=!0,!0!==e&&--M.readyWait>0||j.resolveWith(a,[M]))}}),M.ready.then=j.then,\"complete\"===a.readyState||\"loading\"!==a.readyState&&!a.documentElement.doScroll?r.setTimeout(M.ready):(a.addEventListener(\"DOMContentLoaded\",H),r.addEventListener(\"load\",H));var W=function(e,t,r,n,i,o,a){var s=0,c=e.length,l=null==r;if(\"object\"===_(r))for(s in i=!0,r)W(e,t,s,r[s],!0,o,a);else if(void 0!==n&&(i=!0,y(n)||(a=!0),l&&(a?(t.call(e,n),t=null):(l=t,t=function(e,t,r){return l.call(M(e),r)})),t))for(;s<c;s++)t(e[s],r,a?n:n.call(e[s],s,t(e[s],r)));return i?e:l?t.call(e):c?t(e[0],r):o},X=/^-ms-/,q=/-([a-z])/g;function Y(e,t){return t.toUpperCase()}function Z(e){return e.replace(X,\"ms-\").replace(q,Y)}var K=function(e){return 1===e.nodeType||9===e.nodeType||!+e.nodeType};function Q(){this.expando=M.expando+Q.uid++}Q.uid=1,Q.prototype={cache:function(e){var t=e[this.expando];return t||(t={},K(e)&&(e.nodeType?e[this.expando]=t:Object.defineProperty(e,this.expando,{value:t,configurable:!0}))),t},set:function(e,t,r){var n,i=this.cache(e);if(\"string\"==typeof t)i[Z(t)]=r;else for(n in t)i[Z(n)]=t[n];return i},get:function(e,t){return void 0===t?this.cache(e):e[this.expando]&&e[this.expando][Z(t)]},access:function(e,t,r){return void 0===t||t&&\"string\"==typeof t&&void 0===r?this.get(e,t):(this.set(e,t,r),void 0!==r?r:t)},remove:function(e,t){var r,n=e[this.expando];if(void 0!==n){if(void 0!==t){r=(t=Array.isArray(t)?t.map(Z):(t=Z(t))in n?[t]:t.match(O)||[]).length;for(;r--;)delete n[t[r]]}(void 0===t||M.isEmptyObject(n))&&(e.nodeType?e[this.expando]=void 0:delete e[this.expando])}},hasData:function(e){var t=e[this.expando];return void 0!==t&&!M.isEmptyObject(t)}};var J=new Q,$=new Q,ee=/^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,te=/[A-Z]/g;function re(e,t,r){var n;if(void 0===r&&1===e.nodeType)if(n=\"data-\"+t.replace(te,\"-$&\").toLowerCase(),\"string\"==typeof(r=e.getAttribute(n))){try{r=function(e){return\"true\"===e||\"false\"!==e&&(\"null\"===e?null:e===+e+\"\"?+e:ee.test(e)?JSON.parse(e):e)}(r)}catch(e){}$.set(e,t,r)}else r=void 0;return r}M.extend({hasData:function(e){return $.hasData(e)||J.hasData(e)},data:function(e,t,r){return $.access(e,t,r)},removeData:function(e,t){$.remove(e,t)},_data:function(e,t,r){return J.access(e,t,r)},_removeData:function(e,t){J.remove(e,t)}}),M.fn.extend({data:function(e,t){var r,n,i,o=this[0],a=o&&o.attributes;if(void 0===e){if(this.length&&(i=$.get(o),1===o.nodeType&&!J.get(o,\"hasDataAttrs\"))){for(r=a.length;r--;)a[r]&&0===(n=a[r].name).indexOf(\"data-\")&&(n=Z(n.slice(5)),re(o,n,i[n]));J.set(o,\"hasDataAttrs\",!0)}return i}return\"object\"==typeof e?this.each(function(){$.set(this,e)}):W(this,function(t){var r;if(o&&void 0===t)return void 0!==(r=$.get(o,e))?r:void 0!==(r=re(o,e))?r:void 0;this.each(function(){$.set(this,e,t)})},null,t,arguments.length>1,null,!0)},removeData:function(e){return this.each(function(){$.remove(this,e)})}}),M.extend({queue:function(e,t,r){var n;if(e)return t=(t||\"fx\")+\"queue\",n=J.get(e,t),r&&(!n||Array.isArray(r)?n=J.access(e,t,M.makeArray(r)):n.push(r)),n||[]},dequeue:function(e,t){t=t||\"fx\";var r=M.queue(e,t),n=r.length,i=r.shift(),o=M._queueHooks(e,t);\"inprogress\"===i&&(i=r.shift(),n--),i&&(\"fx\"===t&&r.unshift(\"inprogress\"),delete o.stop,i.call(e,function(){M.dequeue(e,t)},o)),!n&&o&&o.empty.fire()},_queueHooks:function(e,t){var r=t+\"queueHooks\";return J.get(e,r)||J.access(e,r,{empty:M.Callbacks(\"once memory\").add(function(){J.remove(e,[t+\"queue\",r])})})}}),M.fn.extend({queue:function(e,t){var r=2;return\"string\"!=typeof e&&(t=e,e=\"fx\",r--),arguments.length<r?M.queue(this[0],e):void 0===t?this:this.each(function(){var r=M.queue(this,e,t);M._queueHooks(this,e),\"fx\"===e&&\"inprogress\"!==r[0]&&M.dequeue(this,e)})},dequeue:function(e){return this.each(function(){M.dequeue(this,e)})},clearQueue:function(e){return this.queue(e||\"fx\",[])},promise:function(e,t){var r,n=1,i=M.Deferred(),o=this,a=this.length,s=function(){--n||i.resolveWith(o,[o])};for(\"string\"!=typeof e&&(t=e,e=void 0),e=e||\"fx\";a--;)(r=J.get(o[a],e+\"queueHooks\"))&&r.empty&&(n++,r.empty.add(s));return s(),i.promise(t)}});var ne=/[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/.source,ie=new RegExp(\"^(?:([+-])=|)(\"+ne+\")([a-z%]*)$\",\"i\"),oe=[\"Top\",\"Right\",\"Bottom\",\"Left\"],ae=a.documentElement,se=function(e){return M.contains(e.ownerDocument,e)},ce={composed:!0};ae.getRootNode&&(se=function(e){return M.contains(e.ownerDocument,e)||e.getRootNode(ce)===e.ownerDocument});var le=function(e,t){return\"none\"===(e=t||e).style.display||\"\"===e.style.display&&se(e)&&\"none\"===M.css(e,\"display\")},ue=function(e,t,r,n){var i,o,a={};for(o in t)a[o]=e.style[o],e.style[o]=t[o];for(o in i=r.apply(e,n||[]),t)e.style[o]=a[o];return i};function he(e,t,r,n){var i,o,a=20,s=n?function(){return n.cur()}:function(){return M.css(e,t,\"\")},c=s(),l=r&&r[3]||(M.cssNumber[t]?\"\":\"px\"),u=e.nodeType&&(M.cssNumber[t]||\"px\"!==l&&+c)&&ie.exec(M.css(e,t));if(u&&u[3]!==l){for(c/=2,l=l||u[3],u=+c||1;a--;)M.style(e,t,u+l),(1-o)*(1-(o=s()/c||.5))<=0&&(a=0),u/=o;u*=2,M.style(e,t,u+l),r=r||[]}return r&&(u=+u||+c||0,i=r[1]?u+(r[1]+1)*r[2]:+r[2],n&&(n.unit=l,n.start=u,n.end=i)),i}var de={};function pe(e){var t,r=e.ownerDocument,n=e.nodeName,i=de[n];return i||(t=r.body.appendChild(r.createElement(n)),i=M.css(t,\"display\"),t.parentNode.removeChild(t),\"none\"===i&&(i=\"block\"),de[n]=i,i)}function fe(e,t){for(var r,n,i=[],o=0,a=e.length;o<a;o++)(n=e[o]).style&&(r=n.style.display,t?(\"none\"===r&&(i[o]=J.get(n,\"display\")||null,i[o]||(n.style.display=\"\")),\"\"===n.style.display&&le(n)&&(i[o]=pe(n))):\"none\"!==r&&(i[o]=\"none\",J.set(n,\"display\",r)));for(o=0;o<a;o++)null!=i[o]&&(e[o].style.display=i[o]);return e}M.fn.extend({show:function(){return fe(this,!0)},hide:function(){return fe(this)},toggle:function(e){return\"boolean\"==typeof e?e?this.show():this.hide():this.each(function(){le(this)?M(this).show():M(this).hide()})}});var me=/^(?:checkbox|radio)$/i,ve=/<([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)/i,ge=/^$|^module$|\\/(?:java|ecma)script/i,ye={option:[1,\"<select multiple='multiple'>\",\"</select>\"],thead:[1,\"<table>\",\"</table>\"],col:[2,\"<table><colgroup>\",\"</colgroup></table>\"],tr:[2,\"<table><tbody>\",\"</tbody></table>\"],td:[3,\"<table><tbody><tr>\",\"</tr></tbody></table>\"],_default:[0,\"\",\"\"]};function xe(e,t){var r;return r=void 0!==e.getElementsByTagName?e.getElementsByTagName(t||\"*\"):void 0!==e.querySelectorAll?e.querySelectorAll(t||\"*\"):[],void 0===t||t&&R(e,t)?M.merge([e],r):r}function be(e,t){for(var r=0,n=e.length;r<n;r++)J.set(e[r],\"globalEval\",!t||J.get(t[r],\"globalEval\"))}ye.optgroup=ye.option,ye.tbody=ye.tfoot=ye.colgroup=ye.caption=ye.thead,ye.th=ye.td;var we,_e,Me=/<|&#?\\w+;/;function Se(e,t,r,n,i){for(var o,a,s,c,l,u,h=t.createDocumentFragment(),d=[],p=0,f=e.length;p<f;p++)if((o=e[p])||0===o)if(\"object\"===_(o))M.merge(d,o.nodeType?[o]:o);else if(Me.test(o)){for(a=a||h.appendChild(t.createElement(\"div\")),s=(ve.exec(o)||[\"\",\"\"])[1].toLowerCase(),c=ye[s]||ye._default,a.innerHTML=c[1]+M.htmlPrefilter(o)+c[2],u=c[0];u--;)a=a.lastChild;M.merge(d,a.childNodes),(a=h.firstChild).textContent=\"\"}else d.push(t.createTextNode(o));for(h.textContent=\"\",p=0;o=d[p++];)if(n&&M.inArray(o,n)>-1)i&&i.push(o);else if(l=se(o),a=xe(h.appendChild(o),\"script\"),l&&be(a),r)for(u=0;o=a[u++];)ge.test(o.type||\"\")&&r.push(o);return h}we=a.createDocumentFragment().appendChild(a.createElement(\"div\")),(_e=a.createElement(\"input\")).setAttribute(\"type\",\"radio\"),_e.setAttribute(\"checked\",\"checked\"),_e.setAttribute(\"name\",\"t\"),we.appendChild(_e),g.checkClone=we.cloneNode(!0).cloneNode(!0).lastChild.checked,we.innerHTML=\"<textarea>x</textarea>\",g.noCloneChecked=!!we.cloneNode(!0).lastChild.defaultValue;var Te=/^key/,Ee=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,Ce=/^([^.]*)(?:\\.(.+)|)/;function Ae(){return!0}function Le(){return!1}function Re(e,t){return e===function(){try{return a.activeElement}catch(e){}}()==(\"focus\"===t)}function Pe(e,t,r,n,i,o){var a,s;if(\"object\"==typeof t){for(s in\"string\"!=typeof r&&(n=n||r,r=void 0),t)Pe(e,s,r,n,t[s],o);return e}if(null==n&&null==i?(i=r,n=r=void 0):null==i&&(\"string\"==typeof r?(i=n,n=void 0):(i=n,n=r,r=void 0)),!1===i)i=Le;else if(!i)return e;return 1===o&&(a=i,(i=function(e){return M().off(e),a.apply(this,arguments)}).guid=a.guid||(a.guid=M.guid++)),e.each(function(){M.event.add(this,t,i,n,r)})}function De(e,t,r){r?(J.set(e,t,!1),M.event.add(e,t,{namespace:!1,handler:function(e){var n,i,o=J.get(this,t);if(1&e.isTrigger&&this[t]){if(o.length)(M.event.special[t]||{}).delegateType&&e.stopPropagation();else if(o=c.call(arguments),J.set(this,t,o),n=r(this,t),this[t](),o!==(i=J.get(this,t))||n?J.set(this,t,!1):i={},o!==i)return e.stopImmediatePropagation(),e.preventDefault(),i.value}else o.length&&(J.set(this,t,{value:M.event.trigger(M.extend(o[0],M.Event.prototype),o.slice(1),this)}),e.stopImmediatePropagation())}})):void 0===J.get(e,t)&&M.event.add(e,t,Ae)}M.event={global:{},add:function(e,t,r,n,i){var o,a,s,c,l,u,h,d,p,f,m,v=J.get(e);if(v)for(r.handler&&(r=(o=r).handler,i=o.selector),i&&M.find.matchesSelector(ae,i),r.guid||(r.guid=M.guid++),(c=v.events)||(c=v.events={}),(a=v.handle)||(a=v.handle=function(t){return void 0!==M&&M.event.triggered!==t.type?M.event.dispatch.apply(e,arguments):void 0}),l=(t=(t||\"\").match(O)||[\"\"]).length;l--;)p=m=(s=Ce.exec(t[l])||[])[1],f=(s[2]||\"\").split(\".\").sort(),p&&(h=M.event.special[p]||{},p=(i?h.delegateType:h.bindType)||p,h=M.event.special[p]||{},u=M.extend({type:p,origType:m,data:n,handler:r,guid:r.guid,selector:i,needsContext:i&&M.expr.match.needsContext.test(i),namespace:f.join(\".\")},o),(d=c[p])||((d=c[p]=[]).delegateCount=0,h.setup&&!1!==h.setup.call(e,n,f,a)||e.addEventListener&&e.addEventListener(p,a)),h.add&&(h.add.call(e,u),u.handler.guid||(u.handler.guid=r.guid)),i?d.splice(d.delegateCount++,0,u):d.push(u),M.event.global[p]=!0)},remove:function(e,t,r,n,i){var o,a,s,c,l,u,h,d,p,f,m,v=J.hasData(e)&&J.get(e);if(v&&(c=v.events)){for(l=(t=(t||\"\").match(O)||[\"\"]).length;l--;)if(p=m=(s=Ce.exec(t[l])||[])[1],f=(s[2]||\"\").split(\".\").sort(),p){for(h=M.event.special[p]||{},d=c[p=(n?h.delegateType:h.bindType)||p]||[],s=s[2]&&new RegExp(\"(^|\\\\.)\"+f.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"),a=o=d.length;o--;)u=d[o],!i&&m!==u.origType||r&&r.guid!==u.guid||s&&!s.test(u.namespace)||n&&n!==u.selector&&(\"**\"!==n||!u.selector)||(d.splice(o,1),u.selector&&d.delegateCount--,h.remove&&h.remove.call(e,u));a&&!d.length&&(h.teardown&&!1!==h.teardown.call(e,f,v.handle)||M.removeEvent(e,p,v.handle),delete c[p])}else for(p in c)M.event.remove(e,p+t[l],r,n,!0);M.isEmptyObject(c)&&J.remove(e,\"handle events\")}},dispatch:function(e){var t,r,n,i,o,a,s=M.event.fix(e),c=new Array(arguments.length),l=(J.get(this,\"events\")||{})[s.type]||[],u=M.event.special[s.type]||{};for(c[0]=s,t=1;t<arguments.length;t++)c[t]=arguments[t];if(s.delegateTarget=this,!u.preDispatch||!1!==u.preDispatch.call(this,s)){for(a=M.event.handlers.call(this,s,l),t=0;(i=a[t++])&&!s.isPropagationStopped();)for(s.currentTarget=i.elem,r=0;(o=i.handlers[r++])&&!s.isImmediatePropagationStopped();)s.rnamespace&&!1!==o.namespace&&!s.rnamespace.test(o.namespace)||(s.handleObj=o,s.data=o.data,void 0!==(n=((M.event.special[o.origType]||{}).handle||o.handler).apply(i.elem,c))&&!1===(s.result=n)&&(s.preventDefault(),s.stopPropagation()));return u.postDispatch&&u.postDispatch.call(this,s),s.result}},handlers:function(e,t){var r,n,i,o,a,s=[],c=t.delegateCount,l=e.target;if(c&&l.nodeType&&!(\"click\"===e.type&&e.button>=1))for(;l!==this;l=l.parentNode||this)if(1===l.nodeType&&(\"click\"!==e.type||!0!==l.disabled)){for(o=[],a={},r=0;r<c;r++)void 0===a[i=(n=t[r]).selector+\" \"]&&(a[i]=n.needsContext?M(i,this).index(l)>-1:M.find(i,this,null,[l]).length),a[i]&&o.push(n);o.length&&s.push({elem:l,handlers:o})}return l=this,c<t.length&&s.push({elem:l,handlers:t.slice(c)}),s},addProp:function(e,t){Object.defineProperty(M.Event.prototype,e,{enumerable:!0,configurable:!0,get:y(t)?function(){if(this.originalEvent)return t(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[e]},set:function(t){Object.defineProperty(this,e,{enumerable:!0,configurable:!0,writable:!0,value:t})}})},fix:function(e){return e[M.expando]?e:new M.Event(e)},special:{load:{noBubble:!0},click:{setup:function(e){var t=this||e;return me.test(t.type)&&t.click&&R(t,\"input\")&&De(t,\"click\",Ae),!1},trigger:function(e){var t=this||e;return me.test(t.type)&&t.click&&R(t,\"input\")&&De(t,\"click\"),!0},_default:function(e){var t=e.target;return me.test(t.type)&&t.click&&R(t,\"input\")&&J.get(t,\"click\")||R(t,\"a\")}},beforeunload:{postDispatch:function(e){void 0!==e.result&&e.originalEvent&&(e.originalEvent.returnValue=e.result)}}}},M.removeEvent=function(e,t,r){e.removeEventListener&&e.removeEventListener(t,r)},M.Event=function(e,t){if(!(this instanceof M.Event))return new M.Event(e,t);e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||void 0===e.defaultPrevented&&!1===e.returnValue?Ae:Le,this.target=e.target&&3===e.target.nodeType?e.target.parentNode:e.target,this.currentTarget=e.currentTarget,this.relatedTarget=e.relatedTarget):this.type=e,t&&M.extend(this,t),this.timeStamp=e&&e.timeStamp||Date.now(),this[M.expando]=!0},M.Event.prototype={constructor:M.Event,isDefaultPrevented:Le,isPropagationStopped:Le,isImmediatePropagationStopped:Le,isSimulated:!1,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=Ae,e&&!this.isSimulated&&e.preventDefault()},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=Ae,e&&!this.isSimulated&&e.stopPropagation()},stopImmediatePropagation:function(){var e=this.originalEvent;this.isImmediatePropagationStopped=Ae,e&&!this.isSimulated&&e.stopImmediatePropagation(),this.stopPropagation()}},M.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,char:!0,code:!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:function(e){var t=e.button;return null==e.which&&Te.test(e.type)?null!=e.charCode?e.charCode:e.keyCode:!e.which&&void 0!==t&&Ee.test(e.type)?1&t?1:2&t?3:4&t?2:0:e.which}},M.event.addProp),M.each({focus:\"focusin\",blur:\"focusout\"},function(e,t){M.event.special[e]={setup:function(){return De(this,e,Re),!1},trigger:function(){return De(this,e),!0},delegateType:t}}),M.each({mouseenter:\"mouseover\",mouseleave:\"mouseout\",pointerenter:\"pointerover\",pointerleave:\"pointerout\"},function(e,t){M.event.special[e]={delegateType:t,bindType:t,handle:function(e){var r,n=e.relatedTarget,i=e.handleObj;return n&&(n===this||M.contains(this,n))||(e.type=i.origType,r=i.handler.apply(this,arguments),e.type=t),r}}}),M.fn.extend({on:function(e,t,r,n){return Pe(this,e,t,r,n)},one:function(e,t,r,n){return Pe(this,e,t,r,n,1)},off:function(e,t,r){var n,i;if(e&&e.preventDefault&&e.handleObj)return n=e.handleObj,M(e.delegateTarget).off(n.namespace?n.origType+\".\"+n.namespace:n.origType,n.selector,n.handler),this;if(\"object\"==typeof e){for(i in e)this.off(i,t,e[i]);return this}return!1!==t&&\"function\"!=typeof t||(r=t,t=void 0),!1===r&&(r=Le),this.each(function(){M.event.remove(this,e,r,t)})}});var Ue=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)[^>]*)\\/>/gi,Ie=/<script|<style|<link/i,Fe=/checked\\s*(?:[^=]|=\\s*.checked.)/i,Ne=/^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g;function Be(e,t){return R(e,\"table\")&&R(11!==t.nodeType?t:t.firstChild,\"tr\")&&M(e).children(\"tbody\")[0]||e}function Oe(e){return e.type=(null!==e.getAttribute(\"type\"))+\"/\"+e.type,e}function Ve(e){return\"true/\"===(e.type||\"\").slice(0,5)?e.type=e.type.slice(5):e.removeAttribute(\"type\"),e}function Ge(e,t){var r,n,i,o,a,s,c,l;if(1===t.nodeType){if(J.hasData(e)&&(o=J.access(e),a=J.set(t,o),l=o.events))for(i in delete a.handle,a.events={},l)for(r=0,n=l[i].length;r<n;r++)M.event.add(t,i,l[i][r]);$.hasData(e)&&(s=$.access(e),c=M.extend({},s),$.set(t,c))}}function ze(e,t){var r=t.nodeName.toLowerCase();\"input\"===r&&me.test(e.type)?t.checked=e.checked:\"input\"!==r&&\"textarea\"!==r||(t.defaultValue=e.defaultValue)}function ke(e,t,r,n){t=l.apply([],t);var i,o,a,s,c,u,h=0,d=e.length,p=d-1,f=t[0],m=y(f);if(m||d>1&&\"string\"==typeof f&&!g.checkClone&&Fe.test(f))return e.each(function(i){var o=e.eq(i);m&&(t[0]=f.call(this,i,o.html())),ke(o,t,r,n)});if(d&&(o=(i=Se(t,e[0].ownerDocument,!1,e,n)).firstChild,1===i.childNodes.length&&(i=o),o||n)){for(s=(a=M.map(xe(i,\"script\"),Oe)).length;h<d;h++)c=i,h!==p&&(c=M.clone(c,!0,!0),s&&M.merge(a,xe(c,\"script\"))),r.call(e[h],c,h);if(s)for(u=a[a.length-1].ownerDocument,M.map(a,Ve),h=0;h<s;h++)c=a[h],ge.test(c.type||\"\")&&!J.access(c,\"globalEval\")&&M.contains(u,c)&&(c.src&&\"module\"!==(c.type||\"\").toLowerCase()?M._evalUrl&&!c.noModule&&M._evalUrl(c.src,{nonce:c.nonce||c.getAttribute(\"nonce\")}):w(c.textContent.replace(Ne,\"\"),c,u))}return e}function je(e,t,r){for(var n,i=t?M.filter(t,e):e,o=0;null!=(n=i[o]);o++)r||1!==n.nodeType||M.cleanData(xe(n)),n.parentNode&&(r&&se(n)&&be(xe(n,\"script\")),n.parentNode.removeChild(n));return e}M.extend({htmlPrefilter:function(e){return e.replace(Ue,\"<$1></$2>\")},clone:function(e,t,r){var n,i,o,a,s=e.cloneNode(!0),c=se(e);if(!(g.noCloneChecked||1!==e.nodeType&&11!==e.nodeType||M.isXMLDoc(e)))for(a=xe(s),n=0,i=(o=xe(e)).length;n<i;n++)ze(o[n],a[n]);if(t)if(r)for(o=o||xe(e),a=a||xe(s),n=0,i=o.length;n<i;n++)Ge(o[n],a[n]);else Ge(e,s);return(a=xe(s,\"script\")).length>0&&be(a,!c&&xe(e,\"script\")),s},cleanData:function(e){for(var t,r,n,i=M.event.special,o=0;void 0!==(r=e[o]);o++)if(K(r)){if(t=r[J.expando]){if(t.events)for(n in t.events)i[n]?M.event.remove(r,n):M.removeEvent(r,n,t.handle);r[J.expando]=void 0}r[$.expando]&&(r[$.expando]=void 0)}}}),M.fn.extend({detach:function(e){return je(this,e,!0)},remove:function(e){return je(this,e)},text:function(e){return W(this,function(e){return void 0===e?M.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=e)})},null,e,arguments.length)},append:function(){return ke(this,arguments,function(e){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||Be(this,e).appendChild(e)})},prepend:function(){return ke(this,arguments,function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=Be(this,e);t.insertBefore(e,t.firstChild)}})},before:function(){return ke(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this)})},after:function(){return ke(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this.nextSibling)})},empty:function(){for(var e,t=0;null!=(e=this[t]);t++)1===e.nodeType&&(M.cleanData(xe(e,!1)),e.textContent=\"\");return this},clone:function(e,t){return e=null!=e&&e,t=null==t?e:t,this.map(function(){return M.clone(this,e,t)})},html:function(e){return W(this,function(e){var t=this[0]||{},r=0,n=this.length;if(void 0===e&&1===t.nodeType)return t.innerHTML;if(\"string\"==typeof e&&!Ie.test(e)&&!ye[(ve.exec(e)||[\"\",\"\"])[1].toLowerCase()]){e=M.htmlPrefilter(e);try{for(;r<n;r++)1===(t=this[r]||{}).nodeType&&(M.cleanData(xe(t,!1)),t.innerHTML=e);t=0}catch(e){}}t&&this.empty().append(e)},null,e,arguments.length)},replaceWith:function(){var e=[];return ke(this,arguments,function(t){var r=this.parentNode;M.inArray(this,e)<0&&(M.cleanData(xe(this)),r&&r.replaceChild(t,this))},e)}}),M.each({appendTo:\"append\",prependTo:\"prepend\",insertBefore:\"before\",insertAfter:\"after\",replaceAll:\"replaceWith\"},function(e,t){M.fn[e]=function(e){for(var r,n=[],i=M(e),o=i.length-1,a=0;a<=o;a++)r=a===o?this:this.clone(!0),M(i[a])[t](r),u.apply(n,r.get());return this.pushStack(n)}});var He=new RegExp(\"^(\"+ne+\")(?!px)[a-z%]+$\",\"i\"),We=function(e){var t=e.ownerDocument.defaultView;return t&&t.opener||(t=r),t.getComputedStyle(e)},Xe=new RegExp(oe.join(\"|\"),\"i\");function qe(e,t,r){var n,i,o,a,s=e.style;return(r=r||We(e))&&(\"\"!==(a=r.getPropertyValue(t)||r[t])||se(e)||(a=M.style(e,t)),!g.pixelBoxStyles()&&He.test(a)&&Xe.test(t)&&(n=s.width,i=s.minWidth,o=s.maxWidth,s.minWidth=s.maxWidth=s.width=a,a=r.width,s.width=n,s.minWidth=i,s.maxWidth=o)),void 0!==a?a+\"\":a}function Ye(e,t){return{get:function(){if(!e())return(this.get=t).apply(this,arguments);delete this.get}}}!function(){function e(){if(u){l.style.cssText=\"position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0\",u.style.cssText=\"position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%\",ae.appendChild(l).appendChild(u);var e=r.getComputedStyle(u);n=\"1%\"!==e.top,c=12===t(e.marginLeft),u.style.right=\"60%\",s=36===t(e.right),i=36===t(e.width),u.style.position=\"absolute\",o=12===t(u.offsetWidth/3),ae.removeChild(l),u=null}}function t(e){return Math.round(parseFloat(e))}var n,i,o,s,c,l=a.createElement(\"div\"),u=a.createElement(\"div\");u.style&&(u.style.backgroundClip=\"content-box\",u.cloneNode(!0).style.backgroundClip=\"\",g.clearCloneStyle=\"content-box\"===u.style.backgroundClip,M.extend(g,{boxSizingReliable:function(){return e(),i},pixelBoxStyles:function(){return e(),s},pixelPosition:function(){return e(),n},reliableMarginLeft:function(){return e(),c},scrollboxSize:function(){return e(),o}}))}();var Ze=[\"Webkit\",\"Moz\",\"ms\"],Ke=a.createElement(\"div\").style,Qe={};function Je(e){var t=M.cssProps[e]||Qe[e];return t||(e in Ke?e:Qe[e]=function(e){for(var t=e[0].toUpperCase()+e.slice(1),r=Ze.length;r--;)if((e=Ze[r]+t)in Ke)return e}(e)||e)}var $e=/^(none|table(?!-c[ea]).+)/,et=/^--/,tt={position:\"absolute\",visibility:\"hidden\",display:\"block\"},rt={letterSpacing:\"0\",fontWeight:\"400\"};function nt(e,t,r){var n=ie.exec(t);return n?Math.max(0,n[2]-(r||0))+(n[3]||\"px\"):t}function it(e,t,r,n,i,o){var a=\"width\"===t?1:0,s=0,c=0;if(r===(n?\"border\":\"content\"))return 0;for(;a<4;a+=2)\"margin\"===r&&(c+=M.css(e,r+oe[a],!0,i)),n?(\"content\"===r&&(c-=M.css(e,\"padding\"+oe[a],!0,i)),\"margin\"!==r&&(c-=M.css(e,\"border\"+oe[a]+\"Width\",!0,i))):(c+=M.css(e,\"padding\"+oe[a],!0,i),\"padding\"!==r?c+=M.css(e,\"border\"+oe[a]+\"Width\",!0,i):s+=M.css(e,\"border\"+oe[a]+\"Width\",!0,i));return!n&&o>=0&&(c+=Math.max(0,Math.ceil(e[\"offset\"+t[0].toUpperCase()+t.slice(1)]-o-c-s-.5))||0),c}function ot(e,t,r){var n=We(e),i=(!g.boxSizingReliable()||r)&&\"border-box\"===M.css(e,\"boxSizing\",!1,n),o=i,a=qe(e,t,n),s=\"offset\"+t[0].toUpperCase()+t.slice(1);if(He.test(a)){if(!r)return a;a=\"auto\"}return(!g.boxSizingReliable()&&i||\"auto\"===a||!parseFloat(a)&&\"inline\"===M.css(e,\"display\",!1,n))&&e.getClientRects().length&&(i=\"border-box\"===M.css(e,\"boxSizing\",!1,n),(o=s in e)&&(a=e[s])),(a=parseFloat(a)||0)+it(e,t,r||(i?\"border\":\"content\"),o,n,a)+\"px\"}function at(e,t,r,n,i){return new at.prototype.init(e,t,r,n,i)}M.extend({cssHooks:{opacity:{get:function(e,t){if(t){var r=qe(e,\"opacity\");return\"\"===r?\"1\":r}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,gridArea:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnStart:!0,gridRow:!0,gridRowEnd:!0,gridRowStart:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{},style:function(e,t,r,n){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var i,o,a,s=Z(t),c=et.test(t),l=e.style;if(c||(t=Je(s)),a=M.cssHooks[t]||M.cssHooks[s],void 0===r)return a&&\"get\"in a&&void 0!==(i=a.get(e,!1,n))?i:l[t];\"string\"===(o=typeof r)&&(i=ie.exec(r))&&i[1]&&(r=he(e,t,i),o=\"number\"),null!=r&&r==r&&(\"number\"!==o||c||(r+=i&&i[3]||(M.cssNumber[s]?\"\":\"px\")),g.clearCloneStyle||\"\"!==r||0!==t.indexOf(\"background\")||(l[t]=\"inherit\"),a&&\"set\"in a&&void 0===(r=a.set(e,r,n))||(c?l.setProperty(t,r):l[t]=r))}},css:function(e,t,r,n){var i,o,a,s=Z(t);return et.test(t)||(t=Je(s)),(a=M.cssHooks[t]||M.cssHooks[s])&&\"get\"in a&&(i=a.get(e,!0,r)),void 0===i&&(i=qe(e,t,n)),\"normal\"===i&&t in rt&&(i=rt[t]),\"\"===r||r?(o=parseFloat(i),!0===r||isFinite(o)?o||0:i):i}}),M.each([\"height\",\"width\"],function(e,t){M.cssHooks[t]={get:function(e,r,n){if(r)return!$e.test(M.css(e,\"display\"))||e.getClientRects().length&&e.getBoundingClientRect().width?ot(e,t,n):ue(e,tt,function(){return ot(e,t,n)})},set:function(e,r,n){var i,o=We(e),a=!g.scrollboxSize()&&\"absolute\"===o.position,s=(a||n)&&\"border-box\"===M.css(e,\"boxSizing\",!1,o),c=n?it(e,t,n,s,o):0;return s&&a&&(c-=Math.ceil(e[\"offset\"+t[0].toUpperCase()+t.slice(1)]-parseFloat(o[t])-it(e,t,\"border\",!1,o)-.5)),c&&(i=ie.exec(r))&&\"px\"!==(i[3]||\"px\")&&(e.style[t]=r,r=M.css(e,t)),nt(0,r,c)}}}),M.cssHooks.marginLeft=Ye(g.reliableMarginLeft,function(e,t){if(t)return(parseFloat(qe(e,\"marginLeft\"))||e.getBoundingClientRect().left-ue(e,{marginLeft:0},function(){return e.getBoundingClientRect().left}))+\"px\"}),M.each({margin:\"\",padding:\"\",border:\"Width\"},function(e,t){M.cssHooks[e+t]={expand:function(r){for(var n=0,i={},o=\"string\"==typeof r?r.split(\" \"):[r];n<4;n++)i[e+oe[n]+t]=o[n]||o[n-2]||o[0];return i}},\"margin\"!==e&&(M.cssHooks[e+t].set=nt)}),M.fn.extend({css:function(e,t){return W(this,function(e,t,r){var n,i,o={},a=0;if(Array.isArray(t)){for(n=We(e),i=t.length;a<i;a++)o[t[a]]=M.css(e,t[a],!1,n);return o}return void 0!==r?M.style(e,t,r):M.css(e,t)},e,t,arguments.length>1)}}),M.Tween=at,at.prototype={constructor:at,init:function(e,t,r,n,i,o){this.elem=e,this.prop=r,this.easing=i||M.easing._default,this.options=t,this.start=this.now=this.cur(),this.end=n,this.unit=o||(M.cssNumber[r]?\"\":\"px\")},cur:function(){var e=at.propHooks[this.prop];return e&&e.get?e.get(this):at.propHooks._default.get(this)},run:function(e){var t,r=at.propHooks[this.prop];return this.options.duration?this.pos=t=M.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):this.pos=t=e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),r&&r.set?r.set(this):at.propHooks._default.set(this),this}},at.prototype.init.prototype=at.prototype,at.propHooks={_default:{get:function(e){var t;return 1!==e.elem.nodeType||null!=e.elem[e.prop]&&null==e.elem.style[e.prop]?e.elem[e.prop]:(t=M.css(e.elem,e.prop,\"\"))&&\"auto\"!==t?t:0},set:function(e){M.fx.step[e.prop]?M.fx.step[e.prop](e):1!==e.elem.nodeType||!M.cssHooks[e.prop]&&null==e.elem.style[Je(e.prop)]?e.elem[e.prop]=e.now:M.style(e.elem,e.prop,e.now+e.unit)}}},at.propHooks.scrollTop=at.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},M.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2},_default:\"swing\"},M.fx=at.prototype.init,M.fx.step={};var st,ct,lt=/^(?:toggle|show|hide)$/,ut=/queueHooks$/;function ht(){ct&&(!1===a.hidden&&r.requestAnimationFrame?r.requestAnimationFrame(ht):r.setTimeout(ht,M.fx.interval),M.fx.tick())}function dt(){return r.setTimeout(function(){st=void 0}),st=Date.now()}function pt(e,t){var r,n=0,i={height:e};for(t=t?1:0;n<4;n+=2-t)i[\"margin\"+(r=oe[n])]=i[\"padding\"+r]=e;return t&&(i.opacity=i.width=e),i}function ft(e,t,r){for(var n,i=(mt.tweeners[t]||[]).concat(mt.tweeners[\"*\"]),o=0,a=i.length;o<a;o++)if(n=i[o].call(r,t,e))return n}function mt(e,t,r){var n,i,o=0,a=mt.prefilters.length,s=M.Deferred().always(function(){delete c.elem}),c=function(){if(i)return!1;for(var t=st||dt(),r=Math.max(0,l.startTime+l.duration-t),n=1-(r/l.duration||0),o=0,a=l.tweens.length;o<a;o++)l.tweens[o].run(n);return s.notifyWith(e,[l,n,r]),n<1&&a?r:(a||s.notifyWith(e,[l,1,0]),s.resolveWith(e,[l]),!1)},l=s.promise({elem:e,props:M.extend({},t),opts:M.extend(!0,{specialEasing:{},easing:M.easing._default},r),originalProperties:t,originalOptions:r,startTime:st||dt(),duration:r.duration,tweens:[],createTween:function(t,r){var n=M.Tween(e,l.opts,t,r,l.opts.specialEasing[t]||l.opts.easing);return l.tweens.push(n),n},stop:function(t){var r=0,n=t?l.tweens.length:0;if(i)return this;for(i=!0;r<n;r++)l.tweens[r].run(1);return t?(s.notifyWith(e,[l,1,0]),s.resolveWith(e,[l,t])):s.rejectWith(e,[l,t]),this}}),u=l.props;for(!function(e,t){var r,n,i,o,a;for(r in e)if(i=t[n=Z(r)],o=e[r],Array.isArray(o)&&(i=o[1],o=e[r]=o[0]),r!==n&&(e[n]=o,delete e[r]),(a=M.cssHooks[n])&&\"expand\"in a)for(r in o=a.expand(o),delete e[n],o)r in e||(e[r]=o[r],t[r]=i);else t[n]=i}(u,l.opts.specialEasing);o<a;o++)if(n=mt.prefilters[o].call(l,e,u,l.opts))return y(n.stop)&&(M._queueHooks(l.elem,l.opts.queue).stop=n.stop.bind(n)),n;return M.map(u,ft,l),y(l.opts.start)&&l.opts.start.call(e,l),l.progress(l.opts.progress).done(l.opts.done,l.opts.complete).fail(l.opts.fail).always(l.opts.always),M.fx.timer(M.extend(c,{elem:e,anim:l,queue:l.opts.queue})),l}M.Animation=M.extend(mt,{tweeners:{\"*\":[function(e,t){var r=this.createTween(e,t);return he(r.elem,e,ie.exec(t),r),r}]},tweener:function(e,t){y(e)?(t=e,e=[\"*\"]):e=e.match(O);for(var r,n=0,i=e.length;n<i;n++)r=e[n],mt.tweeners[r]=mt.tweeners[r]||[],mt.tweeners[r].unshift(t)},prefilters:[function(e,t,r){var n,i,o,a,s,c,l,u,h=\"width\"in t||\"height\"in t,d=this,p={},f=e.style,m=e.nodeType&&le(e),v=J.get(e,\"fxshow\");for(n in r.queue||(null==(a=M._queueHooks(e,\"fx\")).unqueued&&(a.unqueued=0,s=a.empty.fire,a.empty.fire=function(){a.unqueued||s()}),a.unqueued++,d.always(function(){d.always(function(){a.unqueued--,M.queue(e,\"fx\").length||a.empty.fire()})})),t)if(i=t[n],lt.test(i)){if(delete t[n],o=o||\"toggle\"===i,i===(m?\"hide\":\"show\")){if(\"show\"!==i||!v||void 0===v[n])continue;m=!0}p[n]=v&&v[n]||M.style(e,n)}if((c=!M.isEmptyObject(t))||!M.isEmptyObject(p))for(n in h&&1===e.nodeType&&(r.overflow=[f.overflow,f.overflowX,f.overflowY],null==(l=v&&v.display)&&(l=J.get(e,\"display\")),\"none\"===(u=M.css(e,\"display\"))&&(l?u=l:(fe([e],!0),l=e.style.display||l,u=M.css(e,\"display\"),fe([e]))),(\"inline\"===u||\"inline-block\"===u&&null!=l)&&\"none\"===M.css(e,\"float\")&&(c||(d.done(function(){f.display=l}),null==l&&(u=f.display,l=\"none\"===u?\"\":u)),f.display=\"inline-block\")),r.overflow&&(f.overflow=\"hidden\",d.always(function(){f.overflow=r.overflow[0],f.overflowX=r.overflow[1],f.overflowY=r.overflow[2]})),c=!1,p)c||(v?\"hidden\"in v&&(m=v.hidden):v=J.access(e,\"fxshow\",{display:l}),o&&(v.hidden=!m),m&&fe([e],!0),d.done(function(){for(n in m||fe([e]),J.remove(e,\"fxshow\"),p)M.style(e,n,p[n])})),c=ft(m?v[n]:0,n,d),n in v||(v[n]=c.start,m&&(c.end=c.start,c.start=0))}],prefilter:function(e,t){t?mt.prefilters.unshift(e):mt.prefilters.push(e)}}),M.speed=function(e,t,r){var n=e&&\"object\"==typeof e?M.extend({},e):{complete:r||!r&&t||y(e)&&e,duration:e,easing:r&&t||t&&!y(t)&&t};return M.fx.off?n.duration=0:\"number\"!=typeof n.duration&&(n.duration in M.fx.speeds?n.duration=M.fx.speeds[n.duration]:n.duration=M.fx.speeds._default),null!=n.queue&&!0!==n.queue||(n.queue=\"fx\"),n.old=n.complete,n.complete=function(){y(n.old)&&n.old.call(this),n.queue&&M.dequeue(this,n.queue)},n},M.fn.extend({fadeTo:function(e,t,r,n){return this.filter(le).css(\"opacity\",0).show().end().animate({opacity:t},e,r,n)},animate:function(e,t,r,n){var i=M.isEmptyObject(e),o=M.speed(t,r,n),a=function(){var t=mt(this,M.extend({},e),o);(i||J.get(this,\"finish\"))&&t.stop(!0)};return a.finish=a,i||!1===o.queue?this.each(a):this.queue(o.queue,a)},stop:function(e,t,r){var n=function(e){var t=e.stop;delete e.stop,t(r)};return\"string\"!=typeof e&&(r=t,t=e,e=void 0),t&&!1!==e&&this.queue(e||\"fx\",[]),this.each(function(){var t=!0,i=null!=e&&e+\"queueHooks\",o=M.timers,a=J.get(this);if(i)a[i]&&a[i].stop&&n(a[i]);else for(i in a)a[i]&&a[i].stop&&ut.test(i)&&n(a[i]);for(i=o.length;i--;)o[i].elem!==this||null!=e&&o[i].queue!==e||(o[i].anim.stop(r),t=!1,o.splice(i,1));!t&&r||M.dequeue(this,e)})},finish:function(e){return!1!==e&&(e=e||\"fx\"),this.each(function(){var t,r=J.get(this),n=r[e+\"queue\"],i=r[e+\"queueHooks\"],o=M.timers,a=n?n.length:0;for(r.finish=!0,M.queue(this,e,[]),i&&i.stop&&i.stop.call(this,!0),t=o.length;t--;)o[t].elem===this&&o[t].queue===e&&(o[t].anim.stop(!0),o.splice(t,1));for(t=0;t<a;t++)n[t]&&n[t].finish&&n[t].finish.call(this);delete r.finish})}}),M.each([\"toggle\",\"show\",\"hide\"],function(e,t){var r=M.fn[t];M.fn[t]=function(e,n,i){return null==e||\"boolean\"==typeof e?r.apply(this,arguments):this.animate(pt(t,!0),e,n,i)}}),M.each({slideDown:pt(\"show\"),slideUp:pt(\"hide\"),slideToggle:pt(\"toggle\"),fadeIn:{opacity:\"show\"},fadeOut:{opacity:\"hide\"},fadeToggle:{opacity:\"toggle\"}},function(e,t){M.fn[e]=function(e,r,n){return this.animate(t,e,r,n)}}),M.timers=[],M.fx.tick=function(){var e,t=0,r=M.timers;for(st=Date.now();t<r.length;t++)(e=r[t])()||r[t]!==e||r.splice(t--,1);r.length||M.fx.stop(),st=void 0},M.fx.timer=function(e){M.timers.push(e),M.fx.start()},M.fx.interval=13,M.fx.start=function(){ct||(ct=!0,ht())},M.fx.stop=function(){ct=null},M.fx.speeds={slow:600,fast:200,_default:400},M.fn.delay=function(e,t){return e=M.fx&&M.fx.speeds[e]||e,t=t||\"fx\",this.queue(t,function(t,n){var i=r.setTimeout(t,e);n.stop=function(){r.clearTimeout(i)}})},function(){var e=a.createElement(\"input\"),t=a.createElement(\"select\").appendChild(a.createElement(\"option\"));e.type=\"checkbox\",g.checkOn=\"\"!==e.value,g.optSelected=t.selected,(e=a.createElement(\"input\")).value=\"t\",e.type=\"radio\",g.radioValue=\"t\"===e.value}();var vt,gt=M.expr.attrHandle;M.fn.extend({attr:function(e,t){return W(this,M.attr,e,t,arguments.length>1)},removeAttr:function(e){return this.each(function(){M.removeAttr(this,e)})}}),M.extend({attr:function(e,t,r){var n,i,o=e.nodeType;if(3!==o&&8!==o&&2!==o)return void 0===e.getAttribute?M.prop(e,t,r):(1===o&&M.isXMLDoc(e)||(i=M.attrHooks[t.toLowerCase()]||(M.expr.match.bool.test(t)?vt:void 0)),void 0!==r?null===r?void M.removeAttr(e,t):i&&\"set\"in i&&void 0!==(n=i.set(e,r,t))?n:(e.setAttribute(t,r+\"\"),r):i&&\"get\"in i&&null!==(n=i.get(e,t))?n:null==(n=M.find.attr(e,t))?void 0:n)},attrHooks:{type:{set:function(e,t){if(!g.radioValue&&\"radio\"===t&&R(e,\"input\")){var r=e.value;return e.setAttribute(\"type\",t),r&&(e.value=r),t}}}},removeAttr:function(e,t){var r,n=0,i=t&&t.match(O);if(i&&1===e.nodeType)for(;r=i[n++];)e.removeAttribute(r)}}),vt={set:function(e,t,r){return!1===t?M.removeAttr(e,r):e.setAttribute(r,r),r}},M.each(M.expr.match.bool.source.match(/\\w+/g),function(e,t){var r=gt[t]||M.find.attr;gt[t]=function(e,t,n){var i,o,a=t.toLowerCase();return n||(o=gt[a],gt[a]=i,i=null!=r(e,t,n)?a:null,gt[a]=o),i}});var yt=/^(?:input|select|textarea|button)$/i,xt=/^(?:a|area)$/i;function bt(e){return(e.match(O)||[]).join(\" \")}function wt(e){return e.getAttribute&&e.getAttribute(\"class\")||\"\"}function _t(e){return Array.isArray(e)?e:\"string\"==typeof e&&e.match(O)||[]}M.fn.extend({prop:function(e,t){return W(this,M.prop,e,t,arguments.length>1)},removeProp:function(e){return this.each(function(){delete this[M.propFix[e]||e]})}}),M.extend({prop:function(e,t,r){var n,i,o=e.nodeType;if(3!==o&&8!==o&&2!==o)return 1===o&&M.isXMLDoc(e)||(t=M.propFix[t]||t,i=M.propHooks[t]),void 0!==r?i&&\"set\"in i&&void 0!==(n=i.set(e,r,t))?n:e[t]=r:i&&\"get\"in i&&null!==(n=i.get(e,t))?n:e[t]},propHooks:{tabIndex:{get:function(e){var t=M.find.attr(e,\"tabindex\");return t?parseInt(t,10):yt.test(e.nodeName)||xt.test(e.nodeName)&&e.href?0:-1}}},propFix:{for:\"htmlFor\",class:\"className\"}}),g.optSelected||(M.propHooks.selected={get:function(e){var t=e.parentNode;return t&&t.parentNode&&t.parentNode.selectedIndex,null},set:function(e){var t=e.parentNode;t&&(t.selectedIndex,t.parentNode&&t.parentNode.selectedIndex)}}),M.each([\"tabIndex\",\"readOnly\",\"maxLength\",\"cellSpacing\",\"cellPadding\",\"rowSpan\",\"colSpan\",\"useMap\",\"frameBorder\",\"contentEditable\"],function(){M.propFix[this.toLowerCase()]=this}),M.fn.extend({addClass:function(e){var t,r,n,i,o,a,s,c=0;if(y(e))return this.each(function(t){M(this).addClass(e.call(this,t,wt(this)))});if((t=_t(e)).length)for(;r=this[c++];)if(i=wt(r),n=1===r.nodeType&&\" \"+bt(i)+\" \"){for(a=0;o=t[a++];)n.indexOf(\" \"+o+\" \")<0&&(n+=o+\" \");i!==(s=bt(n))&&r.setAttribute(\"class\",s)}return this},removeClass:function(e){var t,r,n,i,o,a,s,c=0;if(y(e))return this.each(function(t){M(this).removeClass(e.call(this,t,wt(this)))});if(!arguments.length)return this.attr(\"class\",\"\");if((t=_t(e)).length)for(;r=this[c++];)if(i=wt(r),n=1===r.nodeType&&\" \"+bt(i)+\" \"){for(a=0;o=t[a++];)for(;n.indexOf(\" \"+o+\" \")>-1;)n=n.replace(\" \"+o+\" \",\" \");i!==(s=bt(n))&&r.setAttribute(\"class\",s)}return this},toggleClass:function(e,t){var r=typeof e,n=\"string\"===r||Array.isArray(e);return\"boolean\"==typeof t&&n?t?this.addClass(e):this.removeClass(e):y(e)?this.each(function(r){M(this).toggleClass(e.call(this,r,wt(this),t),t)}):this.each(function(){var t,i,o,a;if(n)for(i=0,o=M(this),a=_t(e);t=a[i++];)o.hasClass(t)?o.removeClass(t):o.addClass(t);else void 0!==e&&\"boolean\"!==r||((t=wt(this))&&J.set(this,\"__className__\",t),this.setAttribute&&this.setAttribute(\"class\",t||!1===e?\"\":J.get(this,\"__className__\")||\"\"))})},hasClass:function(e){var t,r,n=0;for(t=\" \"+e+\" \";r=this[n++];)if(1===r.nodeType&&(\" \"+bt(wt(r))+\" \").indexOf(t)>-1)return!0;return!1}});var Mt=/\\r/g;M.fn.extend({val:function(e){var t,r,n,i=this[0];return arguments.length?(n=y(e),this.each(function(r){var i;1===this.nodeType&&(null==(i=n?e.call(this,r,M(this).val()):e)?i=\"\":\"number\"==typeof i?i+=\"\":Array.isArray(i)&&(i=M.map(i,function(e){return null==e?\"\":e+\"\"})),(t=M.valHooks[this.type]||M.valHooks[this.nodeName.toLowerCase()])&&\"set\"in t&&void 0!==t.set(this,i,\"value\")||(this.value=i))})):i?(t=M.valHooks[i.type]||M.valHooks[i.nodeName.toLowerCase()])&&\"get\"in t&&void 0!==(r=t.get(i,\"value\"))?r:\"string\"==typeof(r=i.value)?r.replace(Mt,\"\"):null==r?\"\":r:void 0}}),M.extend({valHooks:{option:{get:function(e){var t=M.find.attr(e,\"value\");return null!=t?t:bt(M.text(e))}},select:{get:function(e){var t,r,n,i=e.options,o=e.selectedIndex,a=\"select-one\"===e.type,s=a?null:[],c=a?o+1:i.length;for(n=o<0?c:a?o:0;n<c;n++)if(((r=i[n]).selected||n===o)&&!r.disabled&&(!r.parentNode.disabled||!R(r.parentNode,\"optgroup\"))){if(t=M(r).val(),a)return t;s.push(t)}return s},set:function(e,t){for(var r,n,i=e.options,o=M.makeArray(t),a=i.length;a--;)((n=i[a]).selected=M.inArray(M.valHooks.option.get(n),o)>-1)&&(r=!0);return r||(e.selectedIndex=-1),o}}}}),M.each([\"radio\",\"checkbox\"],function(){M.valHooks[this]={set:function(e,t){if(Array.isArray(t))return e.checked=M.inArray(M(e).val(),t)>-1}},g.checkOn||(M.valHooks[this].get=function(e){return null===e.getAttribute(\"value\")?\"on\":e.value})}),g.focusin=\"onfocusin\"in r;var St=/^(?:focusinfocus|focusoutblur)$/,Tt=function(e){e.stopPropagation()};M.extend(M.event,{trigger:function(e,t,n,i){var o,s,c,l,u,h,d,p,m=[n||a],v=f.call(e,\"type\")?e.type:e,g=f.call(e,\"namespace\")?e.namespace.split(\".\"):[];if(s=p=c=n=n||a,3!==n.nodeType&&8!==n.nodeType&&!St.test(v+M.event.triggered)&&(v.indexOf(\".\")>-1&&(g=v.split(\".\"),v=g.shift(),g.sort()),u=v.indexOf(\":\")<0&&\"on\"+v,(e=e[M.expando]?e:new M.Event(v,\"object\"==typeof e&&e)).isTrigger=i?2:3,e.namespace=g.join(\".\"),e.rnamespace=e.namespace?new RegExp(\"(^|\\\\.)\"+g.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"):null,e.result=void 0,e.target||(e.target=n),t=null==t?[e]:M.makeArray(t,[e]),d=M.event.special[v]||{},i||!d.trigger||!1!==d.trigger.apply(n,t))){if(!i&&!d.noBubble&&!x(n)){for(l=d.delegateType||v,St.test(l+v)||(s=s.parentNode);s;s=s.parentNode)m.push(s),c=s;c===(n.ownerDocument||a)&&m.push(c.defaultView||c.parentWindow||r)}for(o=0;(s=m[o++])&&!e.isPropagationStopped();)p=s,e.type=o>1?l:d.bindType||v,(h=(J.get(s,\"events\")||{})[e.type]&&J.get(s,\"handle\"))&&h.apply(s,t),(h=u&&s[u])&&h.apply&&K(s)&&(e.result=h.apply(s,t),!1===e.result&&e.preventDefault());return e.type=v,i||e.isDefaultPrevented()||d._default&&!1!==d._default.apply(m.pop(),t)||!K(n)||u&&y(n[v])&&!x(n)&&((c=n[u])&&(n[u]=null),M.event.triggered=v,e.isPropagationStopped()&&p.addEventListener(v,Tt),n[v](),e.isPropagationStopped()&&p.removeEventListener(v,Tt),M.event.triggered=void 0,c&&(n[u]=c)),e.result}},simulate:function(e,t,r){var n=M.extend(new M.Event,r,{type:e,isSimulated:!0});M.event.trigger(n,null,t)}}),M.fn.extend({trigger:function(e,t){return this.each(function(){M.event.trigger(e,t,this)})},triggerHandler:function(e,t){var r=this[0];if(r)return M.event.trigger(e,t,r,!0)}}),g.focusin||M.each({focus:\"focusin\",blur:\"focusout\"},function(e,t){var r=function(e){M.event.simulate(t,e.target,M.event.fix(e))};M.event.special[t]={setup:function(){var n=this.ownerDocument||this,i=J.access(n,t);i||n.addEventListener(e,r,!0),J.access(n,t,(i||0)+1)},teardown:function(){var n=this.ownerDocument||this,i=J.access(n,t)-1;i?J.access(n,t,i):(n.removeEventListener(e,r,!0),J.remove(n,t))}}});var Et=r.location,Ct=Date.now(),At=/\\?/;M.parseXML=function(e){var t;if(!e||\"string\"!=typeof e)return null;try{t=(new r.DOMParser).parseFromString(e,\"text/xml\")}catch(e){t=void 0}return t&&!t.getElementsByTagName(\"parsererror\").length||M.error(\"Invalid XML: \"+e),t};var Lt=/\\[\\]$/,Rt=/\\r?\\n/g,Pt=/^(?:submit|button|image|reset|file)$/i,Dt=/^(?:input|select|textarea|keygen)/i;function Ut(e,t,r,n){var i;if(Array.isArray(t))M.each(t,function(t,i){r||Lt.test(e)?n(e,i):Ut(e+\"[\"+(\"object\"==typeof i&&null!=i?t:\"\")+\"]\",i,r,n)});else if(r||\"object\"!==_(t))n(e,t);else for(i in t)Ut(e+\"[\"+i+\"]\",t[i],r,n)}M.param=function(e,t){var r,n=[],i=function(e,t){var r=y(t)?t():t;n[n.length]=encodeURIComponent(e)+\"=\"+encodeURIComponent(null==r?\"\":r)};if(null==e)return\"\";if(Array.isArray(e)||e.jquery&&!M.isPlainObject(e))M.each(e,function(){i(this.name,this.value)});else for(r in e)Ut(r,e[r],t,i);return n.join(\"&\")},M.fn.extend({serialize:function(){return M.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var e=M.prop(this,\"elements\");return e?M.makeArray(e):this}).filter(function(){var e=this.type;return this.name&&!M(this).is(\":disabled\")&&Dt.test(this.nodeName)&&!Pt.test(e)&&(this.checked||!me.test(e))}).map(function(e,t){var r=M(this).val();return null==r?null:Array.isArray(r)?M.map(r,function(e){return{name:t.name,value:e.replace(Rt,\"\\r\\n\")}}):{name:t.name,value:r.replace(Rt,\"\\r\\n\")}}).get()}});var It=/%20/g,Ft=/#.*$/,Nt=/([?&])_=[^&]*/,Bt=/^(.*?):[ \\t]*([^\\r\\n]*)$/gm,Ot=/^(?:GET|HEAD)$/,Vt=/^\\/\\//,Gt={},zt={},kt=\"*/\".concat(\"*\"),jt=a.createElement(\"a\");function Ht(e){return function(t,r){\"string\"!=typeof t&&(r=t,t=\"*\");var n,i=0,o=t.toLowerCase().match(O)||[];if(y(r))for(;n=o[i++];)\"+\"===n[0]?(n=n.slice(1)||\"*\",(e[n]=e[n]||[]).unshift(r)):(e[n]=e[n]||[]).push(r)}}function Wt(e,t,r,n){var i={},o=e===zt;function a(s){var c;return i[s]=!0,M.each(e[s]||[],function(e,s){var l=s(t,r,n);return\"string\"!=typeof l||o||i[l]?o?!(c=l):void 0:(t.dataTypes.unshift(l),a(l),!1)}),c}return a(t.dataTypes[0])||!i[\"*\"]&&a(\"*\")}function Xt(e,t){var r,n,i=M.ajaxSettings.flatOptions||{};for(r in t)void 0!==t[r]&&((i[r]?e:n||(n={}))[r]=t[r]);return n&&M.extend(!0,e,n),e}jt.href=Et.href,M.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:Et.href,type:\"GET\",isLocal:/^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(Et.protocol),global:!0,processData:!0,async:!0,contentType:\"application/x-www-form-urlencoded; charset=UTF-8\",accepts:{\"*\":kt,text:\"text/plain\",html:\"text/html\",xml:\"application/xml, text/xml\",json:\"application/json, text/javascript\"},contents:{xml:/\\bxml\\b/,html:/\\bhtml/,json:/\\bjson\\b/},responseFields:{xml:\"responseXML\",text:\"responseText\",json:\"responseJSON\"},converters:{\"* text\":String,\"text html\":!0,\"text json\":JSON.parse,\"text xml\":M.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(e,t){return t?Xt(Xt(e,M.ajaxSettings),t):Xt(M.ajaxSettings,e)},ajaxPrefilter:Ht(Gt),ajaxTransport:Ht(zt),ajax:function(e,t){\"object\"==typeof e&&(t=e,e=void 0),t=t||{};var n,i,o,s,c,l,u,h,d,p,f=M.ajaxSetup({},t),m=f.context||f,v=f.context&&(m.nodeType||m.jquery)?M(m):M.event,g=M.Deferred(),y=M.Callbacks(\"once memory\"),x=f.statusCode||{},b={},w={},_=\"canceled\",S={readyState:0,getResponseHeader:function(e){var t;if(u){if(!s)for(s={};t=Bt.exec(o);)s[t[1].toLowerCase()+\" \"]=(s[t[1].toLowerCase()+\" \"]||[]).concat(t[2]);t=s[e.toLowerCase()+\" \"]}return null==t?null:t.join(\", \")},getAllResponseHeaders:function(){return u?o:null},setRequestHeader:function(e,t){return null==u&&(e=w[e.toLowerCase()]=w[e.toLowerCase()]||e,b[e]=t),this},overrideMimeType:function(e){return null==u&&(f.mimeType=e),this},statusCode:function(e){var t;if(e)if(u)S.always(e[S.status]);else for(t in e)x[t]=[x[t],e[t]];return this},abort:function(e){var t=e||_;return n&&n.abort(t),T(0,t),this}};if(g.promise(S),f.url=((e||f.url||Et.href)+\"\").replace(Vt,Et.protocol+\"//\"),f.type=t.method||t.type||f.method||f.type,f.dataTypes=(f.dataType||\"*\").toLowerCase().match(O)||[\"\"],null==f.crossDomain){l=a.createElement(\"a\");try{l.href=f.url,l.href=l.href,f.crossDomain=jt.protocol+\"//\"+jt.host!=l.protocol+\"//\"+l.host}catch(e){f.crossDomain=!0}}if(f.data&&f.processData&&\"string\"!=typeof f.data&&(f.data=M.param(f.data,f.traditional)),Wt(Gt,f,t,S),u)return S;for(d in(h=M.event&&f.global)&&0==M.active++&&M.event.trigger(\"ajaxStart\"),f.type=f.type.toUpperCase(),f.hasContent=!Ot.test(f.type),i=f.url.replace(Ft,\"\"),f.hasContent?f.data&&f.processData&&0===(f.contentType||\"\").indexOf(\"application/x-www-form-urlencoded\")&&(f.data=f.data.replace(It,\"+\")):(p=f.url.slice(i.length),f.data&&(f.processData||\"string\"==typeof f.data)&&(i+=(At.test(i)?\"&\":\"?\")+f.data,delete f.data),!1===f.cache&&(i=i.replace(Nt,\"$1\"),p=(At.test(i)?\"&\":\"?\")+\"_=\"+Ct+++p),f.url=i+p),f.ifModified&&(M.lastModified[i]&&S.setRequestHeader(\"If-Modified-Since\",M.lastModified[i]),M.etag[i]&&S.setRequestHeader(\"If-None-Match\",M.etag[i])),(f.data&&f.hasContent&&!1!==f.contentType||t.contentType)&&S.setRequestHeader(\"Content-Type\",f.contentType),S.setRequestHeader(\"Accept\",f.dataTypes[0]&&f.accepts[f.dataTypes[0]]?f.accepts[f.dataTypes[0]]+(\"*\"!==f.dataTypes[0]?\", \"+kt+\"; q=0.01\":\"\"):f.accepts[\"*\"]),f.headers)S.setRequestHeader(d,f.headers[d]);if(f.beforeSend&&(!1===f.beforeSend.call(m,S,f)||u))return S.abort();if(_=\"abort\",y.add(f.complete),S.done(f.success),S.fail(f.error),n=Wt(zt,f,t,S)){if(S.readyState=1,h&&v.trigger(\"ajaxSend\",[S,f]),u)return S;f.async&&f.timeout>0&&(c=r.setTimeout(function(){S.abort(\"timeout\")},f.timeout));try{u=!1,n.send(b,T)}catch(e){if(u)throw e;T(-1,e)}}else T(-1,\"No Transport\");function T(e,t,a,s){var l,d,p,b,w,_=t;u||(u=!0,c&&r.clearTimeout(c),n=void 0,o=s||\"\",S.readyState=e>0?4:0,l=e>=200&&e<300||304===e,a&&(b=function(e,t,r){for(var n,i,o,a,s=e.contents,c=e.dataTypes;\"*\"===c[0];)c.shift(),void 0===n&&(n=e.mimeType||t.getResponseHeader(\"Content-Type\"));if(n)for(i in s)if(s[i]&&s[i].test(n)){c.unshift(i);break}if(c[0]in r)o=c[0];else{for(i in r){if(!c[0]||e.converters[i+\" \"+c[0]]){o=i;break}a||(a=i)}o=o||a}if(o)return o!==c[0]&&c.unshift(o),r[o]}(f,S,a)),b=function(e,t,r,n){var i,o,a,s,c,l={},u=e.dataTypes.slice();if(u[1])for(a in e.converters)l[a.toLowerCase()]=e.converters[a];for(o=u.shift();o;)if(e.responseFields[o]&&(r[e.responseFields[o]]=t),!c&&n&&e.dataFilter&&(t=e.dataFilter(t,e.dataType)),c=o,o=u.shift())if(\"*\"===o)o=c;else if(\"*\"!==c&&c!==o){if(!(a=l[c+\" \"+o]||l[\"* \"+o]))for(i in l)if((s=i.split(\" \"))[1]===o&&(a=l[c+\" \"+s[0]]||l[\"* \"+s[0]])){!0===a?a=l[i]:!0!==l[i]&&(o=s[0],u.unshift(s[1]));break}if(!0!==a)if(a&&e.throws)t=a(t);else try{t=a(t)}catch(e){return{state:\"parsererror\",error:a?e:\"No conversion from \"+c+\" to \"+o}}}return{state:\"success\",data:t}}(f,b,S,l),l?(f.ifModified&&((w=S.getResponseHeader(\"Last-Modified\"))&&(M.lastModified[i]=w),(w=S.getResponseHeader(\"etag\"))&&(M.etag[i]=w)),204===e||\"HEAD\"===f.type?_=\"nocontent\":304===e?_=\"notmodified\":(_=b.state,d=b.data,l=!(p=b.error))):(p=_,!e&&_||(_=\"error\",e<0&&(e=0))),S.status=e,S.statusText=(t||_)+\"\",l?g.resolveWith(m,[d,_,S]):g.rejectWith(m,[S,_,p]),S.statusCode(x),x=void 0,h&&v.trigger(l?\"ajaxSuccess\":\"ajaxError\",[S,f,l?d:p]),y.fireWith(m,[S,_]),h&&(v.trigger(\"ajaxComplete\",[S,f]),--M.active||M.event.trigger(\"ajaxStop\")))}return S},getJSON:function(e,t,r){return M.get(e,t,r,\"json\")},getScript:function(e,t){return M.get(e,void 0,t,\"script\")}}),M.each([\"get\",\"post\"],function(e,t){M[t]=function(e,r,n,i){return y(r)&&(i=i||n,n=r,r=void 0),M.ajax(M.extend({url:e,type:t,dataType:i,data:r,success:n},M.isPlainObject(e)&&e))}}),M._evalUrl=function(e,t){return M.ajax({url:e,type:\"GET\",dataType:\"script\",cache:!0,async:!1,global:!1,converters:{\"text script\":function(){}},dataFilter:function(e){M.globalEval(e,t)}})},M.fn.extend({wrapAll:function(e){var t;return this[0]&&(y(e)&&(e=e.call(this[0])),t=M(e,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&t.insertBefore(this[0]),t.map(function(){for(var e=this;e.firstElementChild;)e=e.firstElementChild;return e}).append(this)),this},wrapInner:function(e){return y(e)?this.each(function(t){M(this).wrapInner(e.call(this,t))}):this.each(function(){var t=M(this),r=t.contents();r.length?r.wrapAll(e):t.append(e)})},wrap:function(e){var t=y(e);return this.each(function(r){M(this).wrapAll(t?e.call(this,r):e)})},unwrap:function(e){return this.parent(e).not(\"body\").each(function(){M(this).replaceWith(this.childNodes)}),this}}),M.expr.pseudos.hidden=function(e){return!M.expr.pseudos.visible(e)},M.expr.pseudos.visible=function(e){return!!(e.offsetWidth||e.offsetHeight||e.getClientRects().length)},M.ajaxSettings.xhr=function(){try{return new r.XMLHttpRequest}catch(e){}};var qt={0:200,1223:204},Yt=M.ajaxSettings.xhr();g.cors=!!Yt&&\"withCredentials\"in Yt,g.ajax=Yt=!!Yt,M.ajaxTransport(function(e){var t,n;if(g.cors||Yt&&!e.crossDomain)return{send:function(i,o){var a,s=e.xhr();if(s.open(e.type,e.url,e.async,e.username,e.password),e.xhrFields)for(a in e.xhrFields)s[a]=e.xhrFields[a];for(a in e.mimeType&&s.overrideMimeType&&s.overrideMimeType(e.mimeType),e.crossDomain||i[\"X-Requested-With\"]||(i[\"X-Requested-With\"]=\"XMLHttpRequest\"),i)s.setRequestHeader(a,i[a]);t=function(e){return function(){t&&(t=n=s.onload=s.onerror=s.onabort=s.ontimeout=s.onreadystatechange=null,\"abort\"===e?s.abort():\"error\"===e?\"number\"!=typeof s.status?o(0,\"error\"):o(s.status,s.statusText):o(qt[s.status]||s.status,s.statusText,\"text\"!==(s.responseType||\"text\")||\"string\"!=typeof s.responseText?{binary:s.response}:{text:s.responseText},s.getAllResponseHeaders()))}},s.onload=t(),n=s.onerror=s.ontimeout=t(\"error\"),void 0!==s.onabort?s.onabort=n:s.onreadystatechange=function(){4===s.readyState&&r.setTimeout(function(){t&&n()})},t=t(\"abort\");try{s.send(e.hasContent&&e.data||null)}catch(e){if(t)throw e}},abort:function(){t&&t()}}}),M.ajaxPrefilter(function(e){e.crossDomain&&(e.contents.script=!1)}),M.ajaxSetup({accepts:{script:\"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript\"},contents:{script:/\\b(?:java|ecma)script\\b/},converters:{\"text script\":function(e){return M.globalEval(e),e}}}),M.ajaxPrefilter(\"script\",function(e){void 0===e.cache&&(e.cache=!1),e.crossDomain&&(e.type=\"GET\")}),M.ajaxTransport(\"script\",function(e){var t,r;if(e.crossDomain||e.scriptAttrs)return{send:function(n,i){t=M(\"<script>\").attr(e.scriptAttrs||{}).prop({charset:e.scriptCharset,src:e.url}).on(\"load error\",r=function(e){t.remove(),r=null,e&&i(\"error\"===e.type?404:200,e.type)}),a.head.appendChild(t[0])},abort:function(){r&&r()}}});var Zt,Kt=[],Qt=/(=)\\?(?=&|$)|\\?\\?/;M.ajaxSetup({jsonp:\"callback\",jsonpCallback:function(){var e=Kt.pop()||M.expando+\"_\"+Ct++;return this[e]=!0,e}}),M.ajaxPrefilter(\"json jsonp\",function(e,t,n){var i,o,a,s=!1!==e.jsonp&&(Qt.test(e.url)?\"url\":\"string\"==typeof e.data&&0===(e.contentType||\"\").indexOf(\"application/x-www-form-urlencoded\")&&Qt.test(e.data)&&\"data\");if(s||\"jsonp\"===e.dataTypes[0])return i=e.jsonpCallback=y(e.jsonpCallback)?e.jsonpCallback():e.jsonpCallback,s?e[s]=e[s].replace(Qt,\"$1\"+i):!1!==e.jsonp&&(e.url+=(At.test(e.url)?\"&\":\"?\")+e.jsonp+\"=\"+i),e.converters[\"script json\"]=function(){return a||M.error(i+\" was not called\"),a[0]},e.dataTypes[0]=\"json\",o=r[i],r[i]=function(){a=arguments},n.always(function(){void 0===o?M(r).removeProp(i):r[i]=o,e[i]&&(e.jsonpCallback=t.jsonpCallback,Kt.push(i)),a&&y(o)&&o(a[0]),a=o=void 0}),\"script\"}),g.createHTMLDocument=((Zt=a.implementation.createHTMLDocument(\"\").body).innerHTML=\"<form></form><form></form>\",2===Zt.childNodes.length),M.parseHTML=function(e,t,r){return\"string\"!=typeof e?[]:(\"boolean\"==typeof t&&(r=t,t=!1),t||(g.createHTMLDocument?((n=(t=a.implementation.createHTMLDocument(\"\")).createElement(\"base\")).href=a.location.href,t.head.appendChild(n)):t=a),o=!r&&[],(i=P.exec(e))?[t.createElement(i[1])]:(i=Se([e],t,o),o&&o.length&&M(o).remove(),M.merge([],i.childNodes)));var n,i,o},M.fn.load=function(e,t,r){var n,i,o,a=this,s=e.indexOf(\" \");return s>-1&&(n=bt(e.slice(s)),e=e.slice(0,s)),y(t)?(r=t,t=void 0):t&&\"object\"==typeof t&&(i=\"POST\"),a.length>0&&M.ajax({url:e,type:i||\"GET\",dataType:\"html\",data:t}).done(function(e){o=arguments,a.html(n?M(\"<div>\").append(M.parseHTML(e)).find(n):e)}).always(r&&function(e,t){a.each(function(){r.apply(this,o||[e.responseText,t,e])})}),this},M.each([\"ajaxStart\",\"ajaxStop\",\"ajaxComplete\",\"ajaxError\",\"ajaxSuccess\",\"ajaxSend\"],function(e,t){M.fn[t]=function(e){return this.on(t,e)}}),M.expr.pseudos.animated=function(e){return M.grep(M.timers,function(t){return e===t.elem}).length},M.offset={setOffset:function(e,t,r){var n,i,o,a,s,c,l=M.css(e,\"position\"),u=M(e),h={};\"static\"===l&&(e.style.position=\"relative\"),s=u.offset(),o=M.css(e,\"top\"),c=M.css(e,\"left\"),(\"absolute\"===l||\"fixed\"===l)&&(o+c).indexOf(\"auto\")>-1?(a=(n=u.position()).top,i=n.left):(a=parseFloat(o)||0,i=parseFloat(c)||0),y(t)&&(t=t.call(e,r,M.extend({},s))),null!=t.top&&(h.top=t.top-s.top+a),null!=t.left&&(h.left=t.left-s.left+i),\"using\"in t?t.using.call(e,h):u.css(h)}},M.fn.extend({offset:function(e){if(arguments.length)return void 0===e?this:this.each(function(t){M.offset.setOffset(this,e,t)});var t,r,n=this[0];return n?n.getClientRects().length?(t=n.getBoundingClientRect(),r=n.ownerDocument.defaultView,{top:t.top+r.pageYOffset,left:t.left+r.pageXOffset}):{top:0,left:0}:void 0},position:function(){if(this[0]){var e,t,r,n=this[0],i={top:0,left:0};if(\"fixed\"===M.css(n,\"position\"))t=n.getBoundingClientRect();else{for(t=this.offset(),r=n.ownerDocument,e=n.offsetParent||r.documentElement;e&&(e===r.body||e===r.documentElement)&&\"static\"===M.css(e,\"position\");)e=e.parentNode;e&&e!==n&&1===e.nodeType&&((i=M(e).offset()).top+=M.css(e,\"borderTopWidth\",!0),i.left+=M.css(e,\"borderLeftWidth\",!0))}return{top:t.top-i.top-M.css(n,\"marginTop\",!0),left:t.left-i.left-M.css(n,\"marginLeft\",!0)}}},offsetParent:function(){return this.map(function(){for(var e=this.offsetParent;e&&\"static\"===M.css(e,\"position\");)e=e.offsetParent;return e||ae})}}),M.each({scrollLeft:\"pageXOffset\",scrollTop:\"pageYOffset\"},function(e,t){var r=\"pageYOffset\"===t;M.fn[e]=function(n){return W(this,function(e,n,i){var o;if(x(e)?o=e:9===e.nodeType&&(o=e.defaultView),void 0===i)return o?o[t]:e[n];o?o.scrollTo(r?o.pageXOffset:i,r?i:o.pageYOffset):e[n]=i},e,n,arguments.length)}}),M.each([\"top\",\"left\"],function(e,t){M.cssHooks[t]=Ye(g.pixelPosition,function(e,r){if(r)return r=qe(e,t),He.test(r)?M(e).position()[t]+\"px\":r})}),M.each({Height:\"height\",Width:\"width\"},function(e,t){M.each({padding:\"inner\"+e,content:t,\"\":\"outer\"+e},function(r,n){M.fn[n]=function(i,o){var a=arguments.length&&(r||\"boolean\"!=typeof i),s=r||(!0===i||!0===o?\"margin\":\"border\");return W(this,function(t,r,i){var o;return x(t)?0===n.indexOf(\"outer\")?t[\"inner\"+e]:t.document.documentElement[\"client\"+e]:9===t.nodeType?(o=t.documentElement,Math.max(t.body[\"scroll\"+e],o[\"scroll\"+e],t.body[\"offset\"+e],o[\"offset\"+e],o[\"client\"+e])):void 0===i?M.css(t,r,s):M.style(t,r,i,s)},t,a?i:void 0,a)}})}),M.each(\"blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu\".split(\" \"),function(e,t){M.fn[t]=function(e,r){return arguments.length>0?this.on(t,null,e,r):this.trigger(t)}}),M.fn.extend({hover:function(e,t){return this.mouseenter(e).mouseleave(t||e)}}),M.fn.extend({bind:function(e,t,r){return this.on(e,null,t,r)},unbind:function(e,t){return this.off(e,null,t)},delegate:function(e,t,r,n){return this.on(t,e,r,n)},undelegate:function(e,t,r){return 1===arguments.length?this.off(e,\"**\"):this.off(t,e||\"**\",r)}}),M.proxy=function(e,t){var r,n,i;if(\"string\"==typeof t&&(r=e[t],t=e,e=r),y(e))return n=c.call(arguments,2),(i=function(){return e.apply(t||this,n.concat(c.call(arguments)))}).guid=e.guid=e.guid||M.guid++,i},M.holdReady=function(e){e?M.readyWait++:M.ready(!0)},M.isArray=Array.isArray,M.parseJSON=JSON.parse,M.nodeName=R,M.isFunction=y,M.isWindow=x,M.camelCase=Z,M.type=_,M.now=Date.now,M.isNumeric=function(e){var t=M.type(e);return(\"number\"===t||\"string\"===t)&&!isNaN(e-parseFloat(e))},void 0===(n=function(){return M}.apply(t,[]))||(e.exports=n);var Jt=r.jQuery,$t=r.$;return M.noConflict=function(e){return r.$===M&&(r.$=$t),e&&r.jQuery===M&&(r.jQuery=Jt),M},i||(r.jQuery=r.$=M),M})},function(e,t,r){var n;n=r(3),e.exports=function(e){if(e instanceof Array)for(var t=0,i=e.length;t<i;t++){var o=e[t];if(o instanceof Function)o(n);else{if(\"string\"!=typeof o)throw new Error(\"Invalid module type provided\");r(6)(\"./\"+o+\".js\")(n)}}return n}},function(e,t,r){var n;!function(i){var o,a,s,c,l,u,h,d,p,f,m,v,g,y,x,b,w,_,M,S,T,E,C,A,L,R,P,D,U,I,F,N,B,O,V,G,z,k,j,H,W,X,q,Y,Z={REVISION:\"79\"};void 0===Number.EPSILON&&(Number.EPSILON=Math.pow(2,-52)),void 0===Math.sign&&(Math.sign=function(e){return e<0?-1:e>0?1:+e}),void 0===Function.prototype.name&&Object.defineProperty(Function.prototype,\"name\",{get:function(){return this.toString().match(/^\\s*function\\s*(\\S*)\\s*\\(/)[1]}}),void 0===Object.assign&&(Object.assign=function(e){\"use strict\";if(null==e)throw new TypeError(\"Cannot convert undefined or null to object\");for(var t=Object(e),r=1;r<arguments.length;r++){var n=arguments[r];if(null!=n)for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(t[i]=n[i])}return t}),Object.assign(Z,{MOUSE:{LEFT:0,MIDDLE:1,RIGHT:2},CullFaceNone:0,CullFaceBack:1,CullFaceFront:2,CullFaceFrontBack:3,FrontFaceDirectionCW:0,FrontFaceDirectionCCW:1,BasicShadowMap:0,PCFShadowMap:1,PCFSoftShadowMap:2,FrontSide:0,BackSide:1,DoubleSide:2,FlatShading:1,SmoothShading:2,NoColors:0,FaceColors:1,VertexColors:2,NoBlending:0,NormalBlending:1,AdditiveBlending:2,SubtractiveBlending:3,MultiplyBlending:4,CustomBlending:5,AddEquation:100,SubtractEquation:101,ReverseSubtractEquation:102,MinEquation:103,MaxEquation:104,ZeroFactor:200,OneFactor:201,SrcColorFactor:202,OneMinusSrcColorFactor:203,SrcAlphaFactor:204,OneMinusSrcAlphaFactor:205,DstAlphaFactor:206,OneMinusDstAlphaFactor:207,DstColorFactor:208,OneMinusDstColorFactor:209,SrcAlphaSaturateFactor:210,NeverDepth:0,AlwaysDepth:1,LessDepth:2,LessEqualDepth:3,EqualDepth:4,GreaterEqualDepth:5,GreaterDepth:6,NotEqualDepth:7,MultiplyOperation:0,MixOperation:1,AddOperation:2,NoToneMapping:0,LinearToneMapping:1,ReinhardToneMapping:2,Uncharted2ToneMapping:3,CineonToneMapping:4,UVMapping:300,CubeReflectionMapping:301,CubeRefractionMapping:302,EquirectangularReflectionMapping:303,EquirectangularRefractionMapping:304,SphericalReflectionMapping:305,CubeUVReflectionMapping:306,CubeUVRefractionMapping:307,RepeatWrapping:1e3,ClampToEdgeWrapping:1001,MirroredRepeatWrapping:1002,NearestFilter:1003,NearestMipMapNearestFilter:1004,NearestMipMapLinearFilter:1005,LinearFilter:1006,LinearMipMapNearestFilter:1007,LinearMipMapLinearFilter:1008,UnsignedByteType:1009,ByteType:1010,ShortType:1011,UnsignedShortType:1012,IntType:1013,UnsignedIntType:1014,FloatType:1015,HalfFloatType:1025,UnsignedShort4444Type:1016,UnsignedShort5551Type:1017,UnsignedShort565Type:1018,AlphaFormat:1019,RGBFormat:1020,RGBAFormat:1021,LuminanceFormat:1022,LuminanceAlphaFormat:1023,RGBEFormat:Z.RGBAFormat,DepthFormat:1026,RGB_S3TC_DXT1_Format:2001,RGBA_S3TC_DXT1_Format:2002,RGBA_S3TC_DXT3_Format:2003,RGBA_S3TC_DXT5_Format:2004,RGB_PVRTC_4BPPV1_Format:2100,RGB_PVRTC_2BPPV1_Format:2101,RGBA_PVRTC_4BPPV1_Format:2102,RGBA_PVRTC_2BPPV1_Format:2103,RGB_ETC1_Format:2151,LoopOnce:2200,LoopRepeat:2201,LoopPingPong:2202,InterpolateDiscrete:2300,InterpolateLinear:2301,InterpolateSmooth:2302,ZeroCurvatureEnding:2400,ZeroSlopeEnding:2401,WrapAroundEnding:2402,TrianglesDrawMode:0,TriangleStripDrawMode:1,TriangleFanDrawMode:2,LinearEncoding:3e3,sRGBEncoding:3001,GammaEncoding:3007,RGBEEncoding:3002,LogLuvEncoding:3003,RGBM7Encoding:3004,RGBM16Encoding:3005,RGBDEncoding:3006,BasicDepthPacking:3200,RGBADepthPacking:3201}),Z.Color=function(e,t,r){return void 0===t&&void 0===r?this.set(e):this.setRGB(e,t,r)},Z.Color.prototype={constructor:Z.Color,r:1,g:1,b:1,set:function(e){return e instanceof Z.Color?this.copy(e):\"number\"==typeof e?this.setHex(e):\"string\"==typeof e&&this.setStyle(e),this},setScalar:function(e){this.r=e,this.g=e,this.b=e},setHex:function(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,this},setRGB:function(e,t,r){return this.r=e,this.g=t,this.b=r,this},setHSL:function(){function e(e,t,r){return r<0&&(r+=1),r>1&&(r-=1),r<1/6?e+6*(t-e)*r:r<.5?t:r<2/3?e+6*(t-e)*(2/3-r):e}return function(t,r,n){if(t=Z.Math.euclideanModulo(t,1),r=Z.Math.clamp(r,0,1),n=Z.Math.clamp(n,0,1),0===r)this.r=this.g=this.b=n;else{var i=n<=.5?n*(1+r):n+r-n*r,o=2*n-i;this.r=e(o,i,t+1/3),this.g=e(o,i,t),this.b=e(o,i,t-1/3)}return this}}(),setStyle:function(e){function t(t){void 0!==t&&parseFloat(t)<1&&console.warn(\"THREE.Color: Alpha component of \"+e+\" will be ignored.\")}var r;if(r=/^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec(e)){var n,i=r[1],o=r[2];switch(i){case\"rgb\":case\"rgba\":if(n=/^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(o))return this.r=Math.min(255,parseInt(n[1],10))/255,this.g=Math.min(255,parseInt(n[2],10))/255,this.b=Math.min(255,parseInt(n[3],10))/255,t(n[5]),this;if(n=/^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(o))return this.r=Math.min(100,parseInt(n[1],10))/100,this.g=Math.min(100,parseInt(n[2],10))/100,this.b=Math.min(100,parseInt(n[3],10))/100,t(n[5]),this;break;case\"hsl\":case\"hsla\":if(n=/^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(o)){var a=parseFloat(n[1])/360,s=parseInt(n[2],10)/100,c=parseInt(n[3],10)/100;return t(n[5]),this.setHSL(a,s,c)}}}else if(r=/^\\#([A-Fa-f0-9]+)$/.exec(e)){var l,u=(l=r[1]).length;if(3===u)return this.r=parseInt(l.charAt(0)+l.charAt(0),16)/255,this.g=parseInt(l.charAt(1)+l.charAt(1),16)/255,this.b=parseInt(l.charAt(2)+l.charAt(2),16)/255,this;if(6===u)return this.r=parseInt(l.charAt(0)+l.charAt(1),16)/255,this.g=parseInt(l.charAt(2)+l.charAt(3),16)/255,this.b=parseInt(l.charAt(4)+l.charAt(5),16)/255,this}e&&e.length>0&&(void 0!==(l=Z.ColorKeywords[e])?this.setHex(l):console.warn(\"THREE.Color: Unknown color \"+e));return this},clone:function(){return new this.constructor(this.r,this.g,this.b)},copy:function(e){return this.r=e.r,this.g=e.g,this.b=e.b,this},copyGammaToLinear:function(e,t){return void 0===t&&(t=2),this.r=Math.pow(e.r,t),this.g=Math.pow(e.g,t),this.b=Math.pow(e.b,t),this},copyLinearToGamma:function(e,t){void 0===t&&(t=2);var r=t>0?1/t:1;return this.r=Math.pow(e.r,r),this.g=Math.pow(e.g,r),this.b=Math.pow(e.b,r),this},convertGammaToLinear:function(){var e=this.r,t=this.g,r=this.b;return this.r=e*e,this.g=t*t,this.b=r*r,this},convertLinearToGamma:function(){return this.r=Math.sqrt(this.r),this.g=Math.sqrt(this.g),this.b=Math.sqrt(this.b),this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return(\"000000\"+this.getHex().toString(16)).slice(-6)},getHSL:function(e){var t,r,n=e||{h:0,s:0,l:0},i=this.r,o=this.g,a=this.b,s=Math.max(i,o,a),c=Math.min(i,o,a),l=(c+s)/2;if(c===s)t=0,r=0;else{var u=s-c;switch(r=l<=.5?u/(s+c):u/(2-s-c),s){case i:t=(o-a)/u+(o<a?6:0);break;case o:t=(a-i)/u+2;break;case a:t=(i-o)/u+4}t/=6}return n.h=t,n.s=r,n.l=l,n},getStyle:function(){return\"rgb(\"+(255*this.r|0)+\",\"+(255*this.g|0)+\",\"+(255*this.b|0)+\")\"},offsetHSL:function(e,t,r){var n=this.getHSL();return n.h+=e,n.s+=t,n.l+=r,this.setHSL(n.h,n.s,n.l),this},add:function(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this},addColors:function(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this},addScalar:function(e){return this.r+=e,this.g+=e,this.b+=e,this},sub:function(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this},multiply:function(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this},multiplyScalar:function(e){return this.r*=e,this.g*=e,this.b*=e,this},lerp:function(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this},equals:function(e){return e.r===this.r&&e.g===this.g&&e.b===this.b},fromArray:function(e,t){return void 0===t&&(t=0),this.r=e[t],this.g=e[t+1],this.b=e[t+2],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}},Z.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Z.Quaternion=function(e,t,r,n){this._x=e||0,this._y=t||0,this._z=r||0,this._w=void 0!==n?n:1},Z.Quaternion.prototype={constructor:Z.Quaternion,get x(){return this._x},set x(e){this._x=e,this.onChangeCallback()},get y(){return this._y},set y(e){this._y=e,this.onChangeCallback()},get z(){return this._z},set z(e){this._z=e,this.onChangeCallback()},get w(){return this._w},set w(e){this._w=e,this.onChangeCallback()},set:function(e,t,r,n){return this._x=e,this._y=t,this._z=r,this._w=n,this.onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._w)},copy:function(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this.onChangeCallback(),this},setFromEuler:function(e,t){if(e instanceof Z.Euler==!1)throw new Error(\"THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.\");var r=Math.cos(e._x/2),n=Math.cos(e._y/2),i=Math.cos(e._z/2),o=Math.sin(e._x/2),a=Math.sin(e._y/2),s=Math.sin(e._z/2),c=e.order;return\"XYZ\"===c?(this._x=o*n*i+r*a*s,this._y=r*a*i-o*n*s,this._z=r*n*s+o*a*i,this._w=r*n*i-o*a*s):\"YXZ\"===c?(this._x=o*n*i+r*a*s,this._y=r*a*i-o*n*s,this._z=r*n*s-o*a*i,this._w=r*n*i+o*a*s):\"ZXY\"===c?(this._x=o*n*i-r*a*s,this._y=r*a*i+o*n*s,this._z=r*n*s+o*a*i,this._w=r*n*i-o*a*s):\"ZYX\"===c?(this._x=o*n*i-r*a*s,this._y=r*a*i+o*n*s,this._z=r*n*s-o*a*i,this._w=r*n*i+o*a*s):\"YZX\"===c?(this._x=o*n*i+r*a*s,this._y=r*a*i+o*n*s,this._z=r*n*s-o*a*i,this._w=r*n*i-o*a*s):\"XZY\"===c&&(this._x=o*n*i-r*a*s,this._y=r*a*i-o*n*s,this._z=r*n*s+o*a*i,this._w=r*n*i+o*a*s),!1!==t&&this.onChangeCallback(),this},setFromAxisAngle:function(e,t){var r=t/2,n=Math.sin(r);return this._x=e.x*n,this._y=e.y*n,this._z=e.z*n,this._w=Math.cos(r),this.onChangeCallback(),this},setFromRotationMatrix:function(e){var t,r=e.elements,n=r[0],i=r[4],o=r[8],a=r[1],s=r[5],c=r[9],l=r[2],u=r[6],h=r[10],d=n+s+h;return d>0?(t=.5/Math.sqrt(d+1),this._w=.25/t,this._x=(u-c)*t,this._y=(o-l)*t,this._z=(a-i)*t):n>s&&n>h?(t=2*Math.sqrt(1+n-s-h),this._w=(u-c)/t,this._x=.25*t,this._y=(i+a)/t,this._z=(o+l)/t):s>h?(t=2*Math.sqrt(1+s-n-h),this._w=(o-l)/t,this._x=(i+a)/t,this._y=.25*t,this._z=(c+u)/t):(t=2*Math.sqrt(1+h-n-s),this._w=(a-i)/t,this._x=(o+l)/t,this._y=(c+u)/t,this._z=.25*t),this.onChangeCallback(),this},setFromUnitVectors:function(e,t){return void 0===o&&(o=new Z.Vector3),(a=e.dot(t)+1)<1e-6?(a=0,Math.abs(e.x)>Math.abs(e.z)?o.set(-e.y,e.x,0):o.set(0,-e.z,e.y)):o.crossVectors(e,t),this._x=o.x,this._y=o.y,this._z=o.z,this._w=a,this.normalize()},inverse:function(){return this.conjugate().normalize()},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this.onChangeCallback(),this},dot:function(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this.onChangeCallback(),this},multiply:function(e,t){return void 0!==t?(console.warn(\"THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.\"),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)},premultiply:function(e){return this.multiplyQuaternions(e,this)},multiplyQuaternions:function(e,t){var r=e._x,n=e._y,i=e._z,o=e._w,a=t._x,s=t._y,c=t._z,l=t._w;return this._x=r*l+o*a+n*c-i*s,this._y=n*l+o*s+i*a-r*c,this._z=i*l+o*c+r*s-n*a,this._w=o*l-r*a-n*s-i*c,this.onChangeCallback(),this},slerp:function(e,t){if(0===t)return this;if(1===t)return this.copy(e);var r=this._x,n=this._y,i=this._z,o=this._w,a=o*e._w+r*e._x+n*e._y+i*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=o,this._x=r,this._y=n,this._z=i,this;var s=Math.sqrt(1-a*a);if(Math.abs(s)<.001)return this._w=.5*(o+this._w),this._x=.5*(r+this._x),this._y=.5*(n+this._y),this._z=.5*(i+this._z),this;var c=Math.atan2(s,a),l=Math.sin((1-t)*c)/s,u=Math.sin(t*c)/s;return this._w=o*l+this._w*u,this._x=r*l+this._x*u,this._y=n*l+this._y*u,this._z=i*l+this._z*u,this.onChangeCallback(),this},equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w},fromArray:function(e,t){return void 0===t&&(t=0),this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this.onChangeCallback(),this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e},onChange:function(e){return this.onChangeCallback=e,this},onChangeCallback:function(){}},Object.assign(Z.Quaternion,{slerp:function(e,t,r,n){return r.copy(e).slerp(t,n)},slerpFlat:function(e,t,r,n,i,o,a){var s=r[n+0],c=r[n+1],l=r[n+2],u=r[n+3],h=i[o+0],d=i[o+1],p=i[o+2],f=i[o+3];if(u!==f||s!==h||c!==d||l!==p){var m=1-a,v=s*h+c*d+l*p+u*f,g=v>=0?1:-1,y=1-v*v;if(y>Number.EPSILON){var x=Math.sqrt(y),b=Math.atan2(x,v*g);m=Math.sin(m*b)/x,a=Math.sin(a*b)/x}var w=a*g;if(s=s*m+h*w,c=c*m+d*w,l=l*m+p*w,u=u*m+f*w,m===1-a){var _=1/Math.sqrt(s*s+c*c+l*l+u*u);s*=_,c*=_,l*=_,u*=_}}e[t]=s,e[t+1]=c,e[t+2]=l,e[t+3]=u}}),Z.Vector2=function(e,t){this.x=e||0,this.y=t||0},Z.Vector2.prototype={constructor:Z.Vector2,get width(){return this.x},set width(e){this.x=e},get height(){return this.y},set height(e){this.y=e},set:function(e,t){return this.x=e,this.y=t,this},setScalar:function(e){return this.x=e,this.y=e,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error(\"index is out of range: \"+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error(\"index is out of range: \"+e)}},clone:function(){return new this.constructor(this.x,this.y)},copy:function(e){return this.x=e.x,this.y=e.y,this},add:function(e,t){return void 0!==t?(console.warn(\"THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.\"),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)},addScalar:function(e){return this.x+=e,this.y+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this},addScaledVector:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this},sub:function(e,t){return void 0!==t?(console.warn(\"THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.\"),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)},subScalar:function(e){return this.x-=e,this.y-=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this},multiply:function(e){return this.x*=e.x,this.y*=e.y,this},multiplyScalar:function(e){return isFinite(e)?(this.x*=e,this.y*=e):(this.x=0,this.y=0),this},divide:function(e){return this.x/=e.x,this.y/=e.y,this},divideScalar:function(e){return this.multiplyScalar(1/e)},min:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this},max:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this},clamp:function(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this},clampScalar:function(e,t){return void 0===s&&(s=new Z.Vector2,c=new Z.Vector2),s.set(e,e),c.set(t,t),this.clamp(s,c)},clampLength:function(e,t){var r=this.length();return this.multiplyScalar(Math.max(e,Math.min(t,r))/r)},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this},negate:function(){return this.x=-this.x,this.y=-this.y,this},dot:function(e){return this.x*e.x+this.y*e.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)},normalize:function(){return this.divideScalar(this.length())},angle:function(){var e=Math.atan2(this.y,this.x);return e<0&&(e+=2*Math.PI),e},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,r=this.y-e.y;return t*t+r*r},distanceToManhattan:function(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)},setLength:function(e){return this.multiplyScalar(e/this.length())},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this},lerpVectors:function(e,t,r){return this.subVectors(t,e).multiplyScalar(r).add(e)},equals:function(e){return e.x===this.x&&e.y===this.y},fromArray:function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.x,e[t+1]=this.y,e},fromAttribute:function(e,t,r){return void 0===r&&(r=0),t=t*e.itemSize+r,this.x=e.array[t],this.y=e.array[t+1],this},rotateAround:function(e,t){var r=Math.cos(t),n=Math.sin(t),i=this.x-e.x,o=this.y-e.y;return this.x=i*r-o*n+e.x,this.y=i*n+o*r+e.y,this}},Z.Vector3=function(e,t,r){this.x=e||0,this.y=t||0,this.z=r||0},Z.Vector3.prototype={constructor:Z.Vector3,set:function(e,t,r){return this.x=e,this.y=t,this.z=r,this},setScalar:function(e){return this.x=e,this.y=e,this.z=e,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error(\"index is out of range: \"+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error(\"index is out of range: \"+e)}},clone:function(){return new this.constructor(this.x,this.y,this.z)},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this},add:function(e,t){return void 0!==t?(console.warn(\"THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.\"),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this},addScaledVector:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this},sub:function(e,t){return void 0!==t?(console.warn(\"THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.\"),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)},subScalar:function(e){return this.x-=e,this.y-=e,this.z-=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this},multiply:function(e,t){return void 0!==t?(console.warn(\"THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.\"),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)},multiplyScalar:function(e){return isFinite(e)?(this.x*=e,this.y*=e,this.z*=e):(this.x=0,this.y=0,this.z=0),this},multiplyVectors:function(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this},applyEuler:function(e){return e instanceof Z.Euler==0&&console.error(\"THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.\"),void 0===u&&(u=new Z.Quaternion),this.applyQuaternion(u.setFromEuler(e))},applyAxisAngle:function(){var e;return function(t,r){return void 0===e&&(e=new Z.Quaternion),this.applyQuaternion(e.setFromAxisAngle(t,r))}}(),applyMatrix3:function(e){var t=this.x,r=this.y,n=this.z,i=e.elements;return this.x=i[0]*t+i[3]*r+i[6]*n,this.y=i[1]*t+i[4]*r+i[7]*n,this.z=i[2]*t+i[5]*r+i[8]*n,this},applyMatrix4:function(e){var t=this.x,r=this.y,n=this.z,i=e.elements;return this.x=i[0]*t+i[4]*r+i[8]*n+i[12],this.y=i[1]*t+i[5]*r+i[9]*n+i[13],this.z=i[2]*t+i[6]*r+i[10]*n+i[14],this},applyProjection:function(e){var t=this.x,r=this.y,n=this.z,i=e.elements,o=1/(i[3]*t+i[7]*r+i[11]*n+i[15]);return this.x=(i[0]*t+i[4]*r+i[8]*n+i[12])*o,this.y=(i[1]*t+i[5]*r+i[9]*n+i[13])*o,this.z=(i[2]*t+i[6]*r+i[10]*n+i[14])*o,this},applyQuaternion:function(e){var t=this.x,r=this.y,n=this.z,i=e.x,o=e.y,a=e.z,s=e.w,c=s*t+o*n-a*r,l=s*r+a*t-i*n,u=s*n+i*r-o*t,h=-i*t-o*r-a*n;return this.x=c*s+h*-i+l*-a-u*-o,this.y=l*s+h*-o+u*-i-c*-a,this.z=u*s+h*-a+c*-o-l*-i,this},project:function(e){return void 0===l&&(l=new Z.Matrix4),l.multiplyMatrices(e.projectionMatrix,l.getInverse(e.matrixWorld)),this.applyProjection(l)},unproject:function(){var e;return function(t){return void 0===e&&(e=new Z.Matrix4),e.multiplyMatrices(t.matrixWorld,e.getInverse(t.projectionMatrix)),this.applyProjection(e)}}(),transformDirection:function(e){var t=this.x,r=this.y,n=this.z,i=e.elements;return this.x=i[0]*t+i[4]*r+i[8]*n,this.y=i[1]*t+i[5]*r+i[9]*n,this.z=i[2]*t+i[6]*r+i[10]*n,this.normalize()},divide:function(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this},divideScalar:function(e){return this.multiplyScalar(1/e)},min:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this},max:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this},clamp:function(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this},clampScalar:function(){var e,t;return function(r,n){return void 0===e&&(e=new Z.Vector3,t=new Z.Vector3),e.set(r,r,r),t.set(n,n,n),this.clamp(e,t)}}(),clampLength:function(e,t){var r=this.length();return this.multiplyScalar(Math.max(e,Math.min(t,r))/r)},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){return this.multiplyScalar(e/this.length())},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this},lerpVectors:function(e,t,r){return this.subVectors(t,e).multiplyScalar(r).add(e)},cross:function(e,t){if(void 0!==t)return console.warn(\"THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.\"),this.crossVectors(e,t);var r=this.x,n=this.y,i=this.z;return this.x=n*e.z-i*e.y,this.y=i*e.x-r*e.z,this.z=r*e.y-n*e.x,this},crossVectors:function(e,t){var r=e.x,n=e.y,i=e.z,o=t.x,a=t.y,s=t.z;return this.x=n*s-i*a,this.y=i*o-r*s,this.z=r*a-n*o,this},projectOnVector:function(e){var t=e.dot(this)/e.lengthSq();return this.copy(e).multiplyScalar(t)},projectOnPlane:function(){var e;return function(t){return void 0===e&&(e=new Z.Vector3),e.copy(this).projectOnVector(t),this.sub(e)}}(),reflect:function(){var e;return function(t){return void 0===e&&(e=new Z.Vector3),this.sub(e.copy(t).multiplyScalar(2*this.dot(t)))}}(),angleTo:function(e){var t=this.dot(e)/Math.sqrt(this.lengthSq()*e.lengthSq());return Math.acos(Z.Math.clamp(t,-1,1))},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,r=this.y-e.y,n=this.z-e.z;return t*t+r*r+n*n},distanceToManhattan:function(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)},setFromSpherical:function(e){var t=Math.sin(e.phi)*e.radius;return this.x=t*Math.sin(e.theta),this.y=Math.cos(e.phi)*e.radius,this.z=t*Math.cos(e.theta),this},setFromMatrixPosition:function(e){return this.setFromMatrixColumn(e,3)},setFromMatrixScale:function(e){var t=this.setFromMatrixColumn(e,0).length(),r=this.setFromMatrixColumn(e,1).length(),n=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=r,this.z=n,this},setFromMatrixColumn:function(e,t){if(\"number\"==typeof e){console.warn(\"THREE.Vector3: setFromMatrixColumn now expects ( matrix, index ).\");var r=e;e=t,t=r}return this.fromArray(e.elements,4*t)},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z},fromArray:function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e},fromAttribute:function(e,t,r){return void 0===r&&(r=0),t=t*e.itemSize+r,this.x=e.array[t],this.y=e.array[t+1],this.z=e.array[t+2],this}},Z.Vector4=function(e,t,r,n){this.x=e||0,this.y=t||0,this.z=r||0,this.w=void 0!==n?n:1},Z.Vector4.prototype={constructor:Z.Vector4,set:function(e,t,r,n){return this.x=e,this.y=t,this.z=r,this.w=n,this},setScalar:function(e){return this.x=e,this.y=e,this.z=e,this.w=e,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setW:function(e){return this.w=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error(\"index is out of range: \"+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error(\"index is out of range: \"+e)}},clone:function(){return new this.constructor(this.x,this.y,this.z,this.w)},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this},add:function(e,t){return void 0!==t?(console.warn(\"THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.\"),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this},addScaledVector:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this},sub:function(e,t){return void 0!==t?(console.warn(\"THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.\"),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)},subScalar:function(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this},multiplyScalar:function(e){return isFinite(e)?(this.x*=e,this.y*=e,this.z*=e,this.w*=e):(this.x=0,this.y=0,this.z=0,this.w=0),this},applyMatrix4:function(e){var t=this.x,r=this.y,n=this.z,i=this.w,o=e.elements;return this.x=o[0]*t+o[4]*r+o[8]*n+o[12]*i,this.y=o[1]*t+o[5]*r+o[9]*n+o[13]*i,this.z=o[2]*t+o[6]*r+o[10]*n+o[14]*i,this.w=o[3]*t+o[7]*r+o[11]*n+o[15]*i,this},divideScalar:function(e){return this.multiplyScalar(1/e)},setAxisAngleFromQuaternion:function(e){this.w=2*Math.acos(e.w);var t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this},setAxisAngleFromRotationMatrix:function(e){var t,r,n,i,o=e.elements,a=o[0],s=o[4],c=o[8],l=o[1],u=o[5],h=o[9],d=o[2],p=o[6],f=o[10];if(Math.abs(s-l)<.01&&Math.abs(c-d)<.01&&Math.abs(h-p)<.01){if(Math.abs(s+l)<.1&&Math.abs(c+d)<.1&&Math.abs(h+p)<.1&&Math.abs(a+u+f-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;var m=(a+1)/2,v=(u+1)/2,g=(f+1)/2,y=(s+l)/4,x=(c+d)/4,b=(h+p)/4;return m>v&&m>g?m<.01?(r=0,n=.707106781,i=.707106781):(n=y/(r=Math.sqrt(m)),i=x/r):v>g?v<.01?(r=.707106781,n=0,i=.707106781):(r=y/(n=Math.sqrt(v)),i=b/n):g<.01?(r=.707106781,n=.707106781,i=0):(r=x/(i=Math.sqrt(g)),n=b/i),this.set(r,n,i,t),this}var w=Math.sqrt((p-h)*(p-h)+(c-d)*(c-d)+(l-s)*(l-s));return Math.abs(w)<.001&&(w=1),this.x=(p-h)/w,this.y=(c-d)/w,this.z=(l-s)/w,this.w=Math.acos((a+u+f-1)/2),this},min:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this},max:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this},clamp:function(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this},clampScalar:function(){var e,t;return function(r,n){return void 0===e&&(e=new Z.Vector4,t=new Z.Vector4),e.set(r,r,r,r),t.set(n,n,n,n),this.clamp(e,t)}}(),floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){return this.multiplyScalar(e/this.length())},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this},lerpVectors:function(e,t,r){return this.subVectors(t,e).multiplyScalar(r).add(e)},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w},fromArray:function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e},fromAttribute:function(e,t,r){return void 0===r&&(r=0),t=t*e.itemSize+r,this.x=e.array[t],this.y=e.array[t+1],this.z=e.array[t+2],this.w=e.array[t+3],this}},Z.Euler=function(e,t,r,n){this._x=e||0,this._y=t||0,this._z=r||0,this._order=n||Z.Euler.DefaultOrder},Z.Euler.RotationOrders=[\"XYZ\",\"YZX\",\"ZXY\",\"XZY\",\"YXZ\",\"ZYX\"],Z.Euler.DefaultOrder=\"XYZ\",Z.Euler.prototype={constructor:Z.Euler,get x(){return this._x},set x(e){this._x=e,this.onChangeCallback()},get y(){return this._y},set y(e){this._y=e,this.onChangeCallback()},get z(){return this._z},set z(e){this._z=e,this.onChangeCallback()},get order(){return this._order},set order(e){this._order=e,this.onChangeCallback()},set:function(e,t,r,n){return this._x=e,this._y=t,this._z=r,this._order=n||this._order,this.onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._order)},copy:function(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this.onChangeCallback(),this},setFromRotationMatrix:function(e,t,r){var n=Z.Math.clamp,i=e.elements,o=i[0],a=i[4],s=i[8],c=i[1],l=i[5],u=i[9],h=i[2],d=i[6],p=i[10];return\"XYZ\"===(t=t||this._order)?(this._y=Math.asin(n(s,-1,1)),Math.abs(s)<.99999?(this._x=Math.atan2(-u,p),this._z=Math.atan2(-a,o)):(this._x=Math.atan2(d,l),this._z=0)):\"YXZ\"===t?(this._x=Math.asin(-n(u,-1,1)),Math.abs(u)<.99999?(this._y=Math.atan2(s,p),this._z=Math.atan2(c,l)):(this._y=Math.atan2(-h,o),this._z=0)):\"ZXY\"===t?(this._x=Math.asin(n(d,-1,1)),Math.abs(d)<.99999?(this._y=Math.atan2(-h,p),this._z=Math.atan2(-a,l)):(this._y=0,this._z=Math.atan2(c,o))):\"ZYX\"===t?(this._y=Math.asin(-n(h,-1,1)),Math.abs(h)<.99999?(this._x=Math.atan2(d,p),this._z=Math.atan2(c,o)):(this._x=0,this._z=Math.atan2(-a,l))):\"YZX\"===t?(this._z=Math.asin(n(c,-1,1)),Math.abs(c)<.99999?(this._x=Math.atan2(-u,l),this._y=Math.atan2(-h,o)):(this._x=0,this._y=Math.atan2(s,p))):\"XZY\"===t?(this._z=Math.asin(-n(a,-1,1)),Math.abs(a)<.99999?(this._x=Math.atan2(d,l),this._y=Math.atan2(s,o)):(this._x=Math.atan2(-u,p),this._y=0)):console.warn(\"THREE.Euler: .setFromRotationMatrix() given unsupported order: \"+t),this._order=t,!1!==r&&this.onChangeCallback(),this},setFromQuaternion:function(){var e;return function(t,r,n){return void 0===e&&(e=new Z.Matrix4),e.makeRotationFromQuaternion(t),this.setFromRotationMatrix(e,r,n)}}(),setFromVector3:function(e,t){return this.set(e.x,e.y,e.z,t||this._order)},reorder:(h=new Z.Quaternion,function(e){return h.setFromEuler(this),this.setFromQuaternion(h,e)}),equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order},fromArray:function(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this.onChangeCallback(),this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e},toVector3:function(e){return e?e.set(this._x,this._y,this._z):new Z.Vector3(this._x,this._y,this._z)},onChange:function(e){return this.onChangeCallback=e,this},onChangeCallback:function(){}},Z.Line3=function(e,t){this.start=void 0!==e?e:new Z.Vector3,this.end=void 0!==t?t:new Z.Vector3},Z.Line3.prototype={constructor:Z.Line3,set:function(e,t){return this.start.copy(e),this.end.copy(t),this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.start.copy(e.start),this.end.copy(e.end),this},center:function(e){return(e||new Z.Vector3).addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(e){return(e||new Z.Vector3).subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(e,t){var r=t||new Z.Vector3;return this.delta(r).multiplyScalar(e).add(this.start)},closestPointToPointParameter:(d=new Z.Vector3,p=new Z.Vector3,function(e,t){d.subVectors(e,this.start),p.subVectors(this.end,this.start);var r=p.dot(p),n=p.dot(d)/r;return t&&(n=Z.Math.clamp(n,0,1)),n}),closestPointToPoint:function(e,t,r){var n=this.closestPointToPointParameter(e,t),i=r||new Z.Vector3;return this.delta(i).multiplyScalar(n).add(this.start)},applyMatrix4:function(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this},equals:function(e){return e.start.equals(this.start)&&e.end.equals(this.end)}},Z.Box2=function(e,t){this.min=void 0!==e?e:new Z.Vector2(1/0,1/0),this.max=void 0!==t?t:new Z.Vector2(-1/0,-1/0)},Z.Box2.prototype={constructor:Z.Box2,set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromPoints:function(e){this.makeEmpty();for(var t=0,r=e.length;t<r;t++)this.expandByPoint(e[t]);return this},setFromCenterAndSize:function(){var e=new Z.Vector2;return function(t,r){var n=e.copy(r).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(e){return(e||new Z.Vector2).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(e){return(e||new Z.Vector2).subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},containsPoint:function(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y},getParameter:function(e,t){return(t||new Z.Vector2).set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))},intersectsBox:function(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)},clampPoint:function(e,t){return(t||new Z.Vector2).copy(e).clamp(this.min,this.max)},distanceToPoint:function(){var e=new Z.Vector2;return function(t){return e.copy(t).clamp(this.min,this.max).sub(t).length()}}(),intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)}},Z.Box3=function(e,t){this.min=void 0!==e?e:new Z.Vector3(1/0,1/0,1/0),this.max=void 0!==t?t:new Z.Vector3(-1/0,-1/0,-1/0)},Z.Box3.prototype={constructor:Z.Box3,set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromArray:function(e){for(var t=1/0,r=1/0,n=1/0,i=-1/0,o=-1/0,a=-1/0,s=0,c=e.length;s<c;s+=3){var l=e[s],u=e[s+1],h=e[s+2];l<t&&(t=l),u<r&&(r=u),h<n&&(n=h),l>i&&(i=l),u>o&&(o=u),h>a&&(a=h)}this.min.set(t,r,n),this.max.set(i,o,a)},setFromPoints:function(e){this.makeEmpty();for(var t=0,r=e.length;t<r;t++)this.expandByPoint(e[t]);return this},setFromCenterAndSize:function(){var e=new Z.Vector3;return function(t,r){var n=e.copy(r).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}}(),setFromObject:function(){var e=new Z.Vector3;return function(t){var r=this;return t.updateMatrixWorld(!0),this.makeEmpty(),t.traverse(function(t){var n=t.geometry;if(void 0!==n)if(n instanceof Z.Geometry)for(var i=n.vertices,o=0,a=i.length;o<a;o++)e.copy(i[o]),e.applyMatrix4(t.matrixWorld),r.expandByPoint(e);else if(n instanceof Z.BufferGeometry){var s=n.attributes.position;if(void 0!==s){var c,l,u;s instanceof Z.InterleavedBufferAttribute?(c=s.data.array,l=s.offset,u=s.data.stride):(c=s.array,l=0,u=3);for(o=l,a=c.length;o<a;o+=u)e.fromArray(c,o),e.applyMatrix4(t.matrixWorld),r.expandByPoint(e)}}}),this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(e){return(e||new Z.Vector3).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(e){return(e||new Z.Vector3).subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},containsPoint:function(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z},getParameter:function(e,t){return(t||new Z.Vector3).set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))},intersectsBox:function(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)},intersectsSphere:function(e){return void 0===m&&(m=new Z.Vector3),this.clampPoint(e.center,m),m.distanceToSquared(e.center)<=e.radius*e.radius},intersectsPlane:function(e){var t,r;return e.normal.x>0?(t=e.normal.x*this.min.x,r=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,r=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,r+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,r+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,r+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,r+=e.normal.z*this.min.z),t<=e.constant&&r>=e.constant},clampPoint:function(e,t){return(t||new Z.Vector3).copy(e).clamp(this.min,this.max)},distanceToPoint:function(){var e=new Z.Vector3;return function(t){return e.copy(t).clamp(this.min,this.max).sub(t).length()}}(),getBoundingSphere:function(){var e=new Z.Vector3;return function(t){var r=t||new Z.Sphere;return r.center=this.center(),r.radius=.5*this.size(e).length(),r}}(),intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},applyMatrix4:(f=[new Z.Vector3,new Z.Vector3,new Z.Vector3,new Z.Vector3,new Z.Vector3,new Z.Vector3,new Z.Vector3,new Z.Vector3],function(e){return this.isEmpty()?this:(f[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),f[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),f[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),f[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),f[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),f[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),f[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),f[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(f),this)}),translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)}},Z.Matrix3=function(){this.elements=new Float32Array([1,0,0,0,1,0,0,0,1]),arguments.length>0&&console.error(\"THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.\")},Z.Matrix3.prototype={constructor:Z.Matrix3,set:function(e,t,r,n,i,o,a,s,c){var l=this.elements;return l[0]=e,l[1]=n,l[2]=a,l[3]=t,l[4]=i,l[5]=s,l[6]=r,l[7]=o,l[8]=c,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},clone:function(){return(new this.constructor).fromArray(this.elements)},copy:function(e){var t=e.elements;return this.set(t[0],t[3],t[6],t[1],t[4],t[7],t[2],t[5],t[8]),this},setFromMatrix4:function(e){var t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this},applyToVector3Array:function(){var e;return function(t,r,n){void 0===e&&(e=new Z.Vector3),void 0===r&&(r=0),void 0===n&&(n=t.length);for(var i=0,o=r;i<n;i+=3,o+=3)e.fromArray(t,o),e.applyMatrix3(this),e.toArray(t,o);return t}}(),applyToBuffer:function(){var e;return function(t,r,n){void 0===e&&(e=new Z.Vector3),void 0===r&&(r=0),void 0===n&&(n=t.length/t.itemSize);for(var i=0,o=r;i<n;i++,o++)e.x=t.getX(o),e.y=t.getY(o),e.z=t.getZ(o),e.applyMatrix3(this),t.setXYZ(e.x,e.y,e.z);return t}}(),multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this},determinant:function(){var e=this.elements,t=e[0],r=e[1],n=e[2],i=e[3],o=e[4],a=e[5],s=e[6],c=e[7],l=e[8];return t*o*l-t*a*c-r*i*l+r*a*s+n*i*c-n*o*s},getInverse:function(e,t){e instanceof Z.Matrix4&&console.error(\"THREE.Matrix3.getInverse no longer takes a Matrix4 argument.\");var r=e.elements,n=this.elements,i=r[0],o=r[1],a=r[2],s=r[3],c=r[4],l=r[5],u=r[6],h=r[7],d=r[8],p=d*c-l*h,f=l*u-d*s,m=h*s-c*u,v=i*p+o*f+a*m;if(0===v){var g=\"THREE.Matrix3.getInverse(): can't invert matrix, determinant is 0\";if(t)throw new Error(g);return console.warn(g),this.identity()}var y=1/v;return n[0]=p*y,n[1]=(a*h-d*o)*y,n[2]=(l*o-a*c)*y,n[3]=f*y,n[4]=(d*i-a*u)*y,n[5]=(a*s-l*i)*y,n[6]=m*y,n[7]=(o*u-h*i)*y,n[8]=(c*i-o*s)*y,this},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this},flattenToArrayOffset:function(e,t){return console.warn(\"THREE.Matrix3: .flattenToArrayOffset is deprecated - just use .toArray instead.\"),this.toArray(e,t)},getNormalMatrix:function(e){return this.setFromMatrix4(e).getInverse(this).transpose()},transposeIntoArray:function(e){var t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this},fromArray:function(e){return this.elements.set(e),this},toArray:function(e,t){void 0===e&&(e=[]),void 0===t&&(t=0);var r=this.elements;return e[t]=r[0],e[t+1]=r[1],e[t+2]=r[2],e[t+3]=r[3],e[t+4]=r[4],e[t+5]=r[5],e[t+6]=r[6],e[t+7]=r[7],e[t+8]=r[8],e}},Z.Matrix4=function(){this.elements=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]),arguments.length>0&&console.error(\"THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.\")},Z.Matrix4.prototype={constructor:Z.Matrix4,set:function(e,t,r,n,i,o,a,s,c,l,u,h,d,p,f,m){var v=this.elements;return v[0]=e,v[4]=t,v[8]=r,v[12]=n,v[1]=i,v[5]=o,v[9]=a,v[13]=s,v[2]=c,v[6]=l,v[10]=u,v[14]=h,v[3]=d,v[7]=p,v[11]=f,v[15]=m,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},clone:function(){return(new Z.Matrix4).fromArray(this.elements)},copy:function(e){return this.elements.set(e.elements),this},copyPosition:function(e){var t=this.elements,r=e.elements;return t[12]=r[12],t[13]=r[13],t[14]=r[14],this},extractBasis:function(e,t,r){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),r.setFromMatrixColumn(this,2),this},makeBasis:function(e,t,r){return this.set(e.x,t.x,r.x,0,e.y,t.y,r.y,0,e.z,t.z,r.z,0,0,0,0,1),this},extractRotation:function(){var e;return function(t){void 0===e&&(e=new Z.Vector3);var r=this.elements,n=t.elements,i=1/e.setFromMatrixColumn(t,0).length(),o=1/e.setFromMatrixColumn(t,1).length(),a=1/e.setFromMatrixColumn(t,2).length();return r[0]=n[0]*i,r[1]=n[1]*i,r[2]=n[2]*i,r[4]=n[4]*o,r[5]=n[5]*o,r[6]=n[6]*o,r[8]=n[8]*a,r[9]=n[9]*a,r[10]=n[10]*a,this}}(),makeRotationFromEuler:function(e){e instanceof Z.Euler==!1&&console.error(\"THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.\");var t=this.elements,r=e.x,n=e.y,i=e.z,o=Math.cos(r),a=Math.sin(r),s=Math.cos(n),c=Math.sin(n),l=Math.cos(i),u=Math.sin(i);if(\"XYZ\"===e.order){var h=o*l,d=o*u,p=a*l,f=a*u;t[0]=s*l,t[4]=-s*u,t[8]=c,t[1]=d+p*c,t[5]=h-f*c,t[9]=-a*s,t[2]=f-h*c,t[6]=p+d*c,t[10]=o*s}else if(\"YXZ\"===e.order){var m=s*l,v=s*u,g=c*l,y=c*u;t[0]=m+y*a,t[4]=g*a-v,t[8]=o*c,t[1]=o*u,t[5]=o*l,t[9]=-a,t[2]=v*a-g,t[6]=y+m*a,t[10]=o*s}else if(\"ZXY\"===e.order){m=s*l,v=s*u,g=c*l,y=c*u;t[0]=m-y*a,t[4]=-o*u,t[8]=g+v*a,t[1]=v+g*a,t[5]=o*l,t[9]=y-m*a,t[2]=-o*c,t[6]=a,t[10]=o*s}else if(\"ZYX\"===e.order){h=o*l,d=o*u,p=a*l,f=a*u;t[0]=s*l,t[4]=p*c-d,t[8]=h*c+f,t[1]=s*u,t[5]=f*c+h,t[9]=d*c-p,t[2]=-c,t[6]=a*s,t[10]=o*s}else if(\"YZX\"===e.order){var x=o*s,b=o*c,w=a*s,_=a*c;t[0]=s*l,t[4]=_-x*u,t[8]=w*u+b,t[1]=u,t[5]=o*l,t[9]=-a*l,t[2]=-c*l,t[6]=b*u+w,t[10]=x-_*u}else if(\"XZY\"===e.order){x=o*s,b=o*c,w=a*s,_=a*c;t[0]=s*l,t[4]=-u,t[8]=c*l,t[1]=x*u+_,t[5]=o*l,t[9]=b*u-w,t[2]=w*u-b,t[6]=a*l,t[10]=_*u+x}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this},makeRotationFromQuaternion:function(e){var t=this.elements,r=e.x,n=e.y,i=e.z,o=e.w,a=r+r,s=n+n,c=i+i,l=r*a,u=r*s,h=r*c,d=n*s,p=n*c,f=i*c,m=o*a,v=o*s,g=o*c;return t[0]=1-(d+f),t[4]=u-g,t[8]=h+v,t[1]=u+g,t[5]=1-(l+f),t[9]=p-m,t[2]=h-v,t[6]=p+m,t[10]=1-(l+d),t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this},lookAt:function(e,t,r){void 0===v&&(v=new Z.Vector3,g=new Z.Vector3,y=new Z.Vector3);var n=this.elements;return y.subVectors(e,t).normalize(),0===y.lengthSq()&&(y.z=1),v.crossVectors(r,y).normalize(),0===v.lengthSq()&&(y.z+=1e-4,v.crossVectors(r,y).normalize()),g.crossVectors(y,v),n[0]=v.x,n[4]=g.x,n[8]=y.x,n[1]=v.y,n[5]=g.y,n[9]=y.y,n[2]=v.z,n[6]=g.z,n[10]=y.z,this},multiply:function(e,t){return void 0!==t?(console.warn(\"THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.\"),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)},premultiply:function(e){return this.multiplyMatrices(e,this)},multiplyMatrices:function(e,t){var r=e.elements,n=t.elements,i=this.elements,o=r[0],a=r[4],s=r[8],c=r[12],l=r[1],u=r[5],h=r[9],d=r[13],p=r[2],f=r[6],m=r[10],v=r[14],g=r[3],y=r[7],x=r[11],b=r[15],w=n[0],_=n[4],M=n[8],S=n[12],T=n[1],E=n[5],C=n[9],A=n[13],L=n[2],R=n[6],P=n[10],D=n[14],U=n[3],I=n[7],F=n[11],N=n[15];return i[0]=o*w+a*T+s*L+c*U,i[4]=o*_+a*E+s*R+c*I,i[8]=o*M+a*C+s*P+c*F,i[12]=o*S+a*A+s*D+c*N,i[1]=l*w+u*T+h*L+d*U,i[5]=l*_+u*E+h*R+d*I,i[9]=l*M+u*C+h*P+d*F,i[13]=l*S+u*A+h*D+d*N,i[2]=p*w+f*T+m*L+v*U,i[6]=p*_+f*E+m*R+v*I,i[10]=p*M+f*C+m*P+v*F,i[14]=p*S+f*A+m*D+v*N,i[3]=g*w+y*T+x*L+b*U,i[7]=g*_+y*E+x*R+b*I,i[11]=g*M+y*C+x*P+b*F,i[15]=g*S+y*A+x*D+b*N,this},multiplyToArray:function(e,t,r){var n=this.elements;return this.multiplyMatrices(e,t),r[0]=n[0],r[1]=n[1],r[2]=n[2],r[3]=n[3],r[4]=n[4],r[5]=n[5],r[6]=n[6],r[7]=n[7],r[8]=n[8],r[9]=n[9],r[10]=n[10],r[11]=n[11],r[12]=n[12],r[13]=n[13],r[14]=n[14],r[15]=n[15],this},multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this},applyToVector3Array:function(){var e;return function(t,r,n){void 0===e&&(e=new Z.Vector3),void 0===r&&(r=0),void 0===n&&(n=t.length);for(var i=0,o=r;i<n;i+=3,o+=3)e.fromArray(t,o),e.applyMatrix4(this),e.toArray(t,o);return t}}(),applyToBuffer:function(){var e;return function(t,r,n){void 0===e&&(e=new Z.Vector3),void 0===r&&(r=0),void 0===n&&(n=t.length/t.itemSize);for(var i=0,o=r;i<n;i++,o++)e.x=t.getX(o),e.y=t.getY(o),e.z=t.getZ(o),e.applyMatrix4(this),t.setXYZ(e.x,e.y,e.z);return t}}(),determinant:function(){var e=this.elements,t=e[0],r=e[4],n=e[8],i=e[12],o=e[1],a=e[5],s=e[9],c=e[13],l=e[2],u=e[6],h=e[10],d=e[14];return e[3]*(+i*s*u-n*c*u-i*a*h+r*c*h+n*a*d-r*s*d)+e[7]*(+t*s*d-t*c*h+i*o*h-n*o*d+n*c*l-i*s*l)+e[11]*(+t*c*u-t*a*d-i*o*u+r*o*d+i*a*l-r*c*l)+e[15]*(-n*a*l-t*s*u+t*a*h+n*o*u-r*o*h+r*s*l)},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this},flattenToArrayOffset:function(e,t){return console.warn(\"THREE.Matrix3: .flattenToArrayOffset is deprecated - just use .toArray instead.\"),this.toArray(e,t)},getPosition:function(){var e;return function(){return void 0===e&&(e=new Z.Vector3),console.warn(\"THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.\"),e.setFromMatrixColumn(this,3)}}(),setPosition:function(e){var t=this.elements;return t[12]=e.x,t[13]=e.y,t[14]=e.z,this},getInverse:function(e,t){var r=this.elements,n=e.elements,i=n[0],o=n[1],a=n[2],s=n[3],c=n[4],l=n[5],u=n[6],h=n[7],d=n[8],p=n[9],f=n[10],m=n[11],v=n[12],g=n[13],y=n[14],x=n[15],b=p*y*h-g*f*h+g*u*m-l*y*m-p*u*x+l*f*x,w=v*f*h-d*y*h-v*u*m+c*y*m+d*u*x-c*f*x,_=d*g*h-v*p*h+v*l*m-c*g*m-d*l*x+c*p*x,M=v*p*u-d*g*u-v*l*f+c*g*f+d*l*y-c*p*y,S=i*b+o*w+a*_+s*M;if(0===S){var T=\"THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0\";if(t)throw new Error(T);return console.warn(T),this.identity()}var E=1/S;return r[0]=b*E,r[1]=(g*f*s-p*y*s-g*a*m+o*y*m+p*a*x-o*f*x)*E,r[2]=(l*y*s-g*u*s+g*a*h-o*y*h-l*a*x+o*u*x)*E,r[3]=(p*u*s-l*f*s-p*a*h+o*f*h+l*a*m-o*u*m)*E,r[4]=w*E,r[5]=(d*y*s-v*f*s+v*a*m-i*y*m-d*a*x+i*f*x)*E,r[6]=(v*u*s-c*y*s-v*a*h+i*y*h+c*a*x-i*u*x)*E,r[7]=(c*f*s-d*u*s+d*a*h-i*f*h-c*a*m+i*u*m)*E,r[8]=_*E,r[9]=(v*p*s-d*g*s-v*o*m+i*g*m+d*o*x-i*p*x)*E,r[10]=(c*g*s-v*l*s+v*o*h-i*g*h-c*o*x+i*l*x)*E,r[11]=(d*l*s-c*p*s-d*o*h+i*p*h+c*o*m-i*l*m)*E,r[12]=M*E,r[13]=(d*g*a-v*p*a+v*o*f-i*g*f-d*o*y+i*p*y)*E,r[14]=(v*l*a-c*g*a-v*o*u+i*g*u+c*o*y-i*l*y)*E,r[15]=(c*p*a-d*l*a+d*o*u-i*p*u-c*o*f+i*l*f)*E,this},scale:function(e){var t=this.elements,r=e.x,n=e.y,i=e.z;return t[0]*=r,t[4]*=n,t[8]*=i,t[1]*=r,t[5]*=n,t[9]*=i,t[2]*=r,t[6]*=n,t[10]*=i,t[3]*=r,t[7]*=n,t[11]*=i,this},getMaxScaleOnAxis:function(){var e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],r=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],n=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,r,n))},makeTranslation:function(e,t,r){return this.set(1,0,0,e,0,1,0,t,0,0,1,r,0,0,0,1),this},makeRotationX:function(e){var t=Math.cos(e),r=Math.sin(e);return this.set(1,0,0,0,0,t,-r,0,0,r,t,0,0,0,0,1),this},makeRotationY:function(e){var t=Math.cos(e),r=Math.sin(e);return this.set(t,0,r,0,0,1,0,0,-r,0,t,0,0,0,0,1),this},makeRotationZ:function(e){var t=Math.cos(e),r=Math.sin(e);return this.set(t,-r,0,0,r,t,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(e,t){var r=Math.cos(t),n=Math.sin(t),i=1-r,o=e.x,a=e.y,s=e.z,c=i*o,l=i*a;return this.set(c*o+r,c*a-n*s,c*s+n*a,0,c*a+n*s,l*a+r,l*s-n*o,0,c*s-n*a,l*s+n*o,i*s*s+r,0,0,0,0,1),this},makeScale:function(e,t,r){return this.set(e,0,0,0,0,t,0,0,0,0,r,0,0,0,0,1),this},compose:function(e,t,r){return this.makeRotationFromQuaternion(t),this.scale(r),this.setPosition(e),this},decompose:function(){var e,t;return function(r,n,i){void 0===e&&(e=new Z.Vector3,t=new Z.Matrix4);var o=this.elements,a=e.set(o[0],o[1],o[2]).length(),s=e.set(o[4],o[5],o[6]).length(),c=e.set(o[8],o[9],o[10]).length();this.determinant()<0&&(a=-a),r.x=o[12],r.y=o[13],r.z=o[14],t.elements.set(this.elements);var l=1/a,u=1/s,h=1/c;return t.elements[0]*=l,t.elements[1]*=l,t.elements[2]*=l,t.elements[4]*=u,t.elements[5]*=u,t.elements[6]*=u,t.elements[8]*=h,t.elements[9]*=h,t.elements[10]*=h,n.setFromRotationMatrix(t),i.x=a,i.y=s,i.z=c,this}}(),makeFrustum:function(e,t,r,n,i,o){var a=this.elements,s=2*i/(t-e),c=2*i/(n-r),l=(t+e)/(t-e),u=(n+r)/(n-r),h=-(o+i)/(o-i),d=-2*o*i/(o-i);return a[0]=s,a[4]=0,a[8]=l,a[12]=0,a[1]=0,a[5]=c,a[9]=u,a[13]=0,a[2]=0,a[6]=0,a[10]=h,a[14]=d,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this},makePerspective:function(e,t,r,n){var i=r*Math.tan(Z.Math.DEG2RAD*e*.5),o=-i,a=o*t,s=i*t;return this.makeFrustum(a,s,o,i,r,n)},makeOrthographic:function(e,t,r,n,i,o){var a=this.elements,s=1/(t-e),c=1/(r-n),l=1/(o-i),u=(t+e)*s,h=(r+n)*c,d=(o+i)*l;return a[0]=2*s,a[4]=0,a[8]=0,a[12]=-u,a[1]=0,a[5]=2*c,a[9]=0,a[13]=-h,a[2]=0,a[6]=0,a[10]=-2*l,a[14]=-d,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this},equals:function(e){for(var t=this.elements,r=e.elements,n=0;n<16;n++)if(t[n]!==r[n])return!1;return!0},fromArray:function(e){return this.elements.set(e),this},toArray:function(e,t){void 0===e&&(e=[]),void 0===t&&(t=0);var r=this.elements;return e[t]=r[0],e[t+1]=r[1],e[t+2]=r[2],e[t+3]=r[3],e[t+4]=r[4],e[t+5]=r[5],e[t+6]=r[6],e[t+7]=r[7],e[t+8]=r[8],e[t+9]=r[9],e[t+10]=r[10],e[t+11]=r[11],e[t+12]=r[12],e[t+13]=r[13],e[t+14]=r[14],e[t+15]=r[15],e}},Z.Ray=function(e,t){this.origin=void 0!==e?e:new Z.Vector3,this.direction=void 0!==t?t:new Z.Vector3},Z.Ray.prototype={constructor:Z.Ray,set:function(e,t){return this.origin.copy(e),this.direction.copy(t),this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this},at:function(e,t){return(t||new Z.Vector3).copy(this.direction).multiplyScalar(e).add(this.origin)},lookAt:function(e){return this.direction.copy(e).sub(this.origin).normalize(),this},recast:function(){var e=new Z.Vector3;return function(t){return this.origin.copy(this.at(t,e)),this}}(),closestPointToPoint:function(e,t){var r=t||new Z.Vector3;r.subVectors(e,this.origin);var n=r.dot(this.direction);return n<0?r.copy(this.origin):r.copy(this.direction).multiplyScalar(n).add(this.origin)},distanceToPoint:function(e){return Math.sqrt(this.distanceSqToPoint(e))},distanceSqToPoint:function(){var e=new Z.Vector3;return function(t){var r=e.subVectors(t,this.origin).dot(this.direction);return r<0?this.origin.distanceToSquared(t):(e.copy(this.direction).multiplyScalar(r).add(this.origin),e.distanceToSquared(t))}}(),distanceSqToSegment:(b=new Z.Vector3,w=new Z.Vector3,_=new Z.Vector3,function(e,t,r,n){b.copy(e).add(t).multiplyScalar(.5),w.copy(t).sub(e).normalize(),_.copy(this.origin).sub(b);var i,o,a,s,c=.5*e.distanceTo(t),l=-this.direction.dot(w),u=_.dot(this.direction),h=-_.dot(w),d=_.lengthSq(),p=Math.abs(1-l*l);if(p>0)if(o=l*u-h,s=c*p,(i=l*h-u)>=0)if(o>=-s)if(o<=s){var f=1/p;a=(i*=f)*(i+l*(o*=f)+2*u)+o*(l*i+o+2*h)+d}else o=c,a=-(i=Math.max(0,-(l*o+u)))*i+o*(o+2*h)+d;else o=-c,a=-(i=Math.max(0,-(l*o+u)))*i+o*(o+2*h)+d;else o<=-s?a=-(i=Math.max(0,-(-l*c+u)))*i+(o=i>0?-c:Math.min(Math.max(-c,-h),c))*(o+2*h)+d:o<=s?(i=0,a=(o=Math.min(Math.max(-c,-h),c))*(o+2*h)+d):a=-(i=Math.max(0,-(l*c+u)))*i+(o=i>0?c:Math.min(Math.max(-c,-h),c))*(o+2*h)+d;else o=l>0?-c:c,a=-(i=Math.max(0,-(l*o+u)))*i+o*(o+2*h)+d;return r&&r.copy(this.direction).multiplyScalar(i).add(this.origin),n&&n.copy(w).multiplyScalar(o).add(b),a}),intersectSphere:function(){var e=new Z.Vector3;return function(t,r){e.subVectors(t.center,this.origin);var n=e.dot(this.direction),i=e.dot(e)-n*n,o=t.radius*t.radius;if(i>o)return null;var a=Math.sqrt(o-i),s=n-a,c=n+a;return s<0&&c<0?null:s<0?this.at(c,r):this.at(s,r)}}(),intersectsSphere:function(e){return this.distanceToPoint(e.center)<=e.radius},distanceToPlane:function(e){var t=e.normal.dot(this.direction);if(0===t)return 0===e.distanceToPoint(this.origin)?0:null;var r=-(this.origin.dot(e.normal)+e.constant)/t;return r>=0?r:null},intersectPlane:function(e,t){var r=this.distanceToPlane(e);return null===r?null:this.at(r,t)},intersectsPlane:function(e){var t=e.distanceToPoint(this.origin);return 0===t||e.normal.dot(this.direction)*t<0},intersectBox:function(e,t){var r,n,i,o,a,s,c=1/this.direction.x,l=1/this.direction.y,u=1/this.direction.z,h=this.origin;return c>=0?(r=(e.min.x-h.x)*c,n=(e.max.x-h.x)*c):(r=(e.max.x-h.x)*c,n=(e.min.x-h.x)*c),l>=0?(i=(e.min.y-h.y)*l,o=(e.max.y-h.y)*l):(i=(e.max.y-h.y)*l,o=(e.min.y-h.y)*l),r>o||i>n?null:((i>r||r!=r)&&(r=i),(o<n||n!=n)&&(n=o),u>=0?(a=(e.min.z-h.z)*u,s=(e.max.z-h.z)*u):(a=(e.max.z-h.z)*u,s=(e.min.z-h.z)*u),r>s||a>n?null:((a>r||r!=r)&&(r=a),(s<n||n!=n)&&(n=s),n<0?null:this.at(r>=0?r:n,t)))},intersectsBox:(x=new Z.Vector3,function(e){return null!==this.intersectBox(e,x)}),intersectTriangle:function(){var e=new Z.Vector3,t=new Z.Vector3,r=new Z.Vector3,n=new Z.Vector3;return function(i,o,a,s,c){t.subVectors(o,i),r.subVectors(a,i),n.crossVectors(t,r);var l,u=this.direction.dot(n);if(u>0){if(s)return null;l=1}else{if(!(u<0))return null;l=-1,u=-u}e.subVectors(this.origin,i);var h=l*this.direction.dot(r.crossVectors(e,r));if(h<0)return null;var d=l*this.direction.dot(t.cross(e));if(d<0)return null;if(h+d>u)return null;var p=-l*e.dot(n);return p<0?null:this.at(p/u,c)}}(),applyMatrix4:function(e){return this.direction.add(this.origin).applyMatrix4(e),this.origin.applyMatrix4(e),this.direction.sub(this.origin),this.direction.normalize(),this},equals:function(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}},Z.Sphere=function(e,t){this.center=void 0!==e?e:new Z.Vector3,this.radius=void 0!==t?t:0},Z.Sphere.prototype={constructor:Z.Sphere,set:function(e,t){return this.center.copy(e),this.radius=t,this},setFromPoints:(M=new Z.Box3,function(e,t){var r=this.center;void 0!==t?r.copy(t):M.setFromPoints(e).center(r);for(var n=0,i=0,o=e.length;i<o;i++)n=Math.max(n,r.distanceToSquared(e[i]));return this.radius=Math.sqrt(n),this}),clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.center.copy(e.center),this.radius=e.radius,this},empty:function(){return this.radius<=0},containsPoint:function(e){return e.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(e){return e.distanceTo(this.center)-this.radius},intersectsSphere:function(e){var t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t},intersectsBox:function(e){return e.intersectsSphere(this)},intersectsPlane:function(e){return Math.abs(this.center.dot(e.normal)-e.constant)<=this.radius},clampPoint:function(e,t){var r=this.center.distanceToSquared(e),n=t||new Z.Vector3;return n.copy(e),r>this.radius*this.radius&&(n.sub(this.center).normalize(),n.multiplyScalar(this.radius).add(this.center)),n},getBoundingBox:function(e){var t=e||new Z.Box3;return t.set(this.center,this.center),t.expandByScalar(this.radius),t},applyMatrix4:function(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this},translate:function(e){return this.center.add(e),this},equals:function(e){return e.center.equals(this.center)&&e.radius===this.radius}},Z.Frustum=function(e,t,r,n,i,o){this.planes=[void 0!==e?e:new Z.Plane,void 0!==t?t:new Z.Plane,void 0!==r?r:new Z.Plane,void 0!==n?n:new Z.Plane,void 0!==i?i:new Z.Plane,void 0!==o?o:new Z.Plane]},Z.Frustum.prototype={constructor:Z.Frustum,set:function(e,t,r,n,i,o){var a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(r),a[3].copy(n),a[4].copy(i),a[5].copy(o),this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){for(var t=this.planes,r=0;r<6;r++)t[r].copy(e.planes[r]);return this},setFromMatrix:function(e){var t=this.planes,r=e.elements,n=r[0],i=r[1],o=r[2],a=r[3],s=r[4],c=r[5],l=r[6],u=r[7],h=r[8],d=r[9],p=r[10],f=r[11],m=r[12],v=r[13],g=r[14],y=r[15];return t[0].setComponents(a-n,u-s,f-h,y-m).normalize(),t[1].setComponents(a+n,u+s,f+h,y+m).normalize(),t[2].setComponents(a+i,u+c,f+d,y+v).normalize(),t[3].setComponents(a-i,u-c,f-d,y-v).normalize(),t[4].setComponents(a-o,u-l,f-p,y-g).normalize(),t[5].setComponents(a+o,u+l,f+p,y+g).normalize(),this},intersectsObject:(E=new Z.Sphere,function(e){var t=e.geometry;return null===t.boundingSphere&&t.computeBoundingSphere(),E.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(E)}),intersectsSprite:function(){var e=new Z.Sphere;return function(t){return e.center.set(0,0,0),e.radius=.7071067811865476,e.applyMatrix4(t.matrixWorld),this.intersectsSphere(e)}}(),intersectsSphere:function(e){for(var t=this.planes,r=e.center,n=-e.radius,i=0;i<6;i++){if(t[i].distanceToPoint(r)<n)return!1}return!0},intersectsBox:(S=new Z.Vector3,T=new Z.Vector3,function(e){for(var t=this.planes,r=0;r<6;r++){var n=t[r];S.x=n.normal.x>0?e.min.x:e.max.x,T.x=n.normal.x>0?e.max.x:e.min.x,S.y=n.normal.y>0?e.min.y:e.max.y,T.y=n.normal.y>0?e.max.y:e.min.y,S.z=n.normal.z>0?e.min.z:e.max.z,T.z=n.normal.z>0?e.max.z:e.min.z;var i=n.distanceToPoint(S),o=n.distanceToPoint(T);if(i<0&&o<0)return!1}return!0}),containsPoint:function(e){for(var t=this.planes,r=0;r<6;r++)if(t[r].distanceToPoint(e)<0)return!1;return!0}},Z.Plane=function(e,t){this.normal=void 0!==e?e:new Z.Vector3(1,0,0),this.constant=void 0!==t?t:0},Z.Plane.prototype={constructor:Z.Plane,set:function(e,t){return this.normal.copy(e),this.constant=t,this},setComponents:function(e,t,r,n){return this.normal.set(e,t,r),this.constant=n,this},setFromNormalAndCoplanarPoint:function(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this},setFromCoplanarPoints:function(){var e=new Z.Vector3,t=new Z.Vector3;return function(r,n,i){var o=e.subVectors(i,n).cross(t.subVectors(r,n)).normalize();return this.setFromNormalAndCoplanarPoint(o,r),this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.normal.copy(e.normal),this.constant=e.constant,this},normalize:function(){var e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(e){return this.normal.dot(e)+this.constant},distanceToSphere:function(e){return this.distanceToPoint(e.center)-e.radius},projectPoint:function(e,t){return this.orthoPoint(e,t).sub(e).negate()},orthoPoint:function(e,t){var r=this.distanceToPoint(e);return(t||new Z.Vector3).copy(this.normal).multiplyScalar(r)},intersectLine:function(){var e=new Z.Vector3;return function(t,r){var n=r||new Z.Vector3,i=t.delta(e),o=this.normal.dot(i);if(0===o)return 0===this.distanceToPoint(t.start)?n.copy(t.start):void 0;var a=-(t.start.dot(this.normal)+this.constant)/o;return a<0||a>1?void 0:n.copy(i).multiplyScalar(a).add(t.start)}}(),intersectsLine:function(e){var t=this.distanceToPoint(e.start),r=this.distanceToPoint(e.end);return t<0&&r>0||r<0&&t>0},intersectsBox:function(e){return e.intersectsPlane(this)},intersectsSphere:function(e){return e.intersectsPlane(this)},coplanarPoint:function(e){return(e||new Z.Vector3).copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var e=new Z.Vector3,t=new Z.Matrix3;return function(r,n){var i=this.coplanarPoint(e).applyMatrix4(r),o=n||t.getNormalMatrix(r),a=this.normal.applyMatrix3(o).normalize();return this.constant=-i.dot(a),this}}(),translate:function(e){return this.constant=this.constant-e.dot(this.normal),this},equals:function(e){return e.normal.equals(this.normal)&&e.constant===this.constant}},Z.Spherical=function(e,t,r){return this.radius=void 0!==e?e:1,this.phi=void 0!==t?t:0,this.theta=void 0!==r?r:0,this},Z.Spherical.prototype={constructor:Z.Spherical,set:function(e,t,r){return this.radius=e,this.phi=t,this.theta=r,this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.radius.copy(e.radius),this.phi.copy(e.phi),this.theta.copy(e.theta),this},makeSafe:function(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this},setFromVector3:function(e){return this.radius=e.length(),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e.x,e.z),this.phi=Math.acos(Z.Math.clamp(e.y/this.radius,-1,1))),this}},Z.Math={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){var e,t=\"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\".split(\"\"),r=new Array(36),n=0;return function(){for(var i=0;i<36;i++)8===i||13===i||18===i||23===i?r[i]=\"-\":14===i?r[i]=\"4\":(n<=2&&(n=33554432+16777216*Math.random()|0),e=15&n,n>>=4,r[i]=t[19===i?3&e|8:e]);return r.join(\"\")}}(),clamp:function(e,t,r){return Math.max(t,Math.min(r,e))},euclideanModulo:function(e,t){return(e%t+t)%t},mapLinear:function(e,t,r,n,i){return n+(e-t)*(i-n)/(r-t)},smoothstep:function(e,t,r){return e<=t?0:e>=r?1:(e=(e-t)/(r-t))*e*(3-2*e)},smootherstep:function(e,t,r){return e<=t?0:e>=r?1:(e=(e-t)/(r-t))*e*e*(e*(6*e-15)+10)},random16:function(){return console.warn(\"THREE.Math.random16() has been deprecated. Use Math.random() instead.\"),Math.random()},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},degToRad:function(e){return e*Z.Math.DEG2RAD},radToDeg:function(e){return e*Z.Math.RAD2DEG},isPowerOfTwo:function(e){return 0==(e&e-1)&&0!==e},nearestPowerOfTwo:function(e){return Math.pow(2,Math.round(Math.log(e)/Math.LN2))},nextPowerOfTwo:function(e){return e--,e|=e>>1,e|=e>>2,e|=e>>4,e|=e>>8,e|=e>>16,++e}},Z.Spline=function(e){this.points=e;var t,r,n,i,o,a,s,c,l,u=[],h={x:0,y:0,z:0};function d(e,t,r,n,i,o,a){var s=.5*(r-e),c=.5*(n-t);return(2*(t-r)+s+c)*a+(-3*(t-r)-2*s-c)*o+s*i+t}this.initFromArray=function(e){this.points=[];for(var t=0;t<e.length;t++)this.points[t]={x:e[t][0],y:e[t][1],z:e[t][2]}},this.getPoint=function(e){return t=(this.points.length-1)*e,r=Math.floor(t),n=t-r,u[0]=0===r?r:r-1,u[1]=r,u[2]=r>this.points.length-2?this.points.length-1:r+1,u[3]=r>this.points.length-3?this.points.length-1:r+2,a=this.points[u[0]],s=this.points[u[1]],c=this.points[u[2]],l=this.points[u[3]],o=n*(i=n*n),h.x=d(a.x,s.x,c.x,l.x,n,i,o),h.y=d(a.y,s.y,c.y,l.y,n,i,o),h.z=d(a.z,s.z,c.z,l.z,n,i,o),h},this.getControlPointsArray=function(){var e,t,r=this.points.length,n=[];for(e=0;e<r;e++)t=this.points[e],n[e]=[t.x,t.y,t.z];return n},this.getLength=function(e){var t,r,n,i,o=0,a=0,s=0,c=new Z.Vector3,l=new Z.Vector3,u=[],h=0;for(u[0]=0,e||(e=100),n=this.points.length*e,c.copy(this.points[0]),t=1;t<n;t++)r=t/n,i=this.getPoint(r),l.copy(i),h+=l.distanceTo(c),c.copy(i),o=(this.points.length-1)*r,(a=Math.floor(o))!==s&&(u[a]=h,s=a);return u[u.length]=h,{chunks:u,total:h}},this.reparametrizeByArcLength=function(e){var t,r,n,i,o,a,s,c,l=[],u=new Z.Vector3,h=this.getLength();for(l.push(u.copy(this.points[0]).clone()),t=1;t<this.points.length;t++){for(a=h.chunks[t]-h.chunks[t-1],s=Math.ceil(e*a/h.total),i=(t-1)/(this.points.length-1),o=t/(this.points.length-1),r=1;r<s-1;r++)n=i+r*(1/s)*(o-i),c=this.getPoint(n),l.push(u.copy(c).clone());l.push(u.copy(this.points[t]).clone())}this.points=l}},Z.Triangle=function(e,t,r){this.a=void 0!==e?e:new Z.Vector3,this.b=void 0!==t?t:new Z.Vector3,this.c=void 0!==r?r:new Z.Vector3},Z.Triangle.normal=(C=new Z.Vector3,function(e,t,r,n){var i=n||new Z.Vector3;i.subVectors(r,t),C.subVectors(e,t),i.cross(C);var o=i.lengthSq();return o>0?i.multiplyScalar(1/Math.sqrt(o)):i.set(0,0,0)}),Z.Triangle.barycoordFromPoint=function(){var e=new Z.Vector3,t=new Z.Vector3,r=new Z.Vector3;return function(n,i,o,a,s){e.subVectors(a,i),t.subVectors(o,i),r.subVectors(n,i);var c=e.dot(e),l=e.dot(t),u=e.dot(r),h=t.dot(t),d=t.dot(r),p=c*h-l*l,f=s||new Z.Vector3;if(0===p)return f.set(-2,-1,-1);var m=1/p,v=(h*u-l*d)*m,g=(c*d-l*u)*m;return f.set(1-v-g,g,v)}}(),Z.Triangle.containsPoint=function(){var e=new Z.Vector3;return function(t,r,n,i){var o=Z.Triangle.barycoordFromPoint(t,r,n,i,e);return o.x>=0&&o.y>=0&&o.x+o.y<=1}}(),Z.Triangle.prototype={constructor:Z.Triangle,set:function(e,t,r){return this.a.copy(e),this.b.copy(t),this.c.copy(r),this},setFromPointsAndIndices:function(e,t,r,n){return this.a.copy(e[t]),this.b.copy(e[r]),this.c.copy(e[n]),this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this},area:function(){var e=new Z.Vector3,t=new Z.Vector3;return function(){return e.subVectors(this.c,this.b),t.subVectors(this.a,this.b),.5*e.cross(t).length()}}(),midpoint:function(e){return(e||new Z.Vector3).addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(e){return Z.Triangle.normal(this.a,this.b,this.c,e)},plane:function(e){return(e||new Z.Plane).setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(e,t){return Z.Triangle.barycoordFromPoint(e,this.a,this.b,this.c,t)},containsPoint:function(e){return Z.Triangle.containsPoint(e,this.a,this.b,this.c)},closestPointToPoint:function(){var e,t,r,n;return function(i,o){void 0===e&&(e=new Z.Plane,t=[new Z.Line3,new Z.Line3,new Z.Line3],r=new Z.Vector3,n=new Z.Vector3);var a=o||new Z.Vector3,s=1/0;if(e.setFromCoplanarPoints(this.a,this.b,this.c),e.projectPoint(i,r),!0===this.containsPoint(r))a.copy(r);else{t[0].set(this.a,this.b),t[1].set(this.b,this.c),t[2].set(this.c,this.a);for(var c=0;c<t.length;c++){t[c].closestPointToPoint(r,!0,n);var l=r.distanceToSquared(n);l<s&&(s=l,a.copy(n))}}return a}}(),equals:function(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}},Z.Interpolant=function(e,t,r,n){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=void 0!==n?n:new t.constructor(r),this.sampleValues=t,this.valueSize=r},Z.Interpolant.prototype={constructor:Z.Interpolant,evaluate:function(e){var t=this.parameterPositions,r=this._cachedIndex,n=t[r],i=t[r-1];e:{t:{var o;r:{n:if(!(e<n)){for(var a=r+2;;){if(void 0===n){if(e<i)break n;return r=t.length,this._cachedIndex=r,this.afterEnd_(r-1,e,i)}if(r===a)break;if(i=n,e<(n=t[++r]))break t}o=t.length;break r}if(e>=i)break e;var s=t[1];e<s&&(r=2,i=s);for(a=r-2;;){if(void 0===i)return this._cachedIndex=0,this.beforeStart_(0,e,n);if(r===a)break;if(n=i,e>=(i=t[--r-1]))break t}o=r,r=0}for(;r<o;){var c=r+o>>>1;e<t[c]?o=c:r=c+1}if(n=t[r],void 0===(i=t[r-1]))return this._cachedIndex=0,this.beforeStart_(0,e,n);if(void 0===n)return r=t.length,this._cachedIndex=r,this.afterEnd_(r-1,i,e)}this._cachedIndex=r,this.intervalChanged_(r,i,n)}return this.interpolate_(r,i,e,n)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(e){for(var t=this.resultBuffer,r=this.sampleValues,n=this.valueSize,i=e*n,o=0;o!==n;++o)t[o]=r[i+o];return t},interpolate_:function(e,t,r,n){throw new Error(\"call to abstract method\")},intervalChanged_:function(e,t,r){}},Object.assign(Z.Interpolant.prototype,{beforeStart_:Z.Interpolant.prototype.copySampleValue_,afterEnd_:Z.Interpolant.prototype.copySampleValue_}),Z.CubicInterpolant=function(e,t,r,n){Z.Interpolant.call(this,e,t,r,n),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0},Z.CubicInterpolant.prototype=Object.assign(Object.create(Z.Interpolant.prototype),{constructor:Z.CubicInterpolant,DefaultSettings_:{endingStart:Z.ZeroCurvatureEnding,endingEnd:Z.ZeroCurvatureEnding},intervalChanged_:function(e,t,r){var n=this.parameterPositions,i=e-2,o=e+1,a=n[i],s=n[o];if(void 0===a)switch(this.getSettings_().endingStart){case Z.ZeroSlopeEnding:i=e,a=2*t-r;break;case Z.WrapAroundEnding:a=t+n[i=n.length-2]-n[i+1];break;default:i=e,a=r}if(void 0===s)switch(this.getSettings_().endingEnd){case Z.ZeroSlopeEnding:o=e,s=2*r-t;break;case Z.WrapAroundEnding:o=1,s=r+n[1]-n[0];break;default:o=e-1,s=t}var c=.5*(r-t),l=this.valueSize;this._weightPrev=c/(t-a),this._weightNext=c/(s-r),this._offsetPrev=i*l,this._offsetNext=o*l},interpolate_:function(e,t,r,n){for(var i=this.resultBuffer,o=this.sampleValues,a=this.valueSize,s=e*a,c=s-a,l=this._offsetPrev,u=this._offsetNext,h=this._weightPrev,d=this._weightNext,p=(r-t)/(n-t),f=p*p,m=f*p,v=-h*m+2*h*f-h*p,g=(1+h)*m+(-1.5-2*h)*f+(-.5+h)*p+1,y=(-1-d)*m+(1.5+d)*f+.5*p,x=d*m-d*f,b=0;b!==a;++b)i[b]=v*o[l+b]+g*o[c+b]+y*o[s+b]+x*o[u+b];return i}}),Z.DiscreteInterpolant=function(e,t,r,n){Z.Interpolant.call(this,e,t,r,n)},Z.DiscreteInterpolant.prototype=Object.assign(Object.create(Z.Interpolant.prototype),{constructor:Z.DiscreteInterpolant,interpolate_:function(e,t,r,n){return this.copySampleValue_(e-1)}}),Z.LinearInterpolant=function(e,t,r,n){Z.Interpolant.call(this,e,t,r,n)},Z.LinearInterpolant.prototype=Object.assign(Object.create(Z.Interpolant.prototype),{constructor:Z.LinearInterpolant,interpolate_:function(e,t,r,n){for(var i=this.resultBuffer,o=this.sampleValues,a=this.valueSize,s=e*a,c=s-a,l=(r-t)/(n-t),u=1-l,h=0;h!==a;++h)i[h]=o[c+h]*u+o[s+h]*l;return i}}),Z.QuaternionLinearInterpolant=function(e,t,r,n){Z.Interpolant.call(this,e,t,r,n)},Z.QuaternionLinearInterpolant.prototype=Object.assign(Object.create(Z.Interpolant.prototype),{constructor:Z.QuaternionLinearInterpolant,interpolate_:function(e,t,r,n){for(var i=this.resultBuffer,o=this.sampleValues,a=this.valueSize,s=e*a,c=(r-t)/(n-t),l=s+a;s!==l;s+=4)Z.Quaternion.slerpFlat(i,0,o,s-a,o,s,c);return i}}),Z.Clock=function(e){this.autoStart=void 0===e||e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1},Z.Clock.prototype={constructor:Z.Clock,start:function(){this.startTime=(performance||Date).now(),this.oldTime=this.startTime,this.running=!0},stop:function(){this.getElapsedTime(),this.running=!1},getElapsedTime:function(){return this.getDelta(),this.elapsedTime},getDelta:function(){var e=0;if(this.autoStart&&!this.running&&this.start(),this.running){var t=(performance||Date).now();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}},Z.EventDispatcher=function(){},Object.assign(Z.EventDispatcher.prototype,{addEventListener:function(e,t){void 0===this._listeners&&(this._listeners={});var r=this._listeners;void 0===r[e]&&(r[e]=[]),-1===r[e].indexOf(t)&&r[e].push(t)},hasEventListener:function(e,t){if(void 0===this._listeners)return!1;var r=this._listeners;return void 0!==r[e]&&-1!==r[e].indexOf(t)},removeEventListener:function(e,t){if(void 0!==this._listeners){var r=this._listeners[e];if(void 0!==r){var n=r.indexOf(t);-1!==n&&r.splice(n,1)}}},dispatchEvent:function(e){if(void 0!==this._listeners){var t=this._listeners[e.type];if(void 0!==t){e.target=this;var r=[],n=0,i=t.length;for(n=0;n<i;n++)r[n]=t[n];for(n=0;n<i;n++)r[n].call(this,e)}}}}),Z.Layers=function(){this.mask=1},Z.Layers.prototype={constructor:Z.Layers,set:function(e){this.mask=1<<e},enable:function(e){this.mask|=1<<e},toggle:function(e){this.mask^=1<<e},disable:function(e){this.mask&=~(1<<e)},test:function(e){return 0!=(this.mask&e.mask)}},function(e){function t(e,t){return e.distance-t.distance}function r(e,t,n,i){if(!1!==e.visible&&(e.raycast(t,n),!0===i))for(var o=e.children,a=0,s=o.length;a<s;a++)r(o[a],t,n,!0)}e.Raycaster=function(t,r,n,i){this.ray=new e.Ray(t,r),this.near=n||0,this.far=i||1/0,this.params={Mesh:{},Line:{},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn(\"THREE.Raycaster: params.PointCloud has been renamed to params.Points.\"),this.Points}}})},e.Raycaster.prototype={constructor:e.Raycaster,linePrecision:1,set:function(e,t){this.ray.set(e,t)},setFromCamera:function(t,r){r instanceof e.PerspectiveCamera?(this.ray.origin.setFromMatrixPosition(r.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(r).sub(this.ray.origin).normalize()):r instanceof e.OrthographicCamera?(this.ray.origin.set(t.x,t.y,(r.near+r.far)/(r.near-r.far)).unproject(r),this.ray.direction.set(0,0,-1).transformDirection(r.matrixWorld)):console.error(\"THREE.Raycaster: Unsupported camera type.\")},intersectObject:function(e,n){var i=[];return r(e,this,i,n),i.sort(t),i},intersectObjects:function(e,n){var i=[];if(!1===Array.isArray(e))return console.warn(\"THREE.Raycaster.intersectObjects: objects is not an Array.\"),i;for(var o=0,a=e.length;o<a;o++)r(e[o],this,i,n);return i.sort(t),i}}}(Z),Z.Object3D=function(){Object.defineProperty(this,\"id\",{value:Z.Object3DIdCount++}),this.uuid=Z.Math.generateUUID(),this.name=\"\",this.type=\"Object3D\",this.parent=null,this.children=[],this.up=Z.Object3D.DefaultUp.clone();var e=new Z.Vector3,t=new Z.Euler,r=new Z.Quaternion,n=new Z.Vector3(1,1,1);t.onChange(function(){r.setFromEuler(t,!1)}),r.onChange(function(){t.setFromQuaternion(r,void 0,!1)}),Object.defineProperties(this,{position:{enumerable:!0,value:e},rotation:{enumerable:!0,value:t},quaternion:{enumerable:!0,value:r},scale:{enumerable:!0,value:n},modelViewMatrix:{value:new Z.Matrix4},normalMatrix:{value:new Z.Matrix3}}),this.matrix=new Z.Matrix4,this.matrixWorld=new Z.Matrix4,this.matrixAutoUpdate=Z.Object3D.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new Z.Layers,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.userData={}},Z.Object3D.DefaultUp=new Z.Vector3(0,1,0),Z.Object3D.DefaultMatrixAutoUpdate=!0,Object.assign(Z.Object3D.prototype,Z.EventDispatcher.prototype,{applyMatrix:function(e){this.matrix.multiplyMatrices(e,this.matrix),this.matrix.decompose(this.position,this.quaternion,this.scale)},setRotationFromAxisAngle:function(e,t){this.quaternion.setFromAxisAngle(e,t)},setRotationFromEuler:function(e){this.quaternion.setFromEuler(e,!0)},setRotationFromMatrix:function(e){this.quaternion.setFromRotationMatrix(e)},setRotationFromQuaternion:function(e){this.quaternion.copy(e)},rotateOnAxis:(P=new Z.Quaternion,function(e,t){return P.setFromAxisAngle(e,t),this.quaternion.multiply(P),this}),rotateX:function(){var e=new Z.Vector3(1,0,0);return function(t){return this.rotateOnAxis(e,t)}}(),rotateY:function(){var e=new Z.Vector3(0,1,0);return function(t){return this.rotateOnAxis(e,t)}}(),rotateZ:function(){var e=new Z.Vector3(0,0,1);return function(t){return this.rotateOnAxis(e,t)}}(),translateOnAxis:function(){var e=new Z.Vector3;return function(t,r){return e.copy(t).applyQuaternion(this.quaternion),this.position.add(e.multiplyScalar(r)),this}}(),translateX:function(){var e=new Z.Vector3(1,0,0);return function(t){return this.translateOnAxis(e,t)}}(),translateY:function(){var e=new Z.Vector3(0,1,0);return function(t){return this.translateOnAxis(e,t)}}(),translateZ:function(){var e=new Z.Vector3(0,0,1);return function(t){return this.translateOnAxis(e,t)}}(),localToWorld:function(e){return e.applyMatrix4(this.matrixWorld)},worldToLocal:(R=new Z.Matrix4,function(e){return e.applyMatrix4(R.getInverse(this.matrixWorld))}),lookAt:function(){var e=new Z.Matrix4;return function(t){e.lookAt(t,this.position,this.up),this.quaternion.setFromRotationMatrix(e)}}(),add:function(e){if(arguments.length>1){for(var t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error(\"THREE.Object3D.add: object can't be added as a child of itself.\",e),this):(e instanceof Z.Object3D?(null!==e.parent&&e.parent.remove(e),e.parent=this,e.dispatchEvent({type:\"added\"}),this.children.push(e)):console.error(\"THREE.Object3D.add: object not an instance of THREE.Object3D.\",e),this)},remove:function(e){if(arguments.length>1)for(var t=0;t<arguments.length;t++)this.remove(arguments[t]);var r=this.children.indexOf(e);-1!==r&&(e.parent=null,e.dispatchEvent({type:\"removed\"}),this.children.splice(r,1))},getObjectById:function(e){return this.getObjectByProperty(\"id\",e)},getObjectByName:function(e){return this.getObjectByProperty(\"name\",e)},getObjectByProperty:function(e,t){if(this[e]===t)return this;for(var r=0,n=this.children.length;r<n;r++){var i=this.children[r].getObjectByProperty(e,t);if(void 0!==i)return i}},getWorldPosition:function(e){var t=e||new Z.Vector3;return this.updateMatrixWorld(!0),t.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:(A=new Z.Vector3,L=new Z.Vector3,function(e){var t=e||new Z.Quaternion;return this.updateMatrixWorld(!0),this.matrixWorld.decompose(A,t,L),t}),getWorldRotation:function(){var e=new Z.Quaternion;return function(t){var r=t||new Z.Euler;return this.getWorldQuaternion(e),r.setFromQuaternion(e,this.rotation.order,!1)}}(),getWorldScale:function(){var e=new Z.Vector3,t=new Z.Quaternion;return function(r){var n=r||new Z.Vector3;return this.updateMatrixWorld(!0),this.matrixWorld.decompose(e,t,n),n}}(),getWorldDirection:function(){var e=new Z.Quaternion;return function(t){var r=t||new Z.Vector3;return this.getWorldQuaternion(e),r.set(0,0,1).applyQuaternion(e)}}(),raycast:function(){},traverse:function(e){e(this);for(var t=this.children,r=0,n=t.length;r<n;r++)t[r].traverse(e)},traverseVisible:function(e){if(!1!==this.visible){e(this);for(var t=this.children,r=0,n=t.length;r<n;r++)t[r].traverseVisible(e)}},traverseAncestors:function(e){var t=this.parent;null!==t&&(e(t),t.traverseAncestors(e))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(e){!0===this.matrixAutoUpdate&&this.updateMatrix(),!0!==this.matrixWorldNeedsUpdate&&!0!==e||(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);for(var t=0,r=this.children.length;t<r;t++)this.children[t].updateMatrixWorld(e)},toJSON:function(e){var t=void 0===e||\"\"===e,r={};t&&(e={geometries:{},materials:{},textures:{},images:{}},r.metadata={version:4.4,type:\"Object\",generator:\"Object3D.toJSON\"});var n={};if(n.uuid=this.uuid,n.type=this.type,\"\"!==this.name&&(n.name=this.name),\"{}\"!==JSON.stringify(this.userData)&&(n.userData=this.userData),!0===this.castShadow&&(n.castShadow=!0),!0===this.receiveShadow&&(n.receiveShadow=!0),!1===this.visible&&(n.visible=!1),n.matrix=this.matrix.toArray(),void 0!==this.geometry&&(void 0===e.geometries[this.geometry.uuid]&&(e.geometries[this.geometry.uuid]=this.geometry.toJSON(e)),n.geometry=this.geometry.uuid),void 0!==this.material&&(void 0===e.materials[this.material.uuid]&&(e.materials[this.material.uuid]=this.material.toJSON(e)),n.material=this.material.uuid),this.children.length>0){n.children=[];for(var i=0;i<this.children.length;i++)n.children.push(this.children[i].toJSON(e).object)}if(t){var o=l(e.geometries),a=l(e.materials),s=l(e.textures),c=l(e.images);o.length>0&&(r.geometries=o),a.length>0&&(r.materials=a),s.length>0&&(r.textures=s),c.length>0&&(r.images=c)}return r.object=n,r;function l(e){var t=[];for(var r in e){var n=e[r];delete n.metadata,t.push(n)}return t}},clone:function(e){return(new this.constructor).copy(this,e)},copy:function(e,t){if(void 0===t&&(t=!0),this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),!0===t)for(var r=0;r<e.children.length;r++){var n=e.children[r];this.add(n.clone())}return this}}),Z.Object3DIdCount=0,Z.Face3=function(e,t,r,n,i,o){this.a=e,this.b=t,this.c=r,this.normal=n instanceof Z.Vector3?n:new Z.Vector3,this.vertexNormals=Array.isArray(n)?n:[],this.color=i instanceof Z.Color?i:new Z.Color,this.vertexColors=Array.isArray(i)?i:[],this.materialIndex=void 0!==o?o:0},Z.Face3.prototype={constructor:Z.Face3,clone:function(){return(new this.constructor).copy(this)},copy:function(e){this.a=e.a,this.b=e.b,this.c=e.c,this.normal.copy(e.normal),this.color.copy(e.color),this.materialIndex=e.materialIndex;for(var t=0,r=e.vertexNormals.length;t<r;t++)this.vertexNormals[t]=e.vertexNormals[t].clone();for(t=0,r=e.vertexColors.length;t<r;t++)this.vertexColors[t]=e.vertexColors[t].clone();return this}},Z.BufferAttribute=function(e,t,r){this.uuid=Z.Math.generateUUID(),this.array=e,this.itemSize=t,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.version=0,this.normalized=!0===r},Z.BufferAttribute.prototype={constructor:Z.BufferAttribute,get count(){return this.array.length/this.itemSize},set needsUpdate(e){!0===e&&this.version++},setDynamic:function(e){return this.dynamic=e,this},copy:function(e){return this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.dynamic=e.dynamic,this},copyAt:function(e,t,r){e*=this.itemSize,r*=t.itemSize;for(var n=0,i=this.itemSize;n<i;n++)this.array[e+n]=t.array[r+n];return this},copyArray:function(e){return this.array.set(e),this},copyColorsArray:function(e){for(var t=this.array,r=0,n=0,i=e.length;n<i;n++){var o=e[n];void 0===o&&(console.warn(\"THREE.BufferAttribute.copyColorsArray(): color is undefined\",n),o=new Z.Color),t[r++]=o.r,t[r++]=o.g,t[r++]=o.b}return this},copyIndicesArray:function(e){for(var t=this.array,r=0,n=0,i=e.length;n<i;n++){var o=e[n];t[r++]=o.a,t[r++]=o.b,t[r++]=o.c}return this},copyVector2sArray:function(e){for(var t=this.array,r=0,n=0,i=e.length;n<i;n++){var o=e[n];void 0===o&&(console.warn(\"THREE.BufferAttribute.copyVector2sArray(): vector is undefined\",n),o=new Z.Vector2),t[r++]=o.x,t[r++]=o.y}return this},copyVector3sArray:function(e){for(var t=this.array,r=0,n=0,i=e.length;n<i;n++){var o=e[n];void 0===o&&(console.warn(\"THREE.BufferAttribute.copyVector3sArray(): vector is undefined\",n),o=new Z.Vector3),t[r++]=o.x,t[r++]=o.y,t[r++]=o.z}return this},copyVector4sArray:function(e){for(var t=this.array,r=0,n=0,i=e.length;n<i;n++){var o=e[n];void 0===o&&(console.warn(\"THREE.BufferAttribute.copyVector4sArray(): vector is undefined\",n),o=new Z.Vector4),t[r++]=o.x,t[r++]=o.y,t[r++]=o.z,t[r++]=o.w}return this},set:function(e,t){return void 0===t&&(t=0),this.array.set(e,t),this},getX:function(e){return this.array[e*this.itemSize]},setX:function(e,t){return this.array[e*this.itemSize]=t,this},getY:function(e){return this.array[e*this.itemSize+1]},setY:function(e,t){return this.array[e*this.itemSize+1]=t,this},getZ:function(e){return this.array[e*this.itemSize+2]},setZ:function(e,t){return this.array[e*this.itemSize+2]=t,this},getW:function(e){return this.array[e*this.itemSize+3]},setW:function(e,t){return this.array[e*this.itemSize+3]=t,this},setXY:function(e,t,r){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=r,this},setXYZ:function(e,t,r,n){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=r,this.array[e+2]=n,this},setXYZW:function(e,t,r,n,i){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=r,this.array[e+2]=n,this.array[e+3]=i,this},clone:function(){return(new this.constructor).copy(this)}},Z.Int8Attribute=function(e,t){return new Z.BufferAttribute(new Int8Array(e),t)},Z.Uint8Attribute=function(e,t){return new Z.BufferAttribute(new Uint8Array(e),t)},Z.Uint8ClampedAttribute=function(e,t){return new Z.BufferAttribute(new Uint8ClampedArray(e),t)},Z.Int16Attribute=function(e,t){return new Z.BufferAttribute(new Int16Array(e),t)},Z.Uint16Attribute=function(e,t){return new Z.BufferAttribute(new Uint16Array(e),t)},Z.Int32Attribute=function(e,t){return new Z.BufferAttribute(new Int32Array(e),t)},Z.Uint32Attribute=function(e,t){return new Z.BufferAttribute(new Uint32Array(e),t)},Z.Float32Attribute=function(e,t){return new Z.BufferAttribute(new Float32Array(e),t)},Z.Float64Attribute=function(e,t){return new Z.BufferAttribute(new Float64Array(e),t)},Z.DynamicBufferAttribute=function(e,t){return console.warn(\"THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.\"),new Z.BufferAttribute(e,t).setDynamic(!0)},Z.InstancedBufferAttribute=function(e,t,r){Z.BufferAttribute.call(this,e,t),this.meshPerAttribute=r||1},Z.InstancedBufferAttribute.prototype=Object.create(Z.BufferAttribute.prototype),Z.InstancedBufferAttribute.prototype.constructor=Z.InstancedBufferAttribute,Z.InstancedBufferAttribute.prototype.copy=function(e){return Z.BufferAttribute.prototype.copy.call(this,e),this.meshPerAttribute=e.meshPerAttribute,this},Z.InterleavedBuffer=function(e,t){this.uuid=Z.Math.generateUUID(),this.array=e,this.stride=t,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.version=0},Z.InterleavedBuffer.prototype={constructor:Z.InterleavedBuffer,get length(){return this.array.length},get count(){return this.array.length/this.stride},set needsUpdate(e){!0===e&&this.version++},setDynamic:function(e){return this.dynamic=e,this},copy:function(e){return this.array=new e.array.constructor(e.array),this.stride=e.stride,this.dynamic=e.dynamic,this},copyAt:function(e,t,r){e*=this.stride,r*=t.stride;for(var n=0,i=this.stride;n<i;n++)this.array[e+n]=t.array[r+n];return this},set:function(e,t){return void 0===t&&(t=0),this.array.set(e,t),this},clone:function(){return(new this.constructor).copy(this)}},Z.InstancedInterleavedBuffer=function(e,t,r){Z.InterleavedBuffer.call(this,e,t),this.meshPerAttribute=r||1},Z.InstancedInterleavedBuffer.prototype=Object.create(Z.InterleavedBuffer.prototype),Z.InstancedInterleavedBuffer.prototype.constructor=Z.InstancedInterleavedBuffer,Z.InstancedInterleavedBuffer.prototype.copy=function(e){return Z.InterleavedBuffer.prototype.copy.call(this,e),this.meshPerAttribute=e.meshPerAttribute,this},Z.InterleavedBufferAttribute=function(e,t,r,n){this.uuid=Z.Math.generateUUID(),this.data=e,this.itemSize=t,this.offset=r,this.normalized=!0===n},Z.InterleavedBufferAttribute.prototype={constructor:Z.InterleavedBufferAttribute,get length(){return console.warn(\"THREE.BufferAttribute: .length has been deprecated. Please use .count.\"),this.array.length},get count(){return this.data.count},get array(){return this.data.array},setX:function(e,t){return this.data.array[e*this.data.stride+this.offset]=t,this},setY:function(e,t){return this.data.array[e*this.data.stride+this.offset+1]=t,this},setZ:function(e,t){return this.data.array[e*this.data.stride+this.offset+2]=t,this},setW:function(e,t){return this.data.array[e*this.data.stride+this.offset+3]=t,this},getX:function(e){return this.data.array[e*this.data.stride+this.offset]},getY:function(e){return this.data.array[e*this.data.stride+this.offset+1]},getZ:function(e){return this.data.array[e*this.data.stride+this.offset+2]},getW:function(e){return this.data.array[e*this.data.stride+this.offset+3]},setXY:function(e,t,r){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=r,this},setXYZ:function(e,t,r,n){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=r,this.data.array[e+2]=n,this},setXYZW:function(e,t,r,n,i){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=r,this.data.array[e+2]=n,this.data.array[e+3]=i,this}},Z.Geometry=function(){Object.defineProperty(this,\"id\",{value:Z.GeometryIdCount++}),this.uuid=Z.Math.generateUUID(),this.name=\"\",this.type=\"Geometry\",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.elementsNeedUpdate=!1,this.verticesNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.groupsNeedUpdate=!1},Object.assign(Z.Geometry.prototype,Z.EventDispatcher.prototype,{applyMatrix:function(e){for(var t=(new Z.Matrix3).getNormalMatrix(e),r=0,n=this.vertices.length;r<n;r++){this.vertices[r].applyMatrix4(e)}for(r=0,n=this.faces.length;r<n;r++){var i=this.faces[r];i.normal.applyMatrix3(t).normalize();for(var o=0,a=i.vertexNormals.length;o<a;o++)i.vertexNormals[o].applyMatrix3(t).normalize()}return null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this.verticesNeedUpdate=!0,this.normalsNeedUpdate=!0,this},rotateX:function(){var e;return function(t){return void 0===e&&(e=new Z.Matrix4),e.makeRotationX(t),this.applyMatrix(e),this}}(),rotateY:function(){var e;return function(t){return void 0===e&&(e=new Z.Matrix4),e.makeRotationY(t),this.applyMatrix(e),this}}(),rotateZ:function(){var e;return function(t){return void 0===e&&(e=new Z.Matrix4),e.makeRotationZ(t),this.applyMatrix(e),this}}(),translate:function(){var e;return function(t,r,n){return void 0===e&&(e=new Z.Matrix4),e.makeTranslation(t,r,n),this.applyMatrix(e),this}}(),scale:function(){var e;return function(t,r,n){return void 0===e&&(e=new Z.Matrix4),e.makeScale(t,r,n),this.applyMatrix(e),this}}(),lookAt:function(e){void 0===D&&(D=new Z.Object3D),D.lookAt(e),D.updateMatrix(),this.applyMatrix(D.matrix)},fromBufferGeometry:function(e){var t=this,r=null!==e.index?e.index.array:void 0,n=e.attributes,i=n.position.array,o=void 0!==n.normal?n.normal.array:void 0,a=void 0!==n.color?n.color.array:void 0,s=void 0!==n.uv?n.uv.array:void 0,c=void 0!==n.uv2?n.uv2.array:void 0;void 0!==c&&(this.faceVertexUvs[1]=[]);for(var l=[],u=[],h=[],d=0,p=0;d<i.length;d+=3,p+=2)t.vertices.push(new Z.Vector3(i[d],i[d+1],i[d+2])),void 0!==o&&l.push(new Z.Vector3(o[d],o[d+1],o[d+2])),void 0!==a&&t.colors.push(new Z.Color(a[d],a[d+1],a[d+2])),void 0!==s&&u.push(new Z.Vector2(s[p],s[p+1])),void 0!==c&&h.push(new Z.Vector2(c[p],c[p+1]));function f(e,r,n,i){var d=void 0!==o?[l[e].clone(),l[r].clone(),l[n].clone()]:[],p=void 0!==a?[t.colors[e].clone(),t.colors[r].clone(),t.colors[n].clone()]:[],f=new Z.Face3(e,r,n,d,p,i);t.faces.push(f),void 0!==s&&t.faceVertexUvs[0].push([u[e].clone(),u[r].clone(),u[n].clone()]),void 0!==c&&t.faceVertexUvs[1].push([h[e].clone(),h[r].clone(),h[n].clone()])}if(void 0!==r){var m=e.groups;if(m.length>0)for(d=0;d<m.length;d++)for(var v=m[d],g=v.start,y=(p=g,g+v.count);p<y;p+=3)f(r[p],r[p+1],r[p+2],v.materialIndex);else for(d=0;d<r.length;d+=3)f(r[d],r[d+1],r[d+2])}else for(d=0;d<i.length/3;d+=3)f(d,d+1,d+2);return this.computeFaceNormals(),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone()),null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),this},center:function(){this.computeBoundingBox();var e=this.boundingBox.center().negate();return this.translate(e.x,e.y,e.z),e},normalize:function(){this.computeBoundingSphere();var e=this.boundingSphere.center,t=this.boundingSphere.radius,r=0===t?1:1/t,n=new Z.Matrix4;return n.set(r,0,0,-r*e.x,0,r,0,-r*e.y,0,0,r,-r*e.z,0,0,0,1),this.applyMatrix(n),this},computeFaceNormals:function(){for(var e=new Z.Vector3,t=new Z.Vector3,r=0,n=this.faces.length;r<n;r++){var i=this.faces[r],o=this.vertices[i.a],a=this.vertices[i.b],s=this.vertices[i.c];e.subVectors(s,a),t.subVectors(o,a),e.cross(t),e.normalize(),i.normal.copy(e)}},computeVertexNormals:function(e){var t,r,n,i,o,a;for(void 0===e&&(e=!0),a=new Array(this.vertices.length),t=0,r=this.vertices.length;t<r;t++)a[t]=new Z.Vector3;if(e){var s,c,l,u=new Z.Vector3,h=new Z.Vector3;for(n=0,i=this.faces.length;n<i;n++)o=this.faces[n],s=this.vertices[o.a],c=this.vertices[o.b],l=this.vertices[o.c],u.subVectors(l,c),h.subVectors(s,c),u.cross(h),a[o.a].add(u),a[o.b].add(u),a[o.c].add(u)}else for(n=0,i=this.faces.length;n<i;n++)a[(o=this.faces[n]).a].add(o.normal),a[o.b].add(o.normal),a[o.c].add(o.normal);for(t=0,r=this.vertices.length;t<r;t++)a[t].normalize();for(n=0,i=this.faces.length;n<i;n++){var d=(o=this.faces[n]).vertexNormals;3===d.length?(d[0].copy(a[o.a]),d[1].copy(a[o.b]),d[2].copy(a[o.c])):(d[0]=a[o.a].clone(),d[1]=a[o.b].clone(),d[2]=a[o.c].clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeMorphNormals:function(){var e,t,r,n,i;for(r=0,n=this.faces.length;r<n;r++)for((i=this.faces[r]).__originalFaceNormal?i.__originalFaceNormal.copy(i.normal):i.__originalFaceNormal=i.normal.clone(),i.__originalVertexNormals||(i.__originalVertexNormals=[]),e=0,t=i.vertexNormals.length;e<t;e++)i.__originalVertexNormals[e]?i.__originalVertexNormals[e].copy(i.vertexNormals[e]):i.__originalVertexNormals[e]=i.vertexNormals[e].clone();var o=new Z.Geometry;for(o.faces=this.faces,e=0,t=this.morphTargets.length;e<t;e++){if(!this.morphNormals[e]){this.morphNormals[e]={},this.morphNormals[e].faceNormals=[],this.morphNormals[e].vertexNormals=[];var a=this.morphNormals[e].faceNormals,s=this.morphNormals[e].vertexNormals;for(r=0,n=this.faces.length;r<n;r++)c=new Z.Vector3,l={a:new Z.Vector3,b:new Z.Vector3,c:new Z.Vector3},a.push(c),s.push(l)}var c,l,u=this.morphNormals[e];for(o.vertices=this.morphTargets[e].vertices,o.computeFaceNormals(),o.computeVertexNormals(),r=0,n=this.faces.length;r<n;r++)i=this.faces[r],c=u.faceNormals[r],l=u.vertexNormals[r],c.copy(i.normal),l.a.copy(i.vertexNormals[0]),l.b.copy(i.vertexNormals[1]),l.c.copy(i.vertexNormals[2])}for(r=0,n=this.faces.length;r<n;r++)(i=this.faces[r]).normal=i.__originalFaceNormal,i.vertexNormals=i.__originalVertexNormals},computeTangents:function(){console.warn(\"THREE.Geometry: .computeTangents() has been removed.\")},computeLineDistances:function(){for(var e=0,t=this.vertices,r=0,n=t.length;r<n;r++)r>0&&(e+=t[r].distanceTo(t[r-1])),this.lineDistances[r]=e},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new Z.Box3),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new Z.Sphere),this.boundingSphere.setFromPoints(this.vertices)},merge:function(e,t,r){if(e instanceof Z.Geometry!=!1){var n,i=this.vertices.length,o=this.vertices,a=e.vertices,s=this.faces,c=e.faces,l=this.faceVertexUvs[0],u=e.faceVertexUvs[0];void 0===r&&(r=0),void 0!==t&&(n=(new Z.Matrix3).getNormalMatrix(t));for(var h=0,d=a.length;h<d;h++){var p=a[h].clone();void 0!==t&&p.applyMatrix4(t),o.push(p)}for(h=0,d=c.length;h<d;h++){var f,m,v,g=c[h],y=g.vertexNormals,x=g.vertexColors;(f=new Z.Face3(g.a+i,g.b+i,g.c+i)).normal.copy(g.normal),void 0!==n&&f.normal.applyMatrix3(n).normalize();for(var b=0,w=y.length;b<w;b++)m=y[b].clone(),void 0!==n&&m.applyMatrix3(n).normalize(),f.vertexNormals.push(m);f.color.copy(g.color);for(b=0,w=x.length;b<w;b++)v=x[b],f.vertexColors.push(v.clone());f.materialIndex=g.materialIndex+r,s.push(f)}for(h=0,d=u.length;h<d;h++){var _=u[h],M=[];if(void 0!==_){for(b=0,w=_.length;b<w;b++)M.push(_[b].clone());l.push(M)}}}else console.error(\"THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.\",e)},mergeMesh:function(e){e instanceof Z.Mesh!=!1?(e.matrixAutoUpdate&&e.updateMatrix(),this.merge(e.geometry,e.matrix)):console.error(\"THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.\",e)},mergeVertices:function(){var e,t,r,n,i,o,a,s,c={},l=[],u=[],h=Math.pow(10,4);for(r=0,n=this.vertices.length;r<n;r++)e=this.vertices[r],void 0===c[t=Math.round(e.x*h)+\"_\"+Math.round(e.y*h)+\"_\"+Math.round(e.z*h)]?(c[t]=r,l.push(this.vertices[r]),u[r]=l.length-1):u[r]=u[c[t]];var d=[];for(r=0,n=this.faces.length;r<n;r++){(i=this.faces[r]).a=u[i.a],i.b=u[i.b],i.c=u[i.c],o=[i.a,i.b,i.c];for(var p=0;p<3;p++)if(o[p]===o[(p+1)%3]){p,d.push(r);break}}for(r=d.length-1;r>=0;r--){var f=d[r];for(this.faces.splice(f,1),a=0,s=this.faceVertexUvs.length;a<s;a++)this.faceVertexUvs[a].splice(f,1)}var m=this.vertices.length-l.length;return this.vertices=l,m},sortFacesByMaterialIndex:function(){for(var e=this.faces,t=e.length,r=0;r<t;r++)e[r]._id=r;e.sort(function(e,t){return e.materialIndex-t.materialIndex});var n,i,o=this.faceVertexUvs[0],a=this.faceVertexUvs[1];o&&o.length===t&&(n=[]),a&&a.length===t&&(i=[]);for(r=0;r<t;r++){var s=e[r]._id;n&&n.push(o[s]),i&&i.push(a[s])}n&&(this.faceVertexUvs[0]=n),i&&(this.faceVertexUvs[1]=i)},toJSON:function(){var e={metadata:{version:4.4,type:\"Geometry\",generator:\"Geometry.toJSON\"}};if(e.uuid=this.uuid,e.type=this.type,\"\"!==this.name&&(e.name=this.name),void 0!==this.parameters){var t=this.parameters;for(var r in t)void 0!==t[r]&&(e[r]=t[r]);return e}for(var n=[],i=0;i<this.vertices.length;i++){var o=this.vertices[i];n.push(o.x,o.y,o.z)}var a=[],s=[],c={},l=[],u={},h=[],d={};for(i=0;i<this.faces.length;i++){var p=this.faces[i],f=void 0!==this.faceVertexUvs[0][i],m=p.normal.length()>0,v=p.vertexNormals.length>0,g=1!==p.color.r||1!==p.color.g||1!==p.color.b,y=p.vertexColors.length>0,x=0;if(x=M(x,0,0),x=M(x,1,!0),x=M(x,2,!1),x=M(x,3,f),x=M(x,4,m),x=M(x,5,v),x=M(x,6,g),x=M(x,7,y),a.push(x),a.push(p.a,p.b,p.c),a.push(p.materialIndex),f){var b=this.faceVertexUvs[0][i];a.push(E(b[0]),E(b[1]),E(b[2]))}if(m&&a.push(S(p.normal)),v){var w=p.vertexNormals;a.push(S(w[0]),S(w[1]),S(w[2]))}if(g&&a.push(T(p.color)),y){var _=p.vertexColors;a.push(T(_[0]),T(_[1]),T(_[2]))}}function M(e,t,r){return r?e|1<<t:e&~(1<<t)}function S(e){var t=e.x.toString()+e.y.toString()+e.z.toString();return void 0!==c[t]?c[t]:(c[t]=s.length/3,s.push(e.x,e.y,e.z),c[t])}function T(e){var t=e.r.toString()+e.g.toString()+e.b.toString();return void 0!==u[t]?u[t]:(u[t]=l.length,l.push(e.getHex()),u[t])}function E(e){var t=e.x.toString()+e.y.toString();return void 0!==d[t]?d[t]:(d[t]=h.length/2,h.push(e.x,e.y),d[t])}return e.data={},e.data.vertices=n,e.data.normals=s,l.length>0&&(e.data.colors=l),h.length>0&&(e.data.uvs=[h]),e.data.faces=a,e},clone:function(){return(new Z.Geometry).copy(this)},copy:function(e){this.vertices=[],this.faces=[],this.faceVertexUvs=[[]];for(var t=e.vertices,r=0,n=t.length;r<n;r++)this.vertices.push(t[r].clone());var i=e.faces;for(r=0,n=i.length;r<n;r++)this.faces.push(i[r].clone());for(r=0,n=e.faceVertexUvs.length;r<n;r++){var o=e.faceVertexUvs[r];void 0===this.faceVertexUvs[r]&&(this.faceVertexUvs[r]=[]);for(var a=0,s=o.length;a<s;a++){for(var c=o[a],l=[],u=0,h=c.length;u<h;u++){var d=c[u];l.push(d.clone())}this.faceVertexUvs[r].push(l)}}return this},dispose:function(){this.dispatchEvent({type:\"dispose\"})}}),Z.GeometryIdCount=0,Z.DirectGeometry=function(){Object.defineProperty(this,\"id\",{value:Z.GeometryIdCount++}),this.uuid=Z.Math.generateUUID(),this.name=\"\",this.type=\"DirectGeometry\",this.indices=[],this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.uvs2=[],this.groups=[],this.morphTargets={},this.skinWeights=[],this.skinIndices=[],this.boundingBox=null,this.boundingSphere=null,this.verticesNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.groupsNeedUpdate=!1},Object.assign(Z.DirectGeometry.prototype,Z.EventDispatcher.prototype,{computeBoundingBox:Z.Geometry.prototype.computeBoundingBox,computeBoundingSphere:Z.Geometry.prototype.computeBoundingSphere,computeFaceNormals:function(){console.warn(\"THREE.DirectGeometry: computeFaceNormals() is not a method of this type of geometry.\")},computeVertexNormals:function(){console.warn(\"THREE.DirectGeometry: computeVertexNormals() is not a method of this type of geometry.\")},computeGroups:function(e){for(var t,r,n=[],i=e.faces,o=0;o<i.length;o++){var a=i[o];a.materialIndex!==r&&(r=a.materialIndex,void 0!==t&&(t.count=3*o-t.start,n.push(t)),t={start:3*o,materialIndex:r})}void 0!==t&&(t.count=3*o-t.start,n.push(t)),this.groups=n},fromGeometry:function(e){var t,r=e.faces,n=e.vertices,i=e.faceVertexUvs,o=i[0]&&i[0].length>0,a=i[1]&&i[1].length>0,s=e.morphTargets,c=s.length;if(c>0){t=[];for(var l=0;l<c;l++)t[l]=[];this.morphTargets.position=t}var u,h=e.morphNormals,d=h.length;if(d>0){u=[];for(l=0;l<d;l++)u[l]=[];this.morphTargets.normal=u}var p=e.skinIndices,f=e.skinWeights,m=p.length===n.length,v=f.length===n.length;for(l=0;l<r.length;l++){var g=r[l];this.vertices.push(n[g.a],n[g.b],n[g.c]);var y=g.vertexNormals;if(3===y.length)this.normals.push(y[0],y[1],y[2]);else{var x=g.normal;this.normals.push(x,x,x)}var b,w=g.vertexColors;if(3===w.length)this.colors.push(w[0],w[1],w[2]);else{var _=g.color;this.colors.push(_,_,_)}if(!0===o)void 0!==(b=i[0][l])?this.uvs.push(b[0],b[1],b[2]):(console.warn(\"THREE.DirectGeometry.fromGeometry(): Undefined vertexUv \",l),this.uvs.push(new Z.Vector2,new Z.Vector2,new Z.Vector2));if(!0===a)void 0!==(b=i[1][l])?this.uvs2.push(b[0],b[1],b[2]):(console.warn(\"THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 \",l),this.uvs2.push(new Z.Vector2,new Z.Vector2,new Z.Vector2));for(var M=0;M<c;M++){var S=s[M].vertices;t[M].push(S[g.a],S[g.b],S[g.c])}for(M=0;M<d;M++){var T=h[M].vertexNormals[l];u[M].push(T.a,T.b,T.c)}m&&this.skinIndices.push(p[g.a],p[g.b],p[g.c]),v&&this.skinWeights.push(f[g.a],f[g.b],f[g.c])}return this.computeGroups(e),this.verticesNeedUpdate=e.verticesNeedUpdate,this.normalsNeedUpdate=e.normalsNeedUpdate,this.colorsNeedUpdate=e.colorsNeedUpdate,this.uvsNeedUpdate=e.uvsNeedUpdate,this.groupsNeedUpdate=e.groupsNeedUpdate,this},dispose:function(){this.dispatchEvent({type:\"dispose\"})}}),Z.BufferGeometry=function(){Object.defineProperty(this,\"id\",{value:Z.GeometryIdCount++}),this.uuid=Z.Math.generateUUID(),this.name=\"\",this.type=\"BufferGeometry\",this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0}},Object.assign(Z.BufferGeometry.prototype,Z.EventDispatcher.prototype,{getIndex:function(){return this.index},setIndex:function(e){this.index=e},addAttribute:function(e,t){return t instanceof Z.BufferAttribute==!1&&t instanceof Z.InterleavedBufferAttribute==!1?(console.warn(\"THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).\"),void this.addAttribute(e,new Z.BufferAttribute(arguments[1],arguments[2]))):\"index\"===e?(console.warn(\"THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.\"),void this.setIndex(t)):(this.attributes[e]=t,this)},getAttribute:function(e){return this.attributes[e]},removeAttribute:function(e){return delete this.attributes[e],this},addGroup:function(e,t,r){this.groups.push({start:e,count:t,materialIndex:void 0!==r?r:0})},clearGroups:function(){this.groups=[]},setDrawRange:function(e,t){this.drawRange.start=e,this.drawRange.count=t},applyMatrix:function(e){var t=this.attributes.position;void 0!==t&&(e.applyToVector3Array(t.array),t.needsUpdate=!0);var r=this.attributes.normal;void 0!==r&&((new Z.Matrix3).getNormalMatrix(e).applyToVector3Array(r.array),r.needsUpdate=!0);return null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this},rotateX:function(){var e;return function(t){return void 0===e&&(e=new Z.Matrix4),e.makeRotationX(t),this.applyMatrix(e),this}}(),rotateY:function(){var e;return function(t){return void 0===e&&(e=new Z.Matrix4),e.makeRotationY(t),this.applyMatrix(e),this}}(),rotateZ:function(){var e;return function(t){return void 0===e&&(e=new Z.Matrix4),e.makeRotationZ(t),this.applyMatrix(e),this}}(),translate:function(){var e;return function(t,r,n){return void 0===e&&(e=new Z.Matrix4),e.makeTranslation(t,r,n),this.applyMatrix(e),this}}(),scale:function(){var e;return function(t,r,n){return void 0===e&&(e=new Z.Matrix4),e.makeScale(t,r,n),this.applyMatrix(e),this}}(),lookAt:function(){var e;return function(t){void 0===e&&(e=new Z.Object3D),e.lookAt(t),e.updateMatrix(),this.applyMatrix(e.matrix)}}(),center:function(){this.computeBoundingBox();var e=this.boundingBox.center().negate();return this.translate(e.x,e.y,e.z),e},setFromObject:function(e){var t=e.geometry;if(e instanceof Z.Points||e instanceof Z.Line){var r=new Z.Float32Attribute(3*t.vertices.length,3),n=new Z.Float32Attribute(3*t.colors.length,3);if(this.addAttribute(\"position\",r.copyVector3sArray(t.vertices)),this.addAttribute(\"color\",n.copyColorsArray(t.colors)),t.lineDistances&&t.lineDistances.length===t.vertices.length){var i=new Z.Float32Attribute(t.lineDistances.length,1);this.addAttribute(\"lineDistance\",i.copyArray(t.lineDistances))}null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone())}else e instanceof Z.Mesh&&t instanceof Z.Geometry&&this.fromGeometry(t);return this},updateFromObject:function(e){var t,r=e.geometry;if(e instanceof Z.Mesh){var n=r.__directGeometry;if(void 0===n||!0===r.elementsNeedUpdate)return this.fromGeometry(r);n.verticesNeedUpdate=r.verticesNeedUpdate||r.elementsNeedUpdate,n.normalsNeedUpdate=r.normalsNeedUpdate||r.elementsNeedUpdate,n.colorsNeedUpdate=r.colorsNeedUpdate||r.elementsNeedUpdate,n.uvsNeedUpdate=r.uvsNeedUpdate||r.elementsNeedUpdate,n.groupsNeedUpdate=r.groupsNeedUpdate||r.elementsNeedUpdate,r.elementsNeedUpdate=!1,r.verticesNeedUpdate=!1,r.normalsNeedUpdate=!1,r.colorsNeedUpdate=!1,r.uvsNeedUpdate=!1,r.groupsNeedUpdate=!1,r=n}return!0===r.verticesNeedUpdate&&(void 0!==(t=this.attributes.position)&&(t.copyVector3sArray(r.vertices),t.needsUpdate=!0),r.verticesNeedUpdate=!1),!0===r.normalsNeedUpdate&&(void 0!==(t=this.attributes.normal)&&(t.copyVector3sArray(r.normals),t.needsUpdate=!0),r.normalsNeedUpdate=!1),!0===r.colorsNeedUpdate&&(void 0!==(t=this.attributes.color)&&(t.copyColorsArray(r.colors),t.needsUpdate=!0),r.colorsNeedUpdate=!1),r.uvsNeedUpdate&&(void 0!==(t=this.attributes.uv)&&(t.copyVector2sArray(r.uvs),t.needsUpdate=!0),r.uvsNeedUpdate=!1),r.lineDistancesNeedUpdate&&(void 0!==(t=this.attributes.lineDistance)&&(t.copyArray(r.lineDistances),t.needsUpdate=!0),r.lineDistancesNeedUpdate=!1),r.groupsNeedUpdate&&(r.computeGroups(e.geometry),this.groups=r.groups,r.groupsNeedUpdate=!1),this},fromGeometry:function(e){return e.__directGeometry=(new Z.DirectGeometry).fromGeometry(e),this.fromDirectGeometry(e.__directGeometry)},fromDirectGeometry:function(e){var t=new Float32Array(3*e.vertices.length);if(this.addAttribute(\"position\",new Z.BufferAttribute(t,3).copyVector3sArray(e.vertices)),e.normals.length>0){var r=new Float32Array(3*e.normals.length);this.addAttribute(\"normal\",new Z.BufferAttribute(r,3).copyVector3sArray(e.normals))}if(e.colors.length>0){var n=new Float32Array(3*e.colors.length);this.addAttribute(\"color\",new Z.BufferAttribute(n,3).copyColorsArray(e.colors))}if(e.uvs.length>0){var i=new Float32Array(2*e.uvs.length);this.addAttribute(\"uv\",new Z.BufferAttribute(i,2).copyVector2sArray(e.uvs))}if(e.uvs2.length>0){var o=new Float32Array(2*e.uvs2.length);this.addAttribute(\"uv2\",new Z.BufferAttribute(o,2).copyVector2sArray(e.uvs2))}if(e.indices.length>0){var a=new(e.vertices.length>65535?Uint32Array:Uint16Array)(3*e.indices.length);this.setIndex(new Z.BufferAttribute(a,1).copyIndicesArray(e.indices))}for(var s in this.groups=e.groups,e.morphTargets){for(var c=[],l=e.morphTargets[s],u=0,h=l.length;u<h;u++){var d=l[u],p=new Z.Float32Attribute(3*d.length,3);c.push(p.copyVector3sArray(d))}this.morphAttributes[s]=c}if(e.skinIndices.length>0){var f=new Z.Float32Attribute(4*e.skinIndices.length,4);this.addAttribute(\"skinIndex\",f.copyVector4sArray(e.skinIndices))}if(e.skinWeights.length>0){var m=new Z.Float32Attribute(4*e.skinWeights.length,4);this.addAttribute(\"skinWeight\",m.copyVector4sArray(e.skinWeights))}return null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone()),this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new Z.Box3);var e=this.attributes.position.array;void 0!==e?this.boundingBox.setFromArray(e):this.boundingBox.makeEmpty(),(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){var e=new Z.Box3,t=new Z.Vector3;return function(){null===this.boundingSphere&&(this.boundingSphere=new Z.Sphere);var r=this.attributes.position;if(r){var n=r.array,i=this.boundingSphere.center;e.setFromArray(n),e.center(i);for(var o=0,a=0,s=n.length;a<s;a+=3)t.fromArray(n,a),o=Math.max(o,i.distanceToSquared(t));this.boundingSphere.radius=Math.sqrt(o),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.',this)}}}(),computeFaceNormals:function(){},computeVertexNormals:function(){var e=this.index,t=this.attributes,r=this.groups;if(t.position){var n=t.position.array;if(void 0===t.normal)this.addAttribute(\"normal\",new Z.BufferAttribute(new Float32Array(n.length),3));else for(var i=t.normal.array,o=0,a=i.length;o<a;o++)i[o]=0;var s,c,l,u=t.normal.array,h=new Z.Vector3,d=new Z.Vector3,p=new Z.Vector3,f=new Z.Vector3,m=new Z.Vector3;if(e){var v=e.array;0===r.length&&this.addGroup(0,v.length);for(var g=0,y=r.length;g<y;++g){var x=r[g],b=x.start;for(o=b,a=b+x.count;o<a;o+=3)s=3*v[o+0],c=3*v[o+1],l=3*v[o+2],h.fromArray(n,s),d.fromArray(n,c),p.fromArray(n,l),f.subVectors(p,d),m.subVectors(h,d),f.cross(m),u[s]+=f.x,u[s+1]+=f.y,u[s+2]+=f.z,u[c]+=f.x,u[c+1]+=f.y,u[c+2]+=f.z,u[l]+=f.x,u[l+1]+=f.y,u[l+2]+=f.z}}else for(o=0,a=n.length;o<a;o+=9)h.fromArray(n,o),d.fromArray(n,o+3),p.fromArray(n,o+6),f.subVectors(p,d),m.subVectors(h,d),f.cross(m),u[o]=f.x,u[o+1]=f.y,u[o+2]=f.z,u[o+3]=f.x,u[o+4]=f.y,u[o+5]=f.z,u[o+6]=f.x,u[o+7]=f.y,u[o+8]=f.z;this.normalizeNormals(),t.normal.needsUpdate=!0}},merge:function(e,t){if(e instanceof Z.BufferGeometry!=!1){void 0===t&&(t=0);var r=this.attributes;for(var n in r)if(void 0!==e.attributes[n])for(var i=r[n].array,o=e.attributes[n],a=o.array,s=0,c=o.itemSize*t;s<a.length;s++,c++)i[c]=a[s];return this}console.error(\"THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.\",e)},normalizeNormals:function(){for(var e,t,r,n,i=this.attributes.normal.array,o=0,a=i.length;o<a;o+=3)e=i[o],t=i[o+1],r=i[o+2],n=1/Math.sqrt(e*e+t*t+r*r),i[o]*=n,i[o+1]*=n,i[o+2]*=n},toNonIndexed:function(){if(null===this.index)return console.warn(\"THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.\"),this;var e=new Z.BufferGeometry,t=this.index.array,r=this.attributes;for(var n in r){for(var i=r[n],o=i.array,a=i.itemSize,s=new o.constructor(t.length*a),c=0,l=0,u=0,h=t.length;u<h;u++){c=t[u]*a;for(var d=0;d<a;d++)s[l++]=o[c++]}e.addAttribute(n,new Z.BufferAttribute(s,a))}return e},toJSON:function(){var e={metadata:{version:4.4,type:\"BufferGeometry\",generator:\"BufferGeometry.toJSON\"}};if(e.uuid=this.uuid,e.type=this.type,\"\"!==this.name&&(e.name=this.name),void 0!==this.parameters){var t=this.parameters;for(var r in t)void 0!==t[r]&&(e[r]=t[r]);return e}e.data={attributes:{}};var n=this.index;if(null!==n){var i=Array.prototype.slice.call(n.array);e.data.index={type:n.array.constructor.name,array:i}}var o=this.attributes;for(var r in o){var a=o[r];i=Array.prototype.slice.call(a.array);e.data.attributes[r]={itemSize:a.itemSize,type:a.array.constructor.name,array:i,normalized:a.normalized}}var s=this.groups;s.length>0&&(e.data.groups=JSON.parse(JSON.stringify(s)));var c=this.boundingSphere;return null!==c&&(e.data.boundingSphere={center:c.center.toArray(),radius:c.radius}),e},clone:function(){return(new Z.BufferGeometry).copy(this)},copy:function(e){var t=e.index;null!==t&&this.setIndex(t.clone());var r=e.attributes;for(var n in r){var i=r[n];this.addAttribute(n,i.clone())}for(var o=e.groups,a=0,s=o.length;a<s;a++){var c=o[a];this.addGroup(c.start,c.count,c.materialIndex)}return this},dispose:function(){this.dispatchEvent({type:\"dispose\"})}}),Z.BufferGeometry.MaxIndex=65535,Z.InstancedBufferGeometry=function(){Z.BufferGeometry.call(this),this.type=\"InstancedBufferGeometry\",this.maxInstancedCount=void 0},Z.InstancedBufferGeometry.prototype=Object.create(Z.BufferGeometry.prototype),Z.InstancedBufferGeometry.prototype.constructor=Z.InstancedBufferGeometry,Z.InstancedBufferGeometry.prototype.addGroup=function(e,t,r){this.groups.push({start:e,count:t,instances:r})},Z.InstancedBufferGeometry.prototype.copy=function(e){var t=e.index;null!==t&&this.setIndex(t.clone());var r=e.attributes;for(var n in r){var i=r[n];this.addAttribute(n,i.clone())}for(var o=e.groups,a=0,s=o.length;a<s;a++){var c=o[a];this.addGroup(c.start,c.count,c.instances)}return this},Z.Uniform=function(e){\"string\"==typeof e&&(console.warn(\"THREE.Uniform: Type parameter is no longer needed.\"),e=arguments[1]),this.value=e,this.dynamic=!1},Z.Uniform.prototype={constructor:Z.Uniform,onUpdate:function(e){return this.dynamic=!0,this.onUpdateCallback=e,this}},Z.AnimationAction=function(){throw new Error(\"THREE.AnimationAction: Use mixer.clipAction for construction.\")},Z.AnimationAction._new=function(e,t,r){this._mixer=e,this._clip=t,this._localRoot=r||null;for(var n=t.tracks,i=n.length,o=new Array(i),a={endingStart:Z.ZeroCurvatureEnding,endingEnd:Z.ZeroCurvatureEnding},s=0;s!==i;++s){var c=n[s].createInterpolant(null);o[s]=c,c.settings=a}this._interpolantSettings=a,this._interpolants=o,this._propertyBindings=new Array(i),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=Z.LoopRepeat,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0},Z.AnimationAction._new.prototype={constructor:Z.AnimationAction._new,play:function(){return this._mixer._activateAction(this),this},stop:function(){return this._mixer._deactivateAction(this),this.reset()},reset:function(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()},isRunning:function(){this._startTime;return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)},isScheduled:function(){return this._mixer._isActiveAction(this)},startAt:function(e){return this._startTime=e,this},setLoop:function(e,t){return this.loop=e,this.repetitions=t,this},setEffectiveWeight:function(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()},getEffectiveWeight:function(){return this._effectiveWeight},fadeIn:function(e){return this._scheduleFading(e,0,1)},fadeOut:function(e){return this._scheduleFading(e,1,0)},crossFadeFrom:function(e,t,r){this._mixer;if(e.fadeOut(t),this.fadeIn(t),r){var n=this._clip.duration,i=e._clip.duration,o=i/n,a=n/i;e.warp(1,o,t),this.warp(a,1,t)}return this},crossFadeTo:function(e,t,r){return e.crossFadeFrom(this,t,r)},stopFading:function(){var e=this._weightInterpolant;return null!==e&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this},setEffectiveTimeScale:function(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()},getEffectiveTimeScale:function(){return this._effectiveTimeScale},setDuration:function(e){return this.timeScale=this._clip.duration/e,this.stopWarping()},syncWith:function(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()},halt:function(e){return this.warp(this._effectiveTimeScale,0,e)},warp:function(e,t,r){var n=this._mixer,i=n.time,o=this._timeScaleInterpolant,a=this.timeScale;null===o&&(o=n._lendControlInterpolant(),this._timeScaleInterpolant=o);var s=o.parameterPositions,c=o.sampleValues;return s[0]=i,s[1]=i+r,c[0]=e/a,c[1]=t/a,this},stopWarping:function(){var e=this._timeScaleInterpolant;return null!==e&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this},getMixer:function(){return this._mixer},getClip:function(){return this._clip},getRoot:function(){return this._localRoot||this._mixer._root},_update:function(e,t,r,n){var i=this._startTime;if(null!==i){var o=(e-i)*r;if(o<0||0===r)return;this._startTime=null,t=r*o}t*=this._updateTimeScale(e);var a=this._updateTime(t),s=this._updateWeight(e);if(s>0)for(var c=this._interpolants,l=this._propertyBindings,u=0,h=c.length;u!==h;++u)c[u].evaluate(a),l[u].accumulate(n,s)},_updateWeight:function(e){var t=0;if(this.enabled){t=this.weight;var r=this._weightInterpolant;if(null!==r){var n=r.evaluate(e)[0];t*=n,e>r.parameterPositions[1]&&(this.stopFading(),0===n&&(this.enabled=!1))}}return this._effectiveWeight=t,t},_updateTimeScale:function(e){var t=0;if(!this.paused){t=this.timeScale;var r=this._timeScaleInterpolant;if(null!==r)t*=r.evaluate(e)[0],e>r.parameterPositions[1]&&(this.stopWarping(),0===t?this.paused=!0:this.timeScale=t)}return this._effectiveTimeScale=t,t},_updateTime:function(e){var t=this.time+e;if(0===e)return t;var r=this._clip.duration,n=this.loop,i=this._loopCount;if(n===Z.LoopOnce){-1===i&&(this.loopCount=0,this._setEndings(!0,!0,!1));e:{if(t>=r)t=r;else{if(!(t<0))break e;t=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this._mixer.dispatchEvent({type:\"finished\",action:this,direction:e<0?-1:1})}}else{var o=n===Z.LoopPingPong;if(-1===i&&(e>=0?(i=0,this._setEndings(!0,0===this.repetitions,o)):this._setEndings(0===this.repetitions,!0,o)),t>=r||t<0){var a=Math.floor(t/r);t-=r*a,i+=Math.abs(a);var s=this.repetitions-i;if(s<0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,t=e>0?r:0,this._mixer.dispatchEvent({type:\"finished\",action:this,direction:e>0?1:-1});else{if(0===s){var c=e<0;this._setEndings(c,!c,o)}else this._setEndings(!1,!1,o);this._loopCount=i,this._mixer.dispatchEvent({type:\"loop\",action:this,loopDelta:a})}}if(o&&1==(1&i))return this.time=t,r-t}return this.time=t,t},_setEndings:function(e,t,r){var n=this._interpolantSettings;r?(n.endingStart=Z.ZeroSlopeEnding,n.endingEnd=Z.ZeroSlopeEnding):(n.endingStart=e?this.zeroSlopeAtStart?Z.ZeroSlopeEnding:Z.ZeroCurvatureEnding:Z.WrapAroundEnding,n.endingEnd=t?this.zeroSlopeAtEnd?Z.ZeroSlopeEnding:Z.ZeroCurvatureEnding:Z.WrapAroundEnding)},_scheduleFading:function(e,t,r){var n=this._mixer,i=n.time,o=this._weightInterpolant;null===o&&(o=n._lendControlInterpolant(),this._weightInterpolant=o);var a=o.parameterPositions,s=o.sampleValues;return a[0]=i,s[0]=t,a[1]=i+e,s[1]=r,this}},Z.AnimationClip=function(e,t,r){this.name=e,this.tracks=r,this.duration=void 0!==t?t:-1,this.uuid=Z.Math.generateUUID(),this.duration<0&&this.resetDuration(),this.trim(),this.optimize()},Z.AnimationClip.prototype={constructor:Z.AnimationClip,resetDuration:function(){for(var e=0,t=0,r=this.tracks.length;t!==r;++t){var n=this.tracks[t];e=Math.max(e,n.times[n.times.length-1])}this.duration=e},trim:function(){for(var e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this},optimize:function(){for(var e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}},Object.assign(Z.AnimationClip,{parse:function(e){for(var t=[],r=e.tracks,n=1/(e.fps||1),i=0,o=r.length;i!==o;++i)t.push(Z.KeyframeTrack.parse(r[i]).scale(n));return new Z.AnimationClip(e.name,e.duration,t)},toJSON:function(e){for(var t=[],r=e.tracks,n={name:e.name,duration:e.duration,tracks:t},i=0,o=r.length;i!==o;++i)t.push(Z.KeyframeTrack.toJSON(r[i]));return n},CreateFromMorphTargetSequence:function(e,t,r,n){for(var i=t.length,o=[],a=0;a<i;a++){var s=[],c=[];s.push((a+i-1)%i,a,(a+1)%i),c.push(0,1,0);var l=Z.AnimationUtils.getKeyframeOrder(s);s=Z.AnimationUtils.sortedArray(s,1,l),c=Z.AnimationUtils.sortedArray(c,1,l),n||0!==s[0]||(s.push(i),c.push(c[0])),o.push(new Z.NumberKeyframeTrack(\".morphTargetInfluences[\"+t[a].name+\"]\",s,c).scale(1/r))}return new Z.AnimationClip(e,-1,o)},findByName:function(e,t){var r=e;if(!Array.isArray(e)){var n=e;r=n.geometry&&n.geometry.animations||n.animations}for(var i=0;i<r.length;i++)if(r[i].name===t)return r[i];return null},CreateClipsFromMorphTargetSequences:function(e,t,r){for(var n={},i=/^([\\w-]*?)([\\d]+)$/,o=0,a=e.length;o<a;o++){var s=e[o],c=s.name.match(i);if(c&&c.length>1){var l=n[h=c[1]];l||(n[h]=l=[]),l.push(s)}}var u=[];for(var h in n)u.push(Z.AnimationClip.CreateFromMorphTargetSequence(h,n[h],t,r));return u},parseAnimation:function(e,t,r){if(!e)return console.error(\"  no animation in JSONLoader data\"),null;for(var n=function(e,t,r,n,i){if(0!==r.length){var o=[],a=[];Z.AnimationUtils.flattenJSON(r,o,a,n),0!==o.length&&i.push(new e(t,o,a))}},i=[],o=e.name||\"default\",a=e.length||-1,s=e.fps||30,c=e.hierarchy||[],l=0;l<c.length;l++){var u=c[l].keys;if(u&&0!==u.length)if(u[0].morphTargets){for(var h={},d=0;d<u.length;d++)if(u[d].morphTargets)for(var p=0;p<u[d].morphTargets.length;p++)h[u[d].morphTargets[p]]=-1;for(var f in h){var m=[],v=[];for(p=0;p!==u[d].morphTargets.length;++p){var g=u[d];m.push(g.time),v.push(g.morphTarget===f?1:0)}i.push(new Z.NumberKeyframeTrack(\".morphTargetInfluence[\"+f+\"]\",m,v))}a=h.length*(s||1)}else{var y=\".bones[\"+t[l].name+\"]\";n(Z.VectorKeyframeTrack,y+\".position\",u,\"pos\",i),n(Z.QuaternionKeyframeTrack,y+\".quaternion\",u,\"rot\",i),n(Z.VectorKeyframeTrack,y+\".scale\",u,\"scl\",i)}}return 0===i.length?null:new Z.AnimationClip(o,a,i)}}),Z.AnimationMixer=function(e){this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1},Object.assign(Z.AnimationMixer.prototype,Z.EventDispatcher.prototype,{clipAction:function(e,t){var r=t||this._root,n=r.uuid,i=\"string\"==typeof e?Z.AnimationClip.findByName(r,e):e,o=null!==i?i.uuid:e,a=this._actionsByClip[o],s=null;if(void 0!==a){var c=a.actionByRoot[n];if(void 0!==c)return c;s=a.knownActions[0],null===i&&(i=s._clip)}if(null===i)return null;var l=new Z.AnimationMixer._Action(this,i,t);return this._bindAction(l,s),this._addInactiveAction(l,o,n),l},existingAction:function(e,t){var r=t||this._root,n=r.uuid,i=\"string\"==typeof e?Z.AnimationClip.findByName(r,e):e,o=i?i.uuid:e,a=this._actionsByClip[o];return void 0!==a&&a.actionByRoot[n]||null},stopAllAction:function(){var e=this._actions,t=this._nActiveActions,r=this._bindings,n=this._nActiveBindings;this._nActiveActions=0,this._nActiveBindings=0;for(var i=0;i!==t;++i)e[i].reset();for(i=0;i!==n;++i)r[i].useCount=0;return this},update:function(e){e*=this.timeScale;for(var t=this._actions,r=this._nActiveActions,n=this.time+=e,i=Math.sign(e),o=this._accuIndex^=1,a=0;a!==r;++a){var s=t[a];s.enabled&&s._update(n,e,i,o)}var c=this._bindings,l=this._nActiveBindings;for(a=0;a!==l;++a)c[a].apply(o);return this},getRoot:function(){return this._root},uncacheClip:function(e){var t=this._actions,r=e.uuid,n=this._actionsByClip,i=n[r];if(void 0!==i){for(var o=i.knownActions,a=0,s=o.length;a!==s;++a){var c=o[a];this._deactivateAction(c);var l=c._cacheIndex,u=t[t.length-1];c._cacheIndex=null,c._byClipCacheIndex=null,u._cacheIndex=l,t[l]=u,t.pop(),this._removeInactiveBindingsForAction(c)}delete n[r]}},uncacheRoot:function(e){var t=e.uuid,r=this._actionsByClip;for(var n in r){var i=r[n].actionByRoot[t];void 0!==i&&(this._deactivateAction(i),this._removeInactiveAction(i))}var o=this._bindingsByRootAndName[t];if(void 0!==o)for(var a in o){var s=o[a];s.restoreOriginalState(),this._removeInactiveBinding(s)}},uncacheAction:function(e,t){var r=this.existingAction(e,t);null!==r&&(this._deactivateAction(r),this._removeInactiveAction(r))}}),Z.AnimationMixer._Action=Z.AnimationAction._new,Object.assign(Z.AnimationMixer.prototype,{_bindAction:function(e,t){var r=e._localRoot||this._root,n=e._clip.tracks,i=n.length,o=e._propertyBindings,a=e._interpolants,s=r.uuid,c=this._bindingsByRootAndName,l=c[s];void 0===l&&(l={},c[s]=l);for(var u=0;u!==i;++u){var h=n[u],d=h.name,p=l[d];if(void 0!==p)o[u]=p;else{if(void 0!==(p=o[u])){null===p._cacheIndex&&(++p.referenceCount,this._addInactiveBinding(p,s,d));continue}var f=t&&t._propertyBindings[u].binding.parsedPath;++(p=new Z.PropertyMixer(Z.PropertyBinding.create(r,d,f),h.ValueTypeName,h.getValueSize())).referenceCount,this._addInactiveBinding(p,s,d),o[u]=p}a[u].resultBuffer=p.buffer}},_activateAction:function(e){if(!this._isActiveAction(e)){if(null===e._cacheIndex){var t=(e._localRoot||this._root).uuid,r=e._clip.uuid,n=this._actionsByClip[r];this._bindAction(e,n&&n.knownActions[0]),this._addInactiveAction(e,r,t)}for(var i=e._propertyBindings,o=0,a=i.length;o!==a;++o){var s=i[o];0==s.useCount++&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(e)}},_deactivateAction:function(e){if(this._isActiveAction(e)){for(var t=e._propertyBindings,r=0,n=t.length;r!==n;++r){var i=t[r];0==--i.useCount&&(i.restoreOriginalState(),this._takeBackBinding(i))}this._takeBackAction(e)}},_initMemoryManager:function(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;var e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}},_isActiveAction:function(e){var t=e._cacheIndex;return null!==t&&t<this._nActiveActions},_addInactiveAction:function(e,t,r){var n=this._actions,i=this._actionsByClip,o=i[t];if(void 0===o)o={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,i[t]=o;else{var a=o.knownActions;e._byClipCacheIndex=a.length,a.push(e)}e._cacheIndex=n.length,n.push(e),o.actionByRoot[r]=e},_removeInactiveAction:function(e){var t=this._actions,r=t[t.length-1],n=e._cacheIndex;r._cacheIndex=n,t[n]=r,t.pop(),e._cacheIndex=null;var i=e._clip.uuid,o=this._actionsByClip,a=o[i],s=a.knownActions,c=s[s.length-1],l=e._byClipCacheIndex;c._byClipCacheIndex=l,s[l]=c,s.pop(),e._byClipCacheIndex=null,delete a.actionByRoot[(t._localRoot||this._root).uuid],0===s.length&&delete o[i],this._removeInactiveBindingsForAction(e)},_removeInactiveBindingsForAction:function(e){for(var t=e._propertyBindings,r=0,n=t.length;r!==n;++r){var i=t[r];0==--i.referenceCount&&this._removeInactiveBinding(i)}},_lendAction:function(e){var t=this._actions,r=e._cacheIndex,n=this._nActiveActions++,i=t[n];e._cacheIndex=n,t[n]=e,i._cacheIndex=r,t[r]=i},_takeBackAction:function(e){var t=this._actions,r=e._cacheIndex,n=--this._nActiveActions,i=t[n];e._cacheIndex=n,t[n]=e,i._cacheIndex=r,t[r]=i},_addInactiveBinding:function(e,t,r){var n=this._bindingsByRootAndName,i=n[t],o=this._bindings;void 0===i&&(i={},n[t]=i),i[r]=e,e._cacheIndex=o.length,o.push(e)},_removeInactiveBinding:function(e){var t=this._bindings,r=e.binding,n=r.rootNode.uuid,i=r.path,o=this._bindingsByRootAndName,a=o[n],s=t[t.length-1],c=e._cacheIndex;s._cacheIndex=c,t[c]=s,t.pop(),delete a[i];e:{for(var l in a)break e;delete o[n]}},_lendBinding:function(e){var t=this._bindings,r=e._cacheIndex,n=this._nActiveBindings++,i=t[n];e._cacheIndex=n,t[n]=e,i._cacheIndex=r,t[r]=i},_takeBackBinding:function(e){var t=this._bindings,r=e._cacheIndex,n=--this._nActiveBindings,i=t[n];e._cacheIndex=n,t[n]=e,i._cacheIndex=r,t[r]=i},_lendControlInterpolant:function(){var e=this._controlInterpolants,t=this._nActiveControlInterpolants++,r=e[t];return void 0===r&&((r=new Z.LinearInterpolant(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer)).__cacheIndex=t,e[t]=r),r},_takeBackControlInterpolant:function(e){var t=this._controlInterpolants,r=e.__cacheIndex,n=--this._nActiveControlInterpolants,i=t[n];e.__cacheIndex=n,t[n]=e,i.__cacheIndex=r,t[r]=i},_controlInterpolantsResultBuffer:new Float32Array(1)}),Z.AnimationObjectGroup=function(e){this.uuid=Z.Math.generateUUID(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;var t={};this._indicesByUUID=t;for(var r=0,n=arguments.length;r!==n;++r)t[arguments[r].uuid]=r;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};var i=this;this.stats={objects:{get total(){return i._objects.length},get inUse(){return this.total-i.nCachedObjects_}},get bindingsPerObject(){return i._bindings.length}}},Z.AnimationObjectGroup.prototype={constructor:Z.AnimationObjectGroup,add:function(e){for(var t=this._objects,r=t.length,n=this.nCachedObjects_,i=this._indicesByUUID,o=this._paths,a=this._parsedPaths,s=this._bindings,c=s.length,l=0,u=arguments.length;l!==u;++l){var h=arguments[l],d=h.uuid,p=i[d];if(void 0===p){p=r++,i[d]=p,t.push(h);for(var f=0,m=c;f!==m;++f)s[f].push(new Z.PropertyBinding(h,o[f],a[f]))}else if(p<n){var v=t[p],g=--n,y=t[g];i[y.uuid]=p,t[p]=y,i[d]=g,t[g]=h;for(f=0,m=c;f!==m;++f){var x=s[f],b=x[g],w=x[p];x[p]=b,void 0===w&&(w=new Z.PropertyBinding(h,o[f],a[f])),x[g]=w}}else t[p]!==v&&console.error(\"Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes...\")}this.nCachedObjects_=n},remove:function(e){for(var t=this._objects,r=(t.length,this.nCachedObjects_),n=this._indicesByUUID,i=this._bindings,o=i.length,a=0,s=arguments.length;a!==s;++a){var c=arguments[a],l=c.uuid,u=n[l];if(void 0!==u&&u>=r){var h=r++,d=t[h];n[d.uuid]=u,t[u]=d,n[l]=h,t[h]=c;for(var p=0,f=o;p!==f;++p){var m=i[p],v=m[h],g=m[u];m[u]=v,m[h]=g}}}this.nCachedObjects_=r},uncache:function(e){for(var t=this._objects,r=t.length,n=this.nCachedObjects_,i=this._indicesByUUID,o=this._bindings,a=o.length,s=0,c=arguments.length;s!==c;++s){var l=arguments[s].uuid,u=i[l];if(void 0!==u)if(delete i[l],u<n){var h=--n,d=t[h],p=t[y=--r];i[d.uuid]=u,t[u]=d,i[p.uuid]=h,t[h]=p,t.pop();for(var f=0,m=a;f!==m;++f){var v=(x=o[f])[h],g=x[y];x[u]=v,x[h]=g,x.pop()}}else{var y;i[(p=t[y=--r]).uuid]=u,t[u]=p,t.pop();for(f=0,m=a;f!==m;++f){var x;(x=o[f])[u]=x[y],x.pop()}}}this.nCachedObjects_=n},subscribe_:function(e,t){var r=this._bindingsIndicesByPath,n=r[e],i=this._bindings;if(void 0!==n)return i[n];var o=this._paths,a=this._parsedPaths,s=this._objects,c=s.length,l=this.nCachedObjects_,u=new Array(c);n=i.length,r[e]=n,o.push(e),a.push(t),i.push(u);for(var h=l,d=s.length;h!==d;++h){var p=s[h];u[h]=new Z.PropertyBinding(p,e,t)}return u},unsubscribe_:function(e){var t=this._bindingsIndicesByPath,r=t[e];if(void 0!==r){var n=this._paths,i=this._parsedPaths,o=this._bindings,a=o.length-1,s=o[a];t[e[a]]=r,o[r]=s,o.pop(),i[r]=i[a],i.pop(),n[r]=n[a],n.pop()}}},Z.AnimationUtils={arraySlice:function(e,t,r){return Z.AnimationUtils.isTypedArray(e)?new e.constructor(e.subarray(t,r)):e.slice(t,r)},convertArray:function(e,t,r){return!e||!r&&e.constructor===t?e:\"number\"==typeof t.BYTES_PER_ELEMENT?new t(e):Array.prototype.slice.call(e)},isTypedArray:function(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)},getKeyframeOrder:function(e){for(var t=e.length,r=new Array(t),n=0;n!==t;++n)r[n]=n;return r.sort(function(t,r){return e[t]-e[r]}),r},sortedArray:function(e,t,r){for(var n=e.length,i=new e.constructor(n),o=0,a=0;a!==n;++o)for(var s=r[o]*t,c=0;c!==t;++c)i[a++]=e[s+c];return i},flattenJSON:function(e,t,r,n){for(var i=1,o=e[0];void 0!==o&&void 0===o[n];)o=e[i++];if(void 0!==o){var a=o[n];if(void 0!==a)if(Array.isArray(a))do{void 0!==(a=o[n])&&(t.push(o.time),r.push.apply(r,a)),o=e[i++]}while(void 0!==o);else if(void 0!==a.toArray)do{void 0!==(a=o[n])&&(t.push(o.time),a.toArray(r,r.length)),o=e[i++]}while(void 0!==o);else do{void 0!==(a=o[n])&&(t.push(o.time),r.push(a)),o=e[i++]}while(void 0!==o)}}},Z.KeyframeTrack=function(e,t,r,n){if(void 0===e)throw new Error(\"track name is undefined\");if(void 0===t||0===t.length)throw new Error(\"no keyframes in track named \"+e);this.name=e,this.times=Z.AnimationUtils.convertArray(t,this.TimeBufferType),this.values=Z.AnimationUtils.convertArray(r,this.ValueBufferType),this.setInterpolation(n||this.DefaultInterpolation),this.validate(),this.optimize()},Z.KeyframeTrack.prototype={constructor:Z.KeyframeTrack,TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:Z.InterpolateLinear,InterpolantFactoryMethodDiscrete:function(e){return new Z.DiscreteInterpolant(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodLinear:function(e){return new Z.LinearInterpolant(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodSmooth:function(e){return new Z.CubicInterpolant(this.times,this.values,this.getValueSize(),e)},setInterpolation:function(e){var t;switch(e){case Z.InterpolateDiscrete:t=this.InterpolantFactoryMethodDiscrete;break;case Z.InterpolateLinear:t=this.InterpolantFactoryMethodLinear;break;case Z.InterpolateSmooth:t=this.InterpolantFactoryMethodSmooth}if(void 0!==t)this.createInterpolant=t;else{var r=\"unsupported interpolation for \"+this.ValueTypeName+\" keyframe track named \"+this.name;if(void 0===this.createInterpolant){if(e===this.DefaultInterpolation)throw new Error(r);this.setInterpolation(this.DefaultInterpolation)}console.warn(r)}},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Z.InterpolateDiscrete;case this.InterpolantFactoryMethodLinear:return Z.InterpolateLinear;case this.InterpolantFactoryMethodSmooth:return Z.InterpolateSmooth}},getValueSize:function(){return this.values.length/this.times.length},shift:function(e){if(0!==e)for(var t=this.times,r=0,n=t.length;r!==n;++r)t[r]+=e;return this},scale:function(e){if(1!==e)for(var t=this.times,r=0,n=t.length;r!==n;++r)t[r]*=e;return this},trim:function(e,t){for(var r=this.times,n=r.length,i=0,o=n-1;i!==n&&r[i]<e;)++i;for(;-1!==o&&r[o]>t;)--o;if(++o,0!==i||o!==n){i>=o&&(i=(o=Math.max(o,1))-1);var a=this.getValueSize();this.times=Z.AnimationUtils.arraySlice(r,i,o),this.values=Z.AnimationUtils.arraySlice(this.values,i*a,o*a)}return this},validate:function(){var e=!0,t=this.getValueSize();t-Math.floor(t)!=0&&(console.error(\"invalid value size in track\",this),e=!1);var r=this.times,n=this.values,i=r.length;0===i&&(console.error(\"track is empty\",this),e=!1);for(var o=null,a=0;a!==i;a++){var s=r[a];if(\"number\"==typeof s&&isNaN(s)){console.error(\"time is not a valid number\",this,a,s),e=!1;break}if(null!==o&&o>s){console.error(\"out of order keys\",this,a,s,o),e=!1;break}o=s}if(void 0!==n&&Z.AnimationUtils.isTypedArray(n)){a=0;for(var c=n.length;a!==c;++a){var l=n[a];if(isNaN(l)){console.error(\"value is not a valid number\",this,a,l),e=!1;break}}}return e},optimize:function(){for(var e=this.times,t=this.values,r=this.getValueSize(),n=1,i=1,o=e.length-1;i<=o;++i){var a=!1,s=e[i];if(s!==e[i+1]&&(1!==i||s!==s[0]))for(var c=i*r,l=c-r,u=c+r,h=0;h!==r;++h){var d=t[c+h];if(d!==t[l+h]||d!==t[u+h]){a=!0;break}}if(a){if(i!==n){e[n]=e[i];var p=i*r,f=n*r;for(h=0;h!==r;++h)t[f+h]=t[p+h]}++n}}return n!==e.length&&(this.times=Z.AnimationUtils.arraySlice(e,0,n),this.values=Z.AnimationUtils.arraySlice(t,0,n*r)),this}},Object.assign(Z.KeyframeTrack,{parse:function(e){if(void 0===e.type)throw new Error(\"track type undefined, can not parse\");var t=Z.KeyframeTrack._getTrackTypeForValueTypeName(e.type);if(void 0===e.times){var r=[],n=[];Z.AnimationUtils.flattenJSON(e.keys,r,n,\"value\"),e.times=r,e.values=n}return void 0!==t.parse?t.parse(e):new t(e.name,e.times,e.values,e.interpolation)},toJSON:function(e){var t,r=e.constructor;if(void 0!==r.toJSON)t=r.toJSON(e);else{t={name:e.name,times:Z.AnimationUtils.convertArray(e.times,Array),values:Z.AnimationUtils.convertArray(e.values,Array)};var n=e.getInterpolation();n!==e.DefaultInterpolation&&(t.interpolation=n)}return t.type=e.ValueTypeName,t},_getTrackTypeForValueTypeName:function(e){switch(e.toLowerCase()){case\"scalar\":case\"double\":case\"float\":case\"number\":case\"integer\":return Z.NumberKeyframeTrack;case\"vector\":case\"vector2\":case\"vector3\":case\"vector4\":return Z.VectorKeyframeTrack;case\"color\":return Z.ColorKeyframeTrack;case\"quaternion\":return Z.QuaternionKeyframeTrack;case\"bool\":case\"boolean\":return Z.BooleanKeyframeTrack;case\"string\":return Z.StringKeyframeTrack}throw new Error(\"Unsupported typeName: \"+e)}}),Z.PropertyBinding=function(e,t,r){this.path=t,this.parsedPath=r||Z.PropertyBinding.parseTrackName(t),this.node=Z.PropertyBinding.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e},Z.PropertyBinding.prototype={constructor:Z.PropertyBinding,getValue:function(e,t){this.bind(),this.getValue(e,t)},setValue:function(e,t){this.bind(),this.setValue(e,t)},bind:function(){var e=this.node,t=this.parsedPath,r=t.objectName,n=t.propertyName,i=t.propertyIndex;if(e||(e=Z.PropertyBinding.findNode(this.rootNode,t.nodeName)||this.rootNode,this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,e){if(r){var o=t.objectIndex;switch(r){case\"materials\":if(!e.material)return void console.error(\"  can not bind to material as node does not have a material\",this);if(!e.material.materials)return void console.error(\"  can not bind to material.materials as node.material does not have a materials array\",this);e=e.material.materials;break;case\"bones\":if(!e.skeleton)return void console.error(\"  can not bind to bones as node does not have a skeleton\",this);e=e.skeleton.bones;for(var a=0;a<e.length;a++)if(e[a].name===o){o=a;break}break;default:if(void 0===e[r])return void console.error(\"  can not bind to objectName of node, undefined\",this);e=e[r]}if(void 0!==o){if(void 0===e[o])return void console.error(\"  trying to bind to objectIndex of objectName, but is undefined:\",this,e);e=e[o]}}var s=e[n];if(void 0!==s){var c=this.Versioning.None;void 0!==e.needsUpdate?(c=this.Versioning.NeedsUpdate,this.targetObject=e):void 0!==e.matrixWorldNeedsUpdate&&(c=this.Versioning.MatrixWorldNeedsUpdate,this.targetObject=e);var l=this.BindingType.Direct;if(void 0!==i){if(\"morphTargetInfluences\"===n){if(!e.geometry)return void console.error(\"  can not bind to morphTargetInfluences becasuse node does not have a geometry\",this);if(!e.geometry.morphTargets)return void console.error(\"  can not bind to morphTargetInfluences becasuse node does not have a geometry.morphTargets\",this);for(a=0;a<this.node.geometry.morphTargets.length;a++)if(e.geometry.morphTargets[a].name===i){i=a;break}}l=this.BindingType.ArrayElement,this.resolvedProperty=s,this.propertyIndex=i}else void 0!==s.fromArray&&void 0!==s.toArray?(l=this.BindingType.HasFromToArray,this.resolvedProperty=s):void 0!==s.length?(l=this.BindingType.EntireArray,this.resolvedProperty=s):this.propertyName=n;this.getValue=this.GetterByBindingType[l],this.setValue=this.SetterByBindingTypeAndVersioning[l][c]}else{var u=t.nodeName;console.error(\"  trying to update property for track: \"+u+\".\"+n+\" but it wasn't found.\",e)}}else console.error(\"  trying to update node for track: \"+this.path+\" but it wasn't found.\")},unbind:function(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}},Object.assign(Z.PropertyBinding.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},_getValue_unbound:Z.PropertyBinding.prototype.getValue,_setValue_unbound:Z.PropertyBinding.prototype.setValue,BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(e,t){e[t]=this.node[this.propertyName]},function(e,t){for(var r=this.resolvedProperty,n=0,i=r.length;n!==i;++n)e[t++]=r[n]},function(e,t){e[t]=this.resolvedProperty[this.propertyIndex]},function(e,t){this.resolvedProperty.toArray(e,t)}],SetterByBindingTypeAndVersioning:[[function(e,t){this.node[this.propertyName]=e[t]},function(e,t){this.node[this.propertyName]=e[t],this.targetObject.needsUpdate=!0},function(e,t){this.node[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,t){for(var r=this.resolvedProperty,n=0,i=r.length;n!==i;++n)r[n]=e[t++]},function(e,t){for(var r=this.resolvedProperty,n=0,i=r.length;n!==i;++n)r[n]=e[t++];this.targetObject.needsUpdate=!0},function(e,t){for(var r=this.resolvedProperty,n=0,i=r.length;n!==i;++n)r[n]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,t){this.resolvedProperty[this.propertyIndex]=e[t]},function(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0},function(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,t){this.resolvedProperty.fromArray(e,t)},function(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0},function(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}]]}),Z.PropertyBinding.Composite=function(e,t,r){var n=r||Z.PropertyBinding.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,n)},Z.PropertyBinding.Composite.prototype={constructor:Z.PropertyBinding.Composite,getValue:function(e,t){this.bind();var r=this._targetGroup.nCachedObjects_,n=this._bindings[r];void 0!==n&&n.getValue(e,t)},setValue:function(e,t){for(var r=this._bindings,n=this._targetGroup.nCachedObjects_,i=r.length;n!==i;++n)r[n].setValue(e,t)},bind:function(){for(var e=this._bindings,t=this._targetGroup.nCachedObjects_,r=e.length;t!==r;++t)e[t].bind()},unbind:function(){for(var e=this._bindings,t=this._targetGroup.nCachedObjects_,r=e.length;t!==r;++t)e[t].unbind()}},Z.PropertyBinding.create=function(e,t,r){return e instanceof Z.AnimationObjectGroup?new Z.PropertyBinding.Composite(e,t,r):new Z.PropertyBinding(e,t,r)},Z.PropertyBinding.parseTrackName=function(e){var t=/^(([\\w]+\\/)*)([\\w-\\d]+)?(\\.([\\w]+)(\\[([\\w\\d\\[\\]\\_.:\\- ]+)\\])?)?(\\.([\\w.]+)(\\[([\\w\\d\\[\\]\\_. ]+)\\])?)$/,r=t.exec(e);if(!r)throw new Error(\"cannot parse trackName at all: \"+e);r.index===t.lastIndex&&t.lastIndex++;var n={nodeName:r[3],objectName:r[5],objectIndex:r[7],propertyName:r[9],propertyIndex:r[11]};if(null===n.propertyName||0===n.propertyName.length)throw new Error(\"can not parse propertyName from trackName: \"+e);return n},Z.PropertyBinding.findNode=function(e,t){if(!t||\"\"===t||\"root\"===t||\".\"===t||-1===t||t===e.name||t===e.uuid)return e;if(e.skeleton){var r=function(e){for(var r=0;r<e.bones.length;r++){var n=e.bones[r];if(n.name===t)return n}return null}(e.skeleton);if(r)return r}if(e.children){var n=function(e){for(var r=0;r<e.length;r++){var i=e[r];if(i.name===t||i.uuid===t)return i;var o=n(i.children);if(o)return o}return null},i=n(e.children);if(i)return i}return null},Z.PropertyMixer=function(e,t,r){this.binding=e,this.valueSize=r;var n,i=Float64Array;switch(t){case\"quaternion\":n=this._slerp;break;case\"string\":case\"bool\":i=Array,n=this._select;break;default:n=this._lerp}this.buffer=new i(4*r),this._mixBufferRegion=n,this.cumulativeWeight=0,this.useCount=0,this.referenceCount=0},Z.PropertyMixer.prototype={constructor:Z.PropertyMixer,accumulate:function(e,t){var r=this.buffer,n=this.valueSize,i=e*n+n,o=this.cumulativeWeight;if(0===o){for(var a=0;a!==n;++a)r[i+a]=r[a];o=t}else{var s=t/(o+=t);this._mixBufferRegion(r,i,0,s,n)}this.cumulativeWeight=o},apply:function(e){var t=this.valueSize,r=this.buffer,n=e*t+t,i=this.cumulativeWeight,o=this.binding;if(this.cumulativeWeight=0,i<1){var a=3*t;this._mixBufferRegion(r,n,a,1-i,t)}for(var s=t,c=t+t;s!==c;++s)if(r[s]!==r[s+t]){o.setValue(r,n);break}},saveOriginalState:function(){var e=this.binding,t=this.buffer,r=this.valueSize,n=3*r;e.getValue(t,n);for(var i=r,o=n;i!==o;++i)t[i]=t[n+i%r];this.cumulativeWeight=0},restoreOriginalState:function(){var e=3*this.valueSize;this.binding.setValue(this.buffer,e)},_select:function(e,t,r,n,i){if(n>=.5)for(var o=0;o!==i;++o)e[t+o]=e[r+o]},_slerp:function(e,t,r,n,i){Z.Quaternion.slerpFlat(e,t,e,t,e,r,n)},_lerp:function(e,t,r,n,i){for(var o=1-n,a=0;a!==i;++a){var s=t+a;e[s]=e[s]*o+e[r+a]*n}}},Z.BooleanKeyframeTrack=function(e,t,r){Z.KeyframeTrack.call(this,e,t,r)},Z.BooleanKeyframeTrack.prototype=Object.assign(Object.create(Z.KeyframeTrack.prototype),{constructor:Z.BooleanKeyframeTrack,ValueTypeName:\"bool\",ValueBufferType:Array,DefaultInterpolation:Z.InterpolateDiscrete,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),Z.ColorKeyframeTrack=function(e,t,r,n){Z.KeyframeTrack.call(this,e,t,r,n)},Z.ColorKeyframeTrack.prototype=Object.assign(Object.create(Z.KeyframeTrack.prototype),{constructor:Z.ColorKeyframeTrack,ValueTypeName:\"color\"}),Z.NumberKeyframeTrack=function(e,t,r,n){Z.KeyframeTrack.call(this,e,t,r,n)},Z.NumberKeyframeTrack.prototype=Object.assign(Object.create(Z.KeyframeTrack.prototype),{constructor:Z.NumberKeyframeTrack,ValueTypeName:\"number\"}),Z.QuaternionKeyframeTrack=function(e,t,r,n){Z.KeyframeTrack.call(this,e,t,r,n)},Z.QuaternionKeyframeTrack.prototype=Object.assign(Object.create(Z.KeyframeTrack.prototype),{constructor:Z.QuaternionKeyframeTrack,ValueTypeName:\"quaternion\",DefaultInterpolation:Z.InterpolateLinear,InterpolantFactoryMethodLinear:function(e){return new Z.QuaternionLinearInterpolant(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodSmooth:void 0}),Z.StringKeyframeTrack=function(e,t,r,n){Z.KeyframeTrack.call(this,e,t,r,n)},Z.StringKeyframeTrack.prototype=Object.assign(Object.create(Z.KeyframeTrack.prototype),{constructor:Z.StringKeyframeTrack,ValueTypeName:\"string\",ValueBufferType:Array,DefaultInterpolation:Z.InterpolateDiscrete,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),Z.VectorKeyframeTrack=function(e,t,r,n){Z.KeyframeTrack.call(this,e,t,r,n)},Z.VectorKeyframeTrack.prototype=Object.assign(Object.create(Z.KeyframeTrack.prototype),{constructor:Z.VectorKeyframeTrack,ValueTypeName:\"vector\"}),Z.Audio=function(e){Z.Object3D.call(this),this.type=\"Audio\",this.context=e.context,this.source=this.context.createBufferSource(),this.source.onended=this.onEnded.bind(this),this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.startTime=0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.sourceType=\"empty\",this.filters=[]},Z.Audio.prototype=Object.assign(Object.create(Z.Object3D.prototype),{constructor:Z.Audio,getOutput:function(){return this.gain},setNodeSource:function(e){return this.hasPlaybackControl=!1,this.sourceType=\"audioNode\",this.source=e,this.connect(),this},setBuffer:function(e){return this.source.buffer=e,this.sourceType=\"buffer\",this.autoplay&&this.play(),this},play:function(){if(!0!==this.isPlaying){if(!1!==this.hasPlaybackControl){var e=this.context.createBufferSource();return e.buffer=this.source.buffer,e.loop=this.source.loop,e.onended=this.source.onended,e.start(0,this.startTime),e.playbackRate.value=this.playbackRate,this.isPlaying=!0,this.source=e,this.connect()}console.warn(\"THREE.Audio: this Audio has no playback control.\")}else console.warn(\"THREE.Audio: Audio is already playing.\")},pause:function(){if(!1!==this.hasPlaybackControl)return this.source.stop(),this.startTime=this.context.currentTime,this.isPlaying=!1,this;console.warn(\"THREE.Audio: this Audio has no playback control.\")},stop:function(){if(!1!==this.hasPlaybackControl)return this.source.stop(),this.startTime=0,this.isPlaying=!1,this;console.warn(\"THREE.Audio: this Audio has no playback control.\")},connect:function(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(var e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this},disconnect:function(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(var e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this},getFilters:function(){return this.filters},setFilters:function(e){return e||(e=[]),!0===this.isPlaying?(this.disconnect(),this.filters=e,this.connect()):this.filters=e,this},getFilter:function(){return this.getFilters()[0]},setFilter:function(e){return this.setFilters(e?[e]:[])},setPlaybackRate:function(e){if(!1!==this.hasPlaybackControl)return this.playbackRate=e,!0===this.isPlaying&&(this.source.playbackRate.value=this.playbackRate),this;console.warn(\"THREE.Audio: this Audio has no playback control.\")},getPlaybackRate:function(){return this.playbackRate},onEnded:function(){this.isPlaying=!1},getLoop:function(){return!1===this.hasPlaybackControl?(console.warn(\"THREE.Audio: this Audio has no playback control.\"),!1):this.source.loop},setLoop:function(e){!1!==this.hasPlaybackControl?this.source.loop=e:console.warn(\"THREE.Audio: this Audio has no playback control.\")},getVolume:function(){return this.gain.gain.value},setVolume:function(e){return this.gain.gain.value=e,this}}),Z.AudioAnalyser=function(e,t){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=void 0!==t?t:2048,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)},Object.assign(Z.AudioAnalyser.prototype,{getFrequencyData:function(){return this.analyser.getByteFrequencyData(this.data),this.data},getAverageFrequency:function(){for(var e=0,t=this.getFrequencyData(),r=0;r<t.length;r++)e+=t[r];return e/t.length}}),Object.defineProperty(Z,\"AudioContext\",{get:function(){return void 0===U&&(U=new(window.AudioContext||window.webkitAudioContext)),U}}),Z.PositionalAudio=function(e){Z.Audio.call(this,e),this.panner=this.context.createPanner(),this.panner.connect(this.gain)},Z.PositionalAudio.prototype=Object.assign(Object.create(Z.Audio.prototype),{constructor:Z.PositionalAudio,getOutput:function(){return this.panner},getRefDistance:function(){return this.panner.refDistance},setRefDistance:function(e){this.panner.refDistance=e},getRolloffFactor:function(){return this.panner.rolloffFactor},setRolloffFactor:function(e){this.panner.rolloffFactor=e},getDistanceModel:function(){return this.panner.distanceModel},setDistanceModel:function(e){this.panner.distanceModel=e},getMaxDistance:function(){return this.panner.maxDistance},setMaxDistance:function(e){this.panner.maxDistance=e},updateMatrixWorld:function(){var e=new Z.Vector3;return function(t){Z.Object3D.prototype.updateMatrixWorld.call(this,t),e.setFromMatrixPosition(this.matrixWorld),this.panner.setPosition(e.x,e.y,e.z)}}()}),Z.AudioListener=function(){Z.Object3D.call(this),this.type=\"AudioListener\",this.context=Z.AudioContext,this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null},Z.AudioListener.prototype=Object.assign(Object.create(Z.Object3D.prototype),{constructor:Z.AudioListener,getInput:function(){return this.gain},removeFilter:function(){null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null)},getFilter:function(){return this.filter},setFilter:function(e){null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination)},getMasterVolume:function(){return this.gain.gain.value},setMasterVolume:function(e){this.gain.gain.value=e},updateMatrixWorld:function(){var e=new Z.Vector3,t=new Z.Quaternion,r=new Z.Vector3,n=new Z.Vector3;return function(i){Z.Object3D.prototype.updateMatrixWorld.call(this,i);var o=this.context.listener,a=this.up;this.matrixWorld.decompose(e,t,r),n.set(0,0,-1).applyQuaternion(t),o.setPosition(e.x,e.y,e.z),o.setOrientation(n.x,n.y,n.z,a.x,a.y,a.z)}}()}),Z.Camera=function(){Z.Object3D.call(this),this.type=\"Camera\",this.matrixWorldInverse=new Z.Matrix4,this.projectionMatrix=new Z.Matrix4},Z.Camera.prototype=Object.create(Z.Object3D.prototype),Z.Camera.prototype.constructor=Z.Camera,Z.Camera.prototype.getWorldDirection=function(){var e=new Z.Quaternion;return function(t){var r=t||new Z.Vector3;return this.getWorldQuaternion(e),r.set(0,0,-1).applyQuaternion(e)}}(),Z.Camera.prototype.lookAt=function(){var e=new Z.Matrix4;return function(t){e.lookAt(this.position,t,this.up),this.quaternion.setFromRotationMatrix(e)}}(),Z.Camera.prototype.clone=function(){return(new this.constructor).copy(this)},Z.Camera.prototype.copy=function(e){return Z.Object3D.prototype.copy.call(this,e),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this},Z.CubeCamera=function(e,t,r){Z.Object3D.call(this),this.type=\"CubeCamera\";var n=new Z.PerspectiveCamera(90,1,e,t);n.up.set(0,-1,0),n.lookAt(new Z.Vector3(1,0,0)),this.add(n);var i=new Z.PerspectiveCamera(90,1,e,t);i.up.set(0,-1,0),i.lookAt(new Z.Vector3(-1,0,0)),this.add(i);var o=new Z.PerspectiveCamera(90,1,e,t);o.up.set(0,0,1),o.lookAt(new Z.Vector3(0,1,0)),this.add(o);var a=new Z.PerspectiveCamera(90,1,e,t);a.up.set(0,0,-1),a.lookAt(new Z.Vector3(0,-1,0)),this.add(a);var s=new Z.PerspectiveCamera(90,1,e,t);s.up.set(0,-1,0),s.lookAt(new Z.Vector3(0,0,1)),this.add(s);var c=new Z.PerspectiveCamera(90,1,e,t);c.up.set(0,-1,0),c.lookAt(new Z.Vector3(0,0,-1)),this.add(c);var l={format:Z.RGBFormat,magFilter:Z.LinearFilter,minFilter:Z.LinearFilter};this.renderTarget=new Z.WebGLRenderTargetCube(r,r,l),this.updateCubeMap=function(e,t){null===this.parent&&this.updateMatrixWorld();var r=this.renderTarget,l=r.texture.generateMipmaps;r.texture.generateMipmaps=!1,r.activeCubeFace=0,e.render(t,n,r),r.activeCubeFace=1,e.render(t,i,r),r.activeCubeFace=2,e.render(t,o,r),r.activeCubeFace=3,e.render(t,a,r),r.activeCubeFace=4,e.render(t,s,r),r.texture.generateMipmaps=l,r.activeCubeFace=5,e.render(t,c,r),e.setRenderTarget(null)}},Z.CubeCamera.prototype=Object.create(Z.Object3D.prototype),Z.CubeCamera.prototype.constructor=Z.CubeCamera,Z.OrthographicCamera=function(e,t,r,n,i,o){Z.Camera.call(this),this.type=\"OrthographicCamera\",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=r,this.bottom=n,this.near=void 0!==i?i:.1,this.far=void 0!==o?o:2e3,this.updateProjectionMatrix()},Z.OrthographicCamera.prototype=Object.assign(Object.create(Z.Camera.prototype),{constructor:Z.OrthographicCamera,copy:function(e){return Z.Camera.prototype.copy.call(this,e),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=null===e.view?null:Object.assign({},e.view),this},setViewOffset:function(e,t,r,n,i,o){this.view={fullWidth:e,fullHeight:t,offsetX:r,offsetY:n,width:i,height:o},this.updateProjectionMatrix()},clearViewOffset:function(){this.view=null,this.updateProjectionMatrix()},updateProjectionMatrix:function(){var e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),r=(this.right+this.left)/2,n=(this.top+this.bottom)/2,i=r-e,o=r+e,a=n+t,s=n-t;if(null!==this.view){var c=this.zoom/(this.view.width/this.view.fullWidth),l=this.zoom/(this.view.height/this.view.fullHeight),u=(this.right-this.left)/this.view.width,h=(this.top-this.bottom)/this.view.height;o=(i+=u*(this.view.offsetX/c))+u*(this.view.width/c),s=(a-=h*(this.view.offsetY/l))-h*(this.view.height/l)}this.projectionMatrix.makeOrthographic(i,o,a,s,this.near,this.far)},toJSON:function(e){var t=Z.Object3D.prototype.toJSON.call(this,e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,null!==this.view&&(t.object.view=Object.assign({},this.view)),t}}),Z.PerspectiveCamera=function(e,t,r,n){Z.Camera.call(this),this.type=\"PerspectiveCamera\",this.fov=void 0!==e?e:50,this.zoom=1,this.near=void 0!==r?r:.1,this.far=void 0!==n?n:2e3,this.focus=10,this.aspect=void 0!==t?t:1,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()},Z.PerspectiveCamera.prototype=Object.assign(Object.create(Z.Camera.prototype),{constructor:Z.PerspectiveCamera,copy:function(e){return Z.Camera.prototype.copy.call(this,e),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=null===e.view?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this},setFocalLength:function(e){var t=.5*this.getFilmHeight()/e;this.fov=2*Z.Math.RAD2DEG*Math.atan(t),this.updateProjectionMatrix()},getFocalLength:function(){var e=Math.tan(.5*Z.Math.DEG2RAD*this.fov);return.5*this.getFilmHeight()/e},getEffectiveFOV:function(){return 2*Z.Math.RAD2DEG*Math.atan(Math.tan(.5*Z.Math.DEG2RAD*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(e,t,r,n,i,o){this.aspect=e/t,this.view={fullWidth:e,fullHeight:t,offsetX:r,offsetY:n,width:i,height:o},this.updateProjectionMatrix()},clearViewOffset:function(){this.view=null,this.updateProjectionMatrix()},updateProjectionMatrix:function(){var e=this.near,t=e*Math.tan(.5*Z.Math.DEG2RAD*this.fov)/this.zoom,r=2*t,n=this.aspect*r,i=-.5*n,o=this.view;if(null!==o){var a=o.fullWidth,s=o.fullHeight;i+=o.offsetX*n/a,t-=o.offsetY*r/s,n*=o.width/a,r*=o.height/s}var c=this.filmOffset;0!==c&&(i+=e*c/this.getFilmWidth()),this.projectionMatrix.makeFrustum(i,i+n,t-r,t,e,this.far)},toJSON:function(e){var t=Z.Object3D.prototype.toJSON.call(this,e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,null!==this.view&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}),Z.StereoCamera=function(){this.type=\"StereoCamera\",this.aspect=1,this.cameraL=new Z.PerspectiveCamera,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new Z.PerspectiveCamera,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1},Object.assign(Z.StereoCamera.prototype,{update:(V=new Z.Matrix4,G=new Z.Matrix4,function(e){if(I!==e.focus||F!==e.fov||N!==e.aspect*this.aspect||B!==e.near||O!==e.far){I=e.focus,F=e.fov,N=e.aspect*this.aspect,B=e.near,O=e.far;var t,r,n=e.projectionMatrix.clone(),i=.032*B/I,o=B*Math.tan(Z.Math.DEG2RAD*F*.5);G.elements[12]=-.032,V.elements[12]=.032,t=-o*N+i,r=o*N+i,n.elements[0]=2*B/(r-t),n.elements[8]=(r+t)/(r-t),this.cameraL.projectionMatrix.copy(n),t=-o*N-i,r=o*N-i,n.elements[0]=2*B/(r-t),n.elements[8]=(r+t)/(r-t),this.cameraR.projectionMatrix.copy(n)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(G),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(V)})}),Z.Light=function(e,t){Z.Object3D.call(this),this.type=\"Light\",this.color=new Z.Color(e),this.intensity=void 0!==t?t:1,this.receiveShadow=void 0},Z.Light.prototype=Object.assign(Object.create(Z.Object3D.prototype),{constructor:Z.Light,copy:function(e){return Z.Object3D.prototype.copy.call(this,e),this.color.copy(e.color),this.intensity=e.intensity,this},toJSON:function(e){var t=Z.Object3D.prototype.toJSON.call(this,e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,void 0!==this.groundColor&&(t.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(t.object.distance=this.distance),void 0!==this.angle&&(t.object.angle=this.angle),void 0!==this.decay&&(t.object.decay=this.decay),void 0!==this.penumbra&&(t.object.penumbra=this.penumbra),t}}),Z.LightShadow=function(e){this.camera=e,this.bias=0,this.radius=1,this.mapSize=new Z.Vector2(512,512),this.map=null,this.matrix=new Z.Matrix4},Object.assign(Z.LightShadow.prototype,{copy:function(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this},clone:function(){return(new this.constructor).copy(this)}}),Z.AmbientLight=function(e,t){Z.Light.call(this,e,t),this.type=\"AmbientLight\",this.castShadow=void 0},Z.AmbientLight.prototype=Object.assign(Object.create(Z.Light.prototype),{constructor:Z.AmbientLight}),Z.DirectionalLight=function(e,t){Z.Light.call(this,e,t),this.type=\"DirectionalLight\",this.position.copy(Z.Object3D.DefaultUp),this.updateMatrix(),this.target=new Z.Object3D,this.shadow=new Z.DirectionalLightShadow},Z.DirectionalLight.prototype=Object.assign(Object.create(Z.Light.prototype),{constructor:Z.DirectionalLight,copy:function(e){return Z.Light.prototype.copy.call(this,e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}),Z.DirectionalLightShadow=function(e){Z.LightShadow.call(this,new Z.OrthographicCamera(-5,5,5,-5,.5,500))},Z.DirectionalLightShadow.prototype=Object.assign(Object.create(Z.LightShadow.prototype),{constructor:Z.DirectionalLightShadow}),Z.HemisphereLight=function(e,t,r){Z.Light.call(this,e,r),this.type=\"HemisphereLight\",this.castShadow=void 0,this.position.copy(Z.Object3D.DefaultUp),this.updateMatrix(),this.groundColor=new Z.Color(t)},Z.HemisphereLight.prototype=Object.assign(Object.create(Z.Light.prototype),{constructor:Z.HemisphereLight,copy:function(e){return Z.Light.prototype.copy.call(this,e),this.groundColor.copy(e.groundColor),this}}),Z.PointLight=function(e,t,r,n){Z.Light.call(this,e,t),this.type=\"PointLight\",Object.defineProperty(this,\"power\",{get:function(){return 4*this.intensity*Math.PI},set:function(e){this.intensity=e/(4*Math.PI)}}),this.distance=void 0!==r?r:0,this.decay=void 0!==n?n:1,this.shadow=new Z.LightShadow(new Z.PerspectiveCamera(90,1,.5,500))},Z.PointLight.prototype=Object.assign(Object.create(Z.Light.prototype),{constructor:Z.PointLight,copy:function(e){return Z.Light.prototype.copy.call(this,e),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}),Z.SpotLight=function(e,t,r,n,i,o){Z.Light.call(this,e,t),this.type=\"SpotLight\",this.position.copy(Z.Object3D.DefaultUp),this.updateMatrix(),this.target=new Z.Object3D,Object.defineProperty(this,\"power\",{get:function(){return this.intensity*Math.PI},set:function(e){this.intensity=e/Math.PI}}),this.distance=void 0!==r?r:0,this.angle=void 0!==n?n:Math.PI/3,this.penumbra=void 0!==i?i:0,this.decay=void 0!==o?o:1,this.shadow=new Z.SpotLightShadow},Z.SpotLight.prototype=Object.assign(Object.create(Z.Light.prototype),{constructor:Z.SpotLight,copy:function(e){return Z.Light.prototype.copy.call(this,e),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}),Z.SpotLightShadow=function(){Z.LightShadow.call(this,new Z.PerspectiveCamera(50,1,.5,500))},Z.SpotLightShadow.prototype=Object.assign(Object.create(Z.LightShadow.prototype),{constructor:Z.SpotLightShadow,update:function(e){var t=2*Z.Math.RAD2DEG*e.angle,r=this.mapSize.width/this.mapSize.height,n=e.distance||500,i=this.camera;t===i.fov&&r===i.aspect&&n===i.far||(i.fov=t,i.aspect=r,i.far=n,i.updateProjectionMatrix())}}),Z.AudioLoader=function(e){this.manager=void 0!==e?e:Z.DefaultLoadingManager},Object.assign(Z.AudioLoader.prototype,{load:function(e,t,r,n){var i=new Z.XHRLoader(this.manager);i.setResponseType(\"arraybuffer\"),i.load(e,function(e){Z.AudioContext.decodeAudioData(e,function(e){t(e)})},r,n)}}),Z.Cache={enabled:!1,files:{},add:function(e,t){!1!==this.enabled&&(this.files[e]=t)},get:function(e){if(!1!==this.enabled)return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}},Z.Loader=function(){this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){}},Z.Loader.prototype={constructor:Z.Loader,crossOrigin:void 0,extractUrlBase:function(e){var t=e.split(\"/\");return 1===t.length?\"./\":(t.pop(),t.join(\"/\")+\"/\")},initMaterials:function(e,t,r){for(var n=[],i=0;i<e.length;++i)n[i]=this.createMaterial(e[i],t,r);return n},createMaterial:function(e,t,r){void 0===z&&(z=new Z.Color),void 0===k&&(k=new Z.TextureLoader),void 0===j&&(j=new Z.MaterialLoader);var n={};function i(e,i,o,a,s){var c,l=t+e,u=Z.Loader.Handlers.get(l);null!==u?c=u.load(l):(k.setCrossOrigin(r),c=k.load(l)),void 0!==i&&(c.repeat.fromArray(i),1!==i[0]&&(c.wrapS=Z.RepeatWrapping),1!==i[1]&&(c.wrapT=Z.RepeatWrapping)),void 0!==o&&c.offset.fromArray(o),void 0!==a&&(\"repeat\"===a[0]&&(c.wrapS=Z.RepeatWrapping),\"mirror\"===a[0]&&(c.wrapS=Z.MirroredRepeatWrapping),\"repeat\"===a[1]&&(c.wrapT=Z.RepeatWrapping),\"mirror\"===a[1]&&(c.wrapT=Z.MirroredRepeatWrapping)),void 0!==s&&(c.anisotropy=s);var h=Z.Math.generateUUID();return n[h]=c,h}var o={uuid:Z.Math.generateUUID(),type:\"MeshLambertMaterial\"};for(var a in e){var s=e[a];switch(a){case\"DbgColor\":case\"DbgIndex\":case\"opticalDensity\":case\"illumination\":break;case\"DbgName\":o.name=s;break;case\"blending\":o.blending=Z[s];break;case\"colorAmbient\":case\"mapAmbient\":console.warn(\"THREE.Loader.createMaterial:\",a,\"is no longer supported.\");break;case\"colorDiffuse\":o.color=z.fromArray(s).getHex();break;case\"colorSpecular\":o.specular=z.fromArray(s).getHex();break;case\"colorEmissive\":o.emissive=z.fromArray(s).getHex();break;case\"specularCoef\":o.shininess=s;break;case\"shading\":\"basic\"===s.toLowerCase()&&(o.type=\"MeshBasicMaterial\"),\"phong\"===s.toLowerCase()&&(o.type=\"MeshPhongMaterial\"),\"standard\"===s.toLowerCase()&&(o.type=\"MeshStandardMaterial\");break;case\"mapDiffuse\":o.map=i(s,e.mapDiffuseRepeat,e.mapDiffuseOffset,e.mapDiffuseWrap,e.mapDiffuseAnisotropy);break;case\"mapDiffuseRepeat\":case\"mapDiffuseOffset\":case\"mapDiffuseWrap\":case\"mapDiffuseAnisotropy\":break;case\"mapEmissive\":o.emissiveMap=i(s,e.mapEmissiveRepeat,e.mapEmissiveOffset,e.mapEmissiveWrap,e.mapEmissiveAnisotropy);break;case\"mapEmissiveRepeat\":case\"mapEmissiveOffset\":case\"mapEmissiveWrap\":case\"mapEmissiveAnisotropy\":break;case\"mapLight\":o.lightMap=i(s,e.mapLightRepeat,e.mapLightOffset,e.mapLightWrap,e.mapLightAnisotropy);break;case\"mapLightRepeat\":case\"mapLightOffset\":case\"mapLightWrap\":case\"mapLightAnisotropy\":break;case\"mapAO\":o.aoMap=i(s,e.mapAORepeat,e.mapAOOffset,e.mapAOWrap,e.mapAOAnisotropy);break;case\"mapAORepeat\":case\"mapAOOffset\":case\"mapAOWrap\":case\"mapAOAnisotropy\":break;case\"mapBump\":o.bumpMap=i(s,e.mapBumpRepeat,e.mapBumpOffset,e.mapBumpWrap,e.mapBumpAnisotropy);break;case\"mapBumpScale\":o.bumpScale=s;break;case\"mapBumpRepeat\":case\"mapBumpOffset\":case\"mapBumpWrap\":case\"mapBumpAnisotropy\":break;case\"mapNormal\":o.normalMap=i(s,e.mapNormalRepeat,e.mapNormalOffset,e.mapNormalWrap,e.mapNormalAnisotropy);break;case\"mapNormalFactor\":o.normalScale=[s,s];break;case\"mapNormalRepeat\":case\"mapNormalOffset\":case\"mapNormalWrap\":case\"mapNormalAnisotropy\":break;case\"mapSpecular\":o.specularMap=i(s,e.mapSpecularRepeat,e.mapSpecularOffset,e.mapSpecularWrap,e.mapSpecularAnisotropy);break;case\"mapSpecularRepeat\":case\"mapSpecularOffset\":case\"mapSpecularWrap\":case\"mapSpecularAnisotropy\":break;case\"mapMetalness\":o.metalnessMap=i(s,e.mapMetalnessRepeat,e.mapMetalnessOffset,e.mapMetalnessWrap,e.mapMetalnessAnisotropy);break;case\"mapMetalnessRepeat\":case\"mapMetalnessOffset\":case\"mapMetalnessWrap\":case\"mapMetalnessAnisotropy\":break;case\"mapRoughness\":o.roughnessMap=i(s,e.mapRoughnessRepeat,e.mapRoughnessOffset,e.mapRoughnessWrap,e.mapRoughnessAnisotropy);break;case\"mapRoughnessRepeat\":case\"mapRoughnessOffset\":case\"mapRoughnessWrap\":case\"mapRoughnessAnisotropy\":break;case\"mapAlpha\":o.alphaMap=i(s,e.mapAlphaRepeat,e.mapAlphaOffset,e.mapAlphaWrap,e.mapAlphaAnisotropy);break;case\"mapAlphaRepeat\":case\"mapAlphaOffset\":case\"mapAlphaWrap\":case\"mapAlphaAnisotropy\":break;case\"flipSided\":o.side=Z.BackSide;break;case\"doubleSided\":o.side=Z.DoubleSide;break;case\"transparency\":console.warn(\"THREE.Loader.createMaterial: transparency has been renamed to opacity\"),o.opacity=s;break;case\"depthTest\":case\"depthWrite\":case\"colorWrite\":case\"opacity\":case\"reflectivity\":case\"transparent\":case\"visible\":case\"wireframe\":o[a]=s;break;case\"vertexColors\":!0===s&&(o.vertexColors=Z.VertexColors),\"face\"===s&&(o.vertexColors=Z.FaceColors);break;default:console.error(\"THREE.Loader.createMaterial: Unsupported\",a,s)}}return\"MeshBasicMaterial\"===o.type&&delete o.emissive,\"MeshPhongMaterial\"!==o.type&&delete o.specular,o.opacity<1&&(o.transparent=!0),j.setTextures(n),j.parse(o)}},Z.Loader.Handlers={handlers:[],add:function(e,t){this.handlers.push(e,t)},get:function(e){for(var t=this.handlers,r=0,n=t.length;r<n;r+=2){var i=t[r],o=t[r+1];if(i.test(e))return o}return null}},Z.XHRLoader=function(e){this.manager=void 0!==e?e:Z.DefaultLoadingManager},Object.assign(Z.XHRLoader.prototype,{load:function(e,t,r,n){void 0!==this.path&&(e=this.path+e);var i=this,o=Z.Cache.get(e);if(void 0!==o)return i.manager.itemStart(e),setTimeout(function(){t&&t(o),i.manager.itemEnd(e)},0),o;var a=new XMLHttpRequest;return a.overrideMimeType(\"text/plain\"),a.open(\"GET\",e,!0),a.addEventListener(\"load\",function(r){var o=r.target.response;Z.Cache.add(e,o),200===this.status?(t&&t(o),i.manager.itemEnd(e)):0===this.status?(console.warn(\"THREE.XHRLoader: HTTP Status 0 received.\"),t&&t(o),i.manager.itemEnd(e)):(n&&n(r),i.manager.itemError(e))},!1),void 0!==r&&a.addEventListener(\"progress\",function(e){r(e)},!1),a.addEventListener(\"error\",function(t){n&&n(t),i.manager.itemError(e)},!1),void 0!==this.responseType&&(a.responseType=this.responseType),void 0!==this.withCredentials&&(a.withCredentials=this.withCredentials),a.send(null),i.manager.itemStart(e),a},setPath:function(e){return this.path=e,this},setResponseType:function(e){return this.responseType=e,this},setWithCredentials:function(e){return this.withCredentials=e,this}}),Z.FontLoader=function(e){this.manager=void 0!==e?e:Z.DefaultLoadingManager},Object.assign(Z.FontLoader.prototype,{load:function(e,t,r,n){var i=this;new Z.XHRLoader(this.manager).load(e,function(e){var r;try{r=JSON.parse(e)}catch(t){console.warn(\"THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.\"),r=JSON.parse(e.substring(65,e.length-2))}var n=i.parse(r);t&&t(n)},r,n)},parse:function(e){return new Z.Font(e)}}),Z.ImageLoader=function(e){this.manager=void 0!==e?e:Z.DefaultLoadingManager},Object.assign(Z.ImageLoader.prototype,{load:function(e,t,r,n){var i=this,o=document.createElementNS(\"http://www.w3.org/1999/xhtml\",\"img\");if(o.onload=function(){URL.revokeObjectURL(o.src),t&&t(o),i.manager.itemEnd(e)},0===e.indexOf(\"data:\"))o.src=e;else{var a=new Z.XHRLoader;a.setPath(this.path),a.setResponseType(\"blob\"),a.load(e,function(e){o.src=URL.createObjectURL(e)},r,n)}return i.manager.itemStart(e),o},setCrossOrigin:function(e){return this.crossOrigin=e,this},setPath:function(e){return this.path=e,this}}),Z.JSONLoader=function(e){\"boolean\"==typeof e&&(console.warn(\"THREE.JSONLoader: showStatus parameter has been removed from constructor.\"),e=void 0),this.manager=void 0!==e?e:Z.DefaultLoadingManager,this.withCredentials=!1},Object.assign(Z.JSONLoader.prototype,{load:function(e,t,r,n){var i=this,o=this.texturePath&&\"string\"==typeof this.texturePath?this.texturePath:Z.Loader.prototype.extractUrlBase(e),a=new Z.XHRLoader(this.manager);a.setWithCredentials(this.withCredentials),a.load(e,function(r){var n=JSON.parse(r),a=n.metadata;if(void 0!==a){var s=a.type;if(void 0!==s){if(\"object\"===s.toLowerCase())return void console.error(\"THREE.JSONLoader: \"+e+\" should be loaded with THREE.ObjectLoader instead.\");if(\"scene\"===s.toLowerCase())return void console.error(\"THREE.JSONLoader: \"+e+\" should be loaded with THREE.SceneLoader instead.\")}}var c=i.parse(n,o);t(c.geometry,c.materials)},r,n)},setTexturePath:function(e){this.texturePath=e},parse:function(e,t){var r=new Z.Geometry,n=void 0!==e.scale?1/e.scale:1;if(function(t){function n(e,t){return e&1<<t}var i,o,a,s,c,l,u,h,d,p,f,m,v,g,y,x,b,w,_,M,S,T,E,C,A,L,R,P=e.faces,D=e.vertices,U=e.normals,I=e.colors,F=0;if(void 0!==e.uvs){for(i=0;i<e.uvs.length;i++)e.uvs[i].length&&F++;for(i=0;i<F;i++)r.faceVertexUvs[i]=[]}s=0,c=D.length;for(;s<c;)(w=new Z.Vector3).x=D[s++]*t,w.y=D[s++]*t,w.z=D[s++]*t,r.vertices.push(w);s=0,c=P.length;for(;s<c;)if(p=P[s++],f=n(p,0),m=n(p,1),v=n(p,3),g=n(p,4),y=n(p,5),x=n(p,6),b=n(p,7),f){if((M=new Z.Face3).a=P[s],M.b=P[s+1],M.c=P[s+3],(S=new Z.Face3).a=P[s+1],S.b=P[s+2],S.c=P[s+3],s+=4,m&&(d=P[s++],M.materialIndex=d,S.materialIndex=d),a=r.faces.length,v)for(i=0;i<F;i++)for(C=e.uvs[i],r.faceVertexUvs[i][a]=[],r.faceVertexUvs[i][a+1]=[],o=0;o<4;o++)h=P[s++],L=C[2*h],R=C[2*h+1],A=new Z.Vector2(L,R),2!==o&&r.faceVertexUvs[i][a].push(A),0!==o&&r.faceVertexUvs[i][a+1].push(A);if(g&&(u=3*P[s++],M.normal.set(U[u++],U[u++],U[u]),S.normal.copy(M.normal)),y)for(i=0;i<4;i++)u=3*P[s++],E=new Z.Vector3(U[u++],U[u++],U[u]),2!==i&&M.vertexNormals.push(E),0!==i&&S.vertexNormals.push(E);if(x&&(l=P[s++],T=I[l],M.color.setHex(T),S.color.setHex(T)),b)for(i=0;i<4;i++)l=P[s++],T=I[l],2!==i&&M.vertexColors.push(new Z.Color(T)),0!==i&&S.vertexColors.push(new Z.Color(T));r.faces.push(M),r.faces.push(S)}else{if((_=new Z.Face3).a=P[s++],_.b=P[s++],_.c=P[s++],m&&(d=P[s++],_.materialIndex=d),a=r.faces.length,v)for(i=0;i<F;i++)for(C=e.uvs[i],r.faceVertexUvs[i][a]=[],o=0;o<3;o++)h=P[s++],L=C[2*h],R=C[2*h+1],A=new Z.Vector2(L,R),r.faceVertexUvs[i][a].push(A);if(g&&(u=3*P[s++],_.normal.set(U[u++],U[u++],U[u])),y)for(i=0;i<3;i++)u=3*P[s++],E=new Z.Vector3(U[u++],U[u++],U[u]),_.vertexNormals.push(E);if(x&&(l=P[s++],_.color.setHex(I[l])),b)for(i=0;i<3;i++)l=P[s++],_.vertexColors.push(new Z.Color(I[l]));r.faces.push(_)}}(n),function(){var t=void 0!==e.influencesPerVertex?e.influencesPerVertex:2;if(e.skinWeights)for(var n=0,i=e.skinWeights.length;n<i;n+=t){var o=e.skinWeights[n],a=t>1?e.skinWeights[n+1]:0,s=t>2?e.skinWeights[n+2]:0,c=t>3?e.skinWeights[n+3]:0;r.skinWeights.push(new Z.Vector4(o,a,s,c))}if(e.skinIndices)for(var n=0,i=e.skinIndices.length;n<i;n+=t){var l=e.skinIndices[n],u=t>1?e.skinIndices[n+1]:0,h=t>2?e.skinIndices[n+2]:0,d=t>3?e.skinIndices[n+3]:0;r.skinIndices.push(new Z.Vector4(l,u,h,d))}r.bones=e.bones,r.bones&&r.bones.length>0&&(r.skinWeights.length!==r.skinIndices.length||r.skinIndices.length!==r.vertices.length)&&console.warn(\"When skinning, number of vertices (\"+r.vertices.length+\"), skinIndices (\"+r.skinIndices.length+\"), and skinWeights (\"+r.skinWeights.length+\") should match.\")}(),function(t){if(void 0!==e.morphTargets)for(var n=0,i=e.morphTargets.length;n<i;n++){r.morphTargets[n]={},r.morphTargets[n].name=e.morphTargets[n].name,r.morphTargets[n].vertices=[];for(var o=r.morphTargets[n].vertices,a=e.morphTargets[n].vertices,s=0,c=a.length;s<c;s+=3){var l=new Z.Vector3;l.x=a[s]*t,l.y=a[s+1]*t,l.z=a[s+2]*t,o.push(l)}}if(void 0!==e.morphColors&&e.morphColors.length>0){console.warn('THREE.JSONLoader: \"morphColors\" no longer supported. Using them as face colors.');for(var u=r.faces,h=e.morphColors[0].colors,n=0,i=u.length;n<i;n++)u[n].color.fromArray(h,3*n)}}(n),function(){var t=[],n=[];void 0!==e.animation&&n.push(e.animation);void 0!==e.animations&&(e.animations.length?n=n.concat(e.animations):n.push(e.animations));for(var i=0;i<n.length;i++){var o=Z.AnimationClip.parseAnimation(n[i],r.bones);o&&t.push(o)}if(r.morphTargets){var a=Z.AnimationClip.CreateClipsFromMorphTargetSequences(r.morphTargets,10);t=t.concat(a)}t.length>0&&(r.animations=t)}(),r.computeFaceNormals(),r.computeBoundingSphere(),void 0===e.materials||0===e.materials.length)return{geometry:r};var i=Z.Loader.prototype.initMaterials(e.materials,t,this.crossOrigin);return{geometry:r,materials:i}}}),Z.LoadingManager=function(e,t,r){var n=this,i=!1,o=0,a=0;this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=r,this.itemStart=function(e){a++,!1===i&&void 0!==n.onStart&&n.onStart(e,o,a),i=!0},this.itemEnd=function(e){o++,void 0!==n.onProgress&&n.onProgress(e,o,a),o===a&&(i=!1,void 0!==n.onLoad&&n.onLoad())},this.itemError=function(e){void 0!==n.onError&&n.onError(e)}},Z.DefaultLoadingManager=new Z.LoadingManager,Z.BufferGeometryLoader=function(e){this.manager=void 0!==e?e:Z.DefaultLoadingManager},Object.assign(Z.BufferGeometryLoader.prototype,{load:function(e,t,r,n){var i=this;new Z.XHRLoader(i.manager).load(e,function(e){t(i.parse(JSON.parse(e)))},r,n)},parse:function(e){var t=new Z.BufferGeometry,r=e.data.index,n={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:Uint8ClampedArray,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};if(void 0!==r){var i=new n[r.type](r.array);t.setIndex(new Z.BufferAttribute(i,1))}var o=e.data.attributes;for(var a in o){var s=o[a];i=new n[s.type](s.array);t.addAttribute(a,new Z.BufferAttribute(i,s.itemSize,s.normalized))}var c=e.data.groups||e.data.drawcalls||e.data.offsets;if(void 0!==c)for(var l=0,u=c.length;l!==u;++l){var h=c[l];t.addGroup(h.start,h.count,h.materialIndex)}var d=e.data.boundingSphere;if(void 0!==d){var p=new Z.Vector3;void 0!==d.center&&p.fromArray(d.center),t.boundingSphere=new Z.Sphere(p,d.radius)}return t}}),Z.MaterialLoader=function(e){this.manager=void 0!==e?e:Z.DefaultLoadingManager,this.textures={}},Object.assign(Z.MaterialLoader.prototype,{load:function(e,t,r,n){var i=this;new Z.XHRLoader(i.manager).load(e,function(e){t(i.parse(JSON.parse(e)))},r,n)},setTextures:function(e){this.textures=e},getTexture:function(e){var t=this.textures;return void 0===t[e]&&console.warn(\"THREE.MaterialLoader: Undefined texture\",e),t[e]},parse:function(e){var t=new Z[e.type];if(void 0!==e.uuid&&(t.uuid=e.uuid),void 0!==e.name&&(t.name=e.name),void 0!==e.color&&t.color.setHex(e.color),void 0!==e.roughness&&(t.roughness=e.roughness),void 0!==e.metalness&&(t.metalness=e.metalness),void 0!==e.emissive&&t.emissive.setHex(e.emissive),void 0!==e.specular&&t.specular.setHex(e.specular),void 0!==e.shininess&&(t.shininess=e.shininess),void 0!==e.uniforms&&(t.uniforms=e.uniforms),void 0!==e.vertexShader&&(t.vertexShader=e.vertexShader),void 0!==e.fragmentShader&&(t.fragmentShader=e.fragmentShader),void 0!==e.vertexColors&&(t.vertexColors=e.vertexColors),void 0!==e.shading&&(t.shading=e.shading),void 0!==e.blending&&(t.blending=e.blending),void 0!==e.side&&(t.side=e.side),void 0!==e.opacity&&(t.opacity=e.opacity),void 0!==e.transparent&&(t.transparent=e.transparent),void 0!==e.alphaTest&&(t.alphaTest=e.alphaTest),void 0!==e.depthTest&&(t.depthTest=e.depthTest),void 0!==e.depthWrite&&(t.depthWrite=e.depthWrite),void 0!==e.colorWrite&&(t.colorWrite=e.colorWrite),void 0!==e.wireframe&&(t.wireframe=e.wireframe),void 0!==e.wireframeLinewidth&&(t.wireframeLinewidth=e.wireframeLinewidth),void 0!==e.size&&(t.size=e.size),void 0!==e.sizeAttenuation&&(t.sizeAttenuation=e.sizeAttenuation),void 0!==e.map&&(t.map=this.getTexture(e.map)),void 0!==e.alphaMap&&(t.alphaMap=this.getTexture(e.alphaMap),t.transparent=!0),void 0!==e.bumpMap&&(t.bumpMap=this.getTexture(e.bumpMap)),void 0!==e.bumpScale&&(t.bumpScale=e.bumpScale),void 0!==e.normalMap&&(t.normalMap=this.getTexture(e.normalMap)),void 0!==e.normalScale){var r=e.normalScale;!1===Array.isArray(r)&&(r=[r,r]),t.normalScale=(new Z.Vector2).fromArray(r)}if(void 0!==e.displacementMap&&(t.displacementMap=this.getTexture(e.displacementMap)),void 0!==e.displacementScale&&(t.displacementScale=e.displacementScale),void 0!==e.displacementBias&&(t.displacementBias=e.displacementBias),void 0!==e.roughnessMap&&(t.roughnessMap=this.getTexture(e.roughnessMap)),void 0!==e.metalnessMap&&(t.metalnessMap=this.getTexture(e.metalnessMap)),void 0!==e.emissiveMap&&(t.emissiveMap=this.getTexture(e.emissiveMap)),void 0!==e.emissiveIntensity&&(t.emissiveIntensity=e.emissiveIntensity),void 0!==e.specularMap&&(t.specularMap=this.getTexture(e.specularMap)),void 0!==e.envMap&&(t.envMap=this.getTexture(e.envMap),t.combine=Z.MultiplyOperation),void 0!==e.reflectivity&&(t.reflectivity=e.reflectivity),void 0!==e.lightMap&&(t.lightMap=this.getTexture(e.lightMap)),void 0!==e.lightMapIntensity&&(t.lightMapIntensity=e.lightMapIntensity),void 0!==e.aoMap&&(t.aoMap=this.getTexture(e.aoMap)),void 0!==e.aoMapIntensity&&(t.aoMapIntensity=e.aoMapIntensity),void 0!==e.materials)for(var n=0,i=e.materials.length;n<i;n++)t.materials.push(this.parse(e.materials[n]));return t}}),Z.ObjectLoader=function(e){this.manager=void 0!==e?e:Z.DefaultLoadingManager,this.texturePath=\"\"},Object.assign(Z.ObjectLoader.prototype,{load:function(e,t,r,n){\"\"===this.texturePath&&(this.texturePath=e.substring(0,e.lastIndexOf(\"/\")+1));var i=this;new Z.XHRLoader(i.manager).load(e,function(e){i.parse(JSON.parse(e),t)},r,n)},setTexturePath:function(e){this.texturePath=e},setCrossOrigin:function(e){this.crossOrigin=e},parse:function(e,t){var r=this.parseGeometries(e.geometries),n=this.parseImages(e.images,function(){void 0!==t&&t(a)}),i=this.parseTextures(e.textures,n),o=this.parseMaterials(e.materials,i),a=this.parseObject(e.object,r,o);return e.animations&&(a.animations=this.parseAnimations(e.animations)),void 0!==e.images&&0!==e.images.length||void 0!==t&&t(a),a},parseGeometries:function(e){var t={};if(void 0!==e)for(var r=new Z.JSONLoader,n=new Z.BufferGeometryLoader,i=0,o=e.length;i<o;i++){var a,s=e[i];switch(s.type){case\"PlaneGeometry\":case\"PlaneBufferGeometry\":a=new Z[s.type](s.width,s.height,s.widthSegments,s.heightSegments);break;case\"BoxGeometry\":case\"BoxBufferGeometry\":case\"CubeGeometry\":a=new Z[s.type](s.width,s.height,s.depth,s.widthSegments,s.heightSegments,s.depthSegments);break;case\"CircleGeometry\":case\"CircleBufferGeometry\":a=new Z[s.type](s.radius,s.segments,s.thetaStart,s.thetaLength);break;case\"CylinderGeometry\":case\"CylinderBufferGeometry\":a=new Z[s.type](s.radiusTop,s.radiusBottom,s.height,s.radialSegments,s.heightSegments,s.openEnded,s.thetaStart,s.thetaLength);break;case\"ConeGeometry\":case\"ConeBufferGeometry\":a=new Z[s.type](s.radius,s.height,s.radialSegments,s.heightSegments,s.openEnded,s.thetaStart,s.thetaLength);break;case\"SphereGeometry\":case\"SphereBufferGeometry\":a=new Z[s.type](s.radius,s.widthSegments,s.heightSegments,s.phiStart,s.phiLength,s.thetaStart,s.thetaLength);break;case\"DodecahedronGeometry\":case\"IcosahedronGeometry\":case\"OctahedronGeometry\":case\"TetrahedronGeometry\":a=new Z[s.type](s.radius,s.detail);break;case\"RingGeometry\":case\"RingBufferGeometry\":a=new Z[s.type](s.innerRadius,s.outerRadius,s.thetaSegments,s.phiSegments,s.thetaStart,s.thetaLength);break;case\"TorusGeometry\":case\"TorusBufferGeometry\":a=new Z[s.type](s.radius,s.tube,s.radialSegments,s.tubularSegments,s.arc);break;case\"TorusKnotGeometry\":case\"TorusKnotBufferGeometry\":a=new Z[s.type](s.radius,s.tube,s.tubularSegments,s.radialSegments,s.p,s.q);break;case\"LatheGeometry\":case\"LatheBufferGeometry\":a=new Z[s.type](s.points,s.segments,s.phiStart,s.phiLength);break;case\"BufferGeometry\":a=n.parse(s);break;case\"Geometry\":a=r.parse(s.data,this.texturePath).geometry;break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type \"'+s.type+'\"');continue}a.uuid=s.uuid,void 0!==s.name&&(a.name=s.name),t[s.uuid]=a}return t},parseMaterials:function(e,t){var r={};if(void 0!==e){var n=new Z.MaterialLoader;n.setTextures(t);for(var i=0,o=e.length;i<o;i++){var a=n.parse(e[i]);r[a.uuid]=a}}return r},parseAnimations:function(e){for(var t=[],r=0;r<e.length;r++){var n=Z.AnimationClip.parse(e[r]);t.push(n)}return t},parseImages:function(e,t){var r=this,n={};function i(e){return r.manager.itemStart(e),a.load(e,function(){r.manager.itemEnd(e)})}if(void 0!==e&&e.length>0){var o=new Z.LoadingManager(t),a=new Z.ImageLoader(o);a.setCrossOrigin(this.crossOrigin);for(var s=0,c=e.length;s<c;s++){var l=e[s],u=/^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(l.url)?l.url:r.texturePath+l.url;n[l.uuid]=i(u)}}return n},parseTextures:function(e,t){function r(e){return\"number\"==typeof e?e:(console.warn(\"THREE.ObjectLoader.parseTexture: Constant should be in numeric form.\",e),Z[e])}var n={};if(void 0!==e)for(var i=0,o=e.length;i<o;i++){var a=e[i];void 0===a.image&&console.warn('THREE.ObjectLoader: No \"image\" specified for',a.uuid),void 0===t[a.image]&&console.warn(\"THREE.ObjectLoader: Undefined image\",a.image);var s=new Z.Texture(t[a.image]);s.needsUpdate=!0,s.uuid=a.uuid,void 0!==a.name&&(s.name=a.name),void 0!==a.mapping&&(s.mapping=r(a.mapping)),void 0!==a.offset&&s.offset.fromArray(a.offset),void 0!==a.repeat&&s.repeat.fromArray(a.repeat),void 0!==a.wrap&&(s.wrapS=r(a.wrap[0]),s.wrapT=r(a.wrap[1])),void 0!==a.minFilter&&(s.minFilter=r(a.minFilter)),void 0!==a.magFilter&&(s.magFilter=r(a.magFilter)),void 0!==a.anisotropy&&(s.anisotropy=a.anisotropy),void 0!==a.flipY&&(s.flipY=a.flipY),n[a.uuid]=s}return n},parseObject:function(){var e=new Z.Matrix4;return function(t,r,n){var i;function o(e){return void 0===r[e]&&console.warn(\"THREE.ObjectLoader: Undefined geometry\",e),r[e]}function a(e){if(void 0!==e)return void 0===n[e]&&console.warn(\"THREE.ObjectLoader: Undefined material\",e),n[e]}switch(t.type){case\"Scene\":i=new Z.Scene;break;case\"PerspectiveCamera\":i=new Z.PerspectiveCamera(t.fov,t.aspect,t.near,t.far),void 0!==t.focus&&(i.focus=t.focus),void 0!==t.zoom&&(i.zoom=t.zoom),void 0!==t.filmGauge&&(i.filmGauge=t.filmGauge),void 0!==t.filmOffset&&(i.filmOffset=t.filmOffset),void 0!==t.view&&(i.view=Object.assign({},t.view));break;case\"OrthographicCamera\":i=new Z.OrthographicCamera(t.left,t.right,t.top,t.bottom,t.near,t.far);break;case\"AmbientLight\":i=new Z.AmbientLight(t.color,t.intensity);break;case\"DirectionalLight\":i=new Z.DirectionalLight(t.color,t.intensity);break;case\"PointLight\":i=new Z.PointLight(t.color,t.intensity,t.distance,t.decay);break;case\"SpotLight\":i=new Z.SpotLight(t.color,t.intensity,t.distance,t.angle,t.penumbra,t.decay);break;case\"HemisphereLight\":i=new Z.HemisphereLight(t.color,t.groundColor,t.intensity);break;case\"Mesh\":var s=o(t.geometry),c=a(t.material);i=s.bones&&s.bones.length>0?new Z.SkinnedMesh(s,c):new Z.Mesh(s,c);break;case\"LOD\":i=new Z.LOD;break;case\"Line\":i=new Z.Line(o(t.geometry),a(t.material),t.mode);break;case\"PointCloud\":case\"Points\":i=new Z.Points(o(t.geometry),a(t.material));break;case\"Sprite\":i=new Z.Sprite(a(t.material));break;case\"Group\":i=new Z.Group;break;default:i=new Z.Object3D}if(i.uuid=t.uuid,void 0!==t.name&&(i.name=t.name),void 0!==t.matrix?(e.fromArray(t.matrix),e.decompose(i.position,i.quaternion,i.scale)):(void 0!==t.position&&i.position.fromArray(t.position),void 0!==t.rotation&&i.rotation.fromArray(t.rotation),void 0!==t.scale&&i.scale.fromArray(t.scale)),void 0!==t.castShadow&&(i.castShadow=t.castShadow),void 0!==t.receiveShadow&&(i.receiveShadow=t.receiveShadow),void 0!==t.visible&&(i.visible=t.visible),void 0!==t.userData&&(i.userData=t.userData),void 0!==t.children)for(var l in t.children)i.add(this.parseObject(t.children[l],r,n));if(\"LOD\"===t.type)for(var u=t.levels,h=0;h<u.length;h++){var d=u[h];void 0!==(l=i.getObjectByProperty(\"uuid\",d.object))&&i.addLevel(l,d.distance)}return i}}()}),Z.TextureLoader=function(e){this.manager=void 0!==e?e:Z.DefaultLoadingManager},Object.assign(Z.TextureLoader.prototype,{load:function(e,t,r,n){var i=new Z.Texture,o=new Z.ImageLoader(this.manager);return o.setCrossOrigin(this.crossOrigin),o.setPath(this.path),o.load(e,function(r){var n=e.search(/\\.(jpg|jpeg)$/)>0||0===e.search(/^data\\:image\\/jpeg/);i.format=n?Z.RGBFormat:Z.RGBAFormat,i.image=r,i.needsUpdate=!0,void 0!==t&&t(i)},r,n),i},setCrossOrigin:function(e){return this.crossOrigin=e,this},setPath:function(e){return this.path=e,this}}),Z.CubeTextureLoader=function(e){this.manager=void 0!==e?e:Z.DefaultLoadingManager},Object.assign(Z.CubeTextureLoader.prototype,{load:function(e,t,r,n){var i=new Z.CubeTexture,o=new Z.ImageLoader(this.manager);o.setCrossOrigin(this.crossOrigin),o.setPath(this.path);var a=0;function s(r){o.load(e[r],function(e){i.images[r]=e,6===++a&&(i.needsUpdate=!0,t&&t(i))},void 0,n)}for(var c=0;c<e.length;++c)s(c);return i},setCrossOrigin:function(e){return this.crossOrigin=e,this},setPath:function(e){return this.path=e,this}}),Z.DataTextureLoader=Z.BinaryTextureLoader=function(e){this.manager=void 0!==e?e:Z.DefaultLoadingManager,this._parser=null},Object.assign(Z.BinaryTextureLoader.prototype,{load:function(e,t,r,n){var i=this,o=new Z.DataTexture,a=new Z.XHRLoader(this.manager);return a.setResponseType(\"arraybuffer\"),a.load(e,function(e){var r=i._parser(e);r&&(void 0!==r.image?o.image=r.image:void 0!==r.data&&(o.image.width=r.width,o.image.height=r.height,o.image.data=r.data),o.wrapS=void 0!==r.wrapS?r.wrapS:Z.ClampToEdgeWrapping,o.wrapT=void 0!==r.wrapT?r.wrapT:Z.ClampToEdgeWrapping,o.magFilter=void 0!==r.magFilter?r.magFilter:Z.LinearFilter,o.minFilter=void 0!==r.minFilter?r.minFilter:Z.LinearMipMapLinearFilter,o.anisotropy=void 0!==r.anisotropy?r.anisotropy:1,void 0!==r.format&&(o.format=r.format),void 0!==r.type&&(o.type=r.type),void 0!==r.mipmaps&&(o.mipmaps=r.mipmaps),1===r.mipmapCount&&(o.minFilter=Z.LinearFilter),o.needsUpdate=!0,t&&t(o,r))},r,n),o}}),Z.CompressedTextureLoader=function(e){this.manager=void 0!==e?e:Z.DefaultLoadingManager,this._parser=null},Object.assign(Z.CompressedTextureLoader.prototype,{load:function(e,t,r,n){var i=this,o=[],a=new Z.CompressedTexture;a.image=o;var s=new Z.XHRLoader(this.manager);function c(c){s.load(e[c],function(e){var r=i._parser(e,!0);o[c]={width:r.width,height:r.height,format:r.format,mipmaps:r.mipmaps},6===(l+=1)&&(1===r.mipmapCount&&(a.minFilter=Z.LinearFilter),a.format=r.format,a.needsUpdate=!0,t&&t(a))},r,n)}if(s.setPath(this.path),s.setResponseType(\"arraybuffer\"),Array.isArray(e))for(var l=0,u=0,h=e.length;u<h;++u)c(u);else s.load(e,function(e){var r=i._parser(e,!0);if(r.isCubemap)for(var n=r.mipmaps.length/r.mipmapCount,s=0;s<n;s++){o[s]={mipmaps:[]};for(var c=0;c<r.mipmapCount;c++)o[s].mipmaps.push(r.mipmaps[s*r.mipmapCount+c]),o[s].format=r.format,o[s].width=r.width,o[s].height=r.height}else a.image.width=r.width,a.image.height=r.height,a.mipmaps=r.mipmaps;1===r.mipmapCount&&(a.minFilter=Z.LinearFilter),a.format=r.format,a.needsUpdate=!0,t&&t(a)},r,n);return a},setPath:function(e){return this.path=e,this}}),Z.Material=function(){Object.defineProperty(this,\"id\",{value:Z.MaterialIdCount++}),this.uuid=Z.Math.generateUUID(),this.name=\"\",this.type=\"Material\",this.fog=!0,this.lights=!0,this.blending=Z.NormalBlending,this.side=Z.FrontSide,this.shading=Z.SmoothShading,this.vertexColors=Z.NoColors,this.opacity=1,this.transparent=!1,this.blendSrc=Z.SrcAlphaFactor,this.blendDst=Z.OneMinusSrcAlphaFactor,this.blendEquation=Z.AddEquation,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=Z.LessEqualDepth,this.depthTest=!0,this.depthWrite=!0,this.clippingPlanes=null,this.clipShadows=!1,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.alphaTest=0,this.premultipliedAlpha=!1,this.overdraw=0,this.visible=!0,this._needsUpdate=!0},Z.Material.prototype={constructor:Z.Material,get needsUpdate(){return this._needsUpdate},set needsUpdate(e){!0===e&&this.update(),this._needsUpdate=e},setValues:function(e){if(void 0!==e)for(var t in e){var r=e[t];if(void 0!==r){var n=this[t];void 0!==n?n instanceof Z.Color?n.set(r):n instanceof Z.Vector3&&r instanceof Z.Vector3?n.copy(r):this[t]=\"overdraw\"===t?Number(r):r:console.warn(\"THREE.\"+this.type+\": '\"+t+\"' is not a property of this material.\")}else console.warn(\"THREE.Material: '\"+t+\"' parameter is undefined.\")}},toJSON:function(e){var t=void 0===e;t&&(e={textures:{},images:{}});var r={metadata:{version:4.4,type:\"Material\",generator:\"Material.toJSON\"}};function n(e){var t=[];for(var r in e){var n=e[r];delete n.metadata,t.push(n)}return t}if(r.uuid=this.uuid,r.type=this.type,\"\"!==this.name&&(r.name=this.name),this.color instanceof Z.Color&&(r.color=this.color.getHex()),void 0!==this.roughness&&(r.roughness=this.roughness),void 0!==this.metalness&&(r.metalness=this.metalness),this.emissive instanceof Z.Color&&(r.emissive=this.emissive.getHex()),this.specular instanceof Z.Color&&(r.specular=this.specular.getHex()),void 0!==this.shininess&&(r.shininess=this.shininess),this.map instanceof Z.Texture&&(r.map=this.map.toJSON(e).uuid),this.alphaMap instanceof Z.Texture&&(r.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap instanceof Z.Texture&&(r.lightMap=this.lightMap.toJSON(e).uuid),this.bumpMap instanceof Z.Texture&&(r.bumpMap=this.bumpMap.toJSON(e).uuid,r.bumpScale=this.bumpScale),this.normalMap instanceof Z.Texture&&(r.normalMap=this.normalMap.toJSON(e).uuid,r.normalScale=this.normalScale.toArray()),this.displacementMap instanceof Z.Texture&&(r.displacementMap=this.displacementMap.toJSON(e).uuid,r.displacementScale=this.displacementScale,r.displacementBias=this.displacementBias),this.roughnessMap instanceof Z.Texture&&(r.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap instanceof Z.Texture&&(r.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap instanceof Z.Texture&&(r.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap instanceof Z.Texture&&(r.specularMap=this.specularMap.toJSON(e).uuid),this.envMap instanceof Z.Texture&&(r.envMap=this.envMap.toJSON(e).uuid,r.reflectivity=this.reflectivity),void 0!==this.size&&(r.size=this.size),void 0!==this.sizeAttenuation&&(r.sizeAttenuation=this.sizeAttenuation),this.blending!==Z.NormalBlending&&(r.blending=this.blending),this.shading!==Z.SmoothShading&&(r.shading=this.shading),this.side!==Z.FrontSide&&(r.side=this.side),this.vertexColors!==Z.NoColors&&(r.vertexColors=this.vertexColors),this.opacity<1&&(r.opacity=this.opacity),!0===this.transparent&&(r.transparent=this.transparent),this.alphaTest>0&&(r.alphaTest=this.alphaTest),!0===this.premultipliedAlpha&&(r.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(r.wireframe=this.wireframe),this.wireframeLinewidth>1&&(r.wireframeLinewidth=this.wireframeLinewidth),t){var i=n(e.textures),o=n(e.images);i.length>0&&(r.textures=i),o.length>0&&(r.images=o)}return r},clone:function(){return(new this.constructor).copy(this)},copy:function(e){this.name=e.name,this.fog=e.fog,this.lights=e.lights,this.blending=e.blending,this.side=e.side,this.shading=e.shading,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.alphaTest=e.alphaTest,this.premultipliedAlpha=e.premultipliedAlpha,this.overdraw=e.overdraw,this.visible=e.visible,this.clipShadows=e.clipShadows;var t=e.clippingPlanes,r=null;if(null!==t){var n=t.length;r=new Array(n);for(var i=0;i!==n;++i)r[i]=t[i].clone()}return this.clippingPlanes=r,this},update:function(){this.dispatchEvent({type:\"update\"})},dispose:function(){this.dispatchEvent({type:\"dispose\"})}},Object.assign(Z.Material.prototype,Z.EventDispatcher.prototype),Z.MaterialIdCount=0,Z.LineBasicMaterial=function(e){Z.Material.call(this),this.type=\"LineBasicMaterial\",this.color=new Z.Color(16777215),this.linewidth=1,this.linecap=\"round\",this.linejoin=\"round\",this.lights=!1,this.setValues(e)},Z.LineBasicMaterial.prototype=Object.create(Z.Material.prototype),Z.LineBasicMaterial.prototype.constructor=Z.LineBasicMaterial,Z.LineBasicMaterial.prototype.copy=function(e){return Z.Material.prototype.copy.call(this,e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this},Z.LineDashedMaterial=function(e){Z.Material.call(this),this.type=\"LineDashedMaterial\",this.color=new Z.Color(16777215),this.linewidth=1,this.scale=1,this.dashSize=3,this.gapSize=1,this.lights=!1,this.setValues(e)},Z.LineDashedMaterial.prototype=Object.create(Z.Material.prototype),Z.LineDashedMaterial.prototype.constructor=Z.LineDashedMaterial,Z.LineDashedMaterial.prototype.copy=function(e){return Z.Material.prototype.copy.call(this,e),this.color.copy(e.color),this.linewidth=e.linewidth,this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this},Z.MeshBasicMaterial=function(e){Z.Material.call(this),this.type=\"MeshBasicMaterial\",this.color=new Z.Color(16777215),this.map=null,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Z.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap=\"round\",this.wireframeLinejoin=\"round\",this.skinning=!1,this.morphTargets=!1,this.lights=!1,this.setValues(e)},Z.MeshBasicMaterial.prototype=Object.create(Z.Material.prototype),Z.MeshBasicMaterial.prototype.constructor=Z.MeshBasicMaterial,Z.MeshBasicMaterial.prototype.copy=function(e){return Z.Material.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this},Z.MeshDepthMaterial=function(e){Z.Material.call(this),this.type=\"MeshDepthMaterial\",this.depthPacking=Z.BasicDepthPacking,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.setValues(e)},Z.MeshDepthMaterial.prototype=Object.create(Z.Material.prototype),Z.MeshDepthMaterial.prototype.constructor=Z.MeshDepthMaterial,Z.MeshDepthMaterial.prototype.copy=function(e){return Z.Material.prototype.copy.call(this,e),this.depthPacking=e.depthPacking,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this},Z.MeshLambertMaterial=function(e){Z.Material.call(this),this.type=\"MeshLambertMaterial\",this.color=new Z.Color(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Z.Color(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Z.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap=\"round\",this.wireframeLinejoin=\"round\",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)},Z.MeshLambertMaterial.prototype=Object.create(Z.Material.prototype),Z.MeshLambertMaterial.prototype.constructor=Z.MeshLambertMaterial,Z.MeshLambertMaterial.prototype.copy=function(e){return Z.Material.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},Z.MeshNormalMaterial=function(e){Z.Material.call(this,e),this.type=\"MeshNormalMaterial\",this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.morphTargets=!1,this.setValues(e)},Z.MeshNormalMaterial.prototype=Object.create(Z.Material.prototype),Z.MeshNormalMaterial.prototype.constructor=Z.MeshNormalMaterial,Z.MeshNormalMaterial.prototype.copy=function(e){return Z.Material.prototype.copy.call(this,e),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this},Z.MeshPhongMaterial=function(e){Z.Material.call(this),this.type=\"MeshPhongMaterial\",this.color=new Z.Color(16777215),this.specular=new Z.Color(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Z.Color(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new Z.Vector2(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Z.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap=\"round\",this.wireframeLinejoin=\"round\",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)},Z.MeshPhongMaterial.prototype=Object.create(Z.Material.prototype),Z.MeshPhongMaterial.prototype.constructor=Z.MeshPhongMaterial,Z.MeshPhongMaterial.prototype.copy=function(e){return Z.Material.prototype.copy.call(this,e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},Z.MeshStandardMaterial=function(e){Z.Material.call(this),this.defines={STANDARD:\"\"},this.type=\"MeshStandardMaterial\",this.color=new Z.Color(16777215),this.roughness=.5,this.metalness=.5,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Z.Color(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new Z.Vector2(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap=\"round\",this.wireframeLinejoin=\"round\",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)},Z.MeshStandardMaterial.prototype=Object.create(Z.Material.prototype),Z.MeshStandardMaterial.prototype.constructor=Z.MeshStandardMaterial,Z.MeshStandardMaterial.prototype.copy=function(e){return Z.Material.prototype.copy.call(this,e),this.defines={STANDARD:\"\"},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},Z.MeshPhysicalMaterial=function(e){Z.MeshStandardMaterial.call(this),this.defines={PHYSICAL:\"\"},this.type=\"MeshPhysicalMaterial\",this.reflectivity=.5,this.clearCoat=0,this.clearCoatRoughness=0,this.setValues(e)},Z.MeshPhysicalMaterial.prototype=Object.create(Z.MeshStandardMaterial.prototype),Z.MeshPhysicalMaterial.prototype.constructor=Z.MeshPhysicalMaterial,Z.MeshPhysicalMaterial.prototype.copy=function(e){return Z.MeshStandardMaterial.prototype.copy.call(this,e),this.defines={PHYSICAL:\"\"},this.reflectivity=e.reflectivity,this.clearCoat=e.clearCoat,this.clearCoatRoughness=e.clearCoatRoughness,this},Z.MultiMaterial=function(e){this.uuid=Z.Math.generateUUID(),this.type=\"MultiMaterial\",this.materials=e instanceof Array?e:[],this.visible=!0},Z.MultiMaterial.prototype={constructor:Z.MultiMaterial,toJSON:function(e){for(var t={metadata:{version:4.2,type:\"material\",generator:\"MaterialExporter\"},uuid:this.uuid,type:this.type,materials:[]},r=this.materials,n=0,i=r.length;n<i;n++){var o=r[n].toJSON(e);delete o.metadata,t.materials.push(o)}return t.visible=this.visible,t},clone:function(){for(var e=new this.constructor,t=0;t<this.materials.length;t++)e.materials.push(this.materials[t].clone());return e.visible=this.visible,e}},Z.PointsMaterial=function(e){Z.Material.call(this),this.type=\"PointsMaterial\",this.color=new Z.Color(16777215),this.map=null,this.size=1,this.sizeAttenuation=!0,this.lights=!1,this.setValues(e)},Z.PointsMaterial.prototype=Object.create(Z.Material.prototype),Z.PointsMaterial.prototype.constructor=Z.PointsMaterial,Z.PointsMaterial.prototype.copy=function(e){return Z.Material.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this},Z.ShaderMaterial=function(e){Z.Material.call(this),this.type=\"ShaderMaterial\",this.defines={},this.uniforms={},this.vertexShader=\"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\",this.fragmentShader=\"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,void 0!==e&&(void 0!==e.attributes&&console.error(\"THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.\"),this.setValues(e))},Z.ShaderMaterial.prototype=Object.create(Z.Material.prototype),Z.ShaderMaterial.prototype.constructor=Z.ShaderMaterial,Z.ShaderMaterial.prototype.copy=function(e){return Z.Material.prototype.copy.call(this,e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Z.UniformsUtils.clone(e.uniforms),this.defines=e.defines,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.lights=e.lights,this.clipping=e.clipping,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.extensions=e.extensions,this},Z.ShaderMaterial.prototype.toJSON=function(e){var t=Z.Material.prototype.toJSON.call(this,e);return t.uniforms=this.uniforms,t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t},Z.RawShaderMaterial=function(e){Z.ShaderMaterial.call(this,e),this.type=\"RawShaderMaterial\"},Z.RawShaderMaterial.prototype=Object.create(Z.ShaderMaterial.prototype),Z.RawShaderMaterial.prototype.constructor=Z.RawShaderMaterial,Z.SpriteMaterial=function(e){Z.Material.call(this),this.type=\"SpriteMaterial\",this.color=new Z.Color(16777215),this.map=null,this.rotation=0,this.fog=!1,this.lights=!1,this.setValues(e)},Z.SpriteMaterial.prototype=Object.create(Z.Material.prototype),Z.SpriteMaterial.prototype.constructor=Z.SpriteMaterial,Z.SpriteMaterial.prototype.copy=function(e){return Z.Material.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.rotation=e.rotation,this},Z.ShadowMaterial=function(){Z.ShaderMaterial.call(this,{uniforms:Z.UniformsUtils.merge([Z.UniformsLib.lights,{opacity:{value:1}}]),vertexShader:Z.ShaderChunk.shadow_vert,fragmentShader:Z.ShaderChunk.shadow_frag}),this.lights=!0,this.transparent=!0,Object.defineProperties(this,{opacity:{enumerable:!0,get:function(){return this.uniforms.opacity.value},set:function(e){this.uniforms.opacity.value=e}}})},Z.ShadowMaterial.prototype=Object.create(Z.ShaderMaterial.prototype),Z.ShadowMaterial.prototype.constructor=Z.ShadowMaterial,Z.Texture=function(e,t,r,n,i,o,a,s,c,l){Object.defineProperty(this,\"id\",{value:Z.TextureIdCount++}),this.uuid=Z.Math.generateUUID(),this.name=\"\",this.sourceFile=\"\",this.image=void 0!==e?e:Z.Texture.DEFAULT_IMAGE,this.mipmaps=[],this.mapping=void 0!==t?t:Z.Texture.DEFAULT_MAPPING,this.wrapS=void 0!==r?r:Z.ClampToEdgeWrapping,this.wrapT=void 0!==n?n:Z.ClampToEdgeWrapping,this.magFilter=void 0!==i?i:Z.LinearFilter,this.minFilter=void 0!==o?o:Z.LinearMipMapLinearFilter,this.anisotropy=void 0!==c?c:1,this.format=void 0!==a?a:Z.RGBAFormat,this.type=void 0!==s?s:Z.UnsignedByteType,this.offset=new Z.Vector2(0,0),this.repeat=new Z.Vector2(1,1),this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=void 0!==l?l:Z.LinearEncoding,this.version=0,this.onUpdate=null},Z.Texture.DEFAULT_IMAGE=void 0,Z.Texture.DEFAULT_MAPPING=Z.UVMapping,Z.Texture.prototype={constructor:Z.Texture,set needsUpdate(e){!0===e&&this.version++},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.image=e.image,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this},toJSON:function(e){if(void 0!==e.textures[this.uuid])return e.textures[this.uuid];var t={metadata:{version:4.4,type:\"Texture\",generator:\"Texture.toJSON\"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],wrap:[this.wrapS,this.wrapT],minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY};if(void 0!==this.image){var r=this.image;void 0===r.uuid&&(r.uuid=Z.Math.generateUUID()),void 0===e.images[r.uuid]&&(e.images[r.uuid]={uuid:r.uuid,url:function(e){var t;return void 0!==e.toDataURL?t=e:((t=document.createElementNS(\"http://www.w3.org/1999/xhtml\",\"canvas\")).width=e.width,t.height=e.height,t.getContext(\"2d\").drawImage(e,0,0,e.width,e.height)),t.width>2048||t.height>2048?t.toDataURL(\"image/jpeg\",.6):t.toDataURL(\"image/png\")}(r)}),t.image=r.uuid}return e.textures[this.uuid]=t,t},dispose:function(){this.dispatchEvent({type:\"dispose\"})},transformUv:function(e){if(this.mapping===Z.UVMapping){if(e.multiply(this.repeat),e.add(this.offset),e.x<0||e.x>1)switch(this.wrapS){case Z.RepeatWrapping:e.x=e.x-Math.floor(e.x);break;case Z.ClampToEdgeWrapping:e.x=e.x<0?0:1;break;case Z.MirroredRepeatWrapping:1===Math.abs(Math.floor(e.x)%2)?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x)}if(e.y<0||e.y>1)switch(this.wrapT){case Z.RepeatWrapping:e.y=e.y-Math.floor(e.y);break;case Z.ClampToEdgeWrapping:e.y=e.y<0?0:1;break;case Z.MirroredRepeatWrapping:1===Math.abs(Math.floor(e.y)%2)?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y)}this.flipY&&(e.y=1-e.y)}}},Object.assign(Z.Texture.prototype,Z.EventDispatcher.prototype),Z.TextureIdCount=0,Z.DepthTexture=function(e,t,r,n,i,o,a,s,c){Z.Texture.call(this,null,n,i,o,a,s,Z.DepthFormat,r,c),this.image={width:e,height:t},this.type=void 0!==r?r:Z.UnsignedShortType,this.magFilter=void 0!==a?a:Z.NearestFilter,this.minFilter=void 0!==s?s:Z.NearestFilter,this.flipY=!1,this.generateMipmaps=!1},Z.DepthTexture.prototype=Object.create(Z.Texture.prototype),Z.DepthTexture.prototype.constructor=Z.DepthTexture,Z.CanvasTexture=function(e,t,r,n,i,o,a,s,c){Z.Texture.call(this,e,t,r,n,i,o,a,s,c),this.needsUpdate=!0},Z.CanvasTexture.prototype=Object.create(Z.Texture.prototype),Z.CanvasTexture.prototype.constructor=Z.CanvasTexture,Z.CubeTexture=function(e,t,r,n,i,o,a,s,c,l){e=void 0!==e?e:[],t=void 0!==t?t:Z.CubeReflectionMapping,Z.Texture.call(this,e,t,r,n,i,o,a,s,c,l),this.flipY=!1},Z.CubeTexture.prototype=Object.create(Z.Texture.prototype),Z.CubeTexture.prototype.constructor=Z.CubeTexture,Object.defineProperty(Z.CubeTexture.prototype,\"images\",{get:function(){return this.image},set:function(e){this.image=e}}),Z.CompressedTexture=function(e,t,r,n,i,o,a,s,c,l,u,h){Z.Texture.call(this,null,o,a,s,c,l,n,i,u,h),this.image={width:t,height:r},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1},Z.CompressedTexture.prototype=Object.create(Z.Texture.prototype),Z.CompressedTexture.prototype.constructor=Z.CompressedTexture,Z.DataTexture=function(e,t,r,n,i,o,a,s,c,l,u,h){Z.Texture.call(this,null,o,a,s,c,l,n,i,u,h),this.image={data:e,width:t,height:r},this.magFilter=void 0!==c?c:Z.NearestFilter,this.minFilter=void 0!==l?l:Z.NearestFilter,this.flipY=!1,this.generateMipmaps=!1},Z.DataTexture.prototype=Object.create(Z.Texture.prototype),Z.DataTexture.prototype.constructor=Z.DataTexture,Z.VideoTexture=function(e,t,r,n,i,o,a,s,c){Z.Texture.call(this,e,t,r,n,i,o,a,s,c),this.generateMipmaps=!1;var l=this;!function t(){requestAnimationFrame(t),e.readyState>=e.HAVE_CURRENT_DATA&&(l.needsUpdate=!0)}()},Z.VideoTexture.prototype=Object.create(Z.Texture.prototype),Z.VideoTexture.prototype.constructor=Z.VideoTexture,Z.Group=function(){Z.Object3D.call(this),this.type=\"Group\"},Z.Group.prototype=Object.assign(Object.create(Z.Object3D.prototype),{constructor:Z.Group}),Z.Points=function(e,t){Z.Object3D.call(this),this.type=\"Points\",this.geometry=void 0!==e?e:new Z.BufferGeometry,this.material=void 0!==t?t:new Z.PointsMaterial({color:16777215*Math.random()})},Z.Points.prototype=Object.assign(Object.create(Z.Object3D.prototype),{constructor:Z.Points,raycast:function(){var e=new Z.Matrix4,t=new Z.Ray,r=new Z.Sphere;return function(n,i){var o=this,a=this.geometry,s=this.matrixWorld,c=n.params.Points.threshold;if(null===a.boundingSphere&&a.computeBoundingSphere(),r.copy(a.boundingSphere),r.applyMatrix4(s),!1!==n.ray.intersectsSphere(r)){e.getInverse(s),t.copy(n.ray).applyMatrix4(e);var l=c/((this.scale.x+this.scale.y+this.scale.z)/3),u=l*l,h=new Z.Vector3;if(a instanceof Z.BufferGeometry){var d=a.index,p=a.attributes.position.array;if(null!==d)for(var f=d.array,m=0,v=f.length;m<v;m++){var g=f[m];h.fromArray(p,3*g),b(h,g)}else{m=0;for(var y=p.length/3;m<y;m++)h.fromArray(p,3*m),b(h,m)}}else{var x=a.vertices;for(m=0,y=x.length;m<y;m++)b(x[m],m)}}function b(e,r){var a=t.distanceSqToPoint(e);if(a<u){var c=t.closestPointToPoint(e);c.applyMatrix4(s);var l=n.ray.origin.distanceTo(c);if(l<n.near||l>n.far)return;i.push({distance:l,distanceToRay:Math.sqrt(a),point:c.clone(),index:r,face:null,object:o})}}}}(),clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}}),Z.Line=function(e,t,r){if(1===r)return console.warn(\"THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.\"),new Z.LineSegments(e,t);Z.Object3D.call(this),this.type=\"Line\",this.geometry=void 0!==e?e:new Z.BufferGeometry,this.material=void 0!==t?t:new Z.LineBasicMaterial({color:16777215*Math.random()})},Z.Line.prototype=Object.assign(Object.create(Z.Object3D.prototype),{constructor:Z.Line,raycast:function(){var e=new Z.Matrix4,t=new Z.Ray,r=new Z.Sphere;return function(n,i){var o=n.linePrecision,a=o*o,s=this.geometry,c=this.matrixWorld;if(null===s.boundingSphere&&s.computeBoundingSphere(),r.copy(s.boundingSphere),r.applyMatrix4(c),!1!==n.ray.intersectsSphere(r)){e.getInverse(c),t.copy(n.ray).applyMatrix4(e);var l=new Z.Vector3,u=new Z.Vector3,h=new Z.Vector3,d=new Z.Vector3,p=this instanceof Z.LineSegments?2:1;if(s instanceof Z.BufferGeometry){var f=s.index,m=s.attributes.position.array;if(null!==f)for(var v=f.array,g=0,y=v.length-1;g<y;g+=p){var x=v[g],b=v[g+1];if(l.fromArray(m,3*x),u.fromArray(m,3*b),!(t.distanceSqToSegment(l,u,d,h)>a))d.applyMatrix4(this.matrixWorld),(M=n.ray.origin.distanceTo(d))<n.near||M>n.far||i.push({distance:M,point:h.clone().applyMatrix4(this.matrixWorld),index:g,face:null,faceIndex:null,object:this})}else for(g=0,y=m.length/3-1;g<y;g+=p){if(l.fromArray(m,3*g),u.fromArray(m,3*g+3),!(t.distanceSqToSegment(l,u,d,h)>a))d.applyMatrix4(this.matrixWorld),(M=n.ray.origin.distanceTo(d))<n.near||M>n.far||i.push({distance:M,point:h.clone().applyMatrix4(this.matrixWorld),index:g,face:null,faceIndex:null,object:this})}}else if(s instanceof Z.Geometry){var w=s.vertices,_=w.length;for(g=0;g<_-1;g+=p){var M;if(!(t.distanceSqToSegment(w[g],w[g+1],d,h)>a))d.applyMatrix4(this.matrixWorld),(M=n.ray.origin.distanceTo(d))<n.near||M>n.far||i.push({distance:M,point:h.clone().applyMatrix4(this.matrixWorld),index:g,face:null,faceIndex:null,object:this})}}}}}(),clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}}),Z.LineSegments=function(e,t){Z.Line.call(this,e,t),this.type=\"LineSegments\"},Z.LineSegments.prototype=Object.assign(Object.create(Z.Line.prototype),{constructor:Z.LineSegments}),Z.Mesh=function(e,t){Z.Object3D.call(this),this.type=\"Mesh\",this.geometry=void 0!==e?e:new Z.BufferGeometry,this.material=void 0!==t?t:new Z.MeshBasicMaterial({color:16777215*Math.random()}),this.drawMode=Z.TrianglesDrawMode,this.updateMorphTargets()},Z.Mesh.prototype=Object.assign(Object.create(Z.Object3D.prototype),{constructor:Z.Mesh,setDrawMode:function(e){this.drawMode=e},copy:function(e){return Z.Object3D.prototype.copy.call(this,e),this.drawMode=e.drawMode,this},updateMorphTargets:function(){if(void 0!==this.geometry.morphTargets&&this.geometry.morphTargets.length>0){this.morphTargetBase=-1,this.morphTargetInfluences=[],this.morphTargetDictionary={};for(var e=0,t=this.geometry.morphTargets.length;e<t;e++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[e].name]=e}},getMorphTargetIndexByName:function(e){return void 0!==this.morphTargetDictionary[e]?this.morphTargetDictionary[e]:(console.warn(\"THREE.Mesh.getMorphTargetIndexByName: morph target \"+e+\" does not exist. Returning 0.\"),0)},raycast:function(){var e=new Z.Matrix4,t=new Z.Ray,r=new Z.Sphere,n=new Z.Vector3,i=new Z.Vector3,o=new Z.Vector3,a=new Z.Vector3,s=new Z.Vector3,c=new Z.Vector3,l=new Z.Vector2,u=new Z.Vector2,h=new Z.Vector2,d=new Z.Vector3,p=new Z.Vector3,f=new Z.Vector3;function m(e,t,r,n,i,o,a){return Z.Triangle.barycoordFromPoint(e,t,r,n,d),i.multiplyScalar(d.x),o.multiplyScalar(d.y),a.multiplyScalar(d.z),i.add(o).add(a),i.clone()}function v(e,t,r,n,i,o,a){var s=e.material;if(null===(s.side===Z.BackSide?r.intersectTriangle(o,i,n,!0,a):r.intersectTriangle(n,i,o,s.side!==Z.DoubleSide,a)))return null;f.copy(a),f.applyMatrix4(e.matrixWorld);var c=t.ray.origin.distanceTo(f);return c<t.near||c>t.far?null:{distance:c,point:f.clone(),object:e}}function g(e,t,r,a,s,c,d,f){n.fromArray(a,3*c),i.fromArray(a,3*d),o.fromArray(a,3*f);var g=v(e,t,r,n,i,o,p);return g&&(s&&(l.fromArray(s,2*c),u.fromArray(s,2*d),h.fromArray(s,2*f),g.uv=m(p,n,i,o,l,u,h)),g.face=new Z.Face3(c,d,f,Z.Triangle.normal(n,i,o)),g.faceIndex=c),g}return function(d,f){var y,x,b=this.geometry,w=this.material,_=this.matrixWorld;if(void 0!==w&&(null===b.boundingSphere&&b.computeBoundingSphere(),r.copy(b.boundingSphere),r.applyMatrix4(_),!1!==d.ray.intersectsSphere(r)&&(e.getInverse(_),t.copy(d.ray).applyMatrix4(e),null===b.boundingBox||!1!==t.intersectsBox(b.boundingBox))))if(b instanceof Z.BufferGeometry){var M,S,T,E=b.index,C=b.attributes,A=C.position.array;if(void 0!==C.uv&&(y=C.uv.array),null!==E)for(var L=E.array,R=0,P=L.length;R<P;R+=3)M=L[R],S=L[R+1],T=L[R+2],(x=g(this,d,t,A,y,M,S,T))&&(x.faceIndex=Math.floor(R/3),f.push(x));else for(R=0,P=A.length;R<P;R+=9)(x=g(this,d,t,A,y,M=R/3,S=M+1,T=M+2))&&(x.index=M,f.push(x))}else if(b instanceof Z.Geometry){var D,U,I,F=w instanceof Z.MultiMaterial,N=!0===F?w.materials:null,B=b.vertices,O=b.faces,V=b.faceVertexUvs[0];V.length>0&&(y=V);for(var G=0,z=O.length;G<z;G++){var k=O[G],j=!0===F?N[k.materialIndex]:w;if(void 0!==j){if(D=B[k.a],U=B[k.b],I=B[k.c],!0===j.morphTargets){var H=b.morphTargets,W=this.morphTargetInfluences;n.set(0,0,0),i.set(0,0,0),o.set(0,0,0);for(var X=0,q=H.length;X<q;X++){var Y=W[X];if(0!==Y){var K=H[X].vertices;n.addScaledVector(a.subVectors(K[k.a],D),Y),i.addScaledVector(s.subVectors(K[k.b],U),Y),o.addScaledVector(c.subVectors(K[k.c],I),Y)}}n.add(D),i.add(U),o.add(I),D=n,U=i,I=o}if(x=v(this,d,t,D,U,I,p)){if(y){var Q=y[G];l.copy(Q[0]),u.copy(Q[1]),h.copy(Q[2]),x.uv=m(p,D,U,I,l,u,h)}x.face=k,x.faceIndex=G,f.push(x)}}}}}}(),clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}}),Z.Bone=function(e){Z.Object3D.call(this),this.type=\"Bone\",this.skin=e},Z.Bone.prototype=Object.assign(Object.create(Z.Object3D.prototype),{constructor:Z.Bone,copy:function(e){return Z.Object3D.prototype.copy.call(this,e),this.skin=e.skin,this}}),Z.Skeleton=function(e,t,r){if(this.useVertexTexture=void 0===r||r,this.identityMatrix=new Z.Matrix4,e=e||[],this.bones=e.slice(0),this.useVertexTexture){var n=Math.sqrt(4*this.bones.length);n=Z.Math.nextPowerOfTwo(Math.ceil(n)),n=Math.max(n,4),this.boneTextureWidth=n,this.boneTextureHeight=n,this.boneMatrices=new Float32Array(this.boneTextureWidth*this.boneTextureHeight*4),this.boneTexture=new Z.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,Z.RGBAFormat,Z.FloatType)}else this.boneMatrices=new Float32Array(16*this.bones.length);if(void 0===t)this.calculateInverses();else if(this.bones.length===t.length)this.boneInverses=t.slice(0);else{console.warn(\"THREE.Skeleton bonInverses is the wrong length.\"),this.boneInverses=[];for(var i=0,o=this.bones.length;i<o;i++)this.boneInverses.push(new Z.Matrix4)}},Object.assign(Z.Skeleton.prototype,{calculateInverses:function(){this.boneInverses=[];for(var e=0,t=this.bones.length;e<t;e++){var r=new Z.Matrix4;this.bones[e]&&r.getInverse(this.bones[e].matrixWorld),this.boneInverses.push(r)}},pose:function(){for(var e,t=0,r=this.bones.length;t<r;t++)(e=this.bones[t])&&e.matrixWorld.getInverse(this.boneInverses[t]);for(t=0,r=this.bones.length;t<r;t++)(e=this.bones[t])&&(e.parent instanceof Z.Bone?(e.matrix.getInverse(e.parent.matrixWorld),e.matrix.multiply(e.matrixWorld)):e.matrix.copy(e.matrixWorld),e.matrix.decompose(e.position,e.quaternion,e.scale))},update:(H=new Z.Matrix4,function(){for(var e=0,t=this.bones.length;e<t;e++){var r=this.bones[e]?this.bones[e].matrixWorld:this.identityMatrix;H.multiplyMatrices(r,this.boneInverses[e]),H.toArray(this.boneMatrices,16*e)}this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)}),clone:function(){return new Z.Skeleton(this.bones,this.boneInverses,this.useVertexTexture)}}),Z.SkinnedMesh=function(e,t,r){Z.Mesh.call(this,e,t),this.type=\"SkinnedMesh\",this.bindMode=\"attached\",this.bindMatrix=new Z.Matrix4,this.bindMatrixInverse=new Z.Matrix4;var n=[];if(this.geometry&&void 0!==this.geometry.bones){for(var i,o,a=0,s=this.geometry.bones.length;a<s;++a)o=this.geometry.bones[a],i=new Z.Bone(this),n.push(i),i.name=o.name,i.position.fromArray(o.pos),i.quaternion.fromArray(o.rotq),void 0!==o.scl&&i.scale.fromArray(o.scl);for(a=0,s=this.geometry.bones.length;a<s;++a)-1!==(o=this.geometry.bones[a]).parent&&null!==o.parent&&void 0!==n[o.parent]?n[o.parent].add(n[a]):this.add(n[a])}this.normalizeSkinWeights(),this.updateMatrixWorld(!0),this.bind(new Z.Skeleton(n,void 0,r),this.matrixWorld)},Z.SkinnedMesh.prototype=Object.assign(Object.create(Z.Mesh.prototype),{constructor:Z.SkinnedMesh,bind:function(e,t){this.skeleton=e,void 0===t&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.getInverse(t)},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){if(this.geometry instanceof Z.Geometry)for(var e=0;e<this.geometry.skinWeights.length;e++){var t=this.geometry.skinWeights[e];(i=1/t.lengthManhattan())!==1/0?t.multiplyScalar(i):t.set(1,0,0,0)}else if(this.geometry instanceof Z.BufferGeometry){var r=new Z.Vector4,n=this.geometry.attributes.skinWeight;for(e=0;e<n.count;e++){var i;r.x=n.getX(e),r.y=n.getY(e),r.z=n.getZ(e),r.w=n.getW(e),(i=1/r.lengthManhattan())!==1/0?r.multiplyScalar(i):r.set(1,0,0,0),n.setXYZW(e,r.x,r.y,r.z,r.w)}}},updateMatrixWorld:function(e){Z.Mesh.prototype.updateMatrixWorld.call(this,!0),\"attached\"===this.bindMode?this.bindMatrixInverse.getInverse(this.matrixWorld):\"detached\"===this.bindMode?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn(\"THREE.SkinnedMesh unrecognized bindMode: \"+this.bindMode)},clone:function(){return new this.constructor(this.geometry,this.material,this.skeleton.useVertexTexture).copy(this)}}),Z.LOD=function(){Z.Object3D.call(this),this.type=\"LOD\",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}})},Z.LOD.prototype=Object.assign(Object.create(Z.Object3D.prototype),{constructor:Z.LOD,copy:function(e){Z.Object3D.prototype.copy.call(this,e,!1);for(var t=e.levels,r=0,n=t.length;r<n;r++){var i=t[r];this.addLevel(i.object.clone(),i.distance)}return this},addLevel:function(e,t){void 0===t&&(t=0),t=Math.abs(t);for(var r=this.levels,n=0;n<r.length&&!(t<r[n].distance);n++);r.splice(n,0,{distance:t,object:e}),this.add(e)},getObjectForDistance:function(e){for(var t=this.levels,r=1,n=t.length;r<n&&!(e<t[r].distance);r++);return t[r-1].object},raycast:(W=new Z.Vector3,function(e,t){W.setFromMatrixPosition(this.matrixWorld);var r=e.ray.origin.distanceTo(W);this.getObjectForDistance(r).raycast(e,t)}),update:function(){var e=new Z.Vector3,t=new Z.Vector3;return function(r){var n=this.levels;if(n.length>1){e.setFromMatrixPosition(r.matrixWorld),t.setFromMatrixPosition(this.matrixWorld);var i=e.distanceTo(t);n[0].object.visible=!0;for(var o=1,a=n.length;o<a&&i>=n[o].distance;o++)n[o-1].object.visible=!1,n[o].object.visible=!0;for(;o<a;o++)n[o].object.visible=!1}}}(),toJSON:function(e){var t=Z.Object3D.prototype.toJSON.call(this,e);t.object.levels=[];for(var r=this.levels,n=0,i=r.length;n<i;n++){var o=r[n];t.object.levels.push({object:o.object.uuid,distance:o.distance})}return t}}),Z.Sprite=function(e){Z.Object3D.call(this),this.type=\"Sprite\",this.material=void 0!==e?e:new Z.SpriteMaterial},Z.Sprite.prototype=Object.assign(Object.create(Z.Object3D.prototype),{constructor:Z.Sprite,raycast:function(){var e=new Z.Vector3;return function(t,r){e.setFromMatrixPosition(this.matrixWorld);var n=t.ray.distanceSqToPoint(e);n>this.scale.x*this.scale.y/4||r.push({distance:Math.sqrt(n),point:this.position,face:null,object:this})}}(),clone:function(){return new this.constructor(this.material).copy(this)}}),Z.LensFlare=function(e,t,r,n,i){Z.Object3D.call(this),this.lensFlares=[],this.positionScreen=new Z.Vector3,this.customUpdateCallback=void 0,void 0!==e&&this.add(e,t,r,n,i)},Z.LensFlare.prototype=Object.assign(Object.create(Z.Object3D.prototype),{constructor:Z.LensFlare,copy:function(e){Z.Object3D.prototype.copy.call(this,e),this.positionScreen.copy(e.positionScreen),this.customUpdateCallback=e.customUpdateCallback;for(var t=0,r=e.lensFlares.length;t<r;t++)this.lensFlares.push(e.lensFlares[t]);return this},add:function(e,t,r,n,i,o){void 0===t&&(t=-1),void 0===r&&(r=0),void 0===o&&(o=1),void 0===i&&(i=new Z.Color(16777215)),void 0===n&&(n=Z.NormalBlending),r=Math.min(r,Math.max(0,r)),this.lensFlares.push({texture:e,size:t,distance:r,x:0,y:0,z:0,scale:1,rotation:0,opacity:o,color:i,blending:n})},updateLensFlares:function(){var e,t,r=this.lensFlares.length,n=2*-this.positionScreen.x,i=2*-this.positionScreen.y;for(e=0;e<r;e++)(t=this.lensFlares[e]).x=this.positionScreen.x+n*t.distance,t.y=this.positionScreen.y+i*t.distance,t.wantedRotation=t.x*Math.PI*.25,t.rotation+=.25*(t.wantedRotation-t.rotation)}}),Z.Scene=function(){Z.Object3D.call(this),this.type=\"Scene\",this.background=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0},Z.Scene.prototype=Object.create(Z.Object3D.prototype),Z.Scene.prototype.constructor=Z.Scene,Z.Scene.prototype.copy=function(e,t){return Z.Object3D.prototype.copy.call(this,e,t),null!==e.background&&(this.background=e.background.clone()),null!==e.fog&&(this.fog=e.fog.clone()),null!==e.overrideMaterial&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this},Z.Fog=function(e,t,r){this.name=\"\",this.color=new Z.Color(e),this.near=void 0!==t?t:1,this.far=void 0!==r?r:1e3},Z.Fog.prototype.clone=function(){return new Z.Fog(this.color.getHex(),this.near,this.far)},Z.FogExp2=function(e,t){this.name=\"\",this.color=new Z.Color(e),this.density=void 0!==t?t:25e-5},Z.FogExp2.prototype.clone=function(){return new Z.FogExp2(this.color.getHex(),this.density)},Z.ShaderChunk={},Z.ShaderChunk.alphamap_fragment=\"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\\n\",Z.ShaderChunk.alphamap_pars_fragment=\"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\\n\",Z.ShaderChunk.alphatest_fragment=\"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\\n\",Z.ShaderChunk.aomap_fragment=\"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\\n\",Z.ShaderChunk.aomap_pars_fragment=\"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\",Z.ShaderChunk.begin_vertex=\"\\nvec3 transformed = vec3( position );\\n\",Z.ShaderChunk.beginnormal_vertex=\"\\nvec3 objectNormal = vec3( normal );\\n\",Z.ShaderChunk.bsdfs=\"bool testLightInRange( const in float lightDistance, const in float cutoffDistance ) {\\n\\treturn any( bvec2( cutoffDistance == 0.0, lightDistance < cutoffDistance ) );\\n}\\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\t\\tif( decayExponent > 0.0 ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\t\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\t\\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\t\\treturn distanceFalloff * maxDistanceCutoffFactor;\\n#else\\n\\t\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n#endif\\n\\t\\t}\\n\\t\\treturn 1.0;\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\\n\\treturn specularColor * AB.x + AB.y;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n\",Z.ShaderChunk.bumpmap_pars_fragment=\"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\t\\tvec3 vSigmaX = dFdx( surf_pos );\\n\\t\\tvec3 vSigmaY = dFdy( surf_pos );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\\n\",Z.ShaderChunk.clipping_planes_fragment=\"#if NUM_CLIPPING_PLANES > 0\\n\\tfor ( int i = 0; i < NUM_CLIPPING_PLANES; ++ i ) {\\n\\t\\tvec4 plane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n#endif\\n\",Z.ShaderChunk.clipping_planes_pars_fragment=\"#if NUM_CLIPPING_PLANES > 0\\n\\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\t\\tvarying vec3 vViewPosition;\\n\\t#endif\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\\n\",Z.ShaderChunk.clipping_planes_pars_vertex=\"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n\",Z.ShaderChunk.clipping_planes_vertex=\"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n\",Z.ShaderChunk.color_fragment=\"#ifdef USE_COLOR\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\",Z.ShaderChunk.color_pars_fragment=\"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\\n\",Z.ShaderChunk.color_pars_vertex=\"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\",Z.ShaderChunk.color_vertex=\"#ifdef USE_COLOR\\n\\tvColor.xyz = color.xyz;\\n#endif\",Z.ShaderChunk.common=\"#define PI 3.14159265359\\n#define PI2 6.28318530718\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\n\",Z.ShaderChunk.cube_uv_reflection_fragment=\"#ifdef ENVMAP_TYPE_CUBE_UV\\n#define cubeUV_textureSize (1024.0)\\nint getFaceFromDirection(vec3 direction) {\\n\\tvec3 absDirection = abs(direction);\\n\\tint face = -1;\\n\\tif( absDirection.x > absDirection.z ) {\\n\\t\\tif(absDirection.x > absDirection.y )\\n\\t\\t\\tface = direction.x > 0.0 ? 0 : 3;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\telse {\\n\\t\\tif(absDirection.z > absDirection.y )\\n\\t\\t\\tface = direction.z > 0.0 ? 2 : 5;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\treturn face;\\n}\\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\n\\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\n\\tfloat dxRoughness = dFdx(roughness);\\n\\tfloat dyRoughness = dFdy(roughness);\\n\\tvec3 dx = dFdx( vec * scale * dxRoughness );\\n\\tvec3 dy = dFdy( vec * scale * dyRoughness );\\n\\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\\n\\td = clamp(d, 1.0, cubeUV_rangeClamp);\\n\\tfloat mipLevel = 0.5 * log2(d);\\n\\treturn vec2(floor(mipLevel), fract(mipLevel));\\n}\\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\n\\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\n\\tfloat a = 16.0 * cubeUV_rcpTextureSize;\\n\\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\n\\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\\n\\tfloat powScale = exp2_packed.x * exp2_packed.y;\\n\\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\n\\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\n\\tbool bRes = mipLevel == 0.0;\\n\\tscale =  bRes && (scale < a) ? a : scale;\\n\\tvec3 r;\\n\\tvec2 offset;\\n\\tint face = getFaceFromDirection(direction);\\n\\tfloat rcpPowScale = 1.0 / powScale;\\n\\tif( face == 0) {\\n\\t\\tr = vec3(direction.x, -direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\\n\\t}\\n\\telse if( face == 1) {\\n\\t\\tr = vec3(direction.y, direction.x, direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\\n\\t}\\n\\telse if( face == 2) {\\n\\t\\tr = vec3(direction.z, direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\\n\\t}\\n\\telse if( face == 3) {\\n\\t\\tr = vec3(direction.x, direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\\n\\t}\\n\\telse if( face == 4) {\\n\\t\\tr = vec3(direction.y, direction.x, -direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\\n\\t}\\n\\telse {\\n\\t\\tr = vec3(direction.z, -direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\\n\\t}\\n\\tr = normalize(r);\\n\\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\\n\\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\n\\tvec2 base = offset + vec2( texelOffset );\\n\\treturn base + s * ( scale - 2.0 * texelOffset );\\n}\\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\\n\\tfloat roughnessVal = roughness* cubeUV_maxLods3;\\n\\tfloat r1 = floor(roughnessVal);\\n\\tfloat r2 = r1 + 1.0;\\n\\tfloat t = fract(roughnessVal);\\n\\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\n\\tfloat s = mipInfo.y;\\n\\tfloat level0 = mipInfo.x;\\n\\tfloat level1 = level0 + 1.0;\\n\\tlevel1 = level1 > 5.0 ? 5.0 : level1;\\n\\tlevel0 += min( floor( s + 0.5 ), 5.0 );\\n\\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\n\\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\n\\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\n\\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\n\\tvec4 result = mix(color10, color20, t);\\n\\treturn vec4(result.rgb, 1.0);\\n}\\n#endif\\n\",Z.ShaderChunk.defaultnormal_vertex=\"#ifdef FLIP_SIDED\\n\\tobjectNormal = -objectNormal;\\n#endif\\nvec3 transformedNormal = normalMatrix * objectNormal;\\n\",Z.ShaderChunk.displacementmap_vertex=\"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n#endif\\n\",Z.ShaderChunk.displacementmap_pars_vertex=\"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\\n\",Z.ShaderChunk.emissivemap_fragment=\"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\\n\",Z.ShaderChunk.emissivemap_pars_fragment=\"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\\n\",Z.ShaderChunk.encodings_pars_fragment=\"\\nvec4 LinearToLinear( in vec4 value ) {\\n  return value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n  return vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n  return vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n  return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n  return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n  return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n  float maxComponent = max( max( value.r, value.g ), value.b );\\n  float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n  return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n  return vec4( value.xyz * value.w * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n  float maxRGB = max( value.x, max( value.g, value.b ) );\\n  float M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n  M            = ceil( M * 255.0 ) / 255.0;\\n  return vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n    return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n    float maxRGB = max( value.x, max( value.g, value.b ) );\\n    float D      = max( maxRange / maxRGB, 1.0 );\\n    D            = min( floor( D ) / 255.0, 1.0 );\\n    return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n  vec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\\n  Xp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\\n  vec4 vResult;\\n  vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n  float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n  vResult.w = fract(Le);\\n  vResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\\n  return vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n  float Le = value.z * 255.0 + value.w;\\n  vec3 Xp_Y_XYZp;\\n  Xp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\\n  Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n  Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n  vec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\\n  return vec4( max(vRGB, 0.0), 1.0 );\\n}\\n\",Z.ShaderChunk.encodings_fragment=\"  gl_FragColor = linearToOutputTexel( gl_FragColor );\\n\",Z.ShaderChunk.envmap_fragment=\"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\tvec2 sampleUV;\\n\\t\\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\n\\t\\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\tvec3 reflectView = flipNormal * normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\\n\\t\\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\\t#endif\\n\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\\n\",Z.ShaderChunk.envmap_pars_fragment=\"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\\n\\tuniform float reflectivity;\\n\\tuniform float envMapIntenstiy;\\n#endif\\n#ifdef USE_ENVMAP\\n\\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\tuniform float flipEnvMap;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\\n\",Z.ShaderChunk.envmap_pars_vertex=\"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\\n\",Z.ShaderChunk.envmap_vertex=\"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\n\",Z.ShaderChunk.fog_fragment=\"#ifdef USE_FOG\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\\n\\t#else\\n\\t\\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\n\\t#endif\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\\n\",Z.ShaderChunk.fog_pars_fragment=\"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\",Z.ShaderChunk.lightmap_fragment=\"#ifdef USE_LIGHTMAP\\n\\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n#endif\\n\",Z.ShaderChunk.lightmap_pars_fragment=\"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\",Z.ShaderChunk.lights_lambert_vertex=\"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\n#if NUM_POINT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\",Z.ShaderChunk.lights_pars=\"uniform vec3 ambientLightColor;\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tif ( testLightInRange( lightDistance, pointLight.distance ) ) {\\n\\t\\t\\tdirectLight.color = pointLight.color;\\n\\t\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( all( bvec2( angleCos > spotLight.coneCos, testLightInRange( lightDistance, spotLight.distance ) ) ) ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\\n#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\t#include <normal_flip>\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\t#include <normal_flip>\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\\n\\t\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\t\\tvec2 sampleUV;\\n\\t\\t\\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\n\\t\\t\\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\t\\tvec3 reflectView = flipNormal * normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\\n\",Z.ShaderChunk.lights_phong_fragment=\"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\\n\",Z.ShaderChunk.lights_phong_pars_fragment=\"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tvec3\\tspecularColor;\\n\\tfloat\\tspecularShininess;\\n\\tfloat\\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\\n\",Z.ShaderChunk.lights_physical_fragment=\"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\n#ifdef STANDARD\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.clearCoat = saturate( clearCoat );\\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\\n#endif\\n\",Z.ShaderChunk.lights_physical_pars_fragment=\"struct PhysicalMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tfloat\\tspecularRoughness;\\n\\tvec3\\tspecularColor;\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoat;\\n\\t\\tfloat clearCoatRoughness;\\n\\t#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\\n\\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifndef STANDARD\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\tfloat dotNL = dotNV;\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\\n\",Z.ShaderChunk.lights_template=\"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = normalize( vViewPosition );\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t \\tirradiance += getLightProbeIndirectIrradiance( geometry, 8 );\\n\\t#endif\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tvec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\\n\\t#ifndef STANDARD\\n\\t\\tvec3 clearCoatRadiance = getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), 8 );\\n\\t#else\\n\\t\\tvec3 clearCoatRadiance = vec3( 0.0 );\\n\\t#endif\\n\\t\\t\\n\\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\\n#endif\\n\",Z.ShaderChunk.logdepthbuf_fragment=\"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\\n\\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\\n#endif\",Z.ShaderChunk.logdepthbuf_pars_fragment=\"#ifdef USE_LOGDEPTHBUF\\n\\tuniform float logDepthBufFC;\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n#endif\\n\",Z.ShaderChunk.logdepthbuf_pars_vertex=\"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n\\tuniform float logDepthBufFC;\\n#endif\",Z.ShaderChunk.logdepthbuf_vertex=\"#ifdef USE_LOGDEPTHBUF\\n\\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t#else\\n\\t\\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\\n\\t#endif\\n#endif\\n\",Z.ShaderChunk.map_fragment=\"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\\n\",Z.ShaderChunk.map_pars_fragment=\"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n\",Z.ShaderChunk.map_particle_fragment=\"#ifdef USE_MAP\\n\\tvec4 mapTexel = texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n\",Z.ShaderChunk.map_particle_pars_fragment=\"#ifdef USE_MAP\\n\\tuniform vec4 offsetRepeat;\\n\\tuniform sampler2D map;\\n#endif\\n\",Z.ShaderChunk.metalnessmap_fragment=\"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.r;\\n#endif\\n\",Z.ShaderChunk.metalnessmap_pars_fragment=\"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\",Z.ShaderChunk.morphnormal_vertex=\"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n#endif\\n\",Z.ShaderChunk.morphtarget_pars_vertex=\"#ifdef USE_MORPHTARGETS\\n\\t#ifndef USE_MORPHNORMALS\\n\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\",Z.ShaderChunk.morphtarget_vertex=\"#ifdef USE_MORPHTARGETS\\n\\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\\n\",Z.ShaderChunk.normal_flip=\"#ifdef DOUBLE_SIDED\\n\\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n#else\\n\\tfloat flipNormal = 1.0;\\n#endif\\n\",Z.ShaderChunk.normal_fragment=\"#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal ) * flipNormal;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\\n\",Z.ShaderChunk.normalmap_pars_fragment=\"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\t\\tvec3 q0 = dFdx( eye_pos.xyz );\\n\\t\\tvec3 q1 = dFdy( eye_pos.xyz );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\\n\\t\\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\\n\\t\\tvec3 N = normalize( surf_norm );\\n\\t\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\tmapN.xy = normalScale * mapN.xy;\\n\\t\\tmat3 tsn = mat3( S, T, N );\\n\\t\\treturn normalize( tsn * mapN );\\n\\t}\\n#endif\\n\",Z.ShaderChunk.packing=\"vec3 packNormalToRGB( const in vec3 normal ) {\\n  return normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n  return 1.0 - 2.0 * rgb.xyz;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n  return ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n  return linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n  return (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n  return ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\\n\",Z.ShaderChunk.premultiplied_alpha_fragment=\"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\\n\",Z.ShaderChunk.project_vertex=\"#ifdef USE_SKINNING\\n\\tvec4 mvPosition = modelViewMatrix * skinned;\\n#else\\n\\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\n#endif\\ngl_Position = projectionMatrix * mvPosition;\\n\",Z.ShaderChunk.roughnessmap_fragment=\"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.r;\\n#endif\\n\",Z.ShaderChunk.roughnessmap_pars_fragment=\"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\",Z.ShaderChunk.shadowmap_pars_fragment=\"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\n\\t\\tconst vec2 offset = vec2( 0.0, 1.0 );\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / size;\\n\\t\\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\\n\\t\\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\n\\t\\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\n\\t\\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\n\\t\\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\n\\t\\tvec2 f = fract( uv * size + 0.5 );\\n\\t\\tfloat a = mix( lb, lt, f.y );\\n\\t\\tfloat b = mix( rb, rt, f.y );\\n\\t\\tfloat c = mix( a, b, f.x );\\n\\t\\treturn c;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn 1.0;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowBias ) / 1000.0;\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\",Z.ShaderChunk.shadowmap_pars_vertex=\"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n#endif\\n\",Z.ShaderChunk.shadowmap_vertex=\"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n#endif\\n\",Z.ShaderChunk.shadowmask_pars_fragment=\"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tDirectionalLight directionalLight;\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tSpotLight spotLight;\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tPointLight pointLight;\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\\n\",Z.ShaderChunk.skinbase_vertex=\"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\",Z.ShaderChunk.skinning_pars_vertex=\"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform sampler2D boneTexture;\\n\\t\\tuniform int boneTextureWidth;\\n\\t\\tuniform int boneTextureHeight;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureWidth ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureWidth ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureWidth );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureHeight );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\\n\",Z.ShaderChunk.skinning_vertex=\"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\tskinned  = bindMatrixInverse * skinned;\\n#endif\\n\",Z.ShaderChunk.skinnormal_vertex=\"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n#endif\\n\",Z.ShaderChunk.specularmap_fragment=\"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\",Z.ShaderChunk.specularmap_pars_fragment=\"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\",Z.ShaderChunk.tonemapping_fragment=\"#if defined( TONE_MAPPING )\\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\\n\",Z.ShaderChunk.tonemapping_pars_fragment=\"#define saturate(a) clamp( a, 0.0, 1.0 )\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\nvec3 LinearToneMapping( vec3 color ) {\\n  return toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n  color *= toneMappingExposure;\\n  return saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n  color *= toneMappingExposure;\\n  return saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n  color *= toneMappingExposure;\\n  color = max( vec3( 0.0 ), color - 0.004 );\\n  return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\n\",Z.ShaderChunk.uv2_pars_fragment=\"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\",Z.ShaderChunk.uv2_pars_vertex=\"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n#endif\",Z.ShaderChunk.uv2_vertex=\"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = uv2;\\n#endif\",Z.ShaderChunk.uv_pars_fragment=\"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n#endif\",Z.ShaderChunk.uv_pars_vertex=\"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n\\tuniform vec4 offsetRepeat;\\n#endif\\n\",Z.ShaderChunk.uv_vertex=\"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\\n#endif\",Z.ShaderChunk.worldpos_vertex=\"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( PHYSICAL ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\\n\\t#ifdef USE_SKINNING\\n\\t\\tvec4 worldPosition = modelMatrix * skinned;\\n\\t#else\\n\\t\\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n\\t#endif\\n#endif\\n\",Z.UniformsUtils={merge:function(e){for(var t={},r=0;r<e.length;r++){var n=this.clone(e[r]);for(var i in n)t[i]=n[i]}return t},clone:function(e){var t={};for(var r in e)for(var n in t[r]={},e[r]){var i=e[r][n];i instanceof Z.Color||i instanceof Z.Vector2||i instanceof Z.Vector3||i instanceof Z.Vector4||i instanceof Z.Matrix3||i instanceof Z.Matrix4||i instanceof Z.Texture?t[r][n]=i.clone():Array.isArray(i)?t[r][n]=i.slice():t[r][n]=i}return t}},Z.UniformsLib={common:{diffuse:{value:new Z.Color(15658734)},opacity:{value:1},map:{value:null},offsetRepeat:{value:new Z.Vector4(0,0,1,1)},specularMap:{value:null},alphaMap:{value:null},envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new Z.Vector2(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Z.Color(16777215)}},lights:{ambientLightColor:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}}},points:{diffuse:{value:new Z.Color(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},offsetRepeat:{value:new Z.Vector4(0,0,1,1)}}},Z.ShaderChunk.cube_frag=\"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\\n\\tgl_FragColor.a *= opacity;\\n}\\n\",Z.ShaderChunk.cube_vert=\"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\\n\",Z.ShaderChunk.depth_frag=\"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\n\\t#endif\\n}\\n\",Z.ShaderChunk.depth_vert=\"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\\n\",Z.ShaderChunk.distanceRGBA_frag=\"uniform vec3 lightPos;\\nvarying vec4 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tgl_FragColor = packDepthToRGBA( length( vWorldPosition.xyz - lightPos.xyz ) / 1000.0 );\\n}\\n\",Z.ShaderChunk.distanceRGBA_vert=\"varying vec4 vWorldPosition;\\n#include <common>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <skinbase_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition;\\n}\\n\",Z.ShaderChunk.equirect_frag=\"uniform sampler2D tEquirect;\\nuniform float tFlip;\\nvarying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldPosition );\\n\\tvec2 sampleUV;\\n\\tsampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\\n\\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n}\\n\",Z.ShaderChunk.equirect_vert=\"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\\n\",Z.ShaderChunk.linedashed_frag=\"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\",Z.ShaderChunk.linedashed_vert=\"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\tvLineDistance = scale * lineDistance;\\n\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\\n\",Z.ShaderChunk.meshbasic_frag=\"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight;\\n\\treflectedLight.directDiffuse = vec3( 0.0 );\\n\\treflectedLight.directSpecular = vec3( 0.0 );\\n\\treflectedLight.indirectDiffuse = diffuseColor.rgb;\\n\\treflectedLight.indirectSpecular = vec3( 0.0 );\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <normal_flip>\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\",Z.ShaderChunk.meshbasic_vert=\"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n}\\n\",Z.ShaderChunk.meshlambert_frag=\"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <normal_flip>\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\",Z.ShaderChunk.meshlambert_vert=\"#define LAMBERT\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n}\\n\",Z.ShaderChunk.meshphong_frag=\"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_flip>\\n\\t#include <normal_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_template>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\",Z.ShaderChunk.meshphong_vert=\"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n}\\n\",Z.ShaderChunk.meshphysical_frag=\"#define PHYSICAL\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifndef STANDARD\\n\\tuniform float clearCoat;\\n\\tuniform float clearCoatRoughness;\\n#endif\\nuniform float envMapIntensity;\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <lights_pars>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_flip>\\n\\t#include <normal_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_template>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\",Z.ShaderChunk.meshphysical_vert=\"#define PHYSICAL\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n}\\n\",Z.ShaderChunk.normal_frag=\"uniform float opacity;\\nvarying vec3 vNormal;\\n#include <common>\\n#include <packing>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tgl_FragColor = vec4( packNormalToRGB( vNormal ), opacity );\\n\\t#include <logdepthbuf_fragment>\\n}\\n\",Z.ShaderChunk.normal_vert=\"varying vec3 vNormal;\\n#include <common>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvNormal = normalize( normalMatrix * normal );\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\\n\",Z.ShaderChunk.points_frag=\"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\",Z.ShaderChunk.points_vert=\"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tgl_PointSize = size * ( scale / - mvPosition.z );\\n\\t#else\\n\\t\\tgl_PointSize = size;\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n}\\n\",Z.ShaderChunk.shadow_frag=\"uniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( 0.0, 0.0, 0.0, opacity * ( 1.0  - getShadowMask() ) );\\n}\\n\",Z.ShaderChunk.shadow_vert=\"#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n}\\n\",Z.ShaderLib={basic:{uniforms:Z.UniformsUtils.merge([Z.UniformsLib.common,Z.UniformsLib.aomap,Z.UniformsLib.fog]),vertexShader:Z.ShaderChunk.meshbasic_vert,fragmentShader:Z.ShaderChunk.meshbasic_frag},lambert:{uniforms:Z.UniformsUtils.merge([Z.UniformsLib.common,Z.UniformsLib.aomap,Z.UniformsLib.lightmap,Z.UniformsLib.emissivemap,Z.UniformsLib.fog,Z.UniformsLib.lights,{emissive:{value:new Z.Color(0)}}]),vertexShader:Z.ShaderChunk.meshlambert_vert,fragmentShader:Z.ShaderChunk.meshlambert_frag},phong:{uniforms:Z.UniformsUtils.merge([Z.UniformsLib.common,Z.UniformsLib.aomap,Z.UniformsLib.lightmap,Z.UniformsLib.emissivemap,Z.UniformsLib.bumpmap,Z.UniformsLib.normalmap,Z.UniformsLib.displacementmap,Z.UniformsLib.fog,Z.UniformsLib.lights,{emissive:{value:new Z.Color(0)},specular:{value:new Z.Color(1118481)},shininess:{value:30}}]),vertexShader:Z.ShaderChunk.meshphong_vert,fragmentShader:Z.ShaderChunk.meshphong_frag},standard:{uniforms:Z.UniformsUtils.merge([Z.UniformsLib.common,Z.UniformsLib.aomap,Z.UniformsLib.lightmap,Z.UniformsLib.emissivemap,Z.UniformsLib.bumpmap,Z.UniformsLib.normalmap,Z.UniformsLib.displacementmap,Z.UniformsLib.roughnessmap,Z.UniformsLib.metalnessmap,Z.UniformsLib.fog,Z.UniformsLib.lights,{emissive:{value:new Z.Color(0)},roughness:{value:.5},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Z.ShaderChunk.meshphysical_vert,fragmentShader:Z.ShaderChunk.meshphysical_frag},points:{uniforms:Z.UniformsUtils.merge([Z.UniformsLib.points,Z.UniformsLib.fog]),vertexShader:Z.ShaderChunk.points_vert,fragmentShader:Z.ShaderChunk.points_frag},dashed:{uniforms:Z.UniformsUtils.merge([Z.UniformsLib.common,Z.UniformsLib.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Z.ShaderChunk.linedashed_vert,fragmentShader:Z.ShaderChunk.linedashed_frag},depth:{uniforms:Z.UniformsUtils.merge([Z.UniformsLib.common,Z.UniformsLib.displacementmap]),vertexShader:Z.ShaderChunk.depth_vert,fragmentShader:Z.ShaderChunk.depth_frag},normal:{uniforms:{opacity:{value:1}},vertexShader:Z.ShaderChunk.normal_vert,fragmentShader:Z.ShaderChunk.normal_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:Z.ShaderChunk.cube_vert,fragmentShader:Z.ShaderChunk.cube_frag},equirect:{uniforms:{tEquirect:{value:null},tFlip:{value:-1}},vertexShader:Z.ShaderChunk.equirect_vert,fragmentShader:Z.ShaderChunk.equirect_frag},distanceRGBA:{uniforms:{lightPos:{value:new Z.Vector3}},vertexShader:Z.ShaderChunk.distanceRGBA_vert,fragmentShader:Z.ShaderChunk.distanceRGBA_frag}},Z.ShaderLib.physical={uniforms:Z.UniformsUtils.merge([Z.ShaderLib.standard.uniforms,{clearCoat:{value:0},clearCoatRoughness:{value:0}}]),vertexShader:Z.ShaderChunk.meshphysical_vert,fragmentShader:Z.ShaderChunk.meshphysical_frag},Z.WebGLRenderer=function(e){console.log(\"THREE.WebGLRenderer\",Z.REVISION);var t=void 0!==(e=e||{}).canvas?e.canvas:document.createElementNS(\"http://www.w3.org/1999/xhtml\",\"canvas\"),r=void 0!==e.context?e.context:null,n=void 0!==e.alpha&&e.alpha,i=void 0===e.depth||e.depth,o=void 0===e.stencil||e.stencil,a=void 0!==e.antialias&&e.antialias,s=void 0===e.premultipliedAlpha||e.premultipliedAlpha,c=void 0!==e.preserveDrawingBuffer&&e.preserveDrawingBuffer,l=[],u=[],h=-1,d=[],p=-1,f=new Float32Array(8),m=[],v=[];this.domElement=t,this.context=null,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.gammaInput=!1,this.gammaOutput=!1,this.physicallyCorrectLights=!1,this.toneMapping=Z.LinearToneMapping,this.toneMappingExposure=1,this.toneMappingWhitePoint=1,this.maxMorphTargets=8,this.maxMorphNormals=4;var g,y=this,x=null,b=null,w=null,_=-1,M=\"\",S=null,T=new Z.Vector4,E=null,C=new Z.Vector4,A=0,L=new Z.Color(0),R=0,P=t.width,D=t.height,U=1,I=new Z.Vector4(0,0,P,D),F=!1,N=new Z.Vector4(0,0,P,D),B=new Z.Frustum,O=new Z.WebGLClipping,V=!1,G=!1,z=new Z.Sphere,k=new Z.Matrix4,j=new Z.Vector3,H={hash:\"\",ambient:[0,0,0],directional:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadowMap:[],spotShadowMatrix:[],point:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],shadows:[]},W={calls:0,vertices:0,faces:0,points:0};this.info={render:W,memory:{geometries:0,textures:0},programs:null};try{var X={alpha:n,depth:i,stencil:o,antialias:a,premultipliedAlpha:s,preserveDrawingBuffer:c};if(null===(g=r||t.getContext(\"webgl\",X)||t.getContext(\"experimental-webgl\",X)))throw null!==t.getContext(\"webgl\")?\"Error creating WebGL context with your selected attributes.\":\"Error creating WebGL context.\";void 0===g.getShaderPrecisionFormat&&(g.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}}),t.addEventListener(\"webglcontextlost\",ge,!1)}catch(e){console.error(\"THREE.WebGLRenderer: \"+e)}var q=new Z.WebGLExtensions(g);q.get(\"WEBGL_depth_texture\"),q.get(\"OES_texture_float\"),q.get(\"OES_texture_float_linear\"),q.get(\"OES_texture_half_float\"),q.get(\"OES_texture_half_float_linear\"),q.get(\"OES_standard_derivatives\"),q.get(\"ANGLE_instanced_arrays\"),q.get(\"OES_element_index_uint\")&&(Z.BufferGeometry.MaxIndex=4294967296);var Y=new Z.WebGLCapabilities(g,q,e),K=new Z.WebGLState(g,q,Re),Q=new Z.WebGLProperties,J=new Z.WebGLTextures(g,q,K,Q,Y,Re,this.info),$=new Z.WebGLObjects(g,Q,this.info),ee=new Z.WebGLPrograms(this,Y),te=new Z.WebGLLights;this.info.programs=ee.programs;var re=new Z.WebGLBufferRenderer(g,q,W),ne=new Z.WebGLIndexedBufferRenderer(g,q,W),ie=new Z.OrthographicCamera(-1,1,1,-1,0,1),oe=new Z.PerspectiveCamera,ae=new Z.Mesh(new Z.PlaneBufferGeometry(2,2),new Z.MeshBasicMaterial({depthTest:!1,depthWrite:!1,fog:!1})),se=Z.ShaderLib.cube,ce=new Z.Mesh(new Z.BoxBufferGeometry(5,5,5),new Z.ShaderMaterial({uniforms:se.uniforms,vertexShader:se.vertexShader,fragmentShader:se.fragmentShader,side:Z.BackSide,depthTest:!1,depthWrite:!1,fog:!1}));function le(){return null===b?U:1}function ue(e,t,r,n){!0===s&&(e*=n,t*=n,r*=n),K.clearColor(e,t,r,n)}function he(){K.init(),K.scissor(T.copy(I).multiplyScalar(U)),K.viewport(C.copy(N).multiplyScalar(U)),ue(L.r,L.g,L.b,R)}function de(){x=null,S=null,M=\"\",_=-1,K.reset()}he(),this.context=g,this.capabilities=Y,this.extensions=q,this.properties=Q,this.state=K;var pe=new Z.WebGLShadowMap(this,H,$,Y);this.shadowMap=pe;var fe,me=new Z.SpritePlugin(this,m),ve=new Z.LensFlarePlugin(this,v);function ge(e){e.preventDefault(),de(),he(),Q.clear()}function ye(e){var t=e.target;t.removeEventListener(\"dispose\",ye),function(e){xe(e),Q.delete(e)}(t)}function xe(e){var t=Q.get(e).program;e.program=void 0,void 0!==t&&ee.releaseProgram(t)}function be(e,t){return Math.abs(t[0])-Math.abs(e[0])}function we(e,t){return e.object.renderOrder!==t.object.renderOrder?e.object.renderOrder-t.object.renderOrder:e.material.program&&t.material.program&&e.material.program!==t.material.program?e.material.program.id-t.material.program.id:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function _e(e,t){return e.object.renderOrder!==t.object.renderOrder?e.object.renderOrder-t.object.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function Me(e,t,r,n,i){var o,a;r.transparent?(o=d,a=++p):(o=u,a=++h);var s=o[a];void 0!==s?(s.id=e.id,s.object=e,s.geometry=t,s.material=r,s.z=j.z,s.group=i):(s={id:e.id,object:e,geometry:t,material:r,z:j.z,group:i},o.push(s))}function Se(e){if(!B.intersectsSphere(e))return!1;var t=O.numPlanes;if(0===t)return!0;var r=y.clippingPlanes,n=e.center,i=-e.radius,o=0;do{if(r[o].distanceToPoint(n)<i)return!1}while(++o!==t);return!0}function Te(e,t,r,n){for(var i=0,o=e.length;i<o;i++){var a=e[i],s=a.object,c=a.geometry,l=void 0===n?a.material:n,u=a.group;if(s.modelViewMatrix.multiplyMatrices(t.matrixWorldInverse,s.matrixWorld),s.normalMatrix.getNormalMatrix(s.modelViewMatrix),s instanceof Z.ImmediateRenderObject){Ee(l);var h=Ce(t,r,l,s);M=\"\",s.render(function(e){y.renderBufferImmediate(e,h,l)})}else y.renderBufferDirect(t,r,c,l,s,u)}}function Ee(e){e.side!==Z.DoubleSide?K.enable(g.CULL_FACE):K.disable(g.CULL_FACE),K.setFlipSided(e.side===Z.BackSide),!0===e.transparent?K.setBlending(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha):K.setBlending(Z.NoBlending),K.setDepthFunc(e.depthFunc),K.setDepthTest(e.depthTest),K.setDepthWrite(e.depthWrite),K.setColorWrite(e.colorWrite),K.setPolygonOffset(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits)}function Ce(e,r,n,i){A=0;var o=Q.get(n);if(V){if(G||e!==S){var a=e===S&&n.id===_;O.setState(n.clippingPlanes,n.clipShadows,e,o,a)}void 0!==o.numClippingPlanes&&o.numClippingPlanes!==O.numPlanes&&(n.needsUpdate=!0)}void 0===o.program&&(n.needsUpdate=!0),void 0!==o.lightsHash&&o.lightsHash!==H.hash&&(n.needsUpdate=!0),n.needsUpdate&&(!function(e,t,r){var n=Q.get(e),i=ee.getParameters(e,H,t,O.numPlanes,r),o=ee.getProgramCode(e,i),a=n.program,s=!0;if(void 0===a)e.addEventListener(\"dispose\",ye);else if(a.code!==o)xe(e);else{if(void 0!==i.shaderID)return;s=!1}if(s){if(i.shaderID){var c=Z.ShaderLib[i.shaderID];n.__webglShader={name:e.type,uniforms:Z.UniformsUtils.clone(c.uniforms),vertexShader:c.vertexShader,fragmentShader:c.fragmentShader}}else n.__webglShader={name:e.type,uniforms:e.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader};e.__webglShader=n.__webglShader,a=ee.acquireProgram(e,i,o),n.program=a,e.program=a}var l=a.getAttributes();if(e.morphTargets){e.numSupportedMorphTargets=0;for(var u=0;u<y.maxMorphTargets;u++)l[\"morphTarget\"+u]>=0&&e.numSupportedMorphTargets++}if(e.morphNormals)for(e.numSupportedMorphNormals=0,u=0;u<y.maxMorphNormals;u++)l[\"morphNormal\"+u]>=0&&e.numSupportedMorphNormals++;var h=n.__webglShader.uniforms;(e instanceof Z.ShaderMaterial||e instanceof Z.RawShaderMaterial)&&!0!==e.clipping||(n.numClippingPlanes=O.numPlanes,h.clippingPlanes=O.uniform),e.lights&&(n.lightsHash=H.hash,h.ambientLightColor.value=H.ambient,h.directionalLights.value=H.directional,h.spotLights.value=H.spot,h.pointLights.value=H.point,h.hemisphereLights.value=H.hemi,h.directionalShadowMap.value=H.directionalShadowMap,h.directionalShadowMatrix.value=H.directionalShadowMatrix,h.spotShadowMap.value=H.spotShadowMap,h.spotShadowMatrix.value=H.spotShadowMatrix,h.pointShadowMap.value=H.pointShadowMap,h.pointShadowMatrix.value=H.pointShadowMatrix);var d=n.program.getUniforms(),p=Z.WebGLUniforms.seqWithValue(d.seq,h);n.uniformsList=p,n.dynamicUniforms=Z.WebGLUniforms.splitDynamic(p,h)}(n,r,i),n.needsUpdate=!1);var s,c,l=!1,u=!1,h=!1,d=o.program,p=d.getUniforms(),f=o.__webglShader.uniforms;if(d.id!==x&&(g.useProgram(d.program),x=d.id,l=!0,u=!0,h=!0),n.id!==_&&(_=n.id,u=!0),l||e!==S){if(p.set(g,e,\"projectionMatrix\"),Y.logarithmicDepthBuffer&&p.setValue(g,\"logDepthBufFC\",2/(Math.log(e.far+1)/Math.LN2)),e!==S&&(S=e,u=!0,h=!0),n instanceof Z.ShaderMaterial||n instanceof Z.MeshPhongMaterial||n instanceof Z.MeshStandardMaterial||n.envMap){var m=p.map.cameraPosition;void 0!==m&&m.setValue(g,j.setFromMatrixPosition(e.matrixWorld))}(n instanceof Z.MeshPhongMaterial||n instanceof Z.MeshLambertMaterial||n instanceof Z.MeshBasicMaterial||n instanceof Z.MeshStandardMaterial||n instanceof Z.ShaderMaterial||n.skinning)&&p.setValue(g,\"viewMatrix\",e.matrixWorldInverse),p.set(g,y,\"toneMappingExposure\"),p.set(g,y,\"toneMappingWhitePoint\")}if(n.skinning){p.setOptional(g,i,\"bindMatrix\"),p.setOptional(g,i,\"bindMatrixInverse\");var v=i.skeleton;v&&(Y.floatVertexTextures&&v.useVertexTexture?(p.set(g,v,\"boneTexture\"),p.set(g,v,\"boneTextureWidth\"),p.set(g,v,\"boneTextureHeight\")):p.setOptional(g,v,\"boneMatrices\"))}u&&(n.lights&&(c=h,(s=f).ambientLightColor.needsUpdate=c,s.directionalLights.needsUpdate=c,s.pointLights.needsUpdate=c,s.spotLights.needsUpdate=c,s.hemisphereLights.needsUpdate=c),r&&n.fog&&function(e,t){e.fogColor.value=t.color,t instanceof Z.Fog?(e.fogNear.value=t.near,e.fogFar.value=t.far):t instanceof Z.FogExp2&&(e.fogDensity.value=t.density)}(f,r),(n instanceof Z.MeshBasicMaterial||n instanceof Z.MeshLambertMaterial||n instanceof Z.MeshPhongMaterial||n instanceof Z.MeshStandardMaterial||n instanceof Z.MeshDepthMaterial)&&function(e,t){e.opacity.value=t.opacity,e.diffuse.value=t.color,t.emissive&&e.emissive.value.copy(t.emissive).multiplyScalar(t.emissiveIntensity);e.map.value=t.map,e.specularMap.value=t.specularMap,e.alphaMap.value=t.alphaMap,t.aoMap&&(e.aoMap.value=t.aoMap,e.aoMapIntensity.value=t.aoMapIntensity);var r;t.map?r=t.map:t.specularMap?r=t.specularMap:t.displacementMap?r=t.displacementMap:t.normalMap?r=t.normalMap:t.bumpMap?r=t.bumpMap:t.roughnessMap?r=t.roughnessMap:t.metalnessMap?r=t.metalnessMap:t.alphaMap?r=t.alphaMap:t.emissiveMap&&(r=t.emissiveMap);if(void 0!==r){r instanceof Z.WebGLRenderTarget&&(r=r.texture);var n=r.offset,i=r.repeat;e.offsetRepeat.value.set(n.x,n.y,i.x,i.y)}e.envMap.value=t.envMap,e.flipEnvMap.value=t.envMap instanceof Z.CubeTexture?-1:1,e.reflectivity.value=t.reflectivity,e.refractionRatio.value=t.refractionRatio}(f,n),n instanceof Z.LineBasicMaterial?Ae(f,n):n instanceof Z.LineDashedMaterial?(Ae(f,n),function(e,t){e.dashSize.value=t.dashSize,e.totalSize.value=t.dashSize+t.gapSize,e.scale.value=t.scale}(f,n)):n instanceof Z.PointsMaterial?function(e,r){if(e.diffuse.value=r.color,e.opacity.value=r.opacity,e.size.value=r.size*U,e.scale.value=.5*t.clientHeight,e.map.value=r.map,null!==r.map){var n=r.map.offset,i=r.map.repeat;e.offsetRepeat.value.set(n.x,n.y,i.x,i.y)}}(f,n):n instanceof Z.MeshLambertMaterial?function(e,t){t.lightMap&&(e.lightMap.value=t.lightMap,e.lightMapIntensity.value=t.lightMapIntensity);t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap)}(f,n):n instanceof Z.MeshPhongMaterial?function(e,t){e.specular.value=t.specular,e.shininess.value=Math.max(t.shininess,1e-4),t.lightMap&&(e.lightMap.value=t.lightMap,e.lightMapIntensity.value=t.lightMapIntensity);t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap);t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale);t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale));t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(f,n):n instanceof Z.MeshPhysicalMaterial?function(e,t){e.clearCoat.value=t.clearCoat,e.clearCoatRoughness.value=t.clearCoatRoughness,Le(e,t)}(f,n):n instanceof Z.MeshStandardMaterial?Le(f,n):n instanceof Z.MeshDepthMaterial?n.displacementMap&&(f.displacementMap.value=n.displacementMap,f.displacementScale.value=n.displacementScale,f.displacementBias.value=n.displacementBias):n instanceof Z.MeshNormalMaterial&&(f.opacity.value=n.opacity),Z.WebGLUniforms.upload(g,o.uniformsList,f,y)),p.set(g,i,\"modelViewMatrix\"),p.set(g,i,\"normalMatrix\"),p.setValue(g,\"modelMatrix\",i.matrixWorld);var b=o.dynamicUniforms;return null!==b&&(Z.WebGLUniforms.evalDynamic(b,f,i,e),Z.WebGLUniforms.upload(g,b,f,y)),d}function Ae(e,t){e.diffuse.value=t.color,e.opacity.value=t.opacity}function Le(e,t){e.roughness.value=t.roughness,e.metalness.value=t.metalness,t.roughnessMap&&(e.roughnessMap.value=t.roughnessMap),t.metalnessMap&&(e.metalnessMap.value=t.metalnessMap),t.lightMap&&(e.lightMap.value=t.lightMap,e.lightMapIntensity.value=t.lightMapIntensity),t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap),t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale)),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias),t.envMap&&(e.envMapIntensity.value=t.envMapIntensity)}function Re(e){var t;if(e===Z.RepeatWrapping)return g.REPEAT;if(e===Z.ClampToEdgeWrapping)return g.CLAMP_TO_EDGE;if(e===Z.MirroredRepeatWrapping)return g.MIRRORED_REPEAT;if(e===Z.NearestFilter)return g.NEAREST;if(e===Z.NearestMipMapNearestFilter)return g.NEAREST_MIPMAP_NEAREST;if(e===Z.NearestMipMapLinearFilter)return g.NEAREST_MIPMAP_LINEAR;if(e===Z.LinearFilter)return g.LINEAR;if(e===Z.LinearMipMapNearestFilter)return g.LINEAR_MIPMAP_NEAREST;if(e===Z.LinearMipMapLinearFilter)return g.LINEAR_MIPMAP_LINEAR;if(e===Z.UnsignedByteType)return g.UNSIGNED_BYTE;if(e===Z.UnsignedShort4444Type)return g.UNSIGNED_SHORT_4_4_4_4;if(e===Z.UnsignedShort5551Type)return g.UNSIGNED_SHORT_5_5_5_1;if(e===Z.UnsignedShort565Type)return g.UNSIGNED_SHORT_5_6_5;if(e===Z.ByteType)return g.BYTE;if(e===Z.ShortType)return g.SHORT;if(e===Z.UnsignedShortType)return g.UNSIGNED_SHORT;if(e===Z.IntType)return g.INT;if(e===Z.UnsignedIntType)return g.UNSIGNED_INT;if(e===Z.FloatType)return g.FLOAT;if(null!==(t=q.get(\"OES_texture_half_float\"))&&e===Z.HalfFloatType)return t.HALF_FLOAT_OES;if(e===Z.AlphaFormat)return g.ALPHA;if(e===Z.RGBFormat)return g.RGB;if(e===Z.RGBAFormat)return g.RGBA;if(e===Z.LuminanceFormat)return g.LUMINANCE;if(e===Z.LuminanceAlphaFormat)return g.LUMINANCE_ALPHA;if(e===Z.DepthFormat)return g.DEPTH_COMPONENT;if(e===Z.AddEquation)return g.FUNC_ADD;if(e===Z.SubtractEquation)return g.FUNC_SUBTRACT;if(e===Z.ReverseSubtractEquation)return g.FUNC_REVERSE_SUBTRACT;if(e===Z.ZeroFactor)return g.ZERO;if(e===Z.OneFactor)return g.ONE;if(e===Z.SrcColorFactor)return g.SRC_COLOR;if(e===Z.OneMinusSrcColorFactor)return g.ONE_MINUS_SRC_COLOR;if(e===Z.SrcAlphaFactor)return g.SRC_ALPHA;if(e===Z.OneMinusSrcAlphaFactor)return g.ONE_MINUS_SRC_ALPHA;if(e===Z.DstAlphaFactor)return g.DST_ALPHA;if(e===Z.OneMinusDstAlphaFactor)return g.ONE_MINUS_DST_ALPHA;if(e===Z.DstColorFactor)return g.DST_COLOR;if(e===Z.OneMinusDstColorFactor)return g.ONE_MINUS_DST_COLOR;if(e===Z.SrcAlphaSaturateFactor)return g.SRC_ALPHA_SATURATE;if(null!==(t=q.get(\"WEBGL_compressed_texture_s3tc\"))){if(e===Z.RGB_S3TC_DXT1_Format)return t.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===Z.RGBA_S3TC_DXT1_Format)return t.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===Z.RGBA_S3TC_DXT3_Format)return t.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===Z.RGBA_S3TC_DXT5_Format)return t.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(null!==(t=q.get(\"WEBGL_compressed_texture_pvrtc\"))){if(e===Z.RGB_PVRTC_4BPPV1_Format)return t.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(e===Z.RGB_PVRTC_2BPPV1_Format)return t.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(e===Z.RGBA_PVRTC_4BPPV1_Format)return t.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(e===Z.RGBA_PVRTC_2BPPV1_Format)return t.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(null!==(t=q.get(\"WEBGL_compressed_texture_etc1\"))&&e===Z.RGB_ETC1_Format)return t.COMPRESSED_RGB_ETC1_WEBGL;if(null!==(t=q.get(\"EXT_blend_minmax\"))){if(e===Z.MinEquation)return t.MIN_EXT;if(e===Z.MaxEquation)return t.MAX_EXT}return 0}this.getContext=function(){return g},this.getContextAttributes=function(){return g.getContextAttributes()},this.forceContextLoss=function(){q.get(\"WEBGL_lose_context\").loseContext()},this.getMaxAnisotropy=function(){return Y.getMaxAnisotropy()},this.getPrecision=function(){return Y.precision},this.getPixelRatio=function(){return U},this.setPixelRatio=function(e){void 0!==e&&(U=e,this.setSize(N.z,N.w,!1))},this.getSize=function(){return{width:P,height:D}},this.setSize=function(e,r,n){P=e,D=r,t.width=e*U,t.height=r*U,!1!==n&&(t.style.width=e+\"px\",t.style.height=r+\"px\"),this.setViewport(0,0,e,r)},this.setViewport=function(e,t,r,n){K.viewport(N.set(e,t,r,n))},this.setScissor=function(e,t,r,n){K.scissor(I.set(e,t,r,n))},this.setScissorTest=function(e){K.setScissorTest(F=e)},this.getClearColor=function(){return L},this.setClearColor=function(e,t){L.set(e),R=void 0!==t?t:1,ue(L.r,L.g,L.b,R)},this.getClearAlpha=function(){return R},this.setClearAlpha=function(e){R=e,ue(L.r,L.g,L.b,R)},this.clear=function(e,t,r){var n=0;(void 0===e||e)&&(n|=g.COLOR_BUFFER_BIT),(void 0===t||t)&&(n|=g.DEPTH_BUFFER_BIT),(void 0===r||r)&&(n|=g.STENCIL_BUFFER_BIT),g.clear(n)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.clearTarget=function(e,t,r,n){this.setRenderTarget(e),this.clear(t,r,n)},this.resetGLState=de,this.dispose=function(){d=[],p=-1,u=[],h=-1,t.removeEventListener(\"webglcontextlost\",ge,!1)},this.renderBufferImmediate=function(e,t,r){K.initAttributes();var n=Q.get(e);e.hasPositions&&!n.position&&(n.position=g.createBuffer()),e.hasNormals&&!n.normal&&(n.normal=g.createBuffer()),e.hasUvs&&!n.uv&&(n.uv=g.createBuffer()),e.hasColors&&!n.color&&(n.color=g.createBuffer());var i=t.getAttributes();if(e.hasPositions&&(g.bindBuffer(g.ARRAY_BUFFER,n.position),g.bufferData(g.ARRAY_BUFFER,e.positionArray,g.DYNAMIC_DRAW),K.enableAttribute(i.position),g.vertexAttribPointer(i.position,3,g.FLOAT,!1,0,0)),e.hasNormals){if(g.bindBuffer(g.ARRAY_BUFFER,n.normal),\"MeshPhongMaterial\"!==r.type&&\"MeshStandardMaterial\"!==r.type&&\"MeshPhysicalMaterial\"!==r.type&&r.shading===Z.FlatShading)for(var o=0,a=3*e.count;o<a;o+=9){var s=e.normalArray,c=(s[o+0]+s[o+3]+s[o+6])/3,l=(s[o+1]+s[o+4]+s[o+7])/3,u=(s[o+2]+s[o+5]+s[o+8])/3;s[o+0]=c,s[o+1]=l,s[o+2]=u,s[o+3]=c,s[o+4]=l,s[o+5]=u,s[o+6]=c,s[o+7]=l,s[o+8]=u}g.bufferData(g.ARRAY_BUFFER,e.normalArray,g.DYNAMIC_DRAW),K.enableAttribute(i.normal),g.vertexAttribPointer(i.normal,3,g.FLOAT,!1,0,0)}e.hasUvs&&r.map&&(g.bindBuffer(g.ARRAY_BUFFER,n.uv),g.bufferData(g.ARRAY_BUFFER,e.uvArray,g.DYNAMIC_DRAW),K.enableAttribute(i.uv),g.vertexAttribPointer(i.uv,2,g.FLOAT,!1,0,0)),e.hasColors&&r.vertexColors!==Z.NoColors&&(g.bindBuffer(g.ARRAY_BUFFER,n.color),g.bufferData(g.ARRAY_BUFFER,e.colorArray,g.DYNAMIC_DRAW),K.enableAttribute(i.color),g.vertexAttribPointer(i.color,3,g.FLOAT,!1,0,0)),K.disableUnusedAttributes(),g.drawArrays(g.TRIANGLES,0,e.count),e.count=0},this.renderBufferDirect=function(e,t,r,n,i,o){Ee(n);var a=Ce(e,t,n,i),s=!1,c=r.id+\"_\"+a.id+\"_\"+n.wireframe;c!==M&&(M=c,s=!0);var l=i.morphTargetInfluences;if(void 0!==l){for(var u=[],h=0,d=l.length;h<d;h++){var p=l[h];u.push([p,h])}u.sort(be),u.length>8&&(u.length=8);var m=r.morphAttributes;for(h=0,d=u.length;h<d;h++){p=u[h];if(f[h]=p[0],0!==p[0]){var v=p[1];!0===n.morphTargets&&m.position&&r.addAttribute(\"morphTarget\"+h,m.position[v]),!0===n.morphNormals&&m.normal&&r.addAttribute(\"morphNormal\"+h,m.normal[v])}else!0===n.morphTargets&&r.removeAttribute(\"morphTarget\"+h),!0===n.morphNormals&&r.removeAttribute(\"morphNormal\"+h)}a.getUniforms().setValue(g,\"morphTargetInfluences\",f),s=!0}v=r.index;var y,x=r.attributes.position;!0===n.wireframe&&(v=$.getWireframeAttribute(r)),null!==v?(y=ne).setIndex(v):y=re,s&&(!function(e,t,r,n){var i;if(r instanceof Z.InstancedBufferGeometry&&null===(i=q.get(\"ANGLE_instanced_arrays\")))return void console.error(\"THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.\");void 0===n&&(n=0);K.initAttributes();var o=r.attributes,a=t.getAttributes(),s=e.defaultAttributeValues;for(var c in a){var l=a[c];if(l>=0){var u=o[c];if(void 0!==u){var h=g.FLOAT,d=u.array,p=u.normalized;d instanceof Float32Array?h=g.FLOAT:d instanceof Float64Array?console.warn(\"Unsupported data buffer format: Float64Array\"):d instanceof Uint16Array?h=g.UNSIGNED_SHORT:d instanceof Int16Array?h=g.SHORT:d instanceof Uint32Array?h=g.UNSIGNED_INT:d instanceof Int32Array?h=g.INT:d instanceof Int8Array?h=g.BYTE:d instanceof Uint8Array&&(h=g.UNSIGNED_BYTE);var f=u.itemSize,m=$.getAttributeBuffer(u);if(u instanceof Z.InterleavedBufferAttribute){var v=u.data,y=v.stride,x=u.offset;v instanceof Z.InstancedInterleavedBuffer?(K.enableAttributeAndDivisor(l,v.meshPerAttribute,i),void 0===r.maxInstancedCount&&(r.maxInstancedCount=v.meshPerAttribute*v.count)):K.enableAttribute(l),g.bindBuffer(g.ARRAY_BUFFER,m),g.vertexAttribPointer(l,f,h,p,y*v.array.BYTES_PER_ELEMENT,(n*y+x)*v.array.BYTES_PER_ELEMENT)}else u instanceof Z.InstancedBufferAttribute?(K.enableAttributeAndDivisor(l,u.meshPerAttribute,i),void 0===r.maxInstancedCount&&(r.maxInstancedCount=u.meshPerAttribute*u.count)):K.enableAttribute(l),g.bindBuffer(g.ARRAY_BUFFER,m),g.vertexAttribPointer(l,f,h,p,0,n*f*u.array.BYTES_PER_ELEMENT)}else if(void 0!==s){var b=s[c];if(void 0!==b)switch(b.length){case 2:g.vertexAttrib2fv(l,b);break;case 3:g.vertexAttrib3fv(l,b);break;case 4:g.vertexAttrib4fv(l,b);break;default:g.vertexAttrib1fv(l,b)}}}}K.disableUnusedAttributes()}(n,a,r),null!==v&&g.bindBuffer(g.ELEMENT_ARRAY_BUFFER,$.getAttributeBuffer(v)));var b=1/0;null!==v?b=v.count:void 0!==x&&(b=x.count);var w=r.drawRange.start,_=r.drawRange.count,S=null!==o?o.start:0,T=null!==o?o.count:1/0,E=Math.max(0,w,S),C=Math.min(0+b,w+_,S+T)-1,A=Math.max(0,C-E+1);if(i instanceof Z.Mesh)if(!0===n.wireframe)K.setLineWidth(n.wireframeLinewidth*le()),y.setMode(g.LINES);else switch(i.drawMode){case Z.TrianglesDrawMode:y.setMode(g.TRIANGLES);break;case Z.TriangleStripDrawMode:y.setMode(g.TRIANGLE_STRIP);break;case Z.TriangleFanDrawMode:y.setMode(g.TRIANGLE_FAN)}else if(i instanceof Z.Line){var L=n.linewidth;void 0===L&&(L=1),K.setLineWidth(L*le()),i instanceof Z.LineSegments?y.setMode(g.LINES):y.setMode(g.LINE_STRIP)}else i instanceof Z.Points&&y.setMode(g.POINTS);r instanceof Z.InstancedBufferGeometry?r.maxInstancedCount>0&&y.renderInstances(r,E,A):y.render(E,A)},this.render=function(e,t,r,n){if(t instanceof Z.Camera!=!1){var i=e.fog;M=\"\",_=-1,S=null,!0===e.autoUpdate&&e.updateMatrixWorld(),null===t.parent&&t.updateMatrixWorld(),t.matrixWorldInverse.getInverse(t.matrixWorld),k.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),B.setFromMatrix(k),l.length=0,h=-1,p=-1,m.length=0,v.length=0,G=this.localClippingEnabled,V=O.init(this.clippingPlanes,G,t),function e(t,r){if(!1===t.visible)return;if(t.layers.test(r.layers))if(t instanceof Z.Light)l.push(t);else if(t instanceof Z.Sprite)!1!==t.frustumCulled&&!0!==(d=t,z.center.set(0,0,0),z.radius=.7071067811865476,z.applyMatrix4(d.matrixWorld),Se(z))||m.push(t);else if(t instanceof Z.LensFlare)v.push(t);else if(t instanceof Z.ImmediateRenderObject)!0===y.sortObjects&&(j.setFromMatrixPosition(t.matrixWorld),j.applyProjection(k)),Me(t,null,t.material,j.z,null);else if((t instanceof Z.Mesh||t instanceof Z.Line||t instanceof Z.Points)&&(t instanceof Z.SkinnedMesh&&t.skeleton.update(),!1===t.frustumCulled||!0===function(e){var t=e.geometry;null===t.boundingSphere&&t.computeBoundingSphere();return z.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),Se(z)}(t))){var n=t.material;if(!0===n.visible){!0===y.sortObjects&&(j.setFromMatrixPosition(t.matrixWorld),j.applyProjection(k));var i=$.update(t);if(n instanceof Z.MultiMaterial)for(var o=i.groups,a=n.materials,s=0,c=o.length;s<c;s++){var u=o[s],h=a[u.materialIndex];!0===h.visible&&Me(t,i,h,j.z,u)}else Me(t,i,n,j.z,null)}}var d;var p=t.children;for(var s=0,c=p.length;s<c;s++)e(p[s],r)}(e,t),u.length=h+1,d.length=p+1,!0===y.sortObjects&&(u.sort(we),d.sort(_e)),V&&O.beginShadows(),function(e){for(var t=0,r=0,n=e.length;r<n;r++){var i=e[r];i.castShadow&&(H.shadows[t++]=i)}H.shadows.length=t}(l),pe.render(e,t),function(e,t){var r,n,i,o,a,s,c,l=0,u=0,h=0,d=t.matrixWorldInverse,p=0,f=0,m=0,v=0;for(r=0,n=e.length;r<n;r++)if(i=e[r],o=i.color,a=i.intensity,s=i.distance,c=i.shadow&&i.shadow.map?i.shadow.map.texture:null,i instanceof Z.AmbientLight)l+=o.r*a,u+=o.g*a,h+=o.b*a;else if(i instanceof Z.DirectionalLight){var g=te.get(i);g.color.copy(i.color).multiplyScalar(i.intensity),g.direction.setFromMatrixPosition(i.matrixWorld),j.setFromMatrixPosition(i.target.matrixWorld),g.direction.sub(j),g.direction.transformDirection(d),g.shadow=i.castShadow,i.castShadow&&(g.shadowBias=i.shadow.bias,g.shadowRadius=i.shadow.radius,g.shadowMapSize=i.shadow.mapSize),H.directionalShadowMap[p]=c,H.directionalShadowMatrix[p]=i.shadow.matrix,H.directional[p++]=g}else if(i instanceof Z.SpotLight){var g=te.get(i);g.position.setFromMatrixPosition(i.matrixWorld),g.position.applyMatrix4(d),g.color.copy(o).multiplyScalar(a),g.distance=s,g.direction.setFromMatrixPosition(i.matrixWorld),j.setFromMatrixPosition(i.target.matrixWorld),g.direction.sub(j),g.direction.transformDirection(d),g.coneCos=Math.cos(i.angle),g.penumbraCos=Math.cos(i.angle*(1-i.penumbra)),g.decay=0===i.distance?0:i.decay,g.shadow=i.castShadow,i.castShadow&&(g.shadowBias=i.shadow.bias,g.shadowRadius=i.shadow.radius,g.shadowMapSize=i.shadow.mapSize),H.spotShadowMap[m]=c,H.spotShadowMatrix[m]=i.shadow.matrix,H.spot[m++]=g}else if(i instanceof Z.PointLight){var g=te.get(i);g.position.setFromMatrixPosition(i.matrixWorld),g.position.applyMatrix4(d),g.color.copy(i.color).multiplyScalar(i.intensity),g.distance=i.distance,g.decay=0===i.distance?0:i.decay,g.shadow=i.castShadow,i.castShadow&&(g.shadowBias=i.shadow.bias,g.shadowRadius=i.shadow.radius,g.shadowMapSize=i.shadow.mapSize),H.pointShadowMap[f]=c,void 0===H.pointShadowMatrix[f]&&(H.pointShadowMatrix[f]=new Z.Matrix4),j.setFromMatrixPosition(i.matrixWorld).negate(),H.pointShadowMatrix[f].identity().setPosition(j),H.point[f++]=g}else if(i instanceof Z.HemisphereLight){var g=te.get(i);g.direction.setFromMatrixPosition(i.matrixWorld),g.direction.transformDirection(d),g.direction.normalize(),g.skyColor.copy(i.color).multiplyScalar(a),g.groundColor.copy(i.groundColor).multiplyScalar(a),H.hemi[v++]=g}H.ambient[0]=l,H.ambient[1]=u,H.ambient[2]=h,H.directional.length=p,H.spot.length=m,H.point.length=f,H.hemi.length=v,H.hash=p+\",\"+f+\",\"+m+\",\"+v+\",\"+H.shadows.length}(l,t),V&&O.endShadows(),W.calls=0,W.vertices=0,W.faces=0,W.points=0,void 0===r&&(r=null),this.setRenderTarget(r);var o=e.background;if(null===o?ue(L.r,L.g,L.b,R):o instanceof Z.Color&&ue(o.r,o.g,o.b,1),(this.autoClear||n)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil),o instanceof Z.CubeTexture?(oe.projectionMatrix.copy(t.projectionMatrix),oe.matrixWorld.extractRotation(t.matrixWorld),oe.matrixWorldInverse.getInverse(oe.matrixWorld),ce.material.uniforms.tCube.value=o,ce.modelViewMatrix.multiplyMatrices(oe.matrixWorldInverse,ce.matrixWorld),$.update(ce),y.renderBufferDirect(oe,null,ce.geometry,ce.material,ce,null)):o instanceof Z.Texture&&(ae.material.map=o,$.update(ae),y.renderBufferDirect(ie,null,ae.geometry,ae.material,ae,null)),e.overrideMaterial){var a=e.overrideMaterial;Te(u,t,i,a),Te(d,t,i,a)}else K.setBlending(Z.NoBlending),Te(u,t,i),Te(d,t,i);me.render(e,t),ve.render(e,t,C),r&&J.updateRenderTargetMipmap(r),K.setDepthTest(!0),K.setDepthWrite(!0),K.setColorWrite(!0)}else console.error(\"THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.\")},this.setFaceCulling=function(e,t){K.setCullFace(e),K.setFlipSided(t===Z.FrontFaceDirectionCW)},this.allocTextureUnit=function(){var e=A;return e>=Y.maxTextures&&console.warn(\"WebGLRenderer: trying to use \"+e+\" texture units while this GPU supports only \"+Y.maxTextures),A+=1,e},this.setTexture2D=(fe=!1,function(e,t){e instanceof Z.WebGLRenderTarget&&(fe||(console.warn(\"THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead.\"),fe=!0),e=e.texture),J.setTexture2D(e,t)}),this.setTexture=function(){var e=!1;return function(t,r){e||(console.warn(\"THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead.\"),e=!0),J.setTexture2D(t,r)}}(),this.setTextureCube=function(){var e=!1;return function(t,r){t instanceof Z.WebGLRenderTargetCube&&(e||(console.warn(\"THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead.\"),e=!0),t=t.texture),t instanceof Z.CubeTexture||Array.isArray(t.image)&&6===t.image.length?J.setTextureCube(t,r):J.setTextureCubeDynamic(t,r)}}(),this.getCurrentRenderTarget=function(){return b},this.setRenderTarget=function(e){b=e,e&&void 0===Q.get(e).__webglFramebuffer&&J.setupRenderTarget(e);var t,r=e instanceof Z.WebGLRenderTargetCube;if(e){var n=Q.get(e);t=r?n.__webglFramebuffer[e.activeCubeFace]:n.__webglFramebuffer,T.copy(e.scissor),E=e.scissorTest,C.copy(e.viewport)}else t=null,T.copy(I).multiplyScalar(U),E=F,C.copy(N).multiplyScalar(U);if(w!==t&&(g.bindFramebuffer(g.FRAMEBUFFER,t),w=t),K.scissor(T),K.setScissorTest(E),K.viewport(C),r){var i=Q.get(e.texture);g.framebufferTexture2D(g.FRAMEBUFFER,g.COLOR_ATTACHMENT0,g.TEXTURE_CUBE_MAP_POSITIVE_X+e.activeCubeFace,i.__webglTexture,e.activeMipMapLevel)}},this.readRenderTargetPixels=function(e,t,r,n,i,o){if(e instanceof Z.WebGLRenderTarget!=!1){var a=Q.get(e).__webglFramebuffer;if(a){var s=!1;a!==w&&(g.bindFramebuffer(g.FRAMEBUFFER,a),s=!0);try{var c=e.texture;if(c.format!==Z.RGBAFormat&&Re(c.format)!==g.getParameter(g.IMPLEMENTATION_COLOR_READ_FORMAT))return void console.error(\"THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.\");if(!(c.type===Z.UnsignedByteType||Re(c.type)===g.getParameter(g.IMPLEMENTATION_COLOR_READ_TYPE)||c.type===Z.FloatType&&q.get(\"WEBGL_color_buffer_float\")||c.type===Z.HalfFloatType&&q.get(\"EXT_color_buffer_half_float\")))return void console.error(\"THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.\");g.checkFramebufferStatus(g.FRAMEBUFFER)===g.FRAMEBUFFER_COMPLETE?t>=0&&t<=e.width-n&&r>=0&&r<=e.height-i&&g.readPixels(t,r,n,i,Re(c.format),Re(c.type),o):console.error(\"THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.\")}finally{s&&g.bindFramebuffer(g.FRAMEBUFFER,w)}}}else console.error(\"THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.\")}},Z.WebGLRenderTarget=function(e,t,r){this.uuid=Z.Math.generateUUID(),this.width=e,this.height=t,this.scissor=new Z.Vector4(0,0,e,t),this.scissorTest=!1,this.viewport=new Z.Vector4(0,0,e,t),void 0===(r=r||{}).minFilter&&(r.minFilter=Z.LinearFilter),this.texture=new Z.Texture(void 0,void 0,r.wrapS,r.wrapT,r.magFilter,r.minFilter,r.format,r.type,r.anisotropy,r.encoding),this.depthBuffer=void 0===r.depthBuffer||r.depthBuffer,this.stencilBuffer=void 0===r.stencilBuffer||r.stencilBuffer,this.depthTexture=null},Object.assign(Z.WebGLRenderTarget.prototype,Z.EventDispatcher.prototype,{setSize:function(e,t){this.width===e&&this.height===t||(this.width=e,this.height=t,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.width=e.width,this.height=e.height,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this},dispose:function(){this.dispatchEvent({type:\"dispose\"})}}),Z.WebGLRenderTargetCube=function(e,t,r){Z.WebGLRenderTarget.call(this,e,t,r),this.activeCubeFace=0,this.activeMipMapLevel=0},Z.WebGLRenderTargetCube.prototype=Object.create(Z.WebGLRenderTarget.prototype),Z.WebGLRenderTargetCube.prototype.constructor=Z.WebGLRenderTargetCube,Z.WebGLBufferRenderer=function(e,t,r){var n;this.setMode=function(e){n=e},this.render=function(t,i){e.drawArrays(n,t,i),r.calls++,r.vertices+=i,n===e.TRIANGLES&&(r.faces+=i/3)},this.renderInstances=function(i){var o=t.get(\"ANGLE_instanced_arrays\");if(null!==o){var a=i.attributes.position,s=0;a instanceof Z.InterleavedBufferAttribute?(s=a.data.count,o.drawArraysInstancedANGLE(n,0,s,i.maxInstancedCount)):(s=a.count,o.drawArraysInstancedANGLE(n,0,s,i.maxInstancedCount)),r.calls++,r.vertices+=s*i.maxInstancedCount,n===e.TRIANGLES&&(r.faces+=i.maxInstancedCount*s/3)}else console.error(\"THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.\")}},Z.WebGLClipping=function(){var e=this,t=null,r=0,n=!1,i=!1,o=new Z.Plane,a=new Z.Matrix3,s={value:null,needsUpdate:!1};function c(){s.value!==t&&(s.value=t,s.needsUpdate=r>0),e.numPlanes=r}function l(t,r,n,i){var c=null!==t?t.length:0,l=null;if(0!==c){if(l=s.value,!0!==i||null===l){var u=n+4*c,h=r.matrixWorldInverse;a.getNormalMatrix(h),(null===l||l.length<u)&&(l=new Float32Array(u));for(var d=0,p=n;d!==c;++d,p+=4)o.copy(t[d]).applyMatrix4(h,a),o.normal.toArray(l,p),l[p+3]=o.constant}s.value=l,s.needsUpdate=!0}return e.numPlanes=c,l}this.uniform=s,this.numPlanes=0,this.init=function(e,i,o){var a=0!==e.length||i||0!==r||n;return n=i,t=l(e,o,0),r=e.length,a},this.beginShadows=function(){i=!0,l(null)},this.endShadows=function(){i=!1,c()},this.setState=function(e,o,a,u,h){if(!n||null===e||0===e.length||i&&!o)i?l(null):c();else{var d=i?0:r,p=4*d,f=u.clippingState||null;s.value=f,f=l(e,a,p,h);for(var m=0;m!==p;++m)f[m]=t[m];u.clippingState=f,this.numPlanes+=d}}},Z.WebGLIndexedBufferRenderer=function(e,t,r){var n,i,o;this.setMode=function(e){n=e},this.setIndex=function(r){r.array instanceof Uint32Array&&t.get(\"OES_element_index_uint\")?(i=e.UNSIGNED_INT,o=4):(i=e.UNSIGNED_SHORT,o=2)},this.render=function(t,a){e.drawElements(n,a,i,t*o),r.calls++,r.vertices+=a,n===e.TRIANGLES&&(r.faces+=a/3)},this.renderInstances=function(a,s,c){var l=t.get(\"ANGLE_instanced_arrays\");null!==l?(l.drawElementsInstancedANGLE(n,c,i,s*o,a.maxInstancedCount),r.calls++,r.vertices+=c*a.maxInstancedCount,n===e.TRIANGLES&&(r.faces+=a.maxInstancedCount*c/3)):console.error(\"THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.\")}},Z.WebGLExtensions=function(e){var t={};this.get=function(r){if(void 0!==t[r])return t[r];var n;switch(r){case\"WEBGL_depth_texture\":n=e.getExtension(\"WEBGL_depth_texture\")||e.getExtension(\"MOZ_WEBGL_depth_texture\")||e.getExtension(\"WEBKIT_WEBGL_depth_texture\");break;case\"EXT_texture_filter_anisotropic\":n=e.getExtension(\"EXT_texture_filter_anisotropic\")||e.getExtension(\"MOZ_EXT_texture_filter_anisotropic\")||e.getExtension(\"WEBKIT_EXT_texture_filter_anisotropic\");break;case\"WEBGL_compressed_texture_s3tc\":n=e.getExtension(\"WEBGL_compressed_texture_s3tc\")||e.getExtension(\"MOZ_WEBGL_compressed_texture_s3tc\")||e.getExtension(\"WEBKIT_WEBGL_compressed_texture_s3tc\");break;case\"WEBGL_compressed_texture_pvrtc\":n=e.getExtension(\"WEBGL_compressed_texture_pvrtc\")||e.getExtension(\"WEBKIT_WEBGL_compressed_texture_pvrtc\");break;case\"WEBGL_compressed_texture_etc1\":n=e.getExtension(\"WEBGL_compressed_texture_etc1\");break;default:n=e.getExtension(r)}return null===n&&console.warn(\"THREE.WebGLRenderer: \"+r+\" extension not supported.\"),t[r]=n,n}},Z.WebGLCapabilities=function(e,t,r){var n;function i(t){if(\"highp\"===t){if(e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.HIGH_FLOAT).precision>0&&e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.HIGH_FLOAT).precision>0)return\"highp\";t=\"mediump\"}return\"mediump\"===t&&e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.MEDIUM_FLOAT).precision>0&&e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.MEDIUM_FLOAT).precision>0?\"mediump\":\"lowp\"}this.getMaxAnisotropy=function(){if(void 0!==n)return n;var r=t.get(\"EXT_texture_filter_anisotropic\");return n=null!==r?e.getParameter(r.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0},this.getMaxPrecision=i,this.precision=void 0!==r.precision?r.precision:\"highp\",this.logarithmicDepthBuffer=void 0!==r.logarithmicDepthBuffer&&r.logarithmicDepthBuffer,this.maxTextures=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),this.maxVertexTextures=e.getParameter(e.MAX_VERTEX_TEXTURE_IMAGE_UNITS),this.maxTextureSize=e.getParameter(e.MAX_TEXTURE_SIZE),this.maxCubemapSize=e.getParameter(e.MAX_CUBE_MAP_TEXTURE_SIZE),this.maxAttributes=e.getParameter(e.MAX_VERTEX_ATTRIBS),this.maxVertexUniforms=e.getParameter(e.MAX_VERTEX_UNIFORM_VECTORS),this.maxVaryings=e.getParameter(e.MAX_VARYING_VECTORS),this.maxFragmentUniforms=e.getParameter(e.MAX_FRAGMENT_UNIFORM_VECTORS),this.vertexTextures=this.maxVertexTextures>0,this.floatFragmentTextures=!!t.get(\"OES_texture_float\"),this.floatVertexTextures=this.vertexTextures&&this.floatFragmentTextures;var o=i(this.precision);o!==this.precision&&(console.warn(\"THREE.WebGLRenderer:\",this.precision,\"not supported, using\",o,\"instead.\"),this.precision=o),this.logarithmicDepthBuffer&&(this.logarithmicDepthBuffer=!!t.get(\"EXT_frag_depth\"))},Z.WebGLGeometries=function(e,t,r){var n={};function i(e){var a=e.target,s=n[a.id];null!==s.index&&o(s.index),function(e){for(var t in e)o(e[t])}(s.attributes),a.removeEventListener(\"dispose\",i),delete n[a.id];var c=t.get(a);c.wireframe&&o(c.wireframe),t.delete(a);var l=t.get(s);l.wireframe&&o(l.wireframe),t.delete(s),r.memory.geometries--}function o(r){var n=function(e){return e instanceof Z.InterleavedBufferAttribute?t.get(e.data).__webglBuffer:t.get(e).__webglBuffer}(r);void 0!==n&&(e.deleteBuffer(n),function(e){e instanceof Z.InterleavedBufferAttribute?t.delete(e.data):t.delete(e)}(r))}this.get=function(e){var t,o=e.geometry;return void 0!==n[o.id]?n[o.id]:(o.addEventListener(\"dispose\",i),o instanceof Z.BufferGeometry?t=o:o instanceof Z.Geometry&&(void 0===o._bufferGeometry&&(o._bufferGeometry=(new Z.BufferGeometry).setFromObject(e)),t=o._bufferGeometry),n[o.id]=t,r.memory.geometries++,t)}},Z.WebGLLights=function(){var e={};this.get=function(t){if(void 0!==e[t.id])return e[t.id];var r;switch(t.type){case\"DirectionalLight\":r={direction:new Z.Vector3,color:new Z.Color,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new Z.Vector2};break;case\"SpotLight\":r={position:new Z.Vector3,direction:new Z.Vector3,color:new Z.Color,distance:0,coneCos:0,penumbraCos:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new Z.Vector2};break;case\"PointLight\":r={position:new Z.Vector3,color:new Z.Color,distance:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new Z.Vector2};break;case\"HemisphereLight\":r={direction:new Z.Vector3,skyColor:new Z.Color,groundColor:new Z.Color}}return e[t.id]=r,r}},Z.WebGLObjects=function(e,t,r){var n=new Z.WebGLGeometries(e,t,r);function i(r,n){var i=r instanceof Z.InterleavedBufferAttribute?r.data:r,o=t.get(i);void 0===o.__webglBuffer?function(t,r,n){t.__webglBuffer=e.createBuffer(),e.bindBuffer(n,t.__webglBuffer);var i=r.dynamic?e.DYNAMIC_DRAW:e.STATIC_DRAW;e.bufferData(n,r.array,i),t.version=r.version}(o,i,n):o.version!==i.version&&function(t,r,n){e.bindBuffer(n,t.__webglBuffer),!1===r.dynamic||-1===r.updateRange.count?e.bufferSubData(n,0,r.array):0===r.updateRange.count?console.error(\"THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.\"):(e.bufferSubData(n,r.updateRange.offset*r.array.BYTES_PER_ELEMENT,r.array.subarray(r.updateRange.offset,r.updateRange.offset+r.updateRange.count)),r.updateRange.count=0);t.version=r.version}(o,i,n)}function o(e,t,r){if(t>r){var n=t;t=r,r=n}var i=e[t];return void 0===i?(e[t]=[r],!0):-1===i.indexOf(r)&&(i.push(r),!0)}this.getAttributeBuffer=function(e){return e instanceof Z.InterleavedBufferAttribute?t.get(e.data).__webglBuffer:t.get(e).__webglBuffer},this.getWireframeAttribute=function(r){var n=t.get(r);if(void 0!==n.wireframe)return n.wireframe;var a,s=[],c=r.index,l=r.attributes,u=l.position;if(null!==c)for(var h={},d=0,p=(a=c.array).length;d<p;d+=3){var f=a[d+0],m=a[d+1],v=a[d+2];o(h,f,m)&&s.push(f,m),o(h,m,v)&&s.push(m,v),o(h,v,f)&&s.push(v,f)}else for(d=0,p=(a=l.position.array).length/3-1;d<p;d+=3)f=d+0,m=d+1,v=d+2,s.push(f,m,m,v,v,f);var g=u.count>65535?Uint32Array:Uint16Array,y=new Z.BufferAttribute(new g(s),1);return i(y,e.ELEMENT_ARRAY_BUFFER),n.wireframe=y,y},this.update=function(t){var r=n.get(t);t.geometry instanceof Z.Geometry&&r.updateFromObject(t);var o=r.index,a=r.attributes;for(var s in null!==o&&i(o,e.ELEMENT_ARRAY_BUFFER),a)i(a[s],e.ARRAY_BUFFER);var c=r.morphAttributes;for(var s in c)for(var l=c[s],u=0,h=l.length;u<h;u++)i(l[u],e.ARRAY_BUFFER);return r}},Z.WebGLProgram=function(){var e=0;function t(e){switch(e){case Z.LinearEncoding:return[\"Linear\",\"( value )\"];case Z.sRGBEncoding:return[\"sRGB\",\"( value )\"];case Z.RGBEEncoding:return[\"RGBE\",\"( value )\"];case Z.RGBM7Encoding:return[\"RGBM\",\"( value, 7.0 )\"];case Z.RGBM16Encoding:return[\"RGBM\",\"( value, 16.0 )\"];case Z.RGBDEncoding:return[\"RGBD\",\"( value, 256.0 )\"];case Z.GammaEncoding:return[\"Gamma\",\"( value, float( GAMMA_FACTOR ) )\"];default:throw new Error(\"unsupported encoding: \"+e)}}function r(e,r){var n=t(r);return\"vec4 \"+e+\"( vec4 value ) { return \"+n[0]+\"ToLinear\"+n[1]+\"; }\"}function n(e,t){var r;switch(t){case Z.LinearToneMapping:r=\"Linear\";break;case Z.ReinhardToneMapping:r=\"Reinhard\";break;case Z.Uncharted2ToneMapping:r=\"Uncharted2\";break;case Z.CineonToneMapping:r=\"OptimizedCineon\";break;default:throw new Error(\"unsupported toneMapping: \"+t)}return\"vec3 \"+e+\"( vec3 color ) { return \"+r+\"ToneMapping( color ); }\"}function i(e){return\"\"!==e}function o(e,t){return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights)}function a(e){return e.replace(/#include +<([\\w\\d.]+)>/g,function(e,t){var r=Z.ShaderChunk[t];if(void 0===r)throw new Error(\"Can not resolve #include <\"+t+\">\");return a(r)})}function s(e){return e.replace(/for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g,function(e,t,r,n){for(var i=\"\",o=parseInt(t);o<parseInt(r);o++)i+=n.replace(/\\[ i \\]/g,\"[ \"+o+\" ]\");return i})}return function(c,l,u,h){var d=c.context,p=u.extensions,f=u.defines,m=u.__webglShader.vertexShader,v=u.__webglShader.fragmentShader,g=\"SHADOWMAP_TYPE_BASIC\";h.shadowMapType===Z.PCFShadowMap?g=\"SHADOWMAP_TYPE_PCF\":h.shadowMapType===Z.PCFSoftShadowMap&&(g=\"SHADOWMAP_TYPE_PCF_SOFT\");var y=\"ENVMAP_TYPE_CUBE\",x=\"ENVMAP_MODE_REFLECTION\",b=\"ENVMAP_BLENDING_MULTIPLY\";if(h.envMap){switch(u.envMap.mapping){case Z.CubeReflectionMapping:case Z.CubeRefractionMapping:y=\"ENVMAP_TYPE_CUBE\";break;case Z.CubeUVReflectionMapping:case Z.CubeUVRefractionMapping:y=\"ENVMAP_TYPE_CUBE_UV\";break;case Z.EquirectangularReflectionMapping:case Z.EquirectangularRefractionMapping:y=\"ENVMAP_TYPE_EQUIREC\";break;case Z.SphericalReflectionMapping:y=\"ENVMAP_TYPE_SPHERE\"}switch(u.envMap.mapping){case Z.CubeRefractionMapping:case Z.EquirectangularRefractionMapping:x=\"ENVMAP_MODE_REFRACTION\"}switch(u.combine){case Z.MultiplyOperation:b=\"ENVMAP_BLENDING_MULTIPLY\";break;case Z.MixOperation:b=\"ENVMAP_BLENDING_MIX\";break;case Z.AddOperation:b=\"ENVMAP_BLENDING_ADD\"}}var w,_,M,S,T,E=c.gammaFactor>0?c.gammaFactor:1,C=function(e,t,r){return[(e=e||{}).derivatives||t.envMapCubeUV||t.bumpMap||t.normalMap||t.flatShading?\"#extension GL_OES_standard_derivatives : enable\":\"\",(e.fragDepth||t.logarithmicDepthBuffer)&&r.get(\"EXT_frag_depth\")?\"#extension GL_EXT_frag_depth : enable\":\"\",e.drawBuffers&&r.get(\"WEBGL_draw_buffers\")?\"#extension GL_EXT_draw_buffers : require\":\"\",(e.shaderTextureLOD||t.envMap)&&r.get(\"EXT_shader_texture_lod\")?\"#extension GL_EXT_shader_texture_lod : enable\":\"\"].filter(i).join(\"\\n\")}(p,h,c.extensions),A=function(e){var t=[];for(var r in e){var n=e[r];!1!==n&&t.push(\"#define \"+r+\" \"+n)}return t.join(\"\\n\")}(f),L=d.createProgram();u instanceof Z.RawShaderMaterial?(w=[A].filter(i).join(\"\\n\"),_=[A].filter(i).join(\"\\n\")):(w=[\"precision \"+h.precision+\" float;\",\"precision \"+h.precision+\" int;\",\"#define SHADER_NAME \"+u.__webglShader.name,A,h.supportsVertexTextures?\"#define VERTEX_TEXTURES\":\"\",\"#define GAMMA_FACTOR \"+E,\"#define MAX_BONES \"+h.maxBones,h.map?\"#define USE_MAP\":\"\",h.envMap?\"#define USE_ENVMAP\":\"\",h.envMap?\"#define \"+x:\"\",h.lightMap?\"#define USE_LIGHTMAP\":\"\",h.aoMap?\"#define USE_AOMAP\":\"\",h.emissiveMap?\"#define USE_EMISSIVEMAP\":\"\",h.bumpMap?\"#define USE_BUMPMAP\":\"\",h.normalMap?\"#define USE_NORMALMAP\":\"\",h.displacementMap&&h.supportsVertexTextures?\"#define USE_DISPLACEMENTMAP\":\"\",h.specularMap?\"#define USE_SPECULARMAP\":\"\",h.roughnessMap?\"#define USE_ROUGHNESSMAP\":\"\",h.metalnessMap?\"#define USE_METALNESSMAP\":\"\",h.alphaMap?\"#define USE_ALPHAMAP\":\"\",h.vertexColors?\"#define USE_COLOR\":\"\",h.flatShading?\"#define FLAT_SHADED\":\"\",h.skinning?\"#define USE_SKINNING\":\"\",h.useVertexTexture?\"#define BONE_TEXTURE\":\"\",h.morphTargets?\"#define USE_MORPHTARGETS\":\"\",h.morphNormals&&!1===h.flatShading?\"#define USE_MORPHNORMALS\":\"\",h.doubleSided?\"#define DOUBLE_SIDED\":\"\",h.flipSided?\"#define FLIP_SIDED\":\"\",\"#define NUM_CLIPPING_PLANES \"+h.numClippingPlanes,h.shadowMapEnabled?\"#define USE_SHADOWMAP\":\"\",h.shadowMapEnabled?\"#define \"+g:\"\",h.sizeAttenuation?\"#define USE_SIZEATTENUATION\":\"\",h.logarithmicDepthBuffer?\"#define USE_LOGDEPTHBUF\":\"\",h.logarithmicDepthBuffer&&c.extensions.get(\"EXT_frag_depth\")?\"#define USE_LOGDEPTHBUF_EXT\":\"\",\"uniform mat4 modelMatrix;\",\"uniform mat4 modelViewMatrix;\",\"uniform mat4 projectionMatrix;\",\"uniform mat4 viewMatrix;\",\"uniform mat3 normalMatrix;\",\"uniform vec3 cameraPosition;\",\"attribute vec3 position;\",\"attribute vec3 normal;\",\"attribute vec2 uv;\",\"#ifdef USE_COLOR\",\"\\tattribute vec3 color;\",\"#endif\",\"#ifdef USE_MORPHTARGETS\",\"\\tattribute vec3 morphTarget0;\",\"\\tattribute vec3 morphTarget1;\",\"\\tattribute vec3 morphTarget2;\",\"\\tattribute vec3 morphTarget3;\",\"\\t#ifdef USE_MORPHNORMALS\",\"\\t\\tattribute vec3 morphNormal0;\",\"\\t\\tattribute vec3 morphNormal1;\",\"\\t\\tattribute vec3 morphNormal2;\",\"\\t\\tattribute vec3 morphNormal3;\",\"\\t#else\",\"\\t\\tattribute vec3 morphTarget4;\",\"\\t\\tattribute vec3 morphTarget5;\",\"\\t\\tattribute vec3 morphTarget6;\",\"\\t\\tattribute vec3 morphTarget7;\",\"\\t#endif\",\"#endif\",\"#ifdef USE_SKINNING\",\"\\tattribute vec4 skinIndex;\",\"\\tattribute vec4 skinWeight;\",\"#endif\",\"\\n\"].filter(i).join(\"\\n\"),_=[C,\"precision \"+h.precision+\" float;\",\"precision \"+h.precision+\" int;\",\"#define SHADER_NAME \"+u.__webglShader.name,A,h.alphaTest?\"#define ALPHATEST \"+h.alphaTest:\"\",\"#define GAMMA_FACTOR \"+E,h.useFog&&h.fog?\"#define USE_FOG\":\"\",h.useFog&&h.fogExp?\"#define FOG_EXP2\":\"\",h.map?\"#define USE_MAP\":\"\",h.envMap?\"#define USE_ENVMAP\":\"\",h.envMap?\"#define \"+y:\"\",h.envMap?\"#define \"+x:\"\",h.envMap?\"#define \"+b:\"\",h.lightMap?\"#define USE_LIGHTMAP\":\"\",h.aoMap?\"#define USE_AOMAP\":\"\",h.emissiveMap?\"#define USE_EMISSIVEMAP\":\"\",h.bumpMap?\"#define USE_BUMPMAP\":\"\",h.normalMap?\"#define USE_NORMALMAP\":\"\",h.specularMap?\"#define USE_SPECULARMAP\":\"\",h.roughnessMap?\"#define USE_ROUGHNESSMAP\":\"\",h.metalnessMap?\"#define USE_METALNESSMAP\":\"\",h.alphaMap?\"#define USE_ALPHAMAP\":\"\",h.vertexColors?\"#define USE_COLOR\":\"\",h.flatShading?\"#define FLAT_SHADED\":\"\",h.doubleSided?\"#define DOUBLE_SIDED\":\"\",h.flipSided?\"#define FLIP_SIDED\":\"\",\"#define NUM_CLIPPING_PLANES \"+h.numClippingPlanes,h.shadowMapEnabled?\"#define USE_SHADOWMAP\":\"\",h.shadowMapEnabled?\"#define \"+g:\"\",h.premultipliedAlpha?\"#define PREMULTIPLIED_ALPHA\":\"\",h.physicallyCorrectLights?\"#define PHYSICALLY_CORRECT_LIGHTS\":\"\",h.logarithmicDepthBuffer?\"#define USE_LOGDEPTHBUF\":\"\",h.logarithmicDepthBuffer&&c.extensions.get(\"EXT_frag_depth\")?\"#define USE_LOGDEPTHBUF_EXT\":\"\",h.envMap&&c.extensions.get(\"EXT_shader_texture_lod\")?\"#define TEXTURE_LOD_EXT\":\"\",\"uniform mat4 viewMatrix;\",\"uniform vec3 cameraPosition;\",h.toneMapping!==Z.NoToneMapping?\"#define TONE_MAPPING\":\"\",h.toneMapping!==Z.NoToneMapping?Z.ShaderChunk.tonemapping_pars_fragment:\"\",h.toneMapping!==Z.NoToneMapping?n(\"toneMapping\",h.toneMapping):\"\",h.outputEncoding||h.mapEncoding||h.envMapEncoding||h.emissiveMapEncoding?Z.ShaderChunk.encodings_pars_fragment:\"\",h.mapEncoding?r(\"mapTexelToLinear\",h.mapEncoding):\"\",h.envMapEncoding?r(\"envMapTexelToLinear\",h.envMapEncoding):\"\",h.emissiveMapEncoding?r(\"emissiveMapTexelToLinear\",h.emissiveMapEncoding):\"\",h.outputEncoding?(M=\"linearToOutputTexel\",S=h.outputEncoding,T=t(S),\"vec4 \"+M+\"( vec4 value ) { return LinearTo\"+T[0]+T[1]+\"; }\"):\"\",h.depthPacking?\"#define DEPTH_PACKING \"+u.depthPacking:\"\",\"\\n\"].filter(i).join(\"\\n\")),m=o(m=a(m),h),v=o(v=a(v),h),u instanceof Z.ShaderMaterial==!1&&(m=s(m),v=s(v));var R=w+m,P=_+v,D=Z.WebGLShader(d,d.VERTEX_SHADER,R),U=Z.WebGLShader(d,d.FRAGMENT_SHADER,P);d.attachShader(L,D),d.attachShader(L,U),void 0!==u.index0AttributeName?d.bindAttribLocation(L,0,u.index0AttributeName):!0===h.morphTargets&&d.bindAttribLocation(L,0,\"position\"),d.linkProgram(L);var I,F,N=d.getProgramInfoLog(L),B=d.getShaderInfoLog(D),O=d.getShaderInfoLog(U),V=!0,G=!0;return!1===d.getProgramParameter(L,d.LINK_STATUS)?(V=!1,console.error(\"THREE.WebGLProgram: shader error: \",d.getError(),\"gl.VALIDATE_STATUS\",d.getProgramParameter(L,d.VALIDATE_STATUS),\"gl.getProgramInfoLog\",N,B,O)):\"\"!==N?console.warn(\"THREE.WebGLProgram: gl.getProgramInfoLog()\",N):\"\"!==B&&\"\"!==O||(G=!1),G&&(this.diagnostics={runnable:V,material:u,programLog:N,vertexShader:{log:B,prefix:w},fragmentShader:{log:O,prefix:_}}),d.deleteShader(D),d.deleteShader(U),this.getUniforms=function(){return void 0===I&&(I=new Z.WebGLUniforms(d,L,c)),I},this.getAttributes=function(){return void 0===F&&(F=function(e,t,r){for(var n={},i=e.getProgramParameter(t,e.ACTIVE_ATTRIBUTES),o=0;o<i;o++){var a=e.getActiveAttrib(t,o).name;n[a]=e.getAttribLocation(t,a)}return n}(d,L)),F},this.destroy=function(){d.deleteProgram(L),this.program=void 0},Object.defineProperties(this,{uniforms:{get:function(){return console.warn(\"THREE.WebGLProgram: .uniforms is now .getUniforms().\"),this.getUniforms()}},attributes:{get:function(){return console.warn(\"THREE.WebGLProgram: .attributes is now .getAttributes().\"),this.getAttributes()}}}),this.id=e++,this.code=l,this.usedTimes=1,this.program=L,this.vertexShader=D,this.fragmentShader=U,this}}(),Z.WebGLPrograms=function(e,t){var r=[],n={MeshDepthMaterial:\"depth\",MeshNormalMaterial:\"normal\",MeshBasicMaterial:\"basic\",MeshLambertMaterial:\"lambert\",MeshPhongMaterial:\"phong\",MeshStandardMaterial:\"physical\",MeshPhysicalMaterial:\"physical\",LineBasicMaterial:\"basic\",LineDashedMaterial:\"dashed\",PointsMaterial:\"points\"},i=[\"precision\",\"supportsVertexTextures\",\"map\",\"mapEncoding\",\"envMap\",\"envMapMode\",\"envMapEncoding\",\"lightMap\",\"aoMap\",\"emissiveMap\",\"emissiveMapEncoding\",\"bumpMap\",\"normalMap\",\"displacementMap\",\"specularMap\",\"roughnessMap\",\"metalnessMap\",\"alphaMap\",\"combine\",\"vertexColors\",\"fog\",\"useFog\",\"fogExp\",\"flatShading\",\"sizeAttenuation\",\"logarithmicDepthBuffer\",\"skinning\",\"maxBones\",\"useVertexTexture\",\"morphTargets\",\"morphNormals\",\"maxMorphTargets\",\"maxMorphNormals\",\"premultipliedAlpha\",\"numDirLights\",\"numPointLights\",\"numSpotLights\",\"numHemiLights\",\"shadowMapEnabled\",\"shadowMapType\",\"toneMapping\",\"physicallyCorrectLights\",\"alphaTest\",\"doubleSided\",\"flipSided\",\"numClippingPlanes\",\"depthPacking\"];function o(e,t){var r;return e?e instanceof Z.Texture?r=e.encoding:e instanceof Z.WebGLRenderTarget&&(console.warn(\"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\"),r=e.texture.encoding):r=Z.LinearEncoding,r===Z.LinearEncoding&&t&&(r=Z.GammaEncoding),r}this.getParameters=function(r,i,a,s,c){var l=n[r.type],u=function(e){if(t.floatVertexTextures&&e&&e.skeleton&&e.skeleton.useVertexTexture)return 1024;var r=t.maxVertexUniforms,n=Math.floor((r-20)/4);return void 0!==e&&e instanceof Z.SkinnedMesh&&(n=Math.min(e.skeleton.bones.length,n))<e.skeleton.bones.length&&console.warn(\"WebGLRenderer: too many bones - \"+e.skeleton.bones.length+\", this GPU supports just \"+n+\" (try OpenGL instead of ANGLE)\"),n}(c),h=e.getPrecision();null!==r.precision&&(h=t.getMaxPrecision(r.precision))!==r.precision&&console.warn(\"THREE.WebGLProgram.getParameters:\",r.precision,\"not supported, using\",h,\"instead.\");var d=e.getCurrentRenderTarget();return{shaderID:l,precision:h,supportsVertexTextures:t.vertexTextures,outputEncoding:o(d?d.texture:null,e.gammaOutput),map:!!r.map,mapEncoding:o(r.map,e.gammaInput),envMap:!!r.envMap,envMapMode:r.envMap&&r.envMap.mapping,envMapEncoding:o(r.envMap,e.gammaInput),envMapCubeUV:!!r.envMap&&(r.envMap.mapping===Z.CubeUVReflectionMapping||r.envMap.mapping===Z.CubeUVRefractionMapping),lightMap:!!r.lightMap,aoMap:!!r.aoMap,emissiveMap:!!r.emissiveMap,emissiveMapEncoding:o(r.emissiveMap,e.gammaInput),bumpMap:!!r.bumpMap,normalMap:!!r.normalMap,displacementMap:!!r.displacementMap,roughnessMap:!!r.roughnessMap,metalnessMap:!!r.metalnessMap,specularMap:!!r.specularMap,alphaMap:!!r.alphaMap,combine:r.combine,vertexColors:r.vertexColors,fog:!!a,useFog:r.fog,fogExp:a instanceof Z.FogExp2,flatShading:r.shading===Z.FlatShading,sizeAttenuation:r.sizeAttenuation,logarithmicDepthBuffer:t.logarithmicDepthBuffer,skinning:r.skinning,maxBones:u,useVertexTexture:t.floatVertexTextures&&c&&c.skeleton&&c.skeleton.useVertexTexture,morphTargets:r.morphTargets,morphNormals:r.morphNormals,maxMorphTargets:e.maxMorphTargets,maxMorphNormals:e.maxMorphNormals,numDirLights:i.directional.length,numPointLights:i.point.length,numSpotLights:i.spot.length,numHemiLights:i.hemi.length,numClippingPlanes:s,shadowMapEnabled:e.shadowMap.enabled&&c.receiveShadow&&i.shadows.length>0,shadowMapType:e.shadowMap.type,toneMapping:e.toneMapping,physicallyCorrectLights:e.physicallyCorrectLights,premultipliedAlpha:r.premultipliedAlpha,alphaTest:r.alphaTest,doubleSided:r.side===Z.DoubleSide,flipSided:r.side===Z.BackSide,depthPacking:void 0!==r.depthPacking&&r.depthPacking}},this.getProgramCode=function(e,t){var r=[];if(t.shaderID?r.push(t.shaderID):(r.push(e.fragmentShader),r.push(e.vertexShader)),void 0!==e.defines)for(var n in e.defines)r.push(n),r.push(e.defines[n]);for(var o=0;o<i.length;o++)r.push(t[i[o]]);return r.join()},this.acquireProgram=function(t,n,i){for(var o,a=0,s=r.length;a<s;a++){var c=r[a];if(c.code===i){++(o=c).usedTimes;break}}return void 0===o&&(o=new Z.WebGLProgram(e,i,t,n),r.push(o)),o},this.releaseProgram=function(e){if(0==--e.usedTimes){var t=r.indexOf(e);r[t]=r[r.length-1],r.pop(),e.destroy()}},this.programs=r},Z.WebGLProperties=function(){var e={};this.get=function(t){var r=t.uuid,n=e[r];return void 0===n&&(n={},e[r]=n),n},this.delete=function(t){delete e[t.uuid]},this.clear=function(){e={}}},Z.WebGLShader=function(){return function(e,t,r){var n=e.createShader(t);return e.shaderSource(n,r),e.compileShader(n),!1===e.getShaderParameter(n,e.COMPILE_STATUS)&&console.error(\"THREE.WebGLShader: Shader couldn't compile.\"),\"\"!==e.getShaderInfoLog(n)&&console.warn(\"THREE.WebGLShader: gl.getShaderInfoLog()\",t===e.VERTEX_SHADER?\"vertex\":\"fragment\",e.getShaderInfoLog(n),function(e){for(var t=e.split(\"\\n\"),r=0;r<t.length;r++)t[r]=r+1+\": \"+t[r];return t.join(\"\\n\")}(r)),n}}(),Z.WebGLShadowMap=function(e,t,r,n){var i=e.context,o=e.state,a=new Z.Frustum,s=new Z.Matrix4,c=t.shadows,l=new Z.Vector2,u=new Z.Vector2(n.maxTextureSize,n.maxTextureSize),h=new Z.Vector3,d=new Z.Vector3,p=[],f=1,m=2,v=1+(f|m),g=new Array(v),y=new Array(v),x={},b=[new Z.Vector3(1,0,0),new Z.Vector3(-1,0,0),new Z.Vector3(0,0,1),new Z.Vector3(0,0,-1),new Z.Vector3(0,1,0),new Z.Vector3(0,-1,0)],w=[new Z.Vector3(0,1,0),new Z.Vector3(0,1,0),new Z.Vector3(0,1,0),new Z.Vector3(0,1,0),new Z.Vector3(0,0,1),new Z.Vector3(0,0,-1)],_=[new Z.Vector4,new Z.Vector4,new Z.Vector4,new Z.Vector4,new Z.Vector4,new Z.Vector4],M=new Z.MeshDepthMaterial;M.depthPacking=Z.RGBADepthPacking,M.clipping=!0;for(var S=Z.ShaderLib.distanceRGBA,T=Z.UniformsUtils.clone(S.uniforms),E=0;E!==v;++E){var C=0!=(E&f),A=0!=(E&m),L=M.clone();L.morphTargets=C,L.skinning=A,g[E]=L;var R=new Z.ShaderMaterial({defines:{USE_SHADOWMAP:\"\"},uniforms:T,vertexShader:S.vertexShader,fragmentShader:S.fragmentShader,morphTargets:C,skinning:A,clipping:!0});y[E]=R}var P=this;function D(t,r,n,i){var o=t.geometry,a=null,s=g,c=t.customDepthMaterial;if(n&&(s=y,c=t.customDistanceMaterial),c)a=c;else{var l=!1;r.morphTargets&&(o instanceof Z.BufferGeometry?l=o.morphAttributes&&o.morphAttributes.position&&o.morphAttributes.position.length>0:o instanceof Z.Geometry&&(l=o.morphTargets&&o.morphTargets.length>0));var u=t instanceof Z.SkinnedMesh&&r.skinning,h=0;l&&(h|=f),u&&(h|=m),a=s[h]}if(e.localClippingEnabled&&!0===r.clipShadows&&0!==r.clippingPlanes.length){var d=a.uuid,p=r.uuid,v=x[d];void 0===v&&(v={},x[d]=v);var b=v[p];void 0===b&&(b=a.clone(),v[p]=b),a=b}a.visible=r.visible,a.wireframe=r.wireframe;var w=r.side;return P.renderSingleSided&&w==Z.DoubleSide&&(w=Z.FrontSide),P.renderReverseSided&&(w===Z.FrontSide?w=Z.BackSide:w===Z.BackSide&&(w=Z.FrontSide)),a.side=w,a.clipShadows=r.clipShadows,a.clippingPlanes=r.clippingPlanes,a.wireframeLinewidth=r.wireframeLinewidth,a.linewidth=r.linewidth,n&&void 0!==a.uniforms.lightPos&&a.uniforms.lightPos.value.copy(i),a}function U(e,t,r){if(!1!==e.visible){if(e.layers.test(t.layers)&&(e instanceof Z.Mesh||e instanceof Z.Line||e instanceof Z.Points))if(e.castShadow&&(!1===e.frustumCulled||!0===a.intersectsObject(e)))!0===e.material.visible&&(e.modelViewMatrix.multiplyMatrices(r.matrixWorldInverse,e.matrixWorld),p.push(e));for(var n=e.children,i=0,o=n.length;i<o;i++)U(n[i],t,r)}}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Z.PCFShadowMap,this.renderReverseSided=!0,this.renderSingleSided=!0,this.render=function(t,n){if(!1!==P.enabled&&(!1!==P.autoUpdate||!1!==P.needsUpdate)&&0!==c.length){var f,m;o.clearColor(1,1,1,1),o.disable(i.BLEND),o.setDepthTest(!0),o.setScissorTest(!1);for(var v=0,g=c.length;v<g;v++){var y=c[v],x=y.shadow;if(void 0!==x){var M=x.camera;if(l.copy(x.mapSize),l.min(u),y instanceof Z.PointLight){f=6,m=!0;var S=l.x,T=l.y;_[0].set(2*S,T,S,T),_[1].set(0,T,S,T),_[2].set(3*S,T,S,T),_[3].set(S,T,S,T),_[4].set(3*S,0,S,T),_[5].set(S,0,S,T),l.x*=4,l.y*=2}else f=1,m=!1;if(null===x.map){var E={minFilter:Z.NearestFilter,magFilter:Z.NearestFilter,format:Z.RGBAFormat};x.map=new Z.WebGLRenderTarget(l.x,l.y,E),M.updateProjectionMatrix()}x instanceof Z.SpotLightShadow&&x.update(y);var C=x.map,A=x.matrix;d.setFromMatrixPosition(y.matrixWorld),M.position.copy(d),e.setRenderTarget(C),e.clear();for(var L=0;L<f;L++){if(m){h.copy(M.position),h.add(b[L]),M.up.copy(w[L]),M.lookAt(h);var R=_[L];o.viewport(R)}else h.setFromMatrixPosition(y.target.matrixWorld),M.lookAt(h);M.updateMatrixWorld(),M.matrixWorldInverse.getInverse(M.matrixWorld),A.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),A.multiply(M.projectionMatrix),A.multiply(M.matrixWorldInverse),s.multiplyMatrices(M.projectionMatrix,M.matrixWorldInverse),a.setFromMatrix(s),p.length=0,U(t,n,M);for(var I=0,F=p.length;I<F;I++){var N=p[I],B=r.update(N),O=N.material;if(O instanceof Z.MultiMaterial)for(var V=B.groups,G=O.materials,z=0,k=V.length;z<k;z++){var j=V[z],H=G[j.materialIndex];if(!0===H.visible){var W=D(N,H,m,d);e.renderBufferDirect(M,null,B,W,N,j)}}else{W=D(N,O,m,d);e.renderBufferDirect(M,null,B,W,N,null)}}}}else console.warn(\"THREE.WebGLShadowMap:\",y,\"has no shadow.\")}var X=e.getClearColor(),q=e.getClearAlpha();e.setClearColor(X,q),P.needsUpdate=!1}}},Z.WebGLState=function(e,t,r){var n=this;this.buffers={color:new Z.WebGLColorBuffer(e,this),depth:new Z.WebGLDepthBuffer(e,this),stencil:new Z.WebGLStencilBuffer(e,this)};var i=e.getParameter(e.MAX_VERTEX_ATTRIBS),o=new Uint8Array(i),a=new Uint8Array(i),s=new Uint8Array(i),c={},l=null,u=null,h=null,d=null,p=null,f=null,m=null,v=null,g=!1,y=null,x=null,b=null,w=null,_=null,M=null,S=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),T=null,E={},C=new Z.Vector4,A=new Z.Vector4;function L(t,r,n){var i=new Uint8Array(4),o=e.createTexture();e.bindTexture(t,o),e.texParameteri(t,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(t,e.TEXTURE_MAG_FILTER,e.NEAREST);for(var a=0;a<n;a++)e.texImage2D(r+a,0,e.RGBA,1,1,0,e.RGBA,e.UNSIGNED_BYTE,i);return o}var R={};R[e.TEXTURE_2D]=L(e.TEXTURE_2D,e.TEXTURE_2D,1),R[e.TEXTURE_CUBE_MAP]=L(e.TEXTURE_CUBE_MAP,e.TEXTURE_CUBE_MAP_POSITIVE_X,6),this.init=function(){this.clearColor(0,0,0,1),this.clearDepth(1),this.clearStencil(0),this.enable(e.DEPTH_TEST),this.setDepthFunc(Z.LessEqualDepth),this.setFlipSided(!1),this.setCullFace(Z.CullFaceBack),this.enable(e.CULL_FACE),this.enable(e.BLEND),this.setBlending(Z.NormalBlending)},this.initAttributes=function(){for(var e=0,t=o.length;e<t;e++)o[e]=0},this.enableAttribute=function(r){(o[r]=1,0===a[r]&&(e.enableVertexAttribArray(r),a[r]=1),0!==s[r])&&(t.get(\"ANGLE_instanced_arrays\").vertexAttribDivisorANGLE(r,0),s[r]=0)},this.enableAttributeAndDivisor=function(t,r,n){o[t]=1,0===a[t]&&(e.enableVertexAttribArray(t),a[t]=1),s[t]!==r&&(n.vertexAttribDivisorANGLE(t,r),s[t]=r)},this.disableUnusedAttributes=function(){for(var t=0,r=a.length;t!==r;++t)a[t]!==o[t]&&(e.disableVertexAttribArray(t),a[t]=0)},this.enable=function(t){!0!==c[t]&&(e.enable(t),c[t]=!0)},this.disable=function(t){!1!==c[t]&&(e.disable(t),c[t]=!1)},this.getCompressedTextureFormats=function(){if(null===l&&(l=[],t.get(\"WEBGL_compressed_texture_pvrtc\")||t.get(\"WEBGL_compressed_texture_s3tc\")||t.get(\"WEBGL_compressed_texture_etc1\")))for(var r=e.getParameter(e.COMPRESSED_TEXTURE_FORMATS),n=0;n<r.length;n++)l.push(r[n]);return l},this.setBlending=function(t,n,i,o,a,s,c,l){if(t===Z.NoBlending)return this.disable(e.BLEND),void(u=t);this.enable(e.BLEND),t===u&&l===g||(t===Z.AdditiveBlending?l?(e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.ONE,e.ONE,e.ONE,e.ONE)):(e.blendEquation(e.FUNC_ADD),e.blendFunc(e.SRC_ALPHA,e.ONE)):t===Z.SubtractiveBlending?l?(e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.ZERO,e.ZERO,e.ONE_MINUS_SRC_COLOR,e.ONE_MINUS_SRC_ALPHA)):(e.blendEquation(e.FUNC_ADD),e.blendFunc(e.ZERO,e.ONE_MINUS_SRC_COLOR)):t===Z.MultiplyBlending?l?(e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.ZERO,e.SRC_COLOR,e.ZERO,e.SRC_ALPHA)):(e.blendEquation(e.FUNC_ADD),e.blendFunc(e.ZERO,e.SRC_COLOR)):l?(e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.ONE,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA)):(e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.SRC_ALPHA,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA)),u=t,g=l),t===Z.CustomBlending?(a=a||n,s=s||i,c=c||o,n===h&&a===f||(e.blendEquationSeparate(r(n),r(a)),h=n,f=a),i===d&&o===p&&s===m&&c===v||(e.blendFuncSeparate(r(i),r(o),r(s),r(c)),d=i,p=o,m=s,v=c)):(h=null,d=null,p=null,f=null,m=null,v=null)},this.setColorWrite=function(e){this.buffers.color.setMask(e)},this.setDepthTest=function(e){this.buffers.depth.setTest(e)},this.setDepthWrite=function(e){this.buffers.depth.setMask(e)},this.setDepthFunc=function(e){this.buffers.depth.setFunc(e)},this.setStencilTest=function(e){this.buffers.stencil.setTest(e)},this.setStencilWrite=function(e){this.buffers.stencil.setMask(e)},this.setStencilFunc=function(e,t,r){this.buffers.stencil.setFunc(e,t,r)},this.setStencilOp=function(e,t,r){this.buffers.stencil.setOp(e,t,r)},this.setFlipSided=function(t){y!==t&&(t?e.frontFace(e.CW):e.frontFace(e.CCW),y=t)},this.setCullFace=function(t){t!==Z.CullFaceNone?(this.enable(e.CULL_FACE),t!==x&&(t===Z.CullFaceBack?e.cullFace(e.BACK):t===Z.CullFaceFront?e.cullFace(e.FRONT):e.cullFace(e.FRONT_AND_BACK))):this.disable(e.CULL_FACE),x=t},this.setLineWidth=function(t){t!==b&&(e.lineWidth(t),b=t)},this.setPolygonOffset=function(t,r,n){t?(this.enable(e.POLYGON_OFFSET_FILL),w===r&&_===n||(e.polygonOffset(r,n),w=r,_=n)):this.disable(e.POLYGON_OFFSET_FILL)},this.getScissorTest=function(){return M},this.setScissorTest=function(t){M=t,t?this.enable(e.SCISSOR_TEST):this.disable(e.SCISSOR_TEST)},this.activeTexture=function(t){void 0===t&&(t=e.TEXTURE0+S-1),T!==t&&(e.activeTexture(t),T=t)},this.bindTexture=function(t,r){null===T&&n.activeTexture();var i=E[T];void 0===i&&(i={type:void 0,texture:void 0},E[T]=i),i.type===t&&i.texture===r||(e.bindTexture(t,r||R[t]),i.type=t,i.texture=r)},this.compressedTexImage2D=function(){try{e.compressedTexImage2D.apply(e,arguments)}catch(e){console.error(e)}},this.texImage2D=function(){try{e.texImage2D.apply(e,arguments)}catch(e){console.error(e)}},this.clearColor=function(e,t,r,n){this.buffers.color.setClear(e,t,r,n)},this.clearDepth=function(e){this.buffers.depth.setClear(e)},this.clearStencil=function(e){this.buffers.stencil.setClear(e)},this.scissor=function(t){!1===C.equals(t)&&(e.scissor(t.x,t.y,t.z,t.w),C.copy(t))},this.viewport=function(t){!1===A.equals(t)&&(e.viewport(t.x,t.y,t.z,t.w),A.copy(t))},this.reset=function(){for(var t=0;t<a.length;t++)1===a[t]&&(e.disableVertexAttribArray(t),a[t]=0);c={},l=null,T=null,E={},u=null,y=null,x=null,this.buffers.color.reset(),this.buffers.depth.reset(),this.buffers.stencil.reset()}},Z.WebGLColorBuffer=function(e,t){var r=!1,n=new Z.Vector4,i=null,o=new Z.Vector4;this.setMask=function(t){i===t||r||(e.colorMask(t,t,t,t),i=t)},this.setLocked=function(e){r=e},this.setClear=function(t,r,i,a){n.set(t,r,i,a),!1===o.equals(n)&&(e.clearColor(t,r,i,a),o.copy(n))},this.reset=function(){r=!1,i=null,o=new Z.Vector4}},Z.WebGLDepthBuffer=function(e,t){var r=!1,n=null,i=null,o=null;this.setTest=function(r){r?t.enable(e.DEPTH_TEST):t.disable(e.DEPTH_TEST)},this.setMask=function(t){n===t||r||(e.depthMask(t),n=t)},this.setFunc=function(t){if(i!==t){if(t)switch(t){case Z.NeverDepth:e.depthFunc(e.NEVER);break;case Z.AlwaysDepth:e.depthFunc(e.ALWAYS);break;case Z.LessDepth:e.depthFunc(e.LESS);break;case Z.LessEqualDepth:e.depthFunc(e.LEQUAL);break;case Z.EqualDepth:e.depthFunc(e.EQUAL);break;case Z.GreaterEqualDepth:e.depthFunc(e.GEQUAL);break;case Z.GreaterDepth:e.depthFunc(e.GREATER);break;case Z.NotEqualDepth:e.depthFunc(e.NOTEQUAL);break;default:e.depthFunc(e.LEQUAL)}else e.depthFunc(e.LEQUAL);i=t}},this.setLocked=function(e){r=e},this.setClear=function(t){o!==t&&(e.clearDepth(t),o=t)},this.reset=function(){r=!1,n=null,i=null,o=null}},Z.WebGLStencilBuffer=function(e,t){var r=!1,n=null,i=null,o=null,a=null,s=null,c=null,l=null,u=null;this.setTest=function(r){r?t.enable(e.STENCIL_TEST):t.disable(e.STENCIL_TEST)},this.setMask=function(t){n===t||r||(e.stencilMask(t),n=t)},this.setFunc=function(t,r,n){i===t&&o===r&&a===n||(e.stencilFunc(t,r,n),i=t,o=r,a=n)},this.setOp=function(t,r,n){s===t&&c===r&&l===n||(e.stencilOp(t,r,n),s=t,c=r,l=n)},this.setLocked=function(e){r=e},this.setClear=function(t){u!==t&&(e.clearStencil(t),u=t)},this.reset=function(){r=!1,n=null,i=null,o=null,a=null,s=null,c=null,l=null,u=null}},Z.WebGLTextures=function(e,t,r,n,i,o,a){var s=a.memory,c=\"undefined\"!=typeof WebGL2RenderingContext&&e instanceof WebGL2RenderingContext;function l(e,t){if(e.width>t||e.height>t){var r=t/Math.max(e.width,e.height),n=document.createElementNS(\"http://www.w3.org/1999/xhtml\",\"canvas\");return n.width=Math.floor(e.width*r),n.height=Math.floor(e.height*r),n.getContext(\"2d\").drawImage(e,0,0,e.width,e.height,0,0,n.width,n.height),console.warn(\"THREE.WebGLRenderer: image is too big (\"+e.width+\"x\"+e.height+\"). Resized to \"+n.width+\"x\"+n.height,e),n}return e}function u(e){return Z.Math.isPowerOfTwo(e.width)&&Z.Math.isPowerOfTwo(e.height)}function h(t){return t===Z.NearestFilter||t===Z.NearestMipMapNearestFilter||t===Z.NearestMipMapLinearFilter?e.NEAREST:e.LINEAR}function d(t){var r=t.target;r.removeEventListener(\"dispose\",d),function(t){var r=n.get(t);if(t.image&&r.__image__webglTextureCube)e.deleteTexture(r.__image__webglTextureCube);else{if(void 0===r.__webglInit)return;e.deleteTexture(r.__webglTexture)}n.delete(t)}(r),s.textures--}function p(t){var r=t.target;r.removeEventListener(\"dispose\",p),function(t){var r=n.get(t),i=n.get(t.texture);if(!t)return;void 0!==i.__webglTexture&&e.deleteTexture(i.__webglTexture);t.depthTexture&&t.depthTexture.dispose();if(t instanceof Z.WebGLRenderTargetCube)for(var o=0;o<6;o++)e.deleteFramebuffer(r.__webglFramebuffer[o]),r.__webglDepthbuffer&&e.deleteRenderbuffer(r.__webglDepthbuffer[o]);else e.deleteFramebuffer(r.__webglFramebuffer),r.__webglDepthbuffer&&e.deleteRenderbuffer(r.__webglDepthbuffer);n.delete(t.texture),n.delete(t)}(r),s.textures--}function f(t,a){var h=n.get(t);if(t.version>0&&h.__version!==t.version){var p=t.image;if(void 0===p)console.warn(\"THREE.WebGLRenderer: Texture marked for update but image is undefined\",t);else{if(!1!==p.complete)return void function(t,n,a){void 0===t.__webglInit&&(t.__webglInit=!0,n.addEventListener(\"dispose\",d),t.__webglTexture=e.createTexture(),s.textures++);r.activeTexture(e.TEXTURE0+a),r.bindTexture(e.TEXTURE_2D,t.__webglTexture),e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,n.flipY),e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,n.premultiplyAlpha),e.pixelStorei(e.UNPACK_ALIGNMENT,n.unpackAlignment);var h=l(n.image,i.maxTextureSize);(function(e){return e.wrapS!==Z.ClampToEdgeWrapping||e.wrapT!==Z.ClampToEdgeWrapping||e.minFilter!==Z.NearestFilter&&e.minFilter!==Z.LinearFilter})(n)&&!1===u(h)&&(h=function(e){if(e instanceof HTMLImageElement||e instanceof HTMLCanvasElement){var t=document.createElementNS(\"http://www.w3.org/1999/xhtml\",\"canvas\");return t.width=Z.Math.nearestPowerOfTwo(e.width),t.height=Z.Math.nearestPowerOfTwo(e.height),t.getContext(\"2d\").drawImage(e,0,0,t.width,t.height),console.warn(\"THREE.WebGLRenderer: image is not power of two (\"+e.width+\"x\"+e.height+\"). Resized to \"+t.width+\"x\"+t.height,e),t}return e}(h));var p=u(h),f=o(n.format),v=o(n.type);m(e.TEXTURE_2D,n,p);var g,y=n.mipmaps;if(n instanceof Z.DepthTexture){var x=e.DEPTH_COMPONENT;if(n.type===Z.FloatType){if(!c)throw new Error(\"Float Depth Texture only supported in WebGL2.0\");x=e.DEPTH_COMPONENT32F}else c&&(x=e.DEPTH_COMPONENT16);r.texImage2D(e.TEXTURE_2D,0,x,h.width,h.height,0,f,v,null)}else if(n instanceof Z.DataTexture)if(y.length>0&&p){for(var b=0,w=y.length;b<w;b++)g=y[b],r.texImage2D(e.TEXTURE_2D,b,f,g.width,g.height,0,f,v,g.data);n.generateMipmaps=!1}else r.texImage2D(e.TEXTURE_2D,0,f,h.width,h.height,0,f,v,h.data);else if(n instanceof Z.CompressedTexture)for(var b=0,w=y.length;b<w;b++)g=y[b],n.format!==Z.RGBAFormat&&n.format!==Z.RGBFormat?r.getCompressedTextureFormats().indexOf(f)>-1?r.compressedTexImage2D(e.TEXTURE_2D,b,f,g.width,g.height,0,g.data):console.warn(\"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()\"):r.texImage2D(e.TEXTURE_2D,b,f,g.width,g.height,0,f,v,g.data);else if(y.length>0&&p){for(var b=0,w=y.length;b<w;b++)g=y[b],r.texImage2D(e.TEXTURE_2D,b,f,f,v,g);n.generateMipmaps=!1}else r.texImage2D(e.TEXTURE_2D,0,f,f,v,h);n.generateMipmaps&&p&&e.generateMipmap(e.TEXTURE_2D);t.__version=n.version,n.onUpdate&&n.onUpdate(n)}(h,t,a);console.warn(\"THREE.WebGLRenderer: Texture marked for update but image is incomplete\",t)}}r.activeTexture(e.TEXTURE0+a),r.bindTexture(e.TEXTURE_2D,h.__webglTexture)}function m(r,a,s){var c;if(s?(e.texParameteri(r,e.TEXTURE_WRAP_S,o(a.wrapS)),e.texParameteri(r,e.TEXTURE_WRAP_T,o(a.wrapT)),e.texParameteri(r,e.TEXTURE_MAG_FILTER,o(a.magFilter)),e.texParameteri(r,e.TEXTURE_MIN_FILTER,o(a.minFilter))):(e.texParameteri(r,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(r,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),a.wrapS===Z.ClampToEdgeWrapping&&a.wrapT===Z.ClampToEdgeWrapping||console.warn(\"THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.\",a),e.texParameteri(r,e.TEXTURE_MAG_FILTER,h(a.magFilter)),e.texParameteri(r,e.TEXTURE_MIN_FILTER,h(a.minFilter)),a.minFilter!==Z.NearestFilter&&a.minFilter!==Z.LinearFilter&&console.warn(\"THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.\",a)),c=t.get(\"EXT_texture_filter_anisotropic\")){if(a.type===Z.FloatType&&null===t.get(\"OES_texture_float_linear\"))return;if(a.type===Z.HalfFloatType&&null===t.get(\"OES_texture_half_float_linear\"))return;(a.anisotropy>1||n.get(a).__currentAnisotropy)&&(e.texParameterf(r,c.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(a.anisotropy,i.getMaxAnisotropy())),n.get(a).__currentAnisotropy=a.anisotropy)}}function v(t,i,a,s){var c=o(i.texture.format),l=o(i.texture.type);r.texImage2D(s,0,c,i.width,i.height,0,c,l,null),e.bindFramebuffer(e.FRAMEBUFFER,t),e.framebufferTexture2D(e.FRAMEBUFFER,a,s,n.get(i.texture).__webglTexture,0),e.bindFramebuffer(e.FRAMEBUFFER,null)}function g(t,r){e.bindRenderbuffer(e.RENDERBUFFER,t),r.depthBuffer&&!r.stencilBuffer?(e.renderbufferStorage(e.RENDERBUFFER,e.DEPTH_COMPONENT16,r.width,r.height),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.RENDERBUFFER,t)):r.depthBuffer&&r.stencilBuffer?(e.renderbufferStorage(e.RENDERBUFFER,e.DEPTH_STENCIL,r.width,r.height),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.RENDERBUFFER,t)):e.renderbufferStorage(e.RENDERBUFFER,e.RGBA4,r.width,r.height),e.bindRenderbuffer(e.RENDERBUFFER,null)}function y(t){var r=n.get(t),i=t instanceof Z.WebGLRenderTargetCube;if(t.depthTexture){if(i)throw new Error(\"target.depthTexture not supported in Cube render targets\");!function(t,r){if(r instanceof Z.WebGLRenderTargetCube)throw new Error(\"Depth Texture with cube render targets is not supported!\");if(e.bindFramebuffer(e.FRAMEBUFFER,t),!(r.depthTexture instanceof Z.DepthTexture))throw new Error(\"renderTarget.depthTexture must be an instance of THREE.DepthTexture\");n.get(r.depthTexture).__webglTexture&&r.depthTexture.image.width===r.width&&r.depthTexture.image.height===r.height||(r.depthTexture.image.width=r.width,r.depthTexture.image.height=r.height,r.depthTexture.needsUpdate=!0),f(r.depthTexture,0);var i=n.get(r.depthTexture).__webglTexture;e.framebufferTexture2D(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.TEXTURE_2D,i,0)}(r.__webglFramebuffer,t)}else if(i){r.__webglDepthbuffer=[];for(var o=0;o<6;o++)e.bindFramebuffer(e.FRAMEBUFFER,r.__webglFramebuffer[o]),r.__webglDepthbuffer[o]=e.createRenderbuffer(),g(r.__webglDepthbuffer[o],t)}else e.bindFramebuffer(e.FRAMEBUFFER,r.__webglFramebuffer),r.__webglDepthbuffer=e.createRenderbuffer(),g(r.__webglDepthbuffer,t);e.bindFramebuffer(e.FRAMEBUFFER,null)}this.setTexture2D=f,this.setTextureCube=function(t,a){var c=n.get(t);if(6===t.image.length)if(t.version>0&&c.__version!==t.version){c.__image__webglTextureCube||(t.addEventListener(\"dispose\",d),c.__image__webglTextureCube=e.createTexture(),s.textures++),r.activeTexture(e.TEXTURE0+a),r.bindTexture(e.TEXTURE_CUBE_MAP,c.__image__webglTextureCube),e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,t.flipY);for(var h=t instanceof Z.CompressedTexture,p=t.image[0]instanceof Z.DataTexture,f=[],v=0;v<6;v++)f[v]=h||p?p?t.image[v].image:t.image[v]:l(t.image[v],i.maxCubemapSize);var g=u(f[0]),y=o(t.format),x=o(t.type);for(m(e.TEXTURE_CUBE_MAP,t,g),v=0;v<6;v++)if(h)for(var b,w=f[v].mipmaps,_=0,M=w.length;_<M;_++)b=w[_],t.format!==Z.RGBAFormat&&t.format!==Z.RGBFormat?r.getCompressedTextureFormats().indexOf(y)>-1?r.compressedTexImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+v,_,y,b.width,b.height,0,b.data):console.warn(\"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()\"):r.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+v,_,y,b.width,b.height,0,y,x,b.data);else p?r.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+v,0,y,f[v].width,f[v].height,0,y,x,f[v].data):r.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+v,0,y,y,x,f[v]);t.generateMipmaps&&g&&e.generateMipmap(e.TEXTURE_CUBE_MAP),c.__version=t.version,t.onUpdate&&t.onUpdate(t)}else r.activeTexture(e.TEXTURE0+a),r.bindTexture(e.TEXTURE_CUBE_MAP,c.__image__webglTextureCube)},this.setTextureCubeDynamic=function(t,i){r.activeTexture(e.TEXTURE0+i),r.bindTexture(e.TEXTURE_CUBE_MAP,n.get(t).__webglTexture)},this.setupRenderTarget=function(t){var i=n.get(t),o=n.get(t.texture);t.addEventListener(\"dispose\",p),o.__webglTexture=e.createTexture(),s.textures++;var a=t instanceof Z.WebGLRenderTargetCube,c=u(t);if(a){i.__webglFramebuffer=[];for(var l=0;l<6;l++)i.__webglFramebuffer[l]=e.createFramebuffer()}else i.__webglFramebuffer=e.createFramebuffer();if(a){for(r.bindTexture(e.TEXTURE_CUBE_MAP,o.__webglTexture),m(e.TEXTURE_CUBE_MAP,t.texture,c),l=0;l<6;l++)v(i.__webglFramebuffer[l],t,e.COLOR_ATTACHMENT0,e.TEXTURE_CUBE_MAP_POSITIVE_X+l);t.texture.generateMipmaps&&c&&e.generateMipmap(e.TEXTURE_CUBE_MAP),r.bindTexture(e.TEXTURE_CUBE_MAP,null)}else r.bindTexture(e.TEXTURE_2D,o.__webglTexture),m(e.TEXTURE_2D,t.texture,c),v(i.__webglFramebuffer,t,e.COLOR_ATTACHMENT0,e.TEXTURE_2D),t.texture.generateMipmaps&&c&&e.generateMipmap(e.TEXTURE_2D),r.bindTexture(e.TEXTURE_2D,null);t.depthBuffer&&y(t)},this.updateRenderTargetMipmap=function(t){var i=t.texture;if(i.generateMipmaps&&u(t)&&i.minFilter!==Z.NearestFilter&&i.minFilter!==Z.LinearFilter){var o=t instanceof Z.WebGLRenderTargetCube?e.TEXTURE_CUBE_MAP:e.TEXTURE_2D,a=n.get(i).__webglTexture;r.bindTexture(o,a),e.generateMipmap(o),r.bindTexture(o,null)}}},Z.WebGLUniforms=function(){var e=new Z.Texture,t=new Z.CubeTexture,r=function(){this.seq=[],this.map={}},n=[],i=[],o=function(e,t,r){var i=e[0];if(i<=0||i>0)return e;var o=t*r,a=n[o];if(void 0===a&&(a=new Float32Array(o),n[o]=a),0!==t){i.toArray(a,0);for(var s=1,c=0;s!==t;++s)c+=r,e[s].toArray(a,c)}return a},a=function(e,t){var r=i[t];void 0===r&&(r=new Int32Array(t),i[t]=r);for(var n=0;n!==t;++n)r[n]=e.allocTextureUnit();return r},s=function(e,t){e.uniform1f(this.addr,t)},c=function(e,t){e.uniform1i(this.addr,t)},l=function(e,t){void 0===t.x?e.uniform2fv(this.addr,t):e.uniform2f(this.addr,t.x,t.y)},u=function(e,t){void 0!==t.x?e.uniform3f(this.addr,t.x,t.y,t.z):void 0!==t.r?e.uniform3f(this.addr,t.r,t.g,t.b):e.uniform3fv(this.addr,t)},h=function(e,t){void 0===t.x?e.uniform4fv(this.addr,t):e.uniform4f(this.addr,t.x,t.y,t.z,t.w)},d=function(e,t){e.uniformMatrix2fv(this.addr,!1,t.elements||t)},p=function(e,t){e.uniformMatrix3fv(this.addr,!1,t.elements||t)},f=function(e,t){e.uniformMatrix4fv(this.addr,!1,t.elements||t)},m=function(t,r,n){var i=n.allocTextureUnit();t.uniform1i(this.addr,i),n.setTexture2D(r||e,i)},v=function(e,r,n){var i=n.allocTextureUnit();e.uniform1i(this.addr,i),n.setTextureCube(r||t,i)},g=function(e,t){e.uniform2iv(this.addr,t)},y=function(e,t){e.uniform3iv(this.addr,t)},x=function(e,t){e.uniform4iv(this.addr,t)},b=function(e,t){e.uniform1fv(this.addr,t)},w=function(e,t){e.uniform1iv(this.addr,t)},_=function(e,t){e.uniform2fv(this.addr,o(t,this.size,2))},M=function(e,t){e.uniform3fv(this.addr,o(t,this.size,3))},S=function(e,t){e.uniform4fv(this.addr,o(t,this.size,4))},T=function(e,t){e.uniformMatrix2fv(this.addr,!1,o(t,this.size,4))},E=function(e,t){e.uniformMatrix3fv(this.addr,!1,o(t,this.size,9))},C=function(e,t){e.uniformMatrix4fv(this.addr,!1,o(t,this.size,16))},A=function(t,r,n){var i=r.length,o=a(n,i);t.uniform1iv(this.addr,o);for(var s=0;s!==i;++s)n.setTexture2D(r[s]||e,o[s])},L=function(e,r,n){var i=r.length,o=a(n,i);e.uniform1iv(this.addr,o);for(var s=0;s!==i;++s)n.setTextureCube(r[s]||t,o[s])},R=function(e,t,r){this.id=e,this.addr=r,this.setValue=function(e){switch(e){case 5126:return s;case 35664:return l;case 35665:return u;case 35666:return h;case 35674:return d;case 35675:return p;case 35676:return f;case 35678:return m;case 35680:return v;case 5124:case 35670:return c;case 35667:case 35671:return g;case 35668:case 35672:return y;case 35669:case 35673:return x}}(t.type)},P=function(e,t,r){this.id=e,this.addr=r,this.size=t.size,this.setValue=function(e){switch(e){case 5126:return b;case 35664:return _;case 35665:return M;case 35666:return S;case 35674:return T;case 35675:return E;case 35676:return C;case 35678:return A;case 35680:return L;case 5124:case 35670:return w;case 35667:case 35671:return g;case 35668:case 35672:return y;case 35669:case 35673:return x}}(t.type)},D=function(e){this.id=e,r.call(this)};D.prototype.setValue=function(e,t){for(var r=this.seq,n=0,i=r.length;n!==i;++n){var o=r[n];o.setValue(e,t[o.id])}};var U=/([\\w\\d_]+)(\\])?(\\[|\\.)?/g,I=function(e,t){e.seq.push(t),e.map[t.id]=t},F=function(e,t,r){var n=e.name,i=n.length;for(U.lastIndex=0;;){var o=U.exec(n),a=U.lastIndex,s=o[1],c=\"]\"===o[2],l=o[3];if(c&&(s|=0),void 0===l||\"[\"===l&&a+2===i){I(r,void 0===l?new R(s,e,t):new P(s,e,t));break}var u=r.map[s];void 0===u&&(u=new D(s),I(r,u)),r=u}},N=function(e,t,n){r.call(this),this.renderer=n;for(var i=e.getProgramParameter(t,e.ACTIVE_UNIFORMS),o=0;o!==i;++o){var a=e.getActiveUniform(t,o),s=a.name,c=e.getUniformLocation(t,s);F(a,c,this)}};return N.prototype.setValue=function(e,t,r){var n=this.map[t];void 0!==n&&n.setValue(e,r,this.renderer)},N.prototype.set=function(e,t,r){var n=this.map[r];void 0!==n&&n.setValue(e,t[r],this.renderer)},N.prototype.setOptional=function(e,t,r){var n=t[r];void 0!==n&&this.setValue(e,r,n)},N.upload=function(e,t,r,n){for(var i=0,o=t.length;i!==o;++i){var a=t[i],s=r[a.id];!1!==s.needsUpdate&&a.setValue(e,s.value,n)}},N.seqWithValue=function(e,t){for(var r=[],n=0,i=e.length;n!==i;++n){var o=e[n];o.id in t&&r.push(o)}return r},N.splitDynamic=function(e,t){for(var r=null,n=e.length,i=0,o=0;o!==n;++o){var a=e[o],s=t[a.id];s&&!0===s.dynamic?(null===r&&(r=[]),r.push(a)):(i<o&&(e[i]=a),++i)}return i<n&&(e.length=i),r},N.evalDynamic=function(e,t,r,n){for(var i=0,o=e.length;i!==o;++i){var a=t[e[i].id],s=a.onUpdateCallback;void 0!==s&&s.call(a,r,n)}},N}(),Z.LensFlarePlugin=function(e,t){var r,n,i,o,a,s,c,l,u=e.context,h=e.state;function d(){var t=new Float32Array([-1,-1,0,0,1,-1,1,0,1,1,1,1,-1,1,0,1]),d=new Uint16Array([0,1,2,0,2,3]);r=u.createBuffer(),n=u.createBuffer(),u.bindBuffer(u.ARRAY_BUFFER,r),u.bufferData(u.ARRAY_BUFFER,t,u.STATIC_DRAW),u.bindBuffer(u.ELEMENT_ARRAY_BUFFER,n),u.bufferData(u.ELEMENT_ARRAY_BUFFER,d,u.STATIC_DRAW),c=u.createTexture(),l=u.createTexture(),h.bindTexture(u.TEXTURE_2D,c),u.texImage2D(u.TEXTURE_2D,0,u.RGB,16,16,0,u.RGB,u.UNSIGNED_BYTE,null),u.texParameteri(u.TEXTURE_2D,u.TEXTURE_WRAP_S,u.CLAMP_TO_EDGE),u.texParameteri(u.TEXTURE_2D,u.TEXTURE_WRAP_T,u.CLAMP_TO_EDGE),u.texParameteri(u.TEXTURE_2D,u.TEXTURE_MAG_FILTER,u.NEAREST),u.texParameteri(u.TEXTURE_2D,u.TEXTURE_MIN_FILTER,u.NEAREST),h.bindTexture(u.TEXTURE_2D,l),u.texImage2D(u.TEXTURE_2D,0,u.RGBA,16,16,0,u.RGBA,u.UNSIGNED_BYTE,null),u.texParameteri(u.TEXTURE_2D,u.TEXTURE_WRAP_S,u.CLAMP_TO_EDGE),u.texParameteri(u.TEXTURE_2D,u.TEXTURE_WRAP_T,u.CLAMP_TO_EDGE),u.texParameteri(u.TEXTURE_2D,u.TEXTURE_MAG_FILTER,u.NEAREST),u.texParameteri(u.TEXTURE_2D,u.TEXTURE_MIN_FILTER,u.NEAREST),i={vertexShader:[\"uniform lowp int renderType;\",\"uniform vec3 screenPosition;\",\"uniform vec2 scale;\",\"uniform float rotation;\",\"uniform sampler2D occlusionMap;\",\"attribute vec2 position;\",\"attribute vec2 uv;\",\"varying vec2 vUV;\",\"varying float vVisibility;\",\"void main() {\",\"vUV = uv;\",\"vec2 pos = position;\",\"if ( renderType == 2 ) {\",\"vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\",\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\",\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\",\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\",\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\",\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\",\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\",\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\",\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\",\"vVisibility =        visibility.r / 9.0;\",\"vVisibility *= 1.0 - visibility.g / 9.0;\",\"vVisibility *=       visibility.b / 9.0;\",\"vVisibility *= 1.0 - visibility.a / 9.0;\",\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\"}\",\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\"}\"].join(\"\\n\"),fragmentShader:[\"uniform lowp int renderType;\",\"uniform sampler2D map;\",\"uniform float opacity;\",\"uniform vec3 color;\",\"varying vec2 vUV;\",\"varying float vVisibility;\",\"void main() {\",\"if ( renderType == 0 ) {\",\"gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\",\"} else if ( renderType == 1 ) {\",\"gl_FragColor = texture2D( map, vUV );\",\"} else {\",\"vec4 texture = texture2D( map, vUV );\",\"texture.a *= opacity * vVisibility;\",\"gl_FragColor = texture;\",\"gl_FragColor.rgb *= color;\",\"}\",\"}\"].join(\"\\n\")},o=function(t){var r=u.createProgram(),n=u.createShader(u.FRAGMENT_SHADER),i=u.createShader(u.VERTEX_SHADER),o=\"precision \"+e.getPrecision()+\" float;\\n\";return u.shaderSource(n,o+t.fragmentShader),u.shaderSource(i,o+t.vertexShader),u.compileShader(n),u.compileShader(i),u.attachShader(r,n),u.attachShader(r,i),u.linkProgram(r),r}(i),a={vertex:u.getAttribLocation(o,\"position\"),uv:u.getAttribLocation(o,\"uv\")},s={renderType:u.getUniformLocation(o,\"renderType\"),map:u.getUniformLocation(o,\"map\"),occlusionMap:u.getUniformLocation(o,\"occlusionMap\"),opacity:u.getUniformLocation(o,\"opacity\"),color:u.getUniformLocation(o,\"color\"),scale:u.getUniformLocation(o,\"scale\"),rotation:u.getUniformLocation(o,\"rotation\"),screenPosition:u.getUniformLocation(o,\"screenPosition\")}}this.render=function(i,p,f){if(0!==t.length){var m=new Z.Vector3,v=f.w/f.z,g=.5*f.z,y=.5*f.w,x=16/f.w,b=new Z.Vector2(x*v,x),w=new Z.Vector3(1,1,0),_=new Z.Vector2(1,1),M=new Z.Box2;M.min.set(0,0),M.max.set(f.z-16,f.w-16),void 0===o&&d(),u.useProgram(o),h.initAttributes(),h.enableAttribute(a.vertex),h.enableAttribute(a.uv),h.disableUnusedAttributes(),u.uniform1i(s.occlusionMap,0),u.uniform1i(s.map,1),u.bindBuffer(u.ARRAY_BUFFER,r),u.vertexAttribPointer(a.vertex,2,u.FLOAT,!1,16,0),u.vertexAttribPointer(a.uv,2,u.FLOAT,!1,16,8),u.bindBuffer(u.ELEMENT_ARRAY_BUFFER,n),h.disable(u.CULL_FACE),h.setDepthWrite(!1);for(var S=0,T=t.length;S<T;S++){x=16/f.w,b.set(x*v,x);var E=t[S];if(m.set(E.matrixWorld.elements[12],E.matrixWorld.elements[13],E.matrixWorld.elements[14]),m.applyMatrix4(p.matrixWorldInverse),m.applyProjection(p.projectionMatrix),w.copy(m),_.x=f.x+w.x*g+g-8,_.y=f.y+w.y*y+y-8,!0===M.containsPoint(_)){h.activeTexture(u.TEXTURE0),h.bindTexture(u.TEXTURE_2D,null),h.activeTexture(u.TEXTURE1),h.bindTexture(u.TEXTURE_2D,c),u.copyTexImage2D(u.TEXTURE_2D,0,u.RGB,_.x,_.y,16,16,0),u.uniform1i(s.renderType,0),u.uniform2f(s.scale,b.x,b.y),u.uniform3f(s.screenPosition,w.x,w.y,w.z),h.disable(u.BLEND),h.enable(u.DEPTH_TEST),u.drawElements(u.TRIANGLES,6,u.UNSIGNED_SHORT,0),h.activeTexture(u.TEXTURE0),h.bindTexture(u.TEXTURE_2D,l),u.copyTexImage2D(u.TEXTURE_2D,0,u.RGBA,_.x,_.y,16,16,0),u.uniform1i(s.renderType,1),h.disable(u.DEPTH_TEST),h.activeTexture(u.TEXTURE1),h.bindTexture(u.TEXTURE_2D,c),u.drawElements(u.TRIANGLES,6,u.UNSIGNED_SHORT,0),E.positionScreen.copy(w),E.customUpdateCallback?E.customUpdateCallback(E):E.updateLensFlares(),u.uniform1i(s.renderType,2),h.enable(u.BLEND);for(var C=0,A=E.lensFlares.length;C<A;C++){var L=E.lensFlares[C];L.opacity>.001&&L.scale>.001&&(w.x=L.x,w.y=L.y,w.z=L.z,x=L.size*L.scale/f.w,b.x=x*v,b.y=x,u.uniform3f(s.screenPosition,w.x,w.y,w.z),u.uniform2f(s.scale,b.x,b.y),u.uniform1f(s.rotation,L.rotation),u.uniform1f(s.opacity,L.opacity),u.uniform3f(s.color,L.color.r,L.color.g,L.color.b),h.setBlending(L.blending,L.blendEquation,L.blendSrc,L.blendDst),e.setTexture2D(L.texture,1),u.drawElements(u.TRIANGLES,6,u.UNSIGNED_SHORT,0))}}}h.enable(u.CULL_FACE),h.enable(u.DEPTH_TEST),h.setDepthWrite(!0),e.resetGLState()}}},Z.SpritePlugin=function(e,t){var r,n,i,o,a,s,c=e.context,l=e.state,u=new Z.Vector3,h=new Z.Quaternion,d=new Z.Vector3;function p(){var t=new Float32Array([-.5,-.5,0,0,.5,-.5,1,0,.5,.5,1,1,-.5,.5,0,1]),l=new Uint16Array([0,1,2,0,2,3]);r=c.createBuffer(),n=c.createBuffer(),c.bindBuffer(c.ARRAY_BUFFER,r),c.bufferData(c.ARRAY_BUFFER,t,c.STATIC_DRAW),c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,n),c.bufferData(c.ELEMENT_ARRAY_BUFFER,l,c.STATIC_DRAW),i=function(){var t=c.createProgram(),r=c.createShader(c.VERTEX_SHADER),n=c.createShader(c.FRAGMENT_SHADER);return c.shaderSource(r,[\"precision \"+e.getPrecision()+\" float;\",\"uniform mat4 modelViewMatrix;\",\"uniform mat4 projectionMatrix;\",\"uniform float rotation;\",\"uniform vec2 scale;\",\"uniform vec2 uvOffset;\",\"uniform vec2 uvScale;\",\"attribute vec2 position;\",\"attribute vec2 uv;\",\"varying vec2 vUV;\",\"void main() {\",\"vUV = uvOffset + uv * uvScale;\",\"vec2 alignedPosition = position * scale;\",\"vec2 rotatedPosition;\",\"rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\",\"rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\",\"vec4 finalPosition;\",\"finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\",\"finalPosition.xy += rotatedPosition;\",\"finalPosition = projectionMatrix * finalPosition;\",\"gl_Position = finalPosition;\",\"}\"].join(\"\\n\")),c.shaderSource(n,[\"precision \"+e.getPrecision()+\" float;\",\"uniform vec3 color;\",\"uniform sampler2D map;\",\"uniform float opacity;\",\"uniform int fogType;\",\"uniform vec3 fogColor;\",\"uniform float fogDensity;\",\"uniform float fogNear;\",\"uniform float fogFar;\",\"uniform float alphaTest;\",\"varying vec2 vUV;\",\"void main() {\",\"vec4 texture = texture2D( map, vUV );\",\"if ( texture.a < alphaTest ) discard;\",\"gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\",\"if ( fogType > 0 ) {\",\"float depth = gl_FragCoord.z / gl_FragCoord.w;\",\"float fogFactor = 0.0;\",\"if ( fogType == 1 ) {\",\"fogFactor = smoothstep( fogNear, fogFar, depth );\",\"} else {\",\"const float LOG2 = 1.442695;\",\"fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\",\"fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\",\"}\",\"gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\",\"}\",\"}\"].join(\"\\n\")),c.compileShader(r),c.compileShader(n),c.attachShader(t,r),c.attachShader(t,n),c.linkProgram(t),t}(),o={position:c.getAttribLocation(i,\"position\"),uv:c.getAttribLocation(i,\"uv\")},a={uvOffset:c.getUniformLocation(i,\"uvOffset\"),uvScale:c.getUniformLocation(i,\"uvScale\"),rotation:c.getUniformLocation(i,\"rotation\"),scale:c.getUniformLocation(i,\"scale\"),color:c.getUniformLocation(i,\"color\"),map:c.getUniformLocation(i,\"map\"),opacity:c.getUniformLocation(i,\"opacity\"),modelViewMatrix:c.getUniformLocation(i,\"modelViewMatrix\"),projectionMatrix:c.getUniformLocation(i,\"projectionMatrix\"),fogType:c.getUniformLocation(i,\"fogType\"),fogDensity:c.getUniformLocation(i,\"fogDensity\"),fogNear:c.getUniformLocation(i,\"fogNear\"),fogFar:c.getUniformLocation(i,\"fogFar\"),fogColor:c.getUniformLocation(i,\"fogColor\"),alphaTest:c.getUniformLocation(i,\"alphaTest\")};var u=document.createElementNS(\"http://www.w3.org/1999/xhtml\",\"canvas\");u.width=8,u.height=8;var h=u.getContext(\"2d\");h.fillStyle=\"white\",h.fillRect(0,0,8,8),(s=new Z.Texture(u)).needsUpdate=!0}function f(e,t){return e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:t.id-e.id}this.render=function(m,v){if(0!==t.length){void 0===i&&p(),c.useProgram(i),l.initAttributes(),l.enableAttribute(o.position),l.enableAttribute(o.uv),l.disableUnusedAttributes(),l.disable(c.CULL_FACE),l.enable(c.BLEND),c.bindBuffer(c.ARRAY_BUFFER,r),c.vertexAttribPointer(o.position,2,c.FLOAT,!1,16,0),c.vertexAttribPointer(o.uv,2,c.FLOAT,!1,16,8),c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,n),c.uniformMatrix4fv(a.projectionMatrix,!1,v.projectionMatrix.elements),l.activeTexture(c.TEXTURE0),c.uniform1i(a.map,0);var g=0,y=0,x=m.fog;x?(c.uniform3f(a.fogColor,x.color.r,x.color.g,x.color.b),x instanceof Z.Fog?(c.uniform1f(a.fogNear,x.near),c.uniform1f(a.fogFar,x.far),c.uniform1i(a.fogType,1),g=1,y=1):x instanceof Z.FogExp2&&(c.uniform1f(a.fogDensity,x.density),c.uniform1i(a.fogType,2),g=2,y=2)):(c.uniform1i(a.fogType,0),g=0,y=0);for(var b=0,w=t.length;b<w;b++){(M=t[b]).modelViewMatrix.multiplyMatrices(v.matrixWorldInverse,M.matrixWorld),M.z=-M.modelViewMatrix.elements[14]}t.sort(f);var _=[];for(b=0,w=t.length;b<w;b++){var M,S=(M=t[b]).material;if(!1!==S.visible){c.uniform1f(a.alphaTest,S.alphaTest),c.uniformMatrix4fv(a.modelViewMatrix,!1,M.modelViewMatrix.elements),M.matrixWorld.decompose(u,h,d),_[0]=d.x,_[1]=d.y;var T=0;m.fog&&S.fog&&(T=y),g!==T&&(c.uniform1i(a.fogType,T),g=T),null!==S.map?(c.uniform2f(a.uvOffset,S.map.offset.x,S.map.offset.y),c.uniform2f(a.uvScale,S.map.repeat.x,S.map.repeat.y)):(c.uniform2f(a.uvOffset,0,0),c.uniform2f(a.uvScale,1,1)),c.uniform1f(a.opacity,S.opacity),c.uniform3f(a.color,S.color.r,S.color.g,S.color.b),c.uniform1f(a.rotation,S.rotation),c.uniform2fv(a.scale,_),l.setBlending(S.blending,S.blendEquation,S.blendSrc,S.blendDst),l.setDepthTest(S.depthTest),l.setDepthWrite(S.depthWrite),S.map?e.setTexture2D(S.map,0):e.setTexture2D(s,0),c.drawElements(c.TRIANGLES,6,c.UNSIGNED_SHORT,0)}}l.enable(c.CULL_FACE),e.resetGLState()}}},Object.assign(Z,{Face4:function(e,t,r,n,i,o,a){return console.warn(\"THREE.Face4 has been removed. A THREE.Face3 will be created instead.\"),new Z.Face3(e,t,r,i,o,a)},LineStrip:0,LinePieces:1,MeshFaceMaterial:Z.MultiMaterial,PointCloud:function(e,t){return console.warn(\"THREE.PointCloud has been renamed to THREE.Points.\"),new Z.Points(e,t)},Particle:Z.Sprite,ParticleSystem:function(e,t){return console.warn(\"THREE.ParticleSystem has been renamed to THREE.Points.\"),new Z.Points(e,t)},PointCloudMaterial:function(e){return console.warn(\"THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.\"),new Z.PointsMaterial(e)},ParticleBasicMaterial:function(e){return console.warn(\"THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.\"),new Z.PointsMaterial(e)},ParticleSystemMaterial:function(e){return console.warn(\"THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.\"),new Z.PointsMaterial(e)},Vertex:function(e,t,r){return console.warn(\"THREE.Vertex has been removed. Use THREE.Vector3 instead.\"),new Z.Vector3(e,t,r)}}),Object.assign(Z.Box2.prototype,{empty:function(){return console.warn(\"THREE.Box2: .empty() has been renamed to .isEmpty().\"),this.isEmpty()},isIntersectionBox:function(e){return console.warn(\"THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().\"),this.intersectsBox(e)}}),Object.assign(Z.Box3.prototype,{empty:function(){return console.warn(\"THREE.Box3: .empty() has been renamed to .isEmpty().\"),this.isEmpty()},isIntersectionBox:function(e){return console.warn(\"THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().\"),this.intersectsBox(e)},isIntersectionSphere:function(e){return console.warn(\"THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().\"),this.intersectsSphere(e)}}),Object.assign(Z.Matrix3.prototype,{multiplyVector3:function(e){return console.warn(\"THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.\"),e.applyMatrix3(this)},multiplyVector3Array:function(e){return console.warn(\"THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.\"),this.applyToVector3Array(e)}}),Object.assign(Z.Matrix4.prototype,{extractPosition:function(e){return console.warn(\"THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().\"),this.copyPosition(e)},setRotationFromQuaternion:function(e){return console.warn(\"THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().\"),this.makeRotationFromQuaternion(e)},multiplyVector3:function(e){return console.warn(\"THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.\"),e.applyProjection(this)},multiplyVector4:function(e){return console.warn(\"THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.\"),e.applyMatrix4(this)},multiplyVector3Array:function(e){return console.warn(\"THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.\"),this.applyToVector3Array(e)},rotateAxis:function(e){console.warn(\"THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.\"),e.transformDirection(this)},crossVector:function(e){return console.warn(\"THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.\"),e.applyMatrix4(this)},translate:function(e){console.error(\"THREE.Matrix4: .translate() has been removed.\")},rotateX:function(e){console.error(\"THREE.Matrix4: .rotateX() has been removed.\")},rotateY:function(e){console.error(\"THREE.Matrix4: .rotateY() has been removed.\")},rotateZ:function(e){console.error(\"THREE.Matrix4: .rotateZ() has been removed.\")},rotateByAxis:function(e,t){console.error(\"THREE.Matrix4: .rotateByAxis() has been removed.\")}}),Object.assign(Z.Plane.prototype,{isIntersectionLine:function(e){return console.warn(\"THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().\"),this.intersectsLine(e)}}),Object.assign(Z.Quaternion.prototype,{multiplyVector3:function(e){return console.warn(\"THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.\"),e.applyQuaternion(this)}}),Object.assign(Z.Ray.prototype,{isIntersectionBox:function(e){return console.warn(\"THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().\"),this.intersectsBox(e)},isIntersectionPlane:function(e){return console.warn(\"THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().\"),this.intersectsPlane(e)},isIntersectionSphere:function(e){return console.warn(\"THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().\"),this.intersectsSphere(e)}}),Object.assign(Z.Vector3.prototype,{setEulerFromRotationMatrix:function(){console.error(\"THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.\")},setEulerFromQuaternion:function(){console.error(\"THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.\")},getPositionFromMatrix:function(e){return console.warn(\"THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().\"),this.setFromMatrixPosition(e)},getScaleFromMatrix:function(e){return console.warn(\"THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().\"),this.setFromMatrixScale(e)},getColumnFromMatrix:function(e,t){return console.warn(\"THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().\"),this.setFromMatrixColumn(t,e)}}),Object.assign(Z.Object3D.prototype,{getChildByName:function(e){return console.warn(\"THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().\"),this.getObjectByName(e)},renderDepth:function(e){console.warn(\"THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.\")},translate:function(e,t){return console.warn(\"THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.\"),this.translateOnAxis(t,e)}}),Object.defineProperties(Z.Object3D.prototype,{eulerOrder:{get:function(){return console.warn(\"THREE.Object3D: .eulerOrder is now .rotation.order.\"),this.rotation.order},set:function(e){console.warn(\"THREE.Object3D: .eulerOrder is now .rotation.order.\"),this.rotation.order=e}},useQuaternion:{get:function(){console.warn(\"THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.\")},set:function(e){console.warn(\"THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.\")}}}),Object.defineProperties(Z.LOD.prototype,{objects:{get:function(){return console.warn(\"THREE.LOD: .objects has been renamed to .levels.\"),this.levels}}}),Z.PerspectiveCamera.prototype.setLens=function(e,t){console.warn(\"THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup.\"),void 0!==t&&(this.filmGauge=t),this.setFocalLength(e)},Object.defineProperties(Z.Light.prototype,{onlyShadow:{set:function(e){console.warn(\"THREE.Light: .onlyShadow has been removed.\")}},shadowCameraFov:{set:function(e){console.warn(\"THREE.Light: .shadowCameraFov is now .shadow.camera.fov.\"),this.shadow.camera.fov=e}},shadowCameraLeft:{set:function(e){console.warn(\"THREE.Light: .shadowCameraLeft is now .shadow.camera.left.\"),this.shadow.camera.left=e}},shadowCameraRight:{set:function(e){console.warn(\"THREE.Light: .shadowCameraRight is now .shadow.camera.right.\"),this.shadow.camera.right=e}},shadowCameraTop:{set:function(e){console.warn(\"THREE.Light: .shadowCameraTop is now .shadow.camera.top.\"),this.shadow.camera.top=e}},shadowCameraBottom:{set:function(e){console.warn(\"THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.\"),this.shadow.camera.bottom=e}},shadowCameraNear:{set:function(e){console.warn(\"THREE.Light: .shadowCameraNear is now .shadow.camera.near.\"),this.shadow.camera.near=e}},shadowCameraFar:{set:function(e){console.warn(\"THREE.Light: .shadowCameraFar is now .shadow.camera.far.\"),this.shadow.camera.far=e}},shadowCameraVisible:{set:function(e){console.warn(\"THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.\")}},shadowBias:{set:function(e){console.warn(\"THREE.Light: .shadowBias is now .shadow.bias.\"),this.shadow.bias=e}},shadowDarkness:{set:function(e){console.warn(\"THREE.Light: .shadowDarkness has been removed.\")}},shadowMapWidth:{set:function(e){console.warn(\"THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.\"),this.shadow.mapSize.width=e}},shadowMapHeight:{set:function(e){console.warn(\"THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.\"),this.shadow.mapSize.height=e}}}),Object.defineProperties(Z.BufferAttribute.prototype,{length:{get:function(){return console.warn(\"THREE.BufferAttribute: .length has been deprecated. Please use .count.\"),this.array.length}}}),Object.assign(Z.BufferGeometry.prototype,{addIndex:function(e){console.warn(\"THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().\"),this.setIndex(e)},addDrawCall:function(e,t,r){void 0!==r&&console.warn(\"THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.\"),console.warn(\"THREE.BufferGeometry: .addDrawCall() is now .addGroup().\"),this.addGroup(e,t)},clearDrawCalls:function(){console.warn(\"THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().\"),this.clearGroups()},computeTangents:function(){console.warn(\"THREE.BufferGeometry: .computeTangents() has been removed.\")},computeOffsets:function(){console.warn(\"THREE.BufferGeometry: .computeOffsets() has been removed.\")}}),Object.defineProperties(Z.BufferGeometry.prototype,{drawcalls:{get:function(){return console.error(\"THREE.BufferGeometry: .drawcalls has been renamed to .groups.\"),this.groups}},offsets:{get:function(){return console.warn(\"THREE.BufferGeometry: .offsets has been renamed to .groups.\"),this.groups}}}),Object.defineProperties(Z.Material.prototype,{wrapAround:{get:function(){console.warn(\"THREE.\"+this.type+\": .wrapAround has been removed.\")},set:function(e){console.warn(\"THREE.\"+this.type+\": .wrapAround has been removed.\")}},wrapRGB:{get:function(){return console.warn(\"THREE.\"+this.type+\": .wrapRGB has been removed.\"),new Z.Color}}}),Object.defineProperties(Z.MeshPhongMaterial.prototype,{metal:{get:function(){return console.warn(\"THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.\"),!1},set:function(e){console.warn(\"THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead\")}}}),Object.defineProperties(Z.ShaderMaterial.prototype,{derivatives:{get:function(){return console.warn(\"THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.\"),this.extensions.derivatives},set:function(e){console.warn(\"THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.\"),this.extensions.derivatives=e}}}),Z.EventDispatcher.prototype=Object.assign(Object.create({constructor:Z.EventDispatcher,apply:function(e){console.warn(\"THREE.EventDispatcher: .apply is deprecated, just inherit or Object.assign the prototype to mix-in.\"),Object.assign(e,this)}}),Z.EventDispatcher.prototype),Object.assign(Z.WebGLRenderer.prototype,{supportsFloatTextures:function(){return console.warn(\"THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' ).\"),this.extensions.get(\"OES_texture_float\")},supportsHalfFloatTextures:function(){return console.warn(\"THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' ).\"),this.extensions.get(\"OES_texture_half_float\")},supportsStandardDerivatives:function(){return console.warn(\"THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' ).\"),this.extensions.get(\"OES_standard_derivatives\")},supportsCompressedTextureS3TC:function(){return console.warn(\"THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' ).\"),this.extensions.get(\"WEBGL_compressed_texture_s3tc\")},supportsCompressedTexturePVRTC:function(){return console.warn(\"THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' ).\"),this.extensions.get(\"WEBGL_compressed_texture_pvrtc\")},supportsBlendMinMax:function(){return console.warn(\"THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' ).\"),this.extensions.get(\"EXT_blend_minmax\")},supportsVertexTextures:function(){return this.capabilities.vertexTextures},supportsInstancedArrays:function(){return console.warn(\"THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' ).\"),this.extensions.get(\"ANGLE_instanced_arrays\")},enableScissorTest:function(e){console.warn(\"THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().\"),this.setScissorTest(e)},initMaterial:function(){console.warn(\"THREE.WebGLRenderer: .initMaterial() has been removed.\")},addPrePlugin:function(){console.warn(\"THREE.WebGLRenderer: .addPrePlugin() has been removed.\")},addPostPlugin:function(){console.warn(\"THREE.WebGLRenderer: .addPostPlugin() has been removed.\")},updateShadowMap:function(){console.warn(\"THREE.WebGLRenderer: .updateShadowMap() has been removed.\")}}),Object.defineProperties(Z.WebGLRenderer.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(e){console.warn(\"THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.\"),this.shadowMap.enabled=e}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(e){console.warn(\"THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.\"),this.shadowMap.type=e}},shadowMapCullFace:{get:function(){return this.shadowMap.cullFace},set:function(e){console.warn(\"THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace.\"),this.shadowMap.cullFace=e}}}),Object.defineProperties(Z.WebGLShadowMap.prototype,{cullFace:{get:function(){return this.renderReverseSided?Z.CullFaceFront:Z.CullFaceBack},set:function(e){var t=e!==Z.CullFaceBack;console.warn(\"WebGLRenderer: .shadowMap.cullFace is deprecated. Set .shadowMap.renderReverseSided to \"+t+\".\"),this.renderReverseSided=t}}}),Object.defineProperties(Z.WebGLRenderTarget.prototype,{wrapS:{get:function(){return console.warn(\"THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.\"),this.texture.wrapS},set:function(e){console.warn(\"THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.\"),this.texture.wrapS=e}},wrapT:{get:function(){return console.warn(\"THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.\"),this.texture.wrapT},set:function(e){console.warn(\"THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.\"),this.texture.wrapT=e}},magFilter:{get:function(){return console.warn(\"THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.\"),this.texture.magFilter},set:function(e){console.warn(\"THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.\"),this.texture.magFilter=e}},minFilter:{get:function(){return console.warn(\"THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.\"),this.texture.minFilter},set:function(e){console.warn(\"THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.\"),this.texture.minFilter=e}},anisotropy:{get:function(){return console.warn(\"THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.\"),this.texture.anisotropy},set:function(e){console.warn(\"THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.\"),this.texture.anisotropy=e}},offset:{get:function(){return console.warn(\"THREE.WebGLRenderTarget: .offset is now .texture.offset.\"),this.texture.offset},set:function(e){console.warn(\"THREE.WebGLRenderTarget: .offset is now .texture.offset.\"),this.texture.offset=e}},repeat:{get:function(){return console.warn(\"THREE.WebGLRenderTarget: .repeat is now .texture.repeat.\"),this.texture.repeat},set:function(e){console.warn(\"THREE.WebGLRenderTarget: .repeat is now .texture.repeat.\"),this.texture.repeat=e}},format:{get:function(){return console.warn(\"THREE.WebGLRenderTarget: .format is now .texture.format.\"),this.texture.format},set:function(e){console.warn(\"THREE.WebGLRenderTarget: .format is now .texture.format.\"),this.texture.format=e}},type:{get:function(){return console.warn(\"THREE.WebGLRenderTarget: .type is now .texture.type.\"),this.texture.type},set:function(e){console.warn(\"THREE.WebGLRenderTarget: .type is now .texture.type.\"),this.texture.type=e}},generateMipmaps:{get:function(){return console.warn(\"THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.\"),this.texture.generateMipmaps},set:function(e){console.warn(\"THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.\"),this.texture.generateMipmaps=e}}}),Object.assign(Z.Audio.prototype,{load:function(e){console.warn(\"THREE.Audio: .load has been deprecated. Please use THREE.AudioLoader.\");var t=this;return(new Z.AudioLoader).load(e,function(e){t.setBuffer(e)}),this}}),Object.assign(Z.AudioAnalyser.prototype,{getData:function(e){return console.warn(\"THREE.AudioAnalyser: .getData() is now .getFrequencyData().\"),this.getFrequencyData()}}),Z.GeometryUtils={merge:function(e,t,r){var n;console.warn(\"THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.\"),t instanceof Z.Mesh&&(t.matrixAutoUpdate&&t.updateMatrix(),n=t.matrix,t=t.geometry),e.merge(t,n,r)},center:function(e){return console.warn(\"THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.\"),e.center()}},Z.ImageUtils={crossOrigin:void 0,loadTexture:function(e,t,r,n){console.warn(\"THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.\");var i=new Z.TextureLoader;i.setCrossOrigin(this.crossOrigin);var o=i.load(e,r,void 0,n);return t&&(o.mapping=t),o},loadTextureCube:function(e,t,r,n){console.warn(\"THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.\");var i=new Z.CubeTextureLoader;i.setCrossOrigin(this.crossOrigin);var o=i.load(e,r,void 0,n);return t&&(o.mapping=t),o},loadCompressedTexture:function(){console.error(\"THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.\")},loadCompressedTextureCube:function(){console.error(\"THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.\")}},Z.Projector=function(){console.error(\"THREE.Projector has been moved to /examples/js/renderers/Projector.js.\"),this.projectVector=function(e,t){console.warn(\"THREE.Projector: .projectVector() is now vector.project().\"),e.project(t)},this.unprojectVector=function(e,t){console.warn(\"THREE.Projector: .unprojectVector() is now vector.unproject().\"),e.unproject(t)},this.pickingRay=function(e,t){console.error(\"THREE.Projector: .pickingRay() is now raycaster.setFromCamera().\")}},Z.CanvasRenderer=function(){console.error(\"THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js\"),this.domElement=document.createElementNS(\"http://www.w3.org/1999/xhtml\",\"canvas\"),this.clear=function(){},this.render=function(){},this.setClearColor=function(){},this.setSize=function(){}},Z.CurveUtils={tangentQuadraticBezier:function(e,t,r,n){return 2*(1-e)*(r-t)+2*e*(n-r)},tangentCubicBezier:function(e,t,r,n,i){return-3*t*(1-e)*(1-e)+3*r*(1-e)*(1-e)-6*e*r*(1-e)+6*e*n*(1-e)-3*e*e*n+3*e*e*i},tangentSpline:function(e,t,r,n,i){return 6*e*e-6*e+(3*e*e-4*e+1)+(-6*e*e+6*e)+(3*e*e-2*e)},interpolate:function(e,t,r,n,i){var o=.5*(r-e),a=.5*(n-t),s=i*i;return(2*t-2*r+o+a)*(i*s)+(-3*t+3*r-2*o-a)*s+o*i+t}},Z.SceneUtils={createMultiMaterialObject:function(e,t){for(var r=new Z.Group,n=0,i=t.length;n<i;n++)r.add(new Z.Mesh(e,t[n]));return r},detach:function(e,t,r){e.applyMatrix(t.matrixWorld),t.remove(e),r.add(e)},attach:function(e,t,r){var n=new Z.Matrix4;n.getInverse(r.matrixWorld),e.applyMatrix(n),t.remove(e),r.add(e)}},Z.ShapeUtils={area:function(e){for(var t=e.length,r=0,n=t-1,i=0;i<t;n=i++)r+=e[n].x*e[i].y-e[i].x*e[n].y;return.5*r},triangulate:function(){function e(e,t,r,n,i,o){var a,s,c,l,u,h,d,p,f,m,v,g,y,x,b,w,_;if(s=e[o[t]].x,c=e[o[t]].y,l=e[o[r]].x,u=e[o[r]].y,h=e[o[n]].x,d=e[o[n]].y,Number.EPSILON>(l-s)*(d-c)-(u-c)*(h-s))return!1;for(m=h-l,v=d-u,g=s-h,y=c-d,x=l-s,b=u-c,a=0;a<i;a++)if(p=e[o[a]].x,f=e[o[a]].y,!(p===s&&f===c||p===l&&f===u||p===h&&f===d)&&(w=x*(f-c)-b*(p-s),_=g*(f-d)-y*(p-h),m*(f-u)-v*(p-l)>=-Number.EPSILON&&_>=-Number.EPSILON&&w>=-Number.EPSILON))return!1;return!0}return function(t,r){var n=t.length;if(n<3)return null;var i,o,a,s=[],c=[],l=[];if(Z.ShapeUtils.area(t)>0)for(o=0;o<n;o++)c[o]=o;else for(o=0;o<n;o++)c[o]=n-1-o;var u=n,h=2*u;for(o=u-1;u>2;){if(h--<=0)return console.warn(\"THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()\"),r?l:s;if(u<=(i=o)&&(i=0),u<=(o=i+1)&&(o=0),u<=(a=o+1)&&(a=0),e(t,i,o,a,u,c)){var d,p,f,m,v;for(d=c[i],p=c[o],f=c[a],s.push([t[d],t[p],t[f]]),l.push([c[i],c[o],c[a]]),m=o,v=o+1;v<u;m++,v++)c[m]=c[v];h=2*--u}}return r?l:s}}(),triangulateShape:function(e,t){function r(e){var t=e.length;t>2&&e[t-1].equals(e[0])&&e.pop()}function n(e,t,r){return e.x!==t.x?e.x<t.x?e.x<=r.x&&r.x<=t.x:t.x<=r.x&&r.x<=e.x:e.y<t.y?e.y<=r.y&&r.y<=t.y:t.y<=r.y&&r.y<=e.y}function i(e,t,r,i,o){var a=t.x-e.x,s=t.y-e.y,c=i.x-r.x,l=i.y-r.y,u=e.x-r.x,h=e.y-r.y,d=s*c-a*l,p=s*u-a*h;if(Math.abs(d)>Number.EPSILON){var f;if(d>0){if(p<0||p>d)return[];if((f=l*u-c*h)<0||f>d)return[]}else{if(p>0||p<d)return[];if((f=l*u-c*h)>0||f<d)return[]}if(0===f)return!o||0!==p&&p!==d?[e]:[];if(f===d)return!o||0!==p&&p!==d?[t]:[];if(0===p)return[r];if(p===d)return[i];var m=f/d;return[{x:e.x+m*a,y:e.y+m*s}]}if(0!==p||l*u!=c*h)return[];var v,g,y,x,b,w,_,M,S=0===a&&0===s,T=0===c&&0===l;return S&&T?e.x!==r.x||e.y!==r.y?[]:[e]:S?n(r,i,e)?[e]:[]:T?n(e,t,r)?[r]:[]:(0!==a?(e.x<t.x?(v=e,y=e.x,g=t,x=t.x):(v=t,y=t.x,g=e,x=e.x),r.x<i.x?(b=r,_=r.x,w=i,M=i.x):(b=i,_=i.x,w=r,M=r.x)):(e.y<t.y?(v=e,y=e.y,g=t,x=t.y):(v=t,y=t.y,g=e,x=e.y),r.y<i.y?(b=r,_=r.y,w=i,M=i.y):(b=i,_=i.y,w=r,M=r.y)),y<=_?x<_?[]:x===_?o?[]:[b]:x<=M?[b,g]:[b,w]:y>M?[]:y===M?o?[]:[v]:x<=M?[v,g]:[v,w])}function o(e,t,r,n){var i=t.x-e.x,o=t.y-e.y,a=r.x-e.x,s=r.y-e.y,c=n.x-e.x,l=n.y-e.y,u=i*s-o*a,h=i*l-o*c;if(Math.abs(u)>Number.EPSILON){var d=c*s-l*a;return u>0?h>=0&&d>=0:h>=0||d>=0}return h>0}r(e),t.forEach(r);for(var a,s,c,l,u,h,d={},p=e.concat(),f=0,m=t.length;f<m;f++)Array.prototype.push.apply(p,t[f]);for(a=0,s=p.length;a<s;a++)void 0!==d[u=p[a].x+\":\"+p[a].y]&&console.warn(\"THREE.ShapeUtils: Duplicate point\",u,a),d[u]=a;var v=function(e,t){var r,n=e.concat();function a(e,t){var i=n.length-1,a=e-1;a<0&&(a=i);var s=e+1;s>i&&(s=0);var c=o(n[e],n[a],n[s],r[t]);if(!c)return!1;var l=r.length-1,u=t-1;u<0&&(u=l);var h=t+1;return h>l&&(h=0),!!(c=o(r[t],r[u],r[h],n[e]))}function s(e,t){var r,o;for(r=0;r<n.length;r++)if(o=r+1,o%=n.length,i(e,t,n[r],n[o],!0).length>0)return!0;return!1}var c=[];function l(e,r){var n,o,a,s;for(n=0;n<c.length;n++)for(o=t[c[n]],a=0;a<o.length;a++)if(s=a+1,s%=o.length,i(e,r,o[a],o[s],!0).length>0)return!0;return!1}for(var u,h,d,p,f,m,v,g,y,x,b=[],w=0,_=t.length;w<_;w++)c.push(w);for(var M=0,S=2*c.length;c.length>0;){if(--S<0){console.log(\"Infinite Loop! Holes left:\"+c.length+\", Probably Hole outside Shape!\");break}for(h=M;h<n.length;h++){for(d=n[h],u=-1,w=0;w<c.length;w++)if(f=c[w],void 0===b[m=d.x+\":\"+d.y+\":\"+f]){r=t[f];for(var T=0;T<r.length;T++)if(p=r[T],a(h,T)&&!s(d,p)&&!l(d,p)){u=T,c.splice(w,1),v=n.slice(0,h+1),g=n.slice(h),y=r.slice(u),x=r.slice(0,u+1),n=v.concat(y).concat(x).concat(g),M=h;break}if(u>=0)break;b[m]=!0}if(u>=0)break}}return n}(e,t),g=Z.ShapeUtils.triangulate(v,!1);for(a=0,s=g.length;a<s;a++)for(l=g[a],c=0;c<3;c++)void 0!==(h=d[u=l[c].x+\":\"+l[c].y])&&(l[c]=h);return g.concat()},isClockWise:function(e){return Z.ShapeUtils.area(e)<0},b2:function(){return function(e,t,r,n){return function(e,t){var r=1-e;return r*r*t}(e,t)+function(e,t){return 2*(1-e)*e*t}(e,r)+function(e,t){return e*e*t}(e,n)}}(),b3:function(){return function(e,t,r,n,i){return function(e,t){var r=1-e;return r*r*r*t}(e,t)+function(e,t){var r=1-e;return 3*r*r*e*t}(e,r)+function(e,t){return 3*(1-e)*e*e*t}(e,n)+function(e,t){return e*e*e*t}(e,i)}}()},Z.Curve=function(){},Z.Curve.prototype={constructor:Z.Curve,getPoint:function(e){return console.warn(\"THREE.Curve: Warning, getPoint() not implemented!\"),null},getPointAt:function(e){var t=this.getUtoTmapping(e);return this.getPoint(t)},getPoints:function(e){e||(e=5);for(var t=[],r=0;r<=e;r++)t.push(this.getPoint(r/e));return t},getSpacedPoints:function(e){e||(e=5);for(var t=[],r=0;r<=e;r++)t.push(this.getPointAt(r/e));return t},getLength:function(){var e=this.getLengths();return e[e.length-1]},getLengths:function(e){if(e||(e=this.__arcLengthDivisions?this.__arcLengthDivisions:200),this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var t,r,n=[],i=this.getPoint(0),o=0;for(n.push(0),r=1;r<=e;r++)o+=(t=this.getPoint(r/e)).distanceTo(i),n.push(o),i=t;return this.cacheArcLengths=n,n},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},getUtoTmapping:function(e,t){var r,n=this.getLengths(),i=0,o=n.length;r=t||e*n[o-1];for(var a,s=0,c=o-1;s<=c;)if((a=n[i=Math.floor(s+(c-s)/2)]-r)<0)s=i+1;else{if(!(a>0)){c=i;break}c=i-1}if(n[i=c]===r)return i/(o-1);var l=n[i];return(i+(r-l)/(n[i+1]-l))/(o-1)},getTangent:function(e){var t=e-1e-4,r=e+1e-4;t<0&&(t=0),r>1&&(r=1);var n=this.getPoint(t);return this.getPoint(r).clone().sub(n).normalize()},getTangentAt:function(e){var t=this.getUtoTmapping(e);return this.getTangent(t)}},Z.Curve.create=function(e,t){return e.prototype=Object.create(Z.Curve.prototype),e.prototype.constructor=e,e.prototype.getPoint=t,e},Z.CurvePath=function(){this.curves=[],this.autoClose=!1},Z.CurvePath.prototype=Object.assign(Object.create(Z.Curve.prototype),{constructor:Z.CurvePath,add:function(e){this.curves.push(e)},closePath:function(){var e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new Z.LineCurve(t,e))},getPoint:function(e){for(var t=e*this.getLength(),r=this.getCurveLengths(),n=0;n<r.length;){if(r[n]>=t){var i=r[n]-t,o=this.curves[n],a=o.getLength(),s=0===a?0:1-i/a;return o.getPointAt(s)}n++}return null},getLength:function(){var e=this.getCurveLengths();return e[e.length-1]},updateArcLengths:function(){this.needsUpdate=!0,this.cacheLengths=null,this.getLengths()},getCurveLengths:function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;for(var e=[],t=0,r=0,n=this.curves.length;r<n;r++)t+=this.curves[r].getLength(),e.push(t);return this.cacheLengths=e,e},getSpacedPoints:function(e){e||(e=40);for(var t=[],r=0;r<=e;r++)t.push(this.getPoint(r/e));return this.autoClose&&t.push(t[0]),t},getPoints:function(e){e=e||12;for(var t,r=[],n=0,i=this.curves;n<i.length;n++)for(var o=i[n],a=o instanceof Z.EllipseCurve?2*e:o instanceof Z.LineCurve?1:o instanceof Z.SplineCurve?e*o.points.length:e,s=o.getPoints(a),c=0;c<s.length;c++){var l=s[c];t&&t.equals(l)||(r.push(l),t=l)}return this.autoClose&&r.length>1&&!r[r.length-1].equals(r[0])&&r.push(r[0]),r},createPointsGeometry:function(e){var t=this.getPoints(e);return this.createGeometry(t)},createSpacedPointsGeometry:function(e){var t=this.getSpacedPoints(e);return this.createGeometry(t)},createGeometry:function(e){for(var t=new Z.Geometry,r=0,n=e.length;r<n;r++){var i=e[r];t.vertices.push(new Z.Vector3(i.x,i.y,i.z||0))}return t}}),Z.Font=function(e){this.data=e},Object.assign(Z.Font.prototype,{generateShapes:function(e,t,r){function n(e,t,n){var o=i.glyphs[e]||i.glyphs[\"?\"];if(o){var a,s,c,l,u,h,d,p,f,m,v,g=new Z.ShapePath,y=[],x=Z.ShapeUtils.b2,b=Z.ShapeUtils.b3;if(o.o)for(var w=o._cachedOutline||(o._cachedOutline=o.o.split(\" \")),_=0,M=w.length;_<M;){switch(w[_++]){case\"m\":a=w[_++]*t+n,s=w[_++]*t,g.moveTo(a,s);break;case\"l\":a=w[_++]*t+n,s=w[_++]*t,g.lineTo(a,s);break;case\"q\":if(c=w[_++]*t+n,l=w[_++]*t,d=w[_++]*t+n,p=w[_++]*t,g.quadraticCurveTo(d,p,c,l),v=y[y.length-1]){u=v.x,h=v.y;for(var S=1;S<=r;S++){x(T=S/r,u,d,c),x(T,h,p,l)}}break;case\"b\":if(c=w[_++]*t+n,l=w[_++]*t,d=w[_++]*t+n,p=w[_++]*t,f=w[_++]*t+n,m=w[_++]*t,g.bezierCurveTo(d,p,f,m,c,l),v=y[y.length-1]){u=v.x,h=v.y;for(S=1;S<=r;S++){var T;b(T=S/r,u,d,f,c),b(T,h,p,m,l)}}}}return{offset:o.ha*t,path:g}}}void 0===t&&(t=100),void 0===r&&(r=4);for(var i=this.data,o=function(e){for(var r=String(e).split(\"\"),o=t/i.resolution,a=0,s=[],c=0;c<r.length;c++){var l=n(r[c],o,a);a+=l.offset,s.push(l.path)}return s}(e),a=[],s=0,c=o.length;s<c;s++)Array.prototype.push.apply(a,o[s].toShapes());return a}}),Z.Path=function(e){Z.CurvePath.call(this),this.currentPoint=new Z.Vector2,e&&this.fromPoints(e)},Z.Path.prototype=Object.assign(Object.create(Z.CurvePath.prototype),{constructor:Z.Path,fromPoints:function(e){this.moveTo(e[0].x,e[0].y);for(var t=1,r=e.length;t<r;t++)this.lineTo(e[t].x,e[t].y)},moveTo:function(e,t){this.currentPoint.set(e,t)},lineTo:function(e,t){var r=new Z.LineCurve(this.currentPoint.clone(),new Z.Vector2(e,t));this.curves.push(r),this.currentPoint.set(e,t)},quadraticCurveTo:function(e,t,r,n){var i=new Z.QuadraticBezierCurve(this.currentPoint.clone(),new Z.Vector2(e,t),new Z.Vector2(r,n));this.curves.push(i),this.currentPoint.set(r,n)},bezierCurveTo:function(e,t,r,n,i,o){var a=new Z.CubicBezierCurve(this.currentPoint.clone(),new Z.Vector2(e,t),new Z.Vector2(r,n),new Z.Vector2(i,o));this.curves.push(a),this.currentPoint.set(i,o)},splineThru:function(e){var t=[this.currentPoint.clone()].concat(e),r=new Z.SplineCurve(t);this.curves.push(r),this.currentPoint.copy(e[e.length-1])},arc:function(e,t,r,n,i,o){var a=this.currentPoint.x,s=this.currentPoint.y;this.absarc(e+a,t+s,r,n,i,o)},absarc:function(e,t,r,n,i,o){this.absellipse(e,t,r,r,n,i,o)},ellipse:function(e,t,r,n,i,o,a,s){var c=this.currentPoint.x,l=this.currentPoint.y;this.absellipse(e+c,t+l,r,n,i,o,a,s)},absellipse:function(e,t,r,n,i,o,a,s){var c=new Z.EllipseCurve(e,t,r,n,i,o,a,s);if(this.curves.length>0){var l=c.getPoint(0);l.equals(this.currentPoint)||this.lineTo(l.x,l.y)}this.curves.push(c);var u=c.getPoint(1);this.currentPoint.copy(u)}}),Z.ShapePath=function(){this.subPaths=[],this.currentPath=null},Z.ShapePath.prototype={moveTo:function(e,t){this.currentPath=new Z.Path,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t)},lineTo:function(e,t){this.currentPath.lineTo(e,t)},quadraticCurveTo:function(e,t,r,n){this.currentPath.quadraticCurveTo(e,t,r,n)},bezierCurveTo:function(e,t,r,n,i,o){this.currentPath.bezierCurveTo(e,t,r,n,i,o)},splineThru:function(e){this.currentPath.splineThru(e)},toShapes:function(e,t){function r(e){for(var t=[],r=0,n=e.length;r<n;r++){var i=e[r],o=new Z.Shape;o.curves=i.curves,t.push(o)}return t}function n(e,t){for(var r=t.length,n=!1,i=r-1,o=0;o<r;i=o++){var a=t[i],s=t[o],c=s.x-a.x,l=s.y-a.y;if(Math.abs(l)>Number.EPSILON){if(l<0&&(a=t[o],c=-c,s=t[i],l=-l),e.y<a.y||e.y>s.y)continue;if(e.y===a.y){if(e.x===a.x)return!0}else{var u=l*(e.x-a.x)-c*(e.y-a.y);if(0===u)return!0;if(u<0)continue;n=!n}}else{if(e.y!==a.y)continue;if(s.x<=e.x&&e.x<=a.x||a.x<=e.x&&e.x<=s.x)return!0}}return n}var i=Z.ShapeUtils.isClockWise,o=this.subPaths;if(0===o.length)return[];if(!0===t)return r(o);var a,s,c,l=[];if(1===o.length)return s=o[0],(c=new Z.Shape).curves=s.curves,l.push(c),l;var u=!i(o[0].getPoints());u=e?!u:u;var h,d,p=[],f=[],m=[],v=0;f[v]=void 0,m[v]=[];for(var g=0,y=o.length;g<y;g++)a=i(h=(s=o[g]).getPoints()),(a=e?!a:a)?(!u&&f[v]&&v++,f[v]={s:new Z.Shape,p:h},f[v].s.curves=s.curves,u&&v++,m[v]=[]):m[v].push({h:s,p:h[0]});if(!f[0])return r(o);if(f.length>1){for(var x=!1,b=[],w=0,_=f.length;w<_;w++)p[w]=[];for(w=0,_=f.length;w<_;w++)for(var M=m[w],S=0;S<M.length;S++){for(var T=M[S],E=!0,C=0;C<f.length;C++)n(T.p,f[C].p)&&(w!==C&&b.push({froms:w,tos:C,hole:S}),E?(E=!1,p[C].push(T)):x=!0);E&&p[w].push(T)}b.length>0&&(x||(m=p))}g=0;for(var A=f.length;g<A;g++){c=f[g].s,l.push(c);for(var L=0,R=(d=m[g]).length;L<R;L++)c.holes.push(d[L].h)}return l}},Z.Shape=function(){Z.Path.apply(this,arguments),this.holes=[]},Z.Shape.prototype=Object.assign(Object.create(Z.Path.prototype),{constructor:Z.Shape,extrude:function(e){return new Z.ExtrudeGeometry(this,e)},makeGeometry:function(e){return new Z.ShapeGeometry(this,e)},getPointsHoles:function(e){for(var t=[],r=0,n=this.holes.length;r<n;r++)t[r]=this.holes[r].getPoints(e);return t},extractAllPoints:function(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}},extractPoints:function(e){return this.extractAllPoints(e)}}),Z.LineCurve=function(e,t){this.v1=e,this.v2=t},Z.LineCurve.prototype=Object.create(Z.Curve.prototype),Z.LineCurve.prototype.constructor=Z.LineCurve,Z.LineCurve.prototype.getPoint=function(e){if(1===e)return this.v2.clone();var t=this.v2.clone().sub(this.v1);return t.multiplyScalar(e).add(this.v1),t},Z.LineCurve.prototype.getPointAt=function(e){return this.getPoint(e)},Z.LineCurve.prototype.getTangent=function(e){return this.v2.clone().sub(this.v1).normalize()},Z.QuadraticBezierCurve=function(e,t,r){this.v0=e,this.v1=t,this.v2=r},Z.QuadraticBezierCurve.prototype=Object.create(Z.Curve.prototype),Z.QuadraticBezierCurve.prototype.constructor=Z.QuadraticBezierCurve,Z.QuadraticBezierCurve.prototype.getPoint=function(e){var t=Z.ShapeUtils.b2;return new Z.Vector2(t(e,this.v0.x,this.v1.x,this.v2.x),t(e,this.v0.y,this.v1.y,this.v2.y))},Z.QuadraticBezierCurve.prototype.getTangent=function(e){var t=Z.CurveUtils.tangentQuadraticBezier;return new Z.Vector2(t(e,this.v0.x,this.v1.x,this.v2.x),t(e,this.v0.y,this.v1.y,this.v2.y)).normalize()},Z.CubicBezierCurve=function(e,t,r,n){this.v0=e,this.v1=t,this.v2=r,this.v3=n},Z.CubicBezierCurve.prototype=Object.create(Z.Curve.prototype),Z.CubicBezierCurve.prototype.constructor=Z.CubicBezierCurve,Z.CubicBezierCurve.prototype.getPoint=function(e){var t=Z.ShapeUtils.b3;return new Z.Vector2(t(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),t(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y))},Z.CubicBezierCurve.prototype.getTangent=function(e){var t=Z.CurveUtils.tangentCubicBezier;return new Z.Vector2(t(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),t(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y)).normalize()},Z.SplineCurve=function(e){this.points=null==e?[]:e},Z.SplineCurve.prototype=Object.create(Z.Curve.prototype),Z.SplineCurve.prototype.constructor=Z.SplineCurve,Z.SplineCurve.prototype.getPoint=function(e){var t=this.points,r=(t.length-1)*e,n=Math.floor(r),i=r-n,o=t[0===n?n:n-1],a=t[n],s=t[n>t.length-2?t.length-1:n+1],c=t[n>t.length-3?t.length-1:n+2],l=Z.CurveUtils.interpolate;return new Z.Vector2(l(o.x,a.x,s.x,c.x,i),l(o.y,a.y,s.y,c.y,i))},Z.EllipseCurve=function(e,t,r,n,i,o,a,s){this.aX=e,this.aY=t,this.xRadius=r,this.yRadius=n,this.aStartAngle=i,this.aEndAngle=o,this.aClockwise=a,this.aRotation=s||0},Z.EllipseCurve.prototype=Object.create(Z.Curve.prototype),Z.EllipseCurve.prototype.constructor=Z.EllipseCurve,Z.EllipseCurve.prototype.getPoint=function(e){for(var t=2*Math.PI,r=this.aEndAngle-this.aStartAngle,n=Math.abs(r)<Number.EPSILON;r<0;)r+=t;for(;r>t;)r-=t;r<Number.EPSILON&&(r=n?0:t),!0!==this.aClockwise||n||(r===t?r=-t:r-=t);var i=this.aStartAngle+e*r,o=this.aX+this.xRadius*Math.cos(i),a=this.aY+this.yRadius*Math.sin(i);if(0!==this.aRotation){var s=Math.cos(this.aRotation),c=Math.sin(this.aRotation),l=o-this.aX,u=a-this.aY;o=l*s-u*c+this.aX,a=l*c+u*s+this.aY}return new Z.Vector2(o,a)},Z.ArcCurve=function(e,t,r,n,i,o){Z.EllipseCurve.call(this,e,t,r,r,n,i,o)},Z.ArcCurve.prototype=Object.create(Z.EllipseCurve.prototype),Z.ArcCurve.prototype.constructor=Z.ArcCurve,Z.LineCurve3=Z.Curve.create(function(e,t){this.v1=e,this.v2=t},function(e){if(1===e)return this.v2.clone();var t=new Z.Vector3;return t.subVectors(this.v2,this.v1),t.multiplyScalar(e),t.add(this.v1),t}),Z.QuadraticBezierCurve3=Z.Curve.create(function(e,t,r){this.v0=e,this.v1=t,this.v2=r},function(e){var t=Z.ShapeUtils.b2;return new Z.Vector3(t(e,this.v0.x,this.v1.x,this.v2.x),t(e,this.v0.y,this.v1.y,this.v2.y),t(e,this.v0.z,this.v1.z,this.v2.z))}),Z.CubicBezierCurve3=Z.Curve.create(function(e,t,r,n){this.v0=e,this.v1=t,this.v2=r,this.v3=n},function(e){var t=Z.ShapeUtils.b3;return new Z.Vector3(t(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),t(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y),t(e,this.v0.z,this.v1.z,this.v2.z,this.v3.z))}),Z.SplineCurve3=Z.Curve.create(function(e){console.warn(\"THREE.SplineCurve3 will be deprecated. Please use THREE.CatmullRomCurve3\"),this.points=null==e?[]:e},function(e){var t=this.points,r=(t.length-1)*e,n=Math.floor(r),i=r-n,o=t[0==n?n:n-1],a=t[n],s=t[n>t.length-2?t.length-1:n+1],c=t[n>t.length-3?t.length-1:n+2],l=Z.CurveUtils.interpolate;return new Z.Vector3(l(o.x,a.x,s.x,c.x,i),l(o.y,a.y,s.y,c.y,i),l(o.z,a.z,s.z,c.z,i))}),Z.CatmullRomCurve3=function(){var e=new Z.Vector3,t=new i,r=new i,n=new i;function i(){}return i.prototype.init=function(e,t,r,n){this.c0=e,this.c1=r,this.c2=-3*e+3*t-2*r-n,this.c3=2*e-2*t+r+n},i.prototype.initNonuniformCatmullRom=function(e,t,r,n,i,o,a){var s=(t-e)/i-(r-e)/(i+o)+(r-t)/o,c=(r-t)/o-(n-t)/(o+a)+(n-r)/a;s*=o,c*=o,this.init(t,r,s,c)},i.prototype.initCatmullRom=function(e,t,r,n,i){this.init(t,r,i*(r-e),i*(n-t))},i.prototype.calc=function(e){var t=e*e,r=t*e;return this.c0+this.c1*e+this.c2*t+this.c3*r},Z.Curve.create(function(e){this.points=e||[],this.closed=!1},function(i){var o,a,s,c,l,u,h,d,p=this.points;if((c=p.length)<2&&console.log(\"duh, you need at least 2 points\"),s=(o=(c-(this.closed?0:1))*i)-(a=Math.floor(o)),this.closed?a+=a>0?0:(Math.floor(Math.abs(a)/p.length)+1)*p.length:0===s&&a===c-1&&(a=c-2,s=1),this.closed||a>0?l=p[(a-1)%c]:(e.subVectors(p[0],p[1]).add(p[0]),l=e),u=p[a%c],h=p[(a+1)%c],this.closed||a+2<c?d=p[(a+2)%c]:(e.subVectors(p[c-1],p[c-2]).add(p[c-1]),d=e),void 0===this.type||\"centripetal\"===this.type||\"chordal\"===this.type){var f=\"chordal\"===this.type?.5:.25,m=Math.pow(l.distanceToSquared(u),f),v=Math.pow(u.distanceToSquared(h),f),g=Math.pow(h.distanceToSquared(d),f);v<1e-4&&(v=1),m<1e-4&&(m=v),g<1e-4&&(g=v),t.initNonuniformCatmullRom(l.x,u.x,h.x,d.x,m,v,g),r.initNonuniformCatmullRom(l.y,u.y,h.y,d.y,m,v,g),n.initNonuniformCatmullRom(l.z,u.z,h.z,d.z,m,v,g)}else if(\"catmullrom\"===this.type){var y=void 0!==this.tension?this.tension:.5;t.initCatmullRom(l.x,u.x,h.x,d.x,y),r.initCatmullRom(l.y,u.y,h.y,d.y,y),n.initCatmullRom(l.z,u.z,h.z,d.z,y)}return new Z.Vector3(t.calc(s),r.calc(s),n.calc(s))})}(),Z.ClosedSplineCurve3=function(e){console.warn(\"THREE.ClosedSplineCurve3 has been deprecated. Please use THREE.CatmullRomCurve3.\"),Z.CatmullRomCurve3.call(this,e),this.type=\"catmullrom\",this.closed=!0},Z.ClosedSplineCurve3.prototype=Object.create(Z.CatmullRomCurve3.prototype),Z.BoxGeometry=function(e,t,r,n,i,o){Z.Geometry.call(this),this.type=\"BoxGeometry\",this.parameters={width:e,height:t,depth:r,widthSegments:n,heightSegments:i,depthSegments:o},this.fromBufferGeometry(new Z.BoxBufferGeometry(e,t,r,n,i,o)),this.mergeVertices()},Z.BoxGeometry.prototype=Object.create(Z.Geometry.prototype),Z.BoxGeometry.prototype.constructor=Z.BoxGeometry,Z.CubeGeometry=Z.BoxGeometry,Z.BoxBufferGeometry=function(e,t,r,n,i,o){Z.BufferGeometry.call(this),this.type=\"BoxBufferGeometry\",this.parameters={width:e,height:t,depth:r,widthSegments:n,heightSegments:i,depthSegments:o};var a,s,c,l,u=this,h=function(e,t,r){var n=0;return n+=(e+1)*(t+1)*2,n+=(e+1)*(r+1)*2,n+=(r+1)*(t+1)*2}(n=Math.floor(n)||1,i=Math.floor(i)||1,o=Math.floor(o)||1),d=(l=0,l+=(a=n)*(s=i)*2,l+=a*(c=o)*2,6*(l+=c*s*2)),p=new(d>65535?Uint32Array:Uint16Array)(d),f=new Float32Array(3*h),m=new Float32Array(3*h),v=new Float32Array(2*h),g=0,y=0,x=0,b=0,w=0;function _(e,t,r,n,i,o,a,s,c,l,h){for(var d=o/c,_=a/l,M=o/2,S=a/2,T=s/2,E=c+1,C=l+1,A=0,L=0,R=new Z.Vector3,P=0;P<C;P++)for(var D=P*_-S,U=0;U<E;U++){var I=U*d-M;R[e]=I*n,R[t]=D*i,R[r]=T,f[g]=R.x,f[g+1]=R.y,f[g+2]=R.z,R[e]=0,R[t]=0,R[r]=s>0?1:-1,m[g]=R.x,m[g+1]=R.y,m[g+2]=R.z,v[y]=U/c,v[y+1]=1-P/l,g+=3,y+=2,A+=1}for(P=0;P<l;P++)for(U=0;U<c;U++){var F=b+U+E*P,N=b+U+E*(P+1),B=b+(U+1)+E*(P+1),O=b+(U+1)+E*P;p[x]=F,p[x+1]=N,p[x+2]=O,p[x+3]=N,p[x+4]=B,p[x+5]=O,x+=6,L+=6}u.addGroup(w,L,h),w+=L,b+=A}_(\"z\",\"y\",\"x\",-1,-1,r,t,e,o,i,0),_(\"z\",\"y\",\"x\",1,-1,r,t,-e,o,i,1),_(\"x\",\"z\",\"y\",1,1,e,r,t,n,o,2),_(\"x\",\"z\",\"y\",1,-1,e,r,-t,n,o,3),_(\"x\",\"y\",\"z\",1,-1,e,t,r,n,i,4),_(\"x\",\"y\",\"z\",-1,-1,e,t,-r,n,i,5),this.setIndex(new Z.BufferAttribute(p,1)),this.addAttribute(\"position\",new Z.BufferAttribute(f,3)),this.addAttribute(\"normal\",new Z.BufferAttribute(m,3)),this.addAttribute(\"uv\",new Z.BufferAttribute(v,2))},Z.BoxBufferGeometry.prototype=Object.create(Z.BufferGeometry.prototype),Z.BoxBufferGeometry.prototype.constructor=Z.BoxBufferGeometry,Z.CircleGeometry=function(e,t,r,n){Z.Geometry.call(this),this.type=\"CircleGeometry\",this.parameters={radius:e,segments:t,thetaStart:r,thetaLength:n},this.fromBufferGeometry(new Z.CircleBufferGeometry(e,t,r,n))},Z.CircleGeometry.prototype=Object.create(Z.Geometry.prototype),Z.CircleGeometry.prototype.constructor=Z.CircleGeometry,Z.CircleBufferGeometry=function(e,t,r,n){Z.BufferGeometry.call(this),this.type=\"CircleBufferGeometry\",this.parameters={radius:e,segments:t,thetaStart:r,thetaLength:n},e=e||50,t=void 0!==t?Math.max(3,t):8,r=void 0!==r?r:0,n=void 0!==n?n:2*Math.PI;var i=t+2,o=new Float32Array(3*i),a=new Float32Array(3*i),s=new Float32Array(2*i);a[2]=1,s[0]=.5,s[1]=.5;for(var c=0,l=3,u=2;c<=t;c++,l+=3,u+=2){var h=r+c/t*n;o[l]=e*Math.cos(h),o[l+1]=e*Math.sin(h),a[l+2]=1,s[u]=(o[l]/e+1)/2,s[u+1]=(o[l+1]/e+1)/2}var d=[];for(l=1;l<=t;l++)d.push(l,l+1,0);this.setIndex(new Z.BufferAttribute(new Uint16Array(d),1)),this.addAttribute(\"position\",new Z.BufferAttribute(o,3)),this.addAttribute(\"normal\",new Z.BufferAttribute(a,3)),this.addAttribute(\"uv\",new Z.BufferAttribute(s,2)),this.boundingSphere=new Z.Sphere(new Z.Vector3,e)},Z.CircleBufferGeometry.prototype=Object.create(Z.BufferGeometry.prototype),Z.CircleBufferGeometry.prototype.constructor=Z.CircleBufferGeometry,Z.CylinderBufferGeometry=function(e,t,r,n,i,o,a,s){Z.BufferGeometry.call(this),this.type=\"CylinderBufferGeometry\",this.parameters={radiusTop:e,radiusBottom:t,height:r,radialSegments:n,heightSegments:i,openEnded:o,thetaStart:a,thetaLength:s};var c=this;e=void 0!==e?e:20,t=void 0!==t?t:20,r=void 0!==r?r:100,n=Math.floor(n)||8,i=Math.floor(i)||1,o=void 0!==o&&o,a=void 0!==a?a:0,s=void 0!==s?s:2*Math.PI;var l=0;!1===o&&(e>0&&l++,t>0&&l++);var u=function(){var e=(n+1)*(i+1);!1===o&&(e+=(n+1)*l+n*l);return e}(),h=function(){var e=n*i*2*3;!1===o&&(e+=n*l*3);return e}(),d=new Z.BufferAttribute(new(h>65535?Uint32Array:Uint16Array)(h),1),p=new Z.BufferAttribute(new Float32Array(3*u),3),f=new Z.BufferAttribute(new Float32Array(3*u),3),m=new Z.BufferAttribute(new Float32Array(2*u),2),v=0,g=0,y=[],x=r/2,b=0;function w(r){var i,o,l,u=new Z.Vector2,h=new Z.Vector3,y=0,w=!0===r?e:t,_=!0===r?1:-1;for(o=v,i=1;i<=n;i++)p.setXYZ(v,0,x*_,0),f.setXYZ(v,0,_,0),u.x=.5,u.y=.5,m.setXY(v,u.x,u.y),v++;for(l=v,i=0;i<=n;i++){var M=i/n*s+a,S=Math.cos(M),T=Math.sin(M);h.x=w*T,h.y=x*_,h.z=w*S,p.setXYZ(v,h.x,h.y,h.z),f.setXYZ(v,0,_,0),u.x=.5*S+.5,u.y=.5*T*_+.5,m.setXY(v,u.x,u.y),v++}for(i=0;i<n;i++){var E=o+i,C=l+i;!0===r?(d.setX(g,C),g++,d.setX(g,C+1),g++,d.setX(g,E),g++):(d.setX(g,C+1),g++,d.setX(g,C),g++,d.setX(g,E),g++),y+=3}c.addGroup(b,y,!0===r?1:2),b+=y}!function(){var o,l,u=new Z.Vector3,h=new Z.Vector3,w=0,_=(t-e)/r;for(l=0;l<=i;l++){var M=[],S=l/i,T=S*(t-e)+e;for(o=0;o<=n;o++){var E=o/n;h.x=T*Math.sin(E*s+a),h.y=-S*r+x,h.z=T*Math.cos(E*s+a),p.setXYZ(v,h.x,h.y,h.z),u.copy(h),(0===e&&0===l||0===t&&l===i)&&(u.x=Math.sin(E*s+a),u.z=Math.cos(E*s+a)),u.setY(Math.sqrt(u.x*u.x+u.z*u.z)*_).normalize(),f.setXYZ(v,u.x,u.y,u.z),m.setXY(v,E,1-S),M.push(v),v++}y.push(M)}for(o=0;o<n;o++)for(l=0;l<i;l++){var C=y[l][o],A=y[l+1][o],L=y[l+1][o+1],R=y[l][o+1];d.setX(g,C),g++,d.setX(g,A),g++,d.setX(g,R),g++,d.setX(g,A),g++,d.setX(g,L),g++,d.setX(g,R),g++,w+=6}c.addGroup(b,w,0),b+=w}(),!1===o&&(e>0&&w(!0),t>0&&w(!1)),this.setIndex(d),this.addAttribute(\"position\",p),this.addAttribute(\"normal\",f),this.addAttribute(\"uv\",m)},Z.CylinderBufferGeometry.prototype=Object.create(Z.BufferGeometry.prototype),Z.CylinderBufferGeometry.prototype.constructor=Z.CylinderBufferGeometry,Z.CylinderGeometry=function(e,t,r,n,i,o,a,s){Z.Geometry.call(this),this.type=\"CylinderGeometry\",this.parameters={radiusTop:e,radiusBottom:t,height:r,radialSegments:n,heightSegments:i,openEnded:o,thetaStart:a,thetaLength:s},this.fromBufferGeometry(new Z.CylinderBufferGeometry(e,t,r,n,i,o,a,s)),this.mergeVertices()},Z.CylinderGeometry.prototype=Object.create(Z.Geometry.prototype),Z.CylinderGeometry.prototype.constructor=Z.CylinderGeometry,Z.ConeBufferGeometry=function(e,t,r,n,i,o,a){Z.CylinderBufferGeometry.call(this,0,e,t,r,n,i,o,a),this.type=\"ConeBufferGeometry\",this.parameters={radius:e,height:t,radialSegments:r,heightSegments:n,thetaStart:o,thetaLength:a}},Z.ConeBufferGeometry.prototype=Object.create(Z.BufferGeometry.prototype),Z.ConeBufferGeometry.prototype.constructor=Z.ConeBufferGeometry,Z.ConeGeometry=function(e,t,r,n,i,o,a){Z.CylinderGeometry.call(this,0,e,t,r,n,i,o,a),this.type=\"ConeGeometry\",this.parameters={radius:e,height:t,radialSegments:r,heightSegments:n,openEnded:i,thetaStart:o,thetaLength:a}},Z.ConeGeometry.prototype=Object.create(Z.CylinderGeometry.prototype),Z.ConeGeometry.prototype.constructor=Z.ConeGeometry,Z.EdgesGeometry=function(e,t){Z.BufferGeometry.call(this),t=void 0!==t?t:1;var r=Math.cos(Z.Math.DEG2RAD*t),n=[0,0],i={};function o(e,t){return e-t}var a,s=[\"a\",\"b\",\"c\"];e instanceof Z.BufferGeometry?(a=new Z.Geometry).fromBufferGeometry(e):a=e.clone(),a.mergeVertices(),a.computeFaceNormals();for(var c=a.vertices,l=a.faces,u=0,h=l.length;u<h;u++)for(var d=l[u],p=0;p<3;p++){n[0]=d[s[p]],n[1]=d[s[(p+1)%3]],n.sort(o),void 0===i[m=n.toString()]?i[m]={vert1:n[0],vert2:n[1],face1:u,face2:void 0}:i[m].face2=u}var f=[];for(var m in i){var v=i[m];if(void 0===v.face2||l[v.face1].normal.dot(l[v.face2].normal)<=r){var g=c[v.vert1];f.push(g.x),f.push(g.y),f.push(g.z),g=c[v.vert2],f.push(g.x),f.push(g.y),f.push(g.z)}}this.addAttribute(\"position\",new Z.BufferAttribute(new Float32Array(f),3))},Z.EdgesGeometry.prototype=Object.create(Z.BufferGeometry.prototype),Z.EdgesGeometry.prototype.constructor=Z.EdgesGeometry,Z.ExtrudeGeometry=function(e,t){void 0!==e?(Z.Geometry.call(this),this.type=\"ExtrudeGeometry\",e=Array.isArray(e)?e:[e],this.addShapeList(e,t),this.computeFaceNormals()):e=[]},Z.ExtrudeGeometry.prototype=Object.create(Z.Geometry.prototype),Z.ExtrudeGeometry.prototype.constructor=Z.ExtrudeGeometry,Z.ExtrudeGeometry.prototype.addShapeList=function(e,t){for(var r=e.length,n=0;n<r;n++){var i=e[n];this.addShape(i,t)}},Z.ExtrudeGeometry.prototype.addShape=function(e,t){var r,n,i,o,a,s,c,l,u=void 0!==t.amount?t.amount:100,h=void 0!==t.bevelThickness?t.bevelThickness:6,d=void 0!==t.bevelSize?t.bevelSize:h-2,p=void 0!==t.bevelSegments?t.bevelSegments:3,f=void 0===t.bevelEnabled||t.bevelEnabled,m=void 0!==t.curveSegments?t.curveSegments:12,v=void 0!==t.steps?t.steps:1,g=t.extrudePath,y=!1,x=void 0!==t.UVGenerator?t.UVGenerator:Z.ExtrudeGeometry.WorldUVGenerator;g&&(r=g.getSpacedPoints(v),y=!0,f=!1,n=void 0!==t.frames?t.frames:new Z.TubeGeometry.FrenetFrames(g,v,!1),i=new Z.Vector3,o=new Z.Vector3,a=new Z.Vector3),f||(p=0,h=0,d=0);var b=this,w=this.vertices.length,_=e.extractPoints(m),M=_.shape,S=_.holes,T=!Z.ShapeUtils.isClockWise(M);if(T){for(M=M.reverse(),c=0,l=S.length;c<l;c++)s=S[c],Z.ShapeUtils.isClockWise(s)&&(S[c]=s.reverse());T=!1}var E=Z.ShapeUtils.triangulateShape(M,S),C=M;for(c=0,l=S.length;c<l;c++)s=S[c],M=M.concat(s);function A(e,t,r){return t||console.error(\"THREE.ExtrudeGeometry: vec does not exist\"),t.clone().multiplyScalar(r).add(e)}var L,R,P,D,U,I,F=M.length,N=E.length;function B(e,t,r){var n,i,o=1,a=e.x-t.x,s=e.y-t.y,c=r.x-e.x,l=r.y-e.y,u=a*a+s*s,h=a*l-s*c;if(Math.abs(h)>Number.EPSILON){var d=Math.sqrt(u),p=Math.sqrt(c*c+l*l),f=t.x-s/d,m=t.y+a/d,v=((r.x-l/p-f)*l-(r.y+c/p-m)*c)/(a*l-s*c),g=(n=f+a*v-e.x)*n+(i=m+s*v-e.y)*i;if(g<=2)return new Z.Vector2(n,i);o=Math.sqrt(g/2)}else{var y=!1;a>Number.EPSILON?c>Number.EPSILON&&(y=!0):a<-Number.EPSILON?c<-Number.EPSILON&&(y=!0):Math.sign(s)===Math.sign(l)&&(y=!0),y?(n=-s,i=a,o=Math.sqrt(u)):(n=a,i=s,o=Math.sqrt(u/2))}return new Z.Vector2(n/o,i/o)}for(var O=[],V=0,G=C.length,z=G-1,k=V+1;V<G;V++,z++,k++)z===G&&(z=0),k===G&&(k=0),O[V]=B(C[V],C[z],C[k]);var j,H,W=[],X=O.concat();for(c=0,l=S.length;c<l;c++){for(s=S[c],j=[],V=0,z=(G=s.length)-1,k=V+1;V<G;V++,z++,k++)z===G&&(z=0),k===G&&(k=0),j[V]=B(s[V],s[z],s[k]);W.push(j),X=X.concat(j)}for(L=0;L<p;L++){for(D=h*(1-(P=L/p)),R=d*Math.sin(P*Math.PI/2),V=0,G=C.length;V<G;V++)Y((U=A(C[V],O[V],R)).x,U.y,-D);for(c=0,l=S.length;c<l;c++)for(s=S[c],j=W[c],V=0,G=s.length;V<G;V++)Y((U=A(s[V],j[V],R)).x,U.y,-D)}for(R=d,V=0;V<F;V++)U=f?A(M[V],X[V],R):M[V],y?(o.copy(n.normals[0]).multiplyScalar(U.x),i.copy(n.binormals[0]).multiplyScalar(U.y),a.copy(r[0]).add(o).add(i),Y(a.x,a.y,a.z)):Y(U.x,U.y,0);for(H=1;H<=v;H++)for(V=0;V<F;V++)U=f?A(M[V],X[V],R):M[V],y?(o.copy(n.normals[H]).multiplyScalar(U.x),i.copy(n.binormals[H]).multiplyScalar(U.y),a.copy(r[H]).add(o).add(i),Y(a.x,a.y,a.z)):Y(U.x,U.y,u/v*H);for(L=p-1;L>=0;L--){for(D=h*(1-(P=L/p)),R=d*Math.sin(P*Math.PI/2),V=0,G=C.length;V<G;V++)Y((U=A(C[V],O[V],R)).x,U.y,u+D);for(c=0,l=S.length;c<l;c++)for(s=S[c],j=W[c],V=0,G=s.length;V<G;V++)U=A(s[V],j[V],R),y?Y(U.x,U.y+r[v-1].y,r[v-1].x+D):Y(U.x,U.y,u+D)}function q(e,t){var r,n;for(V=e.length;--V>=0;){r=V,(n=V-1)<0&&(n=e.length-1);var i=0,o=v+2*p;for(i=0;i<o;i++){var a=F*i,s=F*(i+1);Q(t+r+a,t+n+a,t+n+s,t+r+s,e,i,o,r,n)}}}function Y(e,t,r){b.vertices.push(new Z.Vector3(e,t,r))}function K(e,t,r){e+=w,t+=w,r+=w,b.faces.push(new Z.Face3(e,t,r,null,null,0));var n=x.generateTopUV(b,e,t,r);b.faceVertexUvs[0].push(n)}function Q(e,t,r,n,i,o,a,s,c){e+=w,t+=w,r+=w,n+=w,b.faces.push(new Z.Face3(e,t,n,null,null,1)),b.faces.push(new Z.Face3(t,r,n,null,null,1));var l=x.generateSideWallUV(b,e,t,r,n);b.faceVertexUvs[0].push([l[0],l[1],l[3]]),b.faceVertexUvs[0].push([l[1],l[2],l[3]])}!function(){if(f){var e=0,t=F*e;for(V=0;V<N;V++)K((I=E[V])[2]+t,I[1]+t,I[0]+t);for(t=F*(e=v+2*p),V=0;V<N;V++)K((I=E[V])[0]+t,I[1]+t,I[2]+t)}else{for(V=0;V<N;V++)K((I=E[V])[2],I[1],I[0]);for(V=0;V<N;V++)K((I=E[V])[0]+F*v,I[1]+F*v,I[2]+F*v)}}(),function(){var e=0;for(q(C,e),e+=C.length,c=0,l=S.length;c<l;c++)q(s=S[c],e),e+=s.length}()},Z.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(e,t,r,n){var i=e.vertices,o=i[t],a=i[r],s=i[n];return[new Z.Vector2(o.x,o.y),new Z.Vector2(a.x,a.y),new Z.Vector2(s.x,s.y)]},generateSideWallUV:function(e,t,r,n,i){var o=e.vertices,a=o[t],s=o[r],c=o[n],l=o[i];return Math.abs(a.y-s.y)<.01?[new Z.Vector2(a.x,1-a.z),new Z.Vector2(s.x,1-s.z),new Z.Vector2(c.x,1-c.z),new Z.Vector2(l.x,1-l.z)]:[new Z.Vector2(a.y,1-a.z),new Z.Vector2(s.y,1-s.z),new Z.Vector2(c.y,1-c.z),new Z.Vector2(l.y,1-l.z)]}},Z.ShapeGeometry=function(e,t){Z.Geometry.call(this),this.type=\"ShapeGeometry\",!1===Array.isArray(e)&&(e=[e]),this.addShapeList(e,t),this.computeFaceNormals()},Z.ShapeGeometry.prototype=Object.create(Z.Geometry.prototype),Z.ShapeGeometry.prototype.constructor=Z.ShapeGeometry,Z.ShapeGeometry.prototype.addShapeList=function(e,t){for(var r=0,n=e.length;r<n;r++)this.addShape(e[r],t);return this},Z.ShapeGeometry.prototype.addShape=function(e,t){void 0===t&&(t={});var r,n,i,o=void 0!==t.curveSegments?t.curveSegments:12,a=t.material,s=void 0===t.UVGenerator?Z.ExtrudeGeometry.WorldUVGenerator:t.UVGenerator,c=this.vertices.length,l=e.extractPoints(o),u=l.shape,h=l.holes,d=!Z.ShapeUtils.isClockWise(u);if(d){for(u=u.reverse(),r=0,n=h.length;r<n;r++)i=h[r],Z.ShapeUtils.isClockWise(i)&&(h[r]=i.reverse());d=!1}var p=Z.ShapeUtils.triangulateShape(u,h);for(r=0,n=h.length;r<n;r++)i=h[r],u=u.concat(i);var f,m,v=u.length,g=p.length;for(r=0;r<v;r++)f=u[r],this.vertices.push(new Z.Vector3(f.x,f.y,0));for(r=0;r<g;r++){var y=(m=p[r])[0]+c,x=m[1]+c,b=m[2]+c;this.faces.push(new Z.Face3(y,x,b,null,null,a)),this.faceVertexUvs[0].push(s.generateTopUV(this,y,x,b))}},Z.LatheBufferGeometry=function(e,t,r,n){Z.BufferGeometry.call(this),this.type=\"LatheBufferGeometry\",this.parameters={points:e,segments:t,phiStart:r,phiLength:n},t=Math.floor(t)||12,r=r||0,n=n||2*Math.PI,n=Z.Math.clamp(n,0,2*Math.PI);var i,o,a,s=(t+1)*e.length,c=t*e.length*2*3,l=new Z.BufferAttribute(new(c>65535?Uint32Array:Uint16Array)(c),1),u=new Z.BufferAttribute(new Float32Array(3*s),3),h=new Z.BufferAttribute(new Float32Array(2*s),2),d=0,p=0,f=(e.length,1/t),m=new Z.Vector3,v=new Z.Vector2;for(o=0;o<=t;o++){var g=r+o*f*n,y=Math.sin(g),x=Math.cos(g);for(a=0;a<=e.length-1;a++)m.x=e[a].x*y,m.y=e[a].y,m.z=e[a].x*x,u.setXYZ(d,m.x,m.y,m.z),v.x=o/t,v.y=a/(e.length-1),h.setXY(d,v.x,v.y),d++}for(o=0;o<t;o++)for(a=0;a<e.length-1;a++){var b=i=a+o*e.length,w=i+e.length,_=i+e.length+1,M=i+1;l.setX(p,b),p++,l.setX(p,w),p++,l.setX(p,M),p++,l.setX(p,w),p++,l.setX(p,_),p++,l.setX(p,M),p++}if(this.setIndex(l),this.addAttribute(\"position\",u),this.addAttribute(\"uv\",h),this.computeVertexNormals(),n===2*Math.PI){var S=this.attributes.normal.array,T=new Z.Vector3,E=new Z.Vector3,C=new Z.Vector3;for(i=t*e.length*3,o=0,a=0;o<e.length;o++,a+=3)T.x=S[a+0],T.y=S[a+1],T.z=S[a+2],E.x=S[i+a+0],E.y=S[i+a+1],E.z=S[i+a+2],C.addVectors(T,E).normalize(),S[a+0]=S[i+a+0]=C.x,S[a+1]=S[i+a+1]=C.y,S[a+2]=S[i+a+2]=C.z}},Z.LatheBufferGeometry.prototype=Object.create(Z.BufferGeometry.prototype),Z.LatheBufferGeometry.prototype.constructor=Z.LatheBufferGeometry,Z.LatheGeometry=function(e,t,r,n){Z.Geometry.call(this),this.type=\"LatheGeometry\",this.parameters={points:e,segments:t,phiStart:r,phiLength:n},this.fromBufferGeometry(new Z.LatheBufferGeometry(e,t,r,n)),this.mergeVertices()},Z.LatheGeometry.prototype=Object.create(Z.Geometry.prototype),Z.LatheGeometry.prototype.constructor=Z.LatheGeometry,Z.PlaneGeometry=function(e,t,r,n){Z.Geometry.call(this),this.type=\"PlaneGeometry\",this.parameters={width:e,height:t,widthSegments:r,heightSegments:n},this.fromBufferGeometry(new Z.PlaneBufferGeometry(e,t,r,n))},Z.PlaneGeometry.prototype=Object.create(Z.Geometry.prototype),Z.PlaneGeometry.prototype.constructor=Z.PlaneGeometry,Z.PlaneBufferGeometry=function(e,t,r,n){Z.BufferGeometry.call(this),this.type=\"PlaneBufferGeometry\",this.parameters={width:e,height:t,widthSegments:r,heightSegments:n};for(var i=e/2,o=t/2,a=Math.floor(r)||1,s=Math.floor(n)||1,c=a+1,l=s+1,u=e/a,h=t/s,d=new Float32Array(c*l*3),p=new Float32Array(c*l*3),f=new Float32Array(c*l*2),m=0,v=0,g=0;g<l;g++)for(var y=g*h-o,x=0;x<c;x++){var b=x*u-i;d[m]=b,d[m+1]=-y,p[m+2]=1,f[v]=x/a,f[v+1]=1-g/s,m+=3,v+=2}m=0;var w=new(d.length/3>65535?Uint32Array:Uint16Array)(a*s*6);for(g=0;g<s;g++)for(x=0;x<a;x++){var _=x+c*g,M=x+c*(g+1),S=x+1+c*(g+1),T=x+1+c*g;w[m]=_,w[m+1]=M,w[m+2]=T,w[m+3]=M,w[m+4]=S,w[m+5]=T,m+=6}this.setIndex(new Z.BufferAttribute(w,1)),this.addAttribute(\"position\",new Z.BufferAttribute(d,3)),this.addAttribute(\"normal\",new Z.BufferAttribute(p,3)),this.addAttribute(\"uv\",new Z.BufferAttribute(f,2))},Z.PlaneBufferGeometry.prototype=Object.create(Z.BufferGeometry.prototype),Z.PlaneBufferGeometry.prototype.constructor=Z.PlaneBufferGeometry,Z.RingBufferGeometry=function(e,t,r,n,i,o){Z.BufferGeometry.call(this),this.type=\"RingBufferGeometry\",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:r,phiSegments:n,thetaStart:i,thetaLength:o},e=e||20,t=t||50,i=void 0!==i?i:0,o=void 0!==o?o:2*Math.PI;var a,s,c,l=((r=void 0!==r?Math.max(3,r):8)+1)*((n=void 0!==n?Math.max(1,n):1)+1),u=r*n*2*3,h=new Z.BufferAttribute(new(u>65535?Uint32Array:Uint16Array)(u),1),d=new Z.BufferAttribute(new Float32Array(3*l),3),p=new Z.BufferAttribute(new Float32Array(3*l),3),f=new Z.BufferAttribute(new Float32Array(2*l),2),m=0,v=0,g=e,y=(t-e)/n,x=new Z.Vector3,b=new Z.Vector2;for(s=0;s<=n;s++){for(c=0;c<=r;c++)a=i+c/r*o,x.x=g*Math.cos(a),x.y=g*Math.sin(a),d.setXYZ(m,x.x,x.y,x.z),p.setXYZ(m,0,0,1),b.x=(x.x/t+1)/2,b.y=(x.y/t+1)/2,f.setXY(m,b.x,b.y),m++;g+=y}for(s=0;s<n;s++){var w=s*(r+1);for(c=0;c<r;c++){var _=a=c+w,M=a+r+1,S=a+r+2,T=a+1;h.setX(v,_),v++,h.setX(v,M),v++,h.setX(v,S),v++,h.setX(v,_),v++,h.setX(v,S),v++,h.setX(v,T),v++}}this.setIndex(h),this.addAttribute(\"position\",d),this.addAttribute(\"normal\",p),this.addAttribute(\"uv\",f)},Z.RingBufferGeometry.prototype=Object.create(Z.BufferGeometry.prototype),Z.RingBufferGeometry.prototype.constructor=Z.RingBufferGeometry,Z.RingGeometry=function(e,t,r,n,i,o){Z.Geometry.call(this),this.type=\"RingGeometry\",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:r,phiSegments:n,thetaStart:i,thetaLength:o},this.fromBufferGeometry(new Z.RingBufferGeometry(e,t,r,n,i,o))},Z.RingGeometry.prototype=Object.create(Z.Geometry.prototype),Z.RingGeometry.prototype.constructor=Z.RingGeometry,Z.SphereGeometry=function(e,t,r,n,i,o,a){Z.Geometry.call(this),this.type=\"SphereGeometry\",this.parameters={radius:e,widthSegments:t,heightSegments:r,phiStart:n,phiLength:i,thetaStart:o,thetaLength:a},this.fromBufferGeometry(new Z.SphereBufferGeometry(e,t,r,n,i,o,a))},Z.SphereGeometry.prototype=Object.create(Z.Geometry.prototype),Z.SphereGeometry.prototype.constructor=Z.SphereGeometry,Z.SphereBufferGeometry=function(e,t,r,n,i,o,a){Z.BufferGeometry.call(this),this.type=\"SphereBufferGeometry\",this.parameters={radius:e,widthSegments:t,heightSegments:r,phiStart:n,phiLength:i,thetaStart:o,thetaLength:a},e=e||50,t=Math.max(3,Math.floor(t)||8),r=Math.max(2,Math.floor(r)||6),n=void 0!==n?n:0,i=void 0!==i?i:2*Math.PI;for(var s=(o=void 0!==o?o:0)+(a=void 0!==a?a:Math.PI),c=(t+1)*(r+1),l=new Z.BufferAttribute(new Float32Array(3*c),3),u=new Z.BufferAttribute(new Float32Array(3*c),3),h=new Z.BufferAttribute(new Float32Array(2*c),2),d=0,p=[],f=new Z.Vector3,m=0;m<=r;m++){for(var v=[],g=m/r,y=0;y<=t;y++){var x=y/t,b=-e*Math.cos(n+x*i)*Math.sin(o+g*a),w=e*Math.cos(o+g*a),_=e*Math.sin(n+x*i)*Math.sin(o+g*a);f.set(b,w,_).normalize(),l.setXYZ(d,b,w,_),u.setXYZ(d,f.x,f.y,f.z),h.setXY(d,x,1-g),v.push(d),d++}p.push(v)}var M=[];for(m=0;m<r;m++)for(y=0;y<t;y++){var S=p[m][y+1],T=p[m][y],E=p[m+1][y],C=p[m+1][y+1];(0!==m||o>0)&&M.push(S,T,C),(m!==r-1||s<Math.PI)&&M.push(T,E,C)}this.setIndex(new(l.count>65535?Z.Uint32Attribute:Z.Uint16Attribute)(M,1)),this.addAttribute(\"position\",l),this.addAttribute(\"normal\",u),this.addAttribute(\"uv\",h),this.boundingSphere=new Z.Sphere(new Z.Vector3,e)},Z.SphereBufferGeometry.prototype=Object.create(Z.BufferGeometry.prototype),Z.SphereBufferGeometry.prototype.constructor=Z.SphereBufferGeometry,Z.TextGeometry=function(e,t){var r=(t=t||{}).font;if(r instanceof Z.Font==!1)return console.error(\"THREE.TextGeometry: font parameter is not an instance of THREE.Font.\"),new Z.Geometry;var n=r.generateShapes(e,t.size,t.curveSegments);t.amount=void 0!==t.height?t.height:50,void 0===t.bevelThickness&&(t.bevelThickness=10),void 0===t.bevelSize&&(t.bevelSize=8),void 0===t.bevelEnabled&&(t.bevelEnabled=!1),Z.ExtrudeGeometry.call(this,n,t),this.type=\"TextGeometry\"},Z.TextGeometry.prototype=Object.create(Z.ExtrudeGeometry.prototype),Z.TextGeometry.prototype.constructor=Z.TextGeometry,Z.TorusBufferGeometry=function(e,t,r,n,i){Z.BufferGeometry.call(this),this.type=\"TorusBufferGeometry\",this.parameters={radius:e,tube:t,radialSegments:r,tubularSegments:n,arc:i},e=e||100,t=t||40,r=Math.floor(r)||8,n=Math.floor(n)||6,i=i||2*Math.PI;var o,a,s=(r+1)*(n+1),c=r*n*2*3,l=new(c>65535?Uint32Array:Uint16Array)(c),u=new Float32Array(3*s),h=new Float32Array(3*s),d=new Float32Array(2*s),p=0,f=0,m=0,v=new Z.Vector3,g=new Z.Vector3,y=new Z.Vector3;for(o=0;o<=r;o++)for(a=0;a<=n;a++){var x=a/n*i,b=o/r*Math.PI*2;g.x=(e+t*Math.cos(b))*Math.cos(x),g.y=(e+t*Math.cos(b))*Math.sin(x),g.z=t*Math.sin(b),u[p]=g.x,u[p+1]=g.y,u[p+2]=g.z,v.x=e*Math.cos(x),v.y=e*Math.sin(x),y.subVectors(g,v).normalize(),h[p]=y.x,h[p+1]=y.y,h[p+2]=y.z,d[f]=a/n,d[f+1]=o/r,p+=3,f+=2}for(o=1;o<=r;o++)for(a=1;a<=n;a++){var w=(n+1)*o+a-1,_=(n+1)*(o-1)+a-1,M=(n+1)*(o-1)+a,S=(n+1)*o+a;l[m]=w,l[m+1]=_,l[m+2]=S,l[m+3]=_,l[m+4]=M,l[m+5]=S,m+=6}this.setIndex(new Z.BufferAttribute(l,1)),this.addAttribute(\"position\",new Z.BufferAttribute(u,3)),this.addAttribute(\"normal\",new Z.BufferAttribute(h,3)),this.addAttribute(\"uv\",new Z.BufferAttribute(d,2))},Z.TorusBufferGeometry.prototype=Object.create(Z.BufferGeometry.prototype),Z.TorusBufferGeometry.prototype.constructor=Z.TorusBufferGeometry,Z.TorusGeometry=function(e,t,r,n,i){Z.Geometry.call(this),this.type=\"TorusGeometry\",this.parameters={radius:e,tube:t,radialSegments:r,tubularSegments:n,arc:i},this.fromBufferGeometry(new Z.TorusBufferGeometry(e,t,r,n,i))},Z.TorusGeometry.prototype=Object.create(Z.Geometry.prototype),Z.TorusGeometry.prototype.constructor=Z.TorusGeometry,Z.TorusKnotBufferGeometry=function(e,t,r,n,i,o){Z.BufferGeometry.call(this),this.type=\"TorusKnotBufferGeometry\",this.parameters={radius:e,tube:t,tubularSegments:r,radialSegments:n,p:i,q:o},e=e||100,t=t||40,r=Math.floor(r)||64,i=i||2,o=o||3;var a,s,c=((n=Math.floor(n)||8)+1)*(r+1),l=n*r*2*3,u=new Z.BufferAttribute(new(l>65535?Uint32Array:Uint16Array)(l),1),h=new Z.BufferAttribute(new Float32Array(3*c),3),d=new Z.BufferAttribute(new Float32Array(3*c),3),p=new Z.BufferAttribute(new Float32Array(2*c),2),f=0,m=0,v=new Z.Vector3,g=new Z.Vector3,y=new Z.Vector2,x=new Z.Vector3,b=new Z.Vector3,w=new Z.Vector3,_=new Z.Vector3,M=new Z.Vector3;for(a=0;a<=r;++a){var S=a/r*i*Math.PI*2;for(D(S,i,o,e,x),D(S+.01,i,o,e,b),_.subVectors(b,x),M.addVectors(b,x),w.crossVectors(_,M),M.crossVectors(w,_),w.normalize(),M.normalize(),s=0;s<=n;++s){var T=s/n*Math.PI*2,E=-t*Math.cos(T),C=t*Math.sin(T);v.x=x.x+(E*M.x+C*w.x),v.y=x.y+(E*M.y+C*w.y),v.z=x.z+(E*M.z+C*w.z),h.setXYZ(f,v.x,v.y,v.z),g.subVectors(v,x).normalize(),d.setXYZ(f,g.x,g.y,g.z),y.x=a/r,y.y=s/n,p.setXY(f,y.x,y.y),f++}}for(s=1;s<=r;s++)for(a=1;a<=n;a++){var A=(n+1)*(s-1)+(a-1),L=(n+1)*s+(a-1),R=(n+1)*s+a,P=(n+1)*(s-1)+a;u.setX(m,A),m++,u.setX(m,L),m++,u.setX(m,P),m++,u.setX(m,L),m++,u.setX(m,R),m++,u.setX(m,P),m++}function D(e,t,r,n,i){var o=Math.cos(e),a=Math.sin(e),s=r/t*e,c=Math.cos(s);i.x=n*(2+c)*.5*o,i.y=n*(2+c)*a*.5,i.z=n*Math.sin(s)*.5}this.setIndex(u),this.addAttribute(\"position\",h),this.addAttribute(\"normal\",d),this.addAttribute(\"uv\",p)},Z.TorusKnotBufferGeometry.prototype=Object.create(Z.BufferGeometry.prototype),Z.TorusKnotBufferGeometry.prototype.constructor=Z.TorusKnotBufferGeometry,Z.TorusKnotGeometry=function(e,t,r,n,i,o,a){Z.Geometry.call(this),this.type=\"TorusKnotGeometry\",this.parameters={radius:e,tube:t,tubularSegments:r,radialSegments:n,p:i,q:o},void 0!==a&&console.warn(\"THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.\"),this.fromBufferGeometry(new Z.TorusKnotBufferGeometry(e,t,r,n,i,o)),this.mergeVertices()},Z.TorusKnotGeometry.prototype=Object.create(Z.Geometry.prototype),Z.TorusKnotGeometry.prototype.constructor=Z.TorusKnotGeometry,Z.TubeGeometry=function(e,t,r,n,i,o){Z.Geometry.call(this),this.type=\"TubeGeometry\",this.parameters={path:e,segments:t,radius:r,radialSegments:n,closed:i,taper:o},t=t||64,r=r||1,n=n||8,i=i||!1,o=o||Z.TubeGeometry.NoTaper;var a,s,c,l,u,h,d,p,f,m,v,g,y,x,b,w,_,M,S,T,E=[],C=this,A=t+1,L=new Z.Vector3,R=new Z.TubeGeometry.FrenetFrames(e,t,i),P=R.tangents,D=R.normals,U=R.binormals;function I(e,t,r){return C.vertices.push(new Z.Vector3(e,t,r))-1}for(this.tangents=P,this.normals=D,this.binormals=U,f=0;f<A;f++)for(E[f]=[],c=f/(A-1),p=e.getPointAt(c),P[f],a=D[f],s=U[f],u=r*o(c),m=0;m<n;m++)l=m/n*2*Math.PI,h=-u*Math.cos(l),d=u*Math.sin(l),L.copy(p),L.x+=h*a.x+d*s.x,L.y+=h*a.y+d*s.y,L.z+=h*a.z+d*s.z,E[f][m]=I(L.x,L.y,L.z);for(f=0;f<t;f++)for(m=0;m<n;m++)v=i?(f+1)%t:f+1,g=(m+1)%n,y=E[f][m],x=E[v][m],b=E[v][g],w=E[f][g],_=new Z.Vector2(f/t,m/n),M=new Z.Vector2((f+1)/t,m/n),S=new Z.Vector2((f+1)/t,(m+1)/n),T=new Z.Vector2(f/t,(m+1)/n),this.faces.push(new Z.Face3(y,x,w)),this.faceVertexUvs[0].push([_,M,T]),this.faces.push(new Z.Face3(x,b,w)),this.faceVertexUvs[0].push([M.clone(),S,T.clone()]);this.computeFaceNormals(),this.computeVertexNormals()},Z.TubeGeometry.prototype=Object.create(Z.Geometry.prototype),Z.TubeGeometry.prototype.constructor=Z.TubeGeometry,Z.TubeGeometry.NoTaper=function(e){return 1},Z.TubeGeometry.SinusoidalTaper=function(e){return Math.sin(Math.PI*e)},Z.TubeGeometry.FrenetFrames=function(e,t,r){var n,i,o,a,s,c,l,u=new Z.Vector3,h=[],d=[],p=[],f=new Z.Vector3,m=new Z.Matrix4,v=t+1;for(this.tangents=h,this.normals=d,this.binormals=p,c=0;c<v;c++)l=c/(v-1),h[c]=e.getTangentAt(l),h[c].normalize();for(function(){d[0]=new Z.Vector3,p[0]=new Z.Vector3,i=Number.MAX_VALUE,o=Math.abs(h[0].x),a=Math.abs(h[0].y),s=Math.abs(h[0].z),o<=i&&(i=o,u.set(1,0,0));a<=i&&(i=a,u.set(0,1,0));s<=i&&u.set(0,0,1);f.crossVectors(h[0],u).normalize(),d[0].crossVectors(h[0],f),p[0].crossVectors(h[0],d[0])}(),c=1;c<v;c++)d[c]=d[c-1].clone(),p[c]=p[c-1].clone(),f.crossVectors(h[c-1],h[c]),f.length()>Number.EPSILON&&(f.normalize(),n=Math.acos(Z.Math.clamp(h[c-1].dot(h[c]),-1,1)),d[c].applyMatrix4(m.makeRotationAxis(f,n))),p[c].crossVectors(h[c],d[c]);if(r)for(n=Math.acos(Z.Math.clamp(d[0].dot(d[v-1]),-1,1)),n/=v-1,h[0].dot(f.crossVectors(d[0],d[v-1]))>0&&(n=-n),c=1;c<v;c++)d[c].applyMatrix4(m.makeRotationAxis(h[c],n*c)),p[c].crossVectors(h[c],d[c])},Z.PolyhedronGeometry=function(e,t,r,n){Z.Geometry.call(this),this.type=\"PolyhedronGeometry\",this.parameters={vertices:e,indices:t,radius:r,detail:n},r=r||1,n=n||0;for(var i=this,o=0,a=e.length;o<a;o+=3)b(new Z.Vector3(e[o],e[o+1],e[o+2]));var s=this.vertices,c=[],l=(o=0,0);for(a=t.length;o<a;o+=3,l++){var u=s[t[o]],h=s[t[o+1]],d=s[t[o+2]];c[l]=new Z.Face3(u.index,h.index,d.index,[u.clone(),h.clone(),d.clone()])}var p=new Z.Vector3;for(o=0,a=c.length;o<a;o++)_(c[o],n);for(o=0,a=this.faceVertexUvs[0].length;o<a;o++){var f=this.faceVertexUvs[0][o],m=f[0].x,v=f[1].x,g=f[2].x,y=Math.max(m,v,g),x=Math.min(m,v,g);y>.9&&x<.1&&(m<.2&&(f[0].x+=1),v<.2&&(f[1].x+=1),g<.2&&(f[2].x+=1))}for(o=0,a=this.vertices.length;o<a;o++)this.vertices[o].multiplyScalar(r);function b(e){var t=e.normalize().clone();t.index=i.vertices.push(t)-1;var r=M(e)/2/Math.PI+.5,n=function(e){return Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))}(e)/Math.PI+.5;return t.uv=new Z.Vector2(r,1-n),t}function w(e,t,r){var n=new Z.Face3(e.index,t.index,r.index,[e.clone(),t.clone(),r.clone()]);i.faces.push(n),p.copy(e).add(t).add(r).divideScalar(3);var o=M(p);i.faceVertexUvs[0].push([S(e.uv,e,o),S(t.uv,t,o),S(r.uv,r,o)])}function _(e,t){for(var r=Math.pow(2,t),n=b(i.vertices[e.a]),o=b(i.vertices[e.b]),a=b(i.vertices[e.c]),s=[],c=0;c<=r;c++){s[c]=[];for(var l=b(n.clone().lerp(a,c/r)),u=b(o.clone().lerp(a,c/r)),h=r-c,d=0;d<=h;d++)s[c][d]=0===d&&c===r?l:b(l.clone().lerp(u,d/h))}for(c=0;c<r;c++)for(d=0;d<2*(r-c)-1;d++){var p=Math.floor(d/2);d%2==0?w(s[c][p+1],s[c+1][p],s[c][p]):w(s[c][p+1],s[c+1][p+1],s[c+1][p])}}function M(e){return Math.atan2(e.z,-e.x)}function S(e,t,r){return r<0&&1===e.x&&(e=new Z.Vector2(e.x-1,e.y)),0===t.x&&0===t.z&&(e=new Z.Vector2(r/2/Math.PI+.5,e.y)),e.clone()}this.mergeVertices(),this.computeFaceNormals(),this.boundingSphere=new Z.Sphere(new Z.Vector3,r)},Z.PolyhedronGeometry.prototype=Object.create(Z.Geometry.prototype),Z.PolyhedronGeometry.prototype.constructor=Z.PolyhedronGeometry,Z.DodecahedronGeometry=function(e,t){var r=(1+Math.sqrt(5))/2,n=1/r,i=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-n,-r,0,-n,r,0,n,-r,0,n,r,-n,-r,0,-n,r,0,n,-r,0,n,r,0,-r,0,-n,r,0,-n,-r,0,n,r,0,n];Z.PolyhedronGeometry.call(this,i,[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],e,t),this.type=\"DodecahedronGeometry\",this.parameters={radius:e,detail:t}},Z.DodecahedronGeometry.prototype=Object.create(Z.PolyhedronGeometry.prototype),Z.DodecahedronGeometry.prototype.constructor=Z.DodecahedronGeometry,Z.IcosahedronGeometry=function(e,t){var r=(1+Math.sqrt(5))/2,n=[-1,r,0,1,r,0,-1,-r,0,1,-r,0,0,-1,r,0,1,r,0,-1,-r,0,1,-r,r,0,-1,r,0,1,-r,0,-1,-r,0,1];Z.PolyhedronGeometry.call(this,n,[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],e,t),this.type=\"IcosahedronGeometry\",this.parameters={radius:e,detail:t}},Z.IcosahedronGeometry.prototype=Object.create(Z.PolyhedronGeometry.prototype),Z.IcosahedronGeometry.prototype.constructor=Z.IcosahedronGeometry,Z.OctahedronGeometry=function(e,t){Z.PolyhedronGeometry.call(this,[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],e,t),this.type=\"OctahedronGeometry\",this.parameters={radius:e,detail:t}},Z.OctahedronGeometry.prototype=Object.create(Z.PolyhedronGeometry.prototype),Z.OctahedronGeometry.prototype.constructor=Z.OctahedronGeometry,Z.TetrahedronGeometry=function(e,t){Z.PolyhedronGeometry.call(this,[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],e,t),this.type=\"TetrahedronGeometry\",this.parameters={radius:e,detail:t}},Z.TetrahedronGeometry.prototype=Object.create(Z.PolyhedronGeometry.prototype),Z.TetrahedronGeometry.prototype.constructor=Z.TetrahedronGeometry,Z.ParametricGeometry=function(e,t,r){Z.Geometry.call(this),this.type=\"ParametricGeometry\",this.parameters={func:e,slices:t,stacks:r};var n,i,o,a,s,c,l,u,h,d,p,f,m=this.vertices,v=this.faces,g=this.faceVertexUvs[0],y=t+1;for(n=0;n<=r;n++)for(a=n/r,i=0;i<=t;i++)o=e(i/t,a),m.push(o);for(n=0;n<r;n++)for(i=0;i<t;i++)s=n*y+i,c=n*y+i+1,l=(n+1)*y+i+1,u=(n+1)*y+i,h=new Z.Vector2(i/t,n/r),d=new Z.Vector2((i+1)/t,n/r),p=new Z.Vector2((i+1)/t,(n+1)/r),f=new Z.Vector2(i/t,(n+1)/r),v.push(new Z.Face3(s,c,u)),g.push([h,d,f]),v.push(new Z.Face3(c,l,u)),g.push([d.clone(),p,f.clone()]);this.computeFaceNormals(),this.computeVertexNormals()},Z.ParametricGeometry.prototype=Object.create(Z.Geometry.prototype),Z.ParametricGeometry.prototype.constructor=Z.ParametricGeometry,Z.WireframeGeometry=function(e){Z.BufferGeometry.call(this);var t=[0,0],r={};function n(e,t){return e-t}var i=[\"a\",\"b\",\"c\"];if(e instanceof Z.Geometry){for(var o=e.vertices,a=e.faces,s=0,c=new Uint32Array(6*a.length),l=0,u=a.length;l<u;l++)for(var h=a[l],d=0;d<3;d++){t[0]=h[i[d]],t[1]=h[i[(d+1)%3]],t.sort(n),void 0===r[_=t.toString()]&&(c[2*s]=t[0],c[2*s+1]=t[1],r[_]=!0,s++)}var p=new Float32Array(2*s*3);for(l=0,u=s;l<u;l++)for(d=0;d<2;d++){var f=o[c[2*l+d]];p[(M=6*l+3*d)+0]=f.x,p[M+1]=f.y,p[M+2]=f.z}this.addAttribute(\"position\",new Z.BufferAttribute(p,3))}else if(e instanceof Z.BufferGeometry)if(null!==e.index){var m=e.index.array,v=(o=e.attributes.position,e.groups);s=0;0===v.length&&e.addGroup(0,m.length);c=new Uint32Array(2*m.length);for(var g=0,y=v.length;g<y;++g)for(var x=v[g],b=x.start,w=(l=b,b+x.count);l<w;l+=3)for(d=0;d<3;d++){var _;t[0]=m[l+d],t[1]=m[l+(d+1)%3],t.sort(n),void 0===r[_=t.toString()]&&(c[2*s]=t[0],c[2*s+1]=t[1],r[_]=!0,s++)}for(p=new Float32Array(2*s*3),l=0,u=s;l<u;l++)for(d=0;d<2;d++){var M=6*l+3*d,S=c[2*l+d];p[M+0]=o.getX(S),p[M+1]=o.getY(S),p[M+2]=o.getZ(S)}this.addAttribute(\"position\",new Z.BufferAttribute(p,3))}else{var T=(s=(o=e.attributes.position.array).length/3)/3;for(p=new Float32Array(2*s*3),l=0,u=T;l<u;l++)for(d=0;d<3;d++){var E=9*l+3*d;p[(M=18*l+6*d)+0]=o[E],p[M+1]=o[E+1],p[M+2]=o[E+2];S=9*l+(d+1)%3*3;p[M+3]=o[S],p[M+4]=o[S+1],p[M+5]=o[S+2]}this.addAttribute(\"position\",new Z.BufferAttribute(p,3))}},Z.WireframeGeometry.prototype=Object.create(Z.BufferGeometry.prototype),Z.WireframeGeometry.prototype.constructor=Z.WireframeGeometry,Z.AxisHelper=function(e){e=e||1;var t=new Float32Array([0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e]),r=new Float32Array([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1]),n=new Z.BufferGeometry;n.addAttribute(\"position\",new Z.BufferAttribute(t,3)),n.addAttribute(\"color\",new Z.BufferAttribute(r,3));var i=new Z.LineBasicMaterial({vertexColors:Z.VertexColors});Z.LineSegments.call(this,n,i)},Z.AxisHelper.prototype=Object.create(Z.LineSegments.prototype),Z.AxisHelper.prototype.constructor=Z.AxisHelper,Z.ArrowHelper=function(){var e=new Z.BufferGeometry;e.addAttribute(\"position\",new Z.Float32Attribute([0,0,0,0,1,0],3));var t=new Z.CylinderBufferGeometry(0,.5,1,5,1);return t.translate(0,-.5,0),function(r,n,i,o,a,s){Z.Object3D.call(this),void 0===o&&(o=16776960),void 0===i&&(i=1),void 0===a&&(a=.2*i),void 0===s&&(s=.2*a),this.position.copy(n),this.line=new Z.Line(e,new Z.LineBasicMaterial({color:o})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new Z.Mesh(t,new Z.MeshBasicMaterial({color:o})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(r),this.setLength(i,a,s)}}(),Z.ArrowHelper.prototype=Object.create(Z.Object3D.prototype),Z.ArrowHelper.prototype.constructor=Z.ArrowHelper,Z.ArrowHelper.prototype.setDirection=(q=new Z.Vector3,function(e){e.y>.99999?this.quaternion.set(0,0,0,1):e.y<-.99999?this.quaternion.set(1,0,0,0):(q.set(e.z,0,-e.x).normalize(),X=Math.acos(e.y),this.quaternion.setFromAxisAngle(q,X))}),Z.ArrowHelper.prototype.setLength=function(e,t,r){void 0===t&&(t=.2*e),void 0===r&&(r=.2*t),this.line.scale.set(1,Math.max(0,e-t),1),this.line.updateMatrix(),this.cone.scale.set(r,t,r),this.cone.position.y=e,this.cone.updateMatrix()},Z.ArrowHelper.prototype.setColor=function(e){this.line.material.color.copy(e),this.cone.material.color.copy(e)},Z.BoxHelper=function(e,t){void 0===t&&(t=16776960);var r=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),n=new Float32Array(24),i=new Z.BufferGeometry;i.setIndex(new Z.BufferAttribute(r,1)),i.addAttribute(\"position\",new Z.BufferAttribute(n,3)),Z.LineSegments.call(this,i,new Z.LineBasicMaterial({color:t})),void 0!==e&&this.update(e)},Z.BoxHelper.prototype=Object.create(Z.LineSegments.prototype),Z.BoxHelper.prototype.constructor=Z.BoxHelper,Z.BoxHelper.prototype.update=function(){var e=new Z.Box3;return function(t){if(t instanceof Z.Box3?e.copy(t):e.setFromObject(t),!e.isEmpty()){var r=e.min,n=e.max,i=this.geometry.attributes.position,o=i.array;o[0]=n.x,o[1]=n.y,o[2]=n.z,o[3]=r.x,o[4]=n.y,o[5]=n.z,o[6]=r.x,o[7]=r.y,o[8]=n.z,o[9]=n.x,o[10]=r.y,o[11]=n.z,o[12]=n.x,o[13]=n.y,o[14]=r.z,o[15]=r.x,o[16]=n.y,o[17]=r.z,o[18]=r.x,o[19]=r.y,o[20]=r.z,o[21]=n.x,o[22]=r.y,o[23]=r.z,i.needsUpdate=!0,this.geometry.computeBoundingSphere()}}}(),Z.BoundingBoxHelper=function(e,t){var r=void 0!==t?t:8947848;this.object=e,this.box=new Z.Box3,Z.Mesh.call(this,new Z.BoxGeometry(1,1,1),new Z.MeshBasicMaterial({color:r,wireframe:!0}))},Z.BoundingBoxHelper.prototype=Object.create(Z.Mesh.prototype),Z.BoundingBoxHelper.prototype.constructor=Z.BoundingBoxHelper,Z.BoundingBoxHelper.prototype.update=function(){this.box.setFromObject(this.object),this.box.size(this.scale),this.box.center(this.position)},Z.CameraHelper=function(e){var t=new Z.Geometry,r=new Z.LineBasicMaterial({color:16777215,vertexColors:Z.FaceColors}),n={};function i(e,t,r){o(e,r),o(t,r)}function o(e,r){t.vertices.push(new Z.Vector3),t.colors.push(new Z.Color(r)),void 0===n[e]&&(n[e]=[]),n[e].push(t.vertices.length-1)}i(\"n1\",\"n2\",16755200),i(\"n2\",\"n4\",16755200),i(\"n4\",\"n3\",16755200),i(\"n3\",\"n1\",16755200),i(\"f1\",\"f2\",16755200),i(\"f2\",\"f4\",16755200),i(\"f4\",\"f3\",16755200),i(\"f3\",\"f1\",16755200),i(\"n1\",\"f1\",16755200),i(\"n2\",\"f2\",16755200),i(\"n3\",\"f3\",16755200),i(\"n4\",\"f4\",16755200),i(\"p\",\"n1\",16711680),i(\"p\",\"n2\",16711680),i(\"p\",\"n3\",16711680),i(\"p\",\"n4\",16711680),i(\"u1\",\"u2\",43775),i(\"u2\",\"u3\",43775),i(\"u3\",\"u1\",43775),i(\"c\",\"t\",16777215),i(\"p\",\"c\",3355443),i(\"cn1\",\"cn2\",3355443),i(\"cn3\",\"cn4\",3355443),i(\"cf1\",\"cf2\",3355443),i(\"cf3\",\"cf4\",3355443),Z.LineSegments.call(this,t,r),this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=n,this.update()},Z.CameraHelper.prototype=Object.create(Z.LineSegments.prototype),Z.CameraHelper.prototype.constructor=Z.CameraHelper,Z.CameraHelper.prototype.update=function(){var e,t,r=new Z.Vector3,n=new Z.Camera;function i(i,o,a,s){r.set(o,a,s).unproject(n);var c=t[i];if(void 0!==c)for(var l=0,u=c.length;l<u;l++)e.vertices[c[l]].copy(r)}return function(){e=this.geometry,t=this.pointMap;n.projectionMatrix.copy(this.camera.projectionMatrix),i(\"c\",0,0,-1),i(\"t\",0,0,1),i(\"n1\",-1,-1,-1),i(\"n2\",1,-1,-1),i(\"n3\",-1,1,-1),i(\"n4\",1,1,-1),i(\"f1\",-1,-1,1),i(\"f2\",1,-1,1),i(\"f3\",-1,1,1),i(\"f4\",1,1,1),i(\"u1\",.7,1.1,-1),i(\"u2\",-.7,1.1,-1),i(\"u3\",0,2,-1),i(\"cf1\",-1,0,1),i(\"cf2\",1,0,1),i(\"cf3\",0,-1,1),i(\"cf4\",0,1,1),i(\"cn1\",-1,0,-1),i(\"cn2\",1,0,-1),i(\"cn3\",0,-1,-1),i(\"cn4\",0,1,-1),e.verticesNeedUpdate=!0}}(),Z.DirectionalLightHelper=function(e,t){Z.Object3D.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,void 0===t&&(t=1);var r=new Z.BufferGeometry;r.addAttribute(\"position\",new Z.Float32Attribute([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));var n=new Z.LineBasicMaterial({fog:!1});this.add(new Z.Line(r,n)),(r=new Z.BufferGeometry).addAttribute(\"position\",new Z.Float32Attribute([0,0,0,0,0,1],3)),this.add(new Z.Line(r,n)),this.update()},Z.DirectionalLightHelper.prototype=Object.create(Z.Object3D.prototype),Z.DirectionalLightHelper.prototype.constructor=Z.DirectionalLightHelper,Z.DirectionalLightHelper.prototype.dispose=function(){var e=this.children[0],t=this.children[1];e.geometry.dispose(),e.material.dispose(),t.geometry.dispose(),t.material.dispose()},Z.DirectionalLightHelper.prototype.update=function(){var e=new Z.Vector3,t=new Z.Vector3,r=new Z.Vector3;return function(){e.setFromMatrixPosition(this.light.matrixWorld),t.setFromMatrixPosition(this.light.target.matrixWorld),r.subVectors(t,e);var n=this.children[0],i=this.children[1];n.lookAt(r),n.material.color.copy(this.light.color).multiplyScalar(this.light.intensity),i.lookAt(r),i.scale.z=r.length()}}(),Z.EdgesHelper=function(e,t,r){var n=void 0!==t?t:16777215;Z.LineSegments.call(this,new Z.EdgesGeometry(e.geometry,r),new Z.LineBasicMaterial({color:n})),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1},Z.EdgesHelper.prototype=Object.create(Z.LineSegments.prototype),Z.EdgesHelper.prototype.constructor=Z.EdgesHelper,Z.FaceNormalsHelper=function(e,t,r,n){this.object=e,this.size=void 0!==t?t:1;var i=void 0!==r?r:16776960,o=void 0!==n?n:1,a=0,s=this.object.geometry;s instanceof Z.Geometry?a=s.faces.length:console.warn(\"THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.\");var c=new Z.BufferGeometry,l=new Z.Float32Attribute(2*a*3,3);c.addAttribute(\"position\",l),Z.LineSegments.call(this,c,new Z.LineBasicMaterial({color:i,linewidth:o})),this.matrixAutoUpdate=!1,this.update()},Z.FaceNormalsHelper.prototype=Object.create(Z.LineSegments.prototype),Z.FaceNormalsHelper.prototype.constructor=Z.FaceNormalsHelper,Z.FaceNormalsHelper.prototype.update=function(){var e=new Z.Vector3,t=new Z.Vector3,r=new Z.Matrix3;return function(){this.object.updateMatrixWorld(!0),r.getNormalMatrix(this.object.matrixWorld);for(var n=this.object.matrixWorld,i=this.geometry.attributes.position,o=this.object.geometry,a=o.vertices,s=o.faces,c=0,l=0,u=s.length;l<u;l++){var h=s[l],d=h.normal;e.copy(a[h.a]).add(a[h.b]).add(a[h.c]).divideScalar(3).applyMatrix4(n),t.copy(d).applyMatrix3(r).normalize().multiplyScalar(this.size).add(e),i.setXYZ(c,e.x,e.y,e.z),c+=1,i.setXYZ(c,t.x,t.y,t.z),c+=1}return i.needsUpdate=!0,this}}(),Z.GridHelper=function(e,t,r,n){t=t||1,r=new Z.Color(void 0!==r?r:4473924),n=new Z.Color(void 0!==n?n:8947848);for(var i=t/2,o=2*e/t,a=[],s=[],c=0,l=0,u=-e;c<=t;c++,u+=o){a.push(-e,0,u,e,0,u),a.push(u,0,-e,u,0,e);var h=c===i?r:n;h.toArray(s,l),l+=3,h.toArray(s,l),l+=3,h.toArray(s,l),l+=3,h.toArray(s,l),l+=3}var d=new Z.BufferGeometry;d.addAttribute(\"position\",new Z.Float32Attribute(a,3)),d.addAttribute(\"color\",new Z.Float32Attribute(s,3));var p=new Z.LineBasicMaterial({vertexColors:Z.VertexColors});Z.LineSegments.call(this,d,p)},Z.GridHelper.prototype=Object.create(Z.LineSegments.prototype),Z.GridHelper.prototype.constructor=Z.GridHelper,Z.GridHelper.prototype.setColors=function(){console.error(\"THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.\")},Z.HemisphereLightHelper=function(e,t){Z.Object3D.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.colors=[new Z.Color,new Z.Color];var r=new Z.SphereGeometry(t,4,2);r.rotateX(-Math.PI/2);for(var n=0;n<8;n++)r.faces[n].color=this.colors[n<4?0:1];var i=new Z.MeshBasicMaterial({vertexColors:Z.FaceColors,wireframe:!0});this.lightSphere=new Z.Mesh(r,i),this.add(this.lightSphere),this.update()},Z.HemisphereLightHelper.prototype=Object.create(Z.Object3D.prototype),Z.HemisphereLightHelper.prototype.constructor=Z.HemisphereLightHelper,Z.HemisphereLightHelper.prototype.dispose=function(){this.lightSphere.geometry.dispose(),this.lightSphere.material.dispose()},Z.HemisphereLightHelper.prototype.update=(Y=new Z.Vector3,function(){this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity),this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity),this.lightSphere.lookAt(Y.setFromMatrixPosition(this.light.matrixWorld).negate()),this.lightSphere.geometry.colorsNeedUpdate=!0}),Z.PointLightHelper=function(e,t){this.light=e,this.light.updateMatrixWorld();var r=new Z.SphereBufferGeometry(t,4,2),n=new Z.MeshBasicMaterial({wireframe:!0,fog:!1});n.color.copy(this.light.color).multiplyScalar(this.light.intensity),Z.Mesh.call(this,r,n),this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1},Z.PointLightHelper.prototype=Object.create(Z.Mesh.prototype),Z.PointLightHelper.prototype.constructor=Z.PointLightHelper,Z.PointLightHelper.prototype.dispose=function(){this.geometry.dispose(),this.material.dispose()},Z.PointLightHelper.prototype.update=function(){this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)},Z.SkeletonHelper=function(e){this.bones=this.getBoneList(e);for(var t=new Z.Geometry,r=0;r<this.bones.length;r++){this.bones[r].parent instanceof Z.Bone&&(t.vertices.push(new Z.Vector3),t.vertices.push(new Z.Vector3),t.colors.push(new Z.Color(0,0,1)),t.colors.push(new Z.Color(0,1,0)))}t.dynamic=!0;var n=new Z.LineBasicMaterial({vertexColors:Z.VertexColors,depthTest:!1,depthWrite:!1,transparent:!0});Z.LineSegments.call(this,t,n),this.root=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.update()},Z.SkeletonHelper.prototype=Object.create(Z.LineSegments.prototype),Z.SkeletonHelper.prototype.constructor=Z.SkeletonHelper,Z.SkeletonHelper.prototype.getBoneList=function(e){var t=[];e instanceof Z.Bone&&t.push(e);for(var r=0;r<e.children.length;r++)t.push.apply(t,this.getBoneList(e.children[r]));return t},Z.SkeletonHelper.prototype.update=function(){for(var e=this.geometry,t=(new Z.Matrix4).getInverse(this.root.matrixWorld),r=new Z.Matrix4,n=0,i=0;i<this.bones.length;i++){var o=this.bones[i];o.parent instanceof Z.Bone&&(r.multiplyMatrices(t,o.matrixWorld),e.vertices[n].setFromMatrixPosition(r),r.multiplyMatrices(t,o.parent.matrixWorld),e.vertices[n+1].setFromMatrixPosition(r),n+=2)}e.verticesNeedUpdate=!0,e.computeBoundingSphere()},Z.SpotLightHelper=function(e){Z.Object3D.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1;for(var t=new Z.BufferGeometry,r=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1],n=0,i=1;n<32;n++,i++){var o=n/32*Math.PI*2,a=i/32*Math.PI*2;r.push(Math.cos(o),Math.sin(o),1,Math.cos(a),Math.sin(a),1)}t.addAttribute(\"position\",new Z.Float32Attribute(r,3));var s=new Z.LineBasicMaterial({fog:!1});this.cone=new Z.LineSegments(t,s),this.add(this.cone),this.update()},Z.SpotLightHelper.prototype=Object.create(Z.Object3D.prototype),Z.SpotLightHelper.prototype.constructor=Z.SpotLightHelper,Z.SpotLightHelper.prototype.dispose=function(){this.cone.geometry.dispose(),this.cone.material.dispose()},Z.SpotLightHelper.prototype.update=function(){var e=new Z.Vector3,t=new Z.Vector3;return function(){var r=this.light.distance?this.light.distance:1e3,n=r*Math.tan(this.light.angle);this.cone.scale.set(n,n,r),e.setFromMatrixPosition(this.light.matrixWorld),t.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(t.sub(e)),this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)}}(),Z.VertexNormalsHelper=function(e,t,r,n){this.object=e,this.size=void 0!==t?t:1;var i=void 0!==r?r:16711680,o=void 0!==n?n:1,a=0,s=this.object.geometry;s instanceof Z.Geometry?a=3*s.faces.length:s instanceof Z.BufferGeometry&&(a=s.attributes.normal.count);var c=new Z.BufferGeometry,l=new Z.Float32Attribute(2*a*3,3);c.addAttribute(\"position\",l),Z.LineSegments.call(this,c,new Z.LineBasicMaterial({color:i,linewidth:o})),this.matrixAutoUpdate=!1,this.update()},Z.VertexNormalsHelper.prototype=Object.create(Z.LineSegments.prototype),Z.VertexNormalsHelper.prototype.constructor=Z.VertexNormalsHelper,Z.VertexNormalsHelper.prototype.update=function(){var e=new Z.Vector3,t=new Z.Vector3,r=new Z.Matrix3;return function(){var n=[\"a\",\"b\",\"c\"];this.object.updateMatrixWorld(!0),r.getNormalMatrix(this.object.matrixWorld);var i=this.object.matrixWorld,o=this.geometry.attributes.position,a=this.object.geometry;if(a instanceof Z.Geometry)for(var s=a.vertices,c=a.faces,l=0,u=0,h=c.length;u<h;u++)for(var d=c[u],p=0,f=d.vertexNormals.length;p<f;p++){var m=s[d[n[p]]],v=d.vertexNormals[p];e.copy(m).applyMatrix4(i),t.copy(v).applyMatrix3(r).normalize().multiplyScalar(this.size).add(e),o.setXYZ(l,e.x,e.y,e.z),l+=1,o.setXYZ(l,t.x,t.y,t.z),l+=1}else if(a instanceof Z.BufferGeometry){var g=a.attributes.position,y=a.attributes.normal;for(l=0,p=0,f=g.count;p<f;p++)e.set(g.getX(p),g.getY(p),g.getZ(p)).applyMatrix4(i),t.set(y.getX(p),y.getY(p),y.getZ(p)),t.applyMatrix3(r).normalize().multiplyScalar(this.size).add(e),o.setXYZ(l,e.x,e.y,e.z),l+=1,o.setXYZ(l,t.x,t.y,t.z),l+=1}return o.needsUpdate=!0,this}}(),Z.WireframeHelper=function(e,t){var r=void 0!==t?t:16777215;Z.LineSegments.call(this,new Z.WireframeGeometry(e.geometry),new Z.LineBasicMaterial({color:r})),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1},Z.WireframeHelper.prototype=Object.create(Z.LineSegments.prototype),Z.WireframeHelper.prototype.constructor=Z.WireframeHelper,Z.ImmediateRenderObject=function(e){Z.Object3D.call(this),this.material=e,this.render=function(e){}},Z.ImmediateRenderObject.prototype=Object.create(Z.Object3D.prototype),Z.ImmediateRenderObject.prototype.constructor=Z.ImmediateRenderObject,Z.MorphBlendMesh=function(e,t){Z.Mesh.call(this,e,t),this.animationsMap={},this.animationsList=[];var r=this.geometry.morphTargets.length,n=r-1,i=r/1;this.createAnimation(\"__default\",0,n,i),this.setAnimationWeight(\"__default\",1)},Z.MorphBlendMesh.prototype=Object.create(Z.Mesh.prototype),Z.MorphBlendMesh.prototype.constructor=Z.MorphBlendMesh,Z.MorphBlendMesh.prototype.createAnimation=function(e,t,r,n){var i={start:t,end:r,length:r-t+1,fps:n,duration:(r-t)/n,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1};this.animationsMap[e]=i,this.animationsList.push(i)},Z.MorphBlendMesh.prototype.autoCreateAnimations=function(e){for(var t,r=/([a-z]+)_?(\\d+)/i,n={},i=this.geometry,o=0,a=i.morphTargets.length;o<a;o++){var s=i.morphTargets[o].name.match(r);if(s&&s.length>1)n[c=s[1]]||(n[c]={start:1/0,end:-1/0}),o<(l=n[c]).start&&(l.start=o),o>l.end&&(l.end=o),t||(t=c)}for(var c in n){var l=n[c];this.createAnimation(c,l.start,l.end,e)}this.firstAnimation=t},Z.MorphBlendMesh.prototype.setAnimationDirectionForward=function(e){var t=this.animationsMap[e];t&&(t.direction=1,t.directionBackwards=!1)},Z.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(e){var t=this.animationsMap[e];t&&(t.direction=-1,t.directionBackwards=!0)},Z.MorphBlendMesh.prototype.setAnimationFPS=function(e,t){var r=this.animationsMap[e];r&&(r.fps=t,r.duration=(r.end-r.start)/r.fps)},Z.MorphBlendMesh.prototype.setAnimationDuration=function(e,t){var r=this.animationsMap[e];r&&(r.duration=t,r.fps=(r.end-r.start)/r.duration)},Z.MorphBlendMesh.prototype.setAnimationWeight=function(e,t){var r=this.animationsMap[e];r&&(r.weight=t)},Z.MorphBlendMesh.prototype.setAnimationTime=function(e,t){var r=this.animationsMap[e];r&&(r.time=t)},Z.MorphBlendMesh.prototype.getAnimationTime=function(e){var t=0,r=this.animationsMap[e];return r&&(t=r.time),t},Z.MorphBlendMesh.prototype.getAnimationDuration=function(e){var t=-1,r=this.animationsMap[e];return r&&(t=r.duration),t},Z.MorphBlendMesh.prototype.playAnimation=function(e){var t=this.animationsMap[e];t?(t.time=0,t.active=!0):console.warn(\"THREE.MorphBlendMesh: animation[\"+e+\"] undefined in .playAnimation()\")},Z.MorphBlendMesh.prototype.stopAnimation=function(e){var t=this.animationsMap[e];t&&(t.active=!1)},Z.MorphBlendMesh.prototype.update=function(e){for(var t=0,r=this.animationsList.length;t<r;t++){var n=this.animationsList[t];if(n.active){var i=n.duration/n.length;n.time+=n.direction*e,n.mirroredLoop?(n.time>n.duration||n.time<0)&&(n.direction*=-1,n.time>n.duration&&(n.time=n.duration,n.directionBackwards=!0),n.time<0&&(n.time=0,n.directionBackwards=!1)):(n.time=n.time%n.duration,n.time<0&&(n.time+=n.duration));var o=n.start+Z.Math.clamp(Math.floor(n.time/i),0,n.length-1),a=n.weight;o!==n.currentFrame&&(this.morphTargetInfluences[n.lastFrame]=0,this.morphTargetInfluences[n.currentFrame]=1*a,this.morphTargetInfluences[o]=0,n.lastFrame=n.currentFrame,n.currentFrame=o);var s=n.time%i/i;n.directionBackwards&&(s=1-s),n.currentFrame!==n.lastFrame?(this.morphTargetInfluences[n.currentFrame]=s*a,this.morphTargetInfluences[n.lastFrame]=(1-s)*a):this.morphTargetInfluences[n.currentFrame]=a}}},r(4)instanceof Function&&null!=r(5)?void 0===(n=function(){return Z}.call(t,r,t,e))||(e.exports=n):e.exports?e.exports=Z:null!=this&&(this.THREE=Z)}()},function(e,t){e.exports=function(){throw new Error(\"define cannot be used indirect\")}},function(e,t){(function(t){e.exports=t}).call(this,{})},function(e,t,r){var n={\"./AdaptiveToneMappingPass.js\":7,\"./BasicShader.js\":8,\"./BleachBypassShader.js\":9,\"./BlendShader.js\":10,\"./BloomPass.js\":11,\"./BokehPass.js\":12,\"./BokehShader.js\":13,\"./BokehShader2.js\":14,\"./BrightnessContrastShader.js\":15,\"./CanvasRenderer.js\":16,\"./ColorCorrectionShader.js\":17,\"./ColorifyShader.js\":18,\"./ConvolutionShader.js\":19,\"./CopyShader.js\":20,\"./DDSLoader.js\":21,\"./DOFMipMapShader.js\":22,\"./DigitalGlitch.js\":23,\"./DotScreenPass.js\":24,\"./DotScreenShader.js\":25,\"./EdgeShader.js\":26,\"./EdgeShader2.js\":27,\"./EffectComposer.js\":28,\"./FXAAShader.js\":29,\"./FilmPass.js\":30,\"./FilmShader.js\":31,\"./FocusShader.js\":32,\"./FresnelShader.js\":33,\"./GammaCorrectionShader.js\":34,\"./GlitchPass.js\":35,\"./HorizontalBlurShader.js\":36,\"./HorizontalTiltShiftShader.js\":37,\"./HueSaturationShader.js\":38,\"./JSONLoader.js\":39,\"./KaleidoShader.js\":40,\"./LuminosityShader.js\":41,\"./MTLLoader.js\":42,\"./MarchingCubes.js\":43,\"./MaskPass.js\":44,\"./MirrorShader.js\":45,\"./NormalMapShader.js\":46,\"./OBJLoader.js\":47,\"./OceanShaders.js\":48,\"./OrbitControls.js\":49,\"./ParallaxShader.js\":50,\"./Projector.js\":51,\"./RGBShiftShader.js\":52,\"./RenderPass.js\":53,\"./SSAOShader.js\":54,\"./SVGLoader.js\":55,\"./SavePass.js\":56,\"./SepiaShader.js\":57,\"./ShaderPass.js\":58,\"./TechnicolorShader.js\":59,\"./TexturePass.js\":60,\"./ToneMapShader.js\":61,\"./TriangleBlurShader.js\":62,\"./UnpackDepthRGBAShader.js\":63,\"./VerticalBlurShader.js\":64,\"./VerticalTiltShiftShader.js\":65,\"./VignetteShader.js\":66};function i(e){var t=o(e);return r(t)}function o(e){if(!r.o(n,e)){var t=new Error(\"Cannot find module '\"+e+\"'\");throw t.code=\"MODULE_NOT_FOUND\",t}return n[e]}i.keys=function(){return Object.keys(n)},i.resolve=o,e.exports=i,i.id=6},function(e,t){e.exports=function(e){e.AdaptiveToneMappingPass=function(t,r){this.resolution=void 0!==r?r:256,this.needsInit=!0,this.adaptive=void 0===t||!!t,this.luminanceRT=null,this.previousLuminanceRT=null,this.currentLuminanceRT=null,void 0===e.CopyShader&&console.error(\"THREE.AdaptiveToneMappingPass relies on THREE.CopyShader\");var n=e.CopyShader;this.copyUniforms=e.UniformsUtils.clone(n.uniforms),this.materialCopy=new e.ShaderMaterial({uniforms:this.copyUniforms,vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,blending:e.NoBlending,depthTest:!1}),void 0===e.LuminosityShader&&console.error(\"THREE.AdaptiveToneMappingPass relies on THREE.LuminosityShader\"),this.materialLuminance=new e.ShaderMaterial({uniforms:e.UniformsUtils.clone(e.LuminosityShader.uniforms),vertexShader:e.LuminosityShader.vertexShader,fragmentShader:e.LuminosityShader.fragmentShader,blending:e.NoBlending}),this.adaptLuminanceShader={defines:{MIP_LEVEL_1X1:(Math.log(this.resolution)/Math.log(2)).toFixed(1)},uniforms:{lastLum:{type:\"t\",value:null},currentLum:{type:\"t\",value:null},delta:{type:\"f\",value:.016},tau:{type:\"f\",value:1}},vertexShader:[\"varying vec2 vUv;\",\"void main() {\",\"vUv = uv;\",\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\"}\"].join(\"\\n\"),fragmentShader:[\"varying vec2 vUv;\",\"uniform sampler2D lastLum;\",\"uniform sampler2D currentLum;\",\"uniform float delta;\",\"uniform float tau;\",\"void main() {\",\"vec4 lastLum = texture2D( lastLum, vUv, MIP_LEVEL_1X1 );\",\"vec4 currentLum = texture2D( currentLum, vUv, MIP_LEVEL_1X1 );\",\"float fLastLum = lastLum.r;\",\"float fCurrentLum = currentLum.r;\",\"fCurrentLum *= fCurrentLum;\",\"float fAdaptedLum = fLastLum + (fCurrentLum - fLastLum) * (1.0 - exp(-delta * tau));\",\"gl_FragColor = vec4( vec3( fAdaptedLum ), 1.0 );\",\"}\"].join(\"\\n\")},this.materialAdaptiveLum=new e.ShaderMaterial({uniforms:e.UniformsUtils.clone(this.adaptLuminanceShader.uniforms),vertexShader:this.adaptLuminanceShader.vertexShader,fragmentShader:this.adaptLuminanceShader.fragmentShader,defines:this.adaptLuminanceShader.defines,blending:e.NoBlending}),void 0===e.ToneMapShader&&console.error(\"THREE.AdaptiveToneMappingPass relies on THREE.ToneMapShader\"),this.materialToneMap=new e.ShaderMaterial({uniforms:e.UniformsUtils.clone(e.ToneMapShader.uniforms),vertexShader:e.ToneMapShader.vertexShader,fragmentShader:e.ToneMapShader.fragmentShader,blending:e.NoBlending}),this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.camera=new e.OrthographicCamera(-1,1,1,-1,0,1),this.scene=new e.Scene,this.quad=new e.Mesh(new e.PlaneBufferGeometry(2,2),null),this.scene.add(this.quad)},e.AdaptiveToneMappingPass.prototype={render:function(e,t,r,n,i){this.needsInit&&(this.reset(e),this.luminanceRT.type=r.type,this.previousLuminanceRT.type=r.type,this.currentLuminanceRT.type=r.type,this.needsInit=!1),this.adaptive&&(this.quad.material=this.materialLuminance,this.materialLuminance.uniforms.tDiffuse.value=r,e.render(this.scene,this.camera,this.currentLuminanceRT),this.quad.material=this.materialAdaptiveLum,this.materialAdaptiveLum.uniforms.delta.value=n,this.materialAdaptiveLum.uniforms.lastLum.value=this.previousLuminanceRT,this.materialAdaptiveLum.uniforms.currentLum.value=this.currentLuminanceRT,e.render(this.scene,this.camera,this.luminanceRT),this.quad.material=this.materialCopy,this.copyUniforms.tDiffuse.value=this.luminanceRT,e.render(this.scene,this.camera,this.previousLuminanceRT)),this.quad.material=this.materialToneMap,this.materialToneMap.uniforms.tDiffuse.value=r,e.render(this.scene,this.camera,t,this.clear)},reset:function(t){this.luminanceRT&&this.luminanceRT.dispose(),this.currentLuminanceRT&&this.currentLuminanceRT.dispose(),this.previousLuminanceRT&&this.previousLuminanceRT.dispose();var r={minFilter:e.LinearFilter,magFilter:e.LinearFilter,format:e.RGBFormat};this.luminanceRT=new e.WebGLRenderTarget(this.resolution,this.resolution,r),this.luminanceRT.generateMipmaps=!1,this.previousLuminanceRT=new e.WebGLRenderTarget(this.resolution,this.resolution,r),this.previousLuminanceRT.generateMipmaps=!1,r.minFilter=e.LinearMipMapLinearFilter,this.currentLuminanceRT=new e.WebGLRenderTarget(this.resolution,this.resolution,r),this.adaptive&&(this.materialToneMap.defines.ADAPTED_LUMINANCE=\"\",this.materialToneMap.uniforms.luminanceMap.value=this.luminanceRT),this.quad.material=new e.MeshBasicMaterial({color:7829367}),this.materialLuminance.needsUpdate=!0,this.materialAdaptiveLum.needsUpdate=!0,this.materialToneMap.needsUpdate=!0},setAdaptive:function(e){e?(this.adaptive=!0,this.materialToneMap.defines.ADAPTED_LUMINANCE=\"\",this.materialToneMap.uniforms.luminanceMap.value=this.luminanceRT):(this.adaptive=!1,delete this.materialToneMap.defines.ADAPTED_LUMINANCE,this.materialToneMap.uniforms.luminanceMap.value=void 0),this.materialToneMap.needsUpdate=!0},setAdaptionRate:function(e){e&&(this.materialAdaptiveLum.uniforms.tau.value=Math.abs(e))},setMaxLuminance:function(e){e&&(this.materialToneMap.uniforms.maxLuminance.value=e)},setAverageLuminance:function(e){e&&(this.materialToneMap.uniforms.averageLuminance.value=e)},setMiddleGrey:function(e){e&&(this.materialToneMap.uniforms.middleGrey.value=e)},dispose:function(){this.luminanceRT&&this.luminanceRT.dispose(),this.previousLuminanceRT&&this.previousLuminanceRT.dispose(),this.currentLuminanceRT&&this.currentLuminanceRT.dispose(),this.materialLuminance&&this.materialLuminance.dispose(),this.materialAdaptiveLum&&this.materialAdaptiveLum.dispose(),this.materialCopy&&this.materialCopy.dispose(),this.materialToneMap&&this.materialToneMap.dispose()}}}},function(e,t){e.exports=function(e){e.BasicShader={uniforms:{},vertexShader:[\"void main() {\",\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\"}\"].join(\"\\n\"),fragmentShader:[\"void main() {\",\"gl_FragColor = vec4( 1.0, 0.0, 0.0, 0.5 );\",\"}\"].join(\"\\n\")}}},function(e,t){e.exports=function(e){e.BleachBypassShader={uniforms:{tDiffuse:{type:\"t\",value:null},opacity:{type:\"f\",value:1}},vertexShader:[\"varying vec2 vUv;\",\"void main() {\",\"vUv = uv;\",\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\"}\"].join(\"\\n\"),fragmentShader:[\"uniform float opacity;\",\"uniform sampler2D tDiffuse;\",\"varying vec2 vUv;\",\"void main() {\",\"vec4 base = texture2D( tDiffuse, vUv );\",\"vec3 lumCoeff = vec3( 0.25, 0.65, 0.1 );\",\"float lum = dot( lumCoeff, base.rgb );\",\"vec3 blend = vec3( lum );\",\"float L = min( 1.0, max( 0.0, 10.0 * ( lum - 0.45 ) ) );\",\"vec3 result1 = 2.0 * base.rgb * blend;\",\"vec3 result2 = 1.0 - 2.0 * ( 1.0 - blend ) * ( 1.0 - base.rgb );\",\"vec3 newColor = mix( result1, result2, L );\",\"float A2 = opacity * base.a;\",\"vec3 mixRGB = A2 * newColor.rgb;\",\"mixRGB += ( ( 1.0 - A2 ) * base.rgb );\",\"gl_FragColor = vec4( mixRGB, base.a );\",\"}\"].join(\"\\n\")}}},function(e,t){e.exports=function(e){e.BlendShader={uniforms:{tDiffuse1:{type:\"t\",value:null},tDiffuse2:{type:\"t\",value:null},mixRatio:{type:\"f\",value:.5},opacity:{type:\"f\",value:1}},vertexShader:[\"varying vec2 vUv;\",\"void main() {\",\"vUv = uv;\",\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\"}\"].join(\"\\n\"),fragmentShader:[\"uniform float opacity;\",\"uniform float mixRatio;\",\"uniform sampler2D tDiffuse1;\",\"uniform sampler2D tDiffuse2;\",\"varying vec2 vUv;\",\"void main() {\",\"vec4 texel1 = texture2D( tDiffuse1, vUv );\",\"vec4 texel2 = texture2D( tDiffuse2, vUv );\",\"gl_FragColor = opacity * mix( texel1, texel2, mixRatio );\",\"}\"].join(\"\\n\")}}},function(e,t){e.exports=function(e){e.BloomPass=function(t,r,n,i){t=void 0!==t?t:1,r=void 0!==r?r:25,n=void 0!==n?n:4,i=void 0!==i?i:256;var o={minFilter:e.LinearFilter,magFilter:e.LinearFilter,format:e.RGBFormat};this.renderTargetX=new e.WebGLRenderTarget(i,i,o),this.renderTargetY=new e.WebGLRenderTarget(i,i,o),void 0===e.CopyShader&&console.error(\"THREE.BloomPass relies on THREE.CopyShader\");var a=e.CopyShader;this.copyUniforms=e.UniformsUtils.clone(a.uniforms),this.copyUniforms.opacity.value=t,this.materialCopy=new e.ShaderMaterial({uniforms:this.copyUniforms,vertexShader:a.vertexShader,fragmentShader:a.fragmentShader,blending:e.AdditiveBlending,transparent:!0}),void 0===e.ConvolutionShader&&console.error(\"THREE.BloomPass relies on THREE.ConvolutionShader\");var s=e.ConvolutionShader;this.convolutionUniforms=e.UniformsUtils.clone(s.uniforms),this.convolutionUniforms.uImageIncrement.value=e.BloomPass.blurX,this.convolutionUniforms.cKernel.value=e.ConvolutionShader.buildKernel(n),this.materialConvolution=new e.ShaderMaterial({uniforms:this.convolutionUniforms,vertexShader:s.vertexShader,fragmentShader:s.fragmentShader,defines:{KERNEL_SIZE_FLOAT:r.toFixed(1),KERNEL_SIZE_INT:r.toFixed(0)}}),this.enabled=!0,this.needsSwap=!1,this.clear=!1,this.camera=new e.OrthographicCamera(-1,1,1,-1,0,1),this.scene=new e.Scene,this.quad=new e.Mesh(new e.PlaneBufferGeometry(2,2),null),this.scene.add(this.quad)},e.BloomPass.prototype={render:function(t,r,n,i,o){o&&t.context.disable(t.context.STENCIL_TEST),this.quad.material=this.materialConvolution,this.convolutionUniforms.tDiffuse.value=n,this.convolutionUniforms.uImageIncrement.value=e.BloomPass.blurX,t.render(this.scene,this.camera,this.renderTargetX,!0),this.convolutionUniforms.tDiffuse.value=this.renderTargetX,this.convolutionUniforms.uImageIncrement.value=e.BloomPass.blurY,t.render(this.scene,this.camera,this.renderTargetY,!0),this.quad.material=this.materialCopy,this.copyUniforms.tDiffuse.value=this.renderTargetY,o&&t.context.enable(t.context.STENCIL_TEST),t.render(this.scene,this.camera,n,this.clear)}},e.BloomPass.blurX=new e.Vector2(.001953125,0),e.BloomPass.blurY=new e.Vector2(0,.001953125)}},function(e,t){e.exports=function(e){e.BokehPass=function(t,r,n){this.scene=t,this.camera=r;var i=void 0!==n.focus?n.focus:1,o=void 0!==n.aspect?n.aspect:r.aspect,a=void 0!==n.aperture?n.aperture:.025,s=void 0!==n.maxblur?n.maxblur:1,c=n.width||window.innerWidth||1,l=n.height||window.innerHeight||1;this.renderTargetColor=new e.WebGLRenderTarget(c,l,{minFilter:e.LinearFilter,magFilter:e.LinearFilter,format:e.RGBFormat}),this.renderTargetDepth=this.renderTargetColor.clone(),this.materialDepth=new e.MeshDepthMaterial,void 0===e.BokehShader&&console.error(\"THREE.BokehPass relies on THREE.BokehShader\");var u=e.BokehShader,h=e.UniformsUtils.clone(u.uniforms);h.tDepth.value=this.renderTargetDepth,h.focus.value=i,h.aspect.value=o,h.aperture.value=a,h.maxblur.value=s,this.materialBokeh=new e.ShaderMaterial({uniforms:h,vertexShader:u.vertexShader,fragmentShader:u.fragmentShader}),this.uniforms=h,this.enabled=!0,this.needsSwap=!1,this.renderToScreen=!1,this.clear=!1,this.camera2=new e.OrthographicCamera(-1,1,1,-1,0,1),this.scene2=new e.Scene,this.quad2=new e.Mesh(new e.PlaneBufferGeometry(2,2),null),this.scene2.add(this.quad2)},e.BokehPass.prototype={render:function(e,t,r,n,i){this.quad2.material=this.materialBokeh,this.scene.overrideMaterial=this.materialDepth,e.render(this.scene,this.camera,this.renderTargetDepth,!0),this.uniforms.tColor.value=r,this.renderToScreen?e.render(this.scene2,this.camera2):e.render(this.scene2,this.camera2,t,this.clear),this.scene.overrideMaterial=null}}}},function(e,t){e.exports=function(e){e.BokehShader={uniforms:{tColor:{type:\"t\",value:null},tDepth:{type:\"t\",value:null},focus:{type:\"f\",value:1},aspect:{type:\"f\",value:1},aperture:{type:\"f\",value:.025},maxblur:{type:\"f\",value:1}},vertexShader:[\"varying vec2 vUv;\",\"void main() {\",\"vUv = uv;\",\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\"}\"].join(\"\\n\"),fragmentShader:[\"varying vec2 vUv;\",\"uniform sampler2D tColor;\",\"uniform sampler2D tDepth;\",\"uniform float maxblur;\",\"uniform float aperture;\",\"uniform float focus;\",\"uniform float aspect;\",\"void main() {\",\"vec2 aspectcorrect = vec2( 1.0, aspect );\",\"vec4 depth1 = texture2D( tDepth, vUv );\",\"float factor = depth1.x - focus;\",\"vec2 dofblur = vec2 ( clamp( factor * aperture, -maxblur, maxblur ) );\",\"vec2 dofblur9 = dofblur * 0.9;\",\"vec2 dofblur7 = dofblur * 0.7;\",\"vec2 dofblur4 = dofblur * 0.4;\",\"vec4 col = vec4( 0.0 );\",\"col += texture2D( tColor, vUv.xy );\",\"col += texture2D( tColor, vUv.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur );\",\"col += texture2D( tColor, vUv.xy + ( vec2(  0.15,  0.37 ) * aspectcorrect ) * dofblur );\",\"col += texture2D( tColor, vUv.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur );\",\"col += texture2D( tColor, vUv.xy + ( vec2( -0.37,  0.15 ) * aspectcorrect ) * dofblur );\",\"col += texture2D( tColor, vUv.xy + ( vec2(  0.40,  0.0  ) * aspectcorrect ) * dofblur );\",\"col += texture2D( tColor, vUv.xy + ( vec2(  0.37, -0.15 ) * aspectcorrect ) * dofblur );\",\"col += texture2D( tColor, vUv.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur );\",\"col += texture2D( tColor, vUv.xy + ( vec2( -0.15, -0.37 ) * aspectcorrect ) * dofblur );\",\"col += texture2D( tColor, vUv.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur );\",\"col += texture2D( tColor, vUv.xy + ( vec2( -0.15,  0.37 ) * aspectcorrect ) * dofblur );\",\"col += texture2D( tColor, vUv.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur );\",\"col += texture2D( tColor, vUv.xy + ( vec2(  0.37,  0.15 ) * aspectcorrect ) * dofblur );\",\"col += texture2D( tColor, vUv.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur );\",\"col += texture2D( tColor, vUv.xy + ( vec2( -0.37, -0.15 ) * aspectcorrect ) * dofblur );\",\"col += texture2D( tColor, vUv.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur );\",\"col += texture2D( tColor, vUv.xy + ( vec2(  0.15, -0.37 ) * aspectcorrect ) * dofblur );\",\"col += texture2D( tColor, vUv.xy + ( vec2(  0.15,  0.37 ) * aspectcorrect ) * dofblur9 );\",\"col += texture2D( tColor, vUv.xy + ( vec2( -0.37,  0.15 ) * aspectcorrect ) * dofblur9 );\",\"col += texture2D( tColor, vUv.xy + ( vec2(  0.37, -0.15 ) * aspectcorrect ) * dofblur9 );\",\"col += texture2D( tColor, vUv.xy + ( vec2( -0.15, -0.37 ) * aspectcorrect ) * dofblur9 );\",\"col += texture2D( tColor, vUv.xy + ( vec2( -0.15,  0.37 ) * aspectcorrect ) * dofblur9 );\",\"col += texture2D( tColor, vUv.xy + ( vec2(  0.37,  0.15 ) * aspectcorrect ) * dofblur9 );\",\"col += texture2D( tColor, vUv.xy + ( vec2( -0.37, -0.15 ) * aspectcorrect ) * dofblur9 );\",\"col += texture2D( tColor, vUv.xy + ( vec2(  0.15, -0.37 ) * aspectcorrect ) * dofblur9 );\",\"col += texture2D( tColor, vUv.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur7 );\",\"col += texture2D( tColor, vUv.xy + ( vec2(  0.40,  0.0  ) * aspectcorrect ) * dofblur7 );\",\"col += texture2D( tColor, vUv.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur7 );\",\"col += texture2D( tColor, vUv.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur7 );\",\"col += texture2D( tColor, vUv.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur7 );\",\"col += texture2D( tColor, vUv.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur7 );\",\"col += texture2D( tColor, vUv.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur7 );\",\"col += texture2D( tColor, vUv.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur7 );\",\"col += texture2D( tColor, vUv.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur4 );\",\"col += texture2D( tColor, vUv.xy + ( vec2(  0.4,   0.0  ) * aspectcorrect ) * dofblur4 );\",\"col += texture2D( tColor, vUv.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur4 );\",\"col += texture2D( tColor, vUv.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur4 );\",\"col += texture2D( tColor, vUv.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur4 );\",\"col += texture2D( tColor, vUv.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur4 );\",\"col += texture2D( tColor, vUv.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur4 );\",\"col += texture2D( tColor, vUv.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur4 );\",\"gl_FragColor = col / 41.0;\",\"gl_FragColor.a = 1.0;\",\"}\"].join(\"\\n\")}}},function(e,t){e.exports=function(e){e.BokehShader={uniforms:{textureWidth:{type:\"f\",value:1},textureHeight:{type:\"f\",value:1},focalDepth:{type:\"f\",value:1},focalLength:{type:\"f\",value:24},fstop:{type:\"f\",value:.9},tColor:{type:\"t\",value:null},tDepth:{type:\"t\",value:null},maxblur:{type:\"f\",value:1},showFocus:{type:\"i\",value:0},manualdof:{type:\"i\",value:0},vignetting:{type:\"i\",value:0},depthblur:{type:\"i\",value:0},threshold:{type:\"f\",value:.5},gain:{type:\"f\",value:2},bias:{type:\"f\",value:.5},fringe:{type:\"f\",value:.7},znear:{type:\"f\",value:.1},zfar:{type:\"f\",value:100},noise:{type:\"i\",value:1},dithering:{type:\"f\",value:1e-4},pentagon:{type:\"i\",value:0},shaderFocus:{type:\"i\",value:1},focusCoords:{type:\"v2\",value:new e.Vector2}},vertexShader:[\"varying vec2 vUv;\",\"void main() {\",\"vUv = uv;\",\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\"}\"].join(\"\\n\"),fragmentShader:[\"varying vec2 vUv;\",\"uniform sampler2D tColor;\",\"uniform sampler2D tDepth;\",\"uniform float textureWidth;\",\"uniform float textureHeight;\",\"const float PI = 3.14159265;\",\"uniform float focalDepth;  //focal distance value in meters, but you may use autofocus option below\",\"uniform float focalLength; //focal length in mm\",\"uniform float fstop; //f-stop value\",\"uniform bool showFocus; //show debug focus point and focal range (red = focal point, green = focal range)\",\"/*\",\"make sure that these two values are the same for your camera, otherwise distances will be wrong.\",\"*/\",\"uniform float znear; // camera clipping start\",\"uniform float zfar; // camera clipping end\",\"//------------------------------------------\",\"//user variables\",\"const int samples = SAMPLES; //samples on the first ring\",\"const int rings = RINGS; //ring count\",\"const int maxringsamples = rings * samples;\",\"uniform bool manualdof; // manual dof calculation\",\"float ndofstart = 1.0; // near dof blur start\",\"float ndofdist = 2.0; // near dof blur falloff distance\",\"float fdofstart = 1.0; // far dof blur start\",\"float fdofdist = 3.0; // far dof blur falloff distance\",\"float CoC = 0.03; //circle of confusion size in mm (35mm film = 0.03mm)\",\"uniform bool vignetting; // use optical lens vignetting\",\"float vignout = 1.3; // vignetting outer border\",\"float vignin = 0.0; // vignetting inner border\",\"float vignfade = 22.0; // f-stops till vignete fades\",\"uniform bool shaderFocus;\",\"// disable if you use external focalDepth value\",\"uniform vec2 focusCoords;\",\"// autofocus point on screen (0.0,0.0 - left lower corner, 1.0,1.0 - upper right)\",\"// if center of screen use vec2(0.5, 0.5);\",\"uniform float maxblur;\",\"//clamp value of max blur (0.0 = no blur, 1.0 default)\",\"uniform float threshold; // highlight threshold;\",\"uniform float gain; // highlight gain;\",\"uniform float bias; // bokeh edge bias\",\"uniform float fringe; // bokeh chromatic aberration / fringing\",\"uniform bool noise; //use noise instead of pattern for sample dithering\",\"uniform float dithering;\",\"uniform bool depthblur; // blur the depth buffer\",\"float dbsize = 1.25; // depth blur size\",\"/*\",\"next part is experimental\",\"not looking good with small sample and ring count\",\"looks okay starting from samples = 4, rings = 4\",\"*/\",\"uniform bool pentagon; //use pentagon as bokeh shape?\",\"float feather = 0.4; //pentagon shape feather\",\"//------------------------------------------\",\"float penta(vec2 coords) {\",\"//pentagonal shape\",\"float scale = float(rings) - 1.3;\",\"vec4  HS0 = vec4( 1.0,         0.0,         0.0,  1.0);\",\"vec4  HS1 = vec4( 0.309016994, 0.951056516, 0.0,  1.0);\",\"vec4  HS2 = vec4(-0.809016994, 0.587785252, 0.0,  1.0);\",\"vec4  HS3 = vec4(-0.809016994,-0.587785252, 0.0,  1.0);\",\"vec4  HS4 = vec4( 0.309016994,-0.951056516, 0.0,  1.0);\",\"vec4  HS5 = vec4( 0.0        ,0.0         , 1.0,  1.0);\",\"vec4  one = vec4( 1.0 );\",\"vec4 P = vec4((coords),vec2(scale, scale));\",\"vec4 dist = vec4(0.0);\",\"float inorout = -4.0;\",\"dist.x = dot( P, HS0 );\",\"dist.y = dot( P, HS1 );\",\"dist.z = dot( P, HS2 );\",\"dist.w = dot( P, HS3 );\",\"dist = smoothstep( -feather, feather, dist );\",\"inorout += dot( dist, one );\",\"dist.x = dot( P, HS4 );\",\"dist.y = HS5.w - abs( P.z );\",\"dist = smoothstep( -feather, feather, dist );\",\"inorout += dist.x;\",\"return clamp( inorout, 0.0, 1.0 );\",\"}\",\"float bdepth(vec2 coords) {\",\"// Depth buffer blur\",\"float d = 0.0;\",\"float kernel[9];\",\"vec2 offset[9];\",\"vec2 wh = vec2(1.0/textureWidth,1.0/textureHeight) * dbsize;\",\"offset[0] = vec2(-wh.x,-wh.y);\",\"offset[1] = vec2( 0.0, -wh.y);\",\"offset[2] = vec2( wh.x -wh.y);\",\"offset[3] = vec2(-wh.x,  0.0);\",\"offset[4] = vec2( 0.0,   0.0);\",\"offset[5] = vec2( wh.x,  0.0);\",\"offset[6] = vec2(-wh.x, wh.y);\",\"offset[7] = vec2( 0.0,  wh.y);\",\"offset[8] = vec2( wh.x, wh.y);\",\"kernel[0] = 1.0/16.0;   kernel[1] = 2.0/16.0;   kernel[2] = 1.0/16.0;\",\"kernel[3] = 2.0/16.0;   kernel[4] = 4.0/16.0;   kernel[5] = 2.0/16.0;\",\"kernel[6] = 1.0/16.0;   kernel[7] = 2.0/16.0;   kernel[8] = 1.0/16.0;\",\"for( int i=0; i<9; i++ ) {\",\"float tmp = texture2D(tDepth, coords + offset[i]).r;\",\"d += tmp * kernel[i];\",\"}\",\"return d;\",\"}\",\"vec3 color(vec2 coords,float blur) {\",\"//processing the sample\",\"vec3 col = vec3(0.0);\",\"vec2 texel = vec2(1.0/textureWidth,1.0/textureHeight);\",\"col.r = texture2D(tColor,coords + vec2(0.0,1.0)*texel*fringe*blur).r;\",\"col.g = texture2D(tColor,coords + vec2(-0.866,-0.5)*texel*fringe*blur).g;\",\"col.b = texture2D(tColor,coords + vec2(0.866,-0.5)*texel*fringe*blur).b;\",\"vec3 lumcoeff = vec3(0.299,0.587,0.114);\",\"float lum = dot(col.rgb, lumcoeff);\",\"float thresh = max((lum-threshold)*gain, 0.0);\",\"return col+mix(vec3(0.0),col,thresh*blur);\",\"}\",\"vec2 rand(vec2 coord) {\",\"// generating noise / pattern texture for dithering\",\"float noiseX = ((fract(1.0-coord.s*(textureWidth/2.0))*0.25)+(fract(coord.t*(textureHeight/2.0))*0.75))*2.0-1.0;\",\"float noiseY = ((fract(1.0-coord.s*(textureWidth/2.0))*0.75)+(fract(coord.t*(textureHeight/2.0))*0.25))*2.0-1.0;\",\"if (noise) {\",\"noiseX = clamp(fract(sin(dot(coord ,vec2(12.9898,78.233))) * 43758.5453),0.0,1.0)*2.0-1.0;\",\"noiseY = clamp(fract(sin(dot(coord ,vec2(12.9898,78.233)*2.0)) * 43758.5453),0.0,1.0)*2.0-1.0;\",\"}\",\"return vec2(noiseX,noiseY);\",\"}\",\"vec3 debugFocus(vec3 col, float blur, float depth) {\",\"float edge = 0.002*depth; //distance based edge smoothing\",\"float m = clamp(smoothstep(0.0,edge,blur),0.0,1.0);\",\"float e = clamp(smoothstep(1.0-edge,1.0,blur),0.0,1.0);\",\"col = mix(col,vec3(1.0,0.5,0.0),(1.0-m)*0.6);\",\"col = mix(col,vec3(0.0,0.5,1.0),((1.0-e)-(1.0-m))*0.2);\",\"return col;\",\"}\",\"float linearize(float depth) {\",\"return -zfar * znear / (depth * (zfar - znear) - zfar);\",\"}\",\"float vignette() {\",\"float dist = distance(vUv.xy, vec2(0.5,0.5));\",\"dist = smoothstep(vignout+(fstop/vignfade), vignin+(fstop/vignfade), dist);\",\"return clamp(dist,0.0,1.0);\",\"}\",\"float gather(float i, float j, int ringsamples, inout vec3 col, float w, float h, float blur) {\",\"float rings2 = float(rings);\",\"float step = PI*2.0 / float(ringsamples);\",\"float pw = cos(j*step)*i;\",\"float ph = sin(j*step)*i;\",\"float p = 1.0;\",\"if (pentagon) {\",\"p = penta(vec2(pw,ph));\",\"}\",\"col += color(vUv.xy + vec2(pw*w,ph*h), blur) * mix(1.0, i/rings2, bias) * p;\",\"return 1.0 * mix(1.0, i /rings2, bias) * p;\",\"}\",\"void main() {\",\"//scene depth calculation\",\"float depth = linearize(texture2D(tDepth,vUv.xy).x);\",\"// Blur depth?\",\"if (depthblur) {\",\"depth = linearize(bdepth(vUv.xy));\",\"}\",\"//focal plane calculation\",\"float fDepth = focalDepth;\",\"if (shaderFocus) {\",\"fDepth = linearize(texture2D(tDepth,focusCoords).x);\",\"}\",\"// dof blur factor calculation\",\"float blur = 0.0;\",\"if (manualdof) {\",\"float a = depth-fDepth; // Focal plane\",\"float b = (a-fdofstart)/fdofdist; // Far DoF\",\"float c = (-a-ndofstart)/ndofdist; // Near Dof\",\"blur = (a>0.0) ? b : c;\",\"} else {\",\"float f = focalLength; // focal length in mm\",\"float d = fDepth*1000.0; // focal plane in mm\",\"float o = depth*1000.0; // depth in mm\",\"float a = (o*f)/(o-f);\",\"float b = (d*f)/(d-f);\",\"float c = (d-f)/(d*fstop*CoC);\",\"blur = abs(a-b)*c;\",\"}\",\"blur = clamp(blur,0.0,1.0);\",\"// calculation of pattern for dithering\",\"vec2 noise = rand(vUv.xy)*dithering*blur;\",\"// getting blur x and y step factor\",\"float w = (1.0/textureWidth)*blur*maxblur+noise.x;\",\"float h = (1.0/textureHeight)*blur*maxblur+noise.y;\",\"// calculation of final color\",\"vec3 col = vec3(0.0);\",\"if(blur < 0.05) {\",\"//some optimization thingy\",\"col = texture2D(tColor, vUv.xy).rgb;\",\"} else {\",\"col = texture2D(tColor, vUv.xy).rgb;\",\"float s = 1.0;\",\"int ringsamples;\",\"for (int i = 1; i <= rings; i++) {\",\"/*unboxstart*/\",\"ringsamples = i * samples;\",\"for (int j = 0 ; j < maxringsamples ; j++) {\",\"if (j >= ringsamples) break;\",\"s += gather(float(i), float(j), ringsamples, col, w, h, blur);\",\"}\",\"/*unboxend*/\",\"}\",\"col /= s; //divide by sample count\",\"}\",\"if (showFocus) {\",\"col = debugFocus(col, blur, depth);\",\"}\",\"if (vignetting) {\",\"col *= vignette();\",\"}\",\"gl_FragColor.rgb = col;\",\"gl_FragColor.a = 1.0;\",\"} \"].join(\"\\n\")}}},function(e,t){e.exports=function(e){e.BrightnessContrastShader={uniforms:{tDiffuse:{type:\"t\",value:null},brightness:{type:\"f\",value:0},contrast:{type:\"f\",value:0}},vertexShader:[\"varying vec2 vUv;\",\"void main() {\",\"vUv = uv;\",\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\"}\"].join(\"\\n\"),fragmentShader:[\"uniform sampler2D tDiffuse;\",\"uniform float brightness;\",\"uniform float contrast;\",\"varying vec2 vUv;\",\"void main() {\",\"gl_FragColor = texture2D( tDiffuse, vUv );\",\"gl_FragColor.rgb += brightness;\",\"if (contrast > 0.0) {\",\"gl_FragColor.rgb = (gl_FragColor.rgb - 0.5) / (1.0 - contrast) + 0.5;\",\"} else {\",\"gl_FragColor.rgb = (gl_FragColor.rgb - 0.5) * (1.0 + contrast) + 0.5;\",\"}\",\"}\"].join(\"\\n\")}}},function(e,t){e.exports=function(e){e.SpriteCanvasMaterial=function(t){e.Material.call(this),this.type=\"SpriteCanvasMaterial\",this.color=new e.Color(16777215),this.program=function(e,t){},this.setValues(t)},e.SpriteCanvasMaterial.prototype=Object.create(e.Material.prototype),e.SpriteCanvasMaterial.prototype.constructor=e.SpriteCanvasMaterial,e.SpriteCanvasMaterial.prototype.clone=function(){var t=new e.SpriteCanvasMaterial;return t.copy(this),t.color.copy(this.color),t.program=this.program,t},e.CanvasRenderer=function(t){console.log(\"THREE.CanvasRenderer\",e.REVISION),t=t||{};var r,n,i,o,a,s,c,l,u,h,d,p,f,m,v,g,y,x,b,w=this,_=new e.Projector,M=void 0!==t.canvas?t.canvas:document.createElement(\"canvas\"),S=M.width,T=M.height,E=Math.floor(S/2),C=Math.floor(T/2),A=0,L=0,R=S,P=T,D=1,U=M.getContext(\"2d\",{alpha:!0===t.alpha}),I=new e.Color(0),F=!0===t.alpha?0:1,N=1,B=0,O=null,V=null,G=null,z=null,k=null,j=[],H=(new e.RenderableVertex,new e.RenderableVertex,new e.Color),W=(new e.Color,new e.Color,new e.Color,new e.Color,new e.Color),X=new e.Color,q=new e.Color,Y={},Z=new e.Box2,K=new e.Box2,Q=new e.Box2,J=new e.Color,$=new e.Color,ee=new e.Color,te=new e.Vector3,re=new e.Vector3,ne=new e.Vector3,ie=new e.Matrix3;function oe(t,r,n){pe(n.opacity),fe(n.blending);var i=r.scale.x*E,o=r.scale.y*C,a=.5*Math.sqrt(i*i+o*o);if(Q.min.set(t.x-a,t.y-a),Q.max.set(t.x+a,t.y+a),n instanceof e.SpriteMaterial){var s=n.map;if(null!==s){var c=Y[s.id];if(void 0!==c&&c.version===s.version||(c=ue(s),Y[s.id]=c),void 0!==c.canvas){xe(c.canvas);var l=s.image,u=l.width*s.offset.x,h=l.height*s.offset.y,d=l.width*s.repeat.x,p=l.height*s.repeat.y,f=i/d,m=o/p;U.save(),U.translate(t.x,t.y),0!==n.rotation&&U.rotate(n.rotation),U.translate(-i/2,-o/2),U.scale(f,m),U.translate(-u,-h),U.fillRect(u,h,d,p),U.restore()}}else xe(n.color.getStyle()),U.save(),U.translate(t.x,t.y),0!==n.rotation&&U.rotate(n.rotation),U.scale(i,-o),U.fillRect(-.5,-.5,1,1),U.restore()}else n instanceof e.SpriteCanvasMaterial&&(ye(n.color.getStyle()),xe(n.color.getStyle()),U.save(),U.translate(t.x,t.y),0!==n.rotation&&U.rotate(n.rotation),U.scale(i,o),n.program(U),U.restore())}function ae(t,r,n,i){if(pe(i.opacity),fe(i.blending),U.beginPath(),U.moveTo(t.positionScreen.x,t.positionScreen.y),U.lineTo(r.positionScreen.x,r.positionScreen.y),i instanceof e.LineBasicMaterial){if(me(i.linewidth),ve(i.linecap),ge(i.linejoin),i.vertexColors!==e.VertexColors)ye(i.color.getStyle());else{var o=n.vertexColors[0].getStyle(),a=n.vertexColors[1].getStyle();if(o===a)ye(o);else{try{var s=U.createLinearGradient(t.positionScreen.x,t.positionScreen.y,r.positionScreen.x,r.positionScreen.y);s.addColorStop(0,o),s.addColorStop(1,a)}catch(e){s=o}ye(s)}}U.stroke(),Q.expandByScalar(2*i.linewidth)}else i instanceof e.LineDashedMaterial&&(me(i.linewidth),ve(i.linecap),ge(i.linejoin),ye(i.color.getStyle()),be([i.dashSize,i.gapSize]),U.stroke(),Q.expandByScalar(2*i.linewidth),be([]))}function se(t,r,n,o,a,s,_,M){var S,T,E,C,A,L;if(w.info.render.vertices+=3,w.info.render.faces++,pe(M.opacity),fe(M.blending),c=t.positionScreen.x,l=t.positionScreen.y,u=r.positionScreen.x,h=r.positionScreen.y,d=n.positionScreen.x,p=n.positionScreen.y,S=c,T=l,E=u,C=h,A=d,L=p,U.beginPath(),U.moveTo(S,T),U.lineTo(E,C),U.lineTo(A,L),U.closePath(),(M instanceof e.MeshLambertMaterial||M instanceof e.MeshPhongMaterial)&&null===M.map)W.copy(M.color),X.copy(M.emissive),M.vertexColors===e.FaceColors&&W.multiply(_.color),H.copy(J),re.copy(t.positionWorld).add(r.positionWorld).add(n.positionWorld).divideScalar(3),function(t,r,n){for(var o=0,a=i.length;o<a;o++){var s=i[o];if(q.copy(s.color),s instanceof e.DirectionalLight){var c=te.setFromMatrixPosition(s.matrixWorld).normalize();if((l=r.dot(c))<=0)continue;l*=s.intensity,n.add(q.multiplyScalar(l))}else if(s instanceof e.PointLight){var l;if(c=te.setFromMatrixPosition(s.matrixWorld),(l=r.dot(te.subVectors(c,t).normalize()))<=0)continue;if(0==(l*=0==s.distance?1:1-Math.min(t.distanceTo(c)/s.distance,1)))continue;l*=s.intensity,n.add(q.multiplyScalar(l))}}}(re,_.normalModel,H),H.multiply(W).add(X),!0===M.wireframe?ce(H,M.wireframeLinewidth,M.wireframeLinecap,M.wireframeLinejoin):le(H);else if(M instanceof e.MeshBasicMaterial||M instanceof e.MeshLambertMaterial||M instanceof e.MeshPhongMaterial){if(null!==M.map)M.map.mapping===e.UVMapping&&(f=_.uvs,he(c,l,u,h,d,p,f[o].x,f[o].y,f[a].x,f[a].y,f[s].x,f[s].y,M.map));else null!==M.envMap?M.envMap.mapping===e.SphericalReflectionMapping&&(ne.copy(_.vertexNormalsModel[o]).applyMatrix3(ie),m=.5*ne.x+.5,v=.5*ne.y+.5,ne.copy(_.vertexNormalsModel[a]).applyMatrix3(ie),g=.5*ne.x+.5,y=.5*ne.y+.5,ne.copy(_.vertexNormalsModel[s]).applyMatrix3(ie),x=.5*ne.x+.5,b=.5*ne.y+.5,he(c,l,u,h,d,p,m,v,g,y,x,b,M.envMap)):(H.copy(M.color),M.vertexColors===e.FaceColors&&H.multiply(_.color),!0===M.wireframe?ce(H,M.wireframeLinewidth,M.wireframeLinecap,M.wireframeLinejoin):le(H))}else M instanceof e.MeshNormalMaterial?(ne.copy(_.normalModel).applyMatrix3(ie),H.setRGB(ne.x,ne.y,ne.z).multiplyScalar(.5).addScalar(.5),!0===M.wireframe?ce(H,M.wireframeLinewidth,M.wireframeLinecap,M.wireframeLinejoin):le(H)):(H.setRGB(1,1,1),!0===M.wireframe?ce(H,M.wireframeLinewidth,M.wireframeLinecap,M.wireframeLinejoin):le(H))}function ce(e,t,r,n){me(t),ve(r),ge(n),ye(e.getStyle()),U.stroke(),Q.expandByScalar(2*t)}function le(e){xe(e.getStyle()),U.fill()}function ue(t){if(0===t.version||t instanceof e.CompressedTexture||t instanceof e.DataTexture)return{canvas:void 0,version:t.version};var r=t.image;if(!1===r.complete)return{canvas:void 0,version:0};var n=document.createElement(\"canvas\");n.width=r.width,n.height=r.height;var i=n.getContext(\"2d\");i.setTransform(1,0,0,-1,0,r.height),i.drawImage(r,0,0);var o=t.wrapS===e.RepeatWrapping,a=t.wrapT===e.RepeatWrapping,s=\"no-repeat\";!0===o&&!0===a?s=\"repeat\":!0===o?s=\"repeat-x\":!0===a&&(s=\"repeat-y\");var c=U.createPattern(n,s);return t.onUpdate&&t.onUpdate(t),{canvas:c,version:t.version}}function he(e,t,r,n,i,o,a,s,c,l,u,h,d){var p=Y[d.id];if(void 0!==p&&p.version===d.version||(p=ue(d),Y[d.id]=p),void 0===p.canvas)return xe(\"rgba( 0, 0, 0, 1)\"),void U.fill();xe(p.canvas);var f,m,v,g,y,x,b,w,_=d.offset.x/d.repeat.x,M=d.offset.y/d.repeat.y,S=d.image.width*d.repeat.x,T=d.image.height*d.repeat.y;c=(c+_)*S,l=(l+M)*T,u=(u+_)*S,h=(h+M)*T,r-=e,n-=t,i-=e,o-=t,0!==(b=(c-=a=(a+_)*S)*(h-=s=(s+M)*T)-(u-=a)*(l-=s))&&(y=e-(f=(h*r-l*i)*(w=1/b))*a-(v=(c*i-u*r)*w)*s,x=t-(m=(h*n-l*o)*w)*a-(g=(c*o-u*n)*w)*s,U.save(),U.transform(f,m,v,g,y,x),U.fill(),U.restore())}function de(e,t,r){var n,i=t.x-e.x,o=t.y-e.y,a=i*i+o*o;0!==a&&(i*=n=r/Math.sqrt(a),o*=n,t.x+=i,t.y+=o,e.x-=i,e.y-=o)}function pe(e){N!==e&&(U.globalAlpha=e,N=e)}function fe(t){B!==t&&(t===e.NormalBlending?U.globalCompositeOperation=\"source-over\":t===e.AdditiveBlending?U.globalCompositeOperation=\"lighter\":t===e.SubtractiveBlending&&(U.globalCompositeOperation=\"darker\"),B=t)}function me(e){G!==e&&(U.lineWidth=e,G=e)}function ve(e){z!==e&&(U.lineCap=e,z=e)}function ge(e){k!==e&&(U.lineJoin=e,k=e)}function ye(e){O!==e&&(U.strokeStyle=e,O=e)}function xe(e){V!==e&&(U.fillStyle=e,V=e)}function be(e){j.length!==e.length&&(U.setLineDash(e),j=e)}void 0===U.setLineDash&&(U.setLineDash=function(){}),this.domElement=M,this.autoClear=!0,this.sortObjects=!0,this.sortElements=!0,this.info={render:{vertices:0,faces:0}},this.supportsVertexTextures=function(){},this.setFaceCulling=function(){},this.getContext=function(){return U},this.getContextAttributes=function(){return U.getContextAttributes()},this.getPixelRatio=function(){return D},this.setPixelRatio=function(e){void 0!==e&&(D=e)},this.setSize=function(e,t,r){S=e*D,T=t*D,M.width=S,M.height=T,E=Math.floor(S/2),C=Math.floor(T/2),!1!==r&&(M.style.width=e+\"px\",M.style.height=t+\"px\"),Z.min.set(-E,-C),Z.max.set(E,C),K.min.set(-E,-C),K.max.set(E,C),N=1,B=0,O=null,V=null,G=null,z=null,k=null,this.setViewport(0,0,e,t)},this.setViewport=function(e,t,r,n){A=e*D,L=t*D,R=r*D,P=n*D},this.setScissor=function(){},this.setScissorTest=function(){},this.setClearColor=function(e,t){I.set(e),F=void 0!==t?t:1,K.min.set(-E,-C),K.max.set(E,C)},this.setClearColorHex=function(e,t){console.warn(\"THREE.CanvasRenderer: .setClearColorHex() is being removed. Use .setClearColor() instead.\"),this.setClearColor(e,t)},this.getClearColor=function(){return I},this.getClearAlpha=function(){return F},this.getMaxAnisotropy=function(){return 0},this.clear=function(){!1===K.isEmpty()&&(K.intersect(Z),K.expandByScalar(2),K.min.x=K.min.x+E,K.min.y=-K.min.y+C,K.max.x=K.max.x+E,K.max.y=-K.max.y+C,F<1&&U.clearRect(0|K.min.x,0|K.max.y,K.max.x-K.min.x|0,K.min.y-K.max.y|0),F>0&&(fe(e.NormalBlending),pe(1),xe(\"rgba(\"+Math.floor(255*I.r)+\",\"+Math.floor(255*I.g)+\",\"+Math.floor(255*I.b)+\",\"+F+\")\"),U.fillRect(0|K.min.x,0|K.max.y,K.max.x-K.min.x|0,K.min.y-K.max.y|0)),K.makeEmpty())},this.clearColor=function(){},this.clearDepth=function(){},this.clearStencil=function(){},this.render=function(t,c){if(c instanceof e.Camera!=!1){!0===this.autoClear&&this.clear(),w.info.render.vertices=0,w.info.render.faces=0,U.setTransform(R/S,0,0,-P/T,A,T-L),U.translate(E,C),r=_.projectScene(t,c,this.sortObjects,this.sortElements),n=r.elements,i=r.lights,c,ie.getNormalMatrix(c.matrixWorldInverse),function(){J.setRGB(0,0,0),$.setRGB(0,0,0),ee.setRGB(0,0,0);for(var t=0,r=i.length;t<r;t++){var n=i[t],o=n.color;n instanceof e.AmbientLight?J.add(o):n instanceof e.DirectionalLight?$.add(o):n instanceof e.PointLight&&ee.add(o)}}();for(var l=0,u=n.length;l<u;l++){var h=n[l],d=h.material;if(void 0!==d&&0!==d.opacity){if(Q.makeEmpty(),h instanceof e.RenderableSprite)(o=h).x*=E,o.y*=C,oe(o,h,d);else if(h instanceof e.RenderableLine)o=h.v1,a=h.v2,o.positionScreen.x*=E,o.positionScreen.y*=C,a.positionScreen.x*=E,a.positionScreen.y*=C,Q.setFromPoints([o.positionScreen,a.positionScreen]),!0===Z.intersectsBox(Q)&&ae(o,a,h,d);else if(h instanceof e.RenderableFace){if(o=h.v1,a=h.v2,s=h.v3,o.positionScreen.z<-1||o.positionScreen.z>1)continue;if(a.positionScreen.z<-1||a.positionScreen.z>1)continue;if(s.positionScreen.z<-1||s.positionScreen.z>1)continue;o.positionScreen.x*=E,o.positionScreen.y*=C,a.positionScreen.x*=E,a.positionScreen.y*=C,s.positionScreen.x*=E,s.positionScreen.y*=C,d.overdraw>0&&(de(o.positionScreen,a.positionScreen,d.overdraw),de(a.positionScreen,s.positionScreen,d.overdraw),de(s.positionScreen,o.positionScreen,d.overdraw)),Q.setFromPoints([o.positionScreen,a.positionScreen,s.positionScreen]),!0===Z.intersectsBox(Q)&&se(o,a,s,0,1,2,h,d)}K.union(Q)}}U.setTransform(1,0,0,1,0,0)}else console.error(\"THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.\")}}}},function(e,t){e.exports=function(e){e.ColorCorrectionShader={uniforms:{tDiffuse:{type:\"t\",value:null},powRGB:{type:\"v3\",value:new e.Vector3(2,2,2)},mulRGB:{type:\"v3\",value:new e.Vector3(1,1,1)},addRGB:{type:\"v3\",value:new e.Vector3(0,0,0)}},vertexShader:[\"varying vec2 vUv;\",\"void main() {\",\"vUv = uv;\",\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\"}\"].join(\"\\n\"),fragmentShader:[\"uniform sampler2D tDiffuse;\",\"uniform vec3 powRGB;\",\"uniform vec3 mulRGB;\",\"uniform vec3 addRGB;\",\"varying vec2 vUv;\",\"void main() {\",\"gl_FragColor = texture2D( tDiffuse, vUv );\",\"gl_FragColor.rgb = mulRGB * pow( ( gl_FragColor.rgb + addRGB ), powRGB );\",\"}\"].join(\"\\n\")}}},function(e,t){e.exports=function(e){e.ColorifyShader={uniforms:{tDiffuse:{type:\"t\",value:null},color:{type:\"c\",value:new e.Color(16777215)}},vertexShader:[\"varying vec2 vUv;\",\"void main() {\",\"vUv = uv;\",\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\"}\"].join(\"\\n\"),fragmentShader:[\"uniform vec3 color;\",\"uniform sampler2D tDiffuse;\",\"varying vec2 vUv;\",\"void main() {\",\"vec4 texel = texture2D( tDiffuse, vUv );\",\"vec3 luma = vec3( 0.299, 0.587, 0.114 );\",\"float v = dot( texel.xyz, luma );\",\"gl_FragColor = vec4( v * color, texel.w );\",\"}\"].join(\"\\n\")}}},function(e,t){e.exports=function(e){e.ConvolutionShader={defines:{KERNEL_SIZE_FLOAT:\"25.0\",KERNEL_SIZE_INT:\"25\"},uniforms:{tDiffuse:{type:\"t\",value:null},uImageIncrement:{type:\"v2\",value:new e.Vector2(.001953125,0)},cKernel:{type:\"fv1\",value:[]}},vertexShader:[\"uniform vec2 uImageIncrement;\",\"varying vec2 vUv;\",\"void main() {\",\"vUv = uv - ( ( KERNEL_SIZE_FLOAT - 1.0 ) / 2.0 ) * uImageIncrement;\",\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\"}\"].join(\"\\n\"),fragmentShader:[\"uniform float cKernel[ KERNEL_SIZE_INT ];\",\"uniform sampler2D tDiffuse;\",\"uniform vec2 uImageIncrement;\",\"varying vec2 vUv;\",\"void main() {\",\"vec2 imageCoord = vUv;\",\"vec4 sum = vec4( 0.0, 0.0, 0.0, 0.0 );\",\"for( int i = 0; i < KERNEL_SIZE_INT; i ++ ) {\",\"sum += texture2D( tDiffuse, imageCoord ) * cKernel[ i ];\",\"imageCoord += uImageIncrement;\",\"}\",\"gl_FragColor = sum;\",\"}\"].join(\"\\n\"),buildKernel:function(e){function t(e,t){return Math.exp(-e*e/(2*t*t))}var r,n,i,o,a=2*Math.ceil(3*e)+1;for(a>25&&(a=25),o=.5*(a-1),n=new Array(a),i=0,r=0;r<a;++r)n[r]=t(r-o,e),i+=n[r];for(r=0;r<a;++r)n[r]/=i;return n}}}},function(e,t){e.exports=function(e){e.CopyShader={uniforms:{tDiffuse:{type:\"t\",value:null},opacity:{type:\"f\",value:1}},vertexShader:[\"varying vec2 vUv;\",\"void main() {\",\"vUv = uv;\",\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\"}\"].join(\"\\n\"),fragmentShader:[\"uniform float opacity;\",\"uniform sampler2D tDiffuse;\",\"varying vec2 vUv;\",\"void main() {\",\"vec4 texel = texture2D( tDiffuse, vUv );\",\"gl_FragColor = opacity * texel;\",\"}\"].join(\"\\n\")}}},function(e,t){e.exports=function(e){e.DDSLoader=function(){this._parser=e.DDSLoader.parse},e.DDSLoader.prototype=Object.create(e.CompressedTextureLoader.prototype),e.DDSLoader.prototype.constructor=e.DDSLoader,e.DDSLoader.parse=function(t,r){var n={mipmaps:[],width:0,height:0,format:null,mipmapCount:1};function i(e){return e.charCodeAt(0)+(e.charCodeAt(1)<<8)+(e.charCodeAt(2)<<16)+(e.charCodeAt(3)<<24)}function o(e,t,r,n){for(var i=r*n*4,o=new Uint8Array(e,t,i),a=new Uint8Array(i),s=0,c=0,l=0;l<n;l++)for(var u=0;u<r;u++){var h=o[c],d=o[++c],p=o[++c],f=o[++c];c++,a[s]=p,a[++s]=d,a[++s]=h,a[++s]=f,s++}return a}var a,s=i(\"DXT1\"),c=i(\"DXT3\"),l=i(\"DXT5\"),u=i(\"ETC1\"),h=new Int32Array(t,0,31);if(542327876!==h[0])return console.error(\"THREE.DDSLoader.parse: Invalid magic number in DDS header.\"),n;if(4&!h[20])return console.error(\"THREE.DDSLoader.parse: Unsupported format, must contain a FourCC code.\"),n;var d,p=h[21],f=!1;switch(p){case s:a=8,n.format=e.RGB_S3TC_DXT1_Format;break;case c:a=16,n.format=e.RGBA_S3TC_DXT3_Format;break;case l:a=16,n.format=e.RGBA_S3TC_DXT5_Format;break;case u:a=8,n.format=e.RGB_ETC1_Format;break;default:if(!(32===h[22]&&16711680&h[23]&&65280&h[24]&&255&h[25]&&4278190080&h[26]))return console.error(\"THREE.DDSLoader.parse: Unsupported FourCC code \",(d=p,String.fromCharCode(255&d,d>>8&255,d>>16&255,d>>24&255))),n;f=!0,a=64,n.format=e.RGBAFormat}n.mipmapCount=1,131072&h[2]&&!1!==r&&(n.mipmapCount=Math.max(1,h[7]));var m=h[28];if(n.isCubemap=!!(512&m),n.isCubemap&&(!(1024&m)||!(2048&m)||!(4096&m)||!(8192&m)||!(16384&m)||!(32768&m)))return console.error(\"THREE.DDSLoader.parse: Incomplete cubemap faces\"),n;n.width=h[4],n.height=h[3];for(var v=h[1]+4,g=n.isCubemap?6:1,y=0;y<g;y++)for(var x=n.width,b=n.height,w=0;w<n.mipmapCount;w++){if(f)var _=(M=o(t,v,x,b)).length;else{_=Math.max(4,x)/4*Math.max(4,b)/4*a;var M=new Uint8Array(t,v,_)}var S={data:M,width:x,height:b};n.mipmaps.push(S),v+=_,x=Math.max(x>>1,1),b=Math.max(b>>1,1)}return n}}},function(e,t){e.exports=function(e){e.DOFMipMapShader={uniforms:{tColor:{type:\"t\",value:null},tDepth:{type:\"t\",value:null},focus:{type:\"f\",value:1},maxblur:{type:\"f\",value:1}},vertexShader:[\"varying vec2 vUv;\",\"void main() {\",\"vUv = uv;\",\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\"}\"].join(\"\\n\"),fragmentShader:[\"uniform float focus;\",\"uniform float maxblur;\",\"uniform sampler2D tColor;\",\"uniform sampler2D tDepth;\",\"varying vec2 vUv;\",\"void main() {\",\"vec4 depth = texture2D( tDepth, vUv );\",\"float factor = depth.x - focus;\",\"vec4 col = texture2D( tColor, vUv, 2.0 * maxblur * abs( focus - depth.x ) );\",\"gl_FragColor = col;\",\"gl_FragColor.a = 1.0;\",\"}\"].join(\"\\n\")}}},function(e,t){e.exports=function(e){e.DigitalGlitch={uniforms:{tDiffuse:{type:\"t\",value:null},tDisp:{type:\"t\",value:null},byp:{type:\"i\",value:0},amount:{type:\"f\",value:.08},angle:{type:\"f\",value:.02},seed:{type:\"f\",value:.02},seed_x:{type:\"f\",value:.02},seed_y:{type:\"f\",value:.02},distortion_x:{type:\"f\",value:.5},distortion_y:{type:\"f\",value:.6},col_s:{type:\"f\",value:.05}},vertexShader:[\"varying vec2 vUv;\",\"void main() {\",\"vUv = uv;\",\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\"}\"].join(\"\\n\"),fragmentShader:[\"uniform int byp;\",\"uniform sampler2D tDiffuse;\",\"uniform sampler2D tDisp;\",\"uniform float amount;\",\"uniform float angle;\",\"uniform float seed;\",\"uniform float seed_x;\",\"uniform float seed_y;\",\"uniform float distortion_x;\",\"uniform float distortion_y;\",\"uniform float col_s;\",\"varying vec2 vUv;\",\"float rand(vec2 co){\",\"return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\",\"}\",\"void main() {\",\"if(byp<1) {\",\"vec2 p = vUv;\",\"float xs = floor(gl_FragCoord.x / 0.5);\",\"float ys = floor(gl_FragCoord.y / 0.5);\",\"vec4 normal = texture2D (tDisp, p*seed*seed);\",\"if(p.y<distortion_x+col_s && p.y>distortion_x-col_s*seed) {\",\"if(seed_x>0.){\",\"p.y = 1. - (p.y + distortion_y);\",\"}\",\"else {\",\"p.y = distortion_y;\",\"}\",\"}\",\"if(p.x<distortion_y+col_s && p.x>distortion_y-col_s*seed) {\",\"if(seed_y>0.){\",\"p.x=distortion_x;\",\"}\",\"else {\",\"p.x = 1. - (p.x + distortion_x);\",\"}\",\"}\",\"p.x+=normal.x*seed_x*(seed/5.);\",\"p.y+=normal.y*seed_y*(seed/5.);\",\"vec2 offset = amount * vec2( cos(angle), sin(angle));\",\"vec4 cr = texture2D(tDiffuse, p + offset);\",\"vec4 cga = texture2D(tDiffuse, p);\",\"vec4 cb = texture2D(tDiffuse, p - offset);\",\"gl_FragColor = vec4(cr.r, cga.g, cb.b, cga.a);\",\"vec4 snow = 200.*amount*vec4(rand(vec2(xs * seed,ys * seed*50.))*0.2);\",\"gl_FragColor = gl_FragColor+ snow;\",\"}\",\"else {\",\"gl_FragColor=texture2D (tDiffuse, vUv);\",\"}\",\"}\"].join(\"\\n\")}}},function(e,t){e.exports=function(e){e.DotScreenPass=function(t,r,n){void 0===e.DotScreenShader&&console.error(\"THREE.DotScreenPass relies on THREE.DotScreenShader\");var i=e.DotScreenShader;this.uniforms=e.UniformsUtils.clone(i.uniforms),void 0!==t&&this.uniforms.center.value.copy(t),void 0!==r&&(this.uniforms.angle.value=r),void 0!==n&&(this.uniforms.scale.value=n),this.material=new e.ShaderMaterial({uniforms:this.uniforms,vertexShader:i.vertexShader,fragmentShader:i.fragmentShader}),this.enabled=!0,this.renderToScreen=!1,this.needsSwap=!0,this.camera=new e.OrthographicCamera(-1,1,1,-1,0,1),this.scene=new e.Scene,this.quad=new e.Mesh(new e.PlaneBufferGeometry(2,2),null),this.scene.add(this.quad)},e.DotScreenPass.prototype={render:function(e,t,r,n){this.uniforms.tDiffuse.value=r,this.uniforms.tSize.value.set(r.width,r.height),this.quad.material=this.material,this.renderToScreen?e.render(this.scene,this.camera):e.render(this.scene,this.camera,t,!1)}}}},function(e,t){e.exports=function(e){e.DotScreenShader={uniforms:{tDiffuse:{type:\"t\",value:null},tSize:{type:\"v2\",value:new e.Vector2(256,256)},center:{type:\"v2\",value:new e.Vector2(.5,.5)},angle:{type:\"f\",value:1.57},scale:{type:\"f\",value:1}},vertexShader:[\"varying vec2 vUv;\",\"void main() {\",\"vUv = uv;\",\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\"}\"].join(\"\\n\"),fragmentShader:[\"uniform vec2 center;\",\"uniform float angle;\",\"uniform float scale;\",\"uniform vec2 tSize;\",\"uniform sampler2D tDiffuse;\",\"varying vec2 vUv;\",\"float pattern() {\",\"float s = sin( angle ), c = cos( angle );\",\"vec2 tex = vUv * tSize - center;\",\"vec2 point = vec2( c * tex.x - s * tex.y, s * tex.x + c * tex.y ) * scale;\",\"return ( sin( point.x ) * sin( point.y ) ) * 4.0;\",\"}\",\"void main() {\",\"vec4 color = texture2D( tDiffuse, vUv );\",\"float average = ( color.r + color.g + color.b ) / 3.0;\",\"gl_FragColor = vec4( vec3( average * 10.0 - 5.0 + pattern() ), color.a );\",\"}\"].join(\"\\n\")}}},function(e,t){e.exports=function(e){e.EdgeShader={uniforms:{tDiffuse:{type:\"t\",value:null},aspect:{type:\"v2\",value:new e.Vector2(512,512)}},vertexShader:[\"varying vec2 vUv;\",\"void main() {\",\"vUv = uv;\",\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\"}\"].join(\"\\n\"),fragmentShader:[\"uniform sampler2D tDiffuse;\",\"varying vec2 vUv;\",\"uniform vec2 aspect;\",\"vec2 texel = vec2(1.0 / aspect.x, 1.0 / aspect.y);\",\"mat3 G[9];\",\"const mat3 g0 = mat3( 0.3535533845424652, 0, -0.3535533845424652, 0.5, 0, -0.5, 0.3535533845424652, 0, -0.3535533845424652 );\",\"const mat3 g1 = mat3( 0.3535533845424652, 0.5, 0.3535533845424652, 0, 0, 0, -0.3535533845424652, -0.5, -0.3535533845424652 );\",\"const mat3 g2 = mat3( 0, 0.3535533845424652, -0.5, -0.3535533845424652, 0, 0.3535533845424652, 0.5, -0.3535533845424652, 0 );\",\"const mat3 g3 = mat3( 0.5, -0.3535533845424652, 0, -0.3535533845424652, 0, 0.3535533845424652, 0, 0.3535533845424652, -0.5 );\",\"const mat3 g4 = mat3( 0, -0.5, 0, 0.5, 0, 0.5, 0, -0.5, 0 );\",\"const mat3 g5 = mat3( -0.5, 0, 0.5, 0, 0, 0, 0.5, 0, -0.5 );\",\"const mat3 g6 = mat3( 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.6666666865348816, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204 );\",\"const mat3 g7 = mat3( -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, 0.6666666865348816, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408 );\",\"const mat3 g8 = mat3( 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408 );\",\"void main(void)\",\"{\",\"G[0] = g0,\",\"G[1] = g1,\",\"G[2] = g2,\",\"G[3] = g3,\",\"G[4] = g4,\",\"G[5] = g5,\",\"G[6] = g6,\",\"G[7] = g7,\",\"G[8] = g8;\",\"mat3 I;\",\"float cnv[9];\",\"vec3 sample;\",\"for (float i=0.0; i<3.0; i++) {\",\"for (float j=0.0; j<3.0; j++) {\",\"sample = texture2D(tDiffuse, vUv + texel * vec2(i-1.0,j-1.0) ).rgb;\",\"I[int(i)][int(j)] = length(sample);\",\"}\",\"}\",\"for (int i=0; i<9; i++) {\",\"float dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\",\"cnv[i] = dp3 * dp3;\",\"}\",\"float M = (cnv[0] + cnv[1]) + (cnv[2] + cnv[3]);\",\"float S = (cnv[4] + cnv[5]) + (cnv[6] + cnv[7]) + (cnv[8] + M);\",\"gl_FragColor = vec4(vec3(sqrt(M/S)), 1.0);\",\"}\"].join(\"\\n\")}}},function(e,t){e.exports=function(e){e.EdgeShader2={uniforms:{tDiffuse:{type:\"t\",value:null},aspect:{type:\"v2\",value:new e.Vector2(512,512)}},vertexShader:[\"varying vec2 vUv;\",\"void main() {\",\"vUv = uv;\",\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\"}\"].join(\"\\n\"),fragmentShader:[\"uniform sampler2D tDiffuse;\",\"varying vec2 vUv;\",\"uniform vec2 aspect;\",\"vec2 texel = vec2(1.0 / aspect.x, 1.0 / aspect.y);\",\"mat3 G[2];\",\"const mat3 g0 = mat3( 1.0, 2.0, 1.0, 0.0, 0.0, 0.0, -1.0, -2.0, -1.0 );\",\"const mat3 g1 = mat3( 1.0, 0.0, -1.0, 2.0, 0.0, -2.0, 1.0, 0.0, -1.0 );\",\"void main(void)\",\"{\",\"mat3 I;\",\"float cnv[2];\",\"vec3 sample;\",\"G[0] = g0;\",\"G[1] = g1;\",\"for (float i=0.0; i<3.0; i++)\",\"for (float j=0.0; j<3.0; j++) {\",\"sample = texture2D( tDiffuse, vUv + texel * vec2(i-1.0,j-1.0) ).rgb;\",\"I[int(i)][int(j)] = length(sample);\",\"}\",\"for (int i=0; i<2; i++) {\",\"float dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\",\"cnv[i] = dp3 * dp3; \",\"}\",\"gl_FragColor = vec4(0.5 * sqrt(cnv[0]*cnv[0]+cnv[1]*cnv[1]));\",\"} \"].join(\"\\n\")}}},function(e,t){e.exports=function(e){e.EffectComposer=function(t,r){if(this.renderer=t,void 0===r){var n=t.getPixelRatio(),i=Math.floor(t.context.canvas.width/n)||1,o=Math.floor(t.context.canvas.height/n)||1,a={minFilter:e.LinearFilter,magFilter:e.LinearFilter,format:e.RGBFormat,stencilBuffer:!1};r=new e.WebGLRenderTarget(i,o,a)}this.renderTarget1=r,this.renderTarget2=r.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.passes=[],void 0===e.CopyShader&&console.error(\"THREE.EffectComposer relies on THREE.CopyShader\"),this.copyPass=new e.ShaderPass(e.CopyShader)},e.EffectComposer.prototype={swapBuffers:function(){var e=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=e},addPass:function(e){this.passes.push(e)},insertPass:function(e,t){this.passes.splice(t,0,e)},render:function(t){this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2;var r,n,i=!1,o=this.passes.length;for(n=0;n<o;n++)if((r=this.passes[n]).enabled){if(r.render(this.renderer,this.writeBuffer,this.readBuffer,t,i),r.needsSwap){if(i){var a=this.renderer.context;a.stencilFunc(a.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,t),a.stencilFunc(a.EQUAL,1,4294967295)}this.swapBuffers()}r instanceof e.MaskPass?i=!0:r instanceof e.ClearMaskPass&&(i=!1)}},reset:function(e){if(void 0===e){e=this.renderTarget1.clone();var t=this.renderer.getPixelRatio();e.width=Math.floor(this.renderer.context.canvas.width/t),e.height=Math.floor(this.renderer.context.canvas.height/t)}this.renderTarget1.dispose(),this.renderTarget1=e,this.renderTarget2.dispose(),this.renderTarget2=e.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2},setSize:function(e,t){this.renderTarget1.setSize(e,t),this.renderTarget2.setSize(e,t)}}}},function(e,t){e.exports=function(e){e.FXAAShader={uniforms:{tDiffuse:{type:\"t\",value:new e.Texture},resolution:{type:\"v2\",value:new e.Vector2}},vertexShader:\"#define GLSLIFY 1\\nvarying vec2 vUv;\\n\\nvarying vec2 v_rgbNW;\\nvarying vec2 v_rgbNE;\\nvarying vec2 v_rgbSW;\\nvarying vec2 v_rgbSE;\\nvarying vec2 v_rgbM;\\n\\nuniform vec2 resolution;\\n\\nvoid main() {\\n  vUv = uv;\\n  vec2 fragCoord = uv * resolution;\\n  vec2 inverseVP = 1.0 / resolution.xy;\\n  v_rgbNW = (fragCoord + vec2(-1.0, -1.0)) * inverseVP;\\n  v_rgbNE = (fragCoord + vec2(1.0, -1.0)) * inverseVP;\\n  v_rgbSW = (fragCoord + vec2(-1.0, 1.0)) * inverseVP;\\n  v_rgbSE = (fragCoord + vec2(1.0, 1.0)) * inverseVP;\\n  v_rgbM = vec2(fragCoord * inverseVP);\\n\\n  gl_Position = projectionMatrix *\\n              modelViewMatrix *\\n              vec4(position,1.0);\\n}\\n\",fragmentShader:'#define GLSLIFY 1\\nvarying vec2 vUv;\\n\\n//texcoords computed in vertex step\\n//to avoid dependent texture reads\\nvarying vec2 v_rgbNW;\\nvarying vec2 v_rgbNE;\\nvarying vec2 v_rgbSW;\\nvarying vec2 v_rgbSE;\\nvarying vec2 v_rgbM;\\n\\n//make sure to have a resolution uniform set to the screen size\\nuniform vec2 resolution;\\nuniform sampler2D tDiffuse;\\n\\n/**\\nBasic FXAA implementation based on the code on geeks3d.com with the\\nmodification that the texture2DLod stuff was removed since it\\'s\\nunsupported by WebGL.\\n\\n--\\n\\nFrom:\\nhttps://github.com/mitsuhiko/webgl-meincraft\\n\\nCopyright (c) 2011 by Armin Ronacher.\\n\\nSome rights reserved.\\n\\nRedistribution and use in source and binary forms, with or without\\nmodification, are permitted provided that the following conditions are\\nmet:\\n\\n    * Redistributions of source code must retain the above copyright\\n      notice, this list of conditions and the following disclaimer.\\n\\n    * Redistributions in binary form must reproduce the above\\n      copyright notice, this list of conditions and the following\\n      disclaimer in the documentation and/or other materials provided\\n      with the distribution.\\n\\n    * The names of the contributors may not be used to endorse or\\n      promote products derived from this software without specific\\n      prior written permission.\\n\\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n*/\\n\\n#ifndef FXAA_REDUCE_MIN\\n    #define FXAA_REDUCE_MIN   (1.0/ 128.0)\\n#endif\\n#ifndef FXAA_REDUCE_MUL\\n    #define FXAA_REDUCE_MUL   (1.0 / 8.0)\\n#endif\\n#ifndef FXAA_SPAN_MAX\\n    #define FXAA_SPAN_MAX     8.0\\n#endif\\n\\n//optimized version for mobile, where dependent \\n//texture reads can be a bottleneck\\nvec4 fxaa_1540259130(sampler2D tex, vec2 fragCoord, vec2 resolution,\\n            vec2 v_rgbNW, vec2 v_rgbNE, \\n            vec2 v_rgbSW, vec2 v_rgbSE, \\n            vec2 v_rgbM) {\\n    vec4 color;\\n    mediump vec2 inverseVP = vec2(1.0 / resolution.x, 1.0 / resolution.y);\\n    vec3 rgbNW = texture2D(tex, v_rgbNW).xyz;\\n    vec3 rgbNE = texture2D(tex, v_rgbNE).xyz;\\n    vec3 rgbSW = texture2D(tex, v_rgbSW).xyz;\\n    vec3 rgbSE = texture2D(tex, v_rgbSE).xyz;\\n    vec4 texColor = texture2D(tex, v_rgbM);\\n    vec3 rgbM  = texColor.xyz;\\n    vec3 luma = vec3(0.299, 0.587, 0.114);\\n    float lumaNW = dot(rgbNW, luma);\\n    float lumaNE = dot(rgbNE, luma);\\n    float lumaSW = dot(rgbSW, luma);\\n    float lumaSE = dot(rgbSE, luma);\\n    float lumaM  = dot(rgbM,  luma);\\n    float lumaMin = min(lumaM, min(min(lumaNW, lumaNE), min(lumaSW, lumaSE)));\\n    float lumaMax = max(lumaM, max(max(lumaNW, lumaNE), max(lumaSW, lumaSE)));\\n    \\n    mediump vec2 dir;\\n    dir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\\n    dir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));\\n    \\n    float dirReduce = max((lumaNW + lumaNE + lumaSW + lumaSE) *\\n                          (0.25 * FXAA_REDUCE_MUL), FXAA_REDUCE_MIN);\\n    \\n    float rcpDirMin = 1.0 / (min(abs(dir.x), abs(dir.y)) + dirReduce);\\n    dir = min(vec2(FXAA_SPAN_MAX, FXAA_SPAN_MAX),\\n              max(vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),\\n              dir * rcpDirMin)) * inverseVP;\\n    \\n    vec3 rgbA = 0.5 * (\\n        texture2D(tex, fragCoord * inverseVP + dir * (1.0 / 3.0 - 0.5)).xyz +\\n        texture2D(tex, fragCoord * inverseVP + dir * (2.0 / 3.0 - 0.5)).xyz);\\n    vec3 rgbB = rgbA * 0.5 + 0.25 * (\\n        texture2D(tex, fragCoord * inverseVP + dir * -0.5).xyz +\\n        texture2D(tex, fragCoord * inverseVP + dir * 0.5).xyz);\\n\\n    float lumaB = dot(rgbB, luma);\\n    if ((lumaB < lumaMin) || (lumaB > lumaMax))\\n        color = vec4(rgbA, texColor.a);\\n    else\\n        color = vec4(rgbB, texColor.a);\\n    return color;\\n}\\n\\nvoid main() {\\n  vec2 fragCoord = vUv * resolution;   \\n  gl_FragColor = fxaa_1540259130(tDiffuse, fragCoord, resolution, v_rgbNW, v_rgbNE, v_rgbSW, v_rgbSE, v_rgbM);\\n}\\n'}}},function(e,t){e.exports=function(e){e.FilmPass=function(t,r,n,i){void 0===e.FilmShader&&console.error(\"THREE.FilmPass relies on THREE.FilmShader\");var o=e.FilmShader;this.uniforms=e.UniformsUtils.clone(o.uniforms),this.material=new e.ShaderMaterial({uniforms:this.uniforms,vertexShader:o.vertexShader,fragmentShader:o.fragmentShader}),void 0!==i&&(this.uniforms.grayscale.value=i),void 0!==t&&(this.uniforms.nIntensity.value=t),void 0!==r&&(this.uniforms.sIntensity.value=r),void 0!==n&&(this.uniforms.sCount.value=n),this.enabled=!0,this.renderToScreen=!1,this.needsSwap=!0,this.camera=new e.OrthographicCamera(-1,1,1,-1,0,1),this.scene=new e.Scene,this.quad=new e.Mesh(new e.PlaneBufferGeometry(2,2),null),this.scene.add(this.quad)},e.FilmPass.prototype={render:function(e,t,r,n){this.uniforms.tDiffuse.value=r,this.uniforms.time.value+=n,this.quad.material=this.material,this.renderToScreen?e.render(this.scene,this.camera):e.render(this.scene,this.camera,t,!1)}}}},function(e,t){e.exports=function(e){e.FilmShader={uniforms:{tDiffuse:{type:\"t\",value:null},time:{type:\"f\",value:0},nIntensity:{type:\"f\",value:.5},sIntensity:{type:\"f\",value:.05},sCount:{type:\"f\",value:4096},grayscale:{type:\"i\",value:1}},vertexShader:[\"varying vec2 vUv;\",\"void main() {\",\"vUv = uv;\",\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\"}\"].join(\"\\n\"),fragmentShader:[\"uniform float time;\",\"uniform bool grayscale;\",\"uniform float nIntensity;\",\"uniform float sIntensity;\",\"uniform float sCount;\",\"uniform sampler2D tDiffuse;\",\"varying vec2 vUv;\",\"void main() {\",\"vec4 cTextureScreen = texture2D( tDiffuse, vUv );\",\"float x = vUv.x * vUv.y * time *  1000.0;\",\"x = mod( x, 13.0 ) * mod( x, 123.0 );\",\"float dx = mod( x, 0.01 );\",\"vec3 cResult = cTextureScreen.rgb + cTextureScreen.rgb * clamp( 0.1 + dx * 100.0, 0.0, 1.0 );\",\"vec2 sc = vec2( sin( vUv.y * sCount ), cos( vUv.y * sCount ) );\",\"cResult += cTextureScreen.rgb * vec3( sc.x, sc.y, sc.x ) * sIntensity;\",\"cResult = cTextureScreen.rgb + clamp( nIntensity, 0.0,1.0 ) * ( cResult - cTextureScreen.rgb );\",\"if( grayscale ) {\",\"cResult = vec3( cResult.r * 0.3 + cResult.g * 0.59 + cResult.b * 0.11 );\",\"}\",\"gl_FragColor =  vec4( cResult, cTextureScreen.a );\",\"}\"].join(\"\\n\")}}},function(e,t){e.exports=function(e){e.FocusShader={uniforms:{tDiffuse:{type:\"t\",value:null},screenWidth:{type:\"f\",value:1024},screenHeight:{type:\"f\",value:1024},sampleDistance:{type:\"f\",value:.94},waveFactor:{type:\"f\",value:.00125}},vertexShader:[\"varying vec2 vUv;\",\"void main() {\",\"vUv = uv;\",\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\"}\"].join(\"\\n\"),fragmentShader:[\"uniform float screenWidth;\",\"uniform float screenHeight;\",\"uniform float sampleDistance;\",\"uniform float waveFactor;\",\"uniform sampler2D tDiffuse;\",\"varying vec2 vUv;\",\"void main() {\",\"vec4 color, org, tmp, add;\",\"float sample_dist, f;\",\"vec2 vin;\",\"vec2 uv = vUv;\",\"add = color = org = texture2D( tDiffuse, uv );\",\"vin = ( uv - vec2( 0.5 ) ) * vec2( 1.4 );\",\"sample_dist = dot( vin, vin ) * 2.0;\",\"f = ( waveFactor * 100.0 + sample_dist ) * sampleDistance * 4.0;\",\"vec2 sampleSize = vec2(  1.0 / screenWidth, 1.0 / screenHeight ) * vec2( f );\",\"add += tmp = texture2D( tDiffuse, uv + vec2( 0.111964, 0.993712 ) * sampleSize );\",\"if( tmp.b < color.b ) color = tmp;\",\"add += tmp = texture2D( tDiffuse, uv + vec2( 0.846724, 0.532032 ) * sampleSize );\",\"if( tmp.b < color.b ) color = tmp;\",\"add += tmp = texture2D( tDiffuse, uv + vec2( 0.943883, -0.330279 ) * sampleSize );\",\"if( tmp.b < color.b ) color = tmp;\",\"add += tmp = texture2D( tDiffuse, uv + vec2( 0.330279, -0.943883 ) * sampleSize );\",\"if( tmp.b < color.b ) color = tmp;\",\"add += tmp = texture2D( tDiffuse, uv + vec2( -0.532032, -0.846724 ) * sampleSize );\",\"if( tmp.b < color.b ) color = tmp;\",\"add += tmp = texture2D( tDiffuse, uv + vec2( -0.993712, -0.111964 ) * sampleSize );\",\"if( tmp.b < color.b ) color = tmp;\",\"add += tmp = texture2D( tDiffuse, uv + vec2( -0.707107, 0.707107 ) * sampleSize );\",\"if( tmp.b < color.b ) color = tmp;\",\"color = color * vec4( 2.0 ) - ( add / vec4( 8.0 ) );\",\"color = color + ( add / vec4( 8.0 ) - color ) * ( vec4( 1.0 ) - vec4( sample_dist * 0.5 ) );\",\"gl_FragColor = vec4( color.rgb * color.rgb * vec3( 0.95 ) + color.rgb, 1.0 );\",\"}\"].join(\"\\n\")}}},function(e,t){e.exports=function(e){e.FresnelShader={uniforms:{mRefractionRatio:{type:\"f\",value:1.02},mFresnelBias:{type:\"f\",value:.1},mFresnelPower:{type:\"f\",value:2},mFresnelScale:{type:\"f\",value:1},tCube:{type:\"t\",value:null}},vertexShader:[\"uniform float mRefractionRatio;\",\"uniform float mFresnelBias;\",\"uniform float mFresnelScale;\",\"uniform float mFresnelPower;\",\"varying vec3 vReflect;\",\"varying vec3 vRefract[3];\",\"varying float vReflectionFactor;\",\"void main() {\",\"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\"vec4 worldPosition = modelMatrix * vec4( position, 1.0 );\",\"vec3 worldNormal = normalize( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );\",\"vec3 I = worldPosition.xyz - cameraPosition;\",\"vReflect = reflect( I, worldNormal );\",\"vRefract[0] = refract( normalize( I ), worldNormal, mRefractionRatio );\",\"vRefract[1] = refract( normalize( I ), worldNormal, mRefractionRatio * 0.99 );\",\"vRefract[2] = refract( normalize( I ), worldNormal, mRefractionRatio * 0.98 );\",\"vReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), worldNormal ), mFresnelPower );\",\"gl_Position = projectionMatrix * mvPosition;\",\"}\"].join(\"\\n\"),fragmentShader:[\"uniform samplerCube tCube;\",\"varying vec3 vReflect;\",\"varying vec3 vRefract[3];\",\"varying float vReflectionFactor;\",\"void main() {\",\"vec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\",\"vec4 refractedColor = vec4( 1.0 );\",\"refractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\",\"refractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\",\"refractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\",\"gl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\",\"}\"].join(\"\\n\")}}},function(e,t){e.exports=function(e){e.GammaCorrectionShader={uniforms:{tDiffuse:{type:\"t\",value:null}},vertexShader:[\"varying vec2 vUv;\",\"void main() {\",\"vUv = uv;\",\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\"}\"].join(\"\\n\"),fragmentShader:[\"#define GAMMA_OUTPUT\",\"#define GAMMA_FACTOR 2\",\"uniform sampler2D tDiffuse;\",\"varying vec2 vUv;\",e.ShaderChunk.common,\"void main() {\",\"vec4 tex = texture2D( tDiffuse, vec2( vUv.x, vUv.y ) );\",\"gl_FragColor = vec4( linearToOutput( tex.rgb ), tex.a );\",\"}\"].join(\"\\n\")}}},function(e,t){e.exports=function(e){e.GlitchPass=function(t){void 0===e.DigitalGlitch&&console.error(\"THREE.GlitchPass relies on THREE.DigitalGlitch\");var r=e.DigitalGlitch;this.uniforms=e.UniformsUtils.clone(r.uniforms),null==t&&(t=64),this.uniforms.tDisp.value=this.generateHeightmap(t),this.material=new e.ShaderMaterial({uniforms:this.uniforms,vertexShader:r.vertexShader,fragmentShader:r.fragmentShader}),this.enabled=!0,this.renderToScreen=!1,this.needsSwap=!0,this.camera=new e.OrthographicCamera(-1,1,1,-1,0,1),this.scene=new e.Scene,this.quad=new e.Mesh(new e.PlaneBufferGeometry(2,2),null),this.scene.add(this.quad),this.goWild=!1,this.curF=0,this.generateTrigger()},e.GlitchPass.prototype={render:function(t,r,n,i){this.uniforms.tDiffuse.value=n,this.uniforms.seed.value=Math.random(),this.uniforms.byp.value=0,this.curF%this.randX==0||1==this.goWild?(this.uniforms.amount.value=Math.random()/30,this.uniforms.angle.value=e.Math.randFloat(-Math.PI,Math.PI),this.uniforms.seed_x.value=e.Math.randFloat(-1,1),this.uniforms.seed_y.value=e.Math.randFloat(-1,1),this.uniforms.distortion_x.value=e.Math.randFloat(0,1),this.uniforms.distortion_y.value=e.Math.randFloat(0,1),this.curF=0,this.generateTrigger()):this.curF%this.randX<this.randX/5?(this.uniforms.amount.value=Math.random()/90,this.uniforms.angle.value=e.Math.randFloat(-Math.PI,Math.PI),this.uniforms.distortion_x.value=e.Math.randFloat(0,1),this.uniforms.distortion_y.value=e.Math.randFloat(0,1),this.uniforms.seed_x.value=e.Math.randFloat(-.3,.3),this.uniforms.seed_y.value=e.Math.randFloat(-.3,.3)):0==this.goWild&&(this.uniforms.byp.value=1),this.curF++,this.quad.material=this.material,this.renderToScreen?t.render(this.scene,this.camera):t.render(this.scene,this.camera,r,!1)},generateTrigger:function(){this.randX=e.Math.randInt(120,240)},generateHeightmap:function(t){for(var r=new Float32Array(t*t*3),n=t*t,i=0;i<n;i++){var o=e.Math.randFloat(0,1);r[3*i+0]=o,r[3*i+1]=o,r[3*i+2]=o}var a=new e.DataTexture(r,t,t,e.RGBFormat,e.FloatType);return a.needsUpdate=!0,a}}}},function(e,t){e.exports=function(e){e.HorizontalBlurShader={uniforms:{tDiffuse:{type:\"t\",value:null},h:{type:\"f\",value:1/512}},vertexShader:[\"varying vec2 vUv;\",\"void main() {\",\"vUv = uv;\",\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\"}\"].join(\"\\n\"),fragmentShader:[\"uniform sampler2D tDiffuse;\",\"uniform float h;\",\"varying vec2 vUv;\",\"void main() {\",\"vec4 sum = vec4( 0.0 );\",\"sum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * h, vUv.y ) ) * 0.051;\",\"sum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * h, vUv.y ) ) * 0.0918;\",\"sum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * h, vUv.y ) ) * 0.12245;\",\"sum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * h, vUv.y ) ) * 0.1531;\",\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;\",\"sum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * h, vUv.y ) ) * 0.1531;\",\"sum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * h, vUv.y ) ) * 0.12245;\",\"sum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * h, vUv.y ) ) * 0.0918;\",\"sum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * h, vUv.y ) ) * 0.051;\",\"gl_FragColor = sum;\",\"}\"].join(\"\\n\")}}},function(e,t){e.exports=function(e){e.HorizontalTiltShiftShader={uniforms:{tDiffuse:{type:\"t\",value:null},h:{type:\"f\",value:1/512},r:{type:\"f\",value:.35}},vertexShader:[\"varying vec2 vUv;\",\"void main() {\",\"vUv = uv;\",\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\"}\"].join(\"\\n\"),fragmentShader:[\"uniform sampler2D tDiffuse;\",\"uniform float h;\",\"uniform float r;\",\"varying vec2 vUv;\",\"void main() {\",\"vec4 sum = vec4( 0.0 );\",\"float hh = h * abs( r - vUv.y );\",\"sum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * hh, vUv.y ) ) * 0.051;\",\"sum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * hh, vUv.y ) ) * 0.0918;\",\"sum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * hh, vUv.y ) ) * 0.12245;\",\"sum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * hh, vUv.y ) ) * 0.1531;\",\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;\",\"sum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * hh, vUv.y ) ) * 0.1531;\",\"sum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * hh, vUv.y ) ) * 0.12245;\",\"sum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * hh, vUv.y ) ) * 0.0918;\",\"sum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * hh, vUv.y ) ) * 0.051;\",\"gl_FragColor = sum;\",\"}\"].join(\"\\n\")}}},function(e,t){e.exports=function(e){e.HueSaturationShader={uniforms:{tDiffuse:{type:\"t\",value:null},hue:{type:\"f\",value:0},saturation:{type:\"f\",value:0}},vertexShader:[\"varying vec2 vUv;\",\"void main() {\",\"vUv = uv;\",\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\"}\"].join(\"\\n\"),fragmentShader:[\"uniform sampler2D tDiffuse;\",\"uniform float hue;\",\"uniform float saturation;\",\"varying vec2 vUv;\",\"void main() {\",\"gl_FragColor = texture2D( tDiffuse, vUv );\",\"float angle = hue * 3.14159265;\",\"float s = sin(angle), c = cos(angle);\",\"vec3 weights = (vec3(2.0 * c, -sqrt(3.0) * s - c, sqrt(3.0) * s - c) + 1.0) / 3.0;\",\"float len = length(gl_FragColor.rgb);\",\"gl_FragColor.rgb = vec3(\",\"dot(gl_FragColor.rgb, weights.xyz),\",\"dot(gl_FragColor.rgb, weights.zxy),\",\"dot(gl_FragColor.rgb, weights.yzx)\",\");\",\"float average = (gl_FragColor.r + gl_FragColor.g + gl_FragColor.b) / 3.0;\",\"if (saturation > 0.0) {\",\"gl_FragColor.rgb += (average - gl_FragColor.rgb) * (1.0 - 1.0 / (1.001 - saturation));\",\"} else {\",\"gl_FragColor.rgb += (average - gl_FragColor.rgb) * (-saturation);\",\"}\",\"}\"].join(\"\\n\")}}},function(e,t){e.exports=function(e){e.JSONLoader=function(t){\"boolean\"==typeof t&&(console.warn(\"THREE.JSONLoader: showStatus parameter has been removed from constructor.\"),t=void 0),this.manager=void 0!==t?t:e.DefaultLoadingManager,this.withCredentials=!1},e.JSONLoader.prototype={constructor:e.JSONLoader,get statusDomElement(){return void 0===this._statusDomElement&&(this._statusDomElement=document.createElement(\"div\")),console.warn(\"THREE.JSONLoader: .statusDomElement has been removed.\"),this._statusDomElement},load:function(t,r,n,i){var o=this,a=this.texturePath&&\"string\"==typeof this.texturePath?this.texturePath:e.Loader.prototype.extractUrlBase(t),s=new e.XHRLoader(this.manager);s.setWithCredentials(this.withCredentials),s.load(t,function(e){var n=JSON.parse(e),i=n.metadata;if(void 0!==i){var s=i.type;if(void 0!==s){if(\"object\"===s.toLowerCase())return void console.error(\"THREE.JSONLoader: \"+t+\" should be loaded with THREE.ObjectLoader instead.\");if(\"scene\"===s.toLowerCase())return void console.error(\"THREE.JSONLoader: \"+t+\" should be loaded with THREE.SceneLoader instead.\")}}var c=o.parse(n,a);r(c.geometry,c.materials)},n,i)},setTexturePath:function(e){this.texturePath=e},parse:function(t,r){var n=new e.Geometry,i=void 0!==t.scale?1/t.scale:1;if(function(r){function i(e,t){return e&1<<t}var o,a,s,c,l,u,h,d,p,f,m,v,g,y,x,b,w,_,M,S,T,E,C,A,L,R,P,D=t.faces,U=t.vertices,I=t.normals,F=t.colors,N=0;if(void 0!==t.uvs){for(o=0;o<t.uvs.length;o++)t.uvs[o].length&&N++;for(o=0;o<N;o++)n.faceVertexUvs[o]=[]}c=0,l=U.length;for(;c<l;)(_=new e.Vector3).x=U[c++]*r,_.y=U[c++]*r,_.z=U[c++]*r,n.vertices.push(_);c=0,l=D.length;for(;c<l;)if(f=D[c++],m=i(f,0),v=i(f,1),g=i(f,3),y=i(f,4),x=i(f,5),b=i(f,6),w=i(f,7),m){if((S=new e.Face3).a=D[c],S.b=D[c+1],S.c=D[c+3],(T=new e.Face3).a=D[c+1],T.b=D[c+2],T.c=D[c+3],c+=4,v&&(p=D[c++],S.materialIndex=p,T.materialIndex=p),s=n.faces.length,g)for(o=0;o<N;o++)for(A=t.uvs[o],n.faceVertexUvs[o][s]=[],n.faceVertexUvs[o][s+1]=[],a=0;a<4;a++)d=D[c++],R=A[2*d],P=A[2*d+1],L=new e.Vector2(R,P),2!==a&&n.faceVertexUvs[o][s].push(L),0!==a&&n.faceVertexUvs[o][s+1].push(L);if(y&&(h=3*D[c++],S.normal.set(I[h++],I[h++],I[h]),T.normal.copy(S.normal)),x)for(o=0;o<4;o++)h=3*D[c++],C=new e.Vector3(I[h++],I[h++],I[h]),2!==o&&S.vertexNormals.push(C),0!==o&&T.vertexNormals.push(C);if(b&&(u=D[c++],E=F[u],S.color.setHex(E),T.color.setHex(E)),w)for(o=0;o<4;o++)u=D[c++],E=F[u],2!==o&&S.vertexColors.push(new e.Color(E)),0!==o&&T.vertexColors.push(new e.Color(E));n.faces.push(S),n.faces.push(T)}else{if((M=new e.Face3).a=D[c++],M.b=D[c++],M.c=D[c++],v&&(p=D[c++],M.materialIndex=p),s=n.faces.length,g)for(o=0;o<N;o++)for(A=t.uvs[o],n.faceVertexUvs[o][s]=[],a=0;a<3;a++)d=D[c++],R=A[2*d],P=A[2*d+1],L=new e.Vector2(R,P),n.faceVertexUvs[o][s].push(L);if(y&&(h=3*D[c++],M.normal.set(I[h++],I[h++],I[h])),x)for(o=0;o<3;o++)h=3*D[c++],C=new e.Vector3(I[h++],I[h++],I[h]),M.vertexNormals.push(C);if(b&&(u=D[c++],M.color.setHex(F[u])),w)for(o=0;o<3;o++)u=D[c++],M.vertexColors.push(new e.Color(F[u]));n.faces.push(M)}}(i),function(){var r=void 0!==t.influencesPerVertex?t.influencesPerVertex:2;if(t.skinWeights)for(var i=0,o=t.skinWeights.length;i<o;i+=r){var a=t.skinWeights[i],s=r>1?t.skinWeights[i+1]:0,c=r>2?t.skinWeights[i+2]:0,l=r>3?t.skinWeights[i+3]:0;n.skinWeights.push(new e.Vector4(a,s,c,l))}if(t.skinIndices)for(var i=0,o=t.skinIndices.length;i<o;i+=r){var u=t.skinIndices[i],h=r>1?t.skinIndices[i+1]:0,d=r>2?t.skinIndices[i+2]:0,p=r>3?t.skinIndices[i+3]:0;n.skinIndices.push(new e.Vector4(u,h,d,p))}n.bones=t.bones,n.bones&&n.bones.length>0&&(n.skinWeights.length!==n.skinIndices.length||n.skinIndices.length!==n.vertices.length)&&console.warn(\"When skinning, number of vertices (\"+n.vertices.length+\"), skinIndices (\"+n.skinIndices.length+\"), and skinWeights (\"+n.skinWeights.length+\") should match.\")}(),function(r){if(void 0!==t.morphTargets)for(var i=0,o=t.morphTargets.length;i<o;i++){n.morphTargets[i]={},n.morphTargets[i].name=t.morphTargets[i].name,n.morphTargets[i].vertices=[];for(var a=n.morphTargets[i].vertices,s=t.morphTargets[i].vertices,c=0,l=s.length;c<l;c+=3){var u=new e.Vector3;u.x=s[c]*r,u.y=s[c+1]*r,u.z=s[c+2]*r,a.push(u)}}if(void 0!==t.morphColors&&t.morphColors.length>0){console.warn('THREE.JSONLoader: \"morphColors\" no longer supported. Using them as face colors.');for(var h=n.faces,d=t.morphColors[0].colors,i=0,o=h.length;i<o;i++)h[i].color.fromArray(d,3*i)}}(i),function(){var r=[],i=[];void 0!==t.animation&&i.push(t.animation);void 0!==t.animations&&(t.animations.length?i=i.concat(t.animations):i.push(t.animations));for(var o=0;o<i.length;o++){var a=e.AnimationClip.parseAnimation(i[o],n.bones);a&&r.push(a)}if(n.morphTargets){var s=e.AnimationClip.CreateClipsFromMorphTargetSequences(n.morphTargets,10);r=r.concat(s)}r.length>0&&(n.animations=r)}(),n.computeFaceNormals(),n.computeBoundingSphere(),void 0===t.materials||0===t.materials.length)return{geometry:n};var o=e.Loader.prototype.initMaterials(t.materials,r,this.crossOrigin);return{geometry:n,materials:o}}}}},function(e,t){e.exports=function(e){e.KaleidoShader={uniforms:{tDiffuse:{type:\"t\",value:null},sides:{type:\"f\",value:6},angle:{type:\"f\",value:0}},vertexShader:[\"varying vec2 vUv;\",\"void main() {\",\"vUv = uv;\",\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\"}\"].join(\"\\n\"),fragmentShader:[\"uniform sampler2D tDiffuse;\",\"uniform float sides;\",\"uniform float angle;\",\"varying vec2 vUv;\",\"void main() {\",\"vec2 p = vUv - 0.5;\",\"float r = length(p);\",\"float a = atan(p.y, p.x) + angle;\",\"float tau = 2. * 3.1416 ;\",\"a = mod(a, tau/sides);\",\"a = abs(a - tau/sides/2.) ;\",\"p = r * vec2(cos(a), sin(a));\",\"vec4 color = texture2D(tDiffuse, p + 0.5);\",\"gl_FragColor = color;\",\"}\"].join(\"\\n\")}}},function(e,t){e.exports=function(e){e.LuminosityShader={uniforms:{tDiffuse:{type:\"t\",value:null}},vertexShader:[\"varying vec2 vUv;\",\"void main() {\",\"vUv = uv;\",\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\"}\"].join(\"\\n\"),fragmentShader:[\"uniform sampler2D tDiffuse;\",\"varying vec2 vUv;\",\"void main() {\",\"vec4 texel = texture2D( tDiffuse, vUv );\",\"vec3 luma = vec3( 0.299, 0.587, 0.114 );\",\"float v = dot( texel.xyz, luma );\",\"gl_FragColor = vec4( v, v, v, texel.w );\",\"}\"].join(\"\\n\")}}},function(e,t){e.exports=function(e){e.MTLLoader=function(t){this.manager=void 0!==t?t:e.DefaultLoadingManager},e.MTLLoader.prototype={constructor:e.MTLLoader,load:function(t,r,n,i){var o=this,a=new e.XHRLoader(this.manager);a.setPath(this.path),a.load(t,function(e){r(o.parse(e))},n,i)},setPath:function(e){this.path=e},setBaseUrl:function(e){this.baseUrl=e},setCrossOrigin:function(e){this.crossOrigin=e},setMaterialOptions:function(e){this.materialOptions=e},parse:function(t){for(var r=t.split(\"\\n\"),n={},i=/\\s+/,o={},a=0;a<r.length;a++){var s=r[a];if(0!==(s=s.trim()).length&&\"#\"!==s.charAt(0)){var c=s.indexOf(\" \"),l=c>=0?s.substring(0,c):s;l=l.toLowerCase();var u=c>=0?s.substring(c+1):\"\";if(u=u.trim(),\"newmtl\"===l)n={name:u},o[u]=n;else if(n)if(\"ka\"===l||\"kd\"===l||\"ks\"===l){var h=u.split(i,3);n[l]=[parseFloat(h[0]),parseFloat(h[1]),parseFloat(h[2])]}else n[l]=u}}var d=new e.MTLLoader.MaterialCreator(this.baseUrl,this.materialOptions);return d.setCrossOrigin(this.crossOrigin),d.setManager(this.manager),d.setMaterials(o),d}},e.MTLLoader.MaterialCreator=function(t,r){this.baseUrl=t,this.options=r,this.materialsInfo={},this.materials={},this.materialsArray=[],this.nameLookup={},this.side=this.options&&this.options.side?this.options.side:e.FrontSide,this.wrap=this.options&&this.options.wrap?this.options.wrap:e.RepeatWrapping},e.MTLLoader.MaterialCreator.prototype={constructor:e.MTLLoader.MaterialCreator,setCrossOrigin:function(e){this.crossOrigin=e},setManager:function(e){this.manager=e},setMaterials:function(e){this.materialsInfo=this.convert(e),this.materials={},this.materialsArray=[],this.nameLookup={}},convert:function(e){if(!this.options)return e;var t={};for(var r in e){var n=e[r],i={};for(var o in t[r]=i,n){var a=!0,s=n[o],c=o.toLowerCase();switch(c){case\"kd\":case\"ka\":case\"ks\":this.options&&this.options.normalizeRGB&&(s=[s[0]/255,s[1]/255,s[2]/255]),this.options&&this.options.ignoreZeroRGBs&&0===s[0]&&0===s[1]&&0===s[1]&&(a=!1)}a&&(i[c]=s)}}return t},preload:function(){for(var e in this.materialsInfo)this.create(e)},getIndex:function(e){return this.nameLookup[e]},getAsArray:function(){var e=0;for(var t in this.materialsInfo)this.materialsArray[e]=this.create(t),this.nameLookup[t]=e,e++;return this.materialsArray},create:function(e){return void 0===this.materials[e]&&this.createMaterial_(e),this.materials[e]},createMaterial_:function(t){var r=this.materialsInfo[t],n={name:t,side:this.side};for(var i in r){var o=r[i];if(\"\"!==o)switch(i.toLowerCase()){case\"kd\":n.color=(new e.Color).fromArray(o);break;case\"ks\":n.specular=(new e.Color).fromArray(o);break;case\"map_kd\":n.map=this.loadTexture(this.baseUrl+o),n.map.wrapS=this.wrap,n.map.wrapT=this.wrap;break;case\"ns\":n.shininess=parseFloat(o);break;case\"d\":o<1&&(n.opacity=o,n.transparent=!0);break;case\"Tr\":o>0&&(n.opacity=1-o,n.transparent=!0);break;case\"map_bump\":case\"bump\":if(n.bumpMap)break;n.bumpMap=this.loadTexture(this.baseUrl+o),n.bumpMap.wrapS=this.wrap,n.bumpMap.wrapT=this.wrap}}return this.materials[t]=new e.MeshPhongMaterial(n),this.materials[t]},loadTexture:function(t,r,n,i,o){var a,s=e.Loader.Handlers.get(t),c=void 0!==this.manager?this.manager:e.DefaultLoadingManager;return null===s&&(s=new e.TextureLoader(c)),s.setCrossOrigin&&s.setCrossOrigin(this.crossOrigin),a=s.load(t,n,i,o),void 0!==r&&(a.mapping=r),a}},e.EventDispatcher.prototype.apply(e.MTLLoader.prototype)}},function(e,t){e.exports=function(e){e.MarchingCubes=function(t,r,n,i){e.ImmediateRenderObject.call(this,r),this.enableUvs=void 0!==n&&n,this.enableColors=void 0!==i&&i,this.init=function(e){this.resolution=e,this.isolation=80,this.size=e,this.size2=this.size*this.size,this.size3=this.size2*this.size,this.halfsize=this.size/2,this.delta=2/this.size,this.yd=this.size,this.zd=this.size2,this.field=new Float32Array(this.size3),this.normal_cache=new Float32Array(3*this.size3),this.vlist=new Float32Array(36),this.nlist=new Float32Array(36),this.maxCount=4096,this.count=0,this.hasPositions=!1,this.hasNormals=!1,this.hasColors=!1,this.hasUvs=!1,this.positionArray=new Float32Array(3*this.maxCount),this.normalArray=new Float32Array(3*this.maxCount),this.enableUvs&&(this.uvArray=new Float32Array(2*this.maxCount)),this.enableColors&&(this.colorArray=new Float32Array(3*this.maxCount))},this.lerp=function(e,t,r){return e+(t-e)*r},this.VIntX=function(e,t,r,n,i,o,a,s,c,l){var u=(i-c)/(l-c),h=this.normal_cache;t[n]=o+u*this.delta,t[n+1]=a,t[n+2]=s,r[n]=this.lerp(h[e],h[e+3],u),r[n+1]=this.lerp(h[e+1],h[e+4],u),r[n+2]=this.lerp(h[e+2],h[e+5],u)},this.VIntY=function(e,t,r,n,i,o,a,s,c,l){var u=(i-c)/(l-c),h=this.normal_cache;t[n]=o,t[n+1]=a+u*this.delta,t[n+2]=s;var d=e+3*this.yd;r[n]=this.lerp(h[e],h[d],u),r[n+1]=this.lerp(h[e+1],h[d+1],u),r[n+2]=this.lerp(h[e+2],h[d+2],u)},this.VIntZ=function(e,t,r,n,i,o,a,s,c,l){var u=(i-c)/(l-c),h=this.normal_cache;t[n]=o,t[n+1]=a,t[n+2]=s+u*this.delta;var d=e+3*this.zd;r[n]=this.lerp(h[e],h[d],u),r[n+1]=this.lerp(h[e+1],h[d+1],u),r[n+2]=this.lerp(h[e+2],h[d+2],u)},this.compNorm=function(e){var t=3*e;0===this.normal_cache[t]&&(this.normal_cache[t]=this.field[e-1]-this.field[e+1],this.normal_cache[t+1]=this.field[e-this.yd]-this.field[e+this.yd],this.normal_cache[t+2]=this.field[e-this.zd]-this.field[e+this.zd])},this.polygonize=function(t,r,n,i,o,a){var s=i+1,c=i+this.yd,l=i+this.zd,u=s+this.yd,h=s+this.zd,d=i+this.yd+this.zd,p=s+this.yd+this.zd,f=0,m=this.field[i],v=this.field[s],g=this.field[c],y=this.field[u],x=this.field[l],b=this.field[h],w=this.field[d],_=this.field[p];m<o&&(f|=1),v<o&&(f|=2),g<o&&(f|=8),y<o&&(f|=4),x<o&&(f|=16),b<o&&(f|=32),w<o&&(f|=128),_<o&&(f|=64);var M=e.edgeTable[f];if(0===M)return 0;var S=this.delta,T=t+S,E=r+S,C=n+S;1&M&&(this.compNorm(i),this.compNorm(s),this.VIntX(3*i,this.vlist,this.nlist,0,o,t,r,n,m,v)),2&M&&(this.compNorm(s),this.compNorm(u),this.VIntY(3*s,this.vlist,this.nlist,3,o,T,r,n,v,y)),4&M&&(this.compNorm(c),this.compNorm(u),this.VIntX(3*c,this.vlist,this.nlist,6,o,t,E,n,g,y)),8&M&&(this.compNorm(i),this.compNorm(c),this.VIntY(3*i,this.vlist,this.nlist,9,o,t,r,n,m,g)),16&M&&(this.compNorm(l),this.compNorm(h),this.VIntX(3*l,this.vlist,this.nlist,12,o,t,r,C,x,b)),32&M&&(this.compNorm(h),this.compNorm(p),this.VIntY(3*h,this.vlist,this.nlist,15,o,T,r,C,b,_)),64&M&&(this.compNorm(d),this.compNorm(p),this.VIntX(3*d,this.vlist,this.nlist,18,o,t,E,C,w,_)),128&M&&(this.compNorm(l),this.compNorm(d),this.VIntY(3*l,this.vlist,this.nlist,21,o,t,r,C,x,w)),256&M&&(this.compNorm(i),this.compNorm(l),this.VIntZ(3*i,this.vlist,this.nlist,24,o,t,r,n,m,x)),512&M&&(this.compNorm(s),this.compNorm(h),this.VIntZ(3*s,this.vlist,this.nlist,27,o,T,r,n,v,b)),1024&M&&(this.compNorm(u),this.compNorm(p),this.VIntZ(3*u,this.vlist,this.nlist,30,o,T,E,n,y,_)),2048&M&&(this.compNorm(c),this.compNorm(d),this.VIntZ(3*c,this.vlist,this.nlist,33,o,t,E,n,g,w)),f<<=4;for(var A,L,R,P=0,D=0;-1!=e.triTable[f+D];)L=(A=f+D)+1,R=A+2,this.posnormtriv(this.vlist,this.nlist,3*e.triTable[A],3*e.triTable[L],3*e.triTable[R],a),D+=3,P++;return P},this.posnormtriv=function(e,t,r,n,i,o){var a=3*this.count;if(this.positionArray[a]=e[r],this.positionArray[a+1]=e[r+1],this.positionArray[a+2]=e[r+2],this.positionArray[a+3]=e[n],this.positionArray[a+4]=e[n+1],this.positionArray[a+5]=e[n+2],this.positionArray[a+6]=e[i],this.positionArray[a+7]=e[i+1],this.positionArray[a+8]=e[i+2],this.normalArray[a]=t[r],this.normalArray[a+1]=t[r+1],this.normalArray[a+2]=t[r+2],this.normalArray[a+3]=t[n],this.normalArray[a+4]=t[n+1],this.normalArray[a+5]=t[n+2],this.normalArray[a+6]=t[i],this.normalArray[a+7]=t[i+1],this.normalArray[a+8]=t[i+2],this.enableUvs){var s=2*this.count;this.uvArray[s]=e[r],this.uvArray[s+1]=e[r+2],this.uvArray[s+2]=e[n],this.uvArray[s+3]=e[n+2],this.uvArray[s+4]=e[i],this.uvArray[s+5]=e[i+2]}this.enableColors&&(this.colorArray[a]=e[r],this.colorArray[a+1]=e[r+1],this.colorArray[a+2]=e[r+2],this.colorArray[a+3]=e[n],this.colorArray[a+4]=e[n+1],this.colorArray[a+5]=e[n+2],this.colorArray[a+6]=e[i],this.colorArray[a+7]=e[i+1],this.colorArray[a+8]=e[i+2]),this.count+=3,this.count>=this.maxCount-3&&(this.hasPositions=!0,this.hasNormals=!0,this.enableUvs&&(this.hasUvs=!0),this.enableColors&&(this.hasColors=!0),o(this))},this.begin=function(){this.count=0,this.hasPositions=!1,this.hasNormals=!1,this.hasUvs=!1,this.hasColors=!1},this.end=function(e){if(0!==this.count){for(var t=3*this.count;t<this.positionArray.length;t++)this.positionArray[t]=0;this.hasPositions=!0,this.hasNormals=!0,this.enableUvs&&(this.hasUvs=!0),this.enableColors&&(this.hasColors=!0),e(this)}},this.addBall=function(e,t,r,n,i){var o=this.size*Math.sqrt(n/i),a=r*this.size,s=t*this.size,c=e*this.size,l=Math.floor(a-o);l<1&&(l=1);var u=Math.floor(a+o);u>this.size-1&&(u=this.size-1);var h=Math.floor(s-o);h<1&&(h=1);var d=Math.floor(s+o);d>this.size-1&&(d=this.size-1);var p=Math.floor(c-o);p<1&&(p=1);var f,m,v,g,y,x,b,w,_,M,S,T=Math.floor(c+o);for(T>this.size-1&&(T=this.size-1),v=l;v<u;v++)for(y=this.size2*v,_=(w=v/this.size-r)*w,m=h;m<d;m++)for(g=y+this.size*m,M=(b=m/this.size-t)*b,f=p;f<T;f++)(S=n/(1e-6+(x=f/this.size-e)*x+M+_)-i)>0&&(this.field[g+f]+=S)},this.addPlaneX=function(e,t){var r,n,i,o,a,s,c=this.size,l=this.yd,u=this.zd,h=this.field,d=c*Math.sqrt(e/t);for(d>c&&(d=c),r=0;r<d;r++)if((o=e/(1e-4+(a=r/c)*a)-t)>0)for(n=0;n<c;n++)for(s=r+n*l,i=0;i<c;i++)h[u*i+s]+=o},this.addPlaneY=function(e,t){var r,n,i,o,a,s,c,l=this.size,u=this.yd,h=this.zd,d=this.field,p=l*Math.sqrt(e/t);for(p>l&&(p=l),n=0;n<p;n++)if((o=e/(1e-4+(a=n/l)*a)-t)>0)for(s=n*u,r=0;r<l;r++)for(c=s+r,i=0;i<l;i++)d[h*i+c]+=o},this.addPlaneZ=function(e,t){var r,n,i,o,a,s,c,l=this.size,u=this.yd,h=this.zd,d=this.field,p=l*Math.sqrt(e/t);for(p>l&&(p=l),i=0;i<p;i++)if((o=e/(1e-4+(a=i/l)*a)-t)>0)for(s=h*i,n=0;n<l;n++)for(c=s+n*u,r=0;r<l;r++)d[c+r]+=o},this.reset=function(){var e;for(e=0;e<this.size3;e++)this.normal_cache[3*e]=0,this.field[e]=0},this.render=function(e){this.begin();for(var t=this.size-2,r=1;r<t;r++)for(var n=this.size2*r,i=(r-this.halfsize)/this.halfsize,o=1;o<t;o++)for(var a=n+this.size*o,s=(o-this.halfsize)/this.halfsize,c=1;c<t;c++){var l=(c-this.halfsize)/this.halfsize,u=a+c;this.polygonize(l,s,i,u,this.isolation,e)}this.end(e)},this.generateGeometry=function(){var t=0,r=new e.Geometry,n=[];return this.render(function(i){var o,a,s,c,l,u,h,d,p,f,m,v,g,y;for(o=0;o<i.count;o++)p=1+(d=3*o),f=d+2,a=i.positionArray[d],s=i.positionArray[p],c=i.positionArray[f],l=new e.Vector3(a,s,c),a=i.normalArray[d],s=i.normalArray[p],c=i.normalArray[f],(u=new e.Vector3(a,s,c)).normalize(),r.vertices.push(l),n.push(u);for(y=i.count/3,o=0;o<y;o++)p=1+(d=3*(t+o)),f=d+2,m=n[d],v=n[p],g=n[f],h=new e.Face3(d,p,f,[m,v,g]),r.faces.push(h);t+=y,i.count=0}),r},this.init(t)},e.MarchingCubes.prototype=Object.create(e.ImmediateRenderObject.prototype),e.MarchingCubes.prototype.constructor=e.MarchingCubes,e.edgeTable=new Int32Array([0,265,515,778,1030,1295,1541,1804,2060,2309,2575,2822,3082,3331,3593,3840,400,153,915,666,1430,1183,1941,1692,2460,2197,2975,2710,3482,3219,3993,3728,560,825,51,314,1590,1855,1077,1340,2620,2869,2111,2358,3642,3891,3129,3376,928,681,419,170,1958,1711,1445,1196,2988,2725,2479,2214,4010,3747,3497,3232,1120,1385,1635,1898,102,367,613,876,3180,3429,3695,3942,2154,2403,2665,2912,1520,1273,2035,1786,502,255,1013,764,3580,3317,4095,3830,2554,2291,3065,2800,1616,1881,1107,1370,598,863,85,348,3676,3925,3167,3414,2650,2899,2137,2384,1984,1737,1475,1226,966,719,453,204,4044,3781,3535,3270,3018,2755,2505,2240,2240,2505,2755,3018,3270,3535,3781,4044,204,453,719,966,1226,1475,1737,1984,2384,2137,2899,2650,3414,3167,3925,3676,348,85,863,598,1370,1107,1881,1616,2800,3065,2291,2554,3830,4095,3317,3580,764,1013,255,502,1786,2035,1273,1520,2912,2665,2403,2154,3942,3695,3429,3180,876,613,367,102,1898,1635,1385,1120,3232,3497,3747,4010,2214,2479,2725,2988,1196,1445,1711,1958,170,419,681,928,3376,3129,3891,3642,2358,2111,2869,2620,1340,1077,1855,1590,314,51,825,560,3728,3993,3219,3482,2710,2975,2197,2460,1692,1941,1183,1430,666,915,153,400,3840,3593,3331,3082,2822,2575,2309,2060,1804,1541,1295,1030,778,515,265,0]),e.triTable=new Int32Array([-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,8,3,9,8,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,2,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,1,2,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,2,10,0,2,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,8,3,2,10,8,10,9,8,-1,-1,-1,-1,-1,-1,-1,3,11,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,11,2,8,11,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,9,0,2,3,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,11,2,1,9,11,9,8,11,-1,-1,-1,-1,-1,-1,-1,3,10,1,11,10,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,10,1,0,8,10,8,11,10,-1,-1,-1,-1,-1,-1,-1,3,9,0,3,11,9,11,10,9,-1,-1,-1,-1,-1,-1,-1,9,8,10,10,8,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,3,0,7,3,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,9,8,4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,1,9,4,7,1,7,3,1,-1,-1,-1,-1,-1,-1,-1,1,2,10,8,4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,4,7,3,0,4,1,2,10,-1,-1,-1,-1,-1,-1,-1,9,2,10,9,0,2,8,4,7,-1,-1,-1,-1,-1,-1,-1,2,10,9,2,9,7,2,7,3,7,9,4,-1,-1,-1,-1,8,4,7,3,11,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,4,7,11,2,4,2,0,4,-1,-1,-1,-1,-1,-1,-1,9,0,1,8,4,7,2,3,11,-1,-1,-1,-1,-1,-1,-1,4,7,11,9,4,11,9,11,2,9,2,1,-1,-1,-1,-1,3,10,1,3,11,10,7,8,4,-1,-1,-1,-1,-1,-1,-1,1,11,10,1,4,11,1,0,4,7,11,4,-1,-1,-1,-1,4,7,8,9,0,11,9,11,10,11,0,3,-1,-1,-1,-1,4,7,11,4,11,9,9,11,10,-1,-1,-1,-1,-1,-1,-1,9,5,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,5,4,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,5,4,1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,5,4,8,3,5,3,1,5,-1,-1,-1,-1,-1,-1,-1,1,2,10,9,5,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,0,8,1,2,10,4,9,5,-1,-1,-1,-1,-1,-1,-1,5,2,10,5,4,2,4,0,2,-1,-1,-1,-1,-1,-1,-1,2,10,5,3,2,5,3,5,4,3,4,8,-1,-1,-1,-1,9,5,4,2,3,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,11,2,0,8,11,4,9,5,-1,-1,-1,-1,-1,-1,-1,0,5,4,0,1,5,2,3,11,-1,-1,-1,-1,-1,-1,-1,2,1,5,2,5,8,2,8,11,4,8,5,-1,-1,-1,-1,10,3,11,10,1,3,9,5,4,-1,-1,-1,-1,-1,-1,-1,4,9,5,0,8,1,8,10,1,8,11,10,-1,-1,-1,-1,5,4,0,5,0,11,5,11,10,11,0,3,-1,-1,-1,-1,5,4,8,5,8,10,10,8,11,-1,-1,-1,-1,-1,-1,-1,9,7,8,5,7,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,3,0,9,5,3,5,7,3,-1,-1,-1,-1,-1,-1,-1,0,7,8,0,1,7,1,5,7,-1,-1,-1,-1,-1,-1,-1,1,5,3,3,5,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,7,8,9,5,7,10,1,2,-1,-1,-1,-1,-1,-1,-1,10,1,2,9,5,0,5,3,0,5,7,3,-1,-1,-1,-1,8,0,2,8,2,5,8,5,7,10,5,2,-1,-1,-1,-1,2,10,5,2,5,3,3,5,7,-1,-1,-1,-1,-1,-1,-1,7,9,5,7,8,9,3,11,2,-1,-1,-1,-1,-1,-1,-1,9,5,7,9,7,2,9,2,0,2,7,11,-1,-1,-1,-1,2,3,11,0,1,8,1,7,8,1,5,7,-1,-1,-1,-1,11,2,1,11,1,7,7,1,5,-1,-1,-1,-1,-1,-1,-1,9,5,8,8,5,7,10,1,3,10,3,11,-1,-1,-1,-1,5,7,0,5,0,9,7,11,0,1,0,10,11,10,0,-1,11,10,0,11,0,3,10,5,0,8,0,7,5,7,0,-1,11,10,5,7,11,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,10,6,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,5,10,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,0,1,5,10,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,8,3,1,9,8,5,10,6,-1,-1,-1,-1,-1,-1,-1,1,6,5,2,6,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,6,5,1,2,6,3,0,8,-1,-1,-1,-1,-1,-1,-1,9,6,5,9,0,6,0,2,6,-1,-1,-1,-1,-1,-1,-1,5,9,8,5,8,2,5,2,6,3,2,8,-1,-1,-1,-1,2,3,11,10,6,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,0,8,11,2,0,10,6,5,-1,-1,-1,-1,-1,-1,-1,0,1,9,2,3,11,5,10,6,-1,-1,-1,-1,-1,-1,-1,5,10,6,1,9,2,9,11,2,9,8,11,-1,-1,-1,-1,6,3,11,6,5,3,5,1,3,-1,-1,-1,-1,-1,-1,-1,0,8,11,0,11,5,0,5,1,5,11,6,-1,-1,-1,-1,3,11,6,0,3,6,0,6,5,0,5,9,-1,-1,-1,-1,6,5,9,6,9,11,11,9,8,-1,-1,-1,-1,-1,-1,-1,5,10,6,4,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,3,0,4,7,3,6,5,10,-1,-1,-1,-1,-1,-1,-1,1,9,0,5,10,6,8,4,7,-1,-1,-1,-1,-1,-1,-1,10,6,5,1,9,7,1,7,3,7,9,4,-1,-1,-1,-1,6,1,2,6,5,1,4,7,8,-1,-1,-1,-1,-1,-1,-1,1,2,5,5,2,6,3,0,4,3,4,7,-1,-1,-1,-1,8,4,7,9,0,5,0,6,5,0,2,6,-1,-1,-1,-1,7,3,9,7,9,4,3,2,9,5,9,6,2,6,9,-1,3,11,2,7,8,4,10,6,5,-1,-1,-1,-1,-1,-1,-1,5,10,6,4,7,2,4,2,0,2,7,11,-1,-1,-1,-1,0,1,9,4,7,8,2,3,11,5,10,6,-1,-1,-1,-1,9,2,1,9,11,2,9,4,11,7,11,4,5,10,6,-1,8,4,7,3,11,5,3,5,1,5,11,6,-1,-1,-1,-1,5,1,11,5,11,6,1,0,11,7,11,4,0,4,11,-1,0,5,9,0,6,5,0,3,6,11,6,3,8,4,7,-1,6,5,9,6,9,11,4,7,9,7,11,9,-1,-1,-1,-1,10,4,9,6,4,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,10,6,4,9,10,0,8,3,-1,-1,-1,-1,-1,-1,-1,10,0,1,10,6,0,6,4,0,-1,-1,-1,-1,-1,-1,-1,8,3,1,8,1,6,8,6,4,6,1,10,-1,-1,-1,-1,1,4,9,1,2,4,2,6,4,-1,-1,-1,-1,-1,-1,-1,3,0,8,1,2,9,2,4,9,2,6,4,-1,-1,-1,-1,0,2,4,4,2,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,3,2,8,2,4,4,2,6,-1,-1,-1,-1,-1,-1,-1,10,4,9,10,6,4,11,2,3,-1,-1,-1,-1,-1,-1,-1,0,8,2,2,8,11,4,9,10,4,10,6,-1,-1,-1,-1,3,11,2,0,1,6,0,6,4,6,1,10,-1,-1,-1,-1,6,4,1,6,1,10,4,8,1,2,1,11,8,11,1,-1,9,6,4,9,3,6,9,1,3,11,6,3,-1,-1,-1,-1,8,11,1,8,1,0,11,6,1,9,1,4,6,4,1,-1,3,11,6,3,6,0,0,6,4,-1,-1,-1,-1,-1,-1,-1,6,4,8,11,6,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,10,6,7,8,10,8,9,10,-1,-1,-1,-1,-1,-1,-1,0,7,3,0,10,7,0,9,10,6,7,10,-1,-1,-1,-1,10,6,7,1,10,7,1,7,8,1,8,0,-1,-1,-1,-1,10,6,7,10,7,1,1,7,3,-1,-1,-1,-1,-1,-1,-1,1,2,6,1,6,8,1,8,9,8,6,7,-1,-1,-1,-1,2,6,9,2,9,1,6,7,9,0,9,3,7,3,9,-1,7,8,0,7,0,6,6,0,2,-1,-1,-1,-1,-1,-1,-1,7,3,2,6,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,3,11,10,6,8,10,8,9,8,6,7,-1,-1,-1,-1,2,0,7,2,7,11,0,9,7,6,7,10,9,10,7,-1,1,8,0,1,7,8,1,10,7,6,7,10,2,3,11,-1,11,2,1,11,1,7,10,6,1,6,7,1,-1,-1,-1,-1,8,9,6,8,6,7,9,1,6,11,6,3,1,3,6,-1,0,9,1,11,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,0,7,0,6,3,11,0,11,6,0,-1,-1,-1,-1,7,11,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,6,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,0,8,11,7,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,9,11,7,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,1,9,8,3,1,11,7,6,-1,-1,-1,-1,-1,-1,-1,10,1,2,6,11,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,2,10,3,0,8,6,11,7,-1,-1,-1,-1,-1,-1,-1,2,9,0,2,10,9,6,11,7,-1,-1,-1,-1,-1,-1,-1,6,11,7,2,10,3,10,8,3,10,9,8,-1,-1,-1,-1,7,2,3,6,2,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,0,8,7,6,0,6,2,0,-1,-1,-1,-1,-1,-1,-1,2,7,6,2,3,7,0,1,9,-1,-1,-1,-1,-1,-1,-1,1,6,2,1,8,6,1,9,8,8,7,6,-1,-1,-1,-1,10,7,6,10,1,7,1,3,7,-1,-1,-1,-1,-1,-1,-1,10,7,6,1,7,10,1,8,7,1,0,8,-1,-1,-1,-1,0,3,7,0,7,10,0,10,9,6,10,7,-1,-1,-1,-1,7,6,10,7,10,8,8,10,9,-1,-1,-1,-1,-1,-1,-1,6,8,4,11,8,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,6,11,3,0,6,0,4,6,-1,-1,-1,-1,-1,-1,-1,8,6,11,8,4,6,9,0,1,-1,-1,-1,-1,-1,-1,-1,9,4,6,9,6,3,9,3,1,11,3,6,-1,-1,-1,-1,6,8,4,6,11,8,2,10,1,-1,-1,-1,-1,-1,-1,-1,1,2,10,3,0,11,0,6,11,0,4,6,-1,-1,-1,-1,4,11,8,4,6,11,0,2,9,2,10,9,-1,-1,-1,-1,10,9,3,10,3,2,9,4,3,11,3,6,4,6,3,-1,8,2,3,8,4,2,4,6,2,-1,-1,-1,-1,-1,-1,-1,0,4,2,4,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,9,0,2,3,4,2,4,6,4,3,8,-1,-1,-1,-1,1,9,4,1,4,2,2,4,6,-1,-1,-1,-1,-1,-1,-1,8,1,3,8,6,1,8,4,6,6,10,1,-1,-1,-1,-1,10,1,0,10,0,6,6,0,4,-1,-1,-1,-1,-1,-1,-1,4,6,3,4,3,8,6,10,3,0,3,9,10,9,3,-1,10,9,4,6,10,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,9,5,7,6,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,4,9,5,11,7,6,-1,-1,-1,-1,-1,-1,-1,5,0,1,5,4,0,7,6,11,-1,-1,-1,-1,-1,-1,-1,11,7,6,8,3,4,3,5,4,3,1,5,-1,-1,-1,-1,9,5,4,10,1,2,7,6,11,-1,-1,-1,-1,-1,-1,-1,6,11,7,1,2,10,0,8,3,4,9,5,-1,-1,-1,-1,7,6,11,5,4,10,4,2,10,4,0,2,-1,-1,-1,-1,3,4,8,3,5,4,3,2,5,10,5,2,11,7,6,-1,7,2,3,7,6,2,5,4,9,-1,-1,-1,-1,-1,-1,-1,9,5,4,0,8,6,0,6,2,6,8,7,-1,-1,-1,-1,3,6,2,3,7,6,1,5,0,5,4,0,-1,-1,-1,-1,6,2,8,6,8,7,2,1,8,4,8,5,1,5,8,-1,9,5,4,10,1,6,1,7,6,1,3,7,-1,-1,-1,-1,1,6,10,1,7,6,1,0,7,8,7,0,9,5,4,-1,4,0,10,4,10,5,0,3,10,6,10,7,3,7,10,-1,7,6,10,7,10,8,5,4,10,4,8,10,-1,-1,-1,-1,6,9,5,6,11,9,11,8,9,-1,-1,-1,-1,-1,-1,-1,3,6,11,0,6,3,0,5,6,0,9,5,-1,-1,-1,-1,0,11,8,0,5,11,0,1,5,5,6,11,-1,-1,-1,-1,6,11,3,6,3,5,5,3,1,-1,-1,-1,-1,-1,-1,-1,1,2,10,9,5,11,9,11,8,11,5,6,-1,-1,-1,-1,0,11,3,0,6,11,0,9,6,5,6,9,1,2,10,-1,11,8,5,11,5,6,8,0,5,10,5,2,0,2,5,-1,6,11,3,6,3,5,2,10,3,10,5,3,-1,-1,-1,-1,5,8,9,5,2,8,5,6,2,3,8,2,-1,-1,-1,-1,9,5,6,9,6,0,0,6,2,-1,-1,-1,-1,-1,-1,-1,1,5,8,1,8,0,5,6,8,3,8,2,6,2,8,-1,1,5,6,2,1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,3,6,1,6,10,3,8,6,5,6,9,8,9,6,-1,10,1,0,10,0,6,9,5,0,5,6,0,-1,-1,-1,-1,0,3,8,5,6,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,10,5,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,5,10,7,5,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,5,10,11,7,5,8,3,0,-1,-1,-1,-1,-1,-1,-1,5,11,7,5,10,11,1,9,0,-1,-1,-1,-1,-1,-1,-1,10,7,5,10,11,7,9,8,1,8,3,1,-1,-1,-1,-1,11,1,2,11,7,1,7,5,1,-1,-1,-1,-1,-1,-1,-1,0,8,3,1,2,7,1,7,5,7,2,11,-1,-1,-1,-1,9,7,5,9,2,7,9,0,2,2,11,7,-1,-1,-1,-1,7,5,2,7,2,11,5,9,2,3,2,8,9,8,2,-1,2,5,10,2,3,5,3,7,5,-1,-1,-1,-1,-1,-1,-1,8,2,0,8,5,2,8,7,5,10,2,5,-1,-1,-1,-1,9,0,1,5,10,3,5,3,7,3,10,2,-1,-1,-1,-1,9,8,2,9,2,1,8,7,2,10,2,5,7,5,2,-1,1,3,5,3,7,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,7,0,7,1,1,7,5,-1,-1,-1,-1,-1,-1,-1,9,0,3,9,3,5,5,3,7,-1,-1,-1,-1,-1,-1,-1,9,8,7,5,9,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,8,4,5,10,8,10,11,8,-1,-1,-1,-1,-1,-1,-1,5,0,4,5,11,0,5,10,11,11,3,0,-1,-1,-1,-1,0,1,9,8,4,10,8,10,11,10,4,5,-1,-1,-1,-1,10,11,4,10,4,5,11,3,4,9,4,1,3,1,4,-1,2,5,1,2,8,5,2,11,8,4,5,8,-1,-1,-1,-1,0,4,11,0,11,3,4,5,11,2,11,1,5,1,11,-1,0,2,5,0,5,9,2,11,5,4,5,8,11,8,5,-1,9,4,5,2,11,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,5,10,3,5,2,3,4,5,3,8,4,-1,-1,-1,-1,5,10,2,5,2,4,4,2,0,-1,-1,-1,-1,-1,-1,-1,3,10,2,3,5,10,3,8,5,4,5,8,0,1,9,-1,5,10,2,5,2,4,1,9,2,9,4,2,-1,-1,-1,-1,8,4,5,8,5,3,3,5,1,-1,-1,-1,-1,-1,-1,-1,0,4,5,1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,4,5,8,5,3,9,0,5,0,3,5,-1,-1,-1,-1,9,4,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,11,7,4,9,11,9,10,11,-1,-1,-1,-1,-1,-1,-1,0,8,3,4,9,7,9,11,7,9,10,11,-1,-1,-1,-1,1,10,11,1,11,4,1,4,0,7,4,11,-1,-1,-1,-1,3,1,4,3,4,8,1,10,4,7,4,11,10,11,4,-1,4,11,7,9,11,4,9,2,11,9,1,2,-1,-1,-1,-1,9,7,4,9,11,7,9,1,11,2,11,1,0,8,3,-1,11,7,4,11,4,2,2,4,0,-1,-1,-1,-1,-1,-1,-1,11,7,4,11,4,2,8,3,4,3,2,4,-1,-1,-1,-1,2,9,10,2,7,9,2,3,7,7,4,9,-1,-1,-1,-1,9,10,7,9,7,4,10,2,7,8,7,0,2,0,7,-1,3,7,10,3,10,2,7,4,10,1,10,0,4,0,10,-1,1,10,2,8,7,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,9,1,4,1,7,7,1,3,-1,-1,-1,-1,-1,-1,-1,4,9,1,4,1,7,0,8,1,8,7,1,-1,-1,-1,-1,4,0,3,7,4,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,8,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,10,8,10,11,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,0,9,3,9,11,11,9,10,-1,-1,-1,-1,-1,-1,-1,0,1,10,0,10,8,8,10,11,-1,-1,-1,-1,-1,-1,-1,3,1,10,11,3,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,2,11,1,11,9,9,11,8,-1,-1,-1,-1,-1,-1,-1,3,0,9,3,9,11,1,2,9,2,11,9,-1,-1,-1,-1,0,2,11,8,0,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,2,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,3,8,2,8,10,10,8,9,-1,-1,-1,-1,-1,-1,-1,9,10,2,0,9,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,3,8,2,8,10,0,1,8,1,10,8,-1,-1,-1,-1,1,10,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,3,8,9,1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,9,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,3,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1])}},function(e,t){e.exports=function(e){e.MaskPass=function(e,t){this.scene=e,this.camera=t,this.enabled=!0,this.clear=!0,this.needsSwap=!1,this.inverse=!1},e.MaskPass.prototype={render:function(e,t,r,n){var i,o,a=e.context;a.colorMask(!1,!1,!1,!1),a.depthMask(!1),this.inverse?(i=0,o=1):(i=1,o=0),a.enable(a.STENCIL_TEST),a.stencilOp(a.REPLACE,a.REPLACE,a.REPLACE),a.stencilFunc(a.ALWAYS,i,4294967295),a.clearStencil(o),e.render(this.scene,this.camera,r,this.clear),e.render(this.scene,this.camera,t,this.clear),a.colorMask(!0,!0,!0,!0),a.depthMask(!0),a.stencilFunc(a.EQUAL,1,4294967295),a.stencilOp(a.KEEP,a.KEEP,a.KEEP)}},e.ClearMaskPass=function(){this.enabled=!0},e.ClearMaskPass.prototype={render:function(e,t,r,n){var i=e.context;i.disable(i.STENCIL_TEST)}}}},function(e,t){e.exports=function(e){e.MirrorShader={uniforms:{tDiffuse:{type:\"t\",value:null},side:{type:\"i\",value:1}},vertexShader:[\"varying vec2 vUv;\",\"void main() {\",\"vUv = uv;\",\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\"}\"].join(\"\\n\"),fragmentShader:[\"uniform sampler2D tDiffuse;\",\"uniform int side;\",\"varying vec2 vUv;\",\"void main() {\",\"vec2 p = vUv;\",\"if (side == 0){\",\"if (p.x > 0.5) p.x = 1.0 - p.x;\",\"}else if (side == 1){\",\"if (p.x < 0.5) p.x = 1.0 - p.x;\",\"}else if (side == 2){\",\"if (p.y < 0.5) p.y = 1.0 - p.y;\",\"}else if (side == 3){\",\"if (p.y > 0.5) p.y = 1.0 - p.y;\",\"} \",\"vec4 color = texture2D(tDiffuse, p);\",\"gl_FragColor = color;\",\"}\"].join(\"\\n\")}}},function(e,t){e.exports=function(e){e.NormalMapShader={uniforms:{heightMap:{type:\"t\",value:null},resolution:{type:\"v2\",value:new e.Vector2(512,512)},scale:{type:\"v2\",value:new e.Vector2(1,1)},height:{type:\"f\",value:.05}},vertexShader:[\"varying vec2 vUv;\",\"void main() {\",\"vUv = uv;\",\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\"}\"].join(\"\\n\"),fragmentShader:[\"uniform float height;\",\"uniform vec2 resolution;\",\"uniform sampler2D heightMap;\",\"varying vec2 vUv;\",\"void main() {\",\"float val = texture2D( heightMap, vUv ).x;\",\"float valU = texture2D( heightMap, vUv + vec2( 1.0 / resolution.x, 0.0 ) ).x;\",\"float valV = texture2D( heightMap, vUv + vec2( 0.0, 1.0 / resolution.y ) ).x;\",\"gl_FragColor = vec4( ( 0.5 * normalize( vec3( val - valU, val - valV, height  ) ) + 0.5 ), 1.0 );\",\"}\"].join(\"\\n\")}}},function(e,t){e.exports=function(e){e.OBJLoader=function(t){this.manager=void 0!==t?t:e.DefaultLoadingManager,this.materials=null},e.OBJLoader.prototype={constructor:e.OBJLoader,load:function(t,r,n,i){var o=this,a=new e.XHRLoader(o.manager);a.setPath(this.path),a.load(t,function(e){r(o.parse(e))},n,i)},setPath:function(e){this.path=e},setMaterials:function(e){this.materials=e},parse:function(t){console.time(\"OBJLoader\");var r,n=[],i=!1,o=[],a=[],s=[];function c(e){r={name:e,geometry:{vertices:[],normals:[],uvs:[]},material:{name:\"\",smooth:!0}},n.push(r)}function l(e){var t=parseInt(e);return 3*(t>=0?t-1:t+o.length/3)}function u(e){var t=parseInt(e);return 3*(t>=0?t-1:t+a.length/3)}function h(e){var t=parseInt(e);return 2*(t>=0?t-1:t+s.length/2)}function d(e,t,n){r.geometry.vertices.push(o[e],o[e+1],o[e+2],o[t],o[t+1],o[t+2],o[n],o[n+1],o[n+2])}function p(e,t,n){r.geometry.normals.push(a[e],a[e+1],a[e+2],a[t],a[t+1],a[t+2],a[n],a[n+1],a[n+2])}function f(e,t,n){r.geometry.uvs.push(s[e],s[e+1],s[t],s[t+1],s[n],s[n+1])}function m(e,t,r,n,i,o,a,s,c,m,v,g){var y,x=l(e),b=l(t),w=l(r);void 0===n?d(x,b,w):(d(x,b,y=l(n)),d(b,w,y)),void 0!==i&&(x=h(i),b=h(o),w=h(a),void 0===n?f(x,b,w):(f(x,b,y=h(s)),f(b,w,y))),void 0!==c&&(x=u(c),b=u(m),w=u(v),void 0===n?p(x,b,w):(p(x,b,y=u(g)),p(b,w,y)))}c(\"\");for(var v=/^v\\s+([\\d|\\.|\\+|\\-|e|E]+)\\s+([\\d|\\.|\\+|\\-|e|E]+)\\s+([\\d|\\.|\\+|\\-|e|E]+)/,g=/^vn\\s+([\\d|\\.|\\+|\\-|e|E]+)\\s+([\\d|\\.|\\+|\\-|e|E]+)\\s+([\\d|\\.|\\+|\\-|e|E]+)/,y=/^vt\\s+([\\d|\\.|\\+|\\-|e|E]+)\\s+([\\d|\\.|\\+|\\-|e|E]+)/,x=/^f\\s+(-?\\d+)\\s+(-?\\d+)\\s+(-?\\d+)(?:\\s+(-?\\d+))?/,b=/^f\\s+((-?\\d+)\\/(-?\\d+))\\s+((-?\\d+)\\/(-?\\d+))\\s+((-?\\d+)\\/(-?\\d+))(?:\\s+((-?\\d+)\\/(-?\\d+)))?/,w=/^f\\s+((-?\\d+)\\/(-?\\d+)\\/(-?\\d+))\\s+((-?\\d+)\\/(-?\\d+)\\/(-?\\d+))\\s+((-?\\d+)\\/(-?\\d+)\\/(-?\\d+))(?:\\s+((-?\\d+)\\/(-?\\d+)\\/(-?\\d+)))?/,_=/^f\\s+((-?\\d+)\\/\\/(-?\\d+))\\s+((-?\\d+)\\/\\/(-?\\d+))\\s+((-?\\d+)\\/\\/(-?\\d+))(?:\\s+((-?\\d+)\\/\\/(-?\\d+)))?/,M=/^[og]\\s+(.+)/,S=/^s\\s+(\\d+|on|off)/,T=t.split(\"\\n\"),E=0;E<T.length;E++){var C,A=T[E];if(0!==(A=A.trim()).length&&\"#\"!==A.charAt(0))if(null!==(C=v.exec(A)))o.push(parseFloat(C[1]),parseFloat(C[2]),parseFloat(C[3]));else if(null!==(C=g.exec(A)))a.push(parseFloat(C[1]),parseFloat(C[2]),parseFloat(C[3]));else if(null!==(C=y.exec(A)))s.push(parseFloat(C[1]),parseFloat(C[2]));else if(null!==(C=x.exec(A)))m(C[1],C[2],C[3],C[4]);else if(null!==(C=b.exec(A)))m(C[2],C[5],C[8],C[11],C[3],C[6],C[9],C[12]);else if(null!==(C=w.exec(A)))m(C[2],C[6],C[10],C[14],C[3],C[7],C[11],C[15],C[4],C[8],C[12],C[16]);else if(null!==(C=_.exec(A)))m(C[2],C[5],C[8],C[11],void 0,void 0,void 0,void 0,C[3],C[6],C[9],C[12]);else if(null!==(C=M.exec(A))){var L=C[1].trim();!1===i?(i=!0,r.name=L):c(L)}else if(/^usemtl /.test(A))r.material.name=A.substring(7).trim();else if(/^mtllib /.test(A));else{if(null===(C=S.exec(A)))throw new Error(\"Unexpected line: \"+A);r.material.smooth=\"1\"===C[1]||\"on\"===C[1]}}for(var R=new e.Group,P=(E=0,n.length);E<P;E++){var D,U=(r=n[E]).geometry,I=new e.BufferGeometry;I.addAttribute(\"position\",new e.BufferAttribute(new Float32Array(U.vertices),3)),U.normals.length>0?I.addAttribute(\"normal\",new e.BufferAttribute(new Float32Array(U.normals),3)):I.computeVertexNormals(),U.uvs.length>0&&I.addAttribute(\"uv\",new e.BufferAttribute(new Float32Array(U.uvs),2)),null!==this.materials&&(D=this.materials.create(r.material.name)),D||((D=new e.MeshPhongMaterial).name=r.material.name),D.shading=r.material.smooth?e.SmoothShading:e.FlatShading;var F=new e.Mesh(I,D);F.name=r.name,R.add(F)}return console.timeEnd(\"OBJLoader\"),R}}}},function(e,t){e.exports=function(e){e.ShaderLib.ocean_sim_vertex={varying:{vUV:{type:\"v2\"}},vertexShader:[\"varying vec2 vUV;\",\"void main (void) {\",\"vUV = position.xy * 0.5 + 0.5;\",\"gl_Position = vec4(position, 1.0 );\",\"}\"].join(\"\\n\")},e.ShaderLib.ocean_subtransform={uniforms:{u_input:{type:\"t\",value:null},u_transformSize:{type:\"f\",value:512},u_subtransformSize:{type:\"f\",value:250}},varying:{vUV:{type:\"v2\"}},fragmentShader:[\"precision highp float;\",\"const float PI = 3.14159265359;\",\"uniform sampler2D u_input;\",\"uniform float u_transformSize;\",\"uniform float u_subtransformSize;\",\"varying vec2 vUV;\",\"vec2 multiplyComplex (vec2 a, vec2 b) {\",\"return vec2(a[0] * b[0] - a[1] * b[1], a[1] * b[0] + a[0] * b[1]);\",\"}\",\"void main (void) {\",\"#ifdef HORIZONTAL\",\"float index = vUV.x * u_transformSize - 0.5;\",\"#else\",\"float index = vUV.y * u_transformSize - 0.5;\",\"#endif\",\"float evenIndex = floor(index / u_subtransformSize) * (u_subtransformSize * 0.5) + mod(index, u_subtransformSize * 0.5);\",\"#ifdef HORIZONTAL\",\"vec4 even = texture2D(u_input, vec2(evenIndex + 0.5, gl_FragCoord.y) / u_transformSize).rgba;\",\"vec4 odd = texture2D(u_input, vec2(evenIndex + u_transformSize * 0.5 + 0.5, gl_FragCoord.y) / u_transformSize).rgba;\",\"#else\",\"vec4 even = texture2D(u_input, vec2(gl_FragCoord.x, evenIndex + 0.5) / u_transformSize).rgba;\",\"vec4 odd = texture2D(u_input, vec2(gl_FragCoord.x, evenIndex + u_transformSize * 0.5 + 0.5) / u_transformSize).rgba;\",\"#endif\",\"float twiddleArgument = -2.0 * PI * (index / u_subtransformSize);\",\"vec2 twiddle = vec2(cos(twiddleArgument), sin(twiddleArgument));\",\"vec2 outputA = even.xy + multiplyComplex(twiddle, odd.xy);\",\"vec2 outputB = even.zw + multiplyComplex(twiddle, odd.zw);\",\"gl_FragColor = vec4(outputA, outputB);\",\"}\"].join(\"\\n\")},e.ShaderLib.ocean_initial_spectrum={uniforms:{u_wind:{type:\"v2\",value:new e.Vector2(10,10)},u_resolution:{type:\"f\",value:512},u_size:{type:\"f\",value:250}},fragmentShader:[\"precision highp float;\",\"const float PI = 3.14159265359;\",\"const float G = 9.81;\",\"const float KM = 370.0;\",\"const float CM = 0.23;\",\"uniform vec2 u_wind;\",\"uniform float u_resolution;\",\"uniform float u_size;\",\"float square (float x) {\",\"return x * x;\",\"}\",\"float omega (float k) {\",\"return sqrt(G * k * (1.0 + square(k / KM)));\",\"}\",\"float tanh (float x) {\",\"return (1.0 - exp(-2.0 * x)) / (1.0 + exp(-2.0 * x));\",\"}\",\"void main (void) {\",\"vec2 coordinates = gl_FragCoord.xy - 0.5;\",\"float n = (coordinates.x < u_resolution * 0.5) ? coordinates.x : coordinates.x - u_resolution;\",\"float m = (coordinates.y < u_resolution * 0.5) ? coordinates.y : coordinates.y - u_resolution;\",\"vec2 K = (2.0 * PI * vec2(n, m)) / u_size;\",\"float k = length(K);\",\"float l_wind = length(u_wind);\",\"float Omega = 0.84;\",\"float kp = G * square(Omega / l_wind);\",\"float c = omega(k) / k;\",\"float cp = omega(kp) / kp;\",\"float Lpm = exp(-1.25 * square(kp / k));\",\"float gamma = 1.7;\",\"float sigma = 0.08 * (1.0 + 4.0 * pow(Omega, -3.0));\",\"float Gamma = exp(-square(sqrt(k / kp) - 1.0) / 2.0 * square(sigma));\",\"float Jp = pow(gamma, Gamma);\",\"float Fp = Lpm * Jp * exp(-Omega / sqrt(10.0) * (sqrt(k / kp) - 1.0));\",\"float alphap = 0.006 * sqrt(Omega);\",\"float Bl = 0.5 * alphap * cp / c * Fp;\",\"float z0 = 0.000037 * square(l_wind) / G * pow(l_wind / cp, 0.9);\",\"float uStar = 0.41 * l_wind / log(10.0 / z0);\",\"float alpham = 0.01 * ((uStar < CM) ? (1.0 + log(uStar / CM)) : (1.0 + 3.0 * log(uStar / CM)));\",\"float Fm = exp(-0.25 * square(k / KM - 1.0));\",\"float Bh = 0.5 * alpham * CM / c * Fm * Lpm;\",\"float a0 = log(2.0) / 4.0;\",\"float am = 0.13 * uStar / CM;\",\"float Delta = tanh(a0 + 4.0 * pow(c / cp, 2.5) + am * pow(CM / c, 2.5));\",\"float cosPhi = dot(normalize(u_wind), normalize(K));\",\"float S = (1.0 / (2.0 * PI)) * pow(k, -4.0) * (Bl + Bh) * (1.0 + Delta * (2.0 * cosPhi * cosPhi - 1.0));\",\"float dk = 2.0 * PI / u_size;\",\"float h = sqrt(S / 2.0) * dk;\",\"if (K.x == 0.0 && K.y == 0.0) {\",\"h = 0.0;\",\"}\",\"gl_FragColor = vec4(h, 0.0, 0.0, 0.0);\",\"}\"].join(\"\\n\")},e.ShaderLib.ocean_phase={uniforms:{u_phases:{type:\"t\",value:null},u_deltaTime:{type:\"f\",value:null},u_resolution:{type:\"f\",value:null},u_size:{type:\"f\",value:null}},varying:{vUV:{type:\"v2\"}},fragmentShader:[\"precision highp float;\",\"const float PI = 3.14159265359;\",\"const float G = 9.81;\",\"const float KM = 370.0;\",\"varying vec2 vUV;\",\"uniform sampler2D u_phases;\",\"uniform float u_deltaTime;\",\"uniform float u_resolution;\",\"uniform float u_size;\",\"float omega (float k) {\",\"return sqrt(G * k * (1.0 + k * k / KM * KM));\",\"}\",\"void main (void) {\",\"float deltaTime = 1.0 / 60.0;\",\"vec2 coordinates = gl_FragCoord.xy - 0.5;\",\"float n = (coordinates.x < u_resolution * 0.5) ? coordinates.x : coordinates.x - u_resolution;\",\"float m = (coordinates.y < u_resolution * 0.5) ? coordinates.y : coordinates.y - u_resolution;\",\"vec2 waveVector = (2.0 * PI * vec2(n, m)) / u_size;\",\"float phase = texture2D(u_phases, vUV).r;\",\"float deltaPhase = omega(length(waveVector)) * u_deltaTime;\",\"phase = mod(phase + deltaPhase, 2.0 * PI);\",\"gl_FragColor = vec4(phase, 0.0, 0.0, 0.0);\",\"}\"].join(\"\\n\")},e.ShaderLib.ocean_spectrum={uniforms:{u_size:{type:\"f\",value:null},u_resolution:{type:\"f\",value:null},u_choppiness:{type:\"f\",value:null},u_phases:{type:\"t\",value:null},u_initialSpectrum:{type:\"t\",value:null}},varying:{vUV:{type:\"v2\"}},fragmentShader:[\"precision highp float;\",\"const float PI = 3.14159265359;\",\"const float G = 9.81;\",\"const float KM = 370.0;\",\"varying vec2 vUV;\",\"uniform float u_size;\",\"uniform float u_resolution;\",\"uniform float u_choppiness;\",\"uniform sampler2D u_phases;\",\"uniform sampler2D u_initialSpectrum;\",\"vec2 multiplyComplex (vec2 a, vec2 b) {\",\"return vec2(a[0] * b[0] - a[1] * b[1], a[1] * b[0] + a[0] * b[1]);\",\"}\",\"vec2 multiplyByI (vec2 z) {\",\"return vec2(-z[1], z[0]);\",\"}\",\"float omega (float k) {\",\"return sqrt(G * k * (1.0 + k * k / KM * KM));\",\"}\",\"void main (void) {\",\"vec2 coordinates = gl_FragCoord.xy - 0.5;\",\"float n = (coordinates.x < u_resolution * 0.5) ? coordinates.x : coordinates.x - u_resolution;\",\"float m = (coordinates.y < u_resolution * 0.5) ? coordinates.y : coordinates.y - u_resolution;\",\"vec2 waveVector = (2.0 * PI * vec2(n, m)) / u_size;\",\"float phase = texture2D(u_phases, vUV).r;\",\"vec2 phaseVector = vec2(cos(phase), sin(phase));\",\"vec2 h0 = texture2D(u_initialSpectrum, vUV).rg;\",\"vec2 h0Star = texture2D(u_initialSpectrum, vec2(1.0 - vUV + 1.0 / u_resolution)).rg;\",\"h0Star.y *= -1.0;\",\"vec2 h = multiplyComplex(h0, phaseVector) + multiplyComplex(h0Star, vec2(phaseVector.x, -phaseVector.y));\",\"vec2 hX = -multiplyByI(h * (waveVector.x / length(waveVector))) * u_choppiness;\",\"vec2 hZ = -multiplyByI(h * (waveVector.y / length(waveVector))) * u_choppiness;\",\"if (waveVector.x == 0.0 && waveVector.y == 0.0) {\",\"h = vec2(0.0);\",\"hX = vec2(0.0);\",\"hZ = vec2(0.0);\",\"}\",\"gl_FragColor = vec4(hX + multiplyByI(h), hZ);\",\"}\"].join(\"\\n\")},e.ShaderLib.ocean_normals={uniforms:{u_displacementMap:{type:\"t\",value:null},u_resolution:{type:\"f\",value:null},u_size:{type:\"f\",value:null}},varying:{vUV:{type:\"v2\"}},fragmentShader:[\"precision highp float;\",\"varying vec2 vUV;\",\"uniform sampler2D u_displacementMap;\",\"uniform float u_resolution;\",\"uniform float u_size;\",\"void main (void) {\",\"float texel = 1.0 / u_resolution;\",\"float texelSize = u_size / u_resolution;\",\"vec3 center = texture2D(u_displacementMap, vUV).rgb;\",\"vec3 right = vec3(texelSize, 0.0, 0.0) + texture2D(u_displacementMap, vUV + vec2(texel, 0.0)).rgb - center;\",\"vec3 left = vec3(-texelSize, 0.0, 0.0) + texture2D(u_displacementMap, vUV + vec2(-texel, 0.0)).rgb - center;\",\"vec3 top = vec3(0.0, 0.0, -texelSize) + texture2D(u_displacementMap, vUV + vec2(0.0, -texel)).rgb - center;\",\"vec3 bottom = vec3(0.0, 0.0, texelSize) + texture2D(u_displacementMap, vUV + vec2(0.0, texel)).rgb - center;\",\"vec3 topRight = cross(right, top);\",\"vec3 topLeft = cross(top, left);\",\"vec3 bottomLeft = cross(left, bottom);\",\"vec3 bottomRight = cross(bottom, right);\",\"gl_FragColor = vec4(normalize(topRight + topLeft + bottomLeft + bottomRight), 1.0);\",\"}\"].join(\"\\n\")},e.ShaderLib.ocean_main={uniforms:{u_displacementMap:{type:\"t\",value:null},u_normalMap:{type:\"t\",value:null},u_geometrySize:{type:\"f\",value:null},u_size:{type:\"f\",value:null},u_projectionMatrix:{type:\"m4\",value:null},u_viewMatrix:{type:\"m4\",value:null},u_cameraPosition:{type:\"v3\",value:null},u_skyColor:{type:\"v3\",value:null},u_oceanColor:{type:\"v3\",value:null},u_sunDirection:{type:\"v3\",value:null},u_exposure:{type:\"f\",value:null}},varying:{vPos:{type:\"v3\"},vUV:{type:\"v2\"}},vertexShader:[\"precision highp float;\",\"varying vec3 vPos;\",\"varying vec2 vUV;\",\"uniform mat4 u_projectionMatrix;\",\"uniform mat4 u_viewMatrix;\",\"uniform float u_size;\",\"uniform float u_geometrySize;\",\"uniform sampler2D u_displacementMap;\",\"void main (void) {\",\"vec3 newPos = position + texture2D(u_displacementMap, uv).rgb * (u_geometrySize / u_size);\",\"vPos = newPos;\",\"vUV = uv;\",\"gl_Position = u_projectionMatrix * u_viewMatrix * vec4(newPos, 1.0);\",\"}\"].join(\"\\n\"),fragmentShader:[\"precision highp float;\",\"varying vec3 vPos;\",\"varying vec2 vUV;\",\"uniform sampler2D u_displacementMap;\",\"uniform sampler2D u_normalMap;\",\"uniform vec3 u_cameraPosition;\",\"uniform vec3 u_oceanColor;\",\"uniform vec3 u_skyColor;\",\"uniform vec3 u_sunDirection;\",\"uniform float u_exposure;\",\"vec3 hdr (vec3 color, float exposure) {\",\"return 1.0 - exp(-color * exposure);\",\"}\",\"void main (void) {\",\"vec3 normal = texture2D(u_normalMap, vUV).rgb;\",\"vec3 view = normalize(u_cameraPosition - vPos);\",\"float fresnel = 0.02 + 0.98 * pow(1.0 - dot(normal, view), 5.0);\",\"vec3 sky = fresnel * u_skyColor;\",\"float diffuse = clamp(dot(normal, normalize(u_sunDirection)), 0.0, 1.0);\",\"vec3 water = (1.0 - fresnel) * u_oceanColor * u_skyColor * diffuse;\",\"vec3 color = sky + water;\",\"gl_FragColor = vec4(hdr(color, u_exposure), 1.0);\",\"}\"].join(\"\\n\")}}},function(e,t){e.exports=function(e){e.OrbitControls=function(t,r){var n,i,o,a,s;this.object=t,this.domElement=void 0!==r?r:document,this.enabled=!0,this.target=new e.Vector3,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.25,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.enableKeys=!0,this.keys={LEFT:37,UP:38,RIGHT:39,BOTTOM:40},this.mouseButtons={ORBIT:e.MOUSE.LEFT,ZOOM:e.MOUSE.MIDDLE,PAN:e.MOUSE.RIGHT},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this.getPolarAngle=function(){return m.phi},this.getAzimuthalAngle=function(){return m.theta},this.reset=function(){c.target.copy(c.target0),c.object.position.copy(c.position0),c.object.zoom=c.zoom0,c.object.updateProjectionMatrix(),c.dispatchEvent(l),c.update(),p=d.NONE},this.update=(n=new e.Vector3,i=(new e.Quaternion).setFromUnitVectors(t.up,new e.Vector3(0,1,0)),o=i.clone().inverse(),a=new e.Vector3,s=new e.Quaternion,function(){var e=c.object.position;return n.copy(e).sub(c.target),n.applyQuaternion(i),m.setFromVector3(n),c.autoRotate&&p===d.NONE&&R(2*Math.PI/60/60*c.autoRotateSpeed),m.theta+=v.theta,m.phi+=v.phi,m.theta=Math.max(c.minAzimuthAngle,Math.min(c.maxAzimuthAngle,m.theta)),m.phi=Math.max(c.minPolarAngle,Math.min(c.maxPolarAngle,m.phi)),m.makeSafe(),m.radius*=g,m.radius=Math.max(c.minDistance,Math.min(c.maxDistance,m.radius)),c.target.add(y),n.setFromSpherical(m),n.applyQuaternion(o),e.copy(c.target).add(n),c.object.lookAt(c.target),!0===c.enableDamping?(v.theta*=1-c.dampingFactor,v.phi*=1-c.dampingFactor):v.set(0,0,0),g=1,y.set(0,0,0),!!(x||a.distanceToSquared(c.object.position)>f||8*(1-s.dot(c.object.quaternion))>f)&&(c.dispatchEvent(l),a.copy(c.object.position),s.copy(c.object.quaternion),x=!1,!0)}),this.dispose=function(){c.domElement.removeEventListener(\"contextmenu\",X,!1),c.domElement.removeEventListener(\"mousedown\",O,!1),c.domElement.removeEventListener(\"mousewheel\",z,!1),c.domElement.removeEventListener(\"MozMousePixelScroll\",z,!1),c.domElement.removeEventListener(\"touchstart\",j,!1),c.domElement.removeEventListener(\"touchend\",W,!1),c.domElement.removeEventListener(\"touchmove\",H,!1),document.removeEventListener(\"mousemove\",V,!1),document.removeEventListener(\"mouseup\",G,!1),document.removeEventListener(\"mouseout\",G,!1),window.removeEventListener(\"keydown\",k,!1)};var c=this,l={type:\"change\"},u={type:\"start\"},h={type:\"end\"},d={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_DOLLY:4,TOUCH_PAN:5},p=d.NONE,f=1e-6,m=new e.Spherical,v=new e.Spherical,g=1,y=new e.Vector3,x=!1,b=new e.Vector2,w=new e.Vector2,_=new e.Vector2,M=new e.Vector2,S=new e.Vector2,T=new e.Vector2,E=new e.Vector2,C=new e.Vector2,A=new e.Vector2;function L(){return Math.pow(.95,c.zoomSpeed)}function R(e){v.theta-=e}function P(e){v.phi-=e}var D,U=(D=new e.Vector3,function(e,t){D.setFromMatrixColumn(t,0),D.multiplyScalar(-e),y.add(D)}),I=function(){var t=new e.Vector3;return function(e,r){t.setFromMatrixColumn(r,1),t.multiplyScalar(e),y.add(t)}}(),F=function(){var t=new e.Vector3;return function(r,n){var i=c.domElement===document?c.domElement.body:c.domElement;if(c.object instanceof e.PerspectiveCamera){var o=c.object.position;t.copy(o).sub(c.target);var a=t.length();a*=Math.tan(c.object.fov/2*Math.PI/180),U(2*r*a/i.clientHeight,c.object.matrix),I(2*n*a/i.clientHeight,c.object.matrix)}else c.object instanceof e.OrthographicCamera?(U(r*(c.object.right-c.object.left)/c.object.zoom/i.clientWidth,c.object.matrix),I(n*(c.object.top-c.object.bottom)/c.object.zoom/i.clientHeight,c.object.matrix)):(console.warn(\"WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.\"),c.enablePan=!1)}}();function N(t){c.object instanceof e.PerspectiveCamera?g/=t:c.object instanceof e.OrthographicCamera?(c.object.zoom=Math.max(c.minZoom,Math.min(c.maxZoom,c.object.zoom*t)),c.object.updateProjectionMatrix(),x=!0):(console.warn(\"WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\"),c.enableZoom=!1)}function B(t){c.object instanceof e.PerspectiveCamera?g*=t:c.object instanceof e.OrthographicCamera?(c.object.zoom=Math.max(c.minZoom,Math.min(c.maxZoom,c.object.zoom/t)),c.object.updateProjectionMatrix(),x=!0):(console.warn(\"WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\"),c.enableZoom=!1)}function O(e){if(!1!==c.enabled){if(e.preventDefault(),e.button===c.mouseButtons.ORBIT){if(!1===c.enableRotate)return;!function(e){b.set(e.clientX,e.clientY)}(e),p=d.ROTATE}else if(e.button===c.mouseButtons.ZOOM){if(!1===c.enableZoom)return;!function(e){E.set(e.clientX,e.clientY)}(e),p=d.DOLLY}else if(e.button===c.mouseButtons.PAN){if(!1===c.enablePan)return;!function(e){M.set(e.clientX,e.clientY)}(e),p=d.PAN}p!==d.NONE&&(document.addEventListener(\"mousemove\",V,!1),document.addEventListener(\"mouseup\",G,!1),document.addEventListener(\"mouseout\",G,!1),c.dispatchEvent(u))}}function V(e){if(!1!==c.enabled)if(e.preventDefault(),p===d.ROTATE){if(!1===c.enableRotate)return;!function(e){w.set(e.clientX,e.clientY),_.subVectors(w,b);var t=c.domElement===document?c.domElement.body:c.domElement;R(2*Math.PI*_.x/t.clientWidth*c.rotateSpeed),P(2*Math.PI*_.y/t.clientHeight*c.rotateSpeed),b.copy(w),c.update()}(e)}else if(p===d.DOLLY){if(!1===c.enableZoom)return;!function(e){C.set(e.clientX,e.clientY),A.subVectors(C,E),A.y>0?N(L()):A.y<0&&B(L()),E.copy(C),c.update()}(e)}else if(p===d.PAN){if(!1===c.enablePan)return;!function(e){S.set(e.clientX,e.clientY),T.subVectors(S,M),F(T.x,T.y),M.copy(S),c.update()}(e)}}function G(e){!1!==c.enabled&&(document.removeEventListener(\"mousemove\",V,!1),document.removeEventListener(\"mouseup\",G,!1),document.removeEventListener(\"mouseout\",G,!1),c.dispatchEvent(h),p=d.NONE)}function z(e){!1===c.enabled||!1===c.enableZoom||p!==d.NONE&&p!==d.ROTATE||(e.preventDefault(),e.stopPropagation(),function(e){var t=0;void 0!==e.wheelDelta?t=e.wheelDelta:void 0!==e.detail&&(t=-e.detail),t>0?B(L()):t<0&&N(L()),c.update()}(e),c.dispatchEvent(u),c.dispatchEvent(h))}function k(e){!1!==c.enabled&&!1!==c.enableKeys&&!1!==c.enablePan&&function(e){switch(e.keyCode){case c.keys.UP:F(0,c.keyPanSpeed),c.update();break;case c.keys.BOTTOM:F(0,-c.keyPanSpeed),c.update();break;case c.keys.LEFT:F(c.keyPanSpeed,0),c.update();break;case c.keys.RIGHT:F(-c.keyPanSpeed,0),c.update()}}(e)}function j(e){if(!1!==c.enabled){switch(e.touches.length){case 1:if(!1===c.enableRotate)return;!function(e){b.set(e.touches[0].pageX,e.touches[0].pageY)}(e),p=d.TOUCH_ROTATE;break;case 2:if(!1===c.enableZoom)return;!function(e){var t=e.touches[0].pageX-e.touches[1].pageX,r=e.touches[0].pageY-e.touches[1].pageY,n=Math.sqrt(t*t+r*r);E.set(0,n)}(e),p=d.TOUCH_DOLLY;break;case 3:if(!1===c.enablePan)return;!function(e){M.set(e.touches[0].pageX,e.touches[0].pageY)}(e),p=d.TOUCH_PAN;break;default:p=d.NONE}p!==d.NONE&&c.dispatchEvent(u)}}function H(e){if(!1!==c.enabled)switch(e.preventDefault(),e.stopPropagation(),e.touches.length){case 1:if(!1===c.enableRotate)return;if(p!==d.TOUCH_ROTATE)return;!function(e){w.set(e.touches[0].pageX,e.touches[0].pageY),_.subVectors(w,b);var t=c.domElement===document?c.domElement.body:c.domElement;R(2*Math.PI*_.x/t.clientWidth*c.rotateSpeed),P(2*Math.PI*_.y/t.clientHeight*c.rotateSpeed),b.copy(w),c.update()}(e);break;case 2:if(!1===c.enableZoom)return;if(p!==d.TOUCH_DOLLY)return;!function(e){var t=e.touches[0].pageX-e.touches[1].pageX,r=e.touches[0].pageY-e.touches[1].pageY,n=Math.sqrt(t*t+r*r);C.set(0,n),A.subVectors(C,E),A.y>0?B(L()):A.y<0&&N(L()),E.copy(C),c.update()}(e);break;case 3:if(!1===c.enablePan)return;if(p!==d.TOUCH_PAN)return;!function(e){S.set(e.touches[0].pageX,e.touches[0].pageY),T.subVectors(S,M),F(T.x,T.y),M.copy(S),c.update()}(e);break;default:p=d.NONE}}function W(e){!1!==c.enabled&&(c.dispatchEvent(h),p=d.NONE)}function X(e){e.preventDefault()}c.domElement.addEventListener(\"contextmenu\",X,!1),c.domElement.addEventListener(\"mousedown\",O,!1),c.domElement.addEventListener(\"mousewheel\",z,!1),c.domElement.addEventListener(\"MozMousePixelScroll\",z,!1),c.domElement.addEventListener(\"touchstart\",j,!1),c.domElement.addEventListener(\"touchend\",W,!1),c.domElement.addEventListener(\"touchmove\",H,!1),window.addEventListener(\"keydown\",k,!1),this.update()},e.OrbitControls.prototype=Object.create(e.EventDispatcher.prototype),e.OrbitControls.prototype.constructor=e.OrbitControls,Object.defineProperties(e.OrbitControls.prototype,{center:{get:function(){return console.warn(\"THREE.OrbitControls: .center has been renamed to .target\"),this.target}},noZoom:{get:function(){return console.warn(\"THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.\"),!this.enableZoom},set:function(e){console.warn(\"THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.\"),this.enableZoom=!e}},noRotate:{get:function(){return console.warn(\"THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.\"),!this.enableRotate},set:function(e){console.warn(\"THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.\"),this.enableRotate=!e}},noPan:{get:function(){return console.warn(\"THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.\"),!this.enablePan},set:function(e){console.warn(\"THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.\"),this.enablePan=!e}},noKeys:{get:function(){return console.warn(\"THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.\"),!this.enableKeys},set:function(e){console.warn(\"THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.\"),this.enableKeys=!e}},staticMoving:{get:function(){return console.warn(\"THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.\"),!this.enableDamping},set:function(e){console.warn(\"THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.\"),this.enableDamping=!e}},dynamicDampingFactor:{get:function(){return console.warn(\"THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.\"),this.dampingFactor},set:function(e){console.warn(\"THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.\"),this.dampingFactor=e}}})}},function(e,t){e.exports=function(e){e.ParallaxShader={modes:{none:\"NO_PARALLAX\",basic:\"USE_BASIC_PARALLAX\",steep:\"USE_STEEP_PARALLAX\",occlusion:\"USE_OCLUSION_PARALLAX\",relief:\"USE_RELIEF_PARALLAX\"},uniforms:{bumpMap:{type:\"t\",value:null},map:{type:\"t\",value:null},parallaxScale:{type:\"f\",value:null},parallaxMinLayers:{type:\"f\",value:null},parallaxMaxLayers:{type:\"f\",value:null}},vertexShader:[\"varying vec2 vUv;\",\"varying vec3 vViewPosition;\",\"varying vec3 vNormal;\",\"void main() {\",\"vUv = uv;\",\"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\"vViewPosition = -mvPosition.xyz;\",\"vNormal = normalize( normalMatrix * normal );\",\"gl_Position = projectionMatrix * mvPosition;\",\"}\"].join(\"\\n\"),fragmentShader:[\"uniform sampler2D bumpMap;\",\"uniform sampler2D map;\",\"uniform float parallaxScale;\",\"uniform float parallaxMinLayers;\",\"uniform float parallaxMaxLayers;\",\"varying vec2 vUv;\",\"varying vec3 vViewPosition;\",\"varying vec3 vNormal;\",\"#ifdef USE_BASIC_PARALLAX\",\"vec2 parallaxMap( in vec3 V ) {\",\"float initialHeight = texture2D( bumpMap, vUv ).r;\",\"vec2 texCoordOffset = parallaxScale * V.xy * initialHeight;\",\"return vUv - texCoordOffset;\",\"}\",\"#else\",\"vec2 parallaxMap( in vec3 V ) {\",\"float numLayers = mix( parallaxMaxLayers, parallaxMinLayers, abs( dot( vec3( 0.0, 0.0, 1.0 ), V ) ) );\",\"float layerHeight = 1.0 / numLayers;\",\"float currentLayerHeight = 0.0;\",\"vec2 dtex = parallaxScale * V.xy / V.z / numLayers;\",\"vec2 currentTextureCoords = vUv;\",\"float heightFromTexture = texture2D( bumpMap, currentTextureCoords ).r;\",\"for ( int i = 0; i < 30; i += 1 ) {\",\"if ( heightFromTexture <= currentLayerHeight ) {\",\"break;\",\"}\",\"currentLayerHeight += layerHeight;\",\"currentTextureCoords -= dtex;\",\"heightFromTexture = texture2D( bumpMap, currentTextureCoords ).r;\",\"}\",\"#ifdef USE_STEEP_PARALLAX\",\"return currentTextureCoords;\",\"#elif defined( USE_RELIEF_PARALLAX )\",\"vec2 deltaTexCoord = dtex / 2.0;\",\"float deltaHeight = layerHeight / 2.0;\",\"currentTextureCoords += deltaTexCoord;\",\"currentLayerHeight -= deltaHeight;\",\"const int numSearches = 5;\",\"for ( int i = 0; i < numSearches; i += 1 ) {\",\"deltaTexCoord /= 2.0;\",\"deltaHeight /= 2.0;\",\"heightFromTexture = texture2D( bumpMap, currentTextureCoords ).r;\",\"if( heightFromTexture > currentLayerHeight ) {\",\"currentTextureCoords -= deltaTexCoord;\",\"currentLayerHeight += deltaHeight;\",\"} else {\",\"currentTextureCoords += deltaTexCoord;\",\"currentLayerHeight -= deltaHeight;\",\"}\",\"}\",\"return currentTextureCoords;\",\"#elif defined( USE_OCLUSION_PARALLAX )\",\"vec2 prevTCoords = currentTextureCoords + dtex;\",\"float nextH = heightFromTexture - currentLayerHeight;\",\"float prevH = texture2D( bumpMap, prevTCoords ).r - currentLayerHeight + layerHeight;\",\"float weight = nextH / ( nextH - prevH );\",\"return prevTCoords * weight + currentTextureCoords * ( 1.0 - weight );\",\"#else\",\"return vUv;\",\"#endif\",\"}\",\"#endif\",\"vec2 perturbUv( vec3 surfPosition, vec3 surfNormal, vec3 viewPosition ) {\",\"vec2 texDx = dFdx( vUv );\",\"vec2 texDy = dFdy( vUv );\",\"vec3 vSigmaX = dFdx( surfPosition );\",\"vec3 vSigmaY = dFdy( surfPosition );\",\"vec3 vR1 = cross( vSigmaY, surfNormal );\",\"vec3 vR2 = cross( surfNormal, vSigmaX );\",\"float fDet = dot( vSigmaX, vR1 );\",\"vec2 vProjVscr = ( 1.0 / fDet ) * vec2( dot( vR1, viewPosition ), dot( vR2, viewPosition ) );\",\"vec3 vProjVtex;\",\"vProjVtex.xy = texDx * vProjVscr.x + texDy * vProjVscr.y;\",\"vProjVtex.z = dot( surfNormal, viewPosition );\",\"return parallaxMap( vProjVtex );\",\"}\",\"void main() {\",\"vec2 mapUv = perturbUv( -vViewPosition, normalize( vNormal ), normalize( vViewPosition ) );\",\"gl_FragColor = texture2D( map, mapUv );\",\"}\"].join(\"\\n\")}}},function(e,t){e.exports=function(e){e.RenderableObject=function(){this.id=0,this.object=null,this.z=0,this.renderOrder=0},e.RenderableFace=function(){this.id=0,this.v1=new e.RenderableVertex,this.v2=new e.RenderableVertex,this.v3=new e.RenderableVertex,this.normalModel=new e.Vector3,this.vertexNormalsModel=[new e.Vector3,new e.Vector3,new e.Vector3],this.vertexNormalsLength=0,this.color=new e.Color,this.material=null,this.uvs=[new e.Vector2,new e.Vector2,new e.Vector2],this.z=0,this.renderOrder=0},e.RenderableVertex=function(){this.position=new e.Vector3,this.positionWorld=new e.Vector3,this.positionScreen=new e.Vector4,this.visible=!0},e.RenderableVertex.prototype.copy=function(e){this.positionWorld.copy(e.positionWorld),this.positionScreen.copy(e.positionScreen)},e.RenderableLine=function(){this.id=0,this.v1=new e.RenderableVertex,this.v2=new e.RenderableVertex,this.vertexColors=[new e.Color,new e.Color],this.material=null,this.z=0,this.renderOrder=0},e.RenderableSprite=function(){this.id=0,this.object=null,this.x=0,this.y=0,this.z=0,this.rotation=0,this.scale=new e.Vector2,this.material=null,this.renderOrder=0},e.Projector=function(){var t,r,n,i,o,a,s,c,l,u,h,d=[],p=0,f=[],m=0,v=[],g=0,y=[],x=0,b=[],w=0,_={objects:[],lights:[],elements:[]},M=new e.Vector3,S=new e.Vector4,T=new e.Box3(new e.Vector3(-1,-1,-1),new e.Vector3(1,1,1)),E=new e.Box3,C=new Array(3),A=(new Array(4),new e.Matrix4),L=new e.Matrix4,R=new e.Matrix4,P=new e.Matrix3,D=new e.Frustum,U=new e.Vector4,I=new e.Vector4;this.projectVector=function(e,t){console.warn(\"THREE.Projector: .projectVector() is now vector.project().\"),e.project(t)},this.unprojectVector=function(e,t){console.warn(\"THREE.Projector: .unprojectVector() is now vector.unproject().\"),e.unproject(t)},this.pickingRay=function(e,t){console.error(\"THREE.Projector: .pickingRay() is now raycaster.setFromCamera().\")};var F=new function(){var t=[],r=[],i=null,a=null,c=new e.Matrix3;function l(e){var t=e.position,r=e.positionWorld,n=e.positionScreen;r.copy(t).applyMatrix4(h),n.copy(r).applyMatrix4(L);var i=1/n.w;n.x*=i,n.y*=i,n.z*=i,e.visible=n.x>=-1&&n.x<=1&&n.y>=-1&&n.y<=1&&n.z>=-1&&n.z<=1}function u(e,t,r){return!0===e.visible||!0===t.visible||!0===r.visible||(C[0]=e.positionScreen,C[1]=t.positionScreen,C[2]=r.positionScreen,T.intersectsBox(E.setFromPoints(C)))}function d(e,t,r){return(r.positionScreen.x-e.positionScreen.x)*(t.positionScreen.y-e.positionScreen.y)-(r.positionScreen.y-e.positionScreen.y)*(t.positionScreen.x-e.positionScreen.x)<0}return{setObject:function(e){a=(i=e).material,c.getNormalMatrix(i.matrixWorld),t.length=0,r.length=0},projectVertex:l,checkTriangleVisibility:u,checkBackfaceCulling:d,pushVertex:function(e,t,r){(n=N()).position.set(e,t,r),l(n)},pushNormal:function(e,r,n){t.push(e,r,n)},pushUv:function(e,t){r.push(e,t)},pushLine:function(e,t){var r=f[e],n=f[t];(s=O()).id=i.id,s.v1.copy(r),s.v2.copy(n),s.z=(r.positionScreen.z+n.positionScreen.z)/2,s.renderOrder=i.renderOrder,s.material=i.material,_.elements.push(s)},pushTriangle:function(n,s,l){var h=f[n],p=f[s],m=f[l];if(!1!==u(h,p,m)&&(a.side===e.DoubleSide||!0===d(h,p,m))){(o=B()).id=i.id,o.v1.copy(h),o.v2.copy(p),o.v3.copy(m),o.z=(h.positionScreen.z+p.positionScreen.z+m.positionScreen.z)/3,o.renderOrder=i.renderOrder,o.normalModel.fromArray(t,3*n),o.normalModel.applyMatrix3(c).normalize();for(var v=0;v<3;v++){var g=o.vertexNormalsModel[v];g.fromArray(t,3*arguments[v]),g.applyMatrix3(c).normalize(),o.uvs[v].fromArray(r,2*arguments[v])}o.vertexNormalsLength=3,o.material=i.material,_.elements.push(o)}}}};function N(){if(i===m){var t=new e.RenderableVertex;return f.push(t),m++,i++,t}return f[i++]}function B(){if(a===g){var t=new e.RenderableFace;return v.push(t),g++,a++,t}return v[a++]}function O(){if(c===x){var t=new e.RenderableLine;return y.push(t),x++,c++,t}return y[c++]}function V(){if(u===w){var t=new e.RenderableSprite;return b.push(t),w++,u++,t}return b[u++]}function G(e,t){return e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id!==t.id?e.id-t.id:0}function z(e,t){var r=0,n=1,i=e.z+e.w,o=t.z+t.w,a=-e.z+e.w,s=-t.z+t.w;return i>=0&&o>=0&&a>=0&&s>=0||!(i<0&&o<0||a<0&&s<0)&&(i<0?r=Math.max(r,i/(i-o)):o<0&&(n=Math.min(n,i/(i-o))),a<0?r=Math.max(r,a/(a-s)):s<0&&(n=Math.min(n,a/(a-s))),!(n<r)&&(e.lerp(t,r),t.lerp(e,1-n),!0))}this.projectScene=function(n,m,v,g){a=0,c=0,u=0,_.elements.length=0,!0===n.autoUpdate&&n.updateMatrixWorld(),null===m.parent&&m.updateMatrixWorld(),A.copy(m.matrixWorldInverse.getInverse(m.matrixWorld)),L.multiplyMatrices(m.projectionMatrix,A),D.setFromMatrix(L),r=0,_.objects.length=0,_.lights.length=0,n.traverseVisible(function(n){if(n instanceof e.Light)_.lights.push(n);else if(n instanceof e.Mesh||n instanceof e.Line||n instanceof e.Sprite){if(!1===n.material.visible)return;!1!==n.frustumCulled&&!0!==D.intersectsObject(n)||((t=function(){if(r===p){var t=new e.RenderableObject;return d.push(t),p++,r++,t}return d[r++]}()).id=n.id,t.object=n,M.setFromMatrixPosition(n.matrixWorld),M.applyProjection(L),t.z=M.z,t.renderOrder=n.renderOrder,_.objects.push(t))}}),!0===v&&_.objects.sort(G);for(var y=0,x=_.objects.length;y<x;y++){var b=_.objects[y].object,w=b.geometry;if(F.setObject(b),h=b.matrixWorld,i=0,b instanceof e.Mesh){if(w instanceof e.BufferGeometry){var T=w.attributes,E=w.groups;if(void 0===T.position)continue;for(var C=0,k=(_e=T.position.array).length;C<k;C+=3)F.pushVertex(_e[C],_e[C+1],_e[C+2]);if(void 0!==T.normal){var j=T.normal.array;for(C=0,k=j.length;C<k;C+=3)F.pushNormal(j[C],j[C+1],j[C+2])}if(void 0!==T.uv){var H=T.uv.array;for(C=0,k=H.length;C<k;C+=2)F.pushUv(H[C],H[C+1])}if(null!==w.index){var W=w.index.array;if(E.length>0)for(y=0;y<E.length;y++){var X=E[y];for(C=X.start,k=X.start+X.count;C<k;C+=3)F.pushTriangle(W[C],W[C+1],W[C+2])}else for(C=0,k=W.length;C<k;C+=3)F.pushTriangle(W[C],W[C+1],W[C+2])}else for(C=0,k=_e.length/3;C<k;C+=3)F.pushTriangle(C,C+1,C+2)}else if(w instanceof e.Geometry){var q=w.vertices,Y=w.faces,Z=w.faceVertexUvs[0];P.getNormalMatrix(h);for(var K=b.material,Q=K instanceof e.MultiMaterial,J=!0===Q?b.material:null,$=0,ee=q.length;$<ee;$++){var te=q[$];if(M.copy(te),!0===K.morphTargets)for(var re=w.morphTargets,ne=b.morphTargetInfluences,ie=0,oe=re.length;ie<oe;ie++){var ae=ne[ie];if(0!==ae){var se=re[ie].vertices[$];M.x+=(se.x-te.x)*ae,M.y+=(se.y-te.y)*ae,M.z+=(se.z-te.z)*ae}}F.pushVertex(M.x,M.y,M.z)}for(var ce=0,le=Y.length;ce<le;ce++){var ue=Y[ce];if(void 0!==(K=!0===Q?J.materials[ue.materialIndex]:b.material)){var he=K.side,de=f[ue.a],pe=f[ue.b],fe=f[ue.c];if(!1!==F.checkTriangleVisibility(de,pe,fe)){var me=F.checkBackfaceCulling(de,pe,fe);if(he!==e.DoubleSide){if(he===e.FrontSide&&!1===me)continue;if(he===e.BackSide&&!0===me)continue}(o=B()).id=b.id,o.v1.copy(de),o.v2.copy(pe),o.v3.copy(fe),o.normalModel.copy(ue.normal),!1!==me||he!==e.BackSide&&he!==e.DoubleSide||o.normalModel.negate(),o.normalModel.applyMatrix3(P).normalize();for(var ve=ue.vertexNormals,ge=0,ye=Math.min(ve.length,3);ge<ye;ge++){var xe=o.vertexNormalsModel[ge];xe.copy(ve[ge]),!1!==me||he!==e.BackSide&&he!==e.DoubleSide||xe.negate(),xe.applyMatrix3(P).normalize()}o.vertexNormalsLength=ve.length;var be=Z[ce];if(void 0!==be)for(var we=0;we<3;we++)o.uvs[we].copy(be[we]);o.color=ue.color,o.material=K,o.z=(de.positionScreen.z+pe.positionScreen.z+fe.positionScreen.z)/3,o.renderOrder=b.renderOrder,_.elements.push(o)}}}}}else if(b instanceof e.Line){if(w instanceof e.BufferGeometry){if(void 0!==(T=w.attributes).position){var _e;for(C=0,k=(_e=T.position.array).length;C<k;C+=3)F.pushVertex(_e[C],_e[C+1],_e[C+2]);if(null!==w.index)for(C=0,k=(W=w.index.array).length;C<k;C+=2)F.pushLine(W[C],W[C+1]);else{var Me=b instanceof e.LineSegments?2:1;for(C=0,k=_e.length/3-1;C<k;C+=Me)F.pushLine(C,C+1)}}}else if(w instanceof e.Geometry){if(R.multiplyMatrices(L,h),0===(q=b.geometry.vertices).length)continue;(de=N()).positionScreen.copy(q[0]).applyMatrix4(R);for(Me=b instanceof e.LineSegments?2:1,$=1,ee=q.length;$<ee;$++)(de=N()).positionScreen.copy(q[$]).applyMatrix4(R),($+1)%Me>0||(pe=f[i-2],U.copy(de.positionScreen),I.copy(pe.positionScreen),!0===z(U,I)&&(U.multiplyScalar(1/U.w),I.multiplyScalar(1/I.w),(s=O()).id=b.id,s.v1.positionScreen.copy(U),s.v2.positionScreen.copy(I),s.z=Math.max(U.z,I.z),s.renderOrder=b.renderOrder,s.material=b.material,b.material.vertexColors===e.VertexColors&&(s.vertexColors[0].copy(b.geometry.colors[$]),s.vertexColors[1].copy(b.geometry.colors[$-1])),_.elements.push(s)))}}else if(b instanceof e.Sprite){S.set(h.elements[12],h.elements[13],h.elements[14],1),S.applyMatrix4(L);var Se=1/S.w;S.z*=Se,S.z>=-1&&S.z<=1&&((l=V()).id=b.id,l.x=S.x*Se,l.y=S.y*Se,l.z=S.z,l.renderOrder=b.renderOrder,l.object=b,l.rotation=b.rotation,l.scale.x=b.scale.x*Math.abs(l.x-(S.x+m.projectionMatrix.elements[0])/(S.w+m.projectionMatrix.elements[12])),l.scale.y=b.scale.y*Math.abs(l.y-(S.y+m.projectionMatrix.elements[5])/(S.w+m.projectionMatrix.elements[13])),l.material=b.material,_.elements.push(l))}}return!0===g&&_.elements.sort(G),_}}}},function(e,t){e.exports=function(e){e.RGBShiftShader={uniforms:{tDiffuse:{type:\"t\",value:null},amount:{type:\"f\",value:.005},angle:{type:\"f\",value:0}},vertexShader:[\"varying vec2 vUv;\",\"void main() {\",\"vUv = uv;\",\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\"}\"].join(\"\\n\"),fragmentShader:[\"uniform sampler2D tDiffuse;\",\"uniform float amount;\",\"uniform float angle;\",\"varying vec2 vUv;\",\"void main() {\",\"vec2 offset = amount * vec2( cos(angle), sin(angle));\",\"vec4 cr = texture2D(tDiffuse, vUv + offset);\",\"vec4 cga = texture2D(tDiffuse, vUv);\",\"vec4 cb = texture2D(tDiffuse, vUv - offset);\",\"gl_FragColor = vec4(cr.r, cga.g, cb.b, cga.a);\",\"}\"].join(\"\\n\")}}},function(e,t){e.exports=function(e){e.RenderPass=function(t,r,n,i,o){this.scene=t,this.camera=r,this.overrideMaterial=n,this.clearColor=i,this.clearAlpha=void 0!==o?o:1,this.oldClearColor=new e.Color,this.oldClearAlpha=1,this.enabled=!0,this.clear=!0,this.needsSwap=!1},e.RenderPass.prototype={render:function(e,t,r,n){this.scene.overrideMaterial=this.overrideMaterial,this.clearColor&&(this.oldClearColor.copy(e.getClearColor()),this.oldClearAlpha=e.getClearAlpha(),e.setClearColor(this.clearColor,this.clearAlpha)),e.render(this.scene,this.camera,r,this.clear),this.clearColor&&e.setClearColor(this.oldClearColor,this.oldClearAlpha),this.scene.overrideMaterial=null}}}},function(e,t){e.exports=function(e){e.SSAOShader={uniforms:{tDiffuse:{type:\"t\",value:null},tDepth:{type:\"t\",value:null},size:{type:\"v2\",value:new e.Vector2(512,512)},cameraNear:{type:\"f\",value:1},cameraFar:{type:\"f\",value:100},onlyAO:{type:\"i\",value:0},aoClamp:{type:\"f\",value:.5},lumInfluence:{type:\"f\",value:.5}},vertexShader:[\"varying vec2 vUv;\",\"void main() {\",\"vUv = uv;\",\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\"}\"].join(\"\\n\"),fragmentShader:[\"uniform float cameraNear;\",\"uniform float cameraFar;\",\"uniform bool onlyAO;\",\"uniform vec2 size;\",\"uniform float aoClamp;\",\"uniform float lumInfluence;\",\"uniform sampler2D tDiffuse;\",\"uniform sampler2D tDepth;\",\"varying vec2 vUv;\",\"#define DL 2.399963229728653\",\"#define EULER 2.718281828459045\",\"const int samples = 8;\",\"const float radius = 5.0;\",\"const bool useNoise = false;\",\"const float noiseAmount = 0.0003;\",\"const float diffArea = 0.4;\",\"const float gDisplace = 0.4;\",\"float unpackDepth( const in vec4 rgba_depth ) {\",\"const vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\",\"float depth = dot( rgba_depth, bit_shift );\",\"return depth;\",\"}\",\"vec2 rand( const vec2 coord ) {\",\"vec2 noise;\",\"if ( useNoise ) {\",\"float nx = dot ( coord, vec2( 12.9898, 78.233 ) );\",\"float ny = dot ( coord, vec2( 12.9898, 78.233 ) * 2.0 );\",\"noise = clamp( fract ( 43758.5453 * sin( vec2( nx, ny ) ) ), 0.0, 1.0 );\",\"} else {\",\"float ff = fract( 1.0 - coord.s * ( size.x / 2.0 ) );\",\"float gg = fract( coord.t * ( size.y / 2.0 ) );\",\"noise = vec2( 0.25, 0.75 ) * vec2( ff ) + vec2( 0.75, 0.25 ) * gg;\",\"}\",\"return ( noise * 2.0  - 1.0 ) * noiseAmount;\",\"}\",\"float readDepth( const in vec2 coord ) {\",\"float cameraFarPlusNear = cameraFar + cameraNear;\",\"float cameraFarMinusNear = cameraFar - cameraNear;\",\"float cameraCoef = 2.0 * cameraNear;\",\"return cameraCoef / ( cameraFarPlusNear - unpackDepth( texture2D( tDepth, coord ) ) * cameraFarMinusNear );\",\"}\",\"float compareDepths( const in float depth1, const in float depth2, inout int far ) {\",\"float garea = 2.0;\",\"float diff = ( depth1 - depth2 ) * 100.0;\",\"if ( diff < gDisplace ) {\",\"garea = diffArea;\",\"} else {\",\"far = 1;\",\"}\",\"float dd = diff - gDisplace;\",\"float gauss = pow( EULER, -2.0 * dd * dd / ( garea * garea ) );\",\"return gauss;\",\"}\",\"float calcAO( float depth, float dw, float dh ) {\",\"float dd = radius - depth * radius;\",\"vec2 vv = vec2( dw, dh );\",\"vec2 coord1 = vUv + dd * vv;\",\"vec2 coord2 = vUv - dd * vv;\",\"float temp1 = 0.0;\",\"float temp2 = 0.0;\",\"int far = 0;\",\"temp1 = compareDepths( depth, readDepth( coord1 ), far );\",\"if ( far > 0 ) {\",\"temp2 = compareDepths( readDepth( coord2 ), depth, far );\",\"temp1 += ( 1.0 - temp1 ) * temp2;\",\"}\",\"return temp1;\",\"}\",\"void main() {\",\"vec2 noise = rand( vUv );\",\"float depth = readDepth( vUv );\",\"float tt = clamp( depth, aoClamp, 1.0 );\",\"float w = ( 1.0 / size.x )  / tt + ( noise.x * ( 1.0 - noise.x ) );\",\"float h = ( 1.0 / size.y ) / tt + ( noise.y * ( 1.0 - noise.y ) );\",\"float ao = 0.0;\",\"float dz = 1.0 / float( samples );\",\"float z = 1.0 - dz / 2.0;\",\"float l = 0.0;\",\"for ( int i = 0; i <= samples; i ++ ) {\",\"float r = sqrt( 1.0 - z );\",\"float pw = cos( l ) * r;\",\"float ph = sin( l ) * r;\",\"ao += calcAO( depth, pw * w, ph * h );\",\"z = z - dz;\",\"l = l + DL;\",\"}\",\"ao /= float( samples );\",\"ao = 1.0 - ao;\",\"vec3 color = texture2D( tDiffuse, vUv ).rgb;\",\"vec3 lumcoeff = vec3( 0.299, 0.587, 0.114 );\",\"float lum = dot( color.rgb, lumcoeff );\",\"vec3 luminance = vec3( lum );\",\"vec3 final = vec3( color * mix( vec3( ao ), vec3( 1.0 ), luminance * lumInfluence ) );\",\"if ( onlyAO ) {\",\"final = vec3( mix( vec3( ao ), vec3( 1.0 ), luminance * lumInfluence ) );\",\"}\",\"gl_FragColor = vec4( final, 1.0 );\",\"}\"].join(\"\\n\")}}},function(e,t){e.exports=function(e){e.SVGLoader=function(t){this.manager=void 0!==t?t:e.DefaultLoadingManager},e.SVGLoader.prototype={constructor:e.SVGLoader,load:function(t,r,n,i){var o=new DOMParser;new e.XHRLoader(this.manager).load(t,function(e){var t=o.parseFromString(e,\"image/svg+xml\");r(t.documentElement)},n,i)}}}},function(e,t){e.exports=function(e){e.SavePass=function(t){void 0===e.CopyShader&&console.error(\"THREE.SavePass relies on THREE.CopyShader\");var r=e.CopyShader;this.textureID=\"tDiffuse\",this.uniforms=e.UniformsUtils.clone(r.uniforms),this.material=new e.ShaderMaterial({uniforms:this.uniforms,vertexShader:r.vertexShader,fragmentShader:r.fragmentShader}),this.renderTarget=t,void 0===this.renderTarget&&(this.renderTargetParameters={minFilter:e.LinearFilter,magFilter:e.LinearFilter,format:e.RGBFormat,stencilBuffer:!1},this.renderTarget=new e.WebGLRenderTarget(window.innerWidth,window.innerHeight,this.renderTargetParameters)),this.enabled=!0,this.needsSwap=!1,this.clear=!1,this.camera=new e.OrthographicCamera(-1,1,1,-1,0,1),this.scene=new e.Scene,this.quad=new e.Mesh(new e.PlaneBufferGeometry(2,2),null),this.scene.add(this.quad)},e.SavePass.prototype={render:function(e,t,r,n){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=r),this.quad.material=this.material,e.render(this.scene,this.camera,this.renderTarget,this.clear)}}}},function(e,t){e.exports=function(e){e.SepiaShader={uniforms:{tDiffuse:{type:\"t\",value:null},amount:{type:\"f\",value:1}},vertexShader:[\"varying vec2 vUv;\",\"void main() {\",\"vUv = uv;\",\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\"}\"].join(\"\\n\"),fragmentShader:[\"uniform float amount;\",\"uniform sampler2D tDiffuse;\",\"varying vec2 vUv;\",\"void main() {\",\"vec4 color = texture2D( tDiffuse, vUv );\",\"vec3 c = color.rgb;\",\"color.r = dot( c, vec3( 1.0 - 0.607 * amount, 0.769 * amount, 0.189 * amount ) );\",\"color.g = dot( c, vec3( 0.349 * amount, 1.0 - 0.314 * amount, 0.168 * amount ) );\",\"color.b = dot( c, vec3( 0.272 * amount, 0.534 * amount, 1.0 - 0.869 * amount ) );\",\"gl_FragColor = vec4( min( vec3( 1.0 ), color.rgb ), color.a );\",\"}\"].join(\"\\n\")}}},function(e,t){e.exports=function(e){e.ShaderPass=function(t,r){this.textureID=void 0!==r?r:\"tDiffuse\",this.uniforms=e.UniformsUtils.clone(t.uniforms),this.material=new e.ShaderMaterial({defines:t.defines||{},uniforms:this.uniforms,vertexShader:t.vertexShader,fragmentShader:t.fragmentShader}),this.renderToScreen=!1,this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.camera=new e.OrthographicCamera(-1,1,1,-1,0,1),this.scene=new e.Scene,this.quad=new e.Mesh(new e.PlaneBufferGeometry(2,2),null),this.scene.add(this.quad)},e.ShaderPass.prototype={render:function(e,t,r,n){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=r),this.quad.material=this.material,this.renderToScreen?e.render(this.scene,this.camera):e.render(this.scene,this.camera,t,this.clear)}}}},function(e,t){e.exports=function(e){e.TechnicolorShader={uniforms:{tDiffuse:{type:\"t\",value:null}},vertexShader:[\"varying vec2 vUv;\",\"void main() {\",\"vUv = uv;\",\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\"}\"].join(\"\\n\"),fragmentShader:[\"uniform sampler2D tDiffuse;\",\"varying vec2 vUv;\",\"void main() {\",\"vec4 tex = texture2D( tDiffuse, vec2( vUv.x, vUv.y ) );\",\"vec4 newTex = vec4(tex.r, (tex.g + tex.b) * .5, (tex.g + tex.b) * .5, 1.0);\",\"gl_FragColor = newTex;\",\"}\"].join(\"\\n\")}}},function(e,t){e.exports=function(e){e.TexturePass=function(t,r){void 0===e.CopyShader&&console.error(\"THREE.TexturePass relies on THREE.CopyShader\");var n=e.CopyShader;this.uniforms=e.UniformsUtils.clone(n.uniforms),this.uniforms.opacity.value=void 0!==r?r:1,this.uniforms.tDiffuse.value=t,this.material=new e.ShaderMaterial({uniforms:this.uniforms,vertexShader:n.vertexShader,fragmentShader:n.fragmentShader}),this.enabled=!0,this.needsSwap=!1,this.camera=new e.OrthographicCamera(-1,1,1,-1,0,1),this.scene=new e.Scene,this.quad=new e.Mesh(new e.PlaneBufferGeometry(2,2),null),this.scene.add(this.quad)},e.TexturePass.prototype={render:function(e,t,r,n){this.quad.material=this.material,e.render(this.scene,this.camera,r)}}}},function(e,t){e.exports=function(e){e.ToneMapShader={uniforms:{tDiffuse:{type:\"t\",value:null},averageLuminance:{type:\"f\",value:1},luminanceMap:{type:\"t\",value:null},maxLuminance:{type:\"f\",value:16},middleGrey:{type:\"f\",value:.6}},vertexShader:[\"varying vec2 vUv;\",\"void main() {\",\"vUv = uv;\",\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\"}\"].join(\"\\n\"),fragmentShader:[\"uniform sampler2D tDiffuse;\",\"varying vec2 vUv;\",\"uniform float middleGrey;\",\"uniform float maxLuminance;\",\"#ifdef ADAPTED_LUMINANCE\",\"uniform sampler2D luminanceMap;\",\"#else\",\"uniform float averageLuminance;\",\"#endif\",\"const vec3 LUM_CONVERT = vec3(0.299, 0.587, 0.114);\",\"vec3 ToneMap( vec3 vColor ) {\",\"#ifdef ADAPTED_LUMINANCE\",\"float fLumAvg = texture2D(luminanceMap, vec2(0.5, 0.5)).r;\",\"#else\",\"float fLumAvg = averageLuminance;\",\"#endif\",\"float fLumPixel = dot(vColor, LUM_CONVERT);\",\"float fLumScaled = (fLumPixel * middleGrey) / fLumAvg;\",\"float fLumCompressed = (fLumScaled * (1.0 + (fLumScaled / (maxLuminance * maxLuminance)))) / (1.0 + fLumScaled);\",\"return fLumCompressed * vColor;\",\"}\",\"void main() {\",\"vec4 texel = texture2D( tDiffuse, vUv );\",\"gl_FragColor = vec4( ToneMap( texel.xyz ), texel.w );\",\"}\"].join(\"\\n\")}}},function(e,t){e.exports=function(e){e.TriangleBlurShader={uniforms:{texture:{type:\"t\",value:null},delta:{type:\"v2\",value:new e.Vector2(1,1)}},vertexShader:[\"varying vec2 vUv;\",\"void main() {\",\"vUv = uv;\",\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\"}\"].join(\"\\n\"),fragmentShader:[\"#define ITERATIONS 10.0\",\"uniform sampler2D texture;\",\"uniform vec2 delta;\",\"varying vec2 vUv;\",\"float random( vec3 scale, float seed ) {\",\"return fract( sin( dot( gl_FragCoord.xyz + seed, scale ) ) * 43758.5453 + seed );\",\"}\",\"void main() {\",\"vec4 color = vec4( 0.0 );\",\"float total = 0.0;\",\"float offset = random( vec3( 12.9898, 78.233, 151.7182 ), 0.0 );\",\"for ( float t = -ITERATIONS; t <= ITERATIONS; t ++ ) {\",\"float percent = ( t + offset - 0.5 ) / ITERATIONS;\",\"float weight = 1.0 - abs( percent );\",\"color += texture2D( texture, vUv + delta * percent ) * weight;\",\"total += weight;\",\"}\",\"gl_FragColor = color / total;\",\"}\"].join(\"\\n\")}}},function(e,t){e.exports=function(e){e.UnpackDepthRGBAShader={uniforms:{tDiffuse:{type:\"t\",value:null},opacity:{type:\"f\",value:1}},vertexShader:[\"varying vec2 vUv;\",\"void main() {\",\"vUv = uv;\",\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\"}\"].join(\"\\n\"),fragmentShader:[\"uniform float opacity;\",\"uniform sampler2D tDiffuse;\",\"varying vec2 vUv;\",\"float unpackDepth( const in vec4 rgba_depth ) {\",\"const vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\",\"float depth = dot( rgba_depth, bit_shift );\",\"return depth;\",\"}\",\"void main() {\",\"float depth = 1.0 - unpackDepth( texture2D( tDiffuse, vUv ) );\",\"gl_FragColor = opacity * vec4( vec3( depth ), 1.0 );\",\"}\"].join(\"\\n\")}}},function(e,t){e.exports=function(e){e.VerticalBlurShader={uniforms:{tDiffuse:{type:\"t\",value:null},v:{type:\"f\",value:1/512}},vertexShader:[\"varying vec2 vUv;\",\"void main() {\",\"vUv = uv;\",\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\"}\"].join(\"\\n\"),fragmentShader:[\"uniform sampler2D tDiffuse;\",\"uniform float v;\",\"varying vec2 vUv;\",\"void main() {\",\"vec4 sum = vec4( 0.0 );\",\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * v ) ) * 0.051;\",\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * v ) ) * 0.0918;\",\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * v ) ) * 0.12245;\",\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * v ) ) * 0.1531;\",\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;\",\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * v ) ) * 0.1531;\",\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * v ) ) * 0.12245;\",\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * v ) ) * 0.0918;\",\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * v ) ) * 0.051;\",\"gl_FragColor = sum;\",\"}\"].join(\"\\n\")}}},function(e,t){e.exports=function(e){e.VerticalTiltShiftShader={uniforms:{tDiffuse:{type:\"t\",value:null},v:{type:\"f\",value:1/512},r:{type:\"f\",value:.35}},vertexShader:[\"varying vec2 vUv;\",\"void main() {\",\"vUv = uv;\",\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\"}\"].join(\"\\n\"),fragmentShader:[\"uniform sampler2D tDiffuse;\",\"uniform float v;\",\"uniform float r;\",\"varying vec2 vUv;\",\"void main() {\",\"vec4 sum = vec4( 0.0 );\",\"float vv = v * abs( r - vUv.y );\",\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * vv ) ) * 0.051;\",\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * vv ) ) * 0.0918;\",\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * vv ) ) * 0.12245;\",\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * vv ) ) * 0.1531;\",\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;\",\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * vv ) ) * 0.1531;\",\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * vv ) ) * 0.12245;\",\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * vv ) ) * 0.0918;\",\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * vv ) ) * 0.051;\",\"gl_FragColor = sum;\",\"}\"].join(\"\\n\")}}},function(e,t){e.exports=function(e){e.VignetteShader={uniforms:{tDiffuse:{type:\"t\",value:null},offset:{type:\"f\",value:1},darkness:{type:\"f\",value:1}},vertexShader:[\"varying vec2 vUv;\",\"void main() {\",\"vUv = uv;\",\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\"}\"].join(\"\\n\"),fragmentShader:[\"uniform float offset;\",\"uniform float darkness;\",\"uniform sampler2D tDiffuse;\",\"varying vec2 vUv;\",\"void main() {\",\"vec4 texel = texture2D( tDiffuse, vUv );\",\"vec2 uv = ( vUv - vec2( 0.5 ) ) * vec2( offset );\",\"gl_FragColor = vec4( mix( texel.rgb, vec3( 1.0 - darkness ), dot( uv, uv ) ), texel.a );\",\"}\"].join(\"\\n\")}}}]);","extractedComments":[]}